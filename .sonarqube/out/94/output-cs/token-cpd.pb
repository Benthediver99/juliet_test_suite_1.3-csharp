ÍB
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_01.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_01 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## "
)##" #
;### $
SqlConnection$$ 
dBConnection$$ "
=$$# $
IO$$% '
.$$' (
GetDBConnection$$( 7
($$7 8
)$$8 9
;$$9 :

SqlCommand%% 
preparedStatement%% $
=%%% &
null%%' +
;%%+ ,
int&& 
id&& 
=&& 
$num&& 
;&& 
try'' 
{(( 	
id)) 
=)) 
int)) 
.)) 
Parse)) 
()) 
data)) 
)))  
;))  !
}** 	
catch++ 
(++ 
FormatException++ 
nfx++ "
)++" #
{,, 	
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- 
.-- 
LogLevel-- '
.--' (
Warn--( ,
,--, -
nfx--. 1
,--1 2
$str--3 W
)--W X
;--X Y
id.. 
=.. 
-.. 
$num.. 
;.. 
}// 	
try00 
{11 	
dBConnection22 
.22 
Open22 
(22 
)22 
;22  
using33 
(33 
preparedStatement33 $
=33% &
new33' *

SqlCommand33+ 5
(335 6
null336 :
,33: ;
dBConnection33< H
)33H I
)33I J
{44 
preparedStatement55 !
.55! "
CommandText55" -
=55. /
$str550 V
;55V W
SqlParameter66 
idParam66 $
=66% &
new66' *
SqlParameter66+ 7
(667 8
$str668 =
,66= >
	SqlDbType66? H
.66H I
Int66I L
,66L M
$num66N O
)66O P
;66P Q
idParam77 
.77 
Value77 
=77 
id77  "
;77" #
preparedStatement88 !
.88! "
ExecuteNonQuery88" 1
(881 2
)882 3
;883 4
}99 
IO;; 
.;; 
WriteString;; 
(;; 
$str;; 7
+;;8 9
data;;: >
+;;? @
$str;;A E
);;E F
;;;F G
}<< 	
catch== 
(== 
SqlException== 
	exceptSql== %
)==% &
{>> 	
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? 
.?? 
LogLevel?? '
.??' (
Warn??( ,
,??, -
	exceptSql??. 7
,??7 8
$str??9 P
)??P Q
;??Q R
}@@ 	
finallyAA 
{BB 	
tryCC 
{DD 
ifEE 
(EE 
dBConnectionEE  
!=EE! #
nullEE$ (
)EE( )
{FF 
dBConnectionGG  
.GG  !
CloseGG! &
(GG& '
)GG' (
;GG( )
}HH 
}II 
catchJJ 
(JJ 
SqlExceptionJJ 
	exceptSqlJJ  )
)JJ) *
{KK 
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL "
.LL" #
LogLevelLL# +
.LL+ ,
WarnLL, 0
,LL0 1
	exceptSqlLL2 ;
,LL; <
$strLL= Y
)LLY Z
;LLZ [
}MM 
}NN 	
}OO 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
HttpRequestRR )
reqRR* -
,RR- .
HttpResponseRR/ ;
respRR< @
)RR@ A
{SS 
GoodG2BTT 
(TT 
reqTT 
,TT 
respTT 
)TT 
;TT 
}UU 
privateXX 
voidXX 
GoodG2BXX 
(XX 
HttpRequestXX $
reqXX% (
,XX( )
HttpResponseXX* 6
respXX7 ;
)XX; <
{YY 
stringZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$str\\ 
;\\ 
SqlConnection]] 
dBConnection]] "
=]]# $
IO]]% '
.]]' (
GetDBConnection]]( 7
(]]7 8
)]]8 9
;]]9 :

SqlCommand^^ 
preparedStatement^^ $
=^^% &
null^^' +
;^^+ ,
int__ 
id__ 
=__ 
$num__ 
;__ 
try`` 
{aa 	
idbb 
=bb 
intbb 
.bb 
Parsebb 
(bb 
databb 
)bb  
;bb  !
}cc 	
catchdd 
(dd 
FormatExceptiondd 
nfxdd "
)dd" #
{ee 	
IOff 
.ff 
Loggerff 
.ff 
Logff 
(ff 
NLogff 
.ff 
LogLevelff '
.ff' (
Warnff( ,
,ff, -
nfxff. 1
,ff1 2
$strff3 W
)ffW X
;ffX Y
idgg 
=gg 
-gg 
$numgg 
;gg 
}hh 	
tryii 
{jj 	
dBConnectionkk 
.kk 
Openkk 
(kk 
)kk 
;kk  
usingll 
(ll 
preparedStatementll $
=ll% &
newll' *

SqlCommandll+ 5
(ll5 6
nullll6 :
,ll: ;
dBConnectionll< H
)llH I
)llI J
{mm 
preparedStatementnn !
.nn! "
CommandTextnn" -
=nn. /
$strnn0 V
;nnV W
SqlParameteroo 
idParamoo $
=oo% &
newoo' *
SqlParameteroo+ 7
(oo7 8
$stroo8 =
,oo= >
	SqlDbTypeoo? H
.ooH I
IntooI L
,ooL M
$numooN O
)ooO P
;ooP Q
idParampp 
.pp 
Valuepp 
=pp 
idpp  "
;pp" #
preparedStatementqq !
.qq! "
ExecuteNonQueryqq" 1
(qq1 2
)qq2 3
;qq3 4
}rr 
IOtt 
.tt 
WriteStringtt 
(tt 
$strtt 7
+tt8 9
datatt: >
+tt? @
$strttA E
)ttE F
;ttF G
}uu 	
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv %
)vv% &
{ww 	
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx 
.xx 
LogLevelxx '
.xx' (
Warnxx( ,
,xx, -
	exceptSqlxx. 7
,xx7 8
$strxx9 P
)xxP Q
;xxQ R
}yy 	
finallyzz 
{{{ 	
try|| 
{}} 
if~~ 
(~~ 
dBConnection~~  
!=~~! #
null~~$ (
)~~( )
{ 
dBConnection
ÄÄ  
.
ÄÄ  !
Close
ÄÄ! &
(
ÄÄ& '
)
ÄÄ' (
;
ÄÄ( )
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ  )
)
ÉÉ) *
{
ÑÑ 
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ "
.
ÖÖ" #
LogLevel
ÖÖ# +
.
ÖÖ+ ,
Warn
ÖÖ, 0
,
ÖÖ0 1
	exceptSql
ÖÖ2 ;
,
ÖÖ; <
$str
ÖÖ= Y
)
ÖÖY Z
;
ÖÖZ [
}
ÜÜ 
}
áá 	
}
àà 
}ää 
}ãã Œj
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_02.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_02 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
true"" 
)"" 
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
SqlConnection-- 
dBConnection-- "
=--# $
IO--% '
.--' (
GetDBConnection--( 7
(--7 8
)--8 9
;--9 :

SqlCommand.. 
preparedStatement.. $
=..% &
null..' +
;..+ ,
int// 
id// 
=// 
$num// 
;// 
try00 
{11 	
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 
)22  
;22  !
}33 	
catch44 
(44 
FormatException44 
nfx44 "
)44" #
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
nfx66. 1
,661 2
$str663 W
)66W X
;66X Y
id77 
=77 
-77 
$num77 
;77 
}88 	
try99 
{:: 	
dBConnection;; 
.;; 
Open;; 
(;; 
);; 
;;;  
using<< 
(<< 
preparedStatement<< $
=<<% &
new<<' *

SqlCommand<<+ 5
(<<5 6
null<<6 :
,<<: ;
dBConnection<<< H
)<<H I
)<<I J
{== 
preparedStatement>> !
.>>! "
CommandText>>" -
=>>. /
$str>>0 V
;>>V W
SqlParameter?? 
idParam?? $
=??% &
new??' *
SqlParameter??+ 7
(??7 8
$str??8 =
,??= >
	SqlDbType??? H
.??H I
Int??I L
,??L M
$num??N O
)??O P
;??P Q
idParam@@ 
.@@ 
Value@@ 
=@@ 
id@@  "
;@@" #
preparedStatementAA !
.AA! "
ExecuteNonQueryAA" 1
(AA1 2
)AA2 3
;AA3 4
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD 7
+DD8 9
dataDD: >
+DD? @
$strDDA E
)DDE F
;DDF G
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
	exceptSqlHH. 7
,HH7 8
$strHH9 P
)HHP Q
;HHQ R
}II 	
finallyJJ 
{KK 	
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
dBConnectionPP  
.PP  !
ClosePP! &
(PP& '
)PP' (
;PP( )
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS 
	exceptSqlSS  )
)SS) *
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
	exceptSqlUU2 ;
,UU; <
$strUU= Y
)UUY Z
;UUZ [
}VV 
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
false__ 
)__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
SqlConnectionjj 
dBConnectionjj "
=jj# $
IOjj% '
.jj' (
GetDBConnectionjj( 7
(jj7 8
)jj8 9
;jj9 :

SqlCommandkk 
preparedStatementkk $
=kk% &
nullkk' +
;kk+ ,
intll 
idll 
=ll 
$numll 
;ll 
trymm 
{nn 	
idoo 
=oo 
intoo 
.oo 
Parseoo 
(oo 
dataoo 
)oo  
;oo  !
}pp 	
catchqq 
(qq 
FormatExceptionqq 
nfxqq "
)qq" #
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
nfxss. 1
,ss1 2
$strss3 W
)ssW X
;ssX Y
idtt 
=tt 
-tt 
$numtt 
;tt 
}uu 	
tryvv 
{ww 	
dBConnectionxx 
.xx 
Openxx 
(xx 
)xx 
;xx  
usingyy 
(yy 
preparedStatementyy $
=yy% &
newyy' *

SqlCommandyy+ 5
(yy5 6
nullyy6 :
,yy: ;
dBConnectionyy< H
)yyH I
)yyI J
{zz 
preparedStatement{{ !
.{{! "
CommandText{{" -
={{. /
$str{{0 V
;{{V W
SqlParameter|| 
idParam|| $
=||% &
new||' *
SqlParameter||+ 7
(||7 8
$str||8 =
,||= >
	SqlDbType||? H
.||H I
Int||I L
,||L M
$num||N O
)||O P
;||P Q
idParam}} 
.}} 
Value}} 
=}} 
id}}  "
;}}" #
preparedStatement~~ !
.~~! "
ExecuteNonQuery~~" 1
(~~1 2
)~~2 3
;~~3 4
} 
IO
ÅÅ 
.
ÅÅ 
WriteString
ÅÅ 
(
ÅÅ 
$str
ÅÅ 7
+
ÅÅ8 9
data
ÅÅ: >
+
ÅÅ? @
$str
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÇÇ 	
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ %
)
ÉÉ% &
{
ÑÑ 	
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ 
.
ÖÖ 
LogLevel
ÖÖ '
.
ÖÖ' (
Warn
ÖÖ( ,
,
ÖÖ, -
	exceptSql
ÖÖ. 7
,
ÖÖ7 8
$str
ÖÖ9 P
)
ÖÖP Q
;
ÖÖQ R
}
ÜÜ 	
finally
áá 
{
àà 	
try
ââ 
{
ää 
if
ãã 
(
ãã 
dBConnection
ãã  
!=
ãã! #
null
ãã$ (
)
ãã( )
{
åå 
dBConnection
çç  
.
çç  !
Close
çç! &
(
çç& '
)
çç' (
;
çç( )
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
	exceptSql
íí2 ;
,
íí; <
$str
íí= Y
)
ííY Z
;
ííZ [
}
ìì 
}
îî 	
}
ïï 
private
òò 
void
òò 
GoodG2B2
òò 
(
òò 
HttpRequest
òò %
req
òò& )
,
òò) *
HttpResponse
òò+ 7
resp
òò8 <
)
òò< =
{
ôô 
string
öö 
data
öö 
;
öö 
if
õõ 

(
õõ 
true
õõ 
)
õõ 
{
úú 	
data
ûû 
=
ûû 
$str
ûû 
;
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
SqlConnection
¶¶ 
dBConnection
¶¶ "
=
¶¶# $
IO
¶¶% '
.
¶¶' (
GetDBConnection
¶¶( 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :

SqlCommand
ßß 
preparedStatement
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
int
®® 
id
®® 
=
®® 
$num
®® 
;
®® 
try
©© 
{
™™ 	
id
´´ 
=
´´ 
int
´´ 
.
´´ 
Parse
´´ 
(
´´ 
data
´´ 
)
´´  
;
´´  !
}
¨¨ 	
catch
≠≠ 
(
≠≠ 
FormatException
≠≠ 
nfx
≠≠ "
)
≠≠" #
{
ÆÆ 	
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ 
.
ØØ 
LogLevel
ØØ '
.
ØØ' (
Warn
ØØ( ,
,
ØØ, -
nfx
ØØ. 1
,
ØØ1 2
$str
ØØ3 W
)
ØØW X
;
ØØX Y
id
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
±± 	
try
≤≤ 
{
≥≥ 	
dBConnection
¥¥ 
.
¥¥ 
Open
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
using
µµ 
(
µµ 
preparedStatement
µµ $
=
µµ% &
new
µµ' *

SqlCommand
µµ+ 5
(
µµ5 6
null
µµ6 :
,
µµ: ;
dBConnection
µµ< H
)
µµH I
)
µµI J
{
∂∂ 
preparedStatement
∑∑ !
.
∑∑! "
CommandText
∑∑" -
=
∑∑. /
$str
∑∑0 V
;
∑∑V W
SqlParameter
∏∏ 
idParam
∏∏ $
=
∏∏% &
new
∏∏' *
SqlParameter
∏∏+ 7
(
∏∏7 8
$str
∏∏8 =
,
∏∏= >
	SqlDbType
∏∏? H
.
∏∏H I
Int
∏∏I L
,
∏∏L M
$num
∏∏N O
)
∏∏O P
;
∏∏P Q
idParam
ππ 
.
ππ 
Value
ππ 
=
ππ 
id
ππ  "
;
ππ" #
preparedStatement
∫∫ !
.
∫∫! "
ExecuteNonQuery
∫∫" 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
IO
ΩΩ 
.
ΩΩ 
WriteString
ΩΩ 
(
ΩΩ 
$str
ΩΩ 7
+
ΩΩ8 9
data
ΩΩ: >
+
ΩΩ? @
$str
ΩΩA E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø %
)
øø% &
{
¿¿ 	
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ 
.
¡¡ 
LogLevel
¡¡ '
.
¡¡' (
Warn
¡¡( ,
,
¡¡, -
	exceptSql
¡¡. 7
,
¡¡7 8
$str
¡¡9 P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 	
finally
√√ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
dBConnection
««  
!=
««! #
null
««$ (
)
««( )
{
»» 
dBConnection
……  
.
……  !
Close
……! &
(
……& '
)
……' (
;
……( )
}
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
SqlException
ÃÃ 
	exceptSql
ÃÃ  )
)
ÃÃ) *
{
ÕÕ 
IO
ŒŒ 
.
ŒŒ 
Logger
ŒŒ 
.
ŒŒ 
Log
ŒŒ 
(
ŒŒ 
NLog
ŒŒ "
.
ŒŒ" #
LogLevel
ŒŒ# +
.
ŒŒ+ ,
Warn
ŒŒ, 0
,
ŒŒ0 1
	exceptSql
ŒŒ2 ;
,
ŒŒ; <
$str
ŒŒ= Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
}
–– 	
}
—— 
public
”” 

override
”” 
void
”” 
Good
”” 
(
”” 
HttpRequest
”” )
req
””* -
,
””- .
HttpResponse
””/ ;
resp
””< @
)
””@ A
{
‘‘ 
GoodG2B1
’’ 
(
’’ 
req
’’ 
,
’’ 
resp
’’ 
)
’’ 
;
’’ 
GoodG2B2
÷÷ 
(
÷÷ 
req
÷÷ 
,
÷÷ 
resp
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ŸŸ 
}⁄⁄ ∑k
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_03.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_03 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
$num"" 
=="" 
$num"" 
)"" 
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
SqlConnection-- 
dBConnection-- "
=--# $
IO--% '
.--' (
GetDBConnection--( 7
(--7 8
)--8 9
;--9 :

SqlCommand.. 
preparedStatement.. $
=..% &
null..' +
;..+ ,
int// 
id// 
=// 
$num// 
;// 
try00 
{11 	
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 
)22  
;22  !
}33 	
catch44 
(44 
FormatException44 
nfx44 "
)44" #
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
nfx66. 1
,661 2
$str663 W
)66W X
;66X Y
id77 
=77 
-77 
$num77 
;77 
}88 	
try99 
{:: 	
dBConnection;; 
.;; 
Open;; 
(;; 
);; 
;;;  
using<< 
(<< 
preparedStatement<< $
=<<% &
new<<' *

SqlCommand<<+ 5
(<<5 6
null<<6 :
,<<: ;
dBConnection<<< H
)<<H I
)<<I J
{== 
preparedStatement>> !
.>>! "
CommandText>>" -
=>>. /
$str>>0 V
;>>V W
SqlParameter?? 
idParam?? $
=??% &
new??' *
SqlParameter??+ 7
(??7 8
$str??8 =
,??= >
	SqlDbType??? H
.??H I
Int??I L
,??L M
$num??N O
)??O P
;??P Q
idParam@@ 
.@@ 
Value@@ 
=@@ 
id@@  "
;@@" #
preparedStatementAA !
.AA! "
ExecuteNonQueryAA" 1
(AA1 2
)AA2 3
;AA3 4
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD 7
+DD8 9
dataDD: >
+DD? @
$strDDA E
)DDE F
;DDF G
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
	exceptSqlHH. 7
,HH7 8
$strHH9 P
)HHP Q
;HHQ R
}II 	
finallyJJ 
{KK 	
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
dBConnectionPP  
.PP  !
ClosePP! &
(PP& '
)PP' (
;PP( )
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS 
	exceptSqlSS  )
)SS) *
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
	exceptSqlUU2 ;
,UU; <
$strUU= Y
)UUY Z
;UUZ [
}VV 
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
$num__ 
!=__ 
$num__ 
)__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
SqlConnectionjj 
dBConnectionjj "
=jj# $
IOjj% '
.jj' (
GetDBConnectionjj( 7
(jj7 8
)jj8 9
;jj9 :

SqlCommandkk 
preparedStatementkk $
=kk% &
nullkk' +
;kk+ ,
intll 
idll 
=ll 
$numll 
;ll 
trymm 
{nn 	
idoo 
=oo 
intoo 
.oo 
Parseoo 
(oo 
dataoo 
)oo  
;oo  !
}pp 	
catchqq 
(qq 
FormatExceptionqq 
nfxqq "
)qq" #
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
nfxss. 1
,ss1 2
$strss3 W
)ssW X
;ssX Y
idtt 
=tt 
-tt 
$numtt 
;tt 
}uu 	
tryvv 
{ww 	
dBConnectionxx 
.xx 
Openxx 
(xx 
)xx 
;xx  
usingyy 
(yy 
preparedStatementyy $
=yy% &
newyy' *

SqlCommandyy+ 5
(yy5 6
nullyy6 :
,yy: ;
dBConnectionyy< H
)yyH I
)yyI J
{zz 
preparedStatement{{ !
.{{! "
CommandText{{" -
={{. /
$str{{0 V
;{{V W
SqlParameter|| 
idParam|| $
=||% &
new||' *
SqlParameter||+ 7
(||7 8
$str||8 =
,||= >
	SqlDbType||? H
.||H I
Int||I L
,||L M
$num||N O
)||O P
;||P Q
idParam}} 
.}} 
Value}} 
=}} 
id}}  "
;}}" #
preparedStatement~~ !
.~~! "
ExecuteNonQuery~~" 1
(~~1 2
)~~2 3
;~~3 4
} 
IO
ÅÅ 
.
ÅÅ 
WriteString
ÅÅ 
(
ÅÅ 
$str
ÅÅ 7
+
ÅÅ8 9
data
ÅÅ: >
+
ÅÅ? @
$str
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÇÇ 	
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ %
)
ÉÉ% &
{
ÑÑ 	
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ 
.
ÖÖ 
LogLevel
ÖÖ '
.
ÖÖ' (
Warn
ÖÖ( ,
,
ÖÖ, -
	exceptSql
ÖÖ. 7
,
ÖÖ7 8
$str
ÖÖ9 P
)
ÖÖP Q
;
ÖÖQ R
}
ÜÜ 	
finally
áá 
{
àà 	
try
ââ 
{
ää 
if
ãã 
(
ãã 
dBConnection
ãã  
!=
ãã! #
null
ãã$ (
)
ãã( )
{
åå 
dBConnection
çç  
.
çç  !
Close
çç! &
(
çç& '
)
çç' (
;
çç( )
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
	exceptSql
íí2 ;
,
íí; <
$str
íí= Y
)
ííY Z
;
ííZ [
}
ìì 
}
îî 	
}
ïï 
private
òò 
void
òò 
GoodG2B2
òò 
(
òò 
HttpRequest
òò %
req
òò& )
,
òò) *
HttpResponse
òò+ 7
resp
òò8 <
)
òò< =
{
ôô 
string
öö 
data
öö 
;
öö 
if
õõ 

(
õõ 
$num
õõ 
==
õõ 
$num
õõ 
)
õõ 
{
úú 	
data
ûû 
=
ûû 
$str
ûû 
;
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
SqlConnection
¶¶ 
dBConnection
¶¶ "
=
¶¶# $
IO
¶¶% '
.
¶¶' (
GetDBConnection
¶¶( 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :

SqlCommand
ßß 
preparedStatement
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
int
®® 
id
®® 
=
®® 
$num
®® 
;
®® 
try
©© 
{
™™ 	
id
´´ 
=
´´ 
int
´´ 
.
´´ 
Parse
´´ 
(
´´ 
data
´´ 
)
´´  
;
´´  !
}
¨¨ 	
catch
≠≠ 
(
≠≠ 
FormatException
≠≠ 
nfx
≠≠ "
)
≠≠" #
{
ÆÆ 	
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ 
.
ØØ 
LogLevel
ØØ '
.
ØØ' (
Warn
ØØ( ,
,
ØØ, -
nfx
ØØ. 1
,
ØØ1 2
$str
ØØ3 W
)
ØØW X
;
ØØX Y
id
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
±± 	
try
≤≤ 
{
≥≥ 	
dBConnection
¥¥ 
.
¥¥ 
Open
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
using
µµ 
(
µµ 
preparedStatement
µµ $
=
µµ% &
new
µµ' *

SqlCommand
µµ+ 5
(
µµ5 6
null
µµ6 :
,
µµ: ;
dBConnection
µµ< H
)
µµH I
)
µµI J
{
∂∂ 
preparedStatement
∑∑ !
.
∑∑! "
CommandText
∑∑" -
=
∑∑. /
$str
∑∑0 V
;
∑∑V W
SqlParameter
∏∏ 
idParam
∏∏ $
=
∏∏% &
new
∏∏' *
SqlParameter
∏∏+ 7
(
∏∏7 8
$str
∏∏8 =
,
∏∏= >
	SqlDbType
∏∏? H
.
∏∏H I
Int
∏∏I L
,
∏∏L M
$num
∏∏N O
)
∏∏O P
;
∏∏P Q
idParam
ππ 
.
ππ 
Value
ππ 
=
ππ 
id
ππ  "
;
ππ" #
preparedStatement
∫∫ !
.
∫∫! "
ExecuteNonQuery
∫∫" 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
IO
ΩΩ 
.
ΩΩ 
WriteString
ΩΩ 
(
ΩΩ 
$str
ΩΩ 7
+
ΩΩ8 9
data
ΩΩ: >
+
ΩΩ? @
$str
ΩΩA E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø %
)
øø% &
{
¿¿ 	
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ 
.
¡¡ 
LogLevel
¡¡ '
.
¡¡' (
Warn
¡¡( ,
,
¡¡, -
	exceptSql
¡¡. 7
,
¡¡7 8
$str
¡¡9 P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 	
finally
√√ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
dBConnection
««  
!=
««! #
null
««$ (
)
««( )
{
»» 
dBConnection
……  
.
……  !
Close
……! &
(
……& '
)
……' (
;
……( )
}
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
SqlException
ÃÃ 
	exceptSql
ÃÃ  )
)
ÃÃ) *
{
ÕÕ 
IO
ŒŒ 
.
ŒŒ 
Logger
ŒŒ 
.
ŒŒ 
Log
ŒŒ 
(
ŒŒ 
NLog
ŒŒ "
.
ŒŒ" #
LogLevel
ŒŒ# +
.
ŒŒ+ ,
Warn
ŒŒ, 0
,
ŒŒ0 1
	exceptSql
ŒŒ2 ;
,
ŒŒ; <
$str
ŒŒ= Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
}
–– 	
}
—— 
public
”” 

override
”” 
void
”” 
Good
”” 
(
”” 
HttpRequest
”” )
req
””* -
,
””- .
HttpResponse
””/ ;
resp
””< @
)
””@ A
{
‘‘ 
GoodG2B1
’’ 
(
’’ 
req
’’ 
,
’’ 
resp
’’ 
)
’’ 
;
’’ 
GoodG2B2
÷÷ 
(
÷÷ 
req
÷÷ 
,
÷÷ 
resp
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ŸŸ 
}⁄⁄ Ïm
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_04.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_04 =
:> ?
AbstractTestCaseWeb@ S
{ 
private"" 
const"" 
bool"" 
PRIVATE_CONST_TRUE"" )
=""* +
true"", 0
;""0 1
private## 
const## 
bool## 
PRIVATE_CONST_FALSE## *
=##+ ,
false##- 2
;##2 3
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
PRIVATE_CONST_TRUE)) 
))) 
{** 	
data,, 
=,, 
req,, 
.,, 
Params,, 
.,, 
Get,, !
(,,! "
$str,," &
),,& '
;,,' (
}-- 	
else.. 
{// 	
data22 
=22 
null22 
;22 
}33 	
SqlConnection44 
dBConnection44 "
=44# $
IO44% '
.44' (
GetDBConnection44( 7
(447 8
)448 9
;449 :

SqlCommand55 
preparedStatement55 $
=55% &
null55' +
;55+ ,
int66 
id66 
=66 
$num66 
;66 
try77 
{88 	
id99 
=99 
int99 
.99 
Parse99 
(99 
data99 
)99  
;99  !
}:: 	
catch;; 
(;; 
FormatException;; 
nfx;; "
);;" #
{<< 	
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== 
.== 
LogLevel== '
.==' (
Warn==( ,
,==, -
nfx==. 1
,==1 2
$str==3 W
)==W X
;==X Y
id>> 
=>> 
->> 
$num>> 
;>> 
}?? 	
try@@ 
{AA 	
dBConnectionBB 
.BB 
OpenBB 
(BB 
)BB 
;BB  
usingCC 
(CC 
preparedStatementCC $
=CC% &
newCC' *

SqlCommandCC+ 5
(CC5 6
nullCC6 :
,CC: ;
dBConnectionCC< H
)CCH I
)CCI J
{DD 
preparedStatementEE !
.EE! "
CommandTextEE" -
=EE. /
$strEE0 V
;EEV W
SqlParameterFF 
idParamFF $
=FF% &
newFF' *
SqlParameterFF+ 7
(FF7 8
$strFF8 =
,FF= >
	SqlDbTypeFF? H
.FFH I
IntFFI L
,FFL M
$numFFN O
)FFO P
;FFP Q
idParamGG 
.GG 
ValueGG 
=GG 
idGG  "
;GG" #
preparedStatementHH !
.HH! "
ExecuteNonQueryHH" 1
(HH1 2
)HH2 3
;HH3 4
}II 
IOKK 
.KK 
WriteStringKK 
(KK 
$strKK 7
+KK8 9
dataKK: >
+KK? @
$strKKA E
)KKE F
;KKF G
}LL 	
catchMM 
(MM 
SqlExceptionMM 
	exceptSqlMM %
)MM% &
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
	exceptSqlOO. 7
,OO7 8
$strOO9 P
)OOP Q
;OOQ R
}PP 	
finallyQQ 
{RR 	
trySS 
{TT 
ifUU 
(UU 
dBConnectionUU  
!=UU! #
nullUU$ (
)UU( )
{VV 
dBConnectionWW  
.WW  !
CloseWW! &
(WW& '
)WW' (
;WW( )
}XX 
}YY 
catchZZ 
(ZZ 
SqlExceptionZZ 
	exceptSqlZZ  )
)ZZ) *
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
	exceptSql\\2 ;
,\\; <
$str\\= Y
)\\Y Z
;\\Z [
}]] 
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
HttpRequestcc %
reqcc& )
,cc) *
HttpResponsecc+ 7
respcc8 <
)cc< =
{dd 
stringee 
dataee 
;ee 
ifff 

(ff 
PRIVATE_CONST_FALSEff 
)ff  
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$stroo 
;oo 
}pp 	
SqlConnectionqq 
dBConnectionqq "
=qq# $
IOqq% '
.qq' (
GetDBConnectionqq( 7
(qq7 8
)qq8 9
;qq9 :

SqlCommandrr 
preparedStatementrr $
=rr% &
nullrr' +
;rr+ ,
intss 
idss 
=ss 
$numss 
;ss 
trytt 
{uu 	
idvv 
=vv 
intvv 
.vv 
Parsevv 
(vv 
datavv 
)vv  
;vv  !
}ww 	
catchxx 
(xx 
FormatExceptionxx 
nfxxx "
)xx" #
{yy 	
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz 
.zz 
LogLevelzz '
.zz' (
Warnzz( ,
,zz, -
nfxzz. 1
,zz1 2
$strzz3 W
)zzW X
;zzX Y
id{{ 
={{ 
-{{ 
$num{{ 
;{{ 
}|| 	
try}} 
{~~ 	
dBConnection 
. 
Open 
( 
) 
;  
using
ÄÄ 
(
ÄÄ 
preparedStatement
ÄÄ $
=
ÄÄ% &
new
ÄÄ' *

SqlCommand
ÄÄ+ 5
(
ÄÄ5 6
null
ÄÄ6 :
,
ÄÄ: ;
dBConnection
ÄÄ< H
)
ÄÄH I
)
ÄÄI J
{
ÅÅ 
preparedStatement
ÇÇ !
.
ÇÇ! "
CommandText
ÇÇ" -
=
ÇÇ. /
$str
ÇÇ0 V
;
ÇÇV W
SqlParameter
ÉÉ 
idParam
ÉÉ $
=
ÉÉ% &
new
ÉÉ' *
SqlParameter
ÉÉ+ 7
(
ÉÉ7 8
$str
ÉÉ8 =
,
ÉÉ= >
	SqlDbType
ÉÉ? H
.
ÉÉH I
Int
ÉÉI L
,
ÉÉL M
$num
ÉÉN O
)
ÉÉO P
;
ÉÉP Q
idParam
ÑÑ 
.
ÑÑ 
Value
ÑÑ 
=
ÑÑ 
id
ÑÑ  "
;
ÑÑ" #
preparedStatement
ÖÖ !
.
ÖÖ! "
ExecuteNonQuery
ÖÖ" 1
(
ÖÖ1 2
)
ÖÖ2 3
;
ÖÖ3 4
}
ÜÜ 
IO
àà 
.
àà 
WriteString
àà 
(
àà 
$str
àà 7
+
àà8 9
data
àà: >
+
àà? @
$str
ààA E
)
ààE F
;
ààF G
}
ââ 	
catch
ää 
(
ää 
SqlException
ää 
	exceptSql
ää %
)
ää% &
{
ãã 	
IO
åå 
.
åå 
Logger
åå 
.
åå 
Log
åå 
(
åå 
NLog
åå 
.
åå 
LogLevel
åå '
.
åå' (
Warn
åå( ,
,
åå, -
	exceptSql
åå. 7
,
åå7 8
$str
åå9 P
)
ååP Q
;
ååQ R
}
çç 	
finally
éé 
{
èè 	
try
êê 
{
ëë 
if
íí 
(
íí 
dBConnection
íí  
!=
íí! #
null
íí$ (
)
íí( )
{
ìì 
dBConnection
îî  
.
îî  !
Close
îî! &
(
îî& '
)
îî' (
;
îî( )
}
ïï 
}
ññ 
catch
óó 
(
óó 
SqlException
óó 
	exceptSql
óó  )
)
óó) *
{
òò 
IO
ôô 
.
ôô 
Logger
ôô 
.
ôô 
Log
ôô 
(
ôô 
NLog
ôô "
.
ôô" #
LogLevel
ôô# +
.
ôô+ ,
Warn
ôô, 0
,
ôô0 1
	exceptSql
ôô2 ;
,
ôô; <
$str
ôô= Y
)
ôôY Z
;
ôôZ [
}
öö 
}
õõ 	
}
úú 
private
üü 
void
üü 
GoodG2B2
üü 
(
üü 
HttpRequest
üü %
req
üü& )
,
üü) *
HttpResponse
üü+ 7
resp
üü8 <
)
üü< =
{
†† 
string
°° 
data
°° 
;
°° 
if
¢¢ 

(
¢¢  
PRIVATE_CONST_TRUE
¢¢ 
)
¢¢ 
{
££ 	
data
•• 
=
•• 
$str
•• 
;
•• 
}
¶¶ 	
else
ßß 
{
®® 	
data
´´ 
=
´´ 
null
´´ 
;
´´ 
}
¨¨ 	
SqlConnection
≠≠ 
dBConnection
≠≠ "
=
≠≠# $
IO
≠≠% '
.
≠≠' (
GetDBConnection
≠≠( 7
(
≠≠7 8
)
≠≠8 9
;
≠≠9 :

SqlCommand
ÆÆ 
preparedStatement
ÆÆ $
=
ÆÆ% &
null
ÆÆ' +
;
ÆÆ+ ,
int
ØØ 
id
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
try
∞∞ 
{
±± 	
id
≤≤ 
=
≤≤ 
int
≤≤ 
.
≤≤ 
Parse
≤≤ 
(
≤≤ 
data
≤≤ 
)
≤≤  
;
≤≤  !
}
≥≥ 	
catch
¥¥ 
(
¥¥ 
FormatException
¥¥ 
nfx
¥¥ "
)
¥¥" #
{
µµ 	
IO
∂∂ 
.
∂∂ 
Logger
∂∂ 
.
∂∂ 
Log
∂∂ 
(
∂∂ 
NLog
∂∂ 
.
∂∂ 
LogLevel
∂∂ '
.
∂∂' (
Warn
∂∂( ,
,
∂∂, -
nfx
∂∂. 1
,
∂∂1 2
$str
∂∂3 W
)
∂∂W X
;
∂∂X Y
id
∑∑ 
=
∑∑ 
-
∑∑ 
$num
∑∑ 
;
∑∑ 
}
∏∏ 	
try
ππ 
{
∫∫ 	
dBConnection
ªª 
.
ªª 
Open
ªª 
(
ªª 
)
ªª 
;
ªª  
using
ºº 
(
ºº 
preparedStatement
ºº $
=
ºº% &
new
ºº' *

SqlCommand
ºº+ 5
(
ºº5 6
null
ºº6 :
,
ºº: ;
dBConnection
ºº< H
)
ººH I
)
ººI J
{
ΩΩ 
preparedStatement
ææ !
.
ææ! "
CommandText
ææ" -
=
ææ. /
$str
ææ0 V
;
ææV W
SqlParameter
øø 
idParam
øø $
=
øø% &
new
øø' *
SqlParameter
øø+ 7
(
øø7 8
$str
øø8 =
,
øø= >
	SqlDbType
øø? H
.
øøH I
Int
øøI L
,
øøL M
$num
øøN O
)
øøO P
;
øøP Q
idParam
¿¿ 
.
¿¿ 
Value
¿¿ 
=
¿¿ 
id
¿¿  "
;
¿¿" #
preparedStatement
¡¡ !
.
¡¡! "
ExecuteNonQuery
¡¡" 1
(
¡¡1 2
)
¡¡2 3
;
¡¡3 4
}
¬¬ 
IO
ƒƒ 
.
ƒƒ 
WriteString
ƒƒ 
(
ƒƒ 
$str
ƒƒ 7
+
ƒƒ8 9
data
ƒƒ: >
+
ƒƒ? @
$str
ƒƒA E
)
ƒƒE F
;
ƒƒF G
}
≈≈ 	
catch
∆∆ 
(
∆∆ 
SqlException
∆∆ 
	exceptSql
∆∆ %
)
∆∆% &
{
«« 	
IO
»» 
.
»» 
Logger
»» 
.
»» 
Log
»» 
(
»» 
NLog
»» 
.
»» 
LogLevel
»» '
.
»»' (
Warn
»»( ,
,
»», -
	exceptSql
»». 7
,
»»7 8
$str
»»9 P
)
»»P Q
;
»»Q R
}
…… 	
finally
   
{
ÀÀ 	
try
ÃÃ 
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 
dBConnection
ŒŒ  
!=
ŒŒ! #
null
ŒŒ$ (
)
ŒŒ( )
{
œœ 
dBConnection
––  
.
––  !
Close
––! &
(
––& '
)
––' (
;
––( )
}
—— 
}
““ 
catch
”” 
(
”” 
SqlException
”” 
	exceptSql
””  )
)
””) *
{
‘‘ 
IO
’’ 
.
’’ 
Logger
’’ 
.
’’ 
Log
’’ 
(
’’ 
NLog
’’ "
.
’’" #
LogLevel
’’# +
.
’’+ ,
Warn
’’, 0
,
’’0 1
	exceptSql
’’2 ;
,
’’; <
$str
’’= Y
)
’’Y Z
;
’’Z [
}
÷÷ 
}
◊◊ 	
}
ÿÿ 
public
⁄⁄ 

override
⁄⁄ 
void
⁄⁄ 
Good
⁄⁄ 
(
⁄⁄ 
HttpRequest
⁄⁄ )
req
⁄⁄* -
,
⁄⁄- .
HttpResponse
⁄⁄/ ;
resp
⁄⁄< @
)
⁄⁄@ A
{
€€ 
GoodG2B1
‹‹ 
(
‹‹ 
req
‹‹ 
,
‹‹ 
resp
‹‹ 
)
‹‹ 
;
‹‹ 
GoodG2B2
›› 
(
›› 
req
›› 
,
›› 
resp
›› 
)
›› 
;
›› 
}
ﬁﬁ 
}‡‡ 
}·· £m
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_05.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_05 =
:> ?
AbstractTestCaseWeb@ S
{ 
private"" 
bool"" 
privateTrue"" 
="" 
true"" #
;""# $
private## 
bool## 
privateFalse## 
=## 
false##  %
;##% &
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
privateTrue)) 
))) 
{** 	
data,, 
=,, 
req,, 
.,, 
Params,, 
.,, 
Get,, !
(,,! "
$str,," &
),,& '
;,,' (
}-- 	
else.. 
{// 	
data22 
=22 
null22 
;22 
}33 	
SqlConnection44 
dBConnection44 "
=44# $
IO44% '
.44' (
GetDBConnection44( 7
(447 8
)448 9
;449 :

SqlCommand55 
preparedStatement55 $
=55% &
null55' +
;55+ ,
int66 
id66 
=66 
$num66 
;66 
try77 
{88 	
id99 
=99 
int99 
.99 
Parse99 
(99 
data99 
)99  
;99  !
}:: 	
catch;; 
(;; 
FormatException;; 
nfx;; "
);;" #
{<< 	
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== 
.== 
LogLevel== '
.==' (
Warn==( ,
,==, -
nfx==. 1
,==1 2
$str==3 W
)==W X
;==X Y
id>> 
=>> 
->> 
$num>> 
;>> 
}?? 	
try@@ 
{AA 	
dBConnectionBB 
.BB 
OpenBB 
(BB 
)BB 
;BB  
usingCC 
(CC 
preparedStatementCC $
=CC% &
newCC' *

SqlCommandCC+ 5
(CC5 6
nullCC6 :
,CC: ;
dBConnectionCC< H
)CCH I
)CCI J
{DD 
preparedStatementEE !
.EE! "
CommandTextEE" -
=EE. /
$strEE0 V
;EEV W
SqlParameterFF 
idParamFF $
=FF% &
newFF' *
SqlParameterFF+ 7
(FF7 8
$strFF8 =
,FF= >
	SqlDbTypeFF? H
.FFH I
IntFFI L
,FFL M
$numFFN O
)FFO P
;FFP Q
idParamGG 
.GG 
ValueGG 
=GG 
idGG  "
;GG" #
preparedStatementHH !
.HH! "
ExecuteNonQueryHH" 1
(HH1 2
)HH2 3
;HH3 4
}II 
IOKK 
.KK 
WriteStringKK 
(KK 
$strKK 7
+KK8 9
dataKK: >
+KK? @
$strKKA E
)KKE F
;KKF G
}LL 	
catchMM 
(MM 
SqlExceptionMM 
	exceptSqlMM %
)MM% &
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
	exceptSqlOO. 7
,OO7 8
$strOO9 P
)OOP Q
;OOQ R
}PP 	
finallyQQ 
{RR 	
trySS 
{TT 
ifUU 
(UU 
dBConnectionUU  
!=UU! #
nullUU$ (
)UU( )
{VV 
dBConnectionWW  
.WW  !
CloseWW! &
(WW& '
)WW' (
;WW( )
}XX 
}YY 
catchZZ 
(ZZ 
SqlExceptionZZ 
	exceptSqlZZ  )
)ZZ) *
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
	exceptSql\\2 ;
,\\; <
$str\\= Y
)\\Y Z
;\\Z [
}]] 
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
HttpRequestcc %
reqcc& )
,cc) *
HttpResponsecc+ 7
respcc8 <
)cc< =
{dd 
stringee 
dataee 
;ee 
ifff 

(ff 
privateFalseff 
)ff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$stroo 
;oo 
}pp 	
SqlConnectionqq 
dBConnectionqq "
=qq# $
IOqq% '
.qq' (
GetDBConnectionqq( 7
(qq7 8
)qq8 9
;qq9 :

SqlCommandrr 
preparedStatementrr $
=rr% &
nullrr' +
;rr+ ,
intss 
idss 
=ss 
$numss 
;ss 
trytt 
{uu 	
idvv 
=vv 
intvv 
.vv 
Parsevv 
(vv 
datavv 
)vv  
;vv  !
}ww 	
catchxx 
(xx 
FormatExceptionxx 
nfxxx "
)xx" #
{yy 	
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz 
.zz 
LogLevelzz '
.zz' (
Warnzz( ,
,zz, -
nfxzz. 1
,zz1 2
$strzz3 W
)zzW X
;zzX Y
id{{ 
={{ 
-{{ 
$num{{ 
;{{ 
}|| 	
try}} 
{~~ 	
dBConnection 
. 
Open 
( 
) 
;  
using
ÄÄ 
(
ÄÄ 
preparedStatement
ÄÄ $
=
ÄÄ% &
new
ÄÄ' *

SqlCommand
ÄÄ+ 5
(
ÄÄ5 6
null
ÄÄ6 :
,
ÄÄ: ;
dBConnection
ÄÄ< H
)
ÄÄH I
)
ÄÄI J
{
ÅÅ 
preparedStatement
ÇÇ !
.
ÇÇ! "
CommandText
ÇÇ" -
=
ÇÇ. /
$str
ÇÇ0 V
;
ÇÇV W
SqlParameter
ÉÉ 
idParam
ÉÉ $
=
ÉÉ% &
new
ÉÉ' *
SqlParameter
ÉÉ+ 7
(
ÉÉ7 8
$str
ÉÉ8 =
,
ÉÉ= >
	SqlDbType
ÉÉ? H
.
ÉÉH I
Int
ÉÉI L
,
ÉÉL M
$num
ÉÉN O
)
ÉÉO P
;
ÉÉP Q
idParam
ÑÑ 
.
ÑÑ 
Value
ÑÑ 
=
ÑÑ 
id
ÑÑ  "
;
ÑÑ" #
preparedStatement
ÖÖ !
.
ÖÖ! "
ExecuteNonQuery
ÖÖ" 1
(
ÖÖ1 2
)
ÖÖ2 3
;
ÖÖ3 4
}
ÜÜ 
IO
àà 
.
àà 
WriteString
àà 
(
àà 
$str
àà 7
+
àà8 9
data
àà: >
+
àà? @
$str
ààA E
)
ààE F
;
ààF G
}
ââ 	
catch
ää 
(
ää 
SqlException
ää 
	exceptSql
ää %
)
ää% &
{
ãã 	
IO
åå 
.
åå 
Logger
åå 
.
åå 
Log
åå 
(
åå 
NLog
åå 
.
åå 
LogLevel
åå '
.
åå' (
Warn
åå( ,
,
åå, -
	exceptSql
åå. 7
,
åå7 8
$str
åå9 P
)
ååP Q
;
ååQ R
}
çç 	
finally
éé 
{
èè 	
try
êê 
{
ëë 
if
íí 
(
íí 
dBConnection
íí  
!=
íí! #
null
íí$ (
)
íí( )
{
ìì 
dBConnection
îî  
.
îî  !
Close
îî! &
(
îî& '
)
îî' (
;
îî( )
}
ïï 
}
ññ 
catch
óó 
(
óó 
SqlException
óó 
	exceptSql
óó  )
)
óó) *
{
òò 
IO
ôô 
.
ôô 
Logger
ôô 
.
ôô 
Log
ôô 
(
ôô 
NLog
ôô "
.
ôô" #
LogLevel
ôô# +
.
ôô+ ,
Warn
ôô, 0
,
ôô0 1
	exceptSql
ôô2 ;
,
ôô; <
$str
ôô= Y
)
ôôY Z
;
ôôZ [
}
öö 
}
õõ 	
}
úú 
private
üü 
void
üü 
GoodG2B2
üü 
(
üü 
HttpRequest
üü %
req
üü& )
,
üü) *
HttpResponse
üü+ 7
resp
üü8 <
)
üü< =
{
†† 
string
°° 
data
°° 
;
°° 
if
¢¢ 

(
¢¢ 
privateTrue
¢¢ 
)
¢¢ 
{
££ 	
data
•• 
=
•• 
$str
•• 
;
•• 
}
¶¶ 	
else
ßß 
{
®® 	
data
´´ 
=
´´ 
null
´´ 
;
´´ 
}
¨¨ 	
SqlConnection
≠≠ 
dBConnection
≠≠ "
=
≠≠# $
IO
≠≠% '
.
≠≠' (
GetDBConnection
≠≠( 7
(
≠≠7 8
)
≠≠8 9
;
≠≠9 :

SqlCommand
ÆÆ 
preparedStatement
ÆÆ $
=
ÆÆ% &
null
ÆÆ' +
;
ÆÆ+ ,
int
ØØ 
id
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
try
∞∞ 
{
±± 	
id
≤≤ 
=
≤≤ 
int
≤≤ 
.
≤≤ 
Parse
≤≤ 
(
≤≤ 
data
≤≤ 
)
≤≤  
;
≤≤  !
}
≥≥ 	
catch
¥¥ 
(
¥¥ 
FormatException
¥¥ 
nfx
¥¥ "
)
¥¥" #
{
µµ 	
IO
∂∂ 
.
∂∂ 
Logger
∂∂ 
.
∂∂ 
Log
∂∂ 
(
∂∂ 
NLog
∂∂ 
.
∂∂ 
LogLevel
∂∂ '
.
∂∂' (
Warn
∂∂( ,
,
∂∂, -
nfx
∂∂. 1
,
∂∂1 2
$str
∂∂3 W
)
∂∂W X
;
∂∂X Y
id
∑∑ 
=
∑∑ 
-
∑∑ 
$num
∑∑ 
;
∑∑ 
}
∏∏ 	
try
ππ 
{
∫∫ 	
dBConnection
ªª 
.
ªª 
Open
ªª 
(
ªª 
)
ªª 
;
ªª  
using
ºº 
(
ºº 
preparedStatement
ºº $
=
ºº% &
new
ºº' *

SqlCommand
ºº+ 5
(
ºº5 6
null
ºº6 :
,
ºº: ;
dBConnection
ºº< H
)
ººH I
)
ººI J
{
ΩΩ 
preparedStatement
ææ !
.
ææ! "
CommandText
ææ" -
=
ææ. /
$str
ææ0 V
;
ææV W
SqlParameter
øø 
idParam
øø $
=
øø% &
new
øø' *
SqlParameter
øø+ 7
(
øø7 8
$str
øø8 =
,
øø= >
	SqlDbType
øø? H
.
øøH I
Int
øøI L
,
øøL M
$num
øøN O
)
øøO P
;
øøP Q
idParam
¿¿ 
.
¿¿ 
Value
¿¿ 
=
¿¿ 
id
¿¿  "
;
¿¿" #
preparedStatement
¡¡ !
.
¡¡! "
ExecuteNonQuery
¡¡" 1
(
¡¡1 2
)
¡¡2 3
;
¡¡3 4
}
¬¬ 
IO
ƒƒ 
.
ƒƒ 
WriteString
ƒƒ 
(
ƒƒ 
$str
ƒƒ 7
+
ƒƒ8 9
data
ƒƒ: >
+
ƒƒ? @
$str
ƒƒA E
)
ƒƒE F
;
ƒƒF G
}
≈≈ 	
catch
∆∆ 
(
∆∆ 
SqlException
∆∆ 
	exceptSql
∆∆ %
)
∆∆% &
{
«« 	
IO
»» 
.
»» 
Logger
»» 
.
»» 
Log
»» 
(
»» 
NLog
»» 
.
»» 
LogLevel
»» '
.
»»' (
Warn
»»( ,
,
»», -
	exceptSql
»». 7
,
»»7 8
$str
»»9 P
)
»»P Q
;
»»Q R
}
…… 	
finally
   
{
ÀÀ 	
try
ÃÃ 
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 
dBConnection
ŒŒ  
!=
ŒŒ! #
null
ŒŒ$ (
)
ŒŒ( )
{
œœ 
dBConnection
––  
.
––  !
Close
––! &
(
––& '
)
––' (
;
––( )
}
—— 
}
““ 
catch
”” 
(
”” 
SqlException
”” 
	exceptSql
””  )
)
””) *
{
‘‘ 
IO
’’ 
.
’’ 
Logger
’’ 
.
’’ 
Log
’’ 
(
’’ 
NLog
’’ "
.
’’" #
LogLevel
’’# +
.
’’+ ,
Warn
’’, 0
,
’’0 1
	exceptSql
’’2 ;
,
’’; <
$str
’’= Y
)
’’Y Z
;
’’Z [
}
÷÷ 
}
◊◊ 	
}
ÿÿ 
public
⁄⁄ 

override
⁄⁄ 
void
⁄⁄ 
Good
⁄⁄ 
(
⁄⁄ 
HttpRequest
⁄⁄ )
req
⁄⁄* -
,
⁄⁄- .
HttpResponse
⁄⁄/ ;
resp
⁄⁄< @
)
⁄⁄@ A
{
€€ 
GoodG2B1
‹‹ 
(
‹‹ 
req
‹‹ 
,
‹‹ 
resp
‹‹ 
)
‹‹ 
;
‹‹ 
GoodG2B2
›› 
(
›› 
req
›› 
,
›› 
resp
›› 
)
›› 
;
›› 
}
ﬁﬁ 
}‡‡ 
}·· ∞m
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_06.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_06 =
:> ?
AbstractTestCaseWeb@ S
{ 
private"" 
const"" 
int"" 
PRIVATE_CONST_FIVE"" (
="") *
$num""+ ,
;"", -
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_FIVE(( 
==(( !
$num((" #
)((# $
{)) 	
data++ 
=++ 
req++ 
.++ 
Params++ 
.++ 
Get++ !
(++! "
$str++" &
)++& '
;++' (
},, 	
else-- 
{.. 	
data11 
=11 
null11 
;11 
}22 	
SqlConnection33 
dBConnection33 "
=33# $
IO33% '
.33' (
GetDBConnection33( 7
(337 8
)338 9
;339 :

SqlCommand44 
preparedStatement44 $
=44% &
null44' +
;44+ ,
int55 
id55 
=55 
$num55 
;55 
try66 
{77 	
id88 
=88 
int88 
.88 
Parse88 
(88 
data88 
)88  
;88  !
}99 	
catch:: 
(:: 
FormatException:: 
nfx:: "
)::" #
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
nfx<<. 1
,<<1 2
$str<<3 W
)<<W X
;<<X Y
id== 
=== 
-== 
$num== 
;== 
}>> 	
try?? 
{@@ 	
dBConnectionAA 
.AA 
OpenAA 
(AA 
)AA 
;AA  
usingBB 
(BB 
preparedStatementBB $
=BB% &
newBB' *

SqlCommandBB+ 5
(BB5 6
nullBB6 :
,BB: ;
dBConnectionBB< H
)BBH I
)BBI J
{CC 
preparedStatementDD !
.DD! "
CommandTextDD" -
=DD. /
$strDD0 V
;DDV W
SqlParameterEE 
idParamEE $
=EE% &
newEE' *
SqlParameterEE+ 7
(EE7 8
$strEE8 =
,EE= >
	SqlDbTypeEE? H
.EEH I
IntEEI L
,EEL M
$numEEN O
)EEO P
;EEP Q
idParamFF 
.FF 
ValueFF 
=FF 
idFF  "
;FF" #
preparedStatementGG !
.GG! "
ExecuteNonQueryGG" 1
(GG1 2
)GG2 3
;GG3 4
}HH 
IOJJ 
.JJ 
WriteStringJJ 
(JJ 
$strJJ 7
+JJ8 9
dataJJ: >
+JJ? @
$strJJA E
)JJE F
;JJF G
}KK 	
catchLL 
(LL 
SqlExceptionLL 
	exceptSqlLL %
)LL% &
{MM 	
IONN 
.NN 
LoggerNN 
.NN 
LogNN 
(NN 
NLogNN 
.NN 
LogLevelNN '
.NN' (
WarnNN( ,
,NN, -
	exceptSqlNN. 7
,NN7 8
$strNN9 P
)NNP Q
;NNQ R
}OO 	
finallyPP 
{QQ 	
tryRR 
{SS 
ifTT 
(TT 
dBConnectionTT  
!=TT! #
nullTT$ (
)TT( )
{UU 
dBConnectionVV  
.VV  !
CloseVV! &
(VV& '
)VV' (
;VV( )
}WW 
}XX 
catchYY 
(YY 
SqlExceptionYY 
	exceptSqlYY  )
)YY) *
{ZZ 
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ "
.[[" #
LogLevel[[# +
.[[+ ,
Warn[[, 0
,[[0 1
	exceptSql[[2 ;
,[[; <
$str[[= Y
)[[Y Z
;[[Z [
}\\ 
}]] 	
}^^ 
privatebb 
voidbb 
GoodG2B1bb 
(bb 
HttpRequestbb %
reqbb& )
,bb) *
HttpResponsebb+ 7
respbb8 <
)bb< =
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee 
PRIVATE_CONST_FIVEee 
!=ee !
$numee" #
)ee# $
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
elsekk 
{ll 	
datann 
=nn 
$strnn 
;nn 
}oo 	
SqlConnectionpp 
dBConnectionpp "
=pp# $
IOpp% '
.pp' (
GetDBConnectionpp( 7
(pp7 8
)pp8 9
;pp9 :

SqlCommandqq 
preparedStatementqq $
=qq% &
nullqq' +
;qq+ ,
intrr 
idrr 
=rr 
$numrr 
;rr 
tryss 
{tt 	
iduu 
=uu 
intuu 
.uu 
Parseuu 
(uu 
datauu 
)uu  
;uu  !
}vv 	
catchww 
(ww 
FormatExceptionww 
nfxww "
)ww" #
{xx 	
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy 
.yy 
LogLevelyy '
.yy' (
Warnyy( ,
,yy, -
nfxyy. 1
,yy1 2
$stryy3 W
)yyW X
;yyX Y
idzz 
=zz 
-zz 
$numzz 
;zz 
}{{ 	
try|| 
{}} 	
dBConnection~~ 
.~~ 
Open~~ 
(~~ 
)~~ 
;~~  
using 
( 
preparedStatement $
=% &
new' *

SqlCommand+ 5
(5 6
null6 :
,: ;
dBConnection< H
)H I
)I J
{
ÄÄ 
preparedStatement
ÅÅ !
.
ÅÅ! "
CommandText
ÅÅ" -
=
ÅÅ. /
$str
ÅÅ0 V
;
ÅÅV W
SqlParameter
ÇÇ 
idParam
ÇÇ $
=
ÇÇ% &
new
ÇÇ' *
SqlParameter
ÇÇ+ 7
(
ÇÇ7 8
$str
ÇÇ8 =
,
ÇÇ= >
	SqlDbType
ÇÇ? H
.
ÇÇH I
Int
ÇÇI L
,
ÇÇL M
$num
ÇÇN O
)
ÇÇO P
;
ÇÇP Q
idParam
ÉÉ 
.
ÉÉ 
Value
ÉÉ 
=
ÉÉ 
id
ÉÉ  "
;
ÉÉ" #
preparedStatement
ÑÑ !
.
ÑÑ! "
ExecuteNonQuery
ÑÑ" 1
(
ÑÑ1 2
)
ÑÑ2 3
;
ÑÑ3 4
}
ÖÖ 
IO
áá 
.
áá 
WriteString
áá 
(
áá 
$str
áá 7
+
áá8 9
data
áá: >
+
áá? @
$str
ááA E
)
ááE F
;
ááF G
}
àà 	
catch
ââ 
(
ââ 
SqlException
ââ 
	exceptSql
ââ %
)
ââ% &
{
ää 	
IO
ãã 
.
ãã 
Logger
ãã 
.
ãã 
Log
ãã 
(
ãã 
NLog
ãã 
.
ãã 
LogLevel
ãã '
.
ãã' (
Warn
ãã( ,
,
ãã, -
	exceptSql
ãã. 7
,
ãã7 8
$str
ãã9 P
)
ããP Q
;
ããQ R
}
åå 	
finally
çç 
{
éé 	
try
èè 
{
êê 
if
ëë 
(
ëë 
dBConnection
ëë  
!=
ëë! #
null
ëë$ (
)
ëë( )
{
íí 
dBConnection
ìì  
.
ìì  !
Close
ìì! &
(
ìì& '
)
ìì' (
;
ìì( )
}
îî 
}
ïï 
catch
ññ 
(
ññ 
SqlException
ññ 
	exceptSql
ññ  )
)
ññ) *
{
óó 
IO
òò 
.
òò 
Logger
òò 
.
òò 
Log
òò 
(
òò 
NLog
òò "
.
òò" #
LogLevel
òò# +
.
òò+ ,
Warn
òò, 0
,
òò0 1
	exceptSql
òò2 ;
,
òò; <
$str
òò= Y
)
òòY Z
;
òòZ [
}
ôô 
}
öö 	
}
õõ 
private
ûû 
void
ûû 
GoodG2B2
ûû 
(
ûû 
HttpRequest
ûû %
req
ûû& )
,
ûû) *
HttpResponse
ûû+ 7
resp
ûû8 <
)
ûû< =
{
üü 
string
†† 
data
†† 
;
†† 
if
°° 

(
°°  
PRIVATE_CONST_FIVE
°° 
==
°° !
$num
°°" #
)
°°# $
{
¢¢ 	
data
§§ 
=
§§ 
$str
§§ 
;
§§ 
}
•• 	
else
¶¶ 
{
ßß 	
data
™™ 
=
™™ 
null
™™ 
;
™™ 
}
´´ 	
SqlConnection
¨¨ 
dBConnection
¨¨ "
=
¨¨# $
IO
¨¨% '
.
¨¨' (
GetDBConnection
¨¨( 7
(
¨¨7 8
)
¨¨8 9
;
¨¨9 :

SqlCommand
≠≠ 
preparedStatement
≠≠ $
=
≠≠% &
null
≠≠' +
;
≠≠+ ,
int
ÆÆ 
id
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
try
ØØ 
{
∞∞ 	
id
±± 
=
±± 
int
±± 
.
±± 
Parse
±± 
(
±± 
data
±± 
)
±±  
;
±±  !
}
≤≤ 	
catch
≥≥ 
(
≥≥ 
FormatException
≥≥ 
nfx
≥≥ "
)
≥≥" #
{
¥¥ 	
IO
µµ 
.
µµ 
Logger
µµ 
.
µµ 
Log
µµ 
(
µµ 
NLog
µµ 
.
µµ 
LogLevel
µµ '
.
µµ' (
Warn
µµ( ,
,
µµ, -
nfx
µµ. 1
,
µµ1 2
$str
µµ3 W
)
µµW X
;
µµX Y
id
∂∂ 
=
∂∂ 
-
∂∂ 
$num
∂∂ 
;
∂∂ 
}
∑∑ 	
try
∏∏ 
{
ππ 	
dBConnection
∫∫ 
.
∫∫ 
Open
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫  
using
ªª 
(
ªª 
preparedStatement
ªª $
=
ªª% &
new
ªª' *

SqlCommand
ªª+ 5
(
ªª5 6
null
ªª6 :
,
ªª: ;
dBConnection
ªª< H
)
ªªH I
)
ªªI J
{
ºº 
preparedStatement
ΩΩ !
.
ΩΩ! "
CommandText
ΩΩ" -
=
ΩΩ. /
$str
ΩΩ0 V
;
ΩΩV W
SqlParameter
ææ 
idParam
ææ $
=
ææ% &
new
ææ' *
SqlParameter
ææ+ 7
(
ææ7 8
$str
ææ8 =
,
ææ= >
	SqlDbType
ææ? H
.
ææH I
Int
ææI L
,
ææL M
$num
ææN O
)
ææO P
;
ææP Q
idParam
øø 
.
øø 
Value
øø 
=
øø 
id
øø  "
;
øø" #
preparedStatement
¿¿ !
.
¿¿! "
ExecuteNonQuery
¿¿" 1
(
¿¿1 2
)
¿¿2 3
;
¿¿3 4
}
¡¡ 
IO
√√ 
.
√√ 
WriteString
√√ 
(
√√ 
$str
√√ 7
+
√√8 9
data
√√: >
+
√√? @
$str
√√A E
)
√√E F
;
√√F G
}
ƒƒ 	
catch
≈≈ 
(
≈≈ 
SqlException
≈≈ 
	exceptSql
≈≈ %
)
≈≈% &
{
∆∆ 	
IO
«« 
.
«« 
Logger
«« 
.
«« 
Log
«« 
(
«« 
NLog
«« 
.
«« 
LogLevel
«« '
.
««' (
Warn
««( ,
,
««, -
	exceptSql
««. 7
,
««7 8
$str
««9 P
)
««P Q
;
««Q R
}
»» 	
finally
…… 
{
   	
try
ÀÀ 
{
ÃÃ 
if
ÕÕ 
(
ÕÕ 
dBConnection
ÕÕ  
!=
ÕÕ! #
null
ÕÕ$ (
)
ÕÕ( )
{
ŒŒ 
dBConnection
œœ  
.
œœ  !
Close
œœ! &
(
œœ& '
)
œœ' (
;
œœ( )
}
–– 
}
—— 
catch
““ 
(
““ 
SqlException
““ 
	exceptSql
““  )
)
““) *
{
”” 
IO
‘‘ 
.
‘‘ 
Logger
‘‘ 
.
‘‘ 
Log
‘‘ 
(
‘‘ 
NLog
‘‘ "
.
‘‘" #
LogLevel
‘‘# +
.
‘‘+ ,
Warn
‘‘, 0
,
‘‘0 1
	exceptSql
‘‘2 ;
,
‘‘; <
$str
‘‘= Y
)
‘‘Y Z
;
‘‘Z [
}
’’ 
}
÷÷ 	
}
◊◊ 
public
ŸŸ 

override
ŸŸ 
void
ŸŸ 
Good
ŸŸ 
(
ŸŸ 
HttpRequest
ŸŸ )
req
ŸŸ* -
,
ŸŸ- .
HttpResponse
ŸŸ/ ;
resp
ŸŸ< @
)
ŸŸ@ A
{
⁄⁄ 
GoodG2B1
€€ 
(
€€ 
req
€€ 
,
€€ 
resp
€€ 
)
€€ 
;
€€ 
GoodG2B2
‹‹ 
(
‹‹ 
req
‹‹ 
,
‹‹ 
resp
‹‹ 
)
‹‹ 
;
‹‹ 
}
›› 
}ﬂﬂ 
}‡‡ Åm
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_07.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_07 =
:> ?
AbstractTestCaseWeb@ S
{ 
private"" 
int"" 
privateFive"" 
="" 
$num"" 
;""  
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
privateFive(( 
==(( 
$num(( 
)(( 
{)) 	
data++ 
=++ 
req++ 
.++ 
Params++ 
.++ 
Get++ !
(++! "
$str++" &
)++& '
;++' (
},, 	
else-- 
{.. 	
data11 
=11 
null11 
;11 
}22 	
SqlConnection33 
dBConnection33 "
=33# $
IO33% '
.33' (
GetDBConnection33( 7
(337 8
)338 9
;339 :

SqlCommand44 
preparedStatement44 $
=44% &
null44' +
;44+ ,
int55 
id55 
=55 
$num55 
;55 
try66 
{77 	
id88 
=88 
int88 
.88 
Parse88 
(88 
data88 
)88  
;88  !
}99 	
catch:: 
(:: 
FormatException:: 
nfx:: "
)::" #
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
nfx<<. 1
,<<1 2
$str<<3 W
)<<W X
;<<X Y
id== 
=== 
-== 
$num== 
;== 
}>> 	
try?? 
{@@ 	
dBConnectionAA 
.AA 
OpenAA 
(AA 
)AA 
;AA  
usingBB 
(BB 
preparedStatementBB $
=BB% &
newBB' *

SqlCommandBB+ 5
(BB5 6
nullBB6 :
,BB: ;
dBConnectionBB< H
)BBH I
)BBI J
{CC 
preparedStatementDD !
.DD! "
CommandTextDD" -
=DD. /
$strDD0 V
;DDV W
SqlParameterEE 
idParamEE $
=EE% &
newEE' *
SqlParameterEE+ 7
(EE7 8
$strEE8 =
,EE= >
	SqlDbTypeEE? H
.EEH I
IntEEI L
,EEL M
$numEEN O
)EEO P
;EEP Q
idParamFF 
.FF 
ValueFF 
=FF 
idFF  "
;FF" #
preparedStatementGG !
.GG! "
ExecuteNonQueryGG" 1
(GG1 2
)GG2 3
;GG3 4
}HH 
IOJJ 
.JJ 
WriteStringJJ 
(JJ 
$strJJ 7
+JJ8 9
dataJJ: >
+JJ? @
$strJJA E
)JJE F
;JJF G
}KK 	
catchLL 
(LL 
SqlExceptionLL 
	exceptSqlLL %
)LL% &
{MM 	
IONN 
.NN 
LoggerNN 
.NN 
LogNN 
(NN 
NLogNN 
.NN 
LogLevelNN '
.NN' (
WarnNN( ,
,NN, -
	exceptSqlNN. 7
,NN7 8
$strNN9 P
)NNP Q
;NNQ R
}OO 	
finallyPP 
{QQ 	
tryRR 
{SS 
ifTT 
(TT 
dBConnectionTT  
!=TT! #
nullTT$ (
)TT( )
{UU 
dBConnectionVV  
.VV  !
CloseVV! &
(VV& '
)VV' (
;VV( )
}WW 
}XX 
catchYY 
(YY 
SqlExceptionYY 
	exceptSqlYY  )
)YY) *
{ZZ 
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ "
.[[" #
LogLevel[[# +
.[[+ ,
Warn[[, 0
,[[0 1
	exceptSql[[2 ;
,[[; <
$str[[= Y
)[[Y Z
;[[Z [
}\\ 
}]] 	
}^^ 
privatebb 
voidbb 
GoodG2B1bb 
(bb 
HttpRequestbb %
reqbb& )
,bb) *
HttpResponsebb+ 7
respbb8 <
)bb< =
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee 
privateFiveee 
!=ee 
$numee 
)ee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
elsekk 
{ll 	
datann 
=nn 
$strnn 
;nn 
}oo 	
SqlConnectionpp 
dBConnectionpp "
=pp# $
IOpp% '
.pp' (
GetDBConnectionpp( 7
(pp7 8
)pp8 9
;pp9 :

SqlCommandqq 
preparedStatementqq $
=qq% &
nullqq' +
;qq+ ,
intrr 
idrr 
=rr 
$numrr 
;rr 
tryss 
{tt 	
iduu 
=uu 
intuu 
.uu 
Parseuu 
(uu 
datauu 
)uu  
;uu  !
}vv 	
catchww 
(ww 
FormatExceptionww 
nfxww "
)ww" #
{xx 	
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy 
.yy 
LogLevelyy '
.yy' (
Warnyy( ,
,yy, -
nfxyy. 1
,yy1 2
$stryy3 W
)yyW X
;yyX Y
idzz 
=zz 
-zz 
$numzz 
;zz 
}{{ 	
try|| 
{}} 	
dBConnection~~ 
.~~ 
Open~~ 
(~~ 
)~~ 
;~~  
using 
( 
preparedStatement $
=% &
new' *

SqlCommand+ 5
(5 6
null6 :
,: ;
dBConnection< H
)H I
)I J
{
ÄÄ 
preparedStatement
ÅÅ !
.
ÅÅ! "
CommandText
ÅÅ" -
=
ÅÅ. /
$str
ÅÅ0 V
;
ÅÅV W
SqlParameter
ÇÇ 
idParam
ÇÇ $
=
ÇÇ% &
new
ÇÇ' *
SqlParameter
ÇÇ+ 7
(
ÇÇ7 8
$str
ÇÇ8 =
,
ÇÇ= >
	SqlDbType
ÇÇ? H
.
ÇÇH I
Int
ÇÇI L
,
ÇÇL M
$num
ÇÇN O
)
ÇÇO P
;
ÇÇP Q
idParam
ÉÉ 
.
ÉÉ 
Value
ÉÉ 
=
ÉÉ 
id
ÉÉ  "
;
ÉÉ" #
preparedStatement
ÑÑ !
.
ÑÑ! "
ExecuteNonQuery
ÑÑ" 1
(
ÑÑ1 2
)
ÑÑ2 3
;
ÑÑ3 4
}
ÖÖ 
IO
áá 
.
áá 
WriteString
áá 
(
áá 
$str
áá 7
+
áá8 9
data
áá: >
+
áá? @
$str
ááA E
)
ááE F
;
ááF G
}
àà 	
catch
ââ 
(
ââ 
SqlException
ââ 
	exceptSql
ââ %
)
ââ% &
{
ää 	
IO
ãã 
.
ãã 
Logger
ãã 
.
ãã 
Log
ãã 
(
ãã 
NLog
ãã 
.
ãã 
LogLevel
ãã '
.
ãã' (
Warn
ãã( ,
,
ãã, -
	exceptSql
ãã. 7
,
ãã7 8
$str
ãã9 P
)
ããP Q
;
ããQ R
}
åå 	
finally
çç 
{
éé 	
try
èè 
{
êê 
if
ëë 
(
ëë 
dBConnection
ëë  
!=
ëë! #
null
ëë$ (
)
ëë( )
{
íí 
dBConnection
ìì  
.
ìì  !
Close
ìì! &
(
ìì& '
)
ìì' (
;
ìì( )
}
îî 
}
ïï 
catch
ññ 
(
ññ 
SqlException
ññ 
	exceptSql
ññ  )
)
ññ) *
{
óó 
IO
òò 
.
òò 
Logger
òò 
.
òò 
Log
òò 
(
òò 
NLog
òò "
.
òò" #
LogLevel
òò# +
.
òò+ ,
Warn
òò, 0
,
òò0 1
	exceptSql
òò2 ;
,
òò; <
$str
òò= Y
)
òòY Z
;
òòZ [
}
ôô 
}
öö 	
}
õõ 
private
ûû 
void
ûû 
GoodG2B2
ûû 
(
ûû 
HttpRequest
ûû %
req
ûû& )
,
ûû) *
HttpResponse
ûû+ 7
resp
ûû8 <
)
ûû< =
{
üü 
string
†† 
data
†† 
;
†† 
if
°° 

(
°° 
privateFive
°° 
==
°° 
$num
°° 
)
°° 
{
¢¢ 	
data
§§ 
=
§§ 
$str
§§ 
;
§§ 
}
•• 	
else
¶¶ 
{
ßß 	
data
™™ 
=
™™ 
null
™™ 
;
™™ 
}
´´ 	
SqlConnection
¨¨ 
dBConnection
¨¨ "
=
¨¨# $
IO
¨¨% '
.
¨¨' (
GetDBConnection
¨¨( 7
(
¨¨7 8
)
¨¨8 9
;
¨¨9 :

SqlCommand
≠≠ 
preparedStatement
≠≠ $
=
≠≠% &
null
≠≠' +
;
≠≠+ ,
int
ÆÆ 
id
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
try
ØØ 
{
∞∞ 	
id
±± 
=
±± 
int
±± 
.
±± 
Parse
±± 
(
±± 
data
±± 
)
±±  
;
±±  !
}
≤≤ 	
catch
≥≥ 
(
≥≥ 
FormatException
≥≥ 
nfx
≥≥ "
)
≥≥" #
{
¥¥ 	
IO
µµ 
.
µµ 
Logger
µµ 
.
µµ 
Log
µµ 
(
µµ 
NLog
µµ 
.
µµ 
LogLevel
µµ '
.
µµ' (
Warn
µµ( ,
,
µµ, -
nfx
µµ. 1
,
µµ1 2
$str
µµ3 W
)
µµW X
;
µµX Y
id
∂∂ 
=
∂∂ 
-
∂∂ 
$num
∂∂ 
;
∂∂ 
}
∑∑ 	
try
∏∏ 
{
ππ 	
dBConnection
∫∫ 
.
∫∫ 
Open
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫  
using
ªª 
(
ªª 
preparedStatement
ªª $
=
ªª% &
new
ªª' *

SqlCommand
ªª+ 5
(
ªª5 6
null
ªª6 :
,
ªª: ;
dBConnection
ªª< H
)
ªªH I
)
ªªI J
{
ºº 
preparedStatement
ΩΩ !
.
ΩΩ! "
CommandText
ΩΩ" -
=
ΩΩ. /
$str
ΩΩ0 V
;
ΩΩV W
SqlParameter
ææ 
idParam
ææ $
=
ææ% &
new
ææ' *
SqlParameter
ææ+ 7
(
ææ7 8
$str
ææ8 =
,
ææ= >
	SqlDbType
ææ? H
.
ææH I
Int
ææI L
,
ææL M
$num
ææN O
)
ææO P
;
ææP Q
idParam
øø 
.
øø 
Value
øø 
=
øø 
id
øø  "
;
øø" #
preparedStatement
¿¿ !
.
¿¿! "
ExecuteNonQuery
¿¿" 1
(
¿¿1 2
)
¿¿2 3
;
¿¿3 4
}
¡¡ 
IO
√√ 
.
√√ 
WriteString
√√ 
(
√√ 
$str
√√ 7
+
√√8 9
data
√√: >
+
√√? @
$str
√√A E
)
√√E F
;
√√F G
}
ƒƒ 	
catch
≈≈ 
(
≈≈ 
SqlException
≈≈ 
	exceptSql
≈≈ %
)
≈≈% &
{
∆∆ 	
IO
«« 
.
«« 
Logger
«« 
.
«« 
Log
«« 
(
«« 
NLog
«« 
.
«« 
LogLevel
«« '
.
««' (
Warn
««( ,
,
««, -
	exceptSql
««. 7
,
««7 8
$str
««9 P
)
««P Q
;
««Q R
}
»» 	
finally
…… 
{
   	
try
ÀÀ 
{
ÃÃ 
if
ÕÕ 
(
ÕÕ 
dBConnection
ÕÕ  
!=
ÕÕ! #
null
ÕÕ$ (
)
ÕÕ( )
{
ŒŒ 
dBConnection
œœ  
.
œœ  !
Close
œœ! &
(
œœ& '
)
œœ' (
;
œœ( )
}
–– 
}
—— 
catch
““ 
(
““ 
SqlException
““ 
	exceptSql
““  )
)
““) *
{
”” 
IO
‘‘ 
.
‘‘ 
Logger
‘‘ 
.
‘‘ 
Log
‘‘ 
(
‘‘ 
NLog
‘‘ "
.
‘‘" #
LogLevel
‘‘# +
.
‘‘+ ,
Warn
‘‘, 0
,
‘‘0 1
	exceptSql
‘‘2 ;
,
‘‘; <
$str
‘‘= Y
)
‘‘Y Z
;
‘‘Z [
}
’’ 
}
÷÷ 	
}
◊◊ 
public
ŸŸ 

override
ŸŸ 
void
ŸŸ 
Good
ŸŸ 
(
ŸŸ 
HttpRequest
ŸŸ )
req
ŸŸ* -
,
ŸŸ- .
HttpResponse
ŸŸ/ ;
resp
ŸŸ< @
)
ŸŸ@ A
{
⁄⁄ 
GoodG2B1
€€ 
(
€€ 
req
€€ 
,
€€ 
resp
€€ 
)
€€ 
;
€€ 
GoodG2B2
‹‹ 
(
‹‹ 
req
‹‹ 
,
‹‹ 
resp
‹‹ 
)
‹‹ 
;
‹‹ 
}
›› 
}ﬂﬂ 
}‡‡ ép
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_08.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_08 =
:> ?
AbstractTestCaseWeb@ S
{ 
private"" 
static"" 
bool"" 
PrivateReturnsTrue"" *
(""* +
)""+ ,
{## 
return$$ 
true$$ 
;$$ 
}%% 
private'' 
static'' 
bool'' 
PrivateReturnsFalse'' +
(''+ ,
)'', -
{(( 
return)) 
false)) 
;)) 
}** 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
if00 

(00 
PrivateReturnsTrue00 
(00 
)00  
)00  !
{11 	
data33 
=33 
req33 
.33 
Params33 
.33 
Get33 !
(33! "
$str33" &
)33& '
;33' (
}44 	
else55 
{66 	
data99 
=99 
null99 
;99 
}:: 	
SqlConnection;; 
dBConnection;; "
=;;# $
IO;;% '
.;;' (
GetDBConnection;;( 7
(;;7 8
);;8 9
;;;9 :

SqlCommand<< 
preparedStatement<< $
=<<% &
null<<' +
;<<+ ,
int== 
id== 
=== 
$num== 
;== 
try>> 
{?? 	
id@@ 
=@@ 
int@@ 
.@@ 
Parse@@ 
(@@ 
data@@ 
)@@  
;@@  !
}AA 	
catchBB 
(BB 
FormatExceptionBB 
nfxBB "
)BB" #
{CC 	
IODD 
.DD 
LoggerDD 
.DD 
LogDD 
(DD 
NLogDD 
.DD 
LogLevelDD '
.DD' (
WarnDD( ,
,DD, -
nfxDD. 1
,DD1 2
$strDD3 W
)DDW X
;DDX Y
idEE 
=EE 
-EE 
$numEE 
;EE 
}FF 	
tryGG 
{HH 	
dBConnectionII 
.II 
OpenII 
(II 
)II 
;II  
usingJJ 
(JJ 
preparedStatementJJ $
=JJ% &
newJJ' *

SqlCommandJJ+ 5
(JJ5 6
nullJJ6 :
,JJ: ;
dBConnectionJJ< H
)JJH I
)JJI J
{KK 
preparedStatementLL !
.LL! "
CommandTextLL" -
=LL. /
$strLL0 V
;LLV W
SqlParameterMM 
idParamMM $
=MM% &
newMM' *
SqlParameterMM+ 7
(MM7 8
$strMM8 =
,MM= >
	SqlDbTypeMM? H
.MMH I
IntMMI L
,MML M
$numMMN O
)MMO P
;MMP Q
idParamNN 
.NN 
ValueNN 
=NN 
idNN  "
;NN" #
preparedStatementOO !
.OO! "
ExecuteNonQueryOO" 1
(OO1 2
)OO2 3
;OO3 4
}PP 
IORR 
.RR 
WriteStringRR 
(RR 
$strRR 7
+RR8 9
dataRR: >
+RR? @
$strRRA E
)RRE F
;RRF G
}SS 	
catchTT 
(TT 
SqlExceptionTT 
	exceptSqlTT %
)TT% &
{UU 	
IOVV 
.VV 
LoggerVV 
.VV 
LogVV 
(VV 
NLogVV 
.VV 
LogLevelVV '
.VV' (
WarnVV( ,
,VV, -
	exceptSqlVV. 7
,VV7 8
$strVV9 P
)VVP Q
;VVQ R
}WW 	
finallyXX 
{YY 	
tryZZ 
{[[ 
if\\ 
(\\ 
dBConnection\\  
!=\\! #
null\\$ (
)\\( )
{]] 
dBConnection^^  
.^^  !
Close^^! &
(^^& '
)^^' (
;^^( )
}__ 
}`` 
catchaa 
(aa 
SqlExceptionaa 
	exceptSqlaa  )
)aa) *
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
	exceptSqlcc2 ;
,cc; <
$strcc= Y
)ccY Z
;ccZ [
}dd 
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
PrivateReturnsFalsemm 
(mm  
)mm  !
)mm! "
{nn 	
dataqq 
=qq 
nullqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$strvv 
;vv 
}ww 	
SqlConnectionxx 
dBConnectionxx "
=xx# $
IOxx% '
.xx' (
GetDBConnectionxx( 7
(xx7 8
)xx8 9
;xx9 :

SqlCommandyy 
preparedStatementyy $
=yy% &
nullyy' +
;yy+ ,
intzz 
idzz 
=zz 
$numzz 
;zz 
try{{ 
{|| 	
id}} 
=}} 
int}} 
.}} 
Parse}} 
(}} 
data}} 
)}}  
;}}  !
}~~ 	
catch 
( 
FormatException 
nfx "
)" #
{
ÄÄ 	
IO
ÅÅ 
.
ÅÅ 
Logger
ÅÅ 
.
ÅÅ 
Log
ÅÅ 
(
ÅÅ 
NLog
ÅÅ 
.
ÅÅ 
LogLevel
ÅÅ '
.
ÅÅ' (
Warn
ÅÅ( ,
,
ÅÅ, -
nfx
ÅÅ. 1
,
ÅÅ1 2
$str
ÅÅ3 W
)
ÅÅW X
;
ÅÅX Y
id
ÇÇ 
=
ÇÇ 
-
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
try
ÑÑ 
{
ÖÖ 	
dBConnection
ÜÜ 
.
ÜÜ 
Open
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ  
using
áá 
(
áá 
preparedStatement
áá $
=
áá% &
new
áá' *

SqlCommand
áá+ 5
(
áá5 6
null
áá6 :
,
áá: ;
dBConnection
áá< H
)
ááH I
)
ááI J
{
àà 
preparedStatement
ââ !
.
ââ! "
CommandText
ââ" -
=
ââ. /
$str
ââ0 V
;
ââV W
SqlParameter
ää 
idParam
ää $
=
ää% &
new
ää' *
SqlParameter
ää+ 7
(
ää7 8
$str
ää8 =
,
ää= >
	SqlDbType
ää? H
.
ääH I
Int
ääI L
,
ääL M
$num
ääN O
)
ääO P
;
ääP Q
idParam
ãã 
.
ãã 
Value
ãã 
=
ãã 
id
ãã  "
;
ãã" #
preparedStatement
åå !
.
åå! "
ExecuteNonQuery
åå" 1
(
åå1 2
)
åå2 3
;
åå3 4
}
çç 
IO
èè 
.
èè 
WriteString
èè 
(
èè 
$str
èè 7
+
èè8 9
data
èè: >
+
èè? @
$str
èèA E
)
èèE F
;
èèF G
}
êê 	
catch
ëë 
(
ëë 
SqlException
ëë 
	exceptSql
ëë %
)
ëë% &
{
íí 	
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì 
(
ìì 
NLog
ìì 
.
ìì 
LogLevel
ìì '
.
ìì' (
Warn
ìì( ,
,
ìì, -
	exceptSql
ìì. 7
,
ìì7 8
$str
ìì9 P
)
ììP Q
;
ììQ R
}
îî 	
finally
ïï 
{
ññ 	
try
óó 
{
òò 
if
ôô 
(
ôô 
dBConnection
ôô  
!=
ôô! #
null
ôô$ (
)
ôô( )
{
öö 
dBConnection
õõ  
.
õõ  !
Close
õõ! &
(
õõ& '
)
õõ' (
;
õõ( )
}
úú 
}
ùù 
catch
ûû 
(
ûû 
SqlException
ûû 
	exceptSql
ûû  )
)
ûû) *
{
üü 
IO
†† 
.
†† 
Logger
†† 
.
†† 
Log
†† 
(
†† 
NLog
†† "
.
††" #
LogLevel
††# +
.
††+ ,
Warn
††, 0
,
††0 1
	exceptSql
††2 ;
,
††; <
$str
††= Y
)
††Y Z
;
††Z [
}
°° 
}
¢¢ 	
}
££ 
private
¶¶ 
void
¶¶ 
GoodG2B2
¶¶ 
(
¶¶ 
HttpRequest
¶¶ %
req
¶¶& )
,
¶¶) *
HttpResponse
¶¶+ 7
resp
¶¶8 <
)
¶¶< =
{
ßß 
string
®® 
data
®® 
;
®® 
if
©© 

(
©©  
PrivateReturnsTrue
©© 
(
©© 
)
©©  
)
©©  !
{
™™ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
}
≠≠ 	
else
ÆÆ 
{
ØØ 	
data
≤≤ 
=
≤≤ 
null
≤≤ 
;
≤≤ 
}
≥≥ 	
SqlConnection
¥¥ 
dBConnection
¥¥ "
=
¥¥# $
IO
¥¥% '
.
¥¥' (
GetDBConnection
¥¥( 7
(
¥¥7 8
)
¥¥8 9
;
¥¥9 :

SqlCommand
µµ 
preparedStatement
µµ $
=
µµ% &
null
µµ' +
;
µµ+ ,
int
∂∂ 
id
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
try
∑∑ 
{
∏∏ 	
id
ππ 
=
ππ 
int
ππ 
.
ππ 
Parse
ππ 
(
ππ 
data
ππ 
)
ππ  
;
ππ  !
}
∫∫ 	
catch
ªª 
(
ªª 
FormatException
ªª 
nfx
ªª "
)
ªª" #
{
ºº 	
IO
ΩΩ 
.
ΩΩ 
Logger
ΩΩ 
.
ΩΩ 
Log
ΩΩ 
(
ΩΩ 
NLog
ΩΩ 
.
ΩΩ 
LogLevel
ΩΩ '
.
ΩΩ' (
Warn
ΩΩ( ,
,
ΩΩ, -
nfx
ΩΩ. 1
,
ΩΩ1 2
$str
ΩΩ3 W
)
ΩΩW X
;
ΩΩX Y
id
ææ 
=
ææ 
-
ææ 
$num
ææ 
;
ææ 
}
øø 	
try
¿¿ 
{
¡¡ 	
dBConnection
¬¬ 
.
¬¬ 
Open
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬  
using
√√ 
(
√√ 
preparedStatement
√√ $
=
√√% &
new
√√' *

SqlCommand
√√+ 5
(
√√5 6
null
√√6 :
,
√√: ;
dBConnection
√√< H
)
√√H I
)
√√I J
{
ƒƒ 
preparedStatement
≈≈ !
.
≈≈! "
CommandText
≈≈" -
=
≈≈. /
$str
≈≈0 V
;
≈≈V W
SqlParameter
∆∆ 
idParam
∆∆ $
=
∆∆% &
new
∆∆' *
SqlParameter
∆∆+ 7
(
∆∆7 8
$str
∆∆8 =
,
∆∆= >
	SqlDbType
∆∆? H
.
∆∆H I
Int
∆∆I L
,
∆∆L M
$num
∆∆N O
)
∆∆O P
;
∆∆P Q
idParam
«« 
.
«« 
Value
«« 
=
«« 
id
««  "
;
««" #
preparedStatement
»» !
.
»»! "
ExecuteNonQuery
»»" 1
(
»»1 2
)
»»2 3
;
»»3 4
}
…… 
IO
ÀÀ 
.
ÀÀ 
WriteString
ÀÀ 
(
ÀÀ 
$str
ÀÀ 7
+
ÀÀ8 9
data
ÀÀ: >
+
ÀÀ? @
$str
ÀÀA E
)
ÀÀE F
;
ÀÀF G
}
ÃÃ 	
catch
ÕÕ 
(
ÕÕ 
SqlException
ÕÕ 
	exceptSql
ÕÕ %
)
ÕÕ% &
{
ŒŒ 	
IO
œœ 
.
œœ 
Logger
œœ 
.
œœ 
Log
œœ 
(
œœ 
NLog
œœ 
.
œœ 
LogLevel
œœ '
.
œœ' (
Warn
œœ( ,
,
œœ, -
	exceptSql
œœ. 7
,
œœ7 8
$str
œœ9 P
)
œœP Q
;
œœQ R
}
–– 	
finally
—— 
{
““ 	
try
”” 
{
‘‘ 
if
’’ 
(
’’ 
dBConnection
’’  
!=
’’! #
null
’’$ (
)
’’( )
{
÷÷ 
dBConnection
◊◊  
.
◊◊  !
Close
◊◊! &
(
◊◊& '
)
◊◊' (
;
◊◊( )
}
ÿÿ 
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
SqlException
⁄⁄ 
	exceptSql
⁄⁄  )
)
⁄⁄) *
{
€€ 
IO
‹‹ 
.
‹‹ 
Logger
‹‹ 
.
‹‹ 
Log
‹‹ 
(
‹‹ 
NLog
‹‹ "
.
‹‹" #
LogLevel
‹‹# +
.
‹‹+ ,
Warn
‹‹, 0
,
‹‹0 1
	exceptSql
‹‹2 ;
,
‹‹; <
$str
‹‹= Y
)
‹‹Y Z
;
‹‹Z [
}
›› 
}
ﬁﬁ 	
}
ﬂﬂ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
‚‚ 
GoodG2B1
„„ 
(
„„ 
req
„„ 
,
„„ 
resp
„„ 
)
„„ 
;
„„ 
GoodG2B2
‰‰ 
(
‰‰ 
req
‰‰ 
,
‰‰ 
resp
‰‰ 
)
‰‰ 
;
‰‰ 
}
ÂÂ 
}ÁÁ 
}ËË ﬂk
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_09.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_09 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_TRUE"" #
)""# $
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
SqlConnection-- 
dBConnection-- "
=--# $
IO--% '
.--' (
GetDBConnection--( 7
(--7 8
)--8 9
;--9 :

SqlCommand.. 
preparedStatement.. $
=..% &
null..' +
;..+ ,
int// 
id// 
=// 
$num// 
;// 
try00 
{11 	
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 
)22  
;22  !
}33 	
catch44 
(44 
FormatException44 
nfx44 "
)44" #
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
nfx66. 1
,661 2
$str663 W
)66W X
;66X Y
id77 
=77 
-77 
$num77 
;77 
}88 	
try99 
{:: 	
dBConnection;; 
.;; 
Open;; 
(;; 
);; 
;;;  
using<< 
(<< 
preparedStatement<< $
=<<% &
new<<' *

SqlCommand<<+ 5
(<<5 6
null<<6 :
,<<: ;
dBConnection<<< H
)<<H I
)<<I J
{== 
preparedStatement>> !
.>>! "
CommandText>>" -
=>>. /
$str>>0 V
;>>V W
SqlParameter?? 
idParam?? $
=??% &
new??' *
SqlParameter??+ 7
(??7 8
$str??8 =
,??= >
	SqlDbType??? H
.??H I
Int??I L
,??L M
$num??N O
)??O P
;??P Q
idParam@@ 
.@@ 
Value@@ 
=@@ 
id@@  "
;@@" #
preparedStatementAA !
.AA! "
ExecuteNonQueryAA" 1
(AA1 2
)AA2 3
;AA3 4
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD 7
+DD8 9
dataDD: >
+DD? @
$strDDA E
)DDE F
;DDF G
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
	exceptSqlHH. 7
,HH7 8
$strHH9 P
)HHP Q
;HHQ R
}II 	
finallyJJ 
{KK 	
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
dBConnectionPP  
.PP  !
ClosePP! &
(PP& '
)PP' (
;PP( )
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS 
	exceptSqlSS  )
)SS) *
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
	exceptSqlUU2 ;
,UU; <
$strUU= Y
)UUY Z
;UUZ [
}VV 
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
IO__ 
.__ !
STATIC_READONLY_FALSE__ $
)__$ %
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
SqlConnectionjj 
dBConnectionjj "
=jj# $
IOjj% '
.jj' (
GetDBConnectionjj( 7
(jj7 8
)jj8 9
;jj9 :

SqlCommandkk 
preparedStatementkk $
=kk% &
nullkk' +
;kk+ ,
intll 
idll 
=ll 
$numll 
;ll 
trymm 
{nn 	
idoo 
=oo 
intoo 
.oo 
Parseoo 
(oo 
dataoo 
)oo  
;oo  !
}pp 	
catchqq 
(qq 
FormatExceptionqq 
nfxqq "
)qq" #
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
nfxss. 1
,ss1 2
$strss3 W
)ssW X
;ssX Y
idtt 
=tt 
-tt 
$numtt 
;tt 
}uu 	
tryvv 
{ww 	
dBConnectionxx 
.xx 
Openxx 
(xx 
)xx 
;xx  
usingyy 
(yy 
preparedStatementyy $
=yy% &
newyy' *

SqlCommandyy+ 5
(yy5 6
nullyy6 :
,yy: ;
dBConnectionyy< H
)yyH I
)yyI J
{zz 
preparedStatement{{ !
.{{! "
CommandText{{" -
={{. /
$str{{0 V
;{{V W
SqlParameter|| 
idParam|| $
=||% &
new||' *
SqlParameter||+ 7
(||7 8
$str||8 =
,||= >
	SqlDbType||? H
.||H I
Int||I L
,||L M
$num||N O
)||O P
;||P Q
idParam}} 
.}} 
Value}} 
=}} 
id}}  "
;}}" #
preparedStatement~~ !
.~~! "
ExecuteNonQuery~~" 1
(~~1 2
)~~2 3
;~~3 4
} 
IO
ÅÅ 
.
ÅÅ 
WriteString
ÅÅ 
(
ÅÅ 
$str
ÅÅ 7
+
ÅÅ8 9
data
ÅÅ: >
+
ÅÅ? @
$str
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÇÇ 	
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ %
)
ÉÉ% &
{
ÑÑ 	
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ 
.
ÖÖ 
LogLevel
ÖÖ '
.
ÖÖ' (
Warn
ÖÖ( ,
,
ÖÖ, -
	exceptSql
ÖÖ. 7
,
ÖÖ7 8
$str
ÖÖ9 P
)
ÖÖP Q
;
ÖÖQ R
}
ÜÜ 	
finally
áá 
{
àà 	
try
ââ 
{
ää 
if
ãã 
(
ãã 
dBConnection
ãã  
!=
ãã! #
null
ãã$ (
)
ãã( )
{
åå 
dBConnection
çç  
.
çç  !
Close
çç! &
(
çç& '
)
çç' (
;
çç( )
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
	exceptSql
íí2 ;
,
íí; <
$str
íí= Y
)
ííY Z
;
ííZ [
}
ìì 
}
îî 	
}
ïï 
private
òò 
void
òò 
GoodG2B2
òò 
(
òò 
HttpRequest
òò %
req
òò& )
,
òò) *
HttpResponse
òò+ 7
resp
òò8 <
)
òò< =
{
ôô 
string
öö 
data
öö 
;
öö 
if
õõ 

(
õõ 
IO
õõ 
.
õõ "
STATIC_READONLY_TRUE
õõ #
)
õõ# $
{
úú 	
data
ûû 
=
ûû 
$str
ûû 
;
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
SqlConnection
¶¶ 
dBConnection
¶¶ "
=
¶¶# $
IO
¶¶% '
.
¶¶' (
GetDBConnection
¶¶( 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :

SqlCommand
ßß 
preparedStatement
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
int
®® 
id
®® 
=
®® 
$num
®® 
;
®® 
try
©© 
{
™™ 	
id
´´ 
=
´´ 
int
´´ 
.
´´ 
Parse
´´ 
(
´´ 
data
´´ 
)
´´  
;
´´  !
}
¨¨ 	
catch
≠≠ 
(
≠≠ 
FormatException
≠≠ 
nfx
≠≠ "
)
≠≠" #
{
ÆÆ 	
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ 
.
ØØ 
LogLevel
ØØ '
.
ØØ' (
Warn
ØØ( ,
,
ØØ, -
nfx
ØØ. 1
,
ØØ1 2
$str
ØØ3 W
)
ØØW X
;
ØØX Y
id
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
±± 	
try
≤≤ 
{
≥≥ 	
dBConnection
¥¥ 
.
¥¥ 
Open
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
using
µµ 
(
µµ 
preparedStatement
µµ $
=
µµ% &
new
µµ' *

SqlCommand
µµ+ 5
(
µµ5 6
null
µµ6 :
,
µµ: ;
dBConnection
µµ< H
)
µµH I
)
µµI J
{
∂∂ 
preparedStatement
∑∑ !
.
∑∑! "
CommandText
∑∑" -
=
∑∑. /
$str
∑∑0 V
;
∑∑V W
SqlParameter
∏∏ 
idParam
∏∏ $
=
∏∏% &
new
∏∏' *
SqlParameter
∏∏+ 7
(
∏∏7 8
$str
∏∏8 =
,
∏∏= >
	SqlDbType
∏∏? H
.
∏∏H I
Int
∏∏I L
,
∏∏L M
$num
∏∏N O
)
∏∏O P
;
∏∏P Q
idParam
ππ 
.
ππ 
Value
ππ 
=
ππ 
id
ππ  "
;
ππ" #
preparedStatement
∫∫ !
.
∫∫! "
ExecuteNonQuery
∫∫" 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
IO
ΩΩ 
.
ΩΩ 
WriteString
ΩΩ 
(
ΩΩ 
$str
ΩΩ 7
+
ΩΩ8 9
data
ΩΩ: >
+
ΩΩ? @
$str
ΩΩA E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø %
)
øø% &
{
¿¿ 	
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ 
.
¡¡ 
LogLevel
¡¡ '
.
¡¡' (
Warn
¡¡( ,
,
¡¡, -
	exceptSql
¡¡. 7
,
¡¡7 8
$str
¡¡9 P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 	
finally
√√ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
dBConnection
««  
!=
««! #
null
««$ (
)
««( )
{
»» 
dBConnection
……  
.
……  !
Close
……! &
(
……& '
)
……' (
;
……( )
}
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
SqlException
ÃÃ 
	exceptSql
ÃÃ  )
)
ÃÃ) *
{
ÕÕ 
IO
ŒŒ 
.
ŒŒ 
Logger
ŒŒ 
.
ŒŒ 
Log
ŒŒ 
(
ŒŒ 
NLog
ŒŒ "
.
ŒŒ" #
LogLevel
ŒŒ# +
.
ŒŒ+ ,
Warn
ŒŒ, 0
,
ŒŒ0 1
	exceptSql
ŒŒ2 ;
,
ŒŒ; <
$str
ŒŒ= Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
}
–– 	
}
—— 
public
”” 

override
”” 
void
”” 
Good
”” 
(
”” 
HttpRequest
”” )
req
””* -
,
””- .
HttpResponse
””/ ;
resp
””< @
)
””@ A
{
‘‘ 
GoodG2B1
’’ 
(
’’ 
req
’’ 
,
’’ 
resp
’’ 
)
’’ 
;
’’ 
GoodG2B2
÷÷ 
(
÷÷ 
req
÷÷ 
,
÷÷ 
resp
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ŸŸ 
}⁄⁄ ¡k
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_10.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_10 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticTrue"" 
)"" 
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
SqlConnection-- 
dBConnection-- "
=--# $
IO--% '
.--' (
GetDBConnection--( 7
(--7 8
)--8 9
;--9 :

SqlCommand.. 
preparedStatement.. $
=..% &
null..' +
;..+ ,
int// 
id// 
=// 
$num// 
;// 
try00 
{11 	
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 
)22  
;22  !
}33 	
catch44 
(44 
FormatException44 
nfx44 "
)44" #
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
nfx66. 1
,661 2
$str663 W
)66W X
;66X Y
id77 
=77 
-77 
$num77 
;77 
}88 	
try99 
{:: 	
dBConnection;; 
.;; 
Open;; 
(;; 
);; 
;;;  
using<< 
(<< 
preparedStatement<< $
=<<% &
new<<' *

SqlCommand<<+ 5
(<<5 6
null<<6 :
,<<: ;
dBConnection<<< H
)<<H I
)<<I J
{== 
preparedStatement>> !
.>>! "
CommandText>>" -
=>>. /
$str>>0 V
;>>V W
SqlParameter?? 
idParam?? $
=??% &
new??' *
SqlParameter??+ 7
(??7 8
$str??8 =
,??= >
	SqlDbType??? H
.??H I
Int??I L
,??L M
$num??N O
)??O P
;??P Q
idParam@@ 
.@@ 
Value@@ 
=@@ 
id@@  "
;@@" #
preparedStatementAA !
.AA! "
ExecuteNonQueryAA" 1
(AA1 2
)AA2 3
;AA3 4
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD 7
+DD8 9
dataDD: >
+DD? @
$strDDA E
)DDE F
;DDF G
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
	exceptSqlHH. 7
,HH7 8
$strHH9 P
)HHP Q
;HHQ R
}II 	
finallyJJ 
{KK 	
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
dBConnectionPP  
.PP  !
ClosePP! &
(PP& '
)PP' (
;PP( )
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS 
	exceptSqlSS  )
)SS) *
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
	exceptSqlUU2 ;
,UU; <
$strUU= Y
)UUY Z
;UUZ [
}VV 
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
IO__ 
.__ 
staticFalse__ 
)__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
SqlConnectionjj 
dBConnectionjj "
=jj# $
IOjj% '
.jj' (
GetDBConnectionjj( 7
(jj7 8
)jj8 9
;jj9 :

SqlCommandkk 
preparedStatementkk $
=kk% &
nullkk' +
;kk+ ,
intll 
idll 
=ll 
$numll 
;ll 
trymm 
{nn 	
idoo 
=oo 
intoo 
.oo 
Parseoo 
(oo 
dataoo 
)oo  
;oo  !
}pp 	
catchqq 
(qq 
FormatExceptionqq 
nfxqq "
)qq" #
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
nfxss. 1
,ss1 2
$strss3 W
)ssW X
;ssX Y
idtt 
=tt 
-tt 
$numtt 
;tt 
}uu 	
tryvv 
{ww 	
dBConnectionxx 
.xx 
Openxx 
(xx 
)xx 
;xx  
usingyy 
(yy 
preparedStatementyy $
=yy% &
newyy' *

SqlCommandyy+ 5
(yy5 6
nullyy6 :
,yy: ;
dBConnectionyy< H
)yyH I
)yyI J
{zz 
preparedStatement{{ !
.{{! "
CommandText{{" -
={{. /
$str{{0 V
;{{V W
SqlParameter|| 
idParam|| $
=||% &
new||' *
SqlParameter||+ 7
(||7 8
$str||8 =
,||= >
	SqlDbType||? H
.||H I
Int||I L
,||L M
$num||N O
)||O P
;||P Q
idParam}} 
.}} 
Value}} 
=}} 
id}}  "
;}}" #
preparedStatement~~ !
.~~! "
ExecuteNonQuery~~" 1
(~~1 2
)~~2 3
;~~3 4
} 
IO
ÅÅ 
.
ÅÅ 
WriteString
ÅÅ 
(
ÅÅ 
$str
ÅÅ 7
+
ÅÅ8 9
data
ÅÅ: >
+
ÅÅ? @
$str
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÇÇ 	
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ %
)
ÉÉ% &
{
ÑÑ 	
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ 
.
ÖÖ 
LogLevel
ÖÖ '
.
ÖÖ' (
Warn
ÖÖ( ,
,
ÖÖ, -
	exceptSql
ÖÖ. 7
,
ÖÖ7 8
$str
ÖÖ9 P
)
ÖÖP Q
;
ÖÖQ R
}
ÜÜ 	
finally
áá 
{
àà 	
try
ââ 
{
ää 
if
ãã 
(
ãã 
dBConnection
ãã  
!=
ãã! #
null
ãã$ (
)
ãã( )
{
åå 
dBConnection
çç  
.
çç  !
Close
çç! &
(
çç& '
)
çç' (
;
çç( )
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
	exceptSql
íí2 ;
,
íí; <
$str
íí= Y
)
ííY Z
;
ííZ [
}
ìì 
}
îî 	
}
ïï 
private
òò 
void
òò 
GoodG2B2
òò 
(
òò 
HttpRequest
òò %
req
òò& )
,
òò) *
HttpResponse
òò+ 7
resp
òò8 <
)
òò< =
{
ôô 
string
öö 
data
öö 
;
öö 
if
õõ 

(
õõ 
IO
õõ 
.
õõ 

staticTrue
õõ 
)
õõ 
{
úú 	
data
ûû 
=
ûû 
$str
ûû 
;
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
SqlConnection
¶¶ 
dBConnection
¶¶ "
=
¶¶# $
IO
¶¶% '
.
¶¶' (
GetDBConnection
¶¶( 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :

SqlCommand
ßß 
preparedStatement
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
int
®® 
id
®® 
=
®® 
$num
®® 
;
®® 
try
©© 
{
™™ 	
id
´´ 
=
´´ 
int
´´ 
.
´´ 
Parse
´´ 
(
´´ 
data
´´ 
)
´´  
;
´´  !
}
¨¨ 	
catch
≠≠ 
(
≠≠ 
FormatException
≠≠ 
nfx
≠≠ "
)
≠≠" #
{
ÆÆ 	
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ 
.
ØØ 
LogLevel
ØØ '
.
ØØ' (
Warn
ØØ( ,
,
ØØ, -
nfx
ØØ. 1
,
ØØ1 2
$str
ØØ3 W
)
ØØW X
;
ØØX Y
id
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
±± 	
try
≤≤ 
{
≥≥ 	
dBConnection
¥¥ 
.
¥¥ 
Open
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
using
µµ 
(
µµ 
preparedStatement
µµ $
=
µµ% &
new
µµ' *

SqlCommand
µµ+ 5
(
µµ5 6
null
µµ6 :
,
µµ: ;
dBConnection
µµ< H
)
µµH I
)
µµI J
{
∂∂ 
preparedStatement
∑∑ !
.
∑∑! "
CommandText
∑∑" -
=
∑∑. /
$str
∑∑0 V
;
∑∑V W
SqlParameter
∏∏ 
idParam
∏∏ $
=
∏∏% &
new
∏∏' *
SqlParameter
∏∏+ 7
(
∏∏7 8
$str
∏∏8 =
,
∏∏= >
	SqlDbType
∏∏? H
.
∏∏H I
Int
∏∏I L
,
∏∏L M
$num
∏∏N O
)
∏∏O P
;
∏∏P Q
idParam
ππ 
.
ππ 
Value
ππ 
=
ππ 
id
ππ  "
;
ππ" #
preparedStatement
∫∫ !
.
∫∫! "
ExecuteNonQuery
∫∫" 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
IO
ΩΩ 
.
ΩΩ 
WriteString
ΩΩ 
(
ΩΩ 
$str
ΩΩ 7
+
ΩΩ8 9
data
ΩΩ: >
+
ΩΩ? @
$str
ΩΩA E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø %
)
øø% &
{
¿¿ 	
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ 
.
¡¡ 
LogLevel
¡¡ '
.
¡¡' (
Warn
¡¡( ,
,
¡¡, -
	exceptSql
¡¡. 7
,
¡¡7 8
$str
¡¡9 P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 	
finally
√√ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
dBConnection
««  
!=
««! #
null
««$ (
)
««( )
{
»» 
dBConnection
……  
.
……  !
Close
……! &
(
……& '
)
……' (
;
……( )
}
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
SqlException
ÃÃ 
	exceptSql
ÃÃ  )
)
ÃÃ) *
{
ÕÕ 
IO
ŒŒ 
.
ŒŒ 
Logger
ŒŒ 
.
ŒŒ 
Log
ŒŒ 
(
ŒŒ 
NLog
ŒŒ "
.
ŒŒ" #
LogLevel
ŒŒ# +
.
ŒŒ+ ,
Warn
ŒŒ, 0
,
ŒŒ0 1
	exceptSql
ŒŒ2 ;
,
ŒŒ; <
$str
ŒŒ= Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
}
–– 	
}
—— 
public
”” 

override
”” 
void
”” 
Good
”” 
(
”” 
HttpRequest
”” )
req
””* -
,
””- .
HttpResponse
””/ ;
resp
””< @
)
””@ A
{
‘‘ 
GoodG2B1
’’ 
(
’’ 
req
’’ 
,
’’ 
resp
’’ 
)
’’ 
;
’’ 
GoodG2B2
÷÷ 
(
÷÷ 
req
÷÷ 
,
÷÷ 
resp
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ŸŸ 
}⁄⁄ ¥l
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_11.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_11 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 
StaticReturnsTrue""  
(""  !
)""! "
)""" #
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
SqlConnection-- 
dBConnection-- "
=--# $
IO--% '
.--' (
GetDBConnection--( 7
(--7 8
)--8 9
;--9 :

SqlCommand.. 
preparedStatement.. $
=..% &
null..' +
;..+ ,
int// 
id// 
=// 
$num// 
;// 
try00 
{11 	
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 
)22  
;22  !
}33 	
catch44 
(44 
FormatException44 
nfx44 "
)44" #
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
nfx66. 1
,661 2
$str663 W
)66W X
;66X Y
id77 
=77 
-77 
$num77 
;77 
}88 	
try99 
{:: 	
dBConnection;; 
.;; 
Open;; 
(;; 
);; 
;;;  
using<< 
(<< 
preparedStatement<< $
=<<% &
new<<' *

SqlCommand<<+ 5
(<<5 6
null<<6 :
,<<: ;
dBConnection<<< H
)<<H I
)<<I J
{== 
preparedStatement>> !
.>>! "
CommandText>>" -
=>>. /
$str>>0 V
;>>V W
SqlParameter?? 
idParam?? $
=??% &
new??' *
SqlParameter??+ 7
(??7 8
$str??8 =
,??= >
	SqlDbType??? H
.??H I
Int??I L
,??L M
$num??N O
)??O P
;??P Q
idParam@@ 
.@@ 
Value@@ 
=@@ 
id@@  "
;@@" #
preparedStatementAA !
.AA! "
ExecuteNonQueryAA" 1
(AA1 2
)AA2 3
;AA3 4
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD 7
+DD8 9
dataDD: >
+DD? @
$strDDA E
)DDE F
;DDF G
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
	exceptSqlHH. 7
,HH7 8
$strHH9 P
)HHP Q
;HHQ R
}II 	
finallyJJ 
{KK 	
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
dBConnectionPP  
.PP  !
ClosePP! &
(PP& '
)PP' (
;PP( )
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS 
	exceptSqlSS  )
)SS) *
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
	exceptSqlUU2 ;
,UU; <
$strUU= Y
)UUY Z
;UUZ [
}VV 
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
IO__ 
.__ 
StaticReturnsFalse__ !
(__! "
)__" #
)__# $
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
SqlConnectionjj 
dBConnectionjj "
=jj# $
IOjj% '
.jj' (
GetDBConnectionjj( 7
(jj7 8
)jj8 9
;jj9 :

SqlCommandkk 
preparedStatementkk $
=kk% &
nullkk' +
;kk+ ,
intll 
idll 
=ll 
$numll 
;ll 
trymm 
{nn 	
idoo 
=oo 
intoo 
.oo 
Parseoo 
(oo 
dataoo 
)oo  
;oo  !
}pp 	
catchqq 
(qq 
FormatExceptionqq 
nfxqq "
)qq" #
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
nfxss. 1
,ss1 2
$strss3 W
)ssW X
;ssX Y
idtt 
=tt 
-tt 
$numtt 
;tt 
}uu 	
tryvv 
{ww 	
dBConnectionxx 
.xx 
Openxx 
(xx 
)xx 
;xx  
usingyy 
(yy 
preparedStatementyy $
=yy% &
newyy' *

SqlCommandyy+ 5
(yy5 6
nullyy6 :
,yy: ;
dBConnectionyy< H
)yyH I
)yyI J
{zz 
preparedStatement{{ !
.{{! "
CommandText{{" -
={{. /
$str{{0 V
;{{V W
SqlParameter|| 
idParam|| $
=||% &
new||' *
SqlParameter||+ 7
(||7 8
$str||8 =
,||= >
	SqlDbType||? H
.||H I
Int||I L
,||L M
$num||N O
)||O P
;||P Q
idParam}} 
.}} 
Value}} 
=}} 
id}}  "
;}}" #
preparedStatement~~ !
.~~! "
ExecuteNonQuery~~" 1
(~~1 2
)~~2 3
;~~3 4
} 
IO
ÅÅ 
.
ÅÅ 
WriteString
ÅÅ 
(
ÅÅ 
$str
ÅÅ 7
+
ÅÅ8 9
data
ÅÅ: >
+
ÅÅ? @
$str
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÇÇ 	
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ %
)
ÉÉ% &
{
ÑÑ 	
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ 
.
ÖÖ 
LogLevel
ÖÖ '
.
ÖÖ' (
Warn
ÖÖ( ,
,
ÖÖ, -
	exceptSql
ÖÖ. 7
,
ÖÖ7 8
$str
ÖÖ9 P
)
ÖÖP Q
;
ÖÖQ R
}
ÜÜ 	
finally
áá 
{
àà 	
try
ââ 
{
ää 
if
ãã 
(
ãã 
dBConnection
ãã  
!=
ãã! #
null
ãã$ (
)
ãã( )
{
åå 
dBConnection
çç  
.
çç  !
Close
çç! &
(
çç& '
)
çç' (
;
çç( )
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
	exceptSql
íí2 ;
,
íí; <
$str
íí= Y
)
ííY Z
;
ííZ [
}
ìì 
}
îî 	
}
ïï 
private
òò 
void
òò 
GoodG2B2
òò 
(
òò 
HttpRequest
òò %
req
òò& )
,
òò) *
HttpResponse
òò+ 7
resp
òò8 <
)
òò< =
{
ôô 
string
öö 
data
öö 
;
öö 
if
õõ 

(
õõ 
IO
õõ 
.
õõ 
StaticReturnsTrue
õõ  
(
õõ  !
)
õõ! "
)
õõ" #
{
úú 	
data
ûû 
=
ûû 
$str
ûû 
;
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
SqlConnection
¶¶ 
dBConnection
¶¶ "
=
¶¶# $
IO
¶¶% '
.
¶¶' (
GetDBConnection
¶¶( 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :

SqlCommand
ßß 
preparedStatement
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
int
®® 
id
®® 
=
®® 
$num
®® 
;
®® 
try
©© 
{
™™ 	
id
´´ 
=
´´ 
int
´´ 
.
´´ 
Parse
´´ 
(
´´ 
data
´´ 
)
´´  
;
´´  !
}
¨¨ 	
catch
≠≠ 
(
≠≠ 
FormatException
≠≠ 
nfx
≠≠ "
)
≠≠" #
{
ÆÆ 	
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ 
.
ØØ 
LogLevel
ØØ '
.
ØØ' (
Warn
ØØ( ,
,
ØØ, -
nfx
ØØ. 1
,
ØØ1 2
$str
ØØ3 W
)
ØØW X
;
ØØX Y
id
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
±± 	
try
≤≤ 
{
≥≥ 	
dBConnection
¥¥ 
.
¥¥ 
Open
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
using
µµ 
(
µµ 
preparedStatement
µµ $
=
µµ% &
new
µµ' *

SqlCommand
µµ+ 5
(
µµ5 6
null
µµ6 :
,
µµ: ;
dBConnection
µµ< H
)
µµH I
)
µµI J
{
∂∂ 
preparedStatement
∑∑ !
.
∑∑! "
CommandText
∑∑" -
=
∑∑. /
$str
∑∑0 V
;
∑∑V W
SqlParameter
∏∏ 
idParam
∏∏ $
=
∏∏% &
new
∏∏' *
SqlParameter
∏∏+ 7
(
∏∏7 8
$str
∏∏8 =
,
∏∏= >
	SqlDbType
∏∏? H
.
∏∏H I
Int
∏∏I L
,
∏∏L M
$num
∏∏N O
)
∏∏O P
;
∏∏P Q
idParam
ππ 
.
ππ 
Value
ππ 
=
ππ 
id
ππ  "
;
ππ" #
preparedStatement
∫∫ !
.
∫∫! "
ExecuteNonQuery
∫∫" 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
IO
ΩΩ 
.
ΩΩ 
WriteString
ΩΩ 
(
ΩΩ 
$str
ΩΩ 7
+
ΩΩ8 9
data
ΩΩ: >
+
ΩΩ? @
$str
ΩΩA E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø %
)
øø% &
{
¿¿ 	
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ 
.
¡¡ 
LogLevel
¡¡ '
.
¡¡' (
Warn
¡¡( ,
,
¡¡, -
	exceptSql
¡¡. 7
,
¡¡7 8
$str
¡¡9 P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 	
finally
√√ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
dBConnection
««  
!=
««! #
null
««$ (
)
««( )
{
»» 
dBConnection
……  
.
……  !
Close
……! &
(
……& '
)
……' (
;
……( )
}
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
SqlException
ÃÃ 
	exceptSql
ÃÃ  )
)
ÃÃ) *
{
ÕÕ 
IO
ŒŒ 
.
ŒŒ 
Logger
ŒŒ 
.
ŒŒ 
Log
ŒŒ 
(
ŒŒ 
NLog
ŒŒ "
.
ŒŒ" #
LogLevel
ŒŒ# +
.
ŒŒ+ ,
Warn
ŒŒ, 0
,
ŒŒ0 1
	exceptSql
ŒŒ2 ;
,
ŒŒ; <
$str
ŒŒ= Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
}
–– 	
}
—— 
public
”” 

override
”” 
void
”” 
Good
”” 
(
”” 
HttpRequest
”” )
req
””* -
,
””- .
HttpResponse
””/ ;
resp
””< @
)
””@ A
{
‘‘ 
GoodG2B1
’’ 
(
’’ 
req
’’ 
,
’’ 
resp
’’ 
)
’’ 
;
’’ 
GoodG2B2
÷÷ 
(
÷÷ 
req
÷÷ 
,
÷÷ 
resp
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ŸŸ 
}⁄⁄ ≤H
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_12.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_12 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" $
StaticReturnsTrueOrFalse"" '
(""' (
)""( )
)"") *
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data** 
=** 
$str** 
;** 
}++ 	
SqlConnection,, 
dBConnection,, "
=,,# $
IO,,% '
.,,' (
GetDBConnection,,( 7
(,,7 8
),,8 9
;,,9 :

SqlCommand-- 
preparedStatement-- $
=--% &
null--' +
;--+ ,
int.. 
id.. 
=.. 
$num.. 
;.. 
try// 
{00 	
id11 
=11 
int11 
.11 
Parse11 
(11 
data11 
)11  
;11  !
}22 	
catch33 
(33 
FormatException33 
nfx33 "
)33" #
{44 	
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 
.55 
LogLevel55 '
.55' (
Warn55( ,
,55, -
nfx55. 1
,551 2
$str553 W
)55W X
;55X Y
id66 
=66 
-66 
$num66 
;66 
}77 	
try88 
{99 	
dBConnection:: 
.:: 
Open:: 
(:: 
):: 
;::  
using;; 
(;; 
preparedStatement;; $
=;;% &
new;;' *

SqlCommand;;+ 5
(;;5 6
null;;6 :
,;;: ;
dBConnection;;< H
);;H I
);;I J
{<< 
preparedStatement== !
.==! "
CommandText==" -
===. /
$str==0 V
;==V W
SqlParameter>> 
idParam>> $
=>>% &
new>>' *
SqlParameter>>+ 7
(>>7 8
$str>>8 =
,>>= >
	SqlDbType>>? H
.>>H I
Int>>I L
,>>L M
$num>>N O
)>>O P
;>>P Q
idParam?? 
.?? 
Value?? 
=?? 
id??  "
;??" #
preparedStatement@@ !
.@@! "
ExecuteNonQuery@@" 1
(@@1 2
)@@2 3
;@@3 4
}AA 
IOCC 
.CC 
WriteStringCC 
(CC 
$strCC 7
+CC8 9
dataCC: >
+CC? @
$strCCA E
)CCE F
;CCF G
}DD 	
catchEE 
(EE 
SqlExceptionEE 
	exceptSqlEE %
)EE% &
{FF 	
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG 
.GG 
LogLevelGG '
.GG' (
WarnGG( ,
,GG, -
	exceptSqlGG. 7
,GG7 8
$strGG9 P
)GGP Q
;GGQ R
}HH 	
finallyII 
{JJ 	
tryKK 
{LL 
ifMM 
(MM 
dBConnectionMM  
!=MM! #
nullMM$ (
)MM( )
{NN 
dBConnectionOO  
.OO  !
CloseOO! &
(OO& '
)OO' (
;OO( )
}PP 
}QQ 
catchRR 
(RR 
SqlExceptionRR 
	exceptSqlRR  )
)RR) *
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
	exceptSqlTT2 ;
,TT; <
$strTT= Y
)TTY Z
;TTZ [
}UU 
}VV 	
}WW 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
HttpRequest\\ $
req\\% (
,\\( )
HttpResponse\\* 6
resp\\7 ;
)\\; <
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
IO__ 
.__ $
StaticReturnsTrueOrFalse__ '
(__' (
)__( )
)__) *
{`` 	
databb 
=bb 
$strbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$strgg 
;gg 
}hh 	
SqlConnectionii 
dBConnectionii "
=ii# $
IOii% '
.ii' (
GetDBConnectionii( 7
(ii7 8
)ii8 9
;ii9 :

SqlCommandjj 
preparedStatementjj $
=jj% &
nulljj' +
;jj+ ,
intkk 
idkk 
=kk 
$numkk 
;kk 
tryll 
{mm 	
idnn 
=nn 
intnn 
.nn 
Parsenn 
(nn 
datann 
)nn  
;nn  !
}oo 	
catchpp 
(pp 
FormatExceptionpp 
nfxpp "
)pp" #
{qq 	
IOrr 
.rr 
Loggerrr 
.rr 
Logrr 
(rr 
NLogrr 
.rr 
LogLevelrr '
.rr' (
Warnrr( ,
,rr, -
nfxrr. 1
,rr1 2
$strrr3 W
)rrW X
;rrX Y
idss 
=ss 
-ss 
$numss 
;ss 
}tt 	
tryuu 
{vv 	
dBConnectionww 
.ww 
Openww 
(ww 
)ww 
;ww  
usingxx 
(xx 
preparedStatementxx $
=xx% &
newxx' *

SqlCommandxx+ 5
(xx5 6
nullxx6 :
,xx: ;
dBConnectionxx< H
)xxH I
)xxI J
{yy 
preparedStatementzz !
.zz! "
CommandTextzz" -
=zz. /
$strzz0 V
;zzV W
SqlParameter{{ 
idParam{{ $
={{% &
new{{' *
SqlParameter{{+ 7
({{7 8
$str{{8 =
,{{= >
	SqlDbType{{? H
.{{H I
Int{{I L
,{{L M
$num{{N O
){{O P
;{{P Q
idParam|| 
.|| 
Value|| 
=|| 
id||  "
;||" #
preparedStatement}} !
.}}! "
ExecuteNonQuery}}" 1
(}}1 2
)}}2 3
;}}3 4
}~~ 
IO
ÄÄ 
.
ÄÄ 
WriteString
ÄÄ 
(
ÄÄ 
$str
ÄÄ 7
+
ÄÄ8 9
data
ÄÄ: >
+
ÄÄ? @
$str
ÄÄA E
)
ÄÄE F
;
ÄÄF G
}
ÅÅ 	
catch
ÇÇ 
(
ÇÇ 
SqlException
ÇÇ 
	exceptSql
ÇÇ %
)
ÇÇ% &
{
ÉÉ 	
IO
ÑÑ 
.
ÑÑ 
Logger
ÑÑ 
.
ÑÑ 
Log
ÑÑ 
(
ÑÑ 
NLog
ÑÑ 
.
ÑÑ 
LogLevel
ÑÑ '
.
ÑÑ' (
Warn
ÑÑ( ,
,
ÑÑ, -
	exceptSql
ÑÑ. 7
,
ÑÑ7 8
$str
ÑÑ9 P
)
ÑÑP Q
;
ÑÑQ R
}
ÖÖ 	
finally
ÜÜ 
{
áá 	
try
àà 
{
ââ 
if
ää 
(
ää 
dBConnection
ää  
!=
ää! #
null
ää$ (
)
ää( )
{
ãã 
dBConnection
åå  
.
åå  !
Close
åå! &
(
åå& '
)
åå' (
;
åå( )
}
çç 
}
éé 
catch
èè 
(
èè 
SqlException
èè 
	exceptSql
èè  )
)
èè) *
{
êê 
IO
ëë 
.
ëë 
Logger
ëë 
.
ëë 
Log
ëë 
(
ëë 
NLog
ëë "
.
ëë" #
LogLevel
ëë# +
.
ëë+ ,
Warn
ëë, 0
,
ëë0 1
	exceptSql
ëë2 ;
,
ëë; <
$str
ëë= Y
)
ëëY Z
;
ëëZ [
}
íí 
}
ìì 	
}
îî 
public
ññ 

override
ññ 
void
ññ 
Good
ññ 
(
ññ 
HttpRequest
ññ )
req
ññ* -
,
ññ- .
HttpResponse
ññ/ ;
resp
ññ< @
)
ññ@ A
{
óó 
GoodG2B
òò 
(
òò 
req
òò 
,
òò 
resp
òò 
)
òò 
;
òò 
}
ôô 
}õõ 
}úú »l
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_13.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_13 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_FIVE"" #
==""$ &
$num""' (
)""( )
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
SqlConnection-- 
dBConnection-- "
=--# $
IO--% '
.--' (
GetDBConnection--( 7
(--7 8
)--8 9
;--9 :

SqlCommand.. 
preparedStatement.. $
=..% &
null..' +
;..+ ,
int// 
id// 
=// 
$num// 
;// 
try00 
{11 	
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 
)22  
;22  !
}33 	
catch44 
(44 
FormatException44 
nfx44 "
)44" #
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
nfx66. 1
,661 2
$str663 W
)66W X
;66X Y
id77 
=77 
-77 
$num77 
;77 
}88 	
try99 
{:: 	
dBConnection;; 
.;; 
Open;; 
(;; 
);; 
;;;  
using<< 
(<< 
preparedStatement<< $
=<<% &
new<<' *

SqlCommand<<+ 5
(<<5 6
null<<6 :
,<<: ;
dBConnection<<< H
)<<H I
)<<I J
{== 
preparedStatement>> !
.>>! "
CommandText>>" -
=>>. /
$str>>0 V
;>>V W
SqlParameter?? 
idParam?? $
=??% &
new??' *
SqlParameter??+ 7
(??7 8
$str??8 =
,??= >
	SqlDbType??? H
.??H I
Int??I L
,??L M
$num??N O
)??O P
;??P Q
idParam@@ 
.@@ 
Value@@ 
=@@ 
id@@  "
;@@" #
preparedStatementAA !
.AA! "
ExecuteNonQueryAA" 1
(AA1 2
)AA2 3
;AA3 4
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD 7
+DD8 9
dataDD: >
+DD? @
$strDDA E
)DDE F
;DDF G
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
	exceptSqlHH. 7
,HH7 8
$strHH9 P
)HHP Q
;HHQ R
}II 	
finallyJJ 
{KK 	
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
dBConnectionPP  
.PP  !
ClosePP! &
(PP& '
)PP' (
;PP( )
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS 
	exceptSqlSS  )
)SS) *
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
	exceptSqlUU2 ;
,UU; <
$strUU= Y
)UUY Z
;UUZ [
}VV 
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
IO__ 
.__  
STATIC_READONLY_FIVE__ #
!=__$ &
$num__' (
)__( )
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
SqlConnectionjj 
dBConnectionjj "
=jj# $
IOjj% '
.jj' (
GetDBConnectionjj( 7
(jj7 8
)jj8 9
;jj9 :

SqlCommandkk 
preparedStatementkk $
=kk% &
nullkk' +
;kk+ ,
intll 
idll 
=ll 
$numll 
;ll 
trymm 
{nn 	
idoo 
=oo 
intoo 
.oo 
Parseoo 
(oo 
dataoo 
)oo  
;oo  !
}pp 	
catchqq 
(qq 
FormatExceptionqq 
nfxqq "
)qq" #
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
nfxss. 1
,ss1 2
$strss3 W
)ssW X
;ssX Y
idtt 
=tt 
-tt 
$numtt 
;tt 
}uu 	
tryvv 
{ww 	
dBConnectionxx 
.xx 
Openxx 
(xx 
)xx 
;xx  
usingyy 
(yy 
preparedStatementyy $
=yy% &
newyy' *

SqlCommandyy+ 5
(yy5 6
nullyy6 :
,yy: ;
dBConnectionyy< H
)yyH I
)yyI J
{zz 
preparedStatement{{ !
.{{! "
CommandText{{" -
={{. /
$str{{0 V
;{{V W
SqlParameter|| 
idParam|| $
=||% &
new||' *
SqlParameter||+ 7
(||7 8
$str||8 =
,||= >
	SqlDbType||? H
.||H I
Int||I L
,||L M
$num||N O
)||O P
;||P Q
idParam}} 
.}} 
Value}} 
=}} 
id}}  "
;}}" #
preparedStatement~~ !
.~~! "
ExecuteNonQuery~~" 1
(~~1 2
)~~2 3
;~~3 4
} 
IO
ÅÅ 
.
ÅÅ 
WriteString
ÅÅ 
(
ÅÅ 
$str
ÅÅ 7
+
ÅÅ8 9
data
ÅÅ: >
+
ÅÅ? @
$str
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÇÇ 	
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ %
)
ÉÉ% &
{
ÑÑ 	
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ 
.
ÖÖ 
LogLevel
ÖÖ '
.
ÖÖ' (
Warn
ÖÖ( ,
,
ÖÖ, -
	exceptSql
ÖÖ. 7
,
ÖÖ7 8
$str
ÖÖ9 P
)
ÖÖP Q
;
ÖÖQ R
}
ÜÜ 	
finally
áá 
{
àà 	
try
ââ 
{
ää 
if
ãã 
(
ãã 
dBConnection
ãã  
!=
ãã! #
null
ãã$ (
)
ãã( )
{
åå 
dBConnection
çç  
.
çç  !
Close
çç! &
(
çç& '
)
çç' (
;
çç( )
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
	exceptSql
íí2 ;
,
íí; <
$str
íí= Y
)
ííY Z
;
ííZ [
}
ìì 
}
îî 	
}
ïï 
private
òò 
void
òò 
GoodG2B2
òò 
(
òò 
HttpRequest
òò %
req
òò& )
,
òò) *
HttpResponse
òò+ 7
resp
òò8 <
)
òò< =
{
ôô 
string
öö 
data
öö 
;
öö 
if
õõ 

(
õõ 
IO
õõ 
.
õõ "
STATIC_READONLY_FIVE
õõ #
==
õõ$ &
$num
õõ' (
)
õõ( )
{
úú 	
data
ûû 
=
ûû 
$str
ûû 
;
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
SqlConnection
¶¶ 
dBConnection
¶¶ "
=
¶¶# $
IO
¶¶% '
.
¶¶' (
GetDBConnection
¶¶( 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :

SqlCommand
ßß 
preparedStatement
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
int
®® 
id
®® 
=
®® 
$num
®® 
;
®® 
try
©© 
{
™™ 	
id
´´ 
=
´´ 
int
´´ 
.
´´ 
Parse
´´ 
(
´´ 
data
´´ 
)
´´  
;
´´  !
}
¨¨ 	
catch
≠≠ 
(
≠≠ 
FormatException
≠≠ 
nfx
≠≠ "
)
≠≠" #
{
ÆÆ 	
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ 
.
ØØ 
LogLevel
ØØ '
.
ØØ' (
Warn
ØØ( ,
,
ØØ, -
nfx
ØØ. 1
,
ØØ1 2
$str
ØØ3 W
)
ØØW X
;
ØØX Y
id
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
±± 	
try
≤≤ 
{
≥≥ 	
dBConnection
¥¥ 
.
¥¥ 
Open
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
using
µµ 
(
µµ 
preparedStatement
µµ $
=
µµ% &
new
µµ' *

SqlCommand
µµ+ 5
(
µµ5 6
null
µµ6 :
,
µµ: ;
dBConnection
µµ< H
)
µµH I
)
µµI J
{
∂∂ 
preparedStatement
∑∑ !
.
∑∑! "
CommandText
∑∑" -
=
∑∑. /
$str
∑∑0 V
;
∑∑V W
SqlParameter
∏∏ 
idParam
∏∏ $
=
∏∏% &
new
∏∏' *
SqlParameter
∏∏+ 7
(
∏∏7 8
$str
∏∏8 =
,
∏∏= >
	SqlDbType
∏∏? H
.
∏∏H I
Int
∏∏I L
,
∏∏L M
$num
∏∏N O
)
∏∏O P
;
∏∏P Q
idParam
ππ 
.
ππ 
Value
ππ 
=
ππ 
id
ππ  "
;
ππ" #
preparedStatement
∫∫ !
.
∫∫! "
ExecuteNonQuery
∫∫" 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
IO
ΩΩ 
.
ΩΩ 
WriteString
ΩΩ 
(
ΩΩ 
$str
ΩΩ 7
+
ΩΩ8 9
data
ΩΩ: >
+
ΩΩ? @
$str
ΩΩA E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø %
)
øø% &
{
¿¿ 	
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ 
.
¡¡ 
LogLevel
¡¡ '
.
¡¡' (
Warn
¡¡( ,
,
¡¡, -
	exceptSql
¡¡. 7
,
¡¡7 8
$str
¡¡9 P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 	
finally
√√ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
dBConnection
««  
!=
««! #
null
««$ (
)
««( )
{
»» 
dBConnection
……  
.
……  !
Close
……! &
(
……& '
)
……' (
;
……( )
}
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
SqlException
ÃÃ 
	exceptSql
ÃÃ  )
)
ÃÃ) *
{
ÕÕ 
IO
ŒŒ 
.
ŒŒ 
Logger
ŒŒ 
.
ŒŒ 
Log
ŒŒ 
(
ŒŒ 
NLog
ŒŒ "
.
ŒŒ" #
LogLevel
ŒŒ# +
.
ŒŒ+ ,
Warn
ŒŒ, 0
,
ŒŒ0 1
	exceptSql
ŒŒ2 ;
,
ŒŒ; <
$str
ŒŒ= Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
}
–– 	
}
—— 
public
”” 

override
”” 
void
”” 
Good
”” 
(
”” 
HttpRequest
”” )
req
””* -
,
””- .
HttpResponse
””/ ;
resp
””< @
)
””@ A
{
‘‘ 
GoodG2B1
’’ 
(
’’ 
req
’’ 
,
’’ 
resp
’’ 
)
’’ 
;
’’ 
GoodG2B2
÷÷ 
(
÷÷ 
req
÷÷ 
,
÷÷ 
resp
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ŸŸ 
}⁄⁄ ™l
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_14.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_14 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticFive"" 
=="" 
$num"" 
)"" 
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
SqlConnection-- 
dBConnection-- "
=--# $
IO--% '
.--' (
GetDBConnection--( 7
(--7 8
)--8 9
;--9 :

SqlCommand.. 
preparedStatement.. $
=..% &
null..' +
;..+ ,
int// 
id// 
=// 
$num// 
;// 
try00 
{11 	
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 
)22  
;22  !
}33 	
catch44 
(44 
FormatException44 
nfx44 "
)44" #
{55 	
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 
.66 
LogLevel66 '
.66' (
Warn66( ,
,66, -
nfx66. 1
,661 2
$str663 W
)66W X
;66X Y
id77 
=77 
-77 
$num77 
;77 
}88 	
try99 
{:: 	
dBConnection;; 
.;; 
Open;; 
(;; 
);; 
;;;  
using<< 
(<< 
preparedStatement<< $
=<<% &
new<<' *

SqlCommand<<+ 5
(<<5 6
null<<6 :
,<<: ;
dBConnection<<< H
)<<H I
)<<I J
{== 
preparedStatement>> !
.>>! "
CommandText>>" -
=>>. /
$str>>0 V
;>>V W
SqlParameter?? 
idParam?? $
=??% &
new??' *
SqlParameter??+ 7
(??7 8
$str??8 =
,??= >
	SqlDbType??? H
.??H I
Int??I L
,??L M
$num??N O
)??O P
;??P Q
idParam@@ 
.@@ 
Value@@ 
=@@ 
id@@  "
;@@" #
preparedStatementAA !
.AA! "
ExecuteNonQueryAA" 1
(AA1 2
)AA2 3
;AA3 4
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD 7
+DD8 9
dataDD: >
+DD? @
$strDDA E
)DDE F
;DDF G
}EE 	
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF %
)FF% &
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
	exceptSqlHH. 7
,HH7 8
$strHH9 P
)HHP Q
;HHQ R
}II 	
finallyJJ 
{KK 	
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
dBConnectionPP  
.PP  !
ClosePP! &
(PP& '
)PP' (
;PP( )
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS 
	exceptSqlSS  )
)SS) *
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU "
.UU" #
LogLevelUU# +
.UU+ ,
WarnUU, 0
,UU0 1
	exceptSqlUU2 ;
,UU; <
$strUU= Y
)UUY Z
;UUZ [
}VV 
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
IO__ 
.__ 

staticFive__ 
!=__ 
$num__ 
)__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
SqlConnectionjj 
dBConnectionjj "
=jj# $
IOjj% '
.jj' (
GetDBConnectionjj( 7
(jj7 8
)jj8 9
;jj9 :

SqlCommandkk 
preparedStatementkk $
=kk% &
nullkk' +
;kk+ ,
intll 
idll 
=ll 
$numll 
;ll 
trymm 
{nn 	
idoo 
=oo 
intoo 
.oo 
Parseoo 
(oo 
dataoo 
)oo  
;oo  !
}pp 	
catchqq 
(qq 
FormatExceptionqq 
nfxqq "
)qq" #
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
nfxss. 1
,ss1 2
$strss3 W
)ssW X
;ssX Y
idtt 
=tt 
-tt 
$numtt 
;tt 
}uu 	
tryvv 
{ww 	
dBConnectionxx 
.xx 
Openxx 
(xx 
)xx 
;xx  
usingyy 
(yy 
preparedStatementyy $
=yy% &
newyy' *

SqlCommandyy+ 5
(yy5 6
nullyy6 :
,yy: ;
dBConnectionyy< H
)yyH I
)yyI J
{zz 
preparedStatement{{ !
.{{! "
CommandText{{" -
={{. /
$str{{0 V
;{{V W
SqlParameter|| 
idParam|| $
=||% &
new||' *
SqlParameter||+ 7
(||7 8
$str||8 =
,||= >
	SqlDbType||? H
.||H I
Int||I L
,||L M
$num||N O
)||O P
;||P Q
idParam}} 
.}} 
Value}} 
=}} 
id}}  "
;}}" #
preparedStatement~~ !
.~~! "
ExecuteNonQuery~~" 1
(~~1 2
)~~2 3
;~~3 4
} 
IO
ÅÅ 
.
ÅÅ 
WriteString
ÅÅ 
(
ÅÅ 
$str
ÅÅ 7
+
ÅÅ8 9
data
ÅÅ: >
+
ÅÅ? @
$str
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÇÇ 	
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ %
)
ÉÉ% &
{
ÑÑ 	
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ 
.
ÖÖ 
LogLevel
ÖÖ '
.
ÖÖ' (
Warn
ÖÖ( ,
,
ÖÖ, -
	exceptSql
ÖÖ. 7
,
ÖÖ7 8
$str
ÖÖ9 P
)
ÖÖP Q
;
ÖÖQ R
}
ÜÜ 	
finally
áá 
{
àà 	
try
ââ 
{
ää 
if
ãã 
(
ãã 
dBConnection
ãã  
!=
ãã! #
null
ãã$ (
)
ãã( )
{
åå 
dBConnection
çç  
.
çç  !
Close
çç! &
(
çç& '
)
çç' (
;
çç( )
}
éé 
}
èè 
catch
êê 
(
êê 
SqlException
êê 
	exceptSql
êê  )
)
êê) *
{
ëë 
IO
íí 
.
íí 
Logger
íí 
.
íí 
Log
íí 
(
íí 
NLog
íí "
.
íí" #
LogLevel
íí# +
.
íí+ ,
Warn
íí, 0
,
íí0 1
	exceptSql
íí2 ;
,
íí; <
$str
íí= Y
)
ííY Z
;
ííZ [
}
ìì 
}
îî 	
}
ïï 
private
òò 
void
òò 
GoodG2B2
òò 
(
òò 
HttpRequest
òò %
req
òò& )
,
òò) *
HttpResponse
òò+ 7
resp
òò8 <
)
òò< =
{
ôô 
string
öö 
data
öö 
;
öö 
if
õõ 

(
õõ 
IO
õõ 
.
õõ 

staticFive
õõ 
==
õõ 
$num
õõ 
)
õõ 
{
úú 	
data
ûû 
=
ûû 
$str
ûû 
;
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
SqlConnection
¶¶ 
dBConnection
¶¶ "
=
¶¶# $
IO
¶¶% '
.
¶¶' (
GetDBConnection
¶¶( 7
(
¶¶7 8
)
¶¶8 9
;
¶¶9 :

SqlCommand
ßß 
preparedStatement
ßß $
=
ßß% &
null
ßß' +
;
ßß+ ,
int
®® 
id
®® 
=
®® 
$num
®® 
;
®® 
try
©© 
{
™™ 	
id
´´ 
=
´´ 
int
´´ 
.
´´ 
Parse
´´ 
(
´´ 
data
´´ 
)
´´  
;
´´  !
}
¨¨ 	
catch
≠≠ 
(
≠≠ 
FormatException
≠≠ 
nfx
≠≠ "
)
≠≠" #
{
ÆÆ 	
IO
ØØ 
.
ØØ 
Logger
ØØ 
.
ØØ 
Log
ØØ 
(
ØØ 
NLog
ØØ 
.
ØØ 
LogLevel
ØØ '
.
ØØ' (
Warn
ØØ( ,
,
ØØ, -
nfx
ØØ. 1
,
ØØ1 2
$str
ØØ3 W
)
ØØW X
;
ØØX Y
id
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
±± 	
try
≤≤ 
{
≥≥ 	
dBConnection
¥¥ 
.
¥¥ 
Open
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
using
µµ 
(
µµ 
preparedStatement
µµ $
=
µµ% &
new
µµ' *

SqlCommand
µµ+ 5
(
µµ5 6
null
µµ6 :
,
µµ: ;
dBConnection
µµ< H
)
µµH I
)
µµI J
{
∂∂ 
preparedStatement
∑∑ !
.
∑∑! "
CommandText
∑∑" -
=
∑∑. /
$str
∑∑0 V
;
∑∑V W
SqlParameter
∏∏ 
idParam
∏∏ $
=
∏∏% &
new
∏∏' *
SqlParameter
∏∏+ 7
(
∏∏7 8
$str
∏∏8 =
,
∏∏= >
	SqlDbType
∏∏? H
.
∏∏H I
Int
∏∏I L
,
∏∏L M
$num
∏∏N O
)
∏∏O P
;
∏∏P Q
idParam
ππ 
.
ππ 
Value
ππ 
=
ππ 
id
ππ  "
;
ππ" #
preparedStatement
∫∫ !
.
∫∫! "
ExecuteNonQuery
∫∫" 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
IO
ΩΩ 
.
ΩΩ 
WriteString
ΩΩ 
(
ΩΩ 
$str
ΩΩ 7
+
ΩΩ8 9
data
ΩΩ: >
+
ΩΩ? @
$str
ΩΩA E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
catch
øø 
(
øø 
SqlException
øø 
	exceptSql
øø %
)
øø% &
{
¿¿ 	
IO
¡¡ 
.
¡¡ 
Logger
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
NLog
¡¡ 
.
¡¡ 
LogLevel
¡¡ '
.
¡¡' (
Warn
¡¡( ,
,
¡¡, -
	exceptSql
¡¡. 7
,
¡¡7 8
$str
¡¡9 P
)
¡¡P Q
;
¡¡Q R
}
¬¬ 	
finally
√√ 
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
dBConnection
««  
!=
««! #
null
««$ (
)
««( )
{
»» 
dBConnection
……  
.
……  !
Close
……! &
(
……& '
)
……' (
;
……( )
}
   
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
SqlException
ÃÃ 
	exceptSql
ÃÃ  )
)
ÃÃ) *
{
ÕÕ 
IO
ŒŒ 
.
ŒŒ 
Logger
ŒŒ 
.
ŒŒ 
Log
ŒŒ 
(
ŒŒ 
NLog
ŒŒ "
.
ŒŒ" #
LogLevel
ŒŒ# +
.
ŒŒ+ ,
Warn
ŒŒ, 0
,
ŒŒ0 1
	exceptSql
ŒŒ2 ;
,
ŒŒ; <
$str
ŒŒ= Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
}
–– 	
}
—— 
public
”” 

override
”” 
void
”” 
Good
”” 
(
”” 
HttpRequest
”” )
req
””* -
,
””- .
HttpResponse
””/ ;
resp
””< @
)
””@ A
{
‘‘ 
GoodG2B1
’’ 
(
’’ 
req
’’ 
,
’’ 
resp
’’ 
)
’’ 
;
’’ 
GoodG2B2
÷÷ 
(
÷÷ 
req
÷÷ 
,
÷÷ 
resp
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 
}ŸŸ 
}⁄⁄ õn
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_15.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_15 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
=!! 
null!! 
;!! 
switch"" 
("" 
$num"" 
)"" 
{## 	
case$$ 
$num$$ 
:$$ 
data&& 
=&& 
req&& 
.&& 
Params&& 
.&& 
Get&& !
(&&! "
$str&&" &
)&&& '
;&&' (
break'' 
;'' 
default(( 
:(( 
data++ 
=++ 
null++ 
;++ 
break,, 
;,, 
}-- 	
SqlConnection.. 
dBConnection.. "
=..# $
IO..% '
...' (
GetDBConnection..( 7
(..7 8
)..8 9
;..9 :

SqlCommand// 
preparedStatement// $
=//% &
null//' +
;//+ ,
int00 
id00 
=00 
$num00 
;00 
try11 
{22 	
id33 
=33 
int33 
.33 
Parse33 
(33 
data33 
)33  
;33  !
}44 	
catch55 
(55 
FormatException55 
nfx55 "
)55" #
{66 	
IO77 
.77 
Logger77 
.77 
Log77 
(77 
NLog77 
.77 
LogLevel77 '
.77' (
Warn77( ,
,77, -
nfx77. 1
,771 2
$str773 W
)77W X
;77X Y
id88 
=88 
-88 
$num88 
;88 
}99 	
try:: 
{;; 	
dBConnection<< 
.<< 
Open<< 
(<< 
)<< 
;<<  
using== 
(== 
preparedStatement== $
===% &
new==' *

SqlCommand==+ 5
(==5 6
null==6 :
,==: ;
dBConnection==< H
)==H I
)==I J
{>> 
preparedStatement?? !
.??! "
CommandText??" -
=??. /
$str??0 V
;??V W
SqlParameter@@ 
idParam@@ $
=@@% &
new@@' *
SqlParameter@@+ 7
(@@7 8
$str@@8 =
,@@= >
	SqlDbType@@? H
.@@H I
Int@@I L
,@@L M
$num@@N O
)@@O P
;@@P Q
idParamAA 
.AA 
ValueAA 
=AA 
idAA  "
;AA" #
preparedStatementBB !
.BB! "
ExecuteNonQueryBB" 1
(BB1 2
)BB2 3
;BB3 4
}CC 
IOEE 
.EE 
WriteStringEE 
(EE 
$strEE 7
+EE8 9
dataEE: >
+EE? @
$strEEA E
)EEE F
;EEF G
}FF 	
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG %
)GG% &
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
	exceptSqlII. 7
,II7 8
$strII9 P
)IIP Q
;IIQ R
}JJ 	
finallyKK 
{LL 	
tryMM 
{NN 
ifOO 
(OO 
dBConnectionOO  
!=OO! #
nullOO$ (
)OO( )
{PP 
dBConnectionQQ  
.QQ  !
CloseQQ! &
(QQ& '
)QQ' (
;QQ( )
}RR 
}SS 
catchTT 
(TT 
SqlExceptionTT 
	exceptSqlTT  )
)TT) *
{UU 
IOVV 
.VV 
LoggerVV 
.VV 
LogVV 
(VV 
NLogVV "
.VV" #
LogLevelVV# +
.VV+ ,
WarnVV, 0
,VV0 1
	exceptSqlVV2 ;
,VV; <
$strVV= Y
)VVY Z
;VVZ [
}WW 
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
=__ 
null__ 
;__ 
switch`` 
(`` 
$num`` 
)`` 
{aa 	
casebb 
$numbb 
:bb 
dataee 
=ee 
nullee 
;ee 
breakff 
;ff 
defaultgg 
:gg 
dataii 
=ii 
$strii 
;ii 
breakjj 
;jj 
}kk 	
SqlConnectionll 
dBConnectionll "
=ll# $
IOll% '
.ll' (
GetDBConnectionll( 7
(ll7 8
)ll8 9
;ll9 :

SqlCommandmm 
preparedStatementmm $
=mm% &
nullmm' +
;mm+ ,
intnn 
idnn 
=nn 
$numnn 
;nn 
tryoo 
{pp 	
idqq 
=qq 
intqq 
.qq 
Parseqq 
(qq 
dataqq 
)qq  
;qq  !
}rr 	
catchss 
(ss 
FormatExceptionss 
nfxss "
)ss" #
{tt 	
IOuu 
.uu 
Loggeruu 
.uu 
Loguu 
(uu 
NLoguu 
.uu 
LogLeveluu '
.uu' (
Warnuu( ,
,uu, -
nfxuu. 1
,uu1 2
$struu3 W
)uuW X
;uuX Y
idvv 
=vv 
-vv 
$numvv 
;vv 
}ww 	
tryxx 
{yy 	
dBConnectionzz 
.zz 
Openzz 
(zz 
)zz 
;zz  
using{{ 
({{ 
preparedStatement{{ $
={{% &
new{{' *

SqlCommand{{+ 5
({{5 6
null{{6 :
,{{: ;
dBConnection{{< H
){{H I
){{I J
{|| 
preparedStatement}} !
.}}! "
CommandText}}" -
=}}. /
$str}}0 V
;}}V W
SqlParameter~~ 
idParam~~ $
=~~% &
new~~' *
SqlParameter~~+ 7
(~~7 8
$str~~8 =
,~~= >
	SqlDbType~~? H
.~~H I
Int~~I L
,~~L M
$num~~N O
)~~O P
;~~P Q
idParam 
. 
Value 
= 
id  "
;" #
preparedStatement
ÄÄ !
.
ÄÄ! "
ExecuteNonQuery
ÄÄ" 1
(
ÄÄ1 2
)
ÄÄ2 3
;
ÄÄ3 4
}
ÅÅ 
IO
ÉÉ 
.
ÉÉ 
WriteString
ÉÉ 
(
ÉÉ 
$str
ÉÉ 7
+
ÉÉ8 9
data
ÉÉ: >
+
ÉÉ? @
$str
ÉÉA E
)
ÉÉE F
;
ÉÉF G
}
ÑÑ 	
catch
ÖÖ 
(
ÖÖ 
SqlException
ÖÖ 
	exceptSql
ÖÖ %
)
ÖÖ% &
{
ÜÜ 	
IO
áá 
.
áá 
Logger
áá 
.
áá 
Log
áá 
(
áá 
NLog
áá 
.
áá 
LogLevel
áá '
.
áá' (
Warn
áá( ,
,
áá, -
	exceptSql
áá. 7
,
áá7 8
$str
áá9 P
)
ááP Q
;
ááQ R
}
àà 	
finally
ââ 
{
ää 	
try
ãã 
{
åå 
if
çç 
(
çç 
dBConnection
çç  
!=
çç! #
null
çç$ (
)
çç( )
{
éé 
dBConnection
èè  
.
èè  !
Close
èè! &
(
èè& '
)
èè' (
;
èè( )
}
êê 
}
ëë 
catch
íí 
(
íí 
SqlException
íí 
	exceptSql
íí  )
)
íí) *
{
ìì 
IO
îî 
.
îî 
Logger
îî 
.
îî 
Log
îî 
(
îî 
NLog
îî "
.
îî" #
LogLevel
îî# +
.
îî+ ,
Warn
îî, 0
,
îî0 1
	exceptSql
îî2 ;
,
îî; <
$str
îî= Y
)
îîY Z
;
îîZ [
}
ïï 
}
ññ 	
}
óó 
private
öö 
void
öö 
GoodG2B2
öö 
(
öö 
HttpRequest
öö %
req
öö& )
,
öö) *
HttpResponse
öö+ 7
resp
öö8 <
)
öö< =
{
õõ 
string
úú 
data
úú 
=
úú 
null
úú 
;
úú 
switch
ùù 
(
ùù 
$num
ùù 
)
ùù 
{
ûû 	
case
üü 
$num
üü 
:
üü 
data
°° 
=
°° 
$str
°° 
;
°° 
break
¢¢ 
;
¢¢ 
default
££ 
:
££ 
data
¶¶ 
=
¶¶ 
null
¶¶ 
;
¶¶ 
break
ßß 
;
ßß 
}
®® 	
SqlConnection
©© 
dBConnection
©© "
=
©©# $
IO
©©% '
.
©©' (
GetDBConnection
©©( 7
(
©©7 8
)
©©8 9
;
©©9 :

SqlCommand
™™ 
preparedStatement
™™ $
=
™™% &
null
™™' +
;
™™+ ,
int
´´ 
id
´´ 
=
´´ 
$num
´´ 
;
´´ 
try
¨¨ 
{
≠≠ 	
id
ÆÆ 
=
ÆÆ 
int
ÆÆ 
.
ÆÆ 
Parse
ÆÆ 
(
ÆÆ 
data
ÆÆ 
)
ÆÆ  
;
ÆÆ  !
}
ØØ 	
catch
∞∞ 
(
∞∞ 
FormatException
∞∞ 
nfx
∞∞ "
)
∞∞" #
{
±± 	
IO
≤≤ 
.
≤≤ 
Logger
≤≤ 
.
≤≤ 
Log
≤≤ 
(
≤≤ 
NLog
≤≤ 
.
≤≤ 
LogLevel
≤≤ '
.
≤≤' (
Warn
≤≤( ,
,
≤≤, -
nfx
≤≤. 1
,
≤≤1 2
$str
≤≤3 W
)
≤≤W X
;
≤≤X Y
id
≥≥ 
=
≥≥ 
-
≥≥ 
$num
≥≥ 
;
≥≥ 
}
¥¥ 	
try
µµ 
{
∂∂ 	
dBConnection
∑∑ 
.
∑∑ 
Open
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑  
using
∏∏ 
(
∏∏ 
preparedStatement
∏∏ $
=
∏∏% &
new
∏∏' *

SqlCommand
∏∏+ 5
(
∏∏5 6
null
∏∏6 :
,
∏∏: ;
dBConnection
∏∏< H
)
∏∏H I
)
∏∏I J
{
ππ 
preparedStatement
∫∫ !
.
∫∫! "
CommandText
∫∫" -
=
∫∫. /
$str
∫∫0 V
;
∫∫V W
SqlParameter
ªª 
idParam
ªª $
=
ªª% &
new
ªª' *
SqlParameter
ªª+ 7
(
ªª7 8
$str
ªª8 =
,
ªª= >
	SqlDbType
ªª? H
.
ªªH I
Int
ªªI L
,
ªªL M
$num
ªªN O
)
ªªO P
;
ªªP Q
idParam
ºº 
.
ºº 
Value
ºº 
=
ºº 
id
ºº  "
;
ºº" #
preparedStatement
ΩΩ !
.
ΩΩ! "
ExecuteNonQuery
ΩΩ" 1
(
ΩΩ1 2
)
ΩΩ2 3
;
ΩΩ3 4
}
ææ 
IO
¿¿ 
.
¿¿ 
WriteString
¿¿ 
(
¿¿ 
$str
¿¿ 7
+
¿¿8 9
data
¿¿: >
+
¿¿? @
$str
¿¿A E
)
¿¿E F
;
¿¿F G
}
¡¡ 	
catch
¬¬ 
(
¬¬ 
SqlException
¬¬ 
	exceptSql
¬¬ %
)
¬¬% &
{
√√ 	
IO
ƒƒ 
.
ƒƒ 
Logger
ƒƒ 
.
ƒƒ 
Log
ƒƒ 
(
ƒƒ 
NLog
ƒƒ 
.
ƒƒ 
LogLevel
ƒƒ '
.
ƒƒ' (
Warn
ƒƒ( ,
,
ƒƒ, -
	exceptSql
ƒƒ. 7
,
ƒƒ7 8
$str
ƒƒ9 P
)
ƒƒP Q
;
ƒƒQ R
}
≈≈ 	
finally
∆∆ 
{
«« 	
try
»» 
{
…… 
if
   
(
   
dBConnection
    
!=
  ! #
null
  $ (
)
  ( )
{
ÀÀ 
dBConnection
ÃÃ  
.
ÃÃ  !
Close
ÃÃ! &
(
ÃÃ& '
)
ÃÃ' (
;
ÃÃ( )
}
ÕÕ 
}
ŒŒ 
catch
œœ 
(
œœ 
SqlException
œœ 
	exceptSql
œœ  )
)
œœ) *
{
–– 
IO
—— 
.
—— 
Logger
—— 
.
—— 
Log
—— 
(
—— 
NLog
—— "
.
——" #
LogLevel
——# +
.
——+ ,
Warn
——, 0
,
——0 1
	exceptSql
——2 ;
,
——; <
$str
——= Y
)
——Y Z
;
——Z [
}
““ 
}
”” 	
}
‘‘ 
public
÷÷ 

override
÷÷ 
void
÷÷ 
Good
÷÷ 
(
÷÷ 
HttpRequest
÷÷ )
req
÷÷* -
,
÷÷- .
HttpResponse
÷÷/ ;
resp
÷÷< @
)
÷÷@ A
{
◊◊ 
GoodG2B1
ÿÿ 
(
ÿÿ 
req
ÿÿ 
,
ÿÿ 
resp
ÿÿ 
)
ÿÿ 
;
ÿÿ 
GoodG2B2
ŸŸ 
(
ŸŸ 
req
ŸŸ 
,
ŸŸ 
resp
ŸŸ 
)
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
}‹‹ 
}›› ®E
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_16.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_16 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
while"" 
("" 
true"" 
)"" 
{## 	
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" &
)%%& '
;%%' (
break&& 
;&& 
}'' 	
SqlConnection(( 
dBConnection(( "
=((# $
IO((% '
.((' (
GetDBConnection((( 7
(((7 8
)((8 9
;((9 :

SqlCommand)) 
preparedStatement)) $
=))% &
null))' +
;))+ ,
int** 
id** 
=** 
$num** 
;** 
try++ 
{,, 	
id-- 
=-- 
int-- 
.-- 
Parse-- 
(-- 
data-- 
)--  
;--  !
}.. 	
catch// 
(// 
FormatException// 
nfx// "
)//" #
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
nfx11. 1
,111 2
$str113 W
)11W X
;11X Y
id22 
=22 
-22 
$num22 
;22 
}33 	
try44 
{55 	
dBConnection66 
.66 
Open66 
(66 
)66 
;66  
using77 
(77 
preparedStatement77 $
=77% &
new77' *

SqlCommand77+ 5
(775 6
null776 :
,77: ;
dBConnection77< H
)77H I
)77I J
{88 
preparedStatement99 !
.99! "
CommandText99" -
=99. /
$str990 V
;99V W
SqlParameter:: 
idParam:: $
=::% &
new::' *
SqlParameter::+ 7
(::7 8
$str::8 =
,::= >
	SqlDbType::? H
.::H I
Int::I L
,::L M
$num::N O
)::O P
;::P Q
idParam;; 
.;; 
Value;; 
=;; 
id;;  "
;;;" #
preparedStatement<< !
.<<! "
ExecuteNonQuery<<" 1
(<<1 2
)<<2 3
;<<3 4
}== 
IO?? 
.?? 
WriteString?? 
(?? 
$str?? 7
+??8 9
data??: >
+??? @
$str??A E
)??E F
;??F G
}@@ 	
catchAA 
(AA 
SqlExceptionAA 
	exceptSqlAA %
)AA% &
{BB 	
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC 
.CC 
LogLevelCC '
.CC' (
WarnCC( ,
,CC, -
	exceptSqlCC. 7
,CC7 8
$strCC9 P
)CCP Q
;CCQ R
}DD 	
finallyEE 
{FF 	
tryGG 
{HH 
ifII 
(II 
dBConnectionII  
!=II! #
nullII$ (
)II( )
{JJ 
dBConnectionKK  
.KK  !
CloseKK! &
(KK& '
)KK' (
;KK( )
}LL 
}MM 
catchNN 
(NN 
SqlExceptionNN 
	exceptSqlNN  )
)NN) *
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
	exceptSqlPP2 ;
,PP; <
$strPP= Y
)PPY Z
;PPZ [
}QQ 
}RR 	
}SS 
privateWW 
voidWW 
GoodG2BWW 
(WW 
HttpRequestWW $
reqWW% (
,WW( )
HttpResponseWW* 6
respWW7 ;
)WW; <
{XX 
stringYY 
dataYY 
;YY 
whileZZ 
(ZZ 
trueZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
break^^ 
;^^ 
}__ 	
SqlConnection`` 
dBConnection`` "
=``# $
IO``% '
.``' (
GetDBConnection``( 7
(``7 8
)``8 9
;``9 :

SqlCommandaa 
preparedStatementaa $
=aa% &
nullaa' +
;aa+ ,
intbb 
idbb 
=bb 
$numbb 
;bb 
trycc 
{dd 	
idee 
=ee 
intee 
.ee 
Parseee 
(ee 
dataee 
)ee  
;ee  !
}ff 	
catchgg 
(gg 
FormatExceptiongg 
nfxgg "
)gg" #
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
nfxii. 1
,ii1 2
$strii3 W
)iiW X
;iiX Y
idjj 
=jj 
-jj 
$numjj 
;jj 
}kk 	
tryll 
{mm 	
dBConnectionnn 
.nn 
Opennn 
(nn 
)nn 
;nn  
usingoo 
(oo 
preparedStatementoo $
=oo% &
newoo' *

SqlCommandoo+ 5
(oo5 6
nulloo6 :
,oo: ;
dBConnectionoo< H
)ooH I
)ooI J
{pp 
preparedStatementqq !
.qq! "
CommandTextqq" -
=qq. /
$strqq0 V
;qqV W
SqlParameterrr 
idParamrr $
=rr% &
newrr' *
SqlParameterrr+ 7
(rr7 8
$strrr8 =
,rr= >
	SqlDbTyperr? H
.rrH I
IntrrI L
,rrL M
$numrrN O
)rrO P
;rrP Q
idParamss 
.ss 
Valuess 
=ss 
idss  "
;ss" #
preparedStatementtt !
.tt! "
ExecuteNonQuerytt" 1
(tt1 2
)tt2 3
;tt3 4
}uu 
IOww 
.ww 
WriteStringww 
(ww 
$strww 7
+ww8 9
dataww: >
+ww? @
$strwwA E
)wwE F
;wwF G
}xx 	
catchyy 
(yy 
SqlExceptionyy 
	exceptSqlyy %
)yy% &
{zz 	
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ 
.{{ 
LogLevel{{ '
.{{' (
Warn{{( ,
,{{, -
	exceptSql{{. 7
,{{7 8
$str{{9 P
){{P Q
;{{Q R
}|| 	
finally}} 
{~~ 	
try 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
dBConnection
ÅÅ  
!=
ÅÅ! #
null
ÅÅ$ (
)
ÅÅ( )
{
ÇÇ 
dBConnection
ÉÉ  
.
ÉÉ  !
Close
ÉÉ! &
(
ÉÉ& '
)
ÉÉ' (
;
ÉÉ( )
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
SqlException
ÜÜ 
	exceptSql
ÜÜ  )
)
ÜÜ) *
{
áá 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà 
(
àà 
NLog
àà "
.
àà" #
LogLevel
àà# +
.
àà+ ,
Warn
àà, 0
,
àà0 1
	exceptSql
àà2 ;
,
àà; <
$str
àà= Y
)
ààY Z
;
ààZ [
}
ââ 
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
HttpRequest
çç )
req
çç* -
,
çç- .
HttpResponse
çç/ ;
resp
çç< @
)
çç@ A
{
éé 
GoodG2B
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì åG
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_17.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_17 =
:> ?
AbstractTestCaseWeb@ S
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## "
)##" #
;### $
for$$ 
($$ 
int$$ 
i$$ 
=$$ 
$num$$ 
;$$ 
i$$ 
<$$ 
$num$$ 
;$$ 
i$$  
++$$  "
)$$" #
{%% 	
SqlConnection&& 
dBConnection&& &
=&&' (
IO&&) +
.&&+ ,
GetDBConnection&&, ;
(&&; <
)&&< =
;&&= >

SqlCommand'' 
preparedStatement'' (
='') *
null''+ /
;''/ 0
int(( 
id(( 
=(( 
$num(( 
;(( 
try)) 
{** 
id++ 
=++ 
int++ 
.++ 
Parse++ 
(++ 
data++ #
)++# $
;++$ %
},, 
catch-- 
(-- 
FormatException-- "
nfx--# &
)--& '
{.. 
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// "
.//" #
LogLevel//# +
.//+ ,
Warn//, 0
,//0 1
nfx//2 5
,//5 6
$str//7 [
)//[ \
;//\ ]
id00 
=00 
-00 
$num00 
;00 
}11 
try22 
{33 
dBConnection44 
.44 
Open44 !
(44! "
)44" #
;44# $
using55 
(55 
preparedStatement55 (
=55) *
new55+ .

SqlCommand55/ 9
(559 :
null55: >
,55> ?
dBConnection55@ L
)55L M
)55M N
{66 
preparedStatement77 %
.77% &
CommandText77& 1
=772 3
$str774 Z
;77Z [
SqlParameter88  
idParam88! (
=88) *
new88+ .
SqlParameter88/ ;
(88; <
$str88< A
,88A B
	SqlDbType88C L
.88L M
Int88M P
,88P Q
$num88R S
)88S T
;88T U
idParam99 
.99 
Value99 !
=99" #
id99$ &
;99& '
preparedStatement:: %
.::% &
ExecuteNonQuery::& 5
(::5 6
)::6 7
;::7 8
};; 
IO== 
.== 
WriteString== 
(== 
$str== ;
+==< =
data==> B
+==C D
$str==E I
)==I J
;==J K
}>> 
catch?? 
(?? 
SqlException?? 
	exceptSql??  )
)??) *
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
	exceptSqlAA2 ;
,AA; <
$strAA= T
)AAT U
;AAU V
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
dBConnectionGG $
!=GG% '
nullGG( ,
)GG, -
{HH 
dBConnectionII $
.II$ %
CloseII% *
(II* +
)II+ ,
;II, -
}JJ 
}KK 
catchLL 
(LL 
SqlExceptionLL #
	exceptSqlLL$ -
)LL- .
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
	exceptSqlNN6 ?
,NN? @
$strNNA ]
)NN] ^
;NN^ _
}OO 
}PP 
}QQ 	
}RR 
privateWW 
voidWW 
GoodG2BWW 
(WW 
HttpRequestWW $
reqWW% (
,WW( )
HttpResponseWW* 6
respWW7 ;
)WW; <
{XX 
stringYY 
dataYY 
;YY 
data[[ 
=[[ 
$str[[ 
;[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\ 
$num\\ 
;\\ 
i\\ 
<\\ 
$num\\ 
;\\ 
i\\  
++\\  "
)\\" #
{]] 	
SqlConnection^^ 
dBConnection^^ &
=^^' (
IO^^) +
.^^+ ,
GetDBConnection^^, ;
(^^; <
)^^< =
;^^= >

SqlCommand__ 
preparedStatement__ (
=__) *
null__+ /
;__/ 0
int`` 
id`` 
=`` 
$num`` 
;`` 
tryaa 
{bb 
idcc 
=cc 
intcc 
.cc 
Parsecc 
(cc 
datacc #
)cc# $
;cc$ %
}dd 
catchee 
(ee 
FormatExceptionee "
nfxee# &
)ee& '
{ff 
IOgg 
.gg 
Loggergg 
.gg 
Loggg 
(gg 
NLoggg "
.gg" #
LogLevelgg# +
.gg+ ,
Warngg, 0
,gg0 1
nfxgg2 5
,gg5 6
$strgg7 [
)gg[ \
;gg\ ]
idhh 
=hh 
-hh 
$numhh 
;hh 
}ii 
tryjj 
{kk 
dBConnectionll 
.ll 
Openll !
(ll! "
)ll" #
;ll# $
usingmm 
(mm 
preparedStatementmm (
=mm) *
newmm+ .

SqlCommandmm/ 9
(mm9 :
nullmm: >
,mm> ?
dBConnectionmm@ L
)mmL M
)mmM N
{nn 
preparedStatementoo %
.oo% &
CommandTextoo& 1
=oo2 3
$stroo4 Z
;ooZ [
SqlParameterpp  
idParampp! (
=pp) *
newpp+ .
SqlParameterpp/ ;
(pp; <
$strpp< A
,ppA B
	SqlDbTypeppC L
.ppL M
IntppM P
,ppP Q
$numppR S
)ppS T
;ppT U
idParamqq 
.qq 
Valueqq !
=qq" #
idqq$ &
;qq& '
preparedStatementrr %
.rr% &
ExecuteNonQueryrr& 5
(rr5 6
)rr6 7
;rr7 8
}ss 
IOuu 
.uu 
WriteStringuu 
(uu 
$struu ;
+uu< =
datauu> B
+uuC D
$struuE I
)uuI J
;uuJ K
}vv 
catchww 
(ww 
SqlExceptionww 
	exceptSqlww  )
)ww) *
{xx 
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy "
.yy" #
LogLevelyy# +
.yy+ ,
Warnyy, 0
,yy0 1
	exceptSqlyy2 ;
,yy; <
$stryy= T
)yyT U
;yyU V
}zz 
finally{{ 
{|| 
try}} 
{~~ 
if 
( 
dBConnection $
!=% '
null( ,
), -
{
ÄÄ 
dBConnection
ÅÅ $
.
ÅÅ$ %
Close
ÅÅ% *
(
ÅÅ* +
)
ÅÅ+ ,
;
ÅÅ, -
}
ÇÇ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
SqlException
ÑÑ #
	exceptSql
ÑÑ$ -
)
ÑÑ- .
{
ÖÖ 
IO
ÜÜ 
.
ÜÜ 
Logger
ÜÜ 
.
ÜÜ 
Log
ÜÜ !
(
ÜÜ! "
NLog
ÜÜ" &
.
ÜÜ& '
LogLevel
ÜÜ' /
.
ÜÜ/ 0
Warn
ÜÜ0 4
,
ÜÜ4 5
	exceptSql
ÜÜ6 ?
,
ÜÜ? @
$str
ÜÜA ]
)
ÜÜ] ^
;
ÜÜ^ _
}
áá 
}
àà 
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
HttpRequest
åå )
req
åå* -
,
åå- .
HttpResponse
åå/ ;
resp
åå< @
)
åå@ A
{
çç 
GoodG2B
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
}
èè 
}ëë 
}íí Ù|
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_21.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_21 =
:> ?
AbstractTestCaseWeb@ S
{ 
private   
bool   

badPrivate   
=   
false   #
;  # $
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
;$$ 

badPrivate%% 
=%% 
true%% 
;%% 
data&& 
=&& 

Bad_source&& 
(&& 
req&& 
,&& 
resp&& #
)&&# $
;&&$ %
SqlConnection'' 
dBConnection'' "
=''# $
IO''% '
.''' (
GetDBConnection''( 7
(''7 8
)''8 9
;''9 :

SqlCommand(( 
preparedStatement(( $
=((% &
null((' +
;((+ ,
int)) 
id)) 
=)) 
$num)) 
;)) 
try** 
{++ 	
id,, 
=,, 
int,, 
.,, 
Parse,, 
(,, 
data,, 
),,  
;,,  !
}-- 	
catch.. 
(.. 
FormatException.. 
nfx.. "
).." #
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
nfx00. 1
,001 2
$str003 W
)00W X
;00X Y
id11 
=11 
-11 
$num11 
;11 
}22 	
try33 
{44 	
dBConnection55 
.55 
Open55 
(55 
)55 
;55  
using66 
(66 
preparedStatement66 $
=66% &
new66' *

SqlCommand66+ 5
(665 6
null666 :
,66: ;
dBConnection66< H
)66H I
)66I J
{77 
preparedStatement88 !
.88! "
CommandText88" -
=88. /
$str880 V
;88V W
SqlParameter99 
idParam99 $
=99% &
new99' *
SqlParameter99+ 7
(997 8
$str998 =
,99= >
	SqlDbType99? H
.99H I
Int99I L
,99L M
$num99N O
)99O P
;99P Q
idParam:: 
.:: 
Value:: 
=:: 
id::  "
;::" #
preparedStatement;; !
.;;! "
ExecuteNonQuery;;" 1
(;;1 2
);;2 3
;;;3 4
}<< 
IO>> 
.>> 
WriteString>> 
(>> 
$str>> 7
+>>8 9
data>>: >
+>>? @
$str>>A E
)>>E F
;>>F G
}?? 	
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@ %
)@@% &
{AA 	
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB 
.BB 
LogLevelBB '
.BB' (
WarnBB( ,
,BB, -
	exceptSqlBB. 7
,BB7 8
$strBB9 P
)BBP Q
;BBQ R
}CC 	
finallyDD 
{EE 	
tryFF 
{GG 
ifHH 
(HH 
dBConnectionHH  
!=HH! #
nullHH$ (
)HH( )
{II 
dBConnectionJJ  
.JJ  !
CloseJJ! &
(JJ& '
)JJ' (
;JJ( )
}KK 
}LL 
catchMM 
(MM 
SqlExceptionMM 
	exceptSqlMM  )
)MM) *
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
	exceptSqlOO2 ;
,OO; <
$strOO= Y
)OOY Z
;OOZ [
}PP 
}QQ 	
}RR 
privateTT 
stringTT 

Bad_sourceTT 
(TT 
HttpRequestTT )
reqTT* -
,TT- .
HttpResponseTT/ ;
respTT< @
)TT@ A
{UU 
stringVV 
dataVV 
;VV 
ifWW 

(WW 

badPrivateWW 
)WW 
{XX 	
dataZZ 
=ZZ 
reqZZ 
.ZZ 
ParamsZZ 
.ZZ 
GetZZ !
(ZZ! "
$strZZ" &
)ZZ& '
;ZZ' (
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
null`` 
;`` 
}aa 	
returnbb 
databb 
;bb 
}cc 
privateff 
boolff 
goodG2B1_privateff !
=ff" #
falseff$ )
;ff) *
privategg 
boolgg 
GoodG2B2_privategg !
=gg" #
falsegg$ )
;gg) *
publicii 

overrideii 
voidii 
Goodii 
(ii 
HttpRequestii )
reqii* -
,ii- .
HttpResponseii/ ;
respii< @
)ii@ A
{jj 
GoodG2B1kk 
(kk 
reqkk 
,kk 
respkk 
)kk 
;kk 
GoodG2B2ll 
(ll 
reqll 
,ll 
respll 
)ll 
;ll 
}mm 
privatepp 
voidpp 
GoodG2B1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
goodG2B1_privatess 
=ss 
falsess  
;ss  !
datatt 
=tt 
GoodG2B1_sourcett 
(tt 
reqtt "
,tt" #
resptt$ (
)tt( )
;tt) *
SqlConnectionuu 
dBConnectionuu "
=uu# $
IOuu% '
.uu' (
GetDBConnectionuu( 7
(uu7 8
)uu8 9
;uu9 :

SqlCommandvv 
preparedStatementvv $
=vv% &
nullvv' +
;vv+ ,
intww 
idww 
=ww 
$numww 
;ww 
tryxx 
{yy 	
idzz 
=zz 
intzz 
.zz 
Parsezz 
(zz 
datazz 
)zz  
;zz  !
}{{ 	
catch|| 
(|| 
FormatException|| 
nfx|| "
)||" #
{}} 	
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ 
(~~ 
NLog~~ 
.~~ 
LogLevel~~ '
.~~' (
Warn~~( ,
,~~, -
nfx~~. 1
,~~1 2
$str~~3 W
)~~W X
;~~X Y
id 
= 
- 
$num 
; 
}
ÄÄ 	
try
ÅÅ 
{
ÇÇ 	
dBConnection
ÉÉ 
.
ÉÉ 
Open
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ  
using
ÑÑ 
(
ÑÑ 
preparedStatement
ÑÑ $
=
ÑÑ% &
new
ÑÑ' *

SqlCommand
ÑÑ+ 5
(
ÑÑ5 6
null
ÑÑ6 :
,
ÑÑ: ;
dBConnection
ÑÑ< H
)
ÑÑH I
)
ÑÑI J
{
ÖÖ 
preparedStatement
ÜÜ !
.
ÜÜ! "
CommandText
ÜÜ" -
=
ÜÜ. /
$str
ÜÜ0 V
;
ÜÜV W
SqlParameter
áá 
idParam
áá $
=
áá% &
new
áá' *
SqlParameter
áá+ 7
(
áá7 8
$str
áá8 =
,
áá= >
	SqlDbType
áá? H
.
ááH I
Int
ááI L
,
ááL M
$num
ááN O
)
ááO P
;
ááP Q
idParam
àà 
.
àà 
Value
àà 
=
àà 
id
àà  "
;
àà" #
preparedStatement
ââ !
.
ââ! "
ExecuteNonQuery
ââ" 1
(
ââ1 2
)
ââ2 3
;
ââ3 4
}
ää 
IO
åå 
.
åå 
WriteString
åå 
(
åå 
$str
åå 7
+
åå8 9
data
åå: >
+
åå? @
$str
ååA E
)
ååE F
;
ååF G
}
çç 	
catch
éé 
(
éé 
SqlException
éé 
	exceptSql
éé %
)
éé% &
{
èè 	
IO
êê 
.
êê 
Logger
êê 
.
êê 
Log
êê 
(
êê 
NLog
êê 
.
êê 
LogLevel
êê '
.
êê' (
Warn
êê( ,
,
êê, -
	exceptSql
êê. 7
,
êê7 8
$str
êê9 P
)
êêP Q
;
êêQ R
}
ëë 	
finally
íí 
{
ìì 	
try
îî 
{
ïï 
if
ññ 
(
ññ 
dBConnection
ññ  
!=
ññ! #
null
ññ$ (
)
ññ( )
{
óó 
dBConnection
òò  
.
òò  !
Close
òò! &
(
òò& '
)
òò' (
;
òò( )
}
ôô 
}
öö 
catch
õõ 
(
õõ 
SqlException
õõ 
	exceptSql
õõ  )
)
õõ) *
{
úú 
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù "
.
ùù" #
LogLevel
ùù# +
.
ùù+ ,
Warn
ùù, 0
,
ùù0 1
	exceptSql
ùù2 ;
,
ùù; <
$str
ùù= Y
)
ùùY Z
;
ùùZ [
}
ûû 
}
üü 	
}
†† 
private
¢¢ 
string
¢¢ 
GoodG2B1_source
¢¢ "
(
¢¢" #
HttpRequest
¢¢# .
req
¢¢/ 2
,
¢¢2 3
HttpResponse
¢¢4 @
resp
¢¢A E
)
¢¢E F
{
££ 
string
§§ 
data
§§ 
=
§§ 
null
§§ 
;
§§ 
if
•• 

(
•• 
goodG2B1_private
•• 
)
•• 
{
¶¶ 	
data
©© 
=
©© 
null
©© 
;
©© 
}
™™ 	
else
´´ 
{
¨¨ 	
data
ÆÆ 
=
ÆÆ 
$str
ÆÆ 
;
ÆÆ 
}
ØØ 	
return
∞∞ 
data
∞∞ 
;
∞∞ 
}
±± 
private
¥¥ 
void
¥¥ 
GoodG2B2
¥¥ 
(
¥¥ 
HttpRequest
¥¥ %
req
¥¥& )
,
¥¥) *
HttpResponse
¥¥+ 7
resp
¥¥8 <
)
¥¥< =
{
µµ 
string
∂∂ 
data
∂∂ 
;
∂∂ 
GoodG2B2_private
∑∑ 
=
∑∑ 
true
∑∑ 
;
∑∑  
data
∏∏ 
=
∏∏ 
GoodG2B2_source
∏∏ 
(
∏∏ 
req
∏∏ "
,
∏∏" #
resp
∏∏$ (
)
∏∏( )
;
∏∏) *
SqlConnection
ππ 
dBConnection
ππ "
=
ππ# $
IO
ππ% '
.
ππ' (
GetDBConnection
ππ( 7
(
ππ7 8
)
ππ8 9
;
ππ9 :

SqlCommand
∫∫ 
preparedStatement
∫∫ $
=
∫∫% &
null
∫∫' +
;
∫∫+ ,
int
ªª 
id
ªª 
=
ªª 
$num
ªª 
;
ªª 
try
ºº 
{
ΩΩ 	
id
ææ 
=
ææ 
int
ææ 
.
ææ 
Parse
ææ 
(
ææ 
data
ææ 
)
ææ  
;
ææ  !
}
øø 	
catch
¿¿ 
(
¿¿ 
FormatException
¿¿ 
nfx
¿¿ "
)
¿¿" #
{
¡¡ 	
IO
¬¬ 
.
¬¬ 
Logger
¬¬ 
.
¬¬ 
Log
¬¬ 
(
¬¬ 
NLog
¬¬ 
.
¬¬ 
LogLevel
¬¬ '
.
¬¬' (
Warn
¬¬( ,
,
¬¬, -
nfx
¬¬. 1
,
¬¬1 2
$str
¬¬3 W
)
¬¬W X
;
¬¬X Y
id
√√ 
=
√√ 
-
√√ 
$num
√√ 
;
√√ 
}
ƒƒ 	
try
≈≈ 
{
∆∆ 	
dBConnection
«« 
.
«« 
Open
«« 
(
«« 
)
«« 
;
««  
using
»» 
(
»» 
preparedStatement
»» $
=
»»% &
new
»»' *

SqlCommand
»»+ 5
(
»»5 6
null
»»6 :
,
»»: ;
dBConnection
»»< H
)
»»H I
)
»»I J
{
…… 
preparedStatement
   !
.
  ! "
CommandText
  " -
=
  . /
$str
  0 V
;
  V W
SqlParameter
ÀÀ 
idParam
ÀÀ $
=
ÀÀ% &
new
ÀÀ' *
SqlParameter
ÀÀ+ 7
(
ÀÀ7 8
$str
ÀÀ8 =
,
ÀÀ= >
	SqlDbType
ÀÀ? H
.
ÀÀH I
Int
ÀÀI L
,
ÀÀL M
$num
ÀÀN O
)
ÀÀO P
;
ÀÀP Q
idParam
ÃÃ 
.
ÃÃ 
Value
ÃÃ 
=
ÃÃ 
id
ÃÃ  "
;
ÃÃ" #
preparedStatement
ÕÕ !
.
ÕÕ! "
ExecuteNonQuery
ÕÕ" 1
(
ÕÕ1 2
)
ÕÕ2 3
;
ÕÕ3 4
}
ŒŒ 
IO
–– 
.
–– 
WriteString
–– 
(
–– 
$str
–– 7
+
––8 9
data
––: >
+
––? @
$str
––A E
)
––E F
;
––F G
}
—— 	
catch
““ 
(
““ 
SqlException
““ 
	exceptSql
““ %
)
““% &
{
”” 	
IO
‘‘ 
.
‘‘ 
Logger
‘‘ 
.
‘‘ 
Log
‘‘ 
(
‘‘ 
NLog
‘‘ 
.
‘‘ 
LogLevel
‘‘ '
.
‘‘' (
Warn
‘‘( ,
,
‘‘, -
	exceptSql
‘‘. 7
,
‘‘7 8
$str
‘‘9 P
)
‘‘P Q
;
‘‘Q R
}
’’ 	
finally
÷÷ 
{
◊◊ 	
try
ÿÿ 
{
ŸŸ 
if
⁄⁄ 
(
⁄⁄ 
dBConnection
⁄⁄  
!=
⁄⁄! #
null
⁄⁄$ (
)
⁄⁄( )
{
€€ 
dBConnection
‹‹  
.
‹‹  !
Close
‹‹! &
(
‹‹& '
)
‹‹' (
;
‹‹( )
}
›› 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
SqlException
ﬂﬂ 
	exceptSql
ﬂﬂ  )
)
ﬂﬂ) *
{
‡‡ 
IO
·· 
.
·· 
Logger
·· 
.
·· 
Log
·· 
(
·· 
NLog
·· "
.
··" #
LogLevel
··# +
.
··+ ,
Warn
··, 0
,
··0 1
	exceptSql
··2 ;
,
··; <
$str
··= Y
)
··Y Z
;
··Z [
}
‚‚ 
}
„„ 	
}
‰‰ 
private
ÊÊ 
string
ÊÊ 
GoodG2B2_source
ÊÊ "
(
ÊÊ" #
HttpRequest
ÊÊ# .
req
ÊÊ/ 2
,
ÊÊ2 3
HttpResponse
ÊÊ4 @
resp
ÊÊA E
)
ÊÊE F
{
ÁÁ 
string
ËË 
data
ËË 
=
ËË 
null
ËË 
;
ËË 
if
ÈÈ 

(
ÈÈ 
GoodG2B2_private
ÈÈ 
)
ÈÈ 
{
ÍÍ 	
data
ÏÏ 
=
ÏÏ 
$str
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
else
ÓÓ 
{
ÔÔ 	
data
ÚÚ 
=
ÚÚ 
null
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
return
ÙÙ 
data
ÙÙ 
;
ÙÙ 
}
ıı 
}˜˜ 
}¯¯ ´m
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22a >
:? @
AbstractTestCaseWebA T
{ 
public   

static   
bool   
badPublicStatic   &
=  ' (
false  ) .
;  . /
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
;$$ 
badPublicStatic%% 
=%% 
true%% 
;%% 
data&& 
=&& D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22b&& G
.&&G H
	BadSource&&H Q
(&&Q R
req&&R U
,&&U V
resp&&W [
)&&[ \
;&&\ ]
SqlConnection'' 
dBConnection'' "
=''# $
IO''% '
.''' (
GetDBConnection''( 7
(''7 8
)''8 9
;''9 :

SqlCommand(( 
preparedStatement(( $
=((% &
null((' +
;((+ ,
int)) 
id)) 
=)) 
$num)) 
;)) 
try** 
{++ 	
id,, 
=,, 
int,, 
.,, 
Parse,, 
(,, 
data,, 
),,  
;,,  !
}-- 	
catch.. 
(.. 
FormatException.. 
nfx.. "
).." #
{// 	
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 
.00 
LogLevel00 '
.00' (
Warn00( ,
,00, -
nfx00. 1
,001 2
$str003 W
)00W X
;00X Y
id11 
=11 
-11 
$num11 
;11 
}22 	
try33 
{44 	
dBConnection55 
.55 
Open55 
(55 
)55 
;55  
using66 
(66 
preparedStatement66 $
=66% &
new66' *

SqlCommand66+ 5
(665 6
null666 :
,66: ;
dBConnection66< H
)66H I
)66I J
{77 
preparedStatement88 !
.88! "
CommandText88" -
=88. /
$str880 V
;88V W
SqlParameter99 
idParam99 $
=99% &
new99' *
SqlParameter99+ 7
(997 8
$str998 =
,99= >
	SqlDbType99? H
.99H I
Int99I L
,99L M
$num99N O
)99O P
;99P Q
idParam:: 
.:: 
Value:: 
=:: 
id::  "
;::" #
preparedStatement;; !
.;;! "
ExecuteNonQuery;;" 1
(;;1 2
);;2 3
;;;3 4
}<< 
IO>> 
.>> 
WriteString>> 
(>> 
$str>> 7
+>>8 9
data>>: >
+>>? @
$str>>A E
)>>E F
;>>F G
}?? 	
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@ %
)@@% &
{AA 	
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB 
.BB 
LogLevelBB '
.BB' (
WarnBB( ,
,BB, -
	exceptSqlBB. 7
,BB7 8
$strBB9 P
)BBP Q
;BBQ R
}CC 	
finallyDD 
{EE 	
tryFF 
{GG 
ifHH 
(HH 
dBConnectionHH  
!=HH! #
nullHH$ (
)HH( )
{II 
dBConnectionJJ  
.JJ  !
CloseJJ! &
(JJ& '
)JJ' (
;JJ( )
}KK 
}LL 
catchMM 
(MM 
SqlExceptionMM 
	exceptSqlMM  )
)MM) *
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
	exceptSqlOO2 ;
,OO; <
$strOO= Y
)OOY Z
;OOZ [
}PP 
}QQ 	
}RR 
publicVV 

staticVV 
boolVV  
goodG2B1PublicStaticVV +
=VV, -
falseVV. 3
;VV3 4
publicWW 

staticWW 
boolWW  
GoodG2B2PublicStaticWW +
=WW, -
falseWW. 3
;WW3 4
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
HttpRequestYY )
reqYY* -
,YY- .
HttpResponseYY/ ;
respYY< @
)YY@ A
{ZZ 
GoodG2B1[[ 
([[ 
req[[ 
,[[ 
resp[[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
req\\ 
,\\ 
resp\\ 
)\\ 
;\\ 
}]] 
private`` 
void`` 
GoodG2B1`` 
(`` 
HttpRequest`` %
req``& )
,``) *
HttpResponse``+ 7
resp``8 <
)``< =
{aa 
stringbb 
databb 
;bb  
goodG2B1PublicStaticcc 
=cc 
falsecc $
;cc$ %
datadd 
=dd D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22bdd G
.ddG H
GoodG2B1SourceddH V
(ddV W
reqddW Z
,ddZ [
respdd\ `
)dd` a
;dda b
SqlConnectionee 
dBConnectionee "
=ee# $
IOee% '
.ee' (
GetDBConnectionee( 7
(ee7 8
)ee8 9
;ee9 :

SqlCommandff 
preparedStatementff $
=ff% &
nullff' +
;ff+ ,
intgg 
idgg 
=gg 
$numgg 
;gg 
tryhh 
{ii 	
idjj 
=jj 
intjj 
.jj 
Parsejj 
(jj 
datajj 
)jj  
;jj  !
}kk 	
catchll 
(ll 
FormatExceptionll 
nfxll "
)ll" #
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
nfxnn. 1
,nn1 2
$strnn3 W
)nnW X
;nnX Y
idoo 
=oo 
-oo 
$numoo 
;oo 
}pp 	
tryqq 
{rr 	
dBConnectionss 
.ss 
Openss 
(ss 
)ss 
;ss  
usingtt 
(tt 
preparedStatementtt $
=tt% &
newtt' *

SqlCommandtt+ 5
(tt5 6
nulltt6 :
,tt: ;
dBConnectiontt< H
)ttH I
)ttI J
{uu 
preparedStatementvv !
.vv! "
CommandTextvv" -
=vv. /
$strvv0 V
;vvV W
SqlParameterww 
idParamww $
=ww% &
newww' *
SqlParameterww+ 7
(ww7 8
$strww8 =
,ww= >
	SqlDbTypeww? H
.wwH I
IntwwI L
,wwL M
$numwwN O
)wwO P
;wwP Q
idParamxx 
.xx 
Valuexx 
=xx 
idxx  "
;xx" #
preparedStatementyy !
.yy! "
ExecuteNonQueryyy" 1
(yy1 2
)yy2 3
;yy3 4
}zz 
IO|| 
.|| 
WriteString|| 
(|| 
$str|| 7
+||8 9
data||: >
+||? @
$str||A E
)||E F
;||F G
}}} 	
catch~~ 
(~~ 
SqlException~~ 
	exceptSql~~ %
)~~% &
{ 	
IO
ÄÄ 
.
ÄÄ 
Logger
ÄÄ 
.
ÄÄ 
Log
ÄÄ 
(
ÄÄ 
NLog
ÄÄ 
.
ÄÄ 
LogLevel
ÄÄ '
.
ÄÄ' (
Warn
ÄÄ( ,
,
ÄÄ, -
	exceptSql
ÄÄ. 7
,
ÄÄ7 8
$str
ÄÄ9 P
)
ÄÄP Q
;
ÄÄQ R
}
ÅÅ 	
finally
ÇÇ 
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
dBConnection
ÜÜ  
!=
ÜÜ! #
null
ÜÜ$ (
)
ÜÜ( )
{
áá 
dBConnection
àà  
.
àà  !
Close
àà! &
(
àà& '
)
àà' (
;
àà( )
}
ââ 
}
ää 
catch
ãã 
(
ãã 
SqlException
ãã 
	exceptSql
ãã  )
)
ãã) *
{
åå 
IO
çç 
.
çç 
Logger
çç 
.
çç 
Log
çç 
(
çç 
NLog
çç "
.
çç" #
LogLevel
çç# +
.
çç+ ,
Warn
çç, 0
,
çç0 1
	exceptSql
çç2 ;
,
çç; <
$str
çç= Y
)
ççY Z
;
ççZ [
}
éé 
}
èè 	
}
êê 
private
ìì 
void
ìì 
GoodG2B2
ìì 
(
ìì 
HttpRequest
ìì %
req
ìì& )
,
ìì) *
HttpResponse
ìì+ 7
resp
ìì8 <
)
ìì< =
{
îî 
string
ïï 
data
ïï 
;
ïï "
GoodG2B2PublicStatic
ññ 
=
ññ 
true
ññ #
;
ññ# $
data
óó 
=
óó F
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22b
óó G
.
óóG H
GoodG2B2Source
óóH V
(
óóV W
req
óóW Z
,
óóZ [
resp
óó\ `
)
óó` a
;
óóa b
SqlConnection
òò 
dBConnection
òò "
=
òò# $
IO
òò% '
.
òò' (
GetDBConnection
òò( 7
(
òò7 8
)
òò8 9
;
òò9 :

SqlCommand
ôô 
preparedStatement
ôô $
=
ôô% &
null
ôô' +
;
ôô+ ,
int
öö 
id
öö 
=
öö 
$num
öö 
;
öö 
try
õõ 
{
úú 	
id
ùù 
=
ùù 
int
ùù 
.
ùù 
Parse
ùù 
(
ùù 
data
ùù 
)
ùù  
;
ùù  !
}
ûû 	
catch
üü 
(
üü 
FormatException
üü 
nfx
üü "
)
üü" #
{
†† 	
IO
°° 
.
°° 
Logger
°° 
.
°° 
Log
°° 
(
°° 
NLog
°° 
.
°° 
LogLevel
°° '
.
°°' (
Warn
°°( ,
,
°°, -
nfx
°°. 1
,
°°1 2
$str
°°3 W
)
°°W X
;
°°X Y
id
¢¢ 
=
¢¢ 
-
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 	
try
§§ 
{
•• 	
dBConnection
¶¶ 
.
¶¶ 
Open
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶  
using
ßß 
(
ßß 
preparedStatement
ßß $
=
ßß% &
new
ßß' *

SqlCommand
ßß+ 5
(
ßß5 6
null
ßß6 :
,
ßß: ;
dBConnection
ßß< H
)
ßßH I
)
ßßI J
{
®® 
preparedStatement
©© !
.
©©! "
CommandText
©©" -
=
©©. /
$str
©©0 V
;
©©V W
SqlParameter
™™ 
idParam
™™ $
=
™™% &
new
™™' *
SqlParameter
™™+ 7
(
™™7 8
$str
™™8 =
,
™™= >
	SqlDbType
™™? H
.
™™H I
Int
™™I L
,
™™L M
$num
™™N O
)
™™O P
;
™™P Q
idParam
´´ 
.
´´ 
Value
´´ 
=
´´ 
id
´´  "
;
´´" #
preparedStatement
¨¨ !
.
¨¨! "
ExecuteNonQuery
¨¨" 1
(
¨¨1 2
)
¨¨2 3
;
¨¨3 4
}
≠≠ 
IO
ØØ 
.
ØØ 
WriteString
ØØ 
(
ØØ 
$str
ØØ 7
+
ØØ8 9
data
ØØ: >
+
ØØ? @
$str
ØØA E
)
ØØE F
;
ØØF G
}
∞∞ 	
catch
±± 
(
±± 
SqlException
±± 
	exceptSql
±± %
)
±±% &
{
≤≤ 	
IO
≥≥ 
.
≥≥ 
Logger
≥≥ 
.
≥≥ 
Log
≥≥ 
(
≥≥ 
NLog
≥≥ 
.
≥≥ 
LogLevel
≥≥ '
.
≥≥' (
Warn
≥≥( ,
,
≥≥, -
	exceptSql
≥≥. 7
,
≥≥7 8
$str
≥≥9 P
)
≥≥P Q
;
≥≥Q R
}
¥¥ 	
finally
µµ 
{
∂∂ 	
try
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
dBConnection
ππ  
!=
ππ! #
null
ππ$ (
)
ππ( )
{
∫∫ 
dBConnection
ªª  
.
ªª  !
Close
ªª! &
(
ªª& '
)
ªª' (
;
ªª( )
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
SqlException
ææ 
	exceptSql
ææ  )
)
ææ) *
{
øø 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ 
.
¿¿ 
Log
¿¿ 
(
¿¿ 
NLog
¿¿ "
.
¿¿" #
LogLevel
¿¿# +
.
¿¿+ ,
Warn
¿¿, 0
,
¿¿0 1
	exceptSql
¿¿2 ;
,
¿¿; <
$str
¿¿= Y
)
¿¿Y Z
;
¿¿Z [
}
¡¡ 
}
¬¬ 	
}
√√ 
}≈≈ 
}∆∆ ¬
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22b >
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string 
data 
; 
if 

( D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22a D
.D E
badPublicStaticE T
)T U
{   	
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" !
(""! "
$str""" &
)""& '
;""' (
}## 	
else$$ 
{%% 	
data(( 
=(( 
null(( 
;(( 
})) 	
return** 
data** 
;** 
}++ 
public00 

static00 
string00 
GoodG2B1Source00 '
(00' (
HttpRequest00( 3
req004 7
,007 8
HttpResponse009 E
resp00F J
)00J K
{11 
string22 
data22 
;22 
if33 

(33 D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22a33 D
.33D E 
goodG2B1PublicStatic33E Y
)33Y Z
{44 	
data77 
=77 
null77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$str<< 
;<< 
}== 	
return>> 
data>> 
;>> 
}?? 
publicBB 

staticBB 
stringBB 
GoodG2B2SourceBB '
(BB' (
HttpRequestBB( 3
reqBB4 7
,BB7 8
HttpResponseBB9 E
respBBF J
)BBJ K
{CC 
stringDD 
dataDD 
;DD 
ifEE 

(EE D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_22aEE D
.EED E 
GoodG2B2PublicStaticEEE Y
)EEY Z
{FF 	
dataHH 
=HH 
$strHH 
;HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
nullNN 
;NN 
}OO 	
returnPP 
dataPP 
;PP 
}QQ 
}SS 
}TT ˆG
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_31.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_31 =
:> ?
AbstractTestCaseWeb@ S
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
dataCopy"" 
;"" 
{## 	
string$$ 
data$$ 
;$$ 
data&& 
=&& 
req&& 
.&& 
Params&& 
.&& 
Get&& !
(&&! "
$str&&" &
)&&& '
;&&' (
dataCopy'' 
='' 
data'' 
;'' 
}(( 	
{)) 	
string** 
data** 
=** 
dataCopy** "
;**" #
SqlConnection++ 
dBConnection++ &
=++' (
IO++) +
.+++ ,
GetDBConnection++, ;
(++; <
)++< =
;++= >

SqlCommand,, 
preparedStatement,, (
=,,) *
null,,+ /
;,,/ 0
int-- 
id-- 
=-- 
$num-- 
;-- 
try.. 
{// 
id00 
=00 
int00 
.00 
Parse00 
(00 
data00 #
)00# $
;00$ %
}11 
catch22 
(22 
FormatException22 "
nfx22# &
)22& '
{33 
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 "
.44" #
LogLevel44# +
.44+ ,
Warn44, 0
,440 1
nfx442 5
,445 6
$str447 [
)44[ \
;44\ ]
id55 
=55 
-55 
$num55 
;55 
}66 
try77 
{88 
dBConnection99 
.99 
Open99 !
(99! "
)99" #
;99# $
using:: 
(:: 
preparedStatement:: (
=::) *
new::+ .

SqlCommand::/ 9
(::9 :
null::: >
,::> ?
dBConnection::@ L
)::L M
)::M N
{;; 
preparedStatement<< %
.<<% &
CommandText<<& 1
=<<2 3
$str<<4 Z
;<<Z [
SqlParameter==  
idParam==! (
===) *
new==+ .
SqlParameter==/ ;
(==; <
$str==< A
,==A B
	SqlDbType==C L
.==L M
Int==M P
,==P Q
$num==R S
)==S T
;==T U
idParam>> 
.>> 
Value>> !
=>>" #
id>>$ &
;>>& '
preparedStatement?? %
.??% &
ExecuteNonQuery??& 5
(??5 6
)??6 7
;??7 8
}@@ 
IOBB 
.BB 
WriteStringBB 
(BB 
$strBB ;
+BB< =
dataBB> B
+BBC D
$strBBE I
)BBI J
;BBJ K
}CC 
catchDD 
(DD 
SqlExceptionDD 
	exceptSqlDD  )
)DD) *
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF "
.FF" #
LogLevelFF# +
.FF+ ,
WarnFF, 0
,FF0 1
	exceptSqlFF2 ;
,FF; <
$strFF= T
)FFT U
;FFU V
}GG 
finallyHH 
{II 
tryJJ 
{KK 
ifLL 
(LL 
dBConnectionLL $
!=LL% '
nullLL( ,
)LL, -
{MM 
dBConnectionNN $
.NN$ %
CloseNN% *
(NN* +
)NN+ ,
;NN, -
}OO 
}PP 
catchQQ 
(QQ 
SqlExceptionQQ #
	exceptSqlQQ$ -
)QQ- .
{RR 
IOSS 
.SS 
LoggerSS 
.SS 
LogSS !
(SS! "
NLogSS" &
.SS& '
LogLevelSS' /
.SS/ 0
WarnSS0 4
,SS4 5
	exceptSqlSS6 ?
,SS? @
$strSSA ]
)SS] ^
;SS^ _
}TT 
}UU 
}VV 	
}WW 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
HttpRequestZZ )
reqZZ* -
,ZZ- .
HttpResponseZZ/ ;
respZZ< @
)ZZ@ A
{[[ 
GoodG2B\\ 
(\\ 
req\\ 
,\\ 
resp\\ 
)\\ 
;\\ 
}]] 
private`` 
void`` 
GoodG2B`` 
(`` 
HttpRequest`` $
req``% (
,``( )
HttpResponse``* 6
resp``7 ;
)``; <
{aa 
stringbb 
dataCopybb 
;bb 
{cc 	
stringdd 
datadd 
;dd 
dataff 
=ff 
$strff 
;ff 
dataCopygg 
=gg 
datagg 
;gg 
}hh 	
{ii 	
stringjj 
datajj 
=jj 
dataCopyjj "
;jj" #
SqlConnectionkk 
dBConnectionkk &
=kk' (
IOkk) +
.kk+ ,
GetDBConnectionkk, ;
(kk; <
)kk< =
;kk= >

SqlCommandll 
preparedStatementll (
=ll) *
nullll+ /
;ll/ 0
intmm 
idmm 
=mm 
$nummm 
;mm 
trynn 
{oo 
idpp 
=pp 
intpp 
.pp 
Parsepp 
(pp 
datapp #
)pp# $
;pp$ %
}qq 
catchrr 
(rr 
FormatExceptionrr "
nfxrr# &
)rr& '
{ss 
IOtt 
.tt 
Loggertt 
.tt 
Logtt 
(tt 
NLogtt "
.tt" #
LogLeveltt# +
.tt+ ,
Warntt, 0
,tt0 1
nfxtt2 5
,tt5 6
$strtt7 [
)tt[ \
;tt\ ]
iduu 
=uu 
-uu 
$numuu 
;uu 
}vv 
tryww 
{xx 
dBConnectionyy 
.yy 
Openyy !
(yy! "
)yy" #
;yy# $
usingzz 
(zz 
preparedStatementzz (
=zz) *
newzz+ .

SqlCommandzz/ 9
(zz9 :
nullzz: >
,zz> ?
dBConnectionzz@ L
)zzL M
)zzM N
{{{ 
preparedStatement|| %
.||% &
CommandText||& 1
=||2 3
$str||4 Z
;||Z [
SqlParameter}}  
idParam}}! (
=}}) *
new}}+ .
SqlParameter}}/ ;
(}}; <
$str}}< A
,}}A B
	SqlDbType}}C L
.}}L M
Int}}M P
,}}P Q
$num}}R S
)}}S T
;}}T U
idParam~~ 
.~~ 
Value~~ !
=~~" #
id~~$ &
;~~& '
preparedStatement %
.% &
ExecuteNonQuery& 5
(5 6
)6 7
;7 8
}
ÄÄ 
IO
ÇÇ 
.
ÇÇ 
WriteString
ÇÇ 
(
ÇÇ 
$str
ÇÇ ;
+
ÇÇ< =
data
ÇÇ> B
+
ÇÇC D
$str
ÇÇE I
)
ÇÇI J
;
ÇÇJ K
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
SqlException
ÑÑ 
	exceptSql
ÑÑ  )
)
ÑÑ) *
{
ÖÖ 
IO
ÜÜ 
.
ÜÜ 
Logger
ÜÜ 
.
ÜÜ 
Log
ÜÜ 
(
ÜÜ 
NLog
ÜÜ "
.
ÜÜ" #
LogLevel
ÜÜ# +
.
ÜÜ+ ,
Warn
ÜÜ, 0
,
ÜÜ0 1
	exceptSql
ÜÜ2 ;
,
ÜÜ; <
$str
ÜÜ= T
)
ÜÜT U
;
ÜÜU V
}
áá 
finally
àà 
{
ââ 
try
ää 
{
ãã 
if
åå 
(
åå 
dBConnection
åå $
!=
åå% '
null
åå( ,
)
åå, -
{
çç 
dBConnection
éé $
.
éé$ %
Close
éé% *
(
éé* +
)
éé+ ,
;
éé, -
}
èè 
}
êê 
catch
ëë 
(
ëë 
SqlException
ëë #
	exceptSql
ëë$ -
)
ëë- .
{
íí 
IO
ìì 
.
ìì 
Logger
ìì 
.
ìì 
Log
ìì !
(
ìì! "
NLog
ìì" &
.
ìì& '
LogLevel
ìì' /
.
ìì/ 0
Warn
ìì0 4
,
ìì4 5
	exceptSql
ìì6 ?
,
ìì? @
$str
ììA ]
)
ìì] ^
;
ìì^ _
}
îî 
}
ïï 
}
ññ 	
}
óó 
}ôô 
}öö ∂J
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_41.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_41 =
:> ?
AbstractTestCaseWeb@ S
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
SqlConnection   
dBConnection   "
=  # $
IO  % '
.  ' (
GetDBConnection  ( 7
(  7 8
)  8 9
;  9 :

SqlCommand!! 
preparedStatement!! $
=!!% &
null!!' +
;!!+ ,
int"" 
id"" 
="" 
$num"" 
;"" 
try## 
{$$ 	
id%% 
=%% 
int%% 
.%% 
Parse%% 
(%% 
data%% 
)%%  
;%%  !
}&& 	
catch'' 
('' 
FormatException'' 
nfx'' "
)''" #
{(( 	
IO)) 
.)) 
Logger)) 
.)) 
Log)) 
()) 
NLog)) 
.)) 
LogLevel)) '
.))' (
Warn))( ,
,)), -
nfx)). 1
,))1 2
$str))3 W
)))W X
;))X Y
id** 
=** 
-** 
$num** 
;** 
}++ 	
try,, 
{-- 	
dBConnection.. 
... 
Open.. 
(.. 
).. 
;..  
using// 
(// 
preparedStatement// $
=//% &
new//' *

SqlCommand//+ 5
(//5 6
null//6 :
,//: ;
dBConnection//< H
)//H I
)//I J
{00 
preparedStatement11 !
.11! "
CommandText11" -
=11. /
$str110 V
;11V W
SqlParameter22 
idParam22 $
=22% &
new22' *
SqlParameter22+ 7
(227 8
$str228 =
,22= >
	SqlDbType22? H
.22H I
Int22I L
,22L M
$num22N O
)22O P
;22P Q
idParam33 
.33 
Value33 
=33 
id33  "
;33" #
preparedStatement44 !
.44! "
ExecuteNonQuery44" 1
(441 2
)442 3
;443 4
}55 
IO77 
.77 
WriteString77 
(77 
$str77 7
+778 9
data77: >
+77? @
$str77A E
)77E F
;77F G
}88 	
catch99 
(99 
SqlException99 
	exceptSql99 %
)99% &
{:: 	
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; 
.;; 
LogLevel;; '
.;;' (
Warn;;( ,
,;;, -
	exceptSql;;. 7
,;;7 8
$str;;9 P
);;P Q
;;;Q R
}<< 	
finally== 
{>> 	
try?? 
{@@ 
ifAA 
(AA 
dBConnectionAA  
!=AA! #
nullAA$ (
)AA( )
{BB 
dBConnectionCC  
.CC  !
CloseCC! &
(CC& '
)CC' (
;CC( )
}DD 
}EE 
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF  )
)FF) *
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
	exceptSqlHH2 ;
,HH; <
$strHH= Y
)HHY Z
;HHZ [
}II 
}JJ 	
}KK 
publicMM 

overrideMM 
voidMM 
BadMM 
(MM 
HttpRequestMM (
reqMM) ,
,MM, -
HttpResponseMM. :
respMM; ?
)MM? @
{NN 
stringOO 
dataOO 
;OO 
dataQQ 
=QQ 
reqQQ 
.QQ 
ParamsQQ 
.QQ 
GetQQ 
(QQ 
$strQQ "
)QQ" #
;QQ# $
BadSinkRR 
(RR 
dataRR 
,RR 
reqRR 
,RR 
respRR  
)RR! "
;RR" #
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
HttpRequestVV )
reqVV* -
,VV- .
HttpResponseVV/ ;
respVV< @
)VV@ A
{WW 
GoodG2BXX 
(XX 
reqXX 
,XX 
respXX 
)XX 
;XX 
}YY 
private[[ 
static[[ 
void[[ 
GoodG2BSink[[ #
([[# $
string[[$ *
data[[+ /
,[[0 1
HttpRequest[[2 =
req[[> A
,[[A B
HttpResponse[[C O
resp[[P T
)[[T U
{\\ 
SqlConnection]] 
dBConnection]] "
=]]# $
IO]]% '
.]]' (
GetDBConnection]]( 7
(]]7 8
)]]8 9
;]]9 :

SqlCommand^^ 
preparedStatement^^ $
=^^% &
null^^' +
;^^+ ,
int__ 
id__ 
=__ 
$num__ 
;__ 
try`` 
{aa 	
idbb 
=bb 
intbb 
.bb 
Parsebb 
(bb 
databb 
)bb  
;bb  !
}cc 	
catchdd 
(dd 
FormatExceptiondd 
nfxdd "
)dd" #
{ee 	
IOff 
.ff 
Loggerff 
.ff 
Logff 
(ff 
NLogff 
.ff 
LogLevelff '
.ff' (
Warnff( ,
,ff, -
nfxff. 1
,ff1 2
$strff3 W
)ffW X
;ffX Y
idgg 
=gg 
-gg 
$numgg 
;gg 
}hh 	
tryii 
{jj 	
dBConnectionkk 
.kk 
Openkk 
(kk 
)kk 
;kk  
usingll 
(ll 
preparedStatementll $
=ll% &
newll' *

SqlCommandll+ 5
(ll5 6
nullll6 :
,ll: ;
dBConnectionll< H
)llH I
)llI J
{mm 
preparedStatementnn !
.nn! "
CommandTextnn" -
=nn. /
$strnn0 V
;nnV W
SqlParameteroo 
idParamoo $
=oo% &
newoo' *
SqlParameteroo+ 7
(oo7 8
$stroo8 =
,oo= >
	SqlDbTypeoo? H
.ooH I
IntooI L
,ooL M
$numooN O
)ooO P
;ooP Q
idParampp 
.pp 
Valuepp 
=pp 
idpp  "
;pp" #
preparedStatementqq !
.qq! "
ExecuteNonQueryqq" 1
(qq1 2
)qq2 3
;qq3 4
}rr 
IOtt 
.tt 
WriteStringtt 
(tt 
$strtt 7
+tt8 9
datatt: >
+tt? @
$strttA E
)ttE F
;ttF G
}uu 	
catchvv 
(vv 
SqlExceptionvv 
	exceptSqlvv %
)vv% &
{ww 	
IOxx 
.xx 
Loggerxx 
.xx 
Logxx 
(xx 
NLogxx 
.xx 
LogLevelxx '
.xx' (
Warnxx( ,
,xx, -
	exceptSqlxx. 7
,xx7 8
$strxx9 P
)xxP Q
;xxQ R
}yy 	
finallyzz 
{{{ 	
try|| 
{}} 
if~~ 
(~~ 
dBConnection~~  
!=~~! #
null~~$ (
)~~( )
{ 
dBConnection
ÄÄ  
.
ÄÄ  !
Close
ÄÄ! &
(
ÄÄ& '
)
ÄÄ' (
;
ÄÄ( )
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
SqlException
ÉÉ 
	exceptSql
ÉÉ  )
)
ÉÉ) *
{
ÑÑ 
IO
ÖÖ 
.
ÖÖ 
Logger
ÖÖ 
.
ÖÖ 
Log
ÖÖ 
(
ÖÖ 
NLog
ÖÖ "
.
ÖÖ" #
LogLevel
ÖÖ# +
.
ÖÖ+ ,
Warn
ÖÖ, 0
,
ÖÖ0 1
	exceptSql
ÖÖ2 ;
,
ÖÖ; <
$str
ÖÖ= Y
)
ÖÖY Z
;
ÖÖZ [
}
ÜÜ 
}
áá 	
}
àà 
private
ãã 
static
ãã 
void
ãã 
GoodG2B
ãã 
(
ãã  
HttpRequest
ãã  +
req
ãã, /
,
ãã/ 0
HttpResponse
ãã1 =
resp
ãã> B
)
ããB C
{
åå 
string
çç 
data
çç 
;
çç 
data
èè 
=
èè 
$str
èè 
;
èè 
GoodG2BSink
êê 
(
êê 
data
êê 
,
êê 
req
êê 
,
êê 
resp
êê  $
)
êê% &
;
êê& '
}
ëë 
}ìì 
}îî J
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_42.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_42 =
:> ?
AbstractTestCaseWeb@ S
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" "
)""" #
;""# $
return## 
data## 
;## 
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
=)) 
	BadSource)) 
())  
req))  #
,))# $
resp))% )
)))) *
;))* +
SqlConnection** 
dBConnection** "
=**# $
IO**% '
.**' (
GetDBConnection**( 7
(**7 8
)**8 9
;**9 :

SqlCommand++ 
preparedStatement++ $
=++% &
null++' +
;+++ ,
int,, 
id,, 
=,, 
$num,, 
;,, 
try-- 
{.. 	
id// 
=// 
int// 
.// 
Parse// 
(// 
data// 
)//  
;//  !
}00 	
catch11 
(11 
FormatException11 
nfx11 "
)11" #
{22 	
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 
.33 
LogLevel33 '
.33' (
Warn33( ,
,33, -
nfx33. 1
,331 2
$str333 W
)33W X
;33X Y
id44 
=44 
-44 
$num44 
;44 
}55 	
try66 
{77 	
dBConnection88 
.88 
Open88 
(88 
)88 
;88  
using99 
(99 
preparedStatement99 $
=99% &
new99' *

SqlCommand99+ 5
(995 6
null996 :
,99: ;
dBConnection99< H
)99H I
)99I J
{:: 
preparedStatement;; !
.;;! "
CommandText;;" -
=;;. /
$str;;0 V
;;;V W
SqlParameter<< 
idParam<< $
=<<% &
new<<' *
SqlParameter<<+ 7
(<<7 8
$str<<8 =
,<<= >
	SqlDbType<<? H
.<<H I
Int<<I L
,<<L M
$num<<N O
)<<O P
;<<P Q
idParam== 
.== 
Value== 
=== 
id==  "
;==" #
preparedStatement>> !
.>>! "
ExecuteNonQuery>>" 1
(>>1 2
)>>2 3
;>>3 4
}?? 
IOAA 
.AA 
WriteStringAA 
(AA 
$strAA 7
+AA8 9
dataAA: >
+AA? @
$strAAA E
)AAE F
;AAF G
}BB 	
catchCC 
(CC 
SqlExceptionCC 
	exceptSqlCC %
)CC% &
{DD 	
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE 
.EE 
LogLevelEE '
.EE' (
WarnEE( ,
,EE, -
	exceptSqlEE. 7
,EE7 8
$strEE9 P
)EEP Q
;EEQ R
}FF 	
finallyGG 
{HH 	
tryII 
{JJ 
ifKK 
(KK 
dBConnectionKK  
!=KK! #
nullKK$ (
)KK( )
{LL 
dBConnectionMM  
.MM  !
CloseMM! &
(MM& '
)MM' (
;MM( )
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP 
	exceptSqlPP  )
)PP) *
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
	exceptSqlRR2 ;
,RR; <
$strRR= Y
)RRY Z
;RRZ [
}SS 
}TT 	
}UU 
privateXX 
staticXX 
stringXX 
GoodG2BSourceXX '
(XX' (
HttpRequestXX( 3
reqXX4 7
,XX7 8
HttpResponseXX9 E
respXXF J
)XXJ K
{YY 
stringZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$str\\ 
;\\ 
return]] 
data]] 
;]] 
}^^ 
privateaa 
staticaa 
voidaa 
GoodG2Baa 
(aa  
HttpRequestaa  +
reqaa, /
,aa/ 0
HttpResponseaa1 =
respaa> B
)aaB C
{bb 
stringcc 
datacc 
=cc 
GoodG2BSourcecc #
(cc# $
reqcc$ '
,cc' (
respcc) -
)cc- .
;cc. /
SqlConnectiondd 
dBConnectiondd "
=dd# $
IOdd% '
.dd' (
GetDBConnectiondd( 7
(dd7 8
)dd8 9
;dd9 :

SqlCommandee 
preparedStatementee $
=ee% &
nullee' +
;ee+ ,
intff 
idff 
=ff 
$numff 
;ff 
trygg 
{hh 	
idii 
=ii 
intii 
.ii 
Parseii 
(ii 
dataii 
)ii  
;ii  !
}jj 	
catchkk 
(kk 
FormatExceptionkk 
nfxkk "
)kk" #
{ll 	
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm 
.mm 
LogLevelmm '
.mm' (
Warnmm( ,
,mm, -
nfxmm. 1
,mm1 2
$strmm3 W
)mmW X
;mmX Y
idnn 
=nn 
-nn 
$numnn 
;nn 
}oo 	
trypp 
{qq 	
dBConnectionrr 
.rr 
Openrr 
(rr 
)rr 
;rr  
usingss 
(ss 
preparedStatementss $
=ss% &
newss' *

SqlCommandss+ 5
(ss5 6
nullss6 :
,ss: ;
dBConnectionss< H
)ssH I
)ssI J
{tt 
preparedStatementuu !
.uu! "
CommandTextuu" -
=uu. /
$struu0 V
;uuV W
SqlParametervv 
idParamvv $
=vv% &
newvv' *
SqlParametervv+ 7
(vv7 8
$strvv8 =
,vv= >
	SqlDbTypevv? H
.vvH I
IntvvI L
,vvL M
$numvvN O
)vvO P
;vvP Q
idParamww 
.ww 
Valueww 
=ww 
idww  "
;ww" #
preparedStatementxx !
.xx! "
ExecuteNonQueryxx" 1
(xx1 2
)xx2 3
;xx3 4
}yy 
IO{{ 
.{{ 
WriteString{{ 
({{ 
$str{{ 7
+{{8 9
data{{: >
+{{? @
$str{{A E
){{E F
;{{F G
}|| 	
catch}} 
(}} 
SqlException}} 
	exceptSql}} %
)}}% &
{~~ 	
IO 
. 
Logger 
. 
Log 
( 
NLog 
. 
LogLevel '
.' (
Warn( ,
,, -
	exceptSql. 7
,7 8
$str9 P
)P Q
;Q R
}
ÄÄ 	
finally
ÅÅ 
{
ÇÇ 	
try
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
dBConnection
ÖÖ  
!=
ÖÖ! #
null
ÖÖ$ (
)
ÖÖ( )
{
ÜÜ 
dBConnection
áá  
.
áá  !
Close
áá! &
(
áá& '
)
áá' (
;
áá( )
}
àà 
}
ââ 
catch
ää 
(
ää 
SqlException
ää 
	exceptSql
ää  )
)
ää) *
{
ãã 
IO
åå 
.
åå 
Logger
åå 
.
åå 
Log
åå 
(
åå 
NLog
åå "
.
åå" #
LogLevel
åå# +
.
åå+ ,
Warn
åå, 0
,
åå0 1
	exceptSql
åå2 ;
,
åå; <
$str
åå= Y
)
ååY Z
;
ååZ [
}
çç 
}
éé 	
}
èè 
public
ëë 

override
ëë 
void
ëë 
Good
ëë 
(
ëë 
HttpRequest
ëë )
req
ëë* -
,
ëë- .
HttpResponse
ëë/ ;
resp
ëë< @
)
ëë@ A
{
íí 
GoodG2B
ìì 
(
ìì 
req
ìì 
,
ìì 
resp
ìì 
)
ìì 
;
ìì 
}
îî 
}ññ 
}óó ÏL
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_45.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class C
7CWE566_Authorization_Bypass_Through_SQL_Primary__Web_45 =
:> ?
AbstractTestCaseWeb@ S
{ 
private 
string 
dataBad 
; 
private   
string   
dataGoodG2B   
;   
private"" 
void"" 
BadSink"" 
("" 
HttpRequest"" $
req""% (
,""( )
HttpResponse""* 6
resp""7 ;
)""; <
{## 
string$$ 
data$$ 
=$$ 
dataBad$$ 
;$$ 
SqlConnection%% 
dBConnection%% "
=%%# $
IO%%% '
.%%' (
GetDBConnection%%( 7
(%%7 8
)%%8 9
;%%9 :

SqlCommand&& 
preparedStatement&& $
=&&% &
null&&' +
;&&+ ,
int'' 
id'' 
='' 
$num'' 
;'' 
try(( 
{)) 	
id** 
=** 
int** 
.** 
Parse** 
(** 
data** 
)**  
;**  !
}++ 	
catch,, 
(,, 
FormatException,, 
nfx,, "
),," #
{-- 	
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. 
... 
LogLevel.. '
...' (
Warn..( ,
,.., -
nfx... 1
,..1 2
$str..3 W
)..W X
;..X Y
id// 
=// 
-// 
$num// 
;// 
}00 	
try11 
{22 	
dBConnection33 
.33 
Open33 
(33 
)33 
;33  
using44 
(44 
preparedStatement44 $
=44% &
new44' *

SqlCommand44+ 5
(445 6
null446 :
,44: ;
dBConnection44< H
)44H I
)44I J
{55 
preparedStatement66 !
.66! "
CommandText66" -
=66. /
$str660 V
;66V W
SqlParameter77 
idParam77 $
=77% &
new77' *
SqlParameter77+ 7
(777 8
$str778 =
,77= >
	SqlDbType77? H
.77H I
Int77I L
,77L M
$num77N O
)77O P
;77P Q
idParam88 
.88 
Value88 
=88 
id88  "
;88" #
preparedStatement99 !
.99! "
ExecuteNonQuery99" 1
(991 2
)992 3
;993 4
}:: 
IO<< 
.<< 
WriteString<< 
(<< 
$str<< 7
+<<8 9
data<<: >
+<<? @
$str<<A E
)<<E F
;<<F G
}== 	
catch>> 
(>> 
SqlException>> 
	exceptSql>> %
)>>% &
{?? 	
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ 
.@@ 
LogLevel@@ '
.@@' (
Warn@@( ,
,@@, -
	exceptSql@@. 7
,@@7 8
$str@@9 P
)@@P Q
;@@Q R
}AA 	
finallyBB 
{CC 	
tryDD 
{EE 
ifFF 
(FF 
dBConnectionFF  
!=FF! #
nullFF$ (
)FF( )
{GG 
dBConnectionHH  
.HH  !
CloseHH! &
(HH& '
)HH' (
;HH( )
}II 
}JJ 
catchKK 
(KK 
SqlExceptionKK 
	exceptSqlKK  )
)KK) *
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM "
.MM" #
LogLevelMM# +
.MM+ ,
WarnMM, 0
,MM0 1
	exceptSqlMM2 ;
,MM; <
$strMM= Y
)MMY Z
;MMZ [
}NN 
}OO 	
}PP 
publicSS 

overrideSS 
voidSS 
BadSS 
(SS 
HttpRequestSS (
reqSS) ,
,SS, -
HttpResponseSS. :
respSS; ?
)SS? @
{TT 
stringUU 
dataUU 
;UU 
dataWW 
=WW 
reqWW 
.WW 
ParamsWW 
.WW 
GetWW 
(WW 
$strWW "
)WW" #
;WW# $
dataBadXX 
=XX 
dataXX 
;XX 
BadSinkYY 
(YY 
reqYY 
,YY 
respYY 
)YY 
;YY 
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
HttpRequest]] )
req]]* -
,]]- .
HttpResponse]]/ ;
resp]]< @
)]]@ A
{^^ 
GoodG2B__ 
(__ 
req__ 
,__ 
resp__ 
)__ 
;__ 
}`` 
privatebb 
voidbb 
GoodG2BSinkbb 
(bb 
HttpRequestbb (
reqbb) ,
,bb, -
HttpResponsebb. :
respbb; ?
)bb? @
{cc 
stringdd 
datadd 
=dd 
dataGoodG2Bdd !
;dd! "
SqlConnectionee 
dBConnectionee "
=ee# $
IOee% '
.ee' (
GetDBConnectionee( 7
(ee7 8
)ee8 9
;ee9 :

SqlCommandff 
preparedStatementff $
=ff% &
nullff' +
;ff+ ,
intgg 
idgg 
=gg 
$numgg 
;gg 
tryhh 
{ii 	
idjj 
=jj 
intjj 
.jj 
Parsejj 
(jj 
datajj 
)jj  
;jj  !
}kk 	
catchll 
(ll 
FormatExceptionll 
nfxll "
)ll" #
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
nfxnn. 1
,nn1 2
$strnn3 W
)nnW X
;nnX Y
idoo 
=oo 
-oo 
$numoo 
;oo 
}pp 	
tryqq 
{rr 	
dBConnectionss 
.ss 
Openss 
(ss 
)ss 
;ss  
usingtt 
(tt 
preparedStatementtt $
=tt% &
newtt' *

SqlCommandtt+ 5
(tt5 6
nulltt6 :
,tt: ;
dBConnectiontt< H
)ttH I
)ttI J
{uu 
preparedStatementvv !
.vv! "
CommandTextvv" -
=vv. /
$strvv0 V
;vvV W
SqlParameterww 
idParamww $
=ww% &
newww' *
SqlParameterww+ 7
(ww7 8
$strww8 =
,ww= >
	SqlDbTypeww? H
.wwH I
IntwwI L
,wwL M
$numwwN O
)wwO P
;wwP Q
idParamxx 
.xx 
Valuexx 
=xx 
idxx  "
;xx" #
preparedStatementyy !
.yy! "
ExecuteNonQueryyy" 1
(yy1 2
)yy2 3
;yy3 4
}zz 
IO|| 
.|| 
WriteString|| 
(|| 
$str|| 7
+||8 9
data||: >
+||? @
$str||A E
)||E F
;||F G
}}} 	
catch~~ 
(~~ 
SqlException~~ 
	exceptSql~~ %
)~~% &
{ 	
IO
ÄÄ 
.
ÄÄ 
Logger
ÄÄ 
.
ÄÄ 
Log
ÄÄ 
(
ÄÄ 
NLog
ÄÄ 
.
ÄÄ 
LogLevel
ÄÄ '
.
ÄÄ' (
Warn
ÄÄ( ,
,
ÄÄ, -
	exceptSql
ÄÄ. 7
,
ÄÄ7 8
$str
ÄÄ9 P
)
ÄÄP Q
;
ÄÄQ R
}
ÅÅ 	
finally
ÇÇ 
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
dBConnection
ÜÜ  
!=
ÜÜ! #
null
ÜÜ$ (
)
ÜÜ( )
{
áá 
dBConnection
àà  
.
àà  !
Close
àà! &
(
àà& '
)
àà' (
;
àà( )
}
ââ 
}
ää 
catch
ãã 
(
ãã 
SqlException
ãã 
	exceptSql
ãã  )
)
ãã) *
{
åå 
IO
çç 
.
çç 
Logger
çç 
.
çç 
Log
çç 
(
çç 
NLog
çç "
.
çç" #
LogLevel
çç# +
.
çç+ ,
Warn
çç, 0
,
çç0 1
	exceptSql
çç2 ;
,
çç; <
$str
çç= Y
)
ççY Z
;
ççZ [
}
éé 
}
èè 	
}
êê 
private
ìì 
void
ìì 
GoodG2B
ìì 
(
ìì 
HttpRequest
ìì $
req
ìì% (
,
ìì( )
HttpResponse
ìì* 6
resp
ìì7 ;
)
ìì; <
{
îî 
string
ïï 
data
ïï 
;
ïï 
data
óó 
=
óó 
$str
óó 
;
óó 
dataGoodG2B
òò 
=
òò 
data
òò 
;
òò 
GoodG2BSink
ôô 
(
ôô 
req
ôô 
,
ôô 
resp
ôô 
)
ôô 
;
ôô 
}
öö 
}úú 
}ùù ‚
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_51a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_51a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data 
= 
req 
. 
Params 
. 
Get 
( 
$str "
)" #
;# $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_51b   @
.  @ A
BadSink  A H
(  H I
data  I M
,  N O
req  P S
,  S T
resp  U Y
)  Z [
;  [ \
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
HttpRequest$$ )
req$$* -
,$$- .
HttpResponse$$/ ;
resp$$< @
)$$@ A
{%% 
GoodG2B&& 
(&& 
req&& 
,&& 
resp&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
HttpRequest** $
req**% (
,**( )
HttpResponse*** 6
resp**7 ;
)**; <
{++ 
string,, 
data,, 
;,, 
data.. 
=.. 
$str.. 
;.. D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_51b// @
.//@ A
GoodG2BSink//A L
(//L M
data//M Q
,//R S
req//T W
,//W X
resp//Y ]
)//^ _
;//_ `
}00 
}22 
}33 ¥=
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_51b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_51b >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
SqlConnection 
dBConnection "
=# $
IO% '
.' (
GetDBConnection( 7
(7 8
)8 9
;9 :

SqlCommand   
preparedStatement   $
=  % &
null  ' +
;  + ,
int!! 
id!! 
=!! 
$num!! 
;!! 
try"" 
{## 	
id$$ 
=$$ 
int$$ 
.$$ 
Parse$$ 
($$ 
data$$ 
)$$  
;$$  !
}%% 	
catch&& 
(&& 
FormatException&& 
nfx&& "
)&&" #
{'' 	
IO(( 
.(( 
Logger(( 
.(( 
Log(( 
((( 
NLog(( 
.(( 
LogLevel(( '
.((' (
Warn((( ,
,((, -
nfx((. 1
,((1 2
$str((3 W
)((W X
;((X Y
id)) 
=)) 
-)) 
$num)) 
;)) 
}** 	
try++ 
{,, 	
dBConnection-- 
.-- 
Open-- 
(-- 
)-- 
;--  
using.. 
(.. 
preparedStatement.. $
=..% &
new..' *

SqlCommand..+ 5
(..5 6
null..6 :
,..: ;
dBConnection..< H
)..H I
)..I J
{// 
preparedStatement00 !
.00! "
CommandText00" -
=00. /
$str000 V
;00V W
SqlParameter11 
idParam11 $
=11% &
new11' *
SqlParameter11+ 7
(117 8
$str118 =
,11= >
	SqlDbType11? H
.11H I
Int11I L
,11L M
$num11N O
)11O P
;11P Q
idParam22 
.22 
Value22 
=22 
id22  "
;22" #
preparedStatement33 !
.33! "
ExecuteNonQuery33" 1
(331 2
)332 3
;333 4
}44 
IO66 
.66 
WriteString66 
(66 
$str66 7
+668 9
data66: >
+66? @
$str66A E
)66E F
;66F G
}77 	
catch88 
(88 
SqlException88 
	exceptSql88 %
)88% &
{99 	
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: 
.:: 
LogLevel:: '
.::' (
Warn::( ,
,::, -
	exceptSql::. 7
,::7 8
$str::9 P
)::P Q
;::Q R
};; 	
finally<< 
{== 	
try>> 
{?? 
if@@ 
(@@ 
dBConnection@@  
!=@@! #
null@@$ (
)@@( )
{AA 
dBConnectionBB  
.BB  !
CloseBB! &
(BB& '
)BB' (
;BB( )
}CC 
}DD 
catchEE 
(EE 
SqlExceptionEE 
	exceptSqlEE  )
)EE) *
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
	exceptSqlGG2 ;
,GG; <
$strGG= Y
)GGY Z
;GGZ [
}HH 
}II 	
}JJ 
publicOO 

staticOO 
voidOO 
GoodG2BSinkOO "
(OO" #
stringOO# )
dataOO* .
,OO/ 0
HttpRequestOO1 <
reqOO= @
,OO@ A
HttpResponseOOB N
respOOO S
)OOS T
{PP 
SqlConnectionQQ 
dBConnectionQQ "
=QQ# $
IOQQ% '
.QQ' (
GetDBConnectionQQ( 7
(QQ7 8
)QQ8 9
;QQ9 :

SqlCommandRR 
preparedStatementRR $
=RR% &
nullRR' +
;RR+ ,
intSS 
idSS 
=SS 
$numSS 
;SS 
tryTT 
{UU 	
idVV 
=VV 
intVV 
.VV 
ParseVV 
(VV 
dataVV 
)VV  
;VV  !
}WW 	
catchXX 
(XX 
FormatExceptionXX 
nfxXX "
)XX" #
{YY 	
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ 
(ZZ 
NLogZZ 
.ZZ 
LogLevelZZ '
.ZZ' (
WarnZZ( ,
,ZZ, -
nfxZZ. 1
,ZZ1 2
$strZZ3 W
)ZZW X
;ZZX Y
id[[ 
=[[ 
-[[ 
$num[[ 
;[[ 
}\\ 	
try]] 
{^^ 	
dBConnection__ 
.__ 
Open__ 
(__ 
)__ 
;__  
using`` 
(`` 
preparedStatement`` $
=``% &
new``' *

SqlCommand``+ 5
(``5 6
null``6 :
,``: ;
dBConnection``< H
)``H I
)``I J
{aa 
preparedStatementbb !
.bb! "
CommandTextbb" -
=bb. /
$strbb0 V
;bbV W
SqlParametercc 
idParamcc $
=cc% &
newcc' *
SqlParametercc+ 7
(cc7 8
$strcc8 =
,cc= >
	SqlDbTypecc? H
.ccH I
IntccI L
,ccL M
$numccN O
)ccO P
;ccP Q
idParamdd 
.dd 
Valuedd 
=dd 
iddd  "
;dd" #
preparedStatementee !
.ee! "
ExecuteNonQueryee" 1
(ee1 2
)ee2 3
;ee3 4
}ff 
IOhh 
.hh 
WriteStringhh 
(hh 
$strhh 7
+hh8 9
datahh: >
+hh? @
$strhhA E
)hhE F
;hhF G
}ii 	
catchjj 
(jj 
SqlExceptionjj 
	exceptSqljj %
)jj% &
{kk 	
IOll 
.ll 
Loggerll 
.ll 
Logll 
(ll 
NLogll 
.ll 
LogLevelll '
.ll' (
Warnll( ,
,ll, -
	exceptSqlll. 7
,ll7 8
$strll9 P
)llP Q
;llQ R
}mm 	
finallynn 
{oo 	
trypp 
{qq 
ifrr 
(rr 
dBConnectionrr  
!=rr! #
nullrr$ (
)rr( )
{ss 
dBConnectiontt  
.tt  !
Closett! &
(tt& '
)tt' (
;tt( )
}uu 
}vv 
catchww 
(ww 
SqlExceptionww 
	exceptSqlww  )
)ww) *
{xx 
IOyy 
.yy 
Loggeryy 
.yy 
Logyy 
(yy 
NLogyy "
.yy" #
LogLevelyy# +
.yy+ ,
Warnyy, 0
,yy0 1
	exceptSqlyy2 ;
,yy; <
$stryy= Y
)yyY Z
;yyZ [
}zz 
}{{ 	
}|| 
}~~ 
} ‚
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52b!! @
.!!@ A
BadSink!!A H
(!!H I
data!!I M
,!!N O
req!!P S
,!!S T
resp!!U Y
)!!Y Z
;!!Z [
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
HttpRequest%% )
req%%* -
,%%- .
HttpResponse%%/ ;
resp%%< @
)%%@ A
{&& 
GoodG2B'' 
('' 
req'' 
,'' 
resp'' 
)'' 
;'' 
}(( 
private++ 
void++ 
GoodG2B++ 
(++ 
HttpRequest++ $
req++% (
,++( )
HttpResponse++* 6
resp++7 ;
)++; <
{,, 
string-- 
data-- 
;-- 
data// 
=// 
$str// 
;// D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52b00 @
.00@ A
GoodG2BSink00A L
(00L M
data00M Q
,00R S
req00T W
,00W X
resp00Y ]
)00] ^
;00^ _
}11 
}33 
}44 Ú
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52b >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52c @
.@ A
BadSinkA H
(H I
dataI M
,N O
reqP S
,S T
respU Y
)Y Z
;Z [
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
string### )
data##* .
,##/ 0
HttpRequest##1 <
req##= @
,##@ A
HttpResponse##B N
resp##O S
)##S T
{$$ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52c%% @
.%%@ A
GoodG2BSink%%A L
(%%L M
data%%M Q
,%%R S
req%%T W
,%%W X
resp%%Y ]
)%%] ^
;%%^ _
}&& 
}(( 
})) ∂=
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52c.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_52c >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
SqlConnection   
dBConnection   "
=  # $
IO  % '
.  ' (
GetDBConnection  ( 7
(  7 8
)  8 9
;  9 :

SqlCommand!! 
preparedStatement!! $
=!!% &
null!!' +
;!!+ ,
int"" 
id"" 
="" 
$num"" 
;"" 
try## 
{$$ 	
id%% 
=%% 
int%% 
.%% 
Parse%% 
(%% 
data%% 
)%%  
;%%  !
}&& 	
catch'' 
('' 
FormatException'' 
nfx'' "
)''" #
{(( 	
IO)) 
.)) 
Logger)) 
.)) 
Log)) 
()) 
NLog)) 
.)) 
LogLevel)) '
.))' (
Warn))( ,
,)), -
nfx)). 1
,))1 2
$str))3 W
)))W X
;))X Y
id** 
=** 
-** 
$num** 
;** 
}++ 	
try,, 
{-- 	
dBConnection.. 
... 
Open.. 
(.. 
).. 
;..  
using// 
(// 
preparedStatement// $
=//% &
new//' *

SqlCommand//+ 5
(//5 6
null//6 :
,//: ;
dBConnection//< H
)//H I
)//I J
{00 
preparedStatement11 !
.11! "
CommandText11" -
=11. /
$str110 V
;11V W
SqlParameter22 
idParam22 $
=22% &
new22' *
SqlParameter22+ 7
(227 8
$str228 =
,22= >
	SqlDbType22? H
.22H I
Int22I L
,22L M
$num22N O
)22O P
;22P Q
idParam33 
.33 
Value33 
=33 
id33  "
;33" #
preparedStatement44 !
.44! "
ExecuteNonQuery44" 1
(441 2
)442 3
;443 4
}55 
IO77 
.77 
WriteString77 
(77 
$str77 7
+778 9
data77: >
+77? @
$str77A E
)77E F
;77F G
}88 	
catch99 
(99 
SqlException99 
	exceptSql99 %
)99% &
{:: 	
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; 
.;; 
LogLevel;; '
.;;' (
Warn;;( ,
,;;, -
	exceptSql;;. 7
,;;7 8
$str;;9 P
);;P Q
;;;Q R
}<< 	
finally== 
{>> 	
try?? 
{@@ 
ifAA 
(AA 
dBConnectionAA  
!=AA! #
nullAA$ (
)AA( )
{BB 
dBConnectionCC  
.CC  !
CloseCC! &
(CC& '
)CC' (
;CC( )
}DD 
}EE 
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF  )
)FF) *
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
	exceptSqlHH2 ;
,HH; <
$strHH= Y
)HHY Z
;HHZ [
}II 
}JJ 	
}KK 
publicPP 

staticPP 
voidPP 
GoodG2BSinkPP "
(PP" #
stringPP# )
dataPP* .
,PP/ 0
HttpRequestPP1 <
reqPP= @
,PP@ A
HttpResponsePPB N
respPPO S
)PPS T
{QQ 
SqlConnectionRR 
dBConnectionRR "
=RR# $
IORR% '
.RR' (
GetDBConnectionRR( 7
(RR7 8
)RR8 9
;RR9 :

SqlCommandSS 
preparedStatementSS $
=SS% &
nullSS' +
;SS+ ,
intTT 
idTT 
=TT 
$numTT 
;TT 
tryUU 
{VV 	
idWW 
=WW 
intWW 
.WW 
ParseWW 
(WW 
dataWW 
)WW  
;WW  !
}XX 	
catchYY 
(YY 
FormatExceptionYY 
nfxYY "
)YY" #
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
nfx[[. 1
,[[1 2
$str[[3 W
)[[W X
;[[X Y
id\\ 
=\\ 
-\\ 
$num\\ 
;\\ 
}]] 	
try^^ 
{__ 	
dBConnection`` 
.`` 
Open`` 
(`` 
)`` 
;``  
usingaa 
(aa 
preparedStatementaa $
=aa% &
newaa' *

SqlCommandaa+ 5
(aa5 6
nullaa6 :
,aa: ;
dBConnectionaa< H
)aaH I
)aaI J
{bb 
preparedStatementcc !
.cc! "
CommandTextcc" -
=cc. /
$strcc0 V
;ccV W
SqlParameterdd 
idParamdd $
=dd% &
newdd' *
SqlParameterdd+ 7
(dd7 8
$strdd8 =
,dd= >
	SqlDbTypedd? H
.ddH I
IntddI L
,ddL M
$numddN O
)ddO P
;ddP Q
idParamee 
.ee 
Valueee 
=ee 
idee  "
;ee" #
preparedStatementff !
.ff! "
ExecuteNonQueryff" 1
(ff1 2
)ff2 3
;ff3 4
}gg 
IOii 
.ii 
WriteStringii 
(ii 
$strii 7
+ii8 9
dataii: >
+ii? @
$striiA E
)iiE F
;iiF G
}jj 	
catchkk 
(kk 
SqlExceptionkk 
	exceptSqlkk %
)kk% &
{ll 	
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm 
.mm 
LogLevelmm '
.mm' (
Warnmm( ,
,mm, -
	exceptSqlmm. 7
,mm7 8
$strmm9 P
)mmP Q
;mmQ R
}nn 	
finallyoo 
{pp 	
tryqq 
{rr 
ifss 
(ss 
dBConnectionss  
!=ss! #
nullss$ (
)ss( )
{tt 
dBConnectionuu  
.uu  !
Closeuu! &
(uu& '
)uu' (
;uu( )
}vv 
}ww 
catchxx 
(xx 
SqlExceptionxx 
	exceptSqlxx  )
)xx) *
{yy 
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz "
.zz" #
LogLevelzz# +
.zz+ ,
Warnzz, 0
,zz0 1
	exceptSqlzz2 ;
,zz; <
$strzz= Y
)zzY Z
;zzZ [
}{{ 
}|| 	
}}} 
} 
}ÄÄ ‚
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53b!! @
.!!@ A
BadSink!!A H
(!!H I
data!!I M
,!!N O
req!!P S
,!!S T
resp!!U Y
)!!Y Z
;!!Z [
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
HttpRequest%% )
req%%* -
,%%- .
HttpResponse%%/ ;
resp%%< @
)%%@ A
{&& 
GoodG2B'' 
('' 
req'' 
,'' 
resp'' 
)'' 
;'' 
}(( 
private++ 
void++ 
GoodG2B++ 
(++ 
HttpRequest++ $
req++% (
,++( )
HttpResponse++* 6
resp++7 ;
)++; <
{,, 
string-- 
data-- 
;-- 
data// 
=// 
$str// 
;// D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53b00 @
.00@ A
GoodG2BSink00A L
(00L M
data00M Q
,00R S
req00T W
,00W X
resp00Y ]
)00] ^
;00^ _
}11 
}33 
}44 Ú
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53b >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53c @
.@ A
BadSinkA H
(H I
dataI M
,N O
reqP S
,S T
respU Y
)Y Z
;Z [
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
string### )
data##* .
,##/ 0
HttpRequest##1 <
req##= @
,##@ A
HttpResponse##B N
resp##O S
)##S T
{$$ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53c%% @
.%%@ A
GoodG2BSink%%A L
(%%L M
data%%M Q
,%%R S
req%%T W
,%%W X
resp%%Y ]
)%%] ^
;%%^ _
}&& 
}(( 
})) Ú
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53c.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53c >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53d @
.@ A
BadSinkA H
(H I
dataI M
,N O
reqP S
,S T
respU Y
)Y Z
;Z [
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
string### )
data##* .
,##/ 0
HttpRequest##1 <
req##= @
,##@ A
HttpResponse##B N
resp##O S
)##S T
{$$ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53d%% @
.%%@ A
GoodG2BSink%%A L
(%%L M
data%%M Q
,%%R S
req%%T W
,%%W X
resp%%Y ]
)%%] ^
;%%^ _
}&& 
}(( 
})) ∂=
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53d.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_53d >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
SqlConnection   
dBConnection   "
=  # $
IO  % '
.  ' (
GetDBConnection  ( 7
(  7 8
)  8 9
;  9 :

SqlCommand!! 
preparedStatement!! $
=!!% &
null!!' +
;!!+ ,
int"" 
id"" 
="" 
$num"" 
;"" 
try## 
{$$ 	
id%% 
=%% 
int%% 
.%% 
Parse%% 
(%% 
data%% 
)%%  
;%%  !
}&& 	
catch'' 
('' 
FormatException'' 
nfx'' "
)''" #
{(( 	
IO)) 
.)) 
Logger)) 
.)) 
Log)) 
()) 
NLog)) 
.)) 
LogLevel)) '
.))' (
Warn))( ,
,)), -
nfx)). 1
,))1 2
$str))3 W
)))W X
;))X Y
id** 
=** 
-** 
$num** 
;** 
}++ 	
try,, 
{-- 	
dBConnection.. 
... 
Open.. 
(.. 
).. 
;..  
using// 
(// 
preparedStatement// $
=//% &
new//' *

SqlCommand//+ 5
(//5 6
null//6 :
,//: ;
dBConnection//< H
)//H I
)//I J
{00 
preparedStatement11 !
.11! "
CommandText11" -
=11. /
$str110 V
;11V W
SqlParameter22 
idParam22 $
=22% &
new22' *
SqlParameter22+ 7
(227 8
$str228 =
,22= >
	SqlDbType22? H
.22H I
Int22I L
,22L M
$num22N O
)22O P
;22P Q
idParam33 
.33 
Value33 
=33 
id33  "
;33" #
preparedStatement44 !
.44! "
ExecuteNonQuery44" 1
(441 2
)442 3
;443 4
}55 
IO77 
.77 
WriteString77 
(77 
$str77 7
+778 9
data77: >
+77? @
$str77A E
)77E F
;77F G
}88 	
catch99 
(99 
SqlException99 
	exceptSql99 %
)99% &
{:: 	
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; 
.;; 
LogLevel;; '
.;;' (
Warn;;( ,
,;;, -
	exceptSql;;. 7
,;;7 8
$str;;9 P
);;P Q
;;;Q R
}<< 	
finally== 
{>> 	
try?? 
{@@ 
ifAA 
(AA 
dBConnectionAA  
!=AA! #
nullAA$ (
)AA( )
{BB 
dBConnectionCC  
.CC  !
CloseCC! &
(CC& '
)CC' (
;CC( )
}DD 
}EE 
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF  )
)FF) *
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
	exceptSqlHH2 ;
,HH; <
$strHH= Y
)HHY Z
;HHZ [
}II 
}JJ 	
}KK 
publicPP 

staticPP 
voidPP 
GoodG2BSinkPP "
(PP" #
stringPP# )
dataPP* .
,PP/ 0
HttpRequestPP1 <
reqPP= @
,PP@ A
HttpResponsePPB N
respPPO S
)PPS T
{QQ 
SqlConnectionRR 
dBConnectionRR "
=RR# $
IORR% '
.RR' (
GetDBConnectionRR( 7
(RR7 8
)RR8 9
;RR9 :

SqlCommandSS 
preparedStatementSS $
=SS% &
nullSS' +
;SS+ ,
intTT 
idTT 
=TT 
$numTT 
;TT 
tryUU 
{VV 	
idWW 
=WW 
intWW 
.WW 
ParseWW 
(WW 
dataWW 
)WW  
;WW  !
}XX 	
catchYY 
(YY 
FormatExceptionYY 
nfxYY "
)YY" #
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
nfx[[. 1
,[[1 2
$str[[3 W
)[[W X
;[[X Y
id\\ 
=\\ 
-\\ 
$num\\ 
;\\ 
}]] 	
try^^ 
{__ 	
dBConnection`` 
.`` 
Open`` 
(`` 
)`` 
;``  
usingaa 
(aa 
preparedStatementaa $
=aa% &
newaa' *

SqlCommandaa+ 5
(aa5 6
nullaa6 :
,aa: ;
dBConnectionaa< H
)aaH I
)aaI J
{bb 
preparedStatementcc !
.cc! "
CommandTextcc" -
=cc. /
$strcc0 V
;ccV W
SqlParameterdd 
idParamdd $
=dd% &
newdd' *
SqlParameterdd+ 7
(dd7 8
$strdd8 =
,dd= >
	SqlDbTypedd? H
.ddH I
IntddI L
,ddL M
$numddN O
)ddO P
;ddP Q
idParamee 
.ee 
Valueee 
=ee 
idee  "
;ee" #
preparedStatementff !
.ff! "
ExecuteNonQueryff" 1
(ff1 2
)ff2 3
;ff3 4
}gg 
IOii 
.ii 
WriteStringii 
(ii 
$strii 7
+ii8 9
dataii: >
+ii? @
$striiA E
)iiE F
;iiF G
}jj 	
catchkk 
(kk 
SqlExceptionkk 
	exceptSqlkk %
)kk% &
{ll 	
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm 
.mm 
LogLevelmm '
.mm' (
Warnmm( ,
,mm, -
	exceptSqlmm. 7
,mm7 8
$strmm9 P
)mmP Q
;mmQ R
}nn 	
finallyoo 
{pp 	
tryqq 
{rr 
ifss 
(ss 
dBConnectionss  
!=ss! #
nullss$ (
)ss( )
{tt 
dBConnectionuu  
.uu  !
Closeuu! &
(uu& '
)uu' (
;uu( )
}vv 
}ww 
catchxx 
(xx 
SqlExceptionxx 
	exceptSqlxx  )
)xx) *
{yy 
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz "
.zz" #
LogLevelzz# +
.zz+ ,
Warnzz, 0
,zz0 1
	exceptSqlzz2 ;
,zz; <
$strzz= Y
)zzY Z
;zzZ [
}{{ 
}|| 	
}}} 
} 
}ÄÄ ‚
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54b!! @
.!!@ A
BadSink!!A H
(!!H I
data!!I M
,!!N O
req!!P S
,!!S T
resp!!U Y
)!!Y Z
;!!Z [
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
HttpRequest%% )
req%%* -
,%%- .
HttpResponse%%/ ;
resp%%< @
)%%@ A
{&& 
GoodG2B'' 
('' 
req'' 
,'' 
resp'' 
)'' 
;'' 
}(( 
private++ 
void++ 
GoodG2B++ 
(++ 
HttpRequest++ $
req++% (
,++( )
HttpResponse++* 6
resp++7 ;
)++; <
{,, 
string-- 
data-- 
;-- 
data// 
=// 
$str// 
;// D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54b00 @
.00@ A
GoodG2BSink00A L
(00L M
data00M Q
,00R S
req00T W
,00W X
resp00Y ]
)00] ^
;00^ _
}11 
}33 
}44 Ú
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54b >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54c @
.@ A
BadSinkA H
(H I
dataI M
,N O
reqP S
,S T
respU Y
)Y Z
;Z [
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
string### )
data##* .
,##/ 0
HttpRequest##1 <
req##= @
,##@ A
HttpResponse##B N
resp##O S
)##S T
{$$ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54c%% @
.%%@ A
GoodG2BSink%%A L
(%%L M
data%%M Q
,%%R S
req%%T W
,%%W X
resp%%Y ]
)%%] ^
;%%^ _
}&& 
}(( 
})) Ú
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54c.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54c >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54d @
.@ A
BadSinkA H
(H I
dataI M
,N O
reqP S
,S T
respU Y
)Y Z
;Z [
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
string### )
data##* .
,##/ 0
HttpRequest##1 <
req##= @
,##@ A
HttpResponse##B N
resp##O S
)##S T
{$$ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54d%% @
.%%@ A
GoodG2BSink%%A L
(%%L M
data%%M Q
,%%R S
req%%T W
,%%W X
resp%%Y ]
)%%] ^
;%%^ _
}&& 
}(( 
})) Ú
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54d.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54d >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54e @
.@ A
BadSinkA H
(H I
dataI M
,N O
reqP S
,S T
respU Y
)Y Z
;Z [
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
string### )
data##* .
,##/ 0
HttpRequest##1 <
req##= @
,##@ A
HttpResponse##B N
resp##O S
)##S T
{$$ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54e%% @
.%%@ A
GoodG2BSink%%A L
(%%L M
data%%M Q
,%%R S
req%%T W
,%%W X
resp%%Y ]
)%%] ^
;%%^ _
}&& 
}(( 
})) ∂=
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54e.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_54e >
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
SqlConnection   
dBConnection   "
=  # $
IO  % '
.  ' (
GetDBConnection  ( 7
(  7 8
)  8 9
;  9 :

SqlCommand!! 
preparedStatement!! $
=!!% &
null!!' +
;!!+ ,
int"" 
id"" 
="" 
$num"" 
;"" 
try## 
{$$ 	
id%% 
=%% 
int%% 
.%% 
Parse%% 
(%% 
data%% 
)%%  
;%%  !
}&& 	
catch'' 
('' 
FormatException'' 
nfx'' "
)''" #
{(( 	
IO)) 
.)) 
Logger)) 
.)) 
Log)) 
()) 
NLog)) 
.)) 
LogLevel)) '
.))' (
Warn))( ,
,)), -
nfx)). 1
,))1 2
$str))3 W
)))W X
;))X Y
id** 
=** 
-** 
$num** 
;** 
}++ 	
try,, 
{-- 	
dBConnection.. 
... 
Open.. 
(.. 
).. 
;..  
using// 
(// 
preparedStatement// $
=//% &
new//' *

SqlCommand//+ 5
(//5 6
null//6 :
,//: ;
dBConnection//< H
)//H I
)//I J
{00 
preparedStatement11 !
.11! "
CommandText11" -
=11. /
$str110 V
;11V W
SqlParameter22 
idParam22 $
=22% &
new22' *
SqlParameter22+ 7
(227 8
$str228 =
,22= >
	SqlDbType22? H
.22H I
Int22I L
,22L M
$num22N O
)22O P
;22P Q
idParam33 
.33 
Value33 
=33 
id33  "
;33" #
preparedStatement44 !
.44! "
ExecuteNonQuery44" 1
(441 2
)442 3
;443 4
}55 
IO77 
.77 
WriteString77 
(77 
$str77 7
+778 9
data77: >
+77? @
$str77A E
)77E F
;77F G
}88 	
catch99 
(99 
SqlException99 
	exceptSql99 %
)99% &
{:: 	
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; 
.;; 
LogLevel;; '
.;;' (
Warn;;( ,
,;;, -
	exceptSql;;. 7
,;;7 8
$str;;9 P
);;P Q
;;;Q R
}<< 	
finally== 
{>> 	
try?? 
{@@ 
ifAA 
(AA 
dBConnectionAA  
!=AA! #
nullAA$ (
)AA( )
{BB 
dBConnectionCC  
.CC  !
CloseCC! &
(CC& '
)CC' (
;CC( )
}DD 
}EE 
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF  )
)FF) *
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
	exceptSqlHH2 ;
,HH; <
$strHH= Y
)HHY Z
;HHZ [
}II 
}JJ 	
}KK 
publicPP 

staticPP 
voidPP 
GoodG2BSinkPP "
(PP" #
stringPP# )
dataPP* .
,PP/ 0
HttpRequestPP1 <
reqPP= @
,PP@ A
HttpResponsePPB N
respPPO S
)PPS T
{QQ 
SqlConnectionRR 
dBConnectionRR "
=RR# $
IORR% '
.RR' (
GetDBConnectionRR( 7
(RR7 8
)RR8 9
;RR9 :

SqlCommandSS 
preparedStatementSS $
=SS% &
nullSS' +
;SS+ ,
intTT 
idTT 
=TT 
$numTT 
;TT 
tryUU 
{VV 	
idWW 
=WW 
intWW 
.WW 
ParseWW 
(WW 
dataWW 
)WW  
;WW  !
}XX 	
catchYY 
(YY 
FormatExceptionYY 
nfxYY "
)YY" #
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
nfx[[. 1
,[[1 2
$str[[3 W
)[[W X
;[[X Y
id\\ 
=\\ 
-\\ 
$num\\ 
;\\ 
}]] 	
try^^ 
{__ 	
dBConnection`` 
.`` 
Open`` 
(`` 
)`` 
;``  
usingaa 
(aa 
preparedStatementaa $
=aa% &
newaa' *

SqlCommandaa+ 5
(aa5 6
nullaa6 :
,aa: ;
dBConnectionaa< H
)aaH I
)aaI J
{bb 
preparedStatementcc !
.cc! "
CommandTextcc" -
=cc. /
$strcc0 V
;ccV W
SqlParameterdd 
idParamdd $
=dd% &
newdd' *
SqlParameterdd+ 7
(dd7 8
$strdd8 =
,dd= >
	SqlDbTypedd? H
.ddH I
IntddI L
,ddL M
$numddN O
)ddO P
;ddP Q
idParamee 
.ee 
Valueee 
=ee 
idee  "
;ee" #
preparedStatementff !
.ff! "
ExecuteNonQueryff" 1
(ff1 2
)ff2 3
;ff3 4
}gg 
IOii 
.ii 
WriteStringii 
(ii 
$strii 7
+ii8 9
dataii: >
+ii? @
$striiA E
)iiE F
;iiF G
}jj 	
catchkk 
(kk 
SqlExceptionkk 
	exceptSqlkk %
)kk% &
{ll 	
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm 
.mm 
LogLevelmm '
.mm' (
Warnmm( ,
,mm, -
	exceptSqlmm. 7
,mm7 8
$strmm9 P
)mmP Q
;mmQ R
}nn 	
finallyoo 
{pp 	
tryqq 
{rr 
ifss 
(ss 
dBConnectionss  
!=ss! #
nullss$ (
)ss( )
{tt 
dBConnectionuu  
.uu  !
Closeuu! &
(uu& '
)uu' (
;uu( )
}vv 
}ww 
catchxx 
(xx 
SqlExceptionxx 
	exceptSqlxx  )
)xx) *
{yy 
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz "
.zz" #
LogLevelzz# +
.zz+ ,
Warnzz, 0
,zz0 1
	exceptSqlzz2 ;
,zz; <
$strzz= Y
)zzY Z
;zzZ [
}{{ 
}|| 	
}}} 
} 
}ÄÄ àD
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_61a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_61a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
=   D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_61b   N
.  N O
	BadSource  O X
(  X Y
req  Y \
,  \ ]
resp  ^ b
)  b c
;  c d
SqlConnection!! 
dBConnection!! "
=!!# $
IO!!% '
.!!' (
GetDBConnection!!( 7
(!!7 8
)!!8 9
;!!9 :

SqlCommand"" 
preparedStatement"" $
=""% &
null""' +
;""+ ,
int## 
id## 
=## 
$num## 
;## 
try$$ 
{%% 	
id&& 
=&& 
int&& 
.&& 
Parse&& 
(&& 
data&& 
)&&  
;&&  !
}'' 	
catch(( 
((( 
FormatException(( 
nfx(( "
)((" #
{)) 	
IO** 
.** 
Logger** 
.** 
Log** 
(** 
NLog** 
.** 
LogLevel** '
.**' (
Warn**( ,
,**, -
nfx**. 1
,**1 2
$str**3 W
)**W X
;**X Y
id++ 
=++ 
-++ 
$num++ 
;++ 
},, 	
try-- 
{.. 	
dBConnection// 
.// 
Open// 
(// 
)// 
;//  
using00 
(00 
preparedStatement00 $
=00% &
new00' *

SqlCommand00+ 5
(005 6
null006 :
,00: ;
dBConnection00< H
)00H I
)00I J
{11 
preparedStatement22 !
.22! "
CommandText22" -
=22. /
$str220 V
;22V W
SqlParameter33 
idParam33 $
=33% &
new33' *
SqlParameter33+ 7
(337 8
$str338 =
,33= >
	SqlDbType33? H
.33H I
Int33I L
,33L M
$num33N O
)33O P
;33P Q
idParam44 
.44 
Value44 
=44 
id44  "
;44" #
preparedStatement55 !
.55! "
ExecuteNonQuery55" 1
(551 2
)552 3
;553 4
}66 
IO88 
.88 
WriteString88 
(88 
$str88 7
+888 9
data88: >
+88? @
$str88A E
)88E F
;88F G
}99 	
catch:: 
(:: 
SqlException:: 
	exceptSql:: %
)::% &
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
	exceptSql<<. 7
,<<7 8
$str<<9 P
)<<P Q
;<<Q R
}== 	
finally>> 
{?? 	
try@@ 
{AA 
ifBB 
(BB 
dBConnectionBB  
!=BB! #
nullBB$ (
)BB( )
{CC 
dBConnectionDD  
.DD  !
CloseDD! &
(DD& '
)DD' (
;DD( )
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
	exceptSqlII2 ;
,II; <
$strII= Y
)IIY Z
;IIZ [
}JJ 
}KK 	
}LL 
publicOO 

overrideOO 
voidOO 
GoodOO 
(OO 
HttpRequestOO )
reqOO* -
,OO- .
HttpResponseOO/ ;
respOO< @
)OO@ A
{PP 
GoodG2BQQ 
(QQ 
reqQQ 
,QQ 
respQQ 
)QQ 
;QQ 
}RR 
privateUU 
staticUU 
voidUU 
GoodG2BUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
=WW D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_61bWW N
.WWN O
GoodG2BSourceWWO \
(WW\ ]
reqWW] `
,WW` a
respWWb f
)WWf g
;WWg h
SqlConnectionXX 
dBConnectionXX "
=XX# $
IOXX% '
.XX' (
GetDBConnectionXX( 7
(XX7 8
)XX8 9
;XX9 :

SqlCommandYY 
preparedStatementYY $
=YY% &
nullYY' +
;YY+ ,
intZZ 
idZZ 
=ZZ 
$numZZ 
;ZZ 
try[[ 
{\\ 	
id]] 
=]] 
int]] 
.]] 
Parse]] 
(]] 
data]] 
)]]  
;]]  !
}^^ 	
catch__ 
(__ 
FormatException__ 
nfx__ "
)__" #
{`` 	
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa 
.aa 
LogLevelaa '
.aa' (
Warnaa( ,
,aa, -
nfxaa. 1
,aa1 2
$straa3 W
)aaW X
;aaX Y
idbb 
=bb 
-bb 
$numbb 
;bb 
}cc 	
trydd 
{ee 	
dBConnectionff 
.ff 
Openff 
(ff 
)ff 
;ff  
usinggg 
(gg 
preparedStatementgg $
=gg% &
newgg' *

SqlCommandgg+ 5
(gg5 6
nullgg6 :
,gg: ;
dBConnectiongg< H
)ggH I
)ggI J
{hh 
preparedStatementii !
.ii! "
CommandTextii" -
=ii. /
$strii0 V
;iiV W
SqlParameterjj 
idParamjj $
=jj% &
newjj' *
SqlParameterjj+ 7
(jj7 8
$strjj8 =
,jj= >
	SqlDbTypejj? H
.jjH I
IntjjI L
,jjL M
$numjjN O
)jjO P
;jjP Q
idParamkk 
.kk 
Valuekk 
=kk 
idkk  "
;kk" #
preparedStatementll !
.ll! "
ExecuteNonQueryll" 1
(ll1 2
)ll2 3
;ll3 4
}mm 
IOoo 
.oo 
WriteStringoo 
(oo 
$stroo 7
+oo8 9
dataoo: >
+oo? @
$strooA E
)ooE F
;ooF G
}pp 	
catchqq 
(qq 
SqlExceptionqq 
	exceptSqlqq %
)qq% &
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
	exceptSqlss. 7
,ss7 8
$strss9 P
)ssP Q
;ssQ R
}tt 	
finallyuu 
{vv 	
tryww 
{xx 
ifyy 
(yy 
dBConnectionyy  
!=yy! #
nullyy$ (
)yy( )
{zz 
dBConnection{{  
.{{  !
Close{{! &
({{& '
){{' (
;{{( )
}|| 
}}} 
catch~~ 
(~~ 
SqlException~~ 
	exceptSql~~  )
)~~) *
{ 
IO
ÄÄ 
.
ÄÄ 
Logger
ÄÄ 
.
ÄÄ 
Log
ÄÄ 
(
ÄÄ 
NLog
ÄÄ "
.
ÄÄ" #
LogLevel
ÄÄ# +
.
ÄÄ+ ,
Warn
ÄÄ, 0
,
ÄÄ0 1
	exceptSql
ÄÄ2 ;
,
ÄÄ; <
$str
ÄÄ= Y
)
ÄÄY Z
;
ÄÄZ [
}
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
}ÖÖ 
}ÜÜ Ç
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_61b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_61b >
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $
return!! 
data!! 
;!! 
}"" 
public'' 

static'' 
string'' 
GoodG2BSource'' &
(''& '
HttpRequest''' 2
req''3 6
,''6 7
HttpResponse''8 D
resp''E I
)''I J
{(( 
string)) 
data)) 
;)) 
data++ 
=++ 
$str++ 
;++ 
return,, 
data,, 
;,, 
}-- 
}// 
}00 Ê
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_66a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_66a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest )
req* -
,- .
HttpResponse/ ;
resp< @
)@ A
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $
string!! 
[!! 
]!! 
	dataArray!! 
=!! 
new!!  
string!!! '
[!!' (
$num!!( )
]!!) *
;!!* +
	dataArray"" 
["" 
$num"" 
]"" 
="" 
data"" 
;"" D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_66b## @
.##@ A
BadSink##A H
(##H I
	dataArray##I R
,##S T
req##U X
,##X Y
resp##Z ^
)##_ `
;##` a
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
HttpRequest--  +
req--, /
,--/ 0
HttpResponse--1 =
resp--> B
)--B C
{.. 
string// 
data// 
;// 
data11 
=11 
$str11 
;11 
string22 
[22 
]22 
	dataArray22 
=22 
new22  
string22! '
[22' (
$num22( )
]22) *
;22* +
	dataArray33 
[33 
$num33 
]33 
=33 
data33 
;33 D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_66b44 @
.44@ A
GoodG2BSink44A L
(44L M
	dataArray44M V
,44W X
req44Y \
,44\ ]
resp44^ b
)44c d
;44d e
}55 
}77 
}88 î@
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_66b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_66b >
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string   
data   
=   
	dataArray   
[    
$num    !
]  ! "
;  " #
SqlConnection!! 
dBConnection!! "
=!!# $
IO!!% '
.!!' (
GetDBConnection!!( 7
(!!7 8
)!!8 9
;!!9 :

SqlCommand"" 
preparedStatement"" $
=""% &
null""' +
;""+ ,
int## 
id## 
=## 
$num## 
;## 
try$$ 
{%% 	
id&& 
=&& 
int&& 
.&& 
Parse&& 
(&& 
data&& 
)&&  
;&&  !
}'' 	
catch(( 
((( 
FormatException(( 
nfx(( "
)((" #
{)) 	
IO** 
.** 
Logger** 
.** 
Log** 
(** 
NLog** 
.** 
LogLevel** '
.**' (
Warn**( ,
,**, -
nfx**. 1
,**1 2
$str**3 W
)**W X
;**X Y
id++ 
=++ 
-++ 
$num++ 
;++ 
},, 	
try-- 
{.. 	
dBConnection// 
.// 
Open// 
(// 
)// 
;//  
using00 
(00 
preparedStatement00 $
=00% &
new00' *

SqlCommand00+ 5
(005 6
null006 :
,00: ;
dBConnection00< H
)00H I
)00I J
{11 
preparedStatement22 !
.22! "
CommandText22" -
=22. /
$str220 V
;22V W
SqlParameter33 
idParam33 $
=33% &
new33' *
SqlParameter33+ 7
(337 8
$str338 =
,33= >
	SqlDbType33? H
.33H I
Int33I L
,33L M
$num33N O
)33O P
;33P Q
idParam44 
.44 
Value44 
=44 
id44  "
;44" #
preparedStatement55 !
.55! "
ExecuteNonQuery55" 1
(551 2
)552 3
;553 4
}66 
IO88 
.88 
WriteString88 
(88 
$str88 7
+888 9
data88: >
+88? @
$str88A E
)88E F
;88F G
}99 	
catch:: 
(:: 
SqlException:: 
	exceptSql:: %
)::% &
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
	exceptSql<<. 7
,<<7 8
$str<<9 P
)<<P Q
;<<Q R
}== 	
finally>> 
{?? 	
try@@ 
{AA 
ifBB 
(BB 
dBConnectionBB  
!=BB! #
nullBB$ (
)BB( )
{CC 
dBConnectionDD  
.DD  !
CloseDD! &
(DD& '
)DD' (
;DD( )
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
	exceptSqlII2 ;
,II; <
$strII= Y
)IIY Z
;IIZ [
}JJ 
}KK 	
}LL 
publicQQ 

staticQQ 
voidQQ 
GoodG2BSinkQQ "
(QQ" #
stringQQ# )
[QQ) *
]QQ* +
	dataArrayQQ, 5
,QQ6 7
HttpRequestQQ8 C
reqQQD G
,QQG H
HttpResponseQQI U
respQQV Z
)QQZ [
{RR 
stringSS 
dataSS 
=SS 
	dataArraySS 
[SS  
$numSS  !
]SS! "
;SS" #
SqlConnectionTT 
dBConnectionTT "
=TT# $
IOTT% '
.TT' (
GetDBConnectionTT( 7
(TT7 8
)TT8 9
;TT9 :

SqlCommandUU 
preparedStatementUU $
=UU% &
nullUU' +
;UU+ ,
intVV 
idVV 
=VV 
$numVV 
;VV 
tryWW 
{XX 	
idYY 
=YY 
intYY 
.YY 
ParseYY 
(YY 
dataYY 
)YY  
;YY  !
}ZZ 	
catch[[ 
([[ 
FormatException[[ 
nfx[[ "
)[[" #
{\\ 	
IO]] 
.]] 
Logger]] 
.]] 
Log]] 
(]] 
NLog]] 
.]] 
LogLevel]] '
.]]' (
Warn]]( ,
,]], -
nfx]]. 1
,]]1 2
$str]]3 W
)]]W X
;]]X Y
id^^ 
=^^ 
-^^ 
$num^^ 
;^^ 
}__ 	
try`` 
{aa 	
dBConnectionbb 
.bb 
Openbb 
(bb 
)bb 
;bb  
usingcc 
(cc 
preparedStatementcc $
=cc% &
newcc' *

SqlCommandcc+ 5
(cc5 6
nullcc6 :
,cc: ;
dBConnectioncc< H
)ccH I
)ccI J
{dd 
preparedStatementee !
.ee! "
CommandTextee" -
=ee. /
$stree0 V
;eeV W
SqlParameterff 
idParamff $
=ff% &
newff' *
SqlParameterff+ 7
(ff7 8
$strff8 =
,ff= >
	SqlDbTypeff? H
.ffH I
IntffI L
,ffL M
$numffN O
)ffO P
;ffP Q
idParamgg 
.gg 
Valuegg 
=gg 
idgg  "
;gg" #
preparedStatementhh !
.hh! "
ExecuteNonQueryhh" 1
(hh1 2
)hh2 3
;hh3 4
}ii 
IOkk 
.kk 
WriteStringkk 
(kk 
$strkk 7
+kk8 9
datakk: >
+kk? @
$strkkA E
)kkE F
;kkF G
}ll 	
catchmm 
(mm 
SqlExceptionmm 
	exceptSqlmm %
)mm% &
{nn 	
IOoo 
.oo 
Loggeroo 
.oo 
Logoo 
(oo 
NLogoo 
.oo 
LogLeveloo '
.oo' (
Warnoo( ,
,oo, -
	exceptSqloo. 7
,oo7 8
$stroo9 P
)ooP Q
;ooQ R
}pp 	
finallyqq 
{rr 	
tryss 
{tt 
ifuu 
(uu 
dBConnectionuu  
!=uu! #
nulluu$ (
)uu( )
{vv 
dBConnectionww  
.ww  !
Closeww! &
(ww& '
)ww' (
;ww( )
}xx 
}yy 
catchzz 
(zz 
SqlExceptionzz 
	exceptSqlzz  )
)zz) *
{{{ 
IO|| 
.|| 
Logger|| 
.|| 
Log|| 
(|| 
NLog|| "
.||" #
LogLevel||# +
.||+ ,
Warn||, 0
,||0 1
	exceptSql||2 ;
,||; <
$str||= Y
)||Y Z
;||Z [
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ …
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67a >
:? @
AbstractTestCaseWebA T
{ 
public 

class 
	Container 
{ 
public 
string 
containerOne "
;" #
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% "
)%%" #
;%%# $
	Container&& 
dataContainer&& 
=&&  !
new&&" %
	Container&&& /
(&&/ 0
)&&0 1
;&&1 2
dataContainer'' 
.'' 
containerOne'' "
=''# $
data''% )
;'') *D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67b(( @
.((@ A
BadSink((A H
(((H I
dataContainer((I V
,((W X
req((Y \
,((\ ]
resp((^ b
)((c d
;((d e
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
}// 
private22 
static22 
void22 
GoodG2B22 
(22  
HttpRequest22  +
req22, /
,22/ 0
HttpResponse221 =
resp22> B
)22B C
{33 
string44 
data44 
;44 
data66 
=66 
$str66 
;66 
	Container77 
dataContainer77 
=77  !
new77" %
	Container77& /
(77/ 0
)770 1
;771 2
dataContainer88 
.88 
containerOne88 "
=88# $
data88% )
;88) *D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67b99 @
.99@ A
GoodG2BSink99A L
(99L M
dataContainer99M Z
,99[ \
req99] `
,99` a
resp99b f
)99g h
;99h i
}:: 
}<< 
}== ûA
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67b >
{ 
public 

static 
void 
BadSink 
( D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67a W
.W X
	ContainerX a
dataContainerb o
,p q
HttpRequestr }
req	~ Å
,
Å Ç
HttpResponse
É è
resp
ê î
)
î ï
{ 
string   
data   
=   
dataContainer   #
.  # $
containerOne  $ 0
;  0 1
SqlConnection!! 
dBConnection!! "
=!!# $
IO!!% '
.!!' (
GetDBConnection!!( 7
(!!7 8
)!!8 9
;!!9 :

SqlCommand"" 
preparedStatement"" $
=""% &
null""' +
;""+ ,
int## 
id## 
=## 
$num## 
;## 
try$$ 
{%% 	
id&& 
=&& 
int&& 
.&& 
Parse&& 
(&& 
data&& 
)&&  
;&&  !
}'' 	
catch(( 
((( 
FormatException(( 
nfx(( "
)((" #
{)) 	
IO** 
.** 
Logger** 
.** 
Log** 
(** 
NLog** 
.** 
LogLevel** '
.**' (
Warn**( ,
,**, -
nfx**. 1
,**1 2
$str**3 W
)**W X
;**X Y
id++ 
=++ 
-++ 
$num++ 
;++ 
},, 	
try-- 
{.. 	
dBConnection// 
.// 
Open// 
(// 
)// 
;//  
using00 
(00 
preparedStatement00 $
=00% &
new00' *

SqlCommand00+ 5
(005 6
null006 :
,00: ;
dBConnection00< H
)00H I
)00I J
{11 
preparedStatement22 !
.22! "
CommandText22" -
=22. /
$str220 V
;22V W
SqlParameter33 
idParam33 $
=33% &
new33' *
SqlParameter33+ 7
(337 8
$str338 =
,33= >
	SqlDbType33? H
.33H I
Int33I L
,33L M
$num33N O
)33O P
;33P Q
idParam44 
.44 
Value44 
=44 
id44  "
;44" #
preparedStatement55 !
.55! "
ExecuteNonQuery55" 1
(551 2
)552 3
;553 4
}66 
IO88 
.88 
WriteString88 
(88 
$str88 7
+888 9
data88: >
+88? @
$str88A E
)88E F
;88F G
}99 	
catch:: 
(:: 
SqlException:: 
	exceptSql:: %
)::% &
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
	exceptSql<<. 7
,<<7 8
$str<<9 P
)<<P Q
;<<Q R
}== 	
finally>> 
{?? 	
try@@ 
{AA 
ifBB 
(BB 
dBConnectionBB  
!=BB! #
nullBB$ (
)BB( )
{CC 
dBConnectionDD  
.DD  !
CloseDD! &
(DD& '
)DD' (
;DD( )
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
	exceptSqlII2 ;
,II; <
$strII= Y
)IIY Z
;IIZ [
}JJ 
}KK 	
}LL 
publicQQ 

staticQQ 
voidQQ 
GoodG2BSinkQQ "
(QQ" #D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_67aQQ# [
.QQ[ \
	ContainerQQ\ e
dataContainerQQf s
,QQt u
HttpRequest	QQv Å
req
QQÇ Ö
,
QQÖ Ü
HttpResponse
QQá ì
resp
QQî ò
)
QQò ô
{RR 
stringSS 
dataSS 
=SS 
dataContainerSS #
.SS# $
containerOneSS$ 0
;SS0 1
SqlConnectionTT 
dBConnectionTT "
=TT# $
IOTT% '
.TT' (
GetDBConnectionTT( 7
(TT7 8
)TT8 9
;TT9 :

SqlCommandUU 
preparedStatementUU $
=UU% &
nullUU' +
;UU+ ,
intVV 
idVV 
=VV 
$numVV 
;VV 
tryWW 
{XX 	
idYY 
=YY 
intYY 
.YY 
ParseYY 
(YY 
dataYY 
)YY  
;YY  !
}ZZ 	
catch[[ 
([[ 
FormatException[[ 
nfx[[ "
)[[" #
{\\ 	
IO]] 
.]] 
Logger]] 
.]] 
Log]] 
(]] 
NLog]] 
.]] 
LogLevel]] '
.]]' (
Warn]]( ,
,]], -
nfx]]. 1
,]]1 2
$str]]3 W
)]]W X
;]]X Y
id^^ 
=^^ 
-^^ 
$num^^ 
;^^ 
}__ 	
try`` 
{aa 	
dBConnectionbb 
.bb 
Openbb 
(bb 
)bb 
;bb  
usingcc 
(cc 
preparedStatementcc $
=cc% &
newcc' *

SqlCommandcc+ 5
(cc5 6
nullcc6 :
,cc: ;
dBConnectioncc< H
)ccH I
)ccI J
{dd 
preparedStatementee !
.ee! "
CommandTextee" -
=ee. /
$stree0 V
;eeV W
SqlParameterff 
idParamff $
=ff% &
newff' *
SqlParameterff+ 7
(ff7 8
$strff8 =
,ff= >
	SqlDbTypeff? H
.ffH I
IntffI L
,ffL M
$numffN O
)ffO P
;ffP Q
idParamgg 
.gg 
Valuegg 
=gg 
idgg  "
;gg" #
preparedStatementhh !
.hh! "
ExecuteNonQueryhh" 1
(hh1 2
)hh2 3
;hh3 4
}ii 
IOkk 
.kk 
WriteStringkk 
(kk 
$strkk 7
+kk8 9
datakk: >
+kk? @
$strkkA E
)kkE F
;kkF G
}ll 	
catchmm 
(mm 
SqlExceptionmm 
	exceptSqlmm %
)mm% &
{nn 	
IOoo 
.oo 
Loggeroo 
.oo 
Logoo 
(oo 
NLogoo 
.oo 
LogLeveloo '
.oo' (
Warnoo( ,
,oo, -
	exceptSqloo. 7
,oo7 8
$stroo9 P
)ooP Q
;ooQ R
}pp 	
finallyqq 
{rr 	
tryss 
{tt 
ifuu 
(uu 
dBConnectionuu  
!=uu! #
nulluu$ (
)uu( )
{vv 
dBConnectionww  
.ww  !
Closeww! &
(ww& '
)ww' (
;ww( )
}xx 
}yy 
catchzz 
(zz 
SqlExceptionzz 
	exceptSqlzz  )
)zz) *
{{{ 
IO|| 
.|| 
Logger|| 
.|| 
Log|| 
(|| 
NLog|| "
.||" #
LogLevel||# +
.||+ ,
Warn||, 0
,||0 1
	exceptSql||2 ;
,||; <
$str||= Y
)||Y Z
;||Z [
}}} 
}~~ 	
} 
}ÅÅ 
}ÇÇ ß
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68a >
:? @
AbstractTestCaseWebA T
{ 
public 

static 
string 
data 
; 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68b!! @
.!!@ A
BadSink!!A H
(!!H I
req!!I L
,!!L M
resp!!N R
)!!R S
;!!S T
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
HttpRequest%% )
req%%* -
,%%- .
HttpResponse%%/ ;
resp%%< @
)%%@ A
{&& 
GoodG2B'' 
('' 
req'' 
,'' 
resp'' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
HttpRequest++  +
req++, /
,++/ 0
HttpResponse++1 =
resp++> B
)++B C
{,, 
data.. 
=.. 
$str.. 
;.. D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68b// @
.//@ A
GoodG2BSink//A L
(//L M
req//M P
,//P Q
resp//R V
)//V W
;//W X
}00 
}22 
}33 §?
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68b >
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68a N
.N O
dataO S
;S T
SqlConnection   
dBConnection   "
=  # $
IO  % '
.  ' (
GetDBConnection  ( 7
(  7 8
)  8 9
;  9 :

SqlCommand!! 
preparedStatement!! $
=!!% &
null!!' +
;!!+ ,
int"" 
id"" 
="" 
$num"" 
;"" 
try## 
{$$ 	
id%% 
=%% 
int%% 
.%% 
Parse%% 
(%% 
data%% 
)%%  
;%%  !
}&& 	
catch'' 
('' 
FormatException'' 
nfx'' "
)''" #
{(( 	
IO)) 
.)) 
Logger)) 
.)) 
Log)) 
()) 
NLog)) 
.)) 
LogLevel)) '
.))' (
Warn))( ,
,)), -
nfx)). 1
,))1 2
$str))3 W
)))W X
;))X Y
id** 
=** 
-** 
$num** 
;** 
}++ 	
try,, 
{-- 	
dBConnection.. 
... 
Open.. 
(.. 
).. 
;..  
using// 
(// 
preparedStatement// $
=//% &
new//' *

SqlCommand//+ 5
(//5 6
null//6 :
,//: ;
dBConnection//< H
)//H I
)//I J
{00 
preparedStatement11 !
.11! "
CommandText11" -
=11. /
$str110 V
;11V W
SqlParameter22 
idParam22 $
=22% &
new22' *
SqlParameter22+ 7
(227 8
$str228 =
,22= >
	SqlDbType22? H
.22H I
Int22I L
,22L M
$num22N O
)22O P
;22P Q
idParam33 
.33 
Value33 
=33 
id33  "
;33" #
preparedStatement44 !
.44! "
ExecuteNonQuery44" 1
(441 2
)442 3
;443 4
}55 
IO77 
.77 
WriteString77 
(77 
$str77 7
+778 9
data77: >
+77? @
$str77A E
)77E F
;77F G
}88 	
catch99 
(99 
SqlException99 
	exceptSql99 %
)99% &
{:: 	
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; 
.;; 
LogLevel;; '
.;;' (
Warn;;( ,
,;;, -
	exceptSql;;. 7
,;;7 8
$str;;9 P
);;P Q
;;;Q R
}<< 	
finally== 
{>> 	
try?? 
{@@ 
ifAA 
(AA 
dBConnectionAA  
!=AA! #
nullAA$ (
)AA( )
{BB 
dBConnectionCC  
.CC  !
CloseCC! &
(CC& '
)CC' (
;CC( )
}DD 
}EE 
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF  )
)FF) *
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
	exceptSqlHH2 ;
,HH; <
$strHH= Y
)HHY Z
;HHZ [
}II 
}JJ 	
}KK 
publicPP 

staticPP 
voidPP 
GoodG2BSinkPP "
(PP" #
HttpRequestPP# .
reqPP/ 2
,PP2 3
HttpResponsePP4 @
respPPA E
)PPE F
{QQ 
stringRR 
dataRR 
=RR D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_68aRR N
.RRN O
dataRRO S
;RRS T
SqlConnectionSS 
dBConnectionSS "
=SS# $
IOSS% '
.SS' (
GetDBConnectionSS( 7
(SS7 8
)SS8 9
;SS9 :

SqlCommandTT 
preparedStatementTT $
=TT% &
nullTT' +
;TT+ ,
intUU 
idUU 
=UU 
$numUU 
;UU 
tryVV 
{WW 	
idXX 
=XX 
intXX 
.XX 
ParseXX 
(XX 
dataXX 
)XX  
;XX  !
}YY 	
catchZZ 
(ZZ 
FormatExceptionZZ 
nfxZZ "
)ZZ" #
{[[ 	
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ 
.\\ 
LogLevel\\ '
.\\' (
Warn\\( ,
,\\, -
nfx\\. 1
,\\1 2
$str\\3 W
)\\W X
;\\X Y
id]] 
=]] 
-]] 
$num]] 
;]] 
}^^ 	
try__ 
{`` 	
dBConnectionaa 
.aa 
Openaa 
(aa 
)aa 
;aa  
usingbb 
(bb 
preparedStatementbb $
=bb% &
newbb' *

SqlCommandbb+ 5
(bb5 6
nullbb6 :
,bb: ;
dBConnectionbb< H
)bbH I
)bbI J
{cc 
preparedStatementdd !
.dd! "
CommandTextdd" -
=dd. /
$strdd0 V
;ddV W
SqlParameteree 
idParamee $
=ee% &
newee' *
SqlParameteree+ 7
(ee7 8
$stree8 =
,ee= >
	SqlDbTypeee? H
.eeH I
InteeI L
,eeL M
$numeeN O
)eeO P
;eeP Q
idParamff 
.ff 
Valueff 
=ff 
idff  "
;ff" #
preparedStatementgg !
.gg! "
ExecuteNonQuerygg" 1
(gg1 2
)gg2 3
;gg3 4
}hh 
IOjj 
.jj 
WriteStringjj 
(jj 
$strjj 7
+jj8 9
datajj: >
+jj? @
$strjjA E
)jjE F
;jjF G
}kk 	
catchll 
(ll 
SqlExceptionll 
	exceptSqlll %
)ll% &
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
	exceptSqlnn. 7
,nn7 8
$strnn9 P
)nnP Q
;nnQ R
}oo 	
finallypp 
{qq 	
tryrr 
{ss 
iftt 
(tt 
dBConnectiontt  
!=tt! #
nulltt$ (
)tt( )
{uu 
dBConnectionvv  
.vv  !
Closevv! &
(vv& '
)vv' (
;vv( )
}ww 
}xx 
catchyy 
(yy 
SqlExceptionyy 
	exceptSqlyy  )
)yy) *
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
	exceptSql{{2 ;
,{{; <
$str{{= Y
){{Y Z
;{{Z [
}|| 
}}} 	
}~~ 
}ÄÄ 
}ÅÅ ⁄
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_71a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_71a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_71b!! @
.!!@ A
BadSink!!A H
(!!H I
(!!I J
Object!!J P
)!!P Q
data!!Q U
,!!V W
req!!X [
,!![ \
resp!!] a
)!!b c
;!!c d
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
HttpRequest%% )
req%%* -
,%%- .
HttpResponse%%/ ;
resp%%< @
)%%@ A
{&& 
GoodG2B'' 
('' 
req'' 
,'' 
resp'' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
HttpRequest++  +
req++, /
,++/ 0
HttpResponse++1 =
resp++> B
)++B C
{,, 
string-- 
data-- 
;-- 
data// 
=// 
$str// 
;// D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_71b00 @
.00@ A
GoodG2BSink00A L
(00L M
(00M N
Object00N T
)00T U
data00U Y
,00Z [
req00\ _
,00_ `
resp00a e
)00f g
;00g h
}11 
}33 
}44 ‚?
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_71b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_71b >
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{   
string!! 
data!! 
=!! 
(!! 
string!! 
)!! 

dataObject!! (
;!!( )
SqlConnection"" 
dBConnection"" "
=""# $
IO""% '
.""' (
GetDBConnection""( 7
(""7 8
)""8 9
;""9 :

SqlCommand## 
preparedStatement## $
=##% &
null##' +
;##+ ,
int$$ 
id$$ 
=$$ 
$num$$ 
;$$ 
try%% 
{&& 	
id'' 
='' 
int'' 
.'' 
Parse'' 
('' 
data'' 
)''  
;''  !
}(( 	
catch)) 
()) 
FormatException)) 
nfx)) "
)))" #
{** 	
IO++ 
.++ 
Logger++ 
.++ 
Log++ 
(++ 
NLog++ 
.++ 
LogLevel++ '
.++' (
Warn++( ,
,++, -
nfx++. 1
,++1 2
$str++3 W
)++W X
;++X Y
id,, 
=,, 
-,, 
$num,, 
;,, 
}-- 	
try.. 
{// 	
dBConnection00 
.00 
Open00 
(00 
)00 
;00  
using11 
(11 
preparedStatement11 $
=11% &
new11' *

SqlCommand11+ 5
(115 6
null116 :
,11: ;
dBConnection11< H
)11H I
)11I J
{22 
preparedStatement33 !
.33! "
CommandText33" -
=33. /
$str330 V
;33V W
SqlParameter44 
idParam44 $
=44% &
new44' *
SqlParameter44+ 7
(447 8
$str448 =
,44= >
	SqlDbType44? H
.44H I
Int44I L
,44L M
$num44N O
)44O P
;44P Q
idParam55 
.55 
Value55 
=55 
id55  "
;55" #
preparedStatement66 !
.66! "
ExecuteNonQuery66" 1
(661 2
)662 3
;663 4
}77 
IO99 
.99 
WriteString99 
(99 
$str99 7
+998 9
data99: >
+99? @
$str99A E
)99E F
;99F G
}:: 	
catch;; 
(;; 
SqlException;; 
	exceptSql;; %
);;% &
{<< 	
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== 
.== 
LogLevel== '
.==' (
Warn==( ,
,==, -
	exceptSql==. 7
,==7 8
$str==9 P
)==P Q
;==Q R
}>> 	
finally?? 
{@@ 	
tryAA 
{BB 
ifCC 
(CC 
dBConnectionCC  
!=CC! #
nullCC$ (
)CC( )
{DD 
dBConnectionEE  
.EE  !
CloseEE! &
(EE& '
)EE' (
;EE( )
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH 
	exceptSqlHH  )
)HH) *
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ 
(JJ 
NLogJJ "
.JJ" #
LogLevelJJ# +
.JJ+ ,
WarnJJ, 0
,JJ0 1
	exceptSqlJJ2 ;
,JJ; <
$strJJ= Y
)JJY Z
;JJZ [
}KK 
}LL 	
}MM 
publicRR 

staticRR 
voidRR 
GoodG2BSinkRR "
(RR" #
ObjectRR# )

dataObjectRR* 4
,RR5 6
HttpRequestRR7 B
reqRRC F
,RRF G
HttpResponseRRH T
respRRU Y
)RRY Z
{SS 
stringTT 
dataTT 
=TT 
(TT 
stringTT 
)TT 

dataObjectTT (
;TT( )
SqlConnectionUU 
dBConnectionUU "
=UU# $
IOUU% '
.UU' (
GetDBConnectionUU( 7
(UU7 8
)UU8 9
;UU9 :

SqlCommandVV 
preparedStatementVV $
=VV% &
nullVV' +
;VV+ ,
intWW 
idWW 
=WW 
$numWW 
;WW 
tryXX 
{YY 	
idZZ 
=ZZ 
intZZ 
.ZZ 
ParseZZ 
(ZZ 
dataZZ 
)ZZ  
;ZZ  !
}[[ 	
catch\\ 
(\\ 
FormatException\\ 
nfx\\ "
)\\" #
{]] 	
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ 
.^^ 
LogLevel^^ '
.^^' (
Warn^^( ,
,^^, -
nfx^^. 1
,^^1 2
$str^^3 W
)^^W X
;^^X Y
id__ 
=__ 
-__ 
$num__ 
;__ 
}`` 	
tryaa 
{bb 	
dBConnectioncc 
.cc 
Opencc 
(cc 
)cc 
;cc  
usingdd 
(dd 
preparedStatementdd $
=dd% &
newdd' *

SqlCommanddd+ 5
(dd5 6
nulldd6 :
,dd: ;
dBConnectiondd< H
)ddH I
)ddI J
{ee 
preparedStatementff !
.ff! "
CommandTextff" -
=ff. /
$strff0 V
;ffV W
SqlParametergg 
idParamgg $
=gg% &
newgg' *
SqlParametergg+ 7
(gg7 8
$strgg8 =
,gg= >
	SqlDbTypegg? H
.ggH I
IntggI L
,ggL M
$numggN O
)ggO P
;ggP Q
idParamhh 
.hh 
Valuehh 
=hh 
idhh  "
;hh" #
preparedStatementii !
.ii! "
ExecuteNonQueryii" 1
(ii1 2
)ii2 3
;ii3 4
}jj 
IOll 
.ll 
WriteStringll 
(ll 
$strll 7
+ll8 9
datall: >
+ll? @
$strllA E
)llE F
;llF G
}mm 	
catchnn 
(nn 
SqlExceptionnn 
	exceptSqlnn %
)nn% &
{oo 	
IOpp 
.pp 
Loggerpp 
.pp 
Logpp 
(pp 
NLogpp 
.pp 
LogLevelpp '
.pp' (
Warnpp( ,
,pp, -
	exceptSqlpp. 7
,pp7 8
$strpp9 P
)ppP Q
;ppQ R
}qq 	
finallyrr 
{ss 	
trytt 
{uu 
ifvv 
(vv 
dBConnectionvv  
!=vv! #
nullvv$ (
)vv( )
{ww 
dBConnectionxx  
.xx  !
Closexx! &
(xx& '
)xx' (
;xx( )
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
	exceptSql}}2 ;
,}}; <
$str}}= Y
)}}Y Z
;}}Z [
}~~ 
} 	
}
ÄÄ 
}ÇÇ 
}ÉÉ ˙
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_72a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_72a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $
	Hashtable!! 
dataHashtable!! 
=!!  !
new!!" %
	Hashtable!!& /
(!!/ 0
$num!!0 1
)!!1 2
;!!2 3
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #
dataHashtable## 
.## 
Add## 
(## 
$num## 
,## 
data## !
)##! "
;##" #
dataHashtable$$ 
.$$ 
Add$$ 
($$ 
$num$$ 
,$$ 
data$$ !
)$$! "
;$$" #D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_72b%% @
.%%@ A
BadSink%%A H
(%%H I
dataHashtable%%I V
,%%W X
req%%Y \
,%%\ ]
resp%%^ b
)%%c d
;%%d e
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 
	Hashtable44 
dataHashtable44 
=44  !
new44" %
	Hashtable44& /
(44/ 0
$num440 1
)441 2
;442 3
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #
dataHashtable66 
.66 
Add66 
(66 
$num66 
,66 
data66 !
)66! "
;66" #
dataHashtable77 
.77 
Add77 
(77 
$num77 
,77 
data77 !
)77! "
;77" #D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_72b88 @
.88@ A
GoodG2BSink88A L
(88L M
dataHashtable88M Z
,88[ \
req88] `
,88` a
resp88b f
)88g h
;88h i
}99 
};; 
}<< ‘@
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_72b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_72b >
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{   
string!! 
data!! 
=!! 
(!! 
string!! 
)!! 
dataHashtable!! ,
[!!, -
$num!!- .
]!!. /
;!!/ 0
SqlConnection"" 
dBConnection"" "
=""# $
IO""% '
.""' (
GetDBConnection""( 7
(""7 8
)""8 9
;""9 :

SqlCommand## 
preparedStatement## $
=##% &
null##' +
;##+ ,
int$$ 
id$$ 
=$$ 
$num$$ 
;$$ 
try%% 
{&& 	
id'' 
='' 
int'' 
.'' 
Parse'' 
('' 
data'' 
)''  
;''  !
}(( 	
catch)) 
()) 
FormatException)) 
nfx)) "
)))" #
{** 	
IO++ 
.++ 
Logger++ 
.++ 
Log++ 
(++ 
NLog++ 
.++ 
LogLevel++ '
.++' (
Warn++( ,
,++, -
nfx++. 1
,++1 2
$str++3 W
)++W X
;++X Y
id,, 
=,, 
-,, 
$num,, 
;,, 
}-- 	
try.. 
{// 	
dBConnection00 
.00 
Open00 
(00 
)00 
;00  
using11 
(11 
preparedStatement11 $
=11% &
new11' *

SqlCommand11+ 5
(115 6
null116 :
,11: ;
dBConnection11< H
)11H I
)11I J
{22 
preparedStatement33 !
.33! "
CommandText33" -
=33. /
$str330 V
;33V W
SqlParameter44 
idParam44 $
=44% &
new44' *
SqlParameter44+ 7
(447 8
$str448 =
,44= >
	SqlDbType44? H
.44H I
Int44I L
,44L M
$num44N O
)44O P
;44P Q
idParam55 
.55 
Value55 
=55 
id55  "
;55" #
preparedStatement66 !
.66! "
ExecuteNonQuery66" 1
(661 2
)662 3
;663 4
}77 
IO99 
.99 
WriteString99 
(99 
$str99 7
+998 9
data99: >
+99? @
$str99A E
)99E F
;99F G
}:: 	
catch;; 
(;; 
SqlException;; 
	exceptSql;; %
);;% &
{<< 	
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== 
.== 
LogLevel== '
.==' (
Warn==( ,
,==, -
	exceptSql==. 7
,==7 8
$str==9 P
)==P Q
;==Q R
}>> 	
finally?? 
{@@ 	
tryAA 
{BB 
ifCC 
(CC 
dBConnectionCC  
!=CC! #
nullCC$ (
)CC( )
{DD 
dBConnectionEE  
.EE  !
CloseEE! &
(EE& '
)EE' (
;EE( )
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH 
	exceptSqlHH  )
)HH) *
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ 
(JJ 
NLogJJ "
.JJ" #
LogLevelJJ# +
.JJ+ ,
WarnJJ, 0
,JJ0 1
	exceptSqlJJ2 ;
,JJ; <
$strJJ= Y
)JJY Z
;JJZ [
}KK 
}LL 	
}MM 
publicRR 

staticRR 
voidRR 
GoodG2BSinkRR "
(RR" #
	HashtableRR# ,
dataHashtableRR- :
,RR; <
HttpRequestRR= H
reqRRI L
,RRL M
HttpResponseRRN Z
respRR[ _
)RR_ `
{SS 
stringTT 
dataTT 
=TT 
(TT 
stringTT 
)TT 
dataHashtableTT ,
[TT, -
$numTT- .
]TT. /
;TT/ 0
SqlConnectionUU 
dBConnectionUU "
=UU# $
IOUU% '
.UU' (
GetDBConnectionUU( 7
(UU7 8
)UU8 9
;UU9 :

SqlCommandVV 
preparedStatementVV $
=VV% &
nullVV' +
;VV+ ,
intWW 
idWW 
=WW 
$numWW 
;WW 
tryXX 
{YY 	
idZZ 
=ZZ 
intZZ 
.ZZ 
ParseZZ 
(ZZ 
dataZZ 
)ZZ  
;ZZ  !
}[[ 	
catch\\ 
(\\ 
FormatException\\ 
nfx\\ "
)\\" #
{]] 	
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ 
.^^ 
LogLevel^^ '
.^^' (
Warn^^( ,
,^^, -
nfx^^. 1
,^^1 2
$str^^3 W
)^^W X
;^^X Y
id__ 
=__ 
-__ 
$num__ 
;__ 
}`` 	
tryaa 
{bb 	
dBConnectioncc 
.cc 
Opencc 
(cc 
)cc 
;cc  
usingdd 
(dd 
preparedStatementdd $
=dd% &
newdd' *

SqlCommanddd+ 5
(dd5 6
nulldd6 :
,dd: ;
dBConnectiondd< H
)ddH I
)ddI J
{ee 
preparedStatementff !
.ff! "
CommandTextff" -
=ff. /
$strff0 V
;ffV W
SqlParametergg 
idParamgg $
=gg% &
newgg' *
SqlParametergg+ 7
(gg7 8
$strgg8 =
,gg= >
	SqlDbTypegg? H
.ggH I
IntggI L
,ggL M
$numggN O
)ggO P
;ggP Q
idParamhh 
.hh 
Valuehh 
=hh 
idhh  "
;hh" #
preparedStatementii !
.ii! "
ExecuteNonQueryii" 1
(ii1 2
)ii2 3
;ii3 4
}jj 
IOll 
.ll 
WriteStringll 
(ll 
$strll 7
+ll8 9
datall: >
+ll? @
$strllA E
)llE F
;llF G
}mm 	
catchnn 
(nn 
SqlExceptionnn 
	exceptSqlnn %
)nn% &
{oo 	
IOpp 
.pp 
Loggerpp 
.pp 
Logpp 
(pp 
NLogpp 
.pp 
LogLevelpp '
.pp' (
Warnpp( ,
,pp, -
	exceptSqlpp. 7
,pp7 8
$strpp9 P
)ppP Q
;ppQ R
}qq 	
finallyrr 
{ss 	
trytt 
{uu 
ifvv 
(vv 
dBConnectionvv  
!=vv! #
nullvv$ (
)vv( )
{ww 
dBConnectionxx  
.xx  !
Closexx! &
(xx& '
)xx' (
;xx( )
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
	exceptSql}}2 ;
,}}; <
$str}}= Y
)}}Y Z
;}}Z [
}~~ 
} 	
}
ÄÄ 
}ÇÇ 
}ÉÉ ˛
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_73a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_73a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data!! 
=!! 
req!! 
.!! 
Params!! 
.!! 
Get!! 
(!! 
$str!! "
)!!" #
;!!# $

LinkedList"" 
<"" 
string"" 
>"" 
dataLinkedList"" )
=""* +
new"", /

LinkedList""0 :
<"": ;
string""; A
>""A B
(""B C
)""C D
;""D E
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %
dataLinkedList$$ 
.$$ 
AddLast$$ 
($$ 
data$$ #
)$$# $
;$$$ %
dataLinkedList%% 
.%% 
AddLast%% 
(%% 
data%% #
)%%# $
;%%$ %D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_73b&& @
.&&@ A
BadSink&&A H
(&&H I
dataLinkedList&&I W
,&&X Y
req&&Z ]
,&&] ^
resp&&_ c
)&&d e
;&&e f
}'' 
public** 

override** 
void** 
Good** 
(** 
HttpRequest** )
req*** -
,**- .
HttpResponse**/ ;
resp**< @
)**@ A
{++ 
GoodG2B,, 
(,, 
req,, 
,,, 
resp,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
HttpRequest00  +
req00, /
,00/ 0
HttpResponse001 =
resp00> B
)00B C
{11 
string22 
data22 
;22 
data44 
=44 
$str44 
;44 

LinkedList55 
<55 
string55 
>55 
dataLinkedList55 )
=55* +
new55, /

LinkedList550 :
<55: ;
string55; A
>55A B
(55B C
)55C D
;55D E
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %
dataLinkedList77 
.77 
AddLast77 
(77 
data77 #
)77# $
;77$ %
dataLinkedList88 
.88 
AddLast88 
(88 
data88 #
)88# $
;88$ %D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_73b99 @
.99@ A
GoodG2BSink99A L
(99L M
dataLinkedList99M [
,99\ ]
req99^ a
,99a b
resp99c g
)99h i
;99i j
}:: 
}<< 
}== ÄA
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_73b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_73b >
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{   
string!! 
data!! 
=!! 
dataLinkedList!! $
.!!$ %
Last!!% )
.!!) *
Value!!* /
;!!/ 0
SqlConnection"" 
dBConnection"" "
=""# $
IO""% '
.""' (
GetDBConnection""( 7
(""7 8
)""8 9
;""9 :

SqlCommand## 
preparedStatement## $
=##% &
null##' +
;##+ ,
int$$ 
id$$ 
=$$ 
$num$$ 
;$$ 
try%% 
{&& 	
id'' 
='' 
int'' 
.'' 
Parse'' 
('' 
data'' 
)''  
;''  !
}(( 	
catch)) 
()) 
FormatException)) 
nfx)) "
)))" #
{** 	
IO++ 
.++ 
Logger++ 
.++ 
Log++ 
(++ 
NLog++ 
.++ 
LogLevel++ '
.++' (
Warn++( ,
,++, -
nfx++. 1
,++1 2
$str++3 W
)++W X
;++X Y
id,, 
=,, 
-,, 
$num,, 
;,, 
}-- 	
try.. 
{// 	
dBConnection00 
.00 
Open00 
(00 
)00 
;00  
using11 
(11 
preparedStatement11 $
=11% &
new11' *

SqlCommand11+ 5
(115 6
null116 :
,11: ;
dBConnection11< H
)11H I
)11I J
{22 
preparedStatement33 !
.33! "
CommandText33" -
=33. /
$str330 V
;33V W
SqlParameter44 
idParam44 $
=44% &
new44' *
SqlParameter44+ 7
(447 8
$str448 =
,44= >
	SqlDbType44? H
.44H I
Int44I L
,44L M
$num44N O
)44O P
;44P Q
idParam55 
.55 
Value55 
=55 
id55  "
;55" #
preparedStatement66 !
.66! "
ExecuteNonQuery66" 1
(661 2
)662 3
;663 4
}77 
IO99 
.99 
WriteString99 
(99 
$str99 7
+998 9
data99: >
+99? @
$str99A E
)99E F
;99F G
}:: 	
catch;; 
(;; 
SqlException;; 
	exceptSql;; %
);;% &
{<< 	
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== 
.== 
LogLevel== '
.==' (
Warn==( ,
,==, -
	exceptSql==. 7
,==7 8
$str==9 P
)==P Q
;==Q R
}>> 	
finally?? 
{@@ 	
tryAA 
{BB 
ifCC 
(CC 
dBConnectionCC  
!=CC! #
nullCC$ (
)CC( )
{DD 
dBConnectionEE  
.EE  !
CloseEE! &
(EE& '
)EE' (
;EE( )
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH 
	exceptSqlHH  )
)HH) *
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ 
(JJ 
NLogJJ "
.JJ" #
LogLevelJJ# +
.JJ+ ,
WarnJJ, 0
,JJ0 1
	exceptSqlJJ2 ;
,JJ; <
$strJJ= Y
)JJY Z
;JJZ [
}KK 
}LL 	
}MM 
publicRR 

staticRR 
voidRR 
GoodG2BSinkRR "
(RR" #

LinkedListRR# -
<RR- .
stringRR. 4
>RR4 5
dataLinkedListRR6 D
,RRE F
HttpRequestRRG R
reqRRS V
,RRV W
HttpResponseRRX d
respRRe i
)RRi j
{SS 
stringTT 
dataTT 
=TT 
dataLinkedListTT $
.TT$ %
LastTT% )
.TT) *
ValueTT* /
;TT/ 0
SqlConnectionUU 
dBConnectionUU "
=UU# $
IOUU% '
.UU' (
GetDBConnectionUU( 7
(UU7 8
)UU8 9
;UU9 :

SqlCommandVV 
preparedStatementVV $
=VV% &
nullVV' +
;VV+ ,
intWW 
idWW 
=WW 
$numWW 
;WW 
tryXX 
{YY 	
idZZ 
=ZZ 
intZZ 
.ZZ 
ParseZZ 
(ZZ 
dataZZ 
)ZZ  
;ZZ  !
}[[ 	
catch\\ 
(\\ 
FormatException\\ 
nfx\\ "
)\\" #
{]] 	
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ 
.^^ 
LogLevel^^ '
.^^' (
Warn^^( ,
,^^, -
nfx^^. 1
,^^1 2
$str^^3 W
)^^W X
;^^X Y
id__ 
=__ 
-__ 
$num__ 
;__ 
}`` 	
tryaa 
{bb 	
dBConnectioncc 
.cc 
Opencc 
(cc 
)cc 
;cc  
usingdd 
(dd 
preparedStatementdd $
=dd% &
newdd' *

SqlCommanddd+ 5
(dd5 6
nulldd6 :
,dd: ;
dBConnectiondd< H
)ddH I
)ddI J
{ee 
preparedStatementff !
.ff! "
CommandTextff" -
=ff. /
$strff0 V
;ffV W
SqlParametergg 
idParamgg $
=gg% &
newgg' *
SqlParametergg+ 7
(gg7 8
$strgg8 =
,gg= >
	SqlDbTypegg? H
.ggH I
IntggI L
,ggL M
$numggN O
)ggO P
;ggP Q
idParamhh 
.hh 
Valuehh 
=hh 
idhh  "
;hh" #
preparedStatementii !
.ii! "
ExecuteNonQueryii" 1
(ii1 2
)ii2 3
;ii3 4
}jj 
IOll 
.ll 
WriteStringll 
(ll 
$strll 7
+ll8 9
datall: >
+ll? @
$strllA E
)llE F
;llF G
}mm 	
catchnn 
(nn 
SqlExceptionnn 
	exceptSqlnn %
)nn% &
{oo 	
IOpp 
.pp 
Loggerpp 
.pp 
Logpp 
(pp 
NLogpp 
.pp 
LogLevelpp '
.pp' (
Warnpp( ,
,pp, -
	exceptSqlpp. 7
,pp7 8
$strpp9 P
)ppP Q
;ppQ R
}qq 	
finallyrr 
{ss 	
trytt 
{uu 
ifvv 
(vv 
dBConnectionvv  
!=vv! #
nullvv$ (
)vv( )
{ww 
dBConnectionxx  
.xx  !
Closexx! &
(xx& '
)xx' (
;xx( )
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
	exceptSql}}2 ;
,}}; <
$str}}= Y
)}}Y Z
;}}Z [
}~~ 
} 	
}
ÄÄ 
}ÇÇ 
}ÉÉ ¨
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_74a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_74a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $

Dictionary!! 
<!! 
int!! 
,!! 
string!! 
>!! 
dataDictionary!! -
=!!. /
new!!0 3

Dictionary!!4 >
<!!> ?
int!!? B
,!!B C
string!!C I
>!!I J
(!!J K
)!!K L
;!!L M
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $
dataDictionary## 
.## 
Add## 
(## 
$num## 
,## 
data## "
)##" #
;### $
dataDictionary$$ 
.$$ 
Add$$ 
($$ 
$num$$ 
,$$ 
data$$ "
)$$" #
;$$# $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_74b%% @
.%%@ A
BadSink%%A H
(%%H I
dataDictionary%%I W
,%%X Y
req%%Z ]
,%%] ^
resp%%_ c
)%%d e
;%%e f
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 

Dictionary44 
<44 
int44 
,44 
string44 
>44 
dataDictionary44 -
=44. /
new440 3

Dictionary444 >
<44> ?
int44? B
,44B C
string44C I
>44I J
(44J K
)44K L
;44L M
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $
dataDictionary66 
.66 
Add66 
(66 
$num66 
,66 
data66 "
)66" #
;66# $
dataDictionary77 
.77 
Add77 
(77 
$num77 
,77 
data77 "
)77" #
;77# $D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_74b88 @
.88@ A
GoodG2BSink88A L
(88L M
dataDictionary88M [
,88\ ]
req88^ a
,88a b
resp88c g
)88h i
;88i j
}99 
};; 
}<< öA
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_74b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_74b >
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{   
string!! 
data!! 
=!! 
dataDictionary!! $
[!!$ %
$num!!% &
]!!& '
;!!' (
SqlConnection"" 
dBConnection"" "
=""# $
IO""% '
.""' (
GetDBConnection""( 7
(""7 8
)""8 9
;""9 :

SqlCommand## 
preparedStatement## $
=##% &
null##' +
;##+ ,
int$$ 
id$$ 
=$$ 
$num$$ 
;$$ 
try%% 
{&& 	
id'' 
='' 
int'' 
.'' 
Parse'' 
('' 
data'' 
)''  
;''  !
}(( 	
catch)) 
()) 
FormatException)) 
nfx)) "
)))" #
{** 	
IO++ 
.++ 
Logger++ 
.++ 
Log++ 
(++ 
NLog++ 
.++ 
LogLevel++ '
.++' (
Warn++( ,
,++, -
nfx++. 1
,++1 2
$str++3 W
)++W X
;++X Y
id,, 
=,, 
-,, 
$num,, 
;,, 
}-- 	
try.. 
{// 	
dBConnection00 
.00 
Open00 
(00 
)00 
;00  
using11 
(11 
preparedStatement11 $
=11% &
new11' *

SqlCommand11+ 5
(115 6
null116 :
,11: ;
dBConnection11< H
)11H I
)11I J
{22 
preparedStatement33 !
.33! "
CommandText33" -
=33. /
$str330 V
;33V W
SqlParameter44 
idParam44 $
=44% &
new44' *
SqlParameter44+ 7
(447 8
$str448 =
,44= >
	SqlDbType44? H
.44H I
Int44I L
,44L M
$num44N O
)44O P
;44P Q
idParam55 
.55 
Value55 
=55 
id55  "
;55" #
preparedStatement66 !
.66! "
ExecuteNonQuery66" 1
(661 2
)662 3
;663 4
}77 
IO99 
.99 
WriteString99 
(99 
$str99 7
+998 9
data99: >
+99? @
$str99A E
)99E F
;99F G
}:: 	
catch;; 
(;; 
SqlException;; 
	exceptSql;; %
);;% &
{<< 	
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== 
.== 
LogLevel== '
.==' (
Warn==( ,
,==, -
	exceptSql==. 7
,==7 8
$str==9 P
)==P Q
;==Q R
}>> 	
finally?? 
{@@ 	
tryAA 
{BB 
ifCC 
(CC 
dBConnectionCC  
!=CC! #
nullCC$ (
)CC( )
{DD 
dBConnectionEE  
.EE  !
CloseEE! &
(EE& '
)EE' (
;EE( )
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH 
	exceptSqlHH  )
)HH) *
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ 
(JJ 
NLogJJ "
.JJ" #
LogLevelJJ# +
.JJ+ ,
WarnJJ, 0
,JJ0 1
	exceptSqlJJ2 ;
,JJ; <
$strJJ= Y
)JJY Z
;JJZ [
}KK 
}LL 	
}MM 
publicRR 

staticRR 
voidRR 
GoodG2BSinkRR "
(RR" #

DictionaryRR# -
<RR- .
intRR. 1
,RR1 2
stringRR2 8
>RR8 9
dataDictionaryRR: H
,RRI J
HttpRequestRRK V
reqRRW Z
,RRZ [
HttpResponseRR\ h
respRRi m
)RRm n
{SS 
stringTT 
dataTT 
=TT 
dataDictionaryTT $
[TT$ %
$numTT% &
]TT& '
;TT' (
SqlConnectionUU 
dBConnectionUU "
=UU# $
IOUU% '
.UU' (
GetDBConnectionUU( 7
(UU7 8
)UU8 9
;UU9 :

SqlCommandVV 
preparedStatementVV $
=VV% &
nullVV' +
;VV+ ,
intWW 
idWW 
=WW 
$numWW 
;WW 
tryXX 
{YY 	
idZZ 
=ZZ 
intZZ 
.ZZ 
ParseZZ 
(ZZ 
dataZZ 
)ZZ  
;ZZ  !
}[[ 	
catch\\ 
(\\ 
FormatException\\ 
nfx\\ "
)\\" #
{]] 	
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ 
.^^ 
LogLevel^^ '
.^^' (
Warn^^( ,
,^^, -
nfx^^. 1
,^^1 2
$str^^3 W
)^^W X
;^^X Y
id__ 
=__ 
-__ 
$num__ 
;__ 
}`` 	
tryaa 
{bb 	
dBConnectioncc 
.cc 
Opencc 
(cc 
)cc 
;cc  
usingdd 
(dd 
preparedStatementdd $
=dd% &
newdd' *

SqlCommanddd+ 5
(dd5 6
nulldd6 :
,dd: ;
dBConnectiondd< H
)ddH I
)ddI J
{ee 
preparedStatementff !
.ff! "
CommandTextff" -
=ff. /
$strff0 V
;ffV W
SqlParametergg 
idParamgg $
=gg% &
newgg' *
SqlParametergg+ 7
(gg7 8
$strgg8 =
,gg= >
	SqlDbTypegg? H
.ggH I
IntggI L
,ggL M
$numggN O
)ggO P
;ggP Q
idParamhh 
.hh 
Valuehh 
=hh 
idhh  "
;hh" #
preparedStatementii !
.ii! "
ExecuteNonQueryii" 1
(ii1 2
)ii2 3
;ii3 4
}jj 
IOll 
.ll 
WriteStringll 
(ll 
$strll 7
+ll8 9
datall: >
+ll? @
$strllA E
)llE F
;llF G
}mm 	
catchnn 
(nn 
SqlExceptionnn 
	exceptSqlnn %
)nn% &
{oo 	
IOpp 
.pp 
Loggerpp 
.pp 
Logpp 
(pp 
NLogpp 
.pp 
LogLevelpp '
.pp' (
Warnpp( ,
,pp, -
	exceptSqlpp. 7
,pp7 8
$strpp9 P
)ppP Q
;ppQ R
}qq 	
finallyrr 
{ss 	
trytt 
{uu 
ifvv 
(vv 
dBConnectionvv  
!=vv! #
nullvv$ (
)vv( )
{ww 
dBConnectionxx  
.xx  !
Closexx! &
(xx& '
)xx' (
;xx( )
}yy 
}zz 
catch{{ 
({{ 
SqlException{{ 
	exceptSql{{  )
){{) *
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
	exceptSql}}2 ;
,}}; <
$str}}= Y
)}}Y Z
;}}Z [
}~~ 
} 	
}
ÄÄ 
}ÇÇ 
}ÉÉ »$
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_75a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_75a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" "
)""" #
;""# $
byte$$ 
[$$ 
]$$ 
dataSerialized$$ 
=$$ 
null$$  $
;$$$ %
try%% 
{&& 	
BinaryFormatter'' 
bf'' 
=''  
new''! $
BinaryFormatter''% 4
(''4 5
)''5 6
;''6 7
using(( 
((( 
var(( 
ms(( 
=(( 
new(( 
MemoryStream((  ,
(((, -
)((- .
)((. /
{)) 
bf** 
.** 
	Serialize** 
(** 
ms** 
,**  
data**! %
)**% &
;**& '
dataSerialized++ 
=++  
ms++! #
.++# $
ToArray++$ +
(+++ ,
)++, -
;++- .
},, D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_75b-- D
.--D E
BadSink--E L
(--L M
dataSerialized--M [
,--\ ]
req--^ a
,--a b
resp--c g
)--h i
;--i j
}.. 	
catch// 
(// "
SerializationException// %
exceptSerialize//& 5
)//5 6
{00 	
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 
.11 
LogLevel11 '
.11' (
Warn11( ,
,11, -
$str11. X
,11X Y
exceptSerialize11Z i
)11i j
;11j k
}22 	
}33 
public66 

override66 
void66 
Good66 
(66 
HttpRequest66 )
req66* -
,66- .
HttpResponse66/ ;
resp66< @
)66@ A
{77 
GoodG2B88 
(88 
req88 
,88 
resp88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
HttpRequest<<  +
req<<, /
,<</ 0
HttpResponse<<1 =
resp<<> B
)<<B C
{== 
string>> 
data>> 
;>> 
data@@ 
=@@ 
$str@@ 
;@@ 
byteBB 
[BB 
]BB 
dataSerializedBB 
=BB 
nullBB  $
;BB$ %
tryCC 
{DD 	
BinaryFormatterEE 
bfEE 
=EE  
newEE! $
BinaryFormatterEE% 4
(EE4 5
)EE5 6
;EE6 7
usingFF 
(FF 
varFF 
msFF 
=FF 
newFF 
MemoryStreamFF  ,
(FF, -
)FF- .
)FF. /
{GG 
bfHH 
.HH 
	SerializeHH 
(HH 
msHH 
,HH  
dataHH! %
)HH% &
;HH& '
dataSerializedII 
=II  
msII! #
.II# $
ToArrayII$ +
(II+ ,
)II, -
;II- .
}JJ D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_75bKK D
.KKD E
GoodG2BSinkKKE P
(KKP Q
dataSerializedKKQ _
,KK` a
reqKKb e
,KKe f
respKKg k
)KKl m
;KKm n
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. X
,OOX Y
exceptSerializeOOZ i
)OOi j
;OOj k
}PP 	
}QQ 
}SS 
}TT äX
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_75b.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_75b >
{ 
public!! 

static!! 
void!! 
BadSink!! 
(!! 
byte!! #
[!!# $
]!!$ %
dataSerialized!!& 4
,!!5 6
HttpRequest!!7 B
req!!C F
,!!F G
HttpResponse!!H T
resp!!U Y
)!!Y Z
{"" 
try## 
{$$ 	
string%% 
data%% 
;%% 
var&& 
binForm&& 
=&& 
new&& 
BinaryFormatter&& -
(&&- .
)&&. /
;&&/ 0
using'' 
('' 
var'' 
	memStream''  
=''! "
new''# &
MemoryStream''' 3
(''3 4
)''4 5
)''5 6
{(( 
	memStream)) 
.)) 
Write)) 
())  
dataSerialized))  .
,)). /
$num))0 1
,))1 2
dataSerialized))3 A
.))A B
Length))B H
)))H I
;))I J
	memStream** 
.** 
Seek** 
(** 
$num**  
,**  !

SeekOrigin**" ,
.**, -
Begin**- 2
)**2 3
;**3 4
data++ 
=++ 
(++ 
string++ 
)++ 
binForm++ &
.++& '
Deserialize++' 2
(++2 3
	memStream++3 <
)++< =
;++= >
},, 
SqlConnection-- 
dBConnection-- &
=--' (
IO--) +
.--+ ,
GetDBConnection--, ;
(--; <
)--< =
;--= >

SqlCommand.. 
preparedStatement.. (
=..) *
null..+ /
;../ 0
int// 
id// 
=// 
$num// 
;// 
try00 
{11 
id22 
=22 
int22 
.22 
Parse22 
(22 
data22 #
)22# $
;22$ %
}33 
catch44 
(44 
FormatException44 "
nfx44# &
)44& '
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
nfx662 5
,665 6
$str667 [
)66[ \
;66\ ]
id77 
=77 
-77 
$num77 
;77 
}88 
try99 
{:: 
dBConnection;; 
.;; 
Open;; !
(;;! "
);;" #
;;;# $
using<< 
(<< 
preparedStatement<< (
=<<) *
new<<+ .

SqlCommand<</ 9
(<<9 :
null<<: >
,<<> ?
dBConnection<<@ L
)<<L M
)<<M N
{== 
preparedStatement>> %
.>>% &
CommandText>>& 1
=>>2 3
$str>>4 Z
;>>Z [
SqlParameter??  
idParam??! (
=??) *
new??+ .
SqlParameter??/ ;
(??; <
$str??< A
,??A B
	SqlDbType??C L
.??L M
Int??M P
,??P Q
$num??R S
)??S T
;??T U
idParam@@ 
.@@ 
Value@@ !
=@@" #
id@@$ &
;@@& '
preparedStatementAA %
.AA% &
ExecuteNonQueryAA& 5
(AA5 6
)AA6 7
;AA7 8
}BB 
IODD 
.DD 
WriteStringDD 
(DD 
$strDD ;
+DD< =
dataDD> B
+DDC D
$strDDE I
)DDI J
;DDJ K
}EE 
catchFF 
(FF 
SqlExceptionFF 
	exceptSqlFF  )
)FF) *
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
	exceptSqlHH2 ;
,HH; <
$strHH= T
)HHT U
;HHU V
}II 
finallyJJ 
{KK 
tryLL 
{MM 
ifNN 
(NN 
dBConnectionNN $
!=NN% '
nullNN( ,
)NN, -
{OO 
dBConnectionPP $
.PP$ %
ClosePP% *
(PP* +
)PP+ ,
;PP, -
}QQ 
}RR 
catchSS 
(SS 
SqlExceptionSS #
	exceptSqlSS$ -
)SS- .
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
	exceptSqlUU6 ?
,UU? @
$strUUA ]
)UU] ^
;UU^ _
}VV 
}WW 
}XX 	
catchYY 
(YY "
SerializationExceptionYY %
exceptSerializeYY& 5
)YY5 6
{ZZ 	
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ 
([[ 
NLog[[ 
.[[ 
LogLevel[[ '
.[[' (
Warn[[( ,
,[[, -
$str[[. Y
,[[Y Z
exceptSerialize[[[ j
)[[j k
;[[k l
}\\ 	
}]] 
publicbb 

staticbb 
voidbb 
GoodG2BSinkbb "
(bb" #
bytebb# '
[bb' (
]bb( )
dataSerializedbb* 8
,bb9 :
HttpRequestbb; F
reqbbG J
,bbJ K
HttpResponsebbL X
respbbY ]
)bb] ^
{cc 
trydd 
{ee 	
stringff 
dataff 
;ff 
vargg 
binFormgg 
=gg 
newgg 
BinaryFormattergg -
(gg- .
)gg. /
;gg/ 0
usinghh 
(hh 
varhh 
	memStreamhh  
=hh! "
newhh# &
MemoryStreamhh' 3
(hh3 4
)hh4 5
)hh5 6
{ii 
	memStreamjj 
.jj 
Writejj 
(jj  
dataSerializedjj  .
,jj. /
$numjj0 1
,jj1 2
dataSerializedjj3 A
.jjA B
LengthjjB H
)jjH I
;jjI J
	memStreamkk 
.kk 
Seekkk 
(kk 
$numkk  
,kk  !

SeekOriginkk" ,
.kk, -
Beginkk- 2
)kk2 3
;kk3 4
datall 
=ll 
(ll 
stringll 
)ll 
binFormll &
.ll& '
Deserializell' 2
(ll2 3
	memStreamll3 <
)ll< =
;ll= >
}mm 
SqlConnectionnn 
dBConnectionnn &
=nn' (
IOnn) +
.nn+ ,
GetDBConnectionnn, ;
(nn; <
)nn< =
;nn= >

SqlCommandoo 
preparedStatementoo (
=oo) *
nulloo+ /
;oo/ 0
intpp 
idpp 
=pp 
$numpp 
;pp 
tryqq 
{rr 
idss 
=ss 
intss 
.ss 
Parsess 
(ss 
datass #
)ss# $
;ss$ %
}tt 
catchuu 
(uu 
FormatExceptionuu "
nfxuu# &
)uu& '
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
nfxww2 5
,ww5 6
$strww7 [
)ww[ \
;ww\ ]
idxx 
=xx 
-xx 
$numxx 
;xx 
}yy 
tryzz 
{{{ 
dBConnection|| 
.|| 
Open|| !
(||! "
)||" #
;||# $
using}} 
(}} 
preparedStatement}} (
=}}) *
new}}+ .

SqlCommand}}/ 9
(}}9 :
null}}: >
,}}> ?
dBConnection}}@ L
)}}L M
)}}M N
{~~ 
preparedStatement %
.% &
CommandText& 1
=2 3
$str4 Z
;Z [
SqlParameter
ÄÄ  
idParam
ÄÄ! (
=
ÄÄ) *
new
ÄÄ+ .
SqlParameter
ÄÄ/ ;
(
ÄÄ; <
$str
ÄÄ< A
,
ÄÄA B
	SqlDbType
ÄÄC L
.
ÄÄL M
Int
ÄÄM P
,
ÄÄP Q
$num
ÄÄR S
)
ÄÄS T
;
ÄÄT U
idParam
ÅÅ 
.
ÅÅ 
Value
ÅÅ !
=
ÅÅ" #
id
ÅÅ$ &
;
ÅÅ& '
preparedStatement
ÇÇ %
.
ÇÇ% &
ExecuteNonQuery
ÇÇ& 5
(
ÇÇ5 6
)
ÇÇ6 7
;
ÇÇ7 8
}
ÉÉ 
IO
ÖÖ 
.
ÖÖ 
WriteString
ÖÖ 
(
ÖÖ 
$str
ÖÖ ;
+
ÖÖ< =
data
ÖÖ> B
+
ÖÖC D
$str
ÖÖE I
)
ÖÖI J
;
ÖÖJ K
}
ÜÜ 
catch
áá 
(
áá 
SqlException
áá 
	exceptSql
áá  )
)
áá) *
{
àà 
IO
ââ 
.
ââ 
Logger
ââ 
.
ââ 
Log
ââ 
(
ââ 
NLog
ââ "
.
ââ" #
LogLevel
ââ# +
.
ââ+ ,
Warn
ââ, 0
,
ââ0 1
	exceptSql
ââ2 ;
,
ââ; <
$str
ââ= T
)
ââT U
;
ââU V
}
ää 
finally
ãã 
{
åå 
try
çç 
{
éé 
if
èè 
(
èè 
dBConnection
èè $
!=
èè% '
null
èè( ,
)
èè, -
{
êê 
dBConnection
ëë $
.
ëë$ %
Close
ëë% *
(
ëë* +
)
ëë+ ,
;
ëë, -
}
íí 
}
ìì 
catch
îî 
(
îî 
SqlException
îî #
	exceptSql
îî$ -
)
îî- .
{
ïï 
IO
ññ 
.
ññ 
Logger
ññ 
.
ññ 
Log
ññ !
(
ññ! "
NLog
ññ" &
.
ññ& '
LogLevel
ññ' /
.
ññ/ 0
Warn
ññ0 4
,
ññ4 5
	exceptSql
ññ6 ?
,
ññ? @
$str
ññA ]
)
ññ] ^
;
ññ^ _
}
óó 
}
òò 
}
ôô 	
catch
öö 
(
öö $
SerializationException
öö %
exceptSerialize
öö& 5
)
öö5 6
{
õõ 	
IO
úú 
.
úú 
Logger
úú 
.
úú 
Log
úú 
(
úú 
NLog
úú 
.
úú 
LogLevel
úú '
.
úú' (
Warn
úú( ,
,
úú, -
$str
úú. Y
,
úúY Z
exceptSerialize
úú[ j
)
úúj k
;
úúk l
}
ùù 	
}
ûû 
}†† 
}°° Ç
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81a.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class D
8CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81a >
:? @
AbstractTestCaseWebA T
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
; 
data   
=   
req   
.   
Params   
.   
Get   
(   
$str   "
)  " #
;  # $H
<CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_base!! D

baseObject!!E O
=!!P Q
new!!R UH
;CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_bad	!!V ë
(
!!ë í
)
!!í ì
;
!!ì î

baseObject"" 
."" 
Action"" 
("" 
data"" 
,""  
req""! $
,""$ %
resp""& *
)""* +
;""+ ,
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
HttpRequest&& )
req&&* -
,&&- .
HttpResponse&&/ ;
resp&&< @
)&&@ A
{'' 
GoodG2B(( 
((( 
req(( 
,(( 
resp(( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
HttpRequest,, $
req,,% (
,,,( )
HttpResponse,,* 6
resp,,7 ;
),,; <
{-- 
string.. 
data.. 
;.. 
data00 
=00 
$str00 
;00 H
<CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_base11 D

baseObject11E O
=11P Q
new11R UL
?CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_goodG2B	11V ï
(
11ï ñ
)
11ñ ó
;
11ó ò

baseObject22 
.22 
Action22 
(22 
data22 
,22  
req22! $
,22$ %
resp22& *
)22* +
;22+ ,
}33 
}55 
}66 ü!
…C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_bad.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class G
;CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_bad A
:B CI
<CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_base	D Ä
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{   
SqlConnection!! 
dBConnection!! "
=!!# $
IO!!% '
.!!' (
GetDBConnection!!( 7
(!!7 8
)!!8 9
;!!9 :

SqlCommand"" 
preparedStatement"" $
=""% &
null""' +
;""+ ,
int## 
id## 
=## 
$num## 
;## 
try$$ 
{%% 	
id&& 
=&& 
int&& 
.&& 
Parse&& 
(&& 
data&& 
)&&  
;&&  !
}'' 	
catch(( 
((( 
FormatException(( 
nfx(( "
)((" #
{)) 	
IO** 
.** 
Logger** 
.** 
Log** 
(** 
NLog** 
.** 
LogLevel** '
.**' (
Warn**( ,
,**, -
nfx**. 1
,**1 2
$str**3 W
)**W X
;**X Y
id++ 
=++ 
-++ 
$num++ 
;++ 
},, 	
try-- 
{.. 	
dBConnection// 
.// 
Open// 
(// 
)// 
;//  
using00 
(00 
preparedStatement00 $
=00% &
new00' *

SqlCommand00+ 5
(005 6
null006 :
,00: ;
dBConnection00< H
)00H I
)00I J
{11 
preparedStatement22 !
.22! "
CommandText22" -
=22. /
$str220 V
;22V W
SqlParameter33 
idParam33 $
=33% &
new33' *
SqlParameter33+ 7
(337 8
$str338 =
,33= >
	SqlDbType33? H
.33H I
Int33I L
,33L M
$num33N O
)33O P
;33P Q
idParam44 
.44 
Value44 
=44 
id44  "
;44" #
preparedStatement55 !
.55! "
ExecuteNonQuery55" 1
(551 2
)552 3
;553 4
}66 
IO88 
.88 
WriteString88 
(88 
$str88 7
+888 9
data88: >
+88? @
$str88A E
)88E F
;88F G
}99 	
catch:: 
(:: 
SqlException:: 
	exceptSql:: %
)::% &
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
	exceptSql<<. 7
,<<7 8
$str<<9 P
)<<P Q
;<<Q R
}== 	
finally>> 
{?? 	
try@@ 
{AA 
ifBB 
(BB 
dBConnectionBB  
!=BB! #
nullBB$ (
)BB( )
{CC 
dBConnectionDD  
.DD  !
CloseDD! &
(DD& '
)DD' (
;DD( )
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
	exceptSqlII2 ;
,II; <
$strII= Y
)IIY Z
;IIZ [
}JJ 
}KK 	
}LL 
}MM 
}NN Å
 C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_base.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
abstract 
class	 H
<CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_base K
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ß!
ÕC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_goodG2B.cs
	namespace 	
	testcases
 
. ;
/CWE566_Authorization_Bypass_Through_SQL_Primary C
{ 
class K
?CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_goodG2B E
:F GI
<CWE566_Authorization_Bypass_Through_SQL_Primary__Web_81_base	H Ñ
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{   
SqlConnection!! 
dBConnection!! "
=!!# $
IO!!% '
.!!' (
GetDBConnection!!( 7
(!!7 8
)!!8 9
;!!9 :

SqlCommand"" 
preparedStatement"" $
=""% &
null""' +
;""+ ,
int## 
id## 
=## 
$num## 
;## 
try$$ 
{%% 	
id&& 
=&& 
int&& 
.&& 
Parse&& 
(&& 
data&& 
)&&  
;&&  !
}'' 	
catch(( 
((( 
FormatException(( 
nfx(( "
)((" #
{)) 	
IO** 
.** 
Logger** 
.** 
Log** 
(** 
NLog** 
.** 
LogLevel** '
.**' (
Warn**( ,
,**, -
nfx**. 1
,**1 2
$str**3 W
)**W X
;**X Y
id++ 
=++ 
-++ 
$num++ 
;++ 
},, 	
try-- 
{.. 	
dBConnection// 
.// 
Open// 
(// 
)// 
;//  
using00 
(00 
preparedStatement00 $
=00% &
new00' *

SqlCommand00+ 5
(005 6
null006 :
,00: ;
dBConnection00< H
)00H I
)00I J
{11 
preparedStatement22 !
.22! "
CommandText22" -
=22. /
$str220 V
;22V W
SqlParameter33 
idParam33 $
=33% &
new33' *
SqlParameter33+ 7
(337 8
$str338 =
,33= >
	SqlDbType33? H
.33H I
Int33I L
,33L M
$num33N O
)33O P
;33P Q
idParam44 
.44 
Value44 
=44 
id44  "
;44" #
preparedStatement55 !
.55! "
ExecuteNonQuery55" 1
(551 2
)552 3
;553 4
}66 
IO88 
.88 
WriteString88 
(88 
$str88 7
+888 9
data88: >
+88? @
$str88A E
)88E F
;88F G
}99 	
catch:: 
(:: 
SqlException:: 
	exceptSql:: %
)::% &
{;; 	
IO<< 
.<< 
Logger<< 
.<< 
Log<< 
(<< 
NLog<< 
.<< 
LogLevel<< '
.<<' (
Warn<<( ,
,<<, -
	exceptSql<<. 7
,<<7 8
$str<<9 P
)<<P Q
;<<Q R
}== 	
finally>> 
{?? 	
try@@ 
{AA 
ifBB 
(BB 
dBConnectionBB  
!=BB! #
nullBB$ (
)BB( )
{CC 
dBConnectionDD  
.DD  !
CloseDD! &
(DD& '
)DD' (
;DD( )
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
	exceptSqlII2 ;
,II; <
$strII= Y
)IIY Z
;IIZ [
}JJ 
}KK 	
}LL 
}MM 
}NN ê)
ïC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\Program.cs
	namespace		 	
	testcases		
 
.		 ;
/CWE566_Authorization_Bypass_Through_SQL_Primary		 C
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
}__ 
privateaa 
staticaa	 
voidaa 
RunTestCWE4aa  
(aa  !
)aa! "
{aa# $
}ee 
privategg 
staticgg	 
voidgg 
RunTestCWE5gg  
(gg  !
)gg! "
{gg# $
}kk 
privatemm 
staticmm	 
voidmm 
RunTestCWE6mm  
(mm  !
)mm! "
{mm# $
}qq 
privatess 
staticss	 
voidss 
RunTestCWE7ss  
(ss  !
)ss! "
{ss# $
}ww 
privateyy 
staticyy	 
voidyy 
RunTestCWE8yy  
(yy  !
)yy! "
{yy# $
}}} 
private 
static	 
void 
RunTestCWE9  
(  !
)! "
{# $
}
ÉÉ 
}ÑÑ 
}ÖÖ —
•C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE566_Authorization_Bypass_Through_SQL_Primary\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str J
)J K
]K L
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str L
)L M
]M N
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *