Â
ÅC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__if_without_braces_multiline_01.cs
	namespace		 	
	testcases		
 
.		 /
#CWE483_Incorrect_Block_Delimitation		 7
{

 
class 	O
CCWE483_Incorrect_Block_Delimitation__if_without_braces_multiline_01
 M
:N O
AbstractTestCaseP `
{ 
public 
override 
void 
Bad  
(  !
)! "
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if 
( 
x 
== 
$num 
) 
IO 
. 
	WriteLine 
( 
$str %
)% &
;& '
y 
= 
$num 	
;	 

if 
( 
y 
== 
$num 
) 
{ 
IO 
. 
	WriteLine 
( 
$str &
)& '
;' (
} 
} 	
private"" 
void"" 
Good1"" 
("" 
)"" 
{## 	
int$$ 
x$$ 
,$$ 
y$$ 
;$$ 
x&& 
=&& 
(&& 
new&& 
Random&& 
(&& 
)&& 
)&& 
.&& 
Next&& #
(&&# $
$num&&$ %
)&&% &
;&&& '
y'' 
='' 
$num'' 
;'' 
if** 
(** 
x** 
==** 
$num** 
)** 
{++ 
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, %
),,% &
;,,& '
y-- 
=-- 
$num-- 
;-- 
}.. 
if00 
(00 
y00 
==00 
$num00 
)00 
{11 
IO22 
.22 
	WriteLine22 
(22 
$str22 &
)22& '
;22' (
}33 
}44 	
public66 
override66 
void66 
Good66 !
(66! "
)66" #
{77 	
Good188 
(88 
)88 
;88 
}99 	
};; 
}<< Æ
ÇC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__if_without_braces_single_line_01.cs
	namespace		 	
	testcases		
 
.		 /
#CWE483_Incorrect_Block_Delimitation		 7
{

 
class 	Q
ECWE483_Incorrect_Block_Delimitation__if_without_braces_single_line_01
 O
:P Q
AbstractTestCaseR b
{ 
public 
override 
void 
Bad  
(  !
)! "
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if 
( 
x 
== 
$num 
) 
IO 
. 
	WriteLine $
($ %
$str% -
)- .
;. /
y0 1
=2 3
$num4 5
;5 6
if 
( 
y 
== 
$num 
) 
{ 
IO 
. 
	WriteLine 
( 
$str &
)& '
;' (
} 
} 	
private   
void   
Good1   
(   
)   
{!! 	
int"" 
x"" 
,"" 
y"" 
;"" 
x$$ 
=$$ 
($$ 
new$$ 
Random$$ 
($$ 
)$$ 
)$$ 
.$$ 
Next$$ #
($$# $
$num$$$ %
)$$% &
;$$& '
y%% 
=%% 
$num%% 
;%% 
if(( 
((( 
x(( 
==(( 
$num(( 
)(( 
{)) 
IO** 
.** 
	WriteLine** 
(** 
$str** %
)**% &
;**& '
y**( )
=*** +
$num**, -
;**- .
}++ 
if-- 
(-- 
y-- 
==-- 
$num-- 
)-- 
{.. 
IO// 
.// 
	WriteLine// 
(// 
$str// &
)//& '
;//' (
}00 
}11 	
public33 
override33 
void33 
Good33 !
(33! "
)33" #
{44 	
Good155 
(55 
)55 
;55 
}66 	
}88 
}99 Ç
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_01.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_01 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
x 
, 
y 
; 
x 	
=
 
( 
new 
Random 
( 
) 
) 
. 
Next 
(  
$num  !
)! "
;" #
y 	
=
 
$num 
; 
if 

( 
x 
== 
$num 
) 
; 
{ 	
IO   
.   
	WriteLine   
(   
$str   !
)  ! "
;  " #
y!! 
=!! 
$num!! 
;!! 
}"" 	
IO## 

.##
 
	WriteLine## 
(## 
y## 
)## 
;## 
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
Good1)) 
()) 
))) 
;)) 
}** 
private,, 
void,, 
Good1,, 
(,, 
),, 
{-- 
int.. 
x.. 
,.. 
y.. 
;.. 
x// 	
=//
 
(// 
new// 
Random// 
(// 
)// 
)// 
.// 
Next// 
(//  
$num//  !
)//! "
;//" #
y00 	
=00
 
$num00 
;00 
if22 

(22 
x22 
==22 
$num22 
)22 
{33 	
IO44 
.44 
	WriteLine44 
(44 
$str44 !
)44! "
;44" #
y55 
=55 
$num55 
;55 
}66 	
IO77 

.77
 
	WriteLine77 
(77 
y77 
)77 
;77 
}88 
}:: 
};; Ë
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_02.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_02 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
true 
) 
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
false-- 
)-- 
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
int44 
x44 
,44 
y44 
;44 
x55 
=55 
(55 
new55 
Random55 
(55 
)55 
)55 
.55 
Next55 #
(55# $
$num55$ %
)55% &
;55& '
y66 
=66 
$num66 
;66 
if88 
(88 
x88 
==88 
$num88 
)88 
{99 
IO:: 
.:: 
	WriteLine:: 
(:: 
$str:: %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
}<< 
IO== 
.== 
	WriteLine== 
(== 
y== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
trueDD 
)DD 
{EE 	
intFF 
xFF 
,FF 
yFF 
;FF 
xGG 
=GG 
(GG 
newGG 
RandomGG 
(GG 
)GG 
)GG 
.GG 
NextGG #
(GG# $
$numGG$ %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
xJJ 
==JJ 
$numJJ 
)JJ 
{KK 
IOLL 
.LL 
	WriteLineLL 
(LL 
$strLL %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
}NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
yOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
Good1UU 
(UU 
)UU 
;UU 
Good2VV 
(VV 
)VV 
;VV 
}WW 
}YY 
}ZZ °
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_03.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_03 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
$num 
== 
$num 
) 
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
$num-- 
!=-- 
$num-- 
)-- 
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
int44 
x44 
,44 
y44 
;44 
x55 
=55 
(55 
new55 
Random55 
(55 
)55 
)55 
.55 
Next55 #
(55# $
$num55$ %
)55% &
;55& '
y66 
=66 
$num66 
;66 
if88 
(88 
x88 
==88 
$num88 
)88 
{99 
IO:: 
.:: 
	WriteLine:: 
(:: 
$str:: %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
}<< 
IO== 
.== 
	WriteLine== 
(== 
y== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
$numDD 
==DD 
$numDD 
)DD 
{EE 	
intFF 
xFF 
,FF 
yFF 
;FF 
xGG 
=GG 
(GG 
newGG 
RandomGG 
(GG 
)GG 
)GG 
.GG 
NextGG #
(GG# $
$numGG$ %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
xJJ 
==JJ 
$numJJ 
)JJ 
{KK 
IOLL 
.LL 
	WriteLineLL 
(LL 
$strLL %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
}NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
yOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
Good1UU 
(UU 
)UU 
;UU 
Good2VV 
(VV 
)VV 
;VV 
}WW 
}YY 
}ZZ !
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_04.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_04 7
:8 9
AbstractTestCase: J
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public 

override 
void 
Bad 
( 
) 
{ 
if   

(   
PRIVATE_CONST_TRUE   
)   
{!! 	
int"" 
x"" 
,"" 
y"" 
;"" 
x## 
=## 
(## 
new## 
Random## 
(## 
)## 
)## 
.## 
Next## #
(### $
$num##$ %
)##% &
;##& '
y$$ 
=$$ 
$num$$ 
;$$ 
if&& 
(&& 
x&& 
==&& 
$num&& 
)&& 
;&& 
{'' 
IO(( 
.(( 
	WriteLine(( 
((( 
$str(( %
)((% &
;((& '
y)) 
=)) 
$num)) 
;)) 
}** 
IO++ 
.++ 
	WriteLine++ 
(++ 
y++ 
)++ 
;++ 
},, 	
}-- 
private11 
void11 
Good111 
(11 
)11 
{22 
if33 

(33 
PRIVATE_CONST_FALSE33 
)33  
{44 	
IO66 
.66 
	WriteLine66 
(66 
$str66 /
)66/ 0
;660 1
}77 	
else88 
{99 	
int:: 
x:: 
,:: 
y:: 
;:: 
x;; 
=;; 
(;; 
new;; 
Random;; 
(;; 
);; 
);; 
.;; 
Next;; #
(;;# $
$num;;$ %
);;% &
;;;& '
y<< 
=<< 
$num<< 
;<< 
if>> 
(>> 
x>> 
==>> 
$num>> 
)>> 
{?? 
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
$str@@ %
)@@% &
;@@& '
yAA 
=AA 
$numAA 
;AA 
}BB 
IOCC 
.CC 
	WriteLineCC 
(CC 
yCC 
)CC 
;CC 
}DD 	
}EE 
privateHH 
voidHH 
Good2HH 
(HH 
)HH 
{II 
ifJJ 

(JJ 
PRIVATE_CONST_TRUEJJ 
)JJ 
{KK 	
intLL 
xLL 
,LL 
yLL 
;LL 
xMM 
=MM 
(MM 
newMM 
RandomMM 
(MM 
)MM 
)MM 
.MM 
NextMM #
(MM# $
$numMM$ %
)MM% &
;MM& '
yNN 
=NN 
$numNN 
;NN 
ifPP 
(PP 
xPP 
==PP 
$numPP 
)PP 
{QQ 
IORR 
.RR 
	WriteLineRR 
(RR 
$strRR %
)RR% &
;RR& '
ySS 
=SS 
$numSS 
;SS 
}TT 
IOUU 
.UU 
	WriteLineUU 
(UU 
yUU 
)UU 
;UU 
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
Good1[[ 
([[ 
)[[ 
;[[ 
Good2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Â 
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_05.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_05 7
:8 9
AbstractTestCase: J
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public 

override 
void 
Bad 
( 
) 
{ 
if   

(   
privateTrue   
)   
{!! 	
int"" 
x"" 
,"" 
y"" 
;"" 
x## 
=## 
(## 
new## 
Random## 
(## 
)## 
)## 
.## 
Next## #
(### $
$num##$ %
)##% &
;##& '
y$$ 
=$$ 
$num$$ 
;$$ 
if&& 
(&& 
x&& 
==&& 
$num&& 
)&& 
;&& 
{'' 
IO(( 
.(( 
	WriteLine(( 
((( 
$str(( %
)((% &
;((& '
y)) 
=)) 
$num)) 
;)) 
}** 
IO++ 
.++ 
	WriteLine++ 
(++ 
y++ 
)++ 
;++ 
},, 	
}-- 
private11 
void11 
Good111 
(11 
)11 
{22 
if33 

(33 
privateFalse33 
)33 
{44 	
IO66 
.66 
	WriteLine66 
(66 
$str66 /
)66/ 0
;660 1
}77 	
else88 
{99 	
int:: 
x:: 
,:: 
y:: 
;:: 
x;; 
=;; 
(;; 
new;; 
Random;; 
(;; 
);; 
);; 
.;; 
Next;; #
(;;# $
$num;;$ %
);;% &
;;;& '
y<< 
=<< 
$num<< 
;<< 
if>> 
(>> 
x>> 
==>> 
$num>> 
)>> 
{?? 
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
$str@@ %
)@@% &
;@@& '
yAA 
=AA 
$numAA 
;AA 
}BB 
IOCC 
.CC 
	WriteLineCC 
(CC 
yCC 
)CC 
;CC 
}DD 	
}EE 
privateHH 
voidHH 
Good2HH 
(HH 
)HH 
{II 
ifJJ 

(JJ 
privateTrueJJ 
)JJ 
{KK 	
intLL 
xLL 
,LL 
yLL 
;LL 
xMM 
=MM 
(MM 
newMM 
RandomMM 
(MM 
)MM 
)MM 
.MM 
NextMM #
(MM# $
$numMM$ %
)MM% &
;MM& '
yNN 
=NN 
$numNN 
;NN 
ifPP 
(PP 
xPP 
==PP 
$numPP 
)PP 
{QQ 
IORR 
.RR 
	WriteLineRR 
(RR 
$strRR %
)RR% &
;RR& '
ySS 
=SS 
$numSS 
;SS 
}TT 
IOUU 
.UU 
	WriteLineUU 
(UU 
yUU 
)UU 
;UU 
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
Good1[[ 
([[ 
)[[ 
;[[ 
Good2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ã 
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_06.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_06 7
:8 9
AbstractTestCase: J
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
PRIVATE_CONST_FIVE 
== !
$num" #
)# $
{   	
int!! 
x!! 
,!! 
y!! 
;!! 
x"" 
="" 
("" 
new"" 
Random"" 
("" 
)"" 
)"" 
."" 
Next"" #
(""# $
$num""$ %
)""% &
;""& '
y## 
=## 
$num## 
;## 
if%% 
(%% 
x%% 
==%% 
$num%% 
)%% 
;%% 
{&& 
IO'' 
.'' 
	WriteLine'' 
('' 
$str'' %
)''% &
;''& '
y(( 
=(( 
$num(( 
;(( 
})) 
IO** 
.** 
	WriteLine** 
(** 
y** 
)** 
;** 
}++ 	
},, 
private00 
void00 
Good100 
(00 
)00 
{11 
if22 

(22 
PRIVATE_CONST_FIVE22 
!=22 !
$num22" #
)22# $
{33 	
IO55 
.55 
	WriteLine55 
(55 
$str55 /
)55/ 0
;550 1
}66 	
else77 
{88 	
int99 
x99 
,99 
y99 
;99 
x:: 
=:: 
(:: 
new:: 
Random:: 
(:: 
):: 
):: 
.:: 
Next:: #
(::# $
$num::$ %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
if== 
(== 
x== 
==== 
$num== 
)== 
{>> 
IO?? 
.?? 
	WriteLine?? 
(?? 
$str?? %
)??% &
;??& '
y@@ 
=@@ 
$num@@ 
;@@ 
}AA 
IOBB 
.BB 
	WriteLineBB 
(BB 
yBB 
)BB 
;BB 
}CC 	
}DD 
privateGG 
voidGG 
Good2GG 
(GG 
)GG 
{HH 
ifII 

(II 
PRIVATE_CONST_FIVEII 
==II !
$numII" #
)II# $
{JJ 	
intKK 
xKK 
,KK 
yKK 
;KK 
xLL 
=LL 
(LL 
newLL 
RandomLL 
(LL 
)LL 
)LL 
.LL 
NextLL #
(LL# $
$numLL$ %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
ifOO 
(OO 
xOO 
==OO 
$numOO 
)OO 
{PP 
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
$strQQ %
)QQ% &
;QQ& '
yRR 
=RR 
$numRR 
;RR 
}SS 
IOTT 
.TT 
	WriteLineTT 
(TT 
yTT 
)TT 
;TT 
}UU 	
}VV 
publicXX 

overrideXX 
voidXX 
GoodXX 
(XX 
)XX 
{YY 
Good1ZZ 
(ZZ 
)ZZ 
;ZZ 
Good2[[ 
([[ 
)[[ 
;[[ 
}\\ 
}^^ 
}__ ´ 
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_07.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_07 7
:8 9
AbstractTestCase: J
{ 
private 
int 
privateFive 
= 
$num 
;  
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
privateFive 
== 
$num 
) 
{   	
int!! 
x!! 
,!! 
y!! 
;!! 
x"" 
="" 
("" 
new"" 
Random"" 
("" 
)"" 
)"" 
."" 
Next"" #
(""# $
$num""$ %
)""% &
;""& '
y## 
=## 
$num## 
;## 
if%% 
(%% 
x%% 
==%% 
$num%% 
)%% 
;%% 
{&& 
IO'' 
.'' 
	WriteLine'' 
('' 
$str'' %
)''% &
;''& '
y(( 
=(( 
$num(( 
;(( 
})) 
IO** 
.** 
	WriteLine** 
(** 
y** 
)** 
;** 
}++ 	
},, 
private00 
void00 
Good100 
(00 
)00 
{11 
if22 

(22 
privateFive22 
!=22 
$num22 
)22 
{33 	
IO55 
.55 
	WriteLine55 
(55 
$str55 /
)55/ 0
;550 1
}66 	
else77 
{88 	
int99 
x99 
,99 
y99 
;99 
x:: 
=:: 
(:: 
new:: 
Random:: 
(:: 
):: 
):: 
.:: 
Next:: #
(::# $
$num::$ %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
if== 
(== 
x== 
==== 
$num== 
)== 
{>> 
IO?? 
.?? 
	WriteLine?? 
(?? 
$str?? %
)??% &
;??& '
y@@ 
=@@ 
$num@@ 
;@@ 
}AA 
IOBB 
.BB 
	WriteLineBB 
(BB 
yBB 
)BB 
;BB 
}CC 	
}DD 
privateGG 
voidGG 
Good2GG 
(GG 
)GG 
{HH 
ifII 

(II 
privateFiveII 
==II 
$numII 
)II 
{JJ 	
intKK 
xKK 
,KK 
yKK 
;KK 
xLL 
=LL 
(LL 
newLL 
RandomLL 
(LL 
)LL 
)LL 
.LL 
NextLL #
(LL# $
$numLL$ %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
ifOO 
(OO 
xOO 
==OO 
$numOO 
)OO 
{PP 
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
$strQQ %
)QQ% &
;QQ& '
yRR 
=RR 
$numRR 
;RR 
}SS 
IOTT 
.TT 
	WriteLineTT 
(TT 
yTT 
)TT 
;TT 
}UU 	
}VV 
publicXX 

overrideXX 
voidXX 
GoodXX 
(XX 
)XX 
{YY 
Good1ZZ 
(ZZ 
)ZZ 
;ZZ 
Good2[[ 
([[ 
)[[ 
;[[ 
}\\ 
}^^ 
}__ é"
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_08.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_08 7
:8 9
AbstractTestCase: J
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
} 
private   
static   
bool   
PrivateReturnsFalse   +
(  + ,
)  , -
{!! 
return"" 
false"" 
;"" 
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
if'' 

('' 
PrivateReturnsTrue'' 
('' 
)''  
)''  !
{(( 	
int)) 
x)) 
,)) 
y)) 
;)) 
x** 
=** 
(** 
new** 
Random** 
(** 
)** 
)** 
.** 
Next** #
(**# $
$num**$ %
)**% &
;**& '
y++ 
=++ 
$num++ 
;++ 
if-- 
(-- 
x-- 
==-- 
$num-- 
)-- 
;-- 
{.. 
IO// 
.// 
	WriteLine// 
(// 
$str// %
)//% &
;//& '
y00 
=00 
$num00 
;00 
}11 
IO22 
.22 
	WriteLine22 
(22 
y22 
)22 
;22 
}33 	
}44 
private88 
void88 
Good188 
(88 
)88 
{99 
if:: 

(:: 
PrivateReturnsFalse:: 
(::  
)::  !
)::! "
{;; 	
IO== 
.== 
	WriteLine== 
(== 
$str== /
)==/ 0
;==0 1
}>> 	
else?? 
{@@ 	
intAA 
xAA 
,AA 
yAA 
;AA 
xBB 
=BB 
(BB 
newBB 
RandomBB 
(BB 
)BB 
)BB 
.BB 
NextBB #
(BB# $
$numBB$ %
)BB% &
;BB& '
yCC 
=CC 
$numCC 
;CC 
ifEE 
(EE 
xEE 
==EE 
$numEE 
)EE 
{FF 
IOGG 
.GG 
	WriteLineGG 
(GG 
$strGG %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
}II 
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
yJJ 
)JJ 
;JJ 
}KK 	
}LL 
privateOO 
voidOO 
Good2OO 
(OO 
)OO 
{PP 
ifQQ 

(QQ 
PrivateReturnsTrueQQ 
(QQ 
)QQ  
)QQ  !
{RR 	
intSS 
xSS 
,SS 
ySS 
;SS 
xTT 
=TT 
(TT 
newTT 
RandomTT 
(TT 
)TT 
)TT 
.TT 
NextTT #
(TT# $
$numTT$ %
)TT% &
;TT& '
yUU 
=UU 
$numUU 
;UU 
ifWW 
(WW 
xWW 
==WW 
$numWW 
)WW 
{XX 
IOYY 
.YY 
	WriteLineYY 
(YY 
$strYY %
)YY% &
;YY& '
yZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
y\\ 
)\\ 
;\\ 
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
Good1bb 
(bb 
)bb 
;bb 
Good2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Ø
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_09.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_09 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
IO-- 
.-- !
STATIC_READONLY_FALSE-- $
)--$ %
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
int44 
x44 
,44 
y44 
;44 
x55 
=55 
(55 
new55 
Random55 
(55 
)55 
)55 
.55 
Next55 #
(55# $
$num55$ %
)55% &
;55& '
y66 
=66 
$num66 
;66 
if88 
(88 
x88 
==88 
$num88 
)88 
{99 
IO:: 
.:: 
	WriteLine:: 
(:: 
$str:: %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
}<< 
IO== 
.== 
	WriteLine== 
(== 
y== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
IODD 
.DD  
STATIC_READONLY_TRUEDD #
)DD# $
{EE 	
intFF 
xFF 
,FF 
yFF 
;FF 
xGG 
=GG 
(GG 
newGG 
RandomGG 
(GG 
)GG 
)GG 
.GG 
NextGG #
(GG# $
$numGG$ %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
xJJ 
==JJ 
$numJJ 
)JJ 
{KK 
IOLL 
.LL 
	WriteLineLL 
(LL 
$strLL %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
}NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
yOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
Good1UU 
(UU 
)UU 
;UU 
Good2VV 
(VV 
)VV 
;VV 
}WW 
}YY 
}ZZ º
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_10.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_10 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
IO-- 
.-- 
staticFalse-- 
)-- 
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
int44 
x44 
,44 
y44 
;44 
x55 
=55 
(55 
new55 
Random55 
(55 
)55 
)55 
.55 
Next55 #
(55# $
$num55$ %
)55% &
;55& '
y66 
=66 
$num66 
;66 
if88 
(88 
x88 
==88 
$num88 
)88 
{99 
IO:: 
.:: 
	WriteLine:: 
(:: 
$str:: %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
}<< 
IO== 
.== 
	WriteLine== 
(== 
y== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
IODD 
.DD 

staticTrueDD 
)DD 
{EE 	
intFF 
xFF 
,FF 
yFF 
;FF 
xGG 
=GG 
(GG 
newGG 
RandomGG 
(GG 
)GG 
)GG 
.GG 
NextGG #
(GG# $
$numGG$ %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
xJJ 
==JJ 
$numJJ 
)JJ 
{KK 
IOLL 
.LL 
	WriteLineLL 
(LL 
$strLL %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
}NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
yOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
Good1UU 
(UU 
)UU 
;UU 
Good2VV 
(VV 
)VV 
;VV 
}WW 
}YY 
}ZZ © 
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_11.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_11 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
IO-- 
.-- 
StaticReturnsFalse-- !
(--! "
)--" #
)--# $
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
int44 
x44 
,44 
y44 
;44 
x55 
=55 
(55 
new55 
Random55 
(55 
)55 
)55 
.55 
Next55 #
(55# $
$num55$ %
)55% &
;55& '
y66 
=66 
$num66 
;66 
if88 
(88 
x88 
==88 
$num88 
)88 
{99 
IO:: 
.:: 
	WriteLine:: 
(:: 
$str:: %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
}<< 
IO== 
.== 
	WriteLine== 
(== 
y== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
IODD 
.DD 
StaticReturnsTrueDD  
(DD  !
)DD! "
)DD" #
{EE 	
intFF 
xFF 
,FF 
yFF 
;FF 
xGG 
=GG 
(GG 
newGG 
RandomGG 
(GG 
)GG 
)GG 
.GG 
NextGG #
(GG# $
$numGG$ %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
xJJ 
==JJ 
$numJJ 
)JJ 
{KK 
IOLL 
.LL 
	WriteLineLL 
(LL 
$strLL %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
}NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
yOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
Good1UU 
(UU 
)UU 
;UU 
Good2VV 
(VV 
)VV 
;VV 
}WW 
}YY 
}ZZ ¡#
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_12.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_12 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
else'' 
{(( 	
int)) 
x)) 
,)) 
y)) 
;)) 
x** 
=** 
(** 
new** 
Random** 
(** 
)** 
)** 
.** 
Next** #
(**# $
$num**$ %
)**% &
;**& '
y++ 
=++ 
$num++ 
;++ 
if-- 
(-- 
x-- 
==-- 
$num-- 
)-- 
{.. 
IO// 
.// 
	WriteLine// 
(// 
$str// %
)//% &
;//& '
y00 
=00 
$num00 
;00 
}11 
IO22 
.22 
	WriteLine22 
(22 
y22 
)22 
;22 
}33 	
}44 
private88 
void88 
Good188 
(88 
)88 
{99 
if:: 

(:: 
IO:: 
.:: $
StaticReturnsTrueOrFalse:: '
(::' (
)::( )
)::) *
{;; 	
int<< 
x<< 
,<< 
y<< 
;<< 
x== 
=== 
(== 
new== 
Random== 
(== 
)== 
)== 
.== 
Next== #
(==# $
$num==$ %
)==% &
;==& '
y>> 
=>> 
$num>> 
;>> 
if@@ 
(@@ 
x@@ 
==@@ 
$num@@ 
)@@ 
{AA 
IOBB 
.BB 
	WriteLineBB 
(BB 
$strBB %
)BB% &
;BB& '
yCC 
=CC 
$numCC 
;CC 
}DD 
IOEE 
.EE 
	WriteLineEE 
(EE 
yEE 
)EE 
;EE 
}FF 	
elseGG 
{HH 	
intII 
xII 
,II 
yII 
;II 
xJJ 
=JJ 
(JJ 
newJJ 
RandomJJ 
(JJ 
)JJ 
)JJ 
.JJ 
NextJJ #
(JJ# $
$numJJ$ %
)JJ% &
;JJ& '
yKK 
=KK 
$numKK 
;KK 
ifMM 
(MM 
xMM 
==MM 
$numMM 
)MM 
{NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
$strOO %
)OO% &
;OO& '
yPP 
=PP 
$numPP 
;PP 
}QQ 
IORR 
.RR 
	WriteLineRR 
(RR 
yRR 
)RR 
;RR 
}SS 	
}TT 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
Good1XX 
(XX 
)XX 
;XX 
}YY 
}[[ 
}\\ ½ 
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_13.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_13 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
IO-- 
.--  
STATIC_READONLY_FIVE-- #
!=--$ &
$num--' (
)--( )
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
int44 
x44 
,44 
y44 
;44 
x55 
=55 
(55 
new55 
Random55 
(55 
)55 
)55 
.55 
Next55 #
(55# $
$num55$ %
)55% &
;55& '
y66 
=66 
$num66 
;66 
if88 
(88 
x88 
==88 
$num88 
)88 
{99 
IO:: 
.:: 
	WriteLine:: 
(:: 
$str:: %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
}<< 
IO== 
.== 
	WriteLine== 
(== 
y== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
IODD 
.DD  
STATIC_READONLY_FIVEDD #
==DD$ &
$numDD' (
)DD( )
{EE 	
intFF 
xFF 
,FF 
yFF 
;FF 
xGG 
=GG 
(GG 
newGG 
RandomGG 
(GG 
)GG 
)GG 
.GG 
NextGG #
(GG# $
$numGG$ %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
xJJ 
==JJ 
$numJJ 
)JJ 
{KK 
IOLL 
.LL 
	WriteLineLL 
(LL 
$strLL %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
}NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
yOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
Good1UU 
(UU 
)UU 
;UU 
Good2VV 
(VV 
)VV 
;VV 
}WW 
}YY 
}ZZ  
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_14.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_14 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
IO-- 
.-- 

staticFive-- 
!=-- 
$num-- 
)-- 
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
int44 
x44 
,44 
y44 
;44 
x55 
=55 
(55 
new55 
Random55 
(55 
)55 
)55 
.55 
Next55 #
(55# $
$num55$ %
)55% &
;55& '
y66 
=66 
$num66 
;66 
if88 
(88 
x88 
==88 
$num88 
)88 
{99 
IO:: 
.:: 
	WriteLine:: 
(:: 
$str:: %
)::% &
;::& '
y;; 
=;; 
$num;; 
;;; 
}<< 
IO== 
.== 
	WriteLine== 
(== 
y== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
IODD 
.DD 

staticFiveDD 
==DD 
$numDD 
)DD 
{EE 	
intFF 
xFF 
,FF 
yFF 
;FF 
xGG 
=GG 
(GG 
newGG 
RandomGG 
(GG 
)GG 
)GG 
.GG 
NextGG #
(GG# $
$numGG$ %
)GG% &
;GG& '
yHH 
=HH 
$numHH 
;HH 
ifJJ 
(JJ 
xJJ 
==JJ 
$numJJ 
)JJ 
{KK 
IOLL 
.LL 
	WriteLineLL 
(LL 
$strLL %
)LL% &
;LL& '
yMM 
=MM 
$numMM 
;MM 
}NN 
IOOO 
.OO 
	WriteLineOO 
(OO 
yOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
Good1UU 
(UU 
)UU 
;UU 
Good2VV 
(VV 
)VV 
;VV 
}WW 
}YY 
}ZZ á#
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_15.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_15 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if!! 
(!! 
x!! 
==!! 
$num!! 
)!! 
;!! 
{"" 
IO## 
.## 
	WriteLine## 
(## 
$str## %
)##% &
;##& '
y$$ 
=$$ 
$num$$ 
;$$ 
}%% 
IO&& 
.&& 
	WriteLine&& 
(&& 
y&& 
)&& 
;&& 
break'' 
;'' 
default(( 
:(( 
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
break++ 
;++ 
},, 	
}-- 
private11 
void11 
Good111 
(11 
)11 
{22 
switch33 
(33 
$num33 
)33 
{44 	
case55 
$num55 
:55 
IO77 
.77 
	WriteLine77 
(77 
$str77 /
)77/ 0
;770 1
break88 
;88 
default99 
:99 
int:: 
x:: 
,:: 
y:: 
;:: 
x;; 
=;; 
(;; 
new;; 
Random;; 
(;; 
);; 
);; 
.;; 
Next;; #
(;;# $
$num;;$ %
);;% &
;;;& '
y<< 
=<< 
$num<< 
;<< 
if>> 
(>> 
x>> 
==>> 
$num>> 
)>> 
{?? 
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
$str@@ %
)@@% &
;@@& '
yAA 
=AA 
$numAA 
;AA 
}BB 
IOCC 
.CC 
	WriteLineCC 
(CC 
yCC 
)CC 
;CC 
breakDD 
;DD 
}EE 	
}FF 
privateII 
voidII 
Good2II 
(II 
)II 
{JJ 
switchKK 
(KK 
$numKK 
)KK 
{LL 	
caseMM 
$numMM 
:MM 
intNN 
xNN 
,NN 
yNN 
;NN 
xOO 
=OO 
(OO 
newOO 
RandomOO 
(OO 
)OO 
)OO 
.OO 
NextOO #
(OO# $
$numOO$ %
)OO% &
;OO& '
yPP 
=PP 
$numPP 
;PP 
ifRR 
(RR 
xRR 
==RR 
$numRR 
)RR 
{SS 
IOTT 
.TT 
	WriteLineTT 
(TT 
$strTT %
)TT% &
;TT& '
yUU 
=UU 
$numUU 
;UU 
}VV 
IOWW 
.WW 
	WriteLineWW 
(WW 
yWW 
)WW 
;WW 
breakXX 
;XX 
defaultYY 
:YY 
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
$str[[ /
)[[/ 0
;[[0 1
break\\ 
;\\ 
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
Good1bb 
(bb 
)bb 
;bb 
Good2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Í
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_16.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_16 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
while 
( 
true 
) 
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
break&& 
;&& 
}'' 	
}(( 
private,, 
void,, 
Good1,, 
(,, 
),, 
{-- 
while.. 
(.. 
true.. 
).. 
{// 	
int00 
x00 
,00 
y00 
;00 
x11 
=11 
(11 
new11 
Random11 
(11 
)11 
)11 
.11 
Next11 #
(11# $
$num11$ %
)11% &
;11& '
y22 
=22 
$num22 
;22 
if44 
(44 
x44 
==44 
$num44 
)44 
{55 
IO66 
.66 
	WriteLine66 
(66 
$str66 %
)66% &
;66& '
y77 
=77 
$num77 
;77 
}88 
IO99 
.99 
	WriteLine99 
(99 
y99 
)99 
;99 
break:: 
;:: 
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
Good1@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD ½
³C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\CWE483_Incorrect_Block_Delimitation__semicolon_17.cs
	namespace 	
	testcases
 
. /
#CWE483_Incorrect_Block_Delimitation 7
{ 
class =
1CWE483_Incorrect_Block_Delimitation__semicolon_17 7
:8 9
AbstractTestCase: J
{ 
public 

override 
void 
Bad 
( 
) 
{ 
for 
( 
int 
j 
= 
$num 
; 
j 
< 
$num 
; 
j 
++ !
)! "
{ 	
int 
x 
, 
y 
; 
x 
= 
( 
new 
Random 
( 
) 
) 
. 
Next #
(# $
$num$ %
)% &
;& '
y 
= 
$num 
; 
if   
(   
x   
==   
$num   
)   
;   
{!! 
IO"" 
."" 
	WriteLine"" 
("" 
$str"" %
)""% &
;""& '
y## 
=## 
$num## 
;## 
}$$ 
IO%% 
.%% 
	WriteLine%% 
(%% 
y%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
for-- 
(-- 
int-- 
k-- 
=-- 
$num-- 
;-- 
k-- 
<-- 
$num-- 
;-- 
k-- 
++-- !
)--! "
{.. 	
int// 
x// 
,// 
y// 
;// 
x00 
=00 
(00 
new00 
Random00 
(00 
)00 
)00 
.00 
Next00 #
(00# $
$num00$ %
)00% &
;00& '
y11 
=11 
$num11 
;11 
if33 
(33 
x33 
==33 
$num33 
)33 
{44 
IO55 
.55 
	WriteLine55 
(55 
$str55 %
)55% &
;55& '
y66 
=66 
$num66 
;66 
}77 
IO88 
.88 
	WriteLine88 
(88 
y88 
)88 
;88 
}99 	
}:: 
public<< 

override<< 
void<< 
Good<< 
(<< 
)<< 
{== 
Good1>> 
(>> 
)>> 
;>> 
}?? 
}AA 
}BB M
C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\Program.cs
	namespace		 	
	testcases		
 
.		 /
#CWE483_Incorrect_Block_Delimitation		 7
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
}__ 
privateaa 
staticaa	 
voidaa 
RunTestCWE4aa  
(aa  !
)aa! "
{aa# $
(cc 
newcc O
CCWE483_Incorrect_Block_Delimitation__if_without_braces_multiline_01cc K
(ccK L
)ccL M
)ccM N
.ccN O
RunTestccO V
(ccV W
$str	ccW 
)
cc 
;
cc 
(dd 
newdd Q
ECWE483_Incorrect_Block_Delimitation__if_without_braces_single_line_01dd M
(ddM N
)ddN O
)ddO P
.ddP Q
RunTestddQ X
(ddX Y
$str	ddY  
)
dd  ¡
;
dd¡ ¢
(ee 
newee =
1CWE483_Incorrect_Block_Delimitation__semicolon_01ee 9
(ee9 :
)ee: ;
)ee; <
.ee< =
RunTestee= D
(eeD E
$streeE x
)eex y
;eey z
(ff 
newff =
1CWE483_Incorrect_Block_Delimitation__semicolon_02ff 9
(ff9 :
)ff: ;
)ff; <
.ff< =
RunTestff= D
(ffD E
$strffE x
)ffx y
;ffy z
(gg 
newgg =
1CWE483_Incorrect_Block_Delimitation__semicolon_03gg 9
(gg9 :
)gg: ;
)gg; <
.gg< =
RunTestgg= D
(ggD E
$strggE x
)ggx y
;ggy z
(hh 
newhh =
1CWE483_Incorrect_Block_Delimitation__semicolon_04hh 9
(hh9 :
)hh: ;
)hh; <
.hh< =
RunTesthh= D
(hhD E
$strhhE x
)hhx y
;hhy z
(ii 
newii =
1CWE483_Incorrect_Block_Delimitation__semicolon_05ii 9
(ii9 :
)ii: ;
)ii; <
.ii< =
RunTestii= D
(iiD E
$striiE x
)iix y
;iiy z
(jj 
newjj =
1CWE483_Incorrect_Block_Delimitation__semicolon_06jj 9
(jj9 :
)jj: ;
)jj; <
.jj< =
RunTestjj= D
(jjD E
$strjjE x
)jjx y
;jjy z
(kk 
newkk =
1CWE483_Incorrect_Block_Delimitation__semicolon_07kk 9
(kk9 :
)kk: ;
)kk; <
.kk< =
RunTestkk= D
(kkD E
$strkkE x
)kkx y
;kky z
(ll 
newll =
1CWE483_Incorrect_Block_Delimitation__semicolon_08ll 9
(ll9 :
)ll: ;
)ll; <
.ll< =
RunTestll= D
(llD E
$strllE x
)llx y
;lly z
(mm 
newmm =
1CWE483_Incorrect_Block_Delimitation__semicolon_09mm 9
(mm9 :
)mm: ;
)mm; <
.mm< =
RunTestmm= D
(mmD E
$strmmE x
)mmx y
;mmy z
(nn 
newnn =
1CWE483_Incorrect_Block_Delimitation__semicolon_10nn 9
(nn9 :
)nn: ;
)nn; <
.nn< =
RunTestnn= D
(nnD E
$strnnE x
)nnx y
;nny z
(oo 
newoo =
1CWE483_Incorrect_Block_Delimitation__semicolon_11oo 9
(oo9 :
)oo: ;
)oo; <
.oo< =
RunTestoo= D
(ooD E
$strooE x
)oox y
;ooy z
(pp 
newpp =
1CWE483_Incorrect_Block_Delimitation__semicolon_12pp 9
(pp9 :
)pp: ;
)pp; <
.pp< =
RunTestpp= D
(ppD E
$strppE x
)ppx y
;ppy z
(qq 
newqq =
1CWE483_Incorrect_Block_Delimitation__semicolon_13qq 9
(qq9 :
)qq: ;
)qq; <
.qq< =
RunTestqq= D
(qqD E
$strqqE x
)qqx y
;qqy z
(rr 
newrr =
1CWE483_Incorrect_Block_Delimitation__semicolon_14rr 9
(rr9 :
)rr: ;
)rr; <
.rr< =
RunTestrr= D
(rrD E
$strrrE x
)rrx y
;rry z
(ss 
newss =
1CWE483_Incorrect_Block_Delimitation__semicolon_15ss 9
(ss9 :
)ss: ;
)ss; <
.ss< =
RunTestss= D
(ssD E
$strssE x
)ssx y
;ssy z
(tt 
newtt =
1CWE483_Incorrect_Block_Delimitation__semicolon_16tt 9
(tt9 :
)tt: ;
)tt; <
.tt< =
RunTesttt= D
(ttD E
$strttE x
)ttx y
;tty z
(uu 
newuu =
1CWE483_Incorrect_Block_Delimitation__semicolon_17uu 9
(uu9 :
)uu: ;
)uu; <
.uu< =
RunTestuu= D
(uuD E
$struuE x
)uux y
;uuy z
}ww 
privateyy 
staticyy	 
voidyy 
RunTestCWE5yy  
(yy  !
)yy! "
{yy# $
}}} 
private 
static	 
void 
RunTestCWE6  
(  !
)! "
{# $
}
 
private
 
static
	 
void
 
RunTestCWE7
  
(
  !
)
! "
{
# $
}
 
private
 
static
	 
void
 
RunTestCWE8
  
(
  !
)
! "
{
# $
}
 
private
 
static
	 
void
 
RunTestCWE9
  
(
  !
)
! "
{
# $
}
 
} 
} Å
C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE483_Incorrect_Block_Delimitation\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str >
)> ?
]? @
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str @
)@ A
]A B
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *