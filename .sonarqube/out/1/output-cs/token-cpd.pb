À*
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_01 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
resp;; 
.;; 
	AddHeader;; 
(;; 
$str;; %
,;;% &
$str;;' :
+;;; <
data;;= A
);;A B
;;;B C
}<< 	
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
HttpRequest@@ )
req@@* -
,@@- .
HttpResponse@@/ ;
resp@@< @
)@@@ A
{AA 
GoodG2BBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
GoodB2GCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
}DD 
privateGG 
voidGG 
GoodG2BGG 
(GG 
HttpRequestGG $
reqGG% (
,GG( )
HttpResponseGG* 6
respGG7 ;
)GG; <
{HH 
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
ifMM 

(MM 
dataMM 
!=MM 
nullMM 
)MM 
{NN 	
respOO 
.OO 
	AddHeaderOO 
(OO 
$strOO %
,OO% &
$strOO' :
+OO; <
dataOO= A
)OOA B
;OOB C
}PP 	
}QQ 
privateTT 
voidTT 
GoodB2GTT 
(TT 
HttpRequestTT $
reqTT% (
,TT( )
HttpResponseTT* 6
respTT7 ;
)TT; <
{UU 
stringVV 
dataVV 
;VV 
dataWW 
=WW 
$strWW 
;WW 
{YY 	
tryZZ 
{[[ 
using\\ 
(\\ 
	WebClient\\  
client\\! '
=\\( )
new\\* -
	WebClient\\. 7
(\\7 8
)\\8 9
)\\9 :
{]] 
using^^ 
(^^ 
StreamReader^^ '
sr^^( *
=^^+ ,
new^^- 0
StreamReader^^1 =
(^^= >
client^^> D
.^^D E
OpenRead^^E M
(^^M N
$str^^N g
)^^g h
)^^h i
)^^i j
{__ 
datacc 
=cc 
srcc !
.cc! "
ReadLinecc" *
(cc* +
)cc+ ,
;cc, -
}dd 
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg 
exceptIOgg '
)gg' (
{hh 
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii "
.ii" #
LogLevelii# +
.ii+ ,
Warnii, 0
,ii0 1
exceptIOii2 :
,ii: ;
$strii< W
)iiW X
;iiX Y
}jj 
}kk 	
ifmm 

(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 	
dataoo 
=oo 
HttpUtilityoo 
.oo 
	UrlEncodeoo (
(oo( )
$stroo) +
,oo+ ,
Encodingoo- 5
.oo5 6
UTF8oo6 :
)oo: ;
;oo; <
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp %
,pp% &
$strpp' :
+pp; <
datapp= A
)ppA B
;ppB C
}qq 	
}rr 
}tt 
}uu «S
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_02 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
true## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
trueAA 
)AA 
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
falsePP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
true[[ 
)[[ 
{\\ 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
trueii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
truett 
)tt 
{uu 	
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
false
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
true
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
true
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ V
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_03 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
$num## 
==## 
$num## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
$numAA 
==AA 
$numAA 
)AA 
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
$numPP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
$num[[ 
==[[ 
$num[[ 
)[[ 
{\\ 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
$numii 
==ii 
$numii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
$numtt 
==tt 
$numtt 
)tt 
{uu 	
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
$num
   
!=
   
$num
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
$num
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
$num
ÒÒ 
==
ÒÒ 
$num
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ ýV
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_04 @
:A B
AbstractTestCaseWebC V
{ 
private$$ 
const$$ 
bool$$ 
PRIVATE_CONST_TRUE$$ )
=$$* +
true$$, 0
;$$0 1
private%% 
const%% 
bool%% 
PRIVATE_CONST_FALSE%% *
=%%+ ,
false%%- 2
;%%2 3
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
if** 

(** 
PRIVATE_CONST_TRUE** 
)** 
{++ 	
data,, 
=,, 
$str,, 
;,, 
{.. 
try// 
{00 
using11 
(11 
	WebClient11 $
client11% +
=11, -
new11. 1
	WebClient112 ;
(11; <
)11< =
)11= >
{22 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
client33B H
.33H I
OpenRead33I Q
(33Q R
$str33R k
)33k l
)33l m
)33m n
{44 
data88  
=88! "
sr88# %
.88% &
ReadLine88& .
(88. /
)88/ 0
;880 1
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
}@@ 
}AA 	
elseBB 
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
ifHH 

(HH 
PRIVATE_CONST_TRUEHH 
)HH 
{II 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
respMM 
.MM 
	AddHeaderMM 
(MM 
$strMM )
,MM) *
$strMM+ >
+MM? @
dataMMA E
)MME F
;MMF G
}NN 
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
HttpRequestTT %
reqTT& )
,TT) *
HttpResponseTT+ 7
respTT8 <
)TT< =
{UU 
stringVV 
dataVV 
;VV 
ifWW 

(WW 
PRIVATE_CONST_FALSEWW 
)WW  
{XX 	
data[[ 
=[[ 
null[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$str`` 
;`` 
}aa 	
ifbb 

(bb 
PRIVATE_CONST_TRUEbb 
)bb 
{cc 	
ifee 
(ee 
dataee 
!=ee 
nullee 
)ee 
{ff 
respgg 
.gg 
	AddHeadergg 
(gg 
$strgg )
,gg) *
$strgg+ >
+gg? @
dataggA E
)ggE F
;ggF G
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
PRIVATE_CONST_TRUEpp 
)pp 
{qq 	
datass 
=ss 
$strss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
PRIVATE_CONST_TRUE{{ 
){{ 
{|| 	
if~~ 
(~~ 
data~~ 
!=~~ 
null~~ 
)~~ 
{ 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
   	
else
¡¡ 
{
¢¢ 	
data
¥¥ 
=
¥¥ 
null
¥¥ 
;
¥¥ 
}
¦¦ 	
if
§§ 

(
§§ !
PRIVATE_CONST_FALSE
§§ 
)
§§  
{
¨¨ 	
IO
ªª 
.
ªª 
	WriteLine
ªª 
(
ªª 
$str
ªª /
)
ªª/ 0
;
ªª0 1
}
«« 	
else
¬¬ 
{
­­ 	
if
¯¯ 
(
¯¯ 
data
¯¯ 
!=
¯¯ 
null
¯¯ 
)
¯¯ 
{
°° 
data
±± 
=
±± 
HttpUtility
±± "
.
±±" #
	UrlEncode
±±# ,
(
±±, -
$str
±±- /
,
±±/ 0
Encoding
±±1 9
.
±±9 :
UTF8
±±: >
)
±±> ?
;
±±? @
resp
²² 
.
²² 
	AddHeader
²² 
(
²² 
$str
²² )
,
²²) *
$str
²²+ >
+
²²? @
data
²²A E
)
²²E F
;
²²F G
}
³³ 
}
´´ 	
}
µµ 
private
¸¸ 
void
¸¸ 
GoodB2G2
¸¸ 
(
¸¸ 
HttpRequest
¸¸ %
req
¸¸& )
,
¸¸) *
HttpResponse
¸¸+ 7
resp
¸¸8 <
)
¸¸< =
{
¹¹ 
string
ºº 
data
ºº 
;
ºº 
if
»» 

(
»»  
PRIVATE_CONST_TRUE
»» 
)
»» 
{
¼¼ 	
data
½½ 
=
½½ 
$str
½½ 
;
½½ 
{
¿¿ 
try
ÀÀ 
{
ÁÁ 
using
ÂÂ 
(
ÂÂ 
	WebClient
ÂÂ $
client
ÂÂ% +
=
ÂÂ, -
new
ÂÂ. 1
	WebClient
ÂÂ2 ;
(
ÂÂ; <
)
ÂÂ< =
)
ÂÂ= >
{
ÃÃ 
using
ÄÄ 
(
ÄÄ 
StreamReader
ÄÄ +
sr
ÄÄ, .
=
ÄÄ/ 0
new
ÄÄ1 4
StreamReader
ÄÄ5 A
(
ÄÄA B
client
ÄÄB H
.
ÄÄH I
OpenRead
ÄÄI Q
(
ÄÄQ R
$str
ÄÄR k
)
ÄÄk l
)
ÄÄl m
)
ÄÄm n
{
ÅÅ 
data
ÉÉ  
=
ÉÉ! "
sr
ÉÉ# %
.
ÉÉ% &
ReadLine
ÉÉ& .
(
ÉÉ. /
)
ÉÉ/ 0
;
ÉÉ0 1
}
ÊÊ 
}
ËË 
}
ÌÌ 
catch
ÍÍ 
(
ÍÍ 
IOException
ÍÍ "
exceptIO
ÍÍ# +
)
ÍÍ+ ,
{
ÎÎ 
IO
ÏÏ 
.
ÏÏ 
Logger
ÏÏ 
.
ÏÏ 
Log
ÏÏ !
(
ÏÏ! "
NLog
ÏÏ" &
.
ÏÏ& '
LogLevel
ÏÏ' /
.
ÏÏ/ 0
Warn
ÏÏ0 4
,
ÏÏ4 5
exceptIO
ÏÏ6 >
,
ÏÏ> ?
$str
ÏÏ@ [
)
ÏÏ[ \
;
ÏÏ\ ]
}
ÐÐ 
}
ÑÑ 
}
ÒÒ 	
else
ÓÓ 
{
ÔÔ 	
data
×× 
=
×× 
null
×× 
;
×× 
}
ØØ 	
if
ÙÙ 

(
ÙÙ  
PRIVATE_CONST_TRUE
ÙÙ 
)
ÙÙ 
{
ÚÚ 	
if
ÜÜ 
(
ÜÜ 
data
ÜÜ 
!=
ÜÜ 
null
ÜÜ 
)
ÜÜ 
{
ÝÝ 
data
ÞÞ 
=
ÞÞ 
HttpUtility
ÞÞ "
.
ÞÞ" #
	UrlEncode
ÞÞ# ,
(
ÞÞ, -
$str
ÞÞ- /
,
ÞÞ/ 0
Encoding
ÞÞ1 9
.
ÞÞ9 :
UTF8
ÞÞ: >
)
ÞÞ> ?
;
ÞÞ? @
resp
ßß 
.
ßß 
	AddHeader
ßß 
(
ßß 
$str
ßß )
,
ßß) *
$str
ßß+ >
+
ßß? @
data
ßßA E
)
ßßE F
;
ßßF G
}
àà 
}
áá 	
}
ââ 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
åå 
GoodG2B1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
GoodB2G2
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
}
êê 
}ìì 
}íí íU
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_05 @
:A B
AbstractTestCaseWebC V
{ 
private## 
bool## 
privateTrue## 
=## 
true## #
;### $
private$$ 
bool$$ 
privateFalse$$ 
=$$ 
false$$  %
;$$% &
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
privateTrue)) 
))) 
{** 	
data++ 
=++ 
$str++ 
;++ 
{-- 
try.. 
{// 
using00 
(00 
	WebClient00 $
client00% +
=00, -
new00. 1
	WebClient002 ;
(00; <
)00< =
)00= >
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
client22B H
.22H I
OpenRead22I Q
(22Q R
$str22R k
)22k l
)22l m
)22m n
{33 
data77  
=77! "
sr77# %
.77% &
ReadLine77& .
(77. /
)77/ 0
;770 1
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
}?? 
}@@ 	
elseAA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
ifGG 

(GG 
privateTrueGG 
)GG 
{HH 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
respLL 
.LL 
	AddHeaderLL 
(LL 
$strLL )
,LL) *
$strLL+ >
+LL? @
dataLLA E
)LLE F
;LLF G
}MM 
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
privateFalseVV 
)VV 
{WW 	
dataZZ 
=ZZ 
nullZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
ifaa 

(aa 
privateTrueaa 
)aa 
{bb 	
ifdd 
(dd 
datadd 
!=dd 
nulldd 
)dd 
{ee 
respff 
.ff 
	AddHeaderff 
(ff 
$strff )
,ff) *
$strff+ >
+ff? @
dataffA E
)ffE F
;ffF G
}gg 
}hh 	
}ii 
privatell 
voidll 
GoodG2B2ll 
(ll 
HttpRequestll %
reqll& )
,ll) *
HttpResponsell+ 7
respll8 <
)ll< =
{mm 
stringnn 
datann 
;nn 
ifoo 

(oo 
privateTrueoo 
)oo 
{pp 	
datarr 
=rr 
$strrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
nullxx 
;xx 
}yy 	
ifzz 

(zz 
privateTruezz 
)zz 
{{{ 	
if}} 
(}} 
data}} 
!=}} 
null}} 
)}} 
{~~ 
resp 
. 
	AddHeader 
( 
$str )
,) *
$str+ >
+? @
dataA E
)E F
;F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
   
{
¡¡ 	
data
¤¤ 
=
¤¤ 
null
¤¤ 
;
¤¤ 
}
¥¥ 	
if
¦¦ 

(
¦¦ 
privateFalse
¦¦ 
)
¦¦ 
{
§§ 	
IO
©© 
.
©© 
	WriteLine
©© 
(
©© 
$str
©© /
)
©©/ 0
;
©©0 1
}
ªª 	
else
«« 
{
¬¬ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 
data
°° 
=
°° 
HttpUtility
°° "
.
°°" #
	UrlEncode
°°# ,
(
°°, -
$str
°°- /
,
°°/ 0
Encoding
°°1 9
.
°°9 :
UTF8
°°: >
)
°°> ?
;
°°? @
resp
±± 
.
±± 
	AddHeader
±± 
(
±± 
$str
±± )
,
±±) *
$str
±±+ >
+
±±? @
data
±±A E
)
±±E F
;
±±F G
}
²² 
}
³³ 	
}
´´ 
private
·· 
void
·· 
GoodB2G2
·· 
(
·· 
HttpRequest
·· %
req
··& )
,
··) *
HttpResponse
··+ 7
resp
··8 <
)
··< =
{
¸¸ 
string
¹¹ 
data
¹¹ 
;
¹¹ 
if
ºº 

(
ºº 
privateTrue
ºº 
)
ºº 
{
»» 	
data
¼¼ 
=
¼¼ 
$str
¼¼ 
;
¼¼ 
{
¾¾ 
try
¿¿ 
{
ÀÀ 
using
ÁÁ 
(
ÁÁ 
	WebClient
ÁÁ $
client
ÁÁ% +
=
ÁÁ, -
new
ÁÁ. 1
	WebClient
ÁÁ2 ;
(
ÁÁ; <
)
ÁÁ< =
)
ÁÁ= >
{
ÂÂ 
using
ÃÃ 
(
ÃÃ 
StreamReader
ÃÃ +
sr
ÃÃ, .
=
ÃÃ/ 0
new
ÃÃ1 4
StreamReader
ÃÃ5 A
(
ÃÃA B
client
ÃÃB H
.
ÃÃH I
OpenRead
ÃÃI Q
(
ÃÃQ R
$str
ÃÃR k
)
ÃÃk l
)
ÃÃl m
)
ÃÃm n
{
ÄÄ 
data
ÈÈ  
=
ÈÈ! "
sr
ÈÈ# %
.
ÈÈ% &
ReadLine
ÈÈ& .
(
ÈÈ. /
)
ÈÈ/ 0
;
ÈÈ0 1
}
ÉÉ 
}
ÊÊ 
}
ËË 
catch
ÌÌ 
(
ÌÌ 
IOException
ÌÌ "
exceptIO
ÌÌ# +
)
ÌÌ+ ,
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ !
(
ÎÎ! "
NLog
ÎÎ" &
.
ÎÎ& '
LogLevel
ÎÎ' /
.
ÎÎ/ 0
Warn
ÎÎ0 4
,
ÎÎ4 5
exceptIO
ÎÎ6 >
,
ÎÎ> ?
$str
ÎÎ@ [
)
ÎÎ[ \
;
ÎÎ\ ]
}
ÏÏ 
}
ÐÐ 
}
ÑÑ 	
else
ÒÒ 
{
ÓÓ 	
data
ÖÖ 
=
ÖÖ 
null
ÖÖ 
;
ÖÖ 
}
×× 	
if
ØØ 

(
ØØ 
privateTrue
ØØ 
)
ØØ 
{
ÙÙ 	
if
ÛÛ 
(
ÛÛ 
data
ÛÛ 
!=
ÛÛ 
null
ÛÛ 
)
ÛÛ 
{
ÜÜ 
data
ÝÝ 
=
ÝÝ 
HttpUtility
ÝÝ "
.
ÝÝ" #
	UrlEncode
ÝÝ# ,
(
ÝÝ, -
$str
ÝÝ- /
,
ÝÝ/ 0
Encoding
ÝÝ1 9
.
ÝÝ9 :
UTF8
ÝÝ: >
)
ÝÝ> ?
;
ÝÝ? @
resp
ÞÞ 
.
ÞÞ 
	AddHeader
ÞÞ 
(
ÞÞ 
$str
ÞÞ )
,
ÞÞ) *
$str
ÞÞ+ >
+
ÞÞ? @
data
ÞÞA E
)
ÞÞE F
;
ÞÞF G
}
ßß 
}
àà 	
}
áá 
public
ãã 

override
ãã 
void
ãã 
Good
ãã 
(
ãã 
HttpRequest
ãã )
req
ãã* -
,
ãã- .
HttpResponse
ãã/ ;
resp
ãã< @
)
ãã@ A
{
ää 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G1
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
éé 
}ëë 
}ìì ºX
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_06 @
:A B
AbstractTestCaseWebC V
{ 
private## 
const## 
int## 
PRIVATE_CONST_FIVE## (
=##) *
$num##+ ,
;##, -
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_FIVE(( 
==((  
$num((  !
)((! "
{)) 	
data** 
=** 
$str** 
;** 
{,, 
try-- 
{.. 
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
data66  
=66! "
sr66# %
.66% &
ReadLine66& .
(66. /
)66/ 0
;660 1
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
}?? 	
else@@ 
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
ifFF 

(FF 
PRIVATE_CONST_FIVEFF 
==FF  
$numFF  !
)FF! "
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
HttpRequestRR %
reqRR& )
,RR) *
HttpResponseRR+ 7
respRR8 <
)RR< =
{SS 
stringTT 
dataTT 
;TT 
ifUU 

(UU 
PRIVATE_CONST_FIVEUU 
!=UU  
$numUU  !
)UU! "
{VV 	
dataYY 
=YY 
nullYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
if`` 

(`` 
PRIVATE_CONST_FIVE`` 
==``  
$num``  !
)``! "
{aa 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
ifnn 

(nn 
PRIVATE_CONST_FIVEnn 
==nn  
$numnn  !
)nn! "
{oo 	
dataqq 
=qq 
$strqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
nullww 
;ww 
}xx 	
ifyy 

(yy 
PRIVATE_CONST_FIVEyy 
==yy  
$numyy  !
)yy! "
{zz 	
if|| 
(|| 
data|| 
!=|| 
null|| 
)|| 
{}} 
resp~~ 
.~~ 
	AddHeader~~ 
(~~ 
$str~~ )
,~~) *
$str~~+ >
+~~? @
data~~A E
)~~E F
;~~F G
} 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
   	
data
££ 
=
££ 
null
££ 
;
££ 
}
¤¤ 	
if
¥¥ 

(
¥¥  
PRIVATE_CONST_FIVE
¥¥ 
!=
¥¥  
$num
¥¥  !
)
¥¥! "
{
¦¦ 	
IO
¨¨ 
.
¨¨ 
	WriteLine
¨¨ 
(
¨¨ 
$str
¨¨ /
)
¨¨/ 0
;
¨¨0 1
}
©© 	
else
ªª 
{
«« 	
if
­­ 
(
­­ 
data
­­ 
!=
­­ 
null
­­ 
)
­­ 
{
®® 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
$str
¯¯- /
,
¯¯/ 0
Encoding
¯¯1 9
.
¯¯9 :
UTF8
¯¯: >
)
¯¯> ?
;
¯¯? @
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
}
²² 	
}
³³ 
private
¶¶ 
void
¶¶ 
GoodB2G2
¶¶ 
(
¶¶ 
HttpRequest
¶¶ %
req
¶¶& )
,
¶¶) *
HttpResponse
¶¶+ 7
resp
¶¶8 <
)
¶¶< =
{
·· 
string
¸¸ 
data
¸¸ 
;
¸¸ 
if
¹¹ 

(
¹¹  
PRIVATE_CONST_FIVE
¹¹ 
==
¹¹  
$num
¹¹  !
)
¹¹! "
{
ºº 	
data
»» 
=
»» 
$str
»» 
;
»» 
{
½½ 
try
¾¾ 
{
¿¿ 
using
ÀÀ 
(
ÀÀ 
	WebClient
ÀÀ $
client
ÀÀ% +
=
ÀÀ, -
new
ÀÀ. 1
	WebClient
ÀÀ2 ;
(
ÀÀ; <
)
ÀÀ< =
)
ÀÀ= >
{
ÁÁ 
using
ÂÂ 
(
ÂÂ 
StreamReader
ÂÂ +
sr
ÂÂ, .
=
ÂÂ/ 0
new
ÂÂ1 4
StreamReader
ÂÂ5 A
(
ÂÂA B
client
ÂÂB H
.
ÂÂH I
OpenRead
ÂÂI Q
(
ÂÂQ R
$str
ÂÂR k
)
ÂÂk l
)
ÂÂl m
)
ÂÂm n
{
ÃÃ 
data
ÇÇ  
=
ÇÇ! "
sr
ÇÇ# %
.
ÇÇ% &
ReadLine
ÇÇ& .
(
ÇÇ. /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÈÈ 
}
ÉÉ 
}
ÊÊ 
catch
ËË 
(
ËË 
IOException
ËË "
exceptIO
ËË# +
)
ËË+ ,
{
ÌÌ 
IO
ÍÍ 
.
ÍÍ 
Logger
ÍÍ 
.
ÍÍ 
Log
ÍÍ !
(
ÍÍ! "
NLog
ÍÍ" &
.
ÍÍ& '
LogLevel
ÍÍ' /
.
ÍÍ/ 0
Warn
ÍÍ0 4
,
ÍÍ4 5
exceptIO
ÍÍ6 >
,
ÍÍ> ?
$str
ÍÍ@ [
)
ÍÍ[ \
;
ÍÍ\ ]
}
ÎÎ 
}
ÏÏ 
}
ÐÐ 	
else
ÑÑ 
{
ÒÒ 	
data
ÕÕ 
=
ÕÕ 
null
ÕÕ 
;
ÕÕ 
}
ÖÖ 	
if
×× 

(
××  
PRIVATE_CONST_FIVE
×× 
==
××  
$num
××  !
)
××! "
{
ØØ 	
if
ÚÚ 
(
ÚÚ 
data
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
)
ÚÚ 
{
ÛÛ 
data
ÜÜ 
=
ÜÜ 
HttpUtility
ÜÜ "
.
ÜÜ" #
	UrlEncode
ÜÜ# ,
(
ÜÜ, -
$str
ÜÜ- /
,
ÜÜ/ 0
Encoding
ÜÜ1 9
.
ÜÜ9 :
UTF8
ÜÜ: >
)
ÜÜ> ?
;
ÜÜ? @
resp
ÝÝ 
.
ÝÝ 
	AddHeader
ÝÝ 
(
ÝÝ 
$str
ÝÝ )
,
ÝÝ) *
$str
ÝÝ+ >
+
ÝÝ? @
data
ÝÝA E
)
ÝÝE F
;
ÝÝF G
}
ÞÞ 
}
ßß 	
}
àà 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
HttpRequest
ââ )
req
ââ* -
,
ââ- .
HttpResponse
ââ/ ;
resp
ââ< @
)
ââ@ A
{
ãã 
GoodG2B1
ää 
(
ää 
req
ää 
,
ää 
resp
ää 
)
ää 
;
ää 
GoodG2B2
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodB2G1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
}
èè 
}êê 
}ëë ÚW
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_07 @
:A B
AbstractTestCaseWebC V
{ 
private## 
int## 
privateFive## 
=## 
$num## 
;##  
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
privateFive(( 
==(( 
$num(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{,, 
try-- 
{.. 
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
data66  
=66! "
sr66# %
.66% &
ReadLine66& .
(66. /
)66/ 0
;660 1
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
}?? 	
else@@ 
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
ifFF 

(FF 
privateFiveFF 
==FF 
$numFF 
)FF 
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
HttpRequestRR %
reqRR& )
,RR) *
HttpResponseRR+ 7
respRR8 <
)RR< =
{SS 
stringTT 
dataTT 
;TT 
ifUU 

(UU 
privateFiveUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
nullYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
if`` 

(`` 
privateFive`` 
==`` 
$num`` 
)`` 
{aa 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
ifnn 

(nn 
privateFivenn 
==nn 
$numnn 
)nn 
{oo 	
dataqq 
=qq 
$strqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
nullww 
;ww 
}xx 	
ifyy 

(yy 
privateFiveyy 
==yy 
$numyy 
)yy 
{zz 	
if|| 
(|| 
data|| 
!=|| 
null|| 
)|| 
{}} 
resp~~ 
.~~ 
	AddHeader~~ 
(~~ 
$str~~ )
,~~) *
$str~~+ >
+~~? @
data~~A E
)~~E F
;~~F G
} 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
   	
data
££ 
=
££ 
null
££ 
;
££ 
}
¤¤ 	
if
¥¥ 

(
¥¥ 
privateFive
¥¥ 
!=
¥¥ 
$num
¥¥ 
)
¥¥ 
{
¦¦ 	
IO
¨¨ 
.
¨¨ 
	WriteLine
¨¨ 
(
¨¨ 
$str
¨¨ /
)
¨¨/ 0
;
¨¨0 1
}
©© 	
else
ªª 
{
«« 	
if
­­ 
(
­­ 
data
­­ 
!=
­­ 
null
­­ 
)
­­ 
{
®® 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
$str
¯¯- /
,
¯¯/ 0
Encoding
¯¯1 9
.
¯¯9 :
UTF8
¯¯: >
)
¯¯> ?
;
¯¯? @
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
}
²² 	
}
³³ 
private
¶¶ 
void
¶¶ 
GoodB2G2
¶¶ 
(
¶¶ 
HttpRequest
¶¶ %
req
¶¶& )
,
¶¶) *
HttpResponse
¶¶+ 7
resp
¶¶8 <
)
¶¶< =
{
·· 
string
¸¸ 
data
¸¸ 
;
¸¸ 
if
¹¹ 

(
¹¹ 
privateFive
¹¹ 
==
¹¹ 
$num
¹¹ 
)
¹¹ 
{
ºº 	
data
»» 
=
»» 
$str
»» 
;
»» 
{
½½ 
try
¾¾ 
{
¿¿ 
using
ÀÀ 
(
ÀÀ 
	WebClient
ÀÀ $
client
ÀÀ% +
=
ÀÀ, -
new
ÀÀ. 1
	WebClient
ÀÀ2 ;
(
ÀÀ; <
)
ÀÀ< =
)
ÀÀ= >
{
ÁÁ 
using
ÂÂ 
(
ÂÂ 
StreamReader
ÂÂ +
sr
ÂÂ, .
=
ÂÂ/ 0
new
ÂÂ1 4
StreamReader
ÂÂ5 A
(
ÂÂA B
client
ÂÂB H
.
ÂÂH I
OpenRead
ÂÂI Q
(
ÂÂQ R
$str
ÂÂR k
)
ÂÂk l
)
ÂÂl m
)
ÂÂm n
{
ÃÃ 
data
ÇÇ  
=
ÇÇ! "
sr
ÇÇ# %
.
ÇÇ% &
ReadLine
ÇÇ& .
(
ÇÇ. /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÈÈ 
}
ÉÉ 
}
ÊÊ 
catch
ËË 
(
ËË 
IOException
ËË "
exceptIO
ËË# +
)
ËË+ ,
{
ÌÌ 
IO
ÍÍ 
.
ÍÍ 
Logger
ÍÍ 
.
ÍÍ 
Log
ÍÍ !
(
ÍÍ! "
NLog
ÍÍ" &
.
ÍÍ& '
LogLevel
ÍÍ' /
.
ÍÍ/ 0
Warn
ÍÍ0 4
,
ÍÍ4 5
exceptIO
ÍÍ6 >
,
ÍÍ> ?
$str
ÍÍ@ [
)
ÍÍ[ \
;
ÍÍ\ ]
}
ÎÎ 
}
ÏÏ 
}
ÐÐ 	
else
ÑÑ 
{
ÒÒ 	
data
ÕÕ 
=
ÕÕ 
null
ÕÕ 
;
ÕÕ 
}
ÖÖ 	
if
×× 

(
×× 
privateFive
×× 
==
×× 
$num
×× 
)
×× 
{
ØØ 	
if
ÚÚ 
(
ÚÚ 
data
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
)
ÚÚ 
{
ÛÛ 
data
ÜÜ 
=
ÜÜ 
HttpUtility
ÜÜ "
.
ÜÜ" #
	UrlEncode
ÜÜ# ,
(
ÜÜ, -
$str
ÜÜ- /
,
ÜÜ/ 0
Encoding
ÜÜ1 9
.
ÜÜ9 :
UTF8
ÜÜ: >
)
ÜÜ> ?
;
ÜÜ? @
resp
ÝÝ 
.
ÝÝ 
	AddHeader
ÝÝ 
(
ÝÝ 
$str
ÝÝ )
,
ÝÝ) *
$str
ÝÝ+ >
+
ÝÝ? @
data
ÝÝA E
)
ÝÝE F
;
ÝÝF G
}
ÞÞ 
}
ßß 	
}
àà 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
HttpRequest
ââ )
req
ââ* -
,
ââ- .
HttpResponse
ââ/ ;
resp
ââ< @
)
ââ@ A
{
ãã 
GoodG2B1
ää 
(
ää 
req
ää 
,
ää 
resp
ää 
)
ää 
;
ää 
GoodG2B2
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodB2G1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
}
èè 
}êê 
}ëë ÛZ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_08 @
:A B
AbstractTestCaseWebC V
{ 
private## 
static## 
bool## 
PrivateReturnsTrue## *
(##* +
)##+ ,
{$$ 
return%% 
true%% 
;%% 
}&& 
private(( 
static(( 
bool(( 
PrivateReturnsFalse(( +
(((+ ,
)((, -
{)) 
return** 
false** 
;** 
}++ 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
if00 

(00 
PrivateReturnsTrue00 
(00 
)00  
)00  !
{11 	
data22 
=22 
$str22 
;22 
{44 
try55 
{66 
using77 
(77 
	WebClient77 $
client77% +
=77, -
new77. 1
	WebClient772 ;
(77; <
)77< =
)77= >
{88 
using99 
(99 
StreamReader99 +
sr99, .
=99/ 0
new991 4
StreamReader995 A
(99A B
client99B H
.99H I
OpenRead99I Q
(99Q R
$str99R k
)99k l
)99l m
)99m n
{:: 
data>>  
=>>! "
sr>># %
.>>% &
ReadLine>>& .
(>>. /
)>>/ 0
;>>0 1
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
ifNN 

(NN 
PrivateReturnsTrueNN 
(NN 
)NN  
)NN  !
{OO 	
ifQQ 
(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 
respSS 
.SS 
	AddHeaderSS 
(SS 
$strSS )
,SS) *
$strSS+ >
+SS? @
dataSSA E
)SSE F
;SSF G
}TT 
}UU 	
}VV 
privateZZ 
voidZZ 
GoodG2B1ZZ 
(ZZ 
HttpRequestZZ %
reqZZ& )
,ZZ) *
HttpResponseZZ+ 7
respZZ8 <
)ZZ< =
{[[ 
string\\ 
data\\ 
;\\ 
if]] 

(]] 
PrivateReturnsFalse]] 
(]]  
)]]  !
)]]! "
{^^ 	
dataaa 
=aa 
nullaa 
;aa 
}bb 	
elsecc 
{dd 	
dataff 
=ff 
$strff 
;ff 
}gg 	
ifhh 

(hh 
PrivateReturnsTruehh 
(hh 
)hh  
)hh  !
{ii 	
ifkk 
(kk 
datakk 
!=kk 
nullkk 
)kk 
{ll 
respmm 
.mm 
	AddHeadermm 
(mm 
$strmm )
,mm) *
$strmm+ >
+mm? @
datammA E
)mmE F
;mmF G
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodG2B2ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
PrivateReturnsTruevv 
(vv 
)vv  
)vv  !
{ww 	
datayy 
=yy 
$stryy 
;yy 
}zz 	
else{{ 
{|| 	
data 
= 
null 
; 
}
 	
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
   
catch
¡¡ 
(
¡¡ 
IOException
¡¡ "
exceptIO
¡¡# +
)
¡¡+ ,
{
¢¢ 
IO
££ 
.
££ 
Logger
££ 
.
££ 
Log
££ !
(
££! "
NLog
££" &
.
££& '
LogLevel
££' /
.
££/ 0
Warn
££0 4
,
££4 5
exceptIO
££6 >
,
££> ?
$str
££@ [
)
££[ \
;
££\ ]
}
¤¤ 
}
¥¥ 
}
¦¦ 	
else
§§ 
{
¨¨ 	
data
«« 
=
«« 
null
«« 
;
«« 
}
¬¬ 	
if
­­ 

(
­­ !
PrivateReturnsFalse
­­ 
(
­­  
)
­­  !
)
­­! "
{
®® 	
IO
°° 
.
°° 
	WriteLine
°° 
(
°° 
$str
°° /
)
°°/ 0
;
°°0 1
}
±± 	
else
²² 
{
³³ 	
if
µµ 
(
µµ 
data
µµ 
!=
µµ 
null
µµ 
)
µµ 
{
¶¶ 
data
·· 
=
·· 
HttpUtility
·· "
.
··" #
	UrlEncode
··# ,
(
··, -
$str
··- /
,
··/ 0
Encoding
··1 9
.
··9 :
UTF8
··: >
)
··> ?
;
··? @
resp
¸¸ 
.
¸¸ 
	AddHeader
¸¸ 
(
¸¸ 
$str
¸¸ )
,
¸¸) *
$str
¸¸+ >
+
¸¸? @
data
¸¸A E
)
¸¸E F
;
¸¸F G
}
¹¹ 
}
ºº 	
}
»» 
private
¾¾ 
void
¾¾ 
GoodB2G2
¾¾ 
(
¾¾ 
HttpRequest
¾¾ %
req
¾¾& )
,
¾¾) *
HttpResponse
¾¾+ 7
resp
¾¾8 <
)
¾¾< =
{
¿¿ 
string
ÀÀ 
data
ÀÀ 
;
ÀÀ 
if
ÁÁ 

(
ÁÁ  
PrivateReturnsTrue
ÁÁ 
(
ÁÁ 
)
ÁÁ  
)
ÁÁ  !
{
ÂÂ 	
data
ÃÃ 
=
ÃÃ 
$str
ÃÃ 
;
ÃÃ 
{
ÅÅ 
try
ÆÆ 
{
ÇÇ 
using
ÈÈ 
(
ÈÈ 
	WebClient
ÈÈ $
client
ÈÈ% +
=
ÈÈ, -
new
ÈÈ. 1
	WebClient
ÈÈ2 ;
(
ÈÈ; <
)
ÈÈ< =
)
ÈÈ= >
{
ÉÉ 
using
ÊÊ 
(
ÊÊ 
StreamReader
ÊÊ +
sr
ÊÊ, .
=
ÊÊ/ 0
new
ÊÊ1 4
StreamReader
ÊÊ5 A
(
ÊÊA B
client
ÊÊB H
.
ÊÊH I
OpenRead
ÊÊI Q
(
ÊÊQ R
$str
ÊÊR k
)
ÊÊk l
)
ÊÊl m
)
ÊÊm n
{
ËË 
data
ÏÏ  
=
ÏÏ! "
sr
ÏÏ# %
.
ÏÏ% &
ReadLine
ÏÏ& .
(
ÏÏ. /
)
ÏÏ/ 0
;
ÏÏ0 1
}
ÐÐ 
}
ÑÑ 
}
ÒÒ 
catch
ÓÓ 
(
ÓÓ 
IOException
ÓÓ "
exceptIO
ÓÓ# +
)
ÓÓ+ ,
{
ÔÔ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
exceptIO
ÕÕ6 >
,
ÕÕ> ?
$str
ÕÕ@ [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ÖÖ 
}
×× 
}
ØØ 	
else
ÙÙ 
{
ÚÚ 	
data
ÝÝ 
=
ÝÝ 
null
ÝÝ 
;
ÝÝ 
}
ÞÞ 	
if
ßß 

(
ßß  
PrivateReturnsTrue
ßß 
(
ßß 
)
ßß  
)
ßß  !
{
àà 	
if
ââ 
(
ââ 
data
ââ 
!=
ââ 
null
ââ 
)
ââ 
{
ãã 
data
ää 
=
ää 
HttpUtility
ää "
.
ää" #
	UrlEncode
ää# ,
(
ää, -
$str
ää- /
,
ää/ 0
Encoding
ää1 9
.
ää9 :
UTF8
ää: >
)
ää> ?
;
ää? @
resp
åå 
.
åå 
	AddHeader
åå 
(
åå 
$str
åå )
,
åå) *
$str
åå+ >
+
åå? @
data
ååA E
)
ååE F
;
ååF G
}
ææ 
}
çç 	
}
èè 
public
êê 

override
êê 
void
êê 
Good
êê 
(
êê 
HttpRequest
êê )
req
êê* -
,
êê- .
HttpResponse
êê/ ;
resp
êê< @
)
êê@ A
{
ëë 
GoodG2B1
ìì 
(
ìì 
req
ìì 
,
ìì 
resp
ìì 
)
ìì 
;
ìì 
GoodG2B2
íí 
(
íí 
req
íí 
,
íí 
resp
íí 
)
íí 
;
íí 
GoodB2G1
îî 
(
îî 
req
îî 
,
îî 
resp
îî 
)
îî 
;
îî 
GoodB2G2
ïï 
(
ïï 
req
ïï 
,
ïï 
resp
ïï 
)
ïï 
;
ïï 
}
ðð 
}òò 
}óó W
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_09 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.##  
STATIC_READONLY_TRUE## #
)### $
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA  
STATIC_READONLY_TRUEAA #
)AA# $
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP !
STATIC_READONLY_FALSEPP $
)PP$ %
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[  
STATIC_READONLY_TRUE[[ #
)[[# $
{\\ 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii  
STATIC_READONLY_TRUEii #
)ii# $
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt  
STATIC_READONLY_TRUEtt #
)tt# $
{uu 	
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   #
STATIC_READONLY_FALSE
   $
)
  $ %
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ "
STATIC_READONLY_TRUE
´´ #
)
´´# $
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ "
STATIC_READONLY_TRUE
ÒÒ #
)
ÒÒ# $
{
ÓÓ 	
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ ­V
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_10 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 

staticTrue## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA 

staticTrueAA 
)AA 
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
staticFalsePP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[ 

staticTrue[[ 
)[[ 
{\\ 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii 

staticTrueii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt 

staticTruett 
)tt 
{uu 	
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   
staticFalse
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 

staticTrue
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ 

staticTrue
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ ¯Y
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_11 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 
StaticReturnsTrue##  
(##  !
)##! "
)##" #
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA
 
IOAA 
.AA 
StaticReturnsTrueAA 
(AA  
)AA  !
)AA! "
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
StaticReturnsFalsePP !
(PP! "
)PP" #
)PP# $
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[ 
StaticReturnsTrue[[  
([[  !
)[[! "
)[[" #
{\\ 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii 
StaticReturnsTrueii  
(ii  !
)ii! "
)ii" #
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt 
StaticReturnsTruett  
(tt  !
)tt! "
)tt" #
{uu 	
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
    
StaticReturnsFalse
   !
(
  ! "
)
  " #
)
  # $
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 
StaticReturnsTrue
´´  
(
´´  !
)
´´! "
)
´´" #
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ 
StaticReturnsTrue
ÒÒ  
(
ÒÒ  !
)
ÒÒ! "
)
ÒÒ" #
{
ÓÓ 	
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ N
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_12 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(##
 
IO## 
.## $
StaticReturnsTrueOrFalse## &
(##& '
)##' (
)##( )
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data>> 
=>> 
$str>> 
;>> 
}?? 	
if@@ 

(@@
 
IO@@ 
.@@ $
StaticReturnsTrueOrFalse@@ &
(@@& '
)@@' (
)@@( )
{AA 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respEE 
.EE 
	AddHeaderEE 
(EE 
$strEE )
,EE) *
$strEE+ >
+EE? @
dataEEA E
)EEE F
;EEF G
}FF 
}GG 	
elseHH 
{II 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
$strMM- /
,MM/ 0
EncodingMM1 9
.MM9 :
UTF8MM: >
)MM> ?
;MM? @
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
}QQ 
privateVV 
voidVV 
GoodG2BVV 
(VV 
HttpRequestVV $
reqVV% (
,VV( )
HttpResponseVV* 6
respVV7 ;
)VV; <
{WW 
stringXX 
dataXX 
;XX 
ifYY 

(YY
 
IOYY 
.YY $
StaticReturnsTrueOrFalseYY &
(YY& '
)YY' (
)YY( )
{ZZ 	
data\\ 
=\\ 
$str\\ 
;\\ 
}]] 	
else^^ 
{__ 	
dataaa 
=aa 
$straa 
;aa 
}bb 	
ifcc 

(cc
 
IOcc 
.cc $
StaticReturnsTrueOrFalsecc &
(cc& '
)cc' (
)cc( )
{dd 	
ifff 
(ff 
dataff 
!=ff 
nullff 
)ff 
{gg 
resphh 
.hh 
	AddHeaderhh 
(hh 
$strhh )
,hh) *
$strhh+ >
+hh? @
datahhA E
)hhE F
;hhF G
}ii 
}jj 	
elsekk 
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privateww 
voidww 
GoodB2Gww 
(ww 
HttpRequestww $
reqww% (
,ww( )
HttpResponseww* 6
respww7 ;
)ww; <
{xx 
stringyy 
datayy 
;yy 
ifzz 

(zz
 
IOzz 
.zz $
StaticReturnsTrueOrFalsezz &
(zz& '
)zz' (
)zz( )
{{{ 	
data|| 
=|| 
$str|| 
;|| 
{~~ 
try 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
    
=
  ! "
sr
  # %
.
  % &
ReadLine
  & .
(
  . /
)
  / 0
;
  0 1
}
¡¡ 
}
¢¢ 
}
££ 
catch
¤¤ 
(
¤¤ 
IOException
¤¤ "
exceptIO
¤¤# +
)
¤¤+ ,
{
¥¥ 
IO
¦¦ 
.
¦¦ 
Logger
¦¦ 
.
¦¦ 
Log
¦¦ !
(
¦¦! "
NLog
¦¦" &
.
¦¦& '
LogLevel
¦¦' /
.
¦¦/ 0
Warn
¦¦0 4
,
¦¦4 5
exceptIO
¦¦6 >
,
¦¦> ?
$str
¦¦@ [
)
¦¦[ \
;
¦¦\ ]
}
§§ 
}
¨¨ 
}
©© 	
if
ªª 

(
ªª
 
IO
ªª 
.
ªª &
StaticReturnsTrueOrFalse
ªª &
(
ªª& '
)
ªª' (
)
ªª( )
{
«« 	
if
­­ 
(
­­ 
data
­­ 
!=
­­ 
null
­­ 
)
­­ 
{
®® 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
$str
¯¯- /
,
¯¯/ 0
Encoding
¯¯1 9
.
¯¯9 :
UTF8
¯¯: >
)
¯¯> ?
;
¯¯? @
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
}
²² 	
else
³³ 
{
´´ 	
if
¶¶ 
(
¶¶ 
data
¶¶ 
!=
¶¶ 
null
¶¶ 
)
¶¶ 
{
·· 
data
¸¸ 
=
¸¸ 
HttpUtility
¸¸ "
.
¸¸" #
	UrlEncode
¸¸# ,
(
¸¸, -
$str
¸¸- /
,
¸¸/ 0
Encoding
¸¸1 9
.
¸¸9 :
UTF8
¸¸: >
)
¸¸> ?
;
¸¸? @
resp
¹¹ 
.
¹¹ 
	AddHeader
¹¹ 
(
¹¹ 
$str
¹¹ )
,
¹¹) *
$str
¹¹+ >
+
¹¹? @
data
¹¹A E
)
¹¹E F
;
¹¹F G
}
ºº 
}
»» 	
}
¼¼ 
public
¾¾ 

override
¾¾ 
void
¾¾ 
Good
¾¾ 
(
¾¾ 
HttpRequest
¾¾ )
req
¾¾* -
,
¾¾- .
HttpResponse
¾¾/ ;
resp
¾¾< @
)
¾¾@ A
{
ÀÀ 
GoodG2B
ÁÁ 
(
ÁÁ 
req
ÁÁ 
,
ÁÁ 
resp
ÁÁ 
)
ÁÁ 
;
ÁÁ 
GoodB2G
ÂÂ 
(
ÂÂ 
req
ÂÂ 
,
ÂÂ 
resp
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÃÃ 
}ÅÅ 
}ÆÆ óY
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_13 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.##  
STATIC_READONLY_FIVE## #
==### %
$num##% &
)##& '
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA  
STATIC_READONLY_FIVEAA #
==AA# %
$numAA% &
)AA& '
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP  
STATIC_READONLY_FIVEPP #
!=PP# %
$numPP% &
)PP& '
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[  
STATIC_READONLY_FIVE[[ #
==[[# %
$num[[% &
)[[& '
{\\ 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii  
STATIC_READONLY_FIVEii #
==ii# %
$numii% &
)ii& '
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt  
STATIC_READONLY_FIVEtt #
==tt# %
$numtt% &
)tt& '
{uu 	
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   "
STATIC_READONLY_FIVE
   #
!=
  # %
$num
  % &
)
  & '
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ "
STATIC_READONLY_FIVE
´´ #
==
´´# %
$num
´´% &
)
´´& '
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ "
STATIC_READONLY_FIVE
ÒÒ #
==
ÒÒ# %
$num
ÒÒ% &
)
ÒÒ& '
{
ÓÓ 	
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ Y
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_14 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 

staticFive## 
==## 
$num## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA 

staticFiveAA 
==AA 
$numAA 
)AA 
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 

staticFivePP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[ 

staticFive[[ 
==[[ 
$num[[ 
)[[ 
{\\ 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii 

staticFiveii 
==ii 
$numii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt 

staticFivett 
==tt 
$numtt 
)tt 
{uu 	
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   

staticFive
   
!=
   
$num
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 

staticFive
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ 

staticFive
ÒÒ 
==
ÒÒ 
$num
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ Íb
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_15 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
switch## 
(## 
$num## 
)## 
{$$ 	
case%% 
$num%% 
:%% 
data&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
data22  
=22! "
sr22# %
.22% &
ReadLine22& .
(22. /
)22/ 0
;220 1
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
exceptIO886 >
,88> ?
$str88@ [
)88[ \
;88\ ]
}99 
}:: 
break;; 
;;; 
default<< 
:<< 
data?? 
=?? 
null?? 
;?? 
break@@ 
;@@ 
}AA 	
switchBB 
(BB 
$numBB 
)BB 
{CC 	
caseDD 
$numDD 
:DD 
ifFF 
(FF 
dataFF 
!=FF 
nullFF 
)FF 
{GG 
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH )
,HH) *
$strHH+ >
+HH? @
dataHHA E
)HHE F
;HHF G
}II 
breakJJ 
;JJ 
defaultKK 
:KK 
IOMM 
.MM 
	WriteLineMM 
(MM 
$strMM /
)MM/ 0
;MM0 1
breakNN 
;NN 
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
HttpRequestTT %
reqTT& )
,TT) *
HttpResponseTT+ 7
respTT8 <
)TT< =
{UU 
stringVV 
dataVV 
;VV 
switchWW 
(WW 
$numWW 
)WW 
{XX 	
caseYY 
$numYY 
:YY 
data\\ 
=\\ 
null\\ 
;\\ 
break]] 
;]] 
default^^ 
:^^ 
data`` 
=`` 
$str`` 
;`` 
breakaa 
;aa 
}bb 	
switchcc 
(cc 
$numcc 
)cc 
{dd 	
caseee 
$numee 
:ee 
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respii 
.ii 
	AddHeaderii 
(ii 
$strii )
,ii) *
$strii+ >
+ii? @
dataiiA E
)iiE F
;iiF G
}jj 
breakkk 
;kk 
defaultll 
:ll 
IOnn 
.nn 
	WriteLinenn 
(nn 
$strnn /
)nn/ 0
;nn0 1
breakoo 
;oo 
}pp 	
}qq 
privatett 
voidtt 
GoodG2B2tt 
(tt 
HttpRequesttt %
reqtt& )
,tt) *
HttpResponsett+ 7
resptt8 <
)tt< =
{uu 
stringvv 
datavv 
;vv 
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
data{{ 
={{ 
$str{{ 
;{{ 
break|| 
;|| 
default}} 
:}} 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
default
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
   
using
¡¡ 
(
¡¡ 
StreamReader
¡¡ +
sr
¡¡, .
=
¡¡/ 0
new
¡¡1 4
StreamReader
¡¡5 A
(
¡¡A B
client
¡¡B H
.
¡¡H I
OpenRead
¡¡I Q
(
¡¡Q R
$str
¡¡R k
)
¡¡k l
)
¡¡l m
)
¡¡m n
{
¢¢ 
data
¦¦  
=
¦¦! "
sr
¦¦# %
.
¦¦% &
ReadLine
¦¦& .
(
¦¦. /
)
¦¦/ 0
;
¦¦0 1
}
§§ 
}
¨¨ 
}
©© 
catch
ªª 
(
ªª 
IOException
ªª "
exceptIO
ªª# +
)
ªª+ ,
{
«« 
IO
¬¬ 
.
¬¬ 
Logger
¬¬ 
.
¬¬ 
Log
¬¬ !
(
¬¬! "
NLog
¬¬" &
.
¬¬& '
LogLevel
¬¬' /
.
¬¬/ 0
Warn
¬¬0 4
,
¬¬4 5
exceptIO
¬¬6 >
,
¬¬> ?
$str
¬¬@ [
)
¬¬[ \
;
¬¬\ ]
}
­­ 
}
®® 
break
¯¯ 
;
¯¯ 
default
°° 
:
°° 
data
³³ 
=
³³ 
null
³³ 
;
³³ 
break
´´ 
;
´´ 
}
µµ 	
switch
¶¶ 
(
¶¶ 
$num
¶¶ 
)
¶¶ 
{
·· 	
case
¸¸ 
$num
¸¸ 
:
¸¸ 
IO
ºº 
.
ºº 
	WriteLine
ºº 
(
ºº 
$str
ºº /
)
ºº/ 0
;
ºº0 1
break
»» 
;
»» 
default
¼¼ 
:
¼¼ 
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 
data
ÀÀ 
=
ÀÀ 
HttpUtility
ÀÀ "
.
ÀÀ" #
	UrlEncode
ÀÀ# ,
(
ÀÀ, -
$str
ÀÀ- /
,
ÀÀ/ 0
Encoding
ÀÀ1 9
.
ÀÀ9 :
UTF8
ÀÀ: >
)
ÀÀ> ?
;
ÀÀ? @
resp
ÁÁ 
.
ÁÁ 
	AddHeader
ÁÁ 
(
ÁÁ 
$str
ÁÁ )
,
ÁÁ) *
$str
ÁÁ+ >
+
ÁÁ? @
data
ÁÁA E
)
ÁÁE F
;
ÁÁF G
}
ÂÂ 
break
ÃÃ 
;
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
private
ÈÈ 
void
ÈÈ 
GoodB2G2
ÈÈ 
(
ÈÈ 
HttpRequest
ÈÈ %
req
ÈÈ& )
,
ÈÈ) *
HttpResponse
ÈÈ+ 7
resp
ÈÈ8 <
)
ÈÈ< =
{
ÉÉ 
string
ÊÊ 
data
ÊÊ 
;
ÊÊ 
switch
ËË 
(
ËË 
$num
ËË 
)
ËË 
{
ÌÌ 	
case
ÍÍ 
$num
ÍÍ 
:
ÍÍ 
data
ÎÎ 
=
ÎÎ 
$str
ÎÎ 
;
ÎÎ 
{
ÐÐ 
try
ÑÑ 
{
ÒÒ 
using
ÓÓ 
(
ÓÓ 
	WebClient
ÓÓ $
client
ÓÓ% +
=
ÓÓ, -
new
ÓÓ. 1
	WebClient
ÓÓ2 ;
(
ÓÓ; <
)
ÓÓ< =
)
ÓÓ= >
{
ÔÔ 
using
ÕÕ 
(
ÕÕ 
StreamReader
ÕÕ +
sr
ÕÕ, .
=
ÕÕ/ 0
new
ÕÕ1 4
StreamReader
ÕÕ5 A
(
ÕÕA B
client
ÕÕB H
.
ÕÕH I
OpenRead
ÕÕI Q
(
ÕÕQ R
$str
ÕÕR k
)
ÕÕk l
)
ÕÕl m
)
ÕÕm n
{
ÖÖ 
data
ÚÚ  
=
ÚÚ! "
sr
ÚÚ# %
.
ÚÚ% &
ReadLine
ÚÚ& .
(
ÚÚ. /
)
ÚÚ/ 0
;
ÚÚ0 1
}
ÛÛ 
}
ÜÜ 
}
ÝÝ 
catch
ÞÞ 
(
ÞÞ 
IOException
ÞÞ "
exceptIO
ÞÞ# +
)
ÞÞ+ ,
{
ßß 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
exceptIO
àà6 >
,
àà> ?
$str
àà@ [
)
àà[ \
;
àà\ ]
}
áá 
}
ââ 
break
ãã 
;
ãã 
default
ää 
:
ää 
data
çç 
=
çç 
null
çç 
;
çç 
break
èè 
;
èè 
}
éé 	
switch
êê 
(
êê 
$num
êê 
)
êê 
{
ëë 	
case
ìì 
$num
ìì 
:
ìì 
if
îî 
(
îî 
data
îî 
!=
îî 
null
îî 
)
îî 
{
ïï 
data
ðð 
=
ðð 
HttpUtility
ðð "
.
ðð" #
	UrlEncode
ðð# ,
(
ðð, -
$str
ðð- /
,
ðð/ 0
Encoding
ðð1 9
.
ðð9 :
UTF8
ðð: >
)
ðð> ?
;
ðð? @
resp
ññ 
.
ññ 
	AddHeader
ññ 
(
ññ 
$str
ññ )
,
ññ) *
$str
ññ+ >
+
ññ? @
data
ññA E
)
ññE F
;
ññF G
}
òò 
break
óó 
;
óó 
default
ôô 
:
ôô 
IO
öö 
.
öö 
	WriteLine
öö 
(
öö 
$str
öö /
)
öö/ 0
;
öö0 1
break
÷÷ 
;
÷÷ 
}
øø 	
}
ùù 
public
ûû 

override
ûû 
void
ûû 
Good
ûû 
(
ûû 
HttpRequest
ûû )
req
ûû* -
,
ûû- .
HttpResponse
ûû/ ;
resp
ûû< @
)
ûû@ A
{
üü 
GoodG2B1
ýý 
(
ýý 
req
ýý 
,
ýý 
resp
ýý 
)
ýý 
;
ýý 
GoodG2B2
þþ 
(
þþ 
req
þþ 
,
þþ 
resp
þþ 
)
þþ 
;
þþ 
GoodB2G1
ÿÿ 
(
ÿÿ 
req
ÿÿ 
,
ÿÿ 
resp
ÿÿ 
)
ÿÿ 
;
ÿÿ 
GoodB2G2
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} ¬1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_16 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
while## 
(## 
true## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
break:: 
;:: 
};; 	
while<< 
(<< 
true<< 
)<< 
{== 	
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA )
,AA) *
$strAA+ >
+AA? @
dataAAA E
)AAE F
;AAF G
}BB 
breakCC 
;CC 
}DD 	
}EE 
privateII 
voidII 
GoodG2BII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataKK 
;KK 
whileLL 
(LL 
trueLL 
)LL 
{MM 	
dataOO 
=OO 
$strOO 
;OO 
breakPP 
;PP 
}QQ 	
whileRR 
(RR 
trueRR 
)RR 
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
breakYY 
;YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodB2G^^ 
(^^ 
HttpRequest^^ $
req^^% (
,^^( )
HttpResponse^^* 6
resp^^7 ;
)^^; <
{__ 
string`` 
data`` 
;`` 
whileaa 
(aa 
trueaa 
)aa 
{bb 	
datacc 
=cc 
$strcc 
;cc 
{ee 
tryff 
{gg 
usinghh 
(hh 
	WebClienthh $
clienthh% +
=hh, -
newhh. 1
	WebClienthh2 ;
(hh; <
)hh< =
)hh= >
{ii 
usingjj 
(jj 
StreamReaderjj +
srjj, .
=jj/ 0
newjj1 4
StreamReaderjj5 A
(jjA B
clientjjB H
.jjH I
OpenReadjjI Q
(jjQ R
$strjjR k
)jjk l
)jjl m
)jjm n
{kk 
dataoo  
=oo! "
sroo# %
.oo% &
ReadLineoo& .
(oo. /
)oo/ 0
;oo0 1
}pp 
}qq 
}rr 
catchss 
(ss 
IOExceptionss "
exceptIOss# +
)ss+ ,
{tt 
IOuu 
.uu 
Loggeruu 
.uu 
Loguu !
(uu! "
NLoguu" &
.uu& '
LogLeveluu' /
.uu/ 0
Warnuu0 4
,uu4 5
exceptIOuu6 >
,uu> ?
$struu@ [
)uu[ \
;uu\ ]
}vv 
}ww 
breakxx 
;xx 
}yy 	
whilezz 
(zz 
truezz 
)zz 
{{{ 	
if}} 
(}} 
data}} 
!=}} 
null}} 
)}} 
{~~ 
data 
= 
HttpUtility "
." #
	UrlEncode# ,
(, -
$str- /
,/ 0
Encoding1 9
.9 :
UTF8: >
)> ?
;? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} µ0
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_17 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data'' 
='' 
$str'' 
;'' 
{)) 	
try** 
{++ 
using,, 
(,, 
	WebClient,,  
client,,! '
=,,( )
new,,* -
	WebClient,,. 7
(,,7 8
),,8 9
),,9 :
{-- 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
client..> D
...D E
OpenRead..E M
(..M N
$str..N g
)..g h
)..h i
)..i j
{// 
data33 
=33 
sr33 !
.33! "
ReadLine33" *
(33* +
)33+ ,
;33, -
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
for<< 
(<< 
int<< 
j<< 
=<< 
$num<< 
;<< 
j<< 
<<< 
$num<< 
;<< 
j<<  
++<<  "
)<<" #
{== 	
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA )
,AA) *
$strAA+ >
+AA? @
dataAAA E
)AAE F
;AAF G
}BB 
}CC 	
}DD 
privateHH 
voidHH 
GoodG2BHH 
(HH 
HttpRequestHH $
reqHH% (
,HH( )
HttpResponseHH* 6
respHH7 ;
)HH; <
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
forMM 
(MM 
intMM 
jMM 
=MM 
$numMM 
;MM 
jMM 
<MM 
$numMM 
;MM 
jMM  
++MM  "
)MM" #
{NN 	
ifPP 
(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 
respRR 
.RR 
	AddHeaderRR 
(RR 
$strRR )
,RR) *
$strRR+ >
+RR? @
dataRRA E
)RRE F
;RRF G
}SS 
}TT 	
}UU 
privateXX 
voidXX 
GoodB2GXX 
(XX 
HttpRequestXX $
reqXX% (
,XX( )
HttpResponseXX* 6
respXX7 ;
)XX; <
{YY 
stringZZ 
dataZZ 
;ZZ 
data[[ 
=[[ 
$str[[ 
;[[ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	WebClient``  
client``! '
=``( )
new``* -
	WebClient``. 7
(``7 8
)``8 9
)``9 :
{aa 
usingbb 
(bb 
StreamReaderbb '
srbb( *
=bb+ ,
newbb- 0
StreamReaderbb1 =
(bb= >
clientbb> D
.bbD E
OpenReadbbE M
(bbM N
$strbbN g
)bbg h
)bbh i
)bbi j
{cc 
datagg 
=gg 
srgg !
.gg! "
ReadLinegg" *
(gg* +
)gg+ ,
;gg, -
}hh 
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk 
exceptIOkk '
)kk' (
{ll 
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm "
.mm" #
LogLevelmm# +
.mm+ ,
Warnmm, 0
,mm0 1
exceptIOmm2 :
,mm: ;
$strmm< W
)mmW X
;mmX Y
}nn 
}oo 	
forpp 
(pp 
intpp 
kpp 
=pp 
$numpp 
;pp 
kpp 
<pp 
$numpp 
;pp 
kpp  
++pp  "
)pp" #
{qq 	
ifss 
(ss 
datass 
!=ss 
nullss 
)ss 
{tt 
datauu 
=uu 
HttpUtilityuu "
.uu" #
	UrlEncodeuu# ,
(uu, -
$struu- /
,uu/ 0
Encodinguu1 9
.uu9 :
UTF8uu: >
)uu> ?
;uu? @
respvv 
.vv 
	AddHeadervv 
(vv 
$strvv )
,vv) *
$strvv+ >
+vv? @
datavvA E
)vvE F
;vvF G
}ww 
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
HttpRequest{{ )
req{{* -
,{{- .
HttpResponse{{/ ;
resp{{< @
){{@ A
{|| 
GoodG2B}} 
(}} 
req}} 
,}} 
resp}} 
)}} 
;}} 
GoodB2G~~ 
(~~ 
req~~ 
,~~ 
resp~~ 
)~~ 
;~~ 
} 
} 
} W
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_21 @
:A B
AbstractTestCaseWebC V
{ 
private!! 
bool!! 

badPrivate!! 
=!! 
false!! #
;!!# $
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data&& 
=&& 
$str&& 
;&& 
{(( 	
try)) 
{** 
using++ 
(++ 
	WebClient++  
client++! '
=++( )
new++* -
	WebClient++. 7
(++7 8
)++8 9
)++9 :
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
client--> D
.--D E
OpenRead--E M
(--M N
$str--N g
)--g h
)--h i
)--i j
{.. 
data22 
=22 
sr22 !
.22! "
ReadLine22" *
(22* +
)22+ ,
;22, -
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	

badPrivate;; 
=;; 
true;; 
;;; 
BadSink<< 
(<< 
data<< 
,<< 
req<< 
,<< 
resp<<  
)<<  !
;<<! "
}== 
private?? 
void?? 
BadSink?? 
(?? 
string?? 
data??  $
,??% &
HttpRequest??' 2
req??3 6
,??6 7
HttpResponse??8 D
resp??E I
)??I J
{@@ 
ifAA 

(AA 

badPrivateAA 
)AA 
{BB 	
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateLL 
boolLL 
goodB2G1PrivateLL  
=LL! "
falseLL# (
;LL( )
privateMM 
boolMM 
goodB2G2PrivateMM  
=MM! "
falseMM# (
;MM( )
privateNN 
boolNN 
goodG2BPrivateNN 
=NN  !
falseNN" '
;NN' (
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
HttpRequestPP )
reqPP* -
,PP- .
HttpResponsePP/ ;
respPP< @
)PP@ A
{QQ 
GoodB2G1RR 
(RR 
reqRR 
,RR 
respRR 
)RR 
;RR 
GoodB2G2SS 
(SS 
reqSS 
,SS 
respSS 
)SS 
;SS 
GoodG2BTT 
(TT 
reqTT 
,TT 
respTT 
)TT 
;TT 
}UU 
privateXX 
voidXX 
GoodB2G1XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
;ZZ 
data[[ 
=[[ 
$str[[ 
;[[ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	WebClient``  
client``! '
=``( )
new``* -
	WebClient``. 7
(``7 8
)``8 9
)``9 :
{aa 
usingbb 
(bb 
StreamReaderbb '
srbb( *
=bb+ ,
newbb- 0
StreamReaderbb1 =
(bb= >
clientbb> D
.bbD E
OpenReadbbE M
(bbM N
$strbbN g
)bbg h
)bbh i
)bbi j
{cc 
datagg 
=gg 
srgg !
.gg! "
ReadLinegg" *
(gg* +
)gg+ ,
;gg, -
}hh 
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk 
exceptIOkk '
)kk' (
{ll 
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm "
.mm" #
LogLevelmm# +
.mm+ ,
Warnmm, 0
,mm0 1
exceptIOmm2 :
,mm: ;
$strmm< W
)mmW X
;mmX Y
}nn 
}oo 	
goodB2G1Privatepp 
=pp 
falsepp 
;pp  
GoodB2G1Sinkqq 
(qq 
dataqq 
,qq 
reqqq 
,qq  
respqq! %
)qq% &
;qq& '
}rr 
privatett 
voidtt 
GoodB2G1Sinktt 
(tt 
stringtt $
datatt% )
,tt* +
HttpRequesttt, 7
reqtt8 ;
,tt; <
HttpResponsett= I
respttJ N
)ttN O
{uu 
ifvv 

(vv 
goodB2G1Privatevv 
)vv 
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
$stryy /
)yy/ 0
;yy0 1
}zz 	
else{{ 
{|| 	
if~~ 
(~~ 
data~~ 
!=~~ 
null~~ 
)~~ 
{ 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
{
 	
try
 
{
 
using
 
(
 
	WebClient
  
client
! '
=
( )
new
* -
	WebClient
. 7
(
7 8
)
8 9
)
9 :
{
 
using
 
(
 
StreamReader
 '
sr
( *
=
+ ,
new
- 0
StreamReader
1 =
(
= >
client
> D
.
D E
OpenRead
E M
(
M N
$str
N g
)
g h
)
h i
)
i j
{
 
data
 
=
 
sr
 !
.
! "
ReadLine
" *
(
* +
)
+ ,
;
, -
}
 
}
 
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
goodB2G2Private
 
=
 
true
 
;
 
GoodB2G2Sink
   
(
   
data
   
,
   
req
   
,
    
resp
  ! %
)
  % &
;
  & '
}
¡¡ 
private
££ 
void
££ 
GoodB2G2Sink
££ 
(
££ 
string
££ $
data
££% )
,
££* +
HttpRequest
££, 7
req
££8 ;
,
££; <
HttpResponse
££= I
resp
££J N
)
££N O
{
¤¤ 
if
¥¥ 

(
¥¥ 
goodB2G2Private
¥¥ 
)
¥¥ 
{
¦¦ 	
if
¨¨ 
(
¨¨ 
data
¨¨ 
!=
¨¨ 
null
¨¨ 
)
¨¨ 
{
©© 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
$str
ªª- /
,
ªª/ 0
Encoding
ªª1 9
.
ªª9 :
UTF8
ªª: >
)
ªª> ?
;
ªª? @
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodG2B
±± 
(
±± 
HttpRequest
±± $
req
±±% (
,
±±( )
HttpResponse
±±* 6
resp
±±7 ;
)
±±; <
{
²² 
string
³³ 
data
³³ 
;
³³ 
data
µµ 
=
µµ 
$str
µµ 
;
µµ 
goodG2BPrivate
¶¶ 
=
¶¶ 
true
¶¶ 
;
¶¶ 
GoodG2BSink
·· 
(
·· 
data
·· 
,
·· 
req
·· 
,
·· 
resp
··  $
)
··$ %
;
··% &
}
¸¸ 
private
ºº 
void
ºº 
GoodG2BSink
ºº 
(
ºº 
string
ºº #
data
ºº$ (
,
ºº) *
HttpRequest
ºº+ 6
req
ºº7 :
,
ºº: ;
HttpResponse
ºº< H
resp
ººI M
)
ººM N
{
»» 
if
¼¼ 

(
¼¼ 
goodG2BPrivate
¼¼ 
)
¼¼ 
{
½½ 	
if
¿¿ 
(
¿¿ 
data
¿¿ 
!=
¿¿ 
null
¿¿ 
)
¿¿ 
{
ÀÀ 
resp
ÁÁ 
.
ÁÁ 
	AddHeader
ÁÁ 
(
ÁÁ 
$str
ÁÁ )
,
ÁÁ) *
$str
ÁÁ+ >
+
ÁÁ? @
data
ÁÁA E
)
ÁÁE F
;
ÁÁF G
}
ÂÂ 
}
ÃÃ 	
}
ÄÄ 
}ÆÆ 
}ÇÇ >
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

static!! 
bool!! 
badPublicStatic!! &
=!!' (
false!!) .
;!!. /
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
=%% 
null%% 
;%% 
data&& 
=&& 
$str&& 
;&& 
{(( 	
try)) 
{** 
using++ 
(++ 
	WebClient++  
client++! '
=++( )
new++* -
	WebClient++. 7
(++7 8
)++8 9
)++9 :
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
client--> D
.--D E
OpenRead--E M
(--M N
$str--N g
)--g h
)--h i
)--i j
{.. 
data22 
=22 
sr22 !
.22! "
ReadLine22" *
(22* +
)22+ ,
;22, -
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	
badPublicStatic;; 
=;; 
true;; 
;;; G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22b<< C
.<<C D
BadSink<<D K
(<<K L
data<<L P
,<<Q R
req<<S V
,<<V W
resp<<X \
)<<\ ]
;<<] ^
}== 
public@@ 

static@@ 
bool@@  
goodB2G1PublicStatic@@ +
=@@, -
false@@. 3
;@@3 4
publicAA 

staticAA 
boolAA  
goodB2G2PublicStaticAA +
=AA, -
falseAA. 3
;AA3 4
publicBB 

staticBB 
boolBB 
goodG2BPublicStaticBB *
=BB+ ,
falseBB- 2
;BB2 3
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
HttpRequestDD )
reqDD* -
,DD- .
HttpResponseDD/ ;
respDD< @
)DD@ A
{EE 
GoodB2G1FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
GoodB2G2GG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
GoodG2BHH 
(HH 
reqHH 
,HH 
respHH 
)HH 
;HH 
}II 
privateLL 
voidLL 
GoodB2G1LL 
(LL 
HttpRequestLL %
reqLL& )
,LL) *
HttpResponseLL+ 7
respLL8 <
)LL< =
{MM 
stringNN 
dataNN 
=NN 
nullNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	 
goodB2G1PublicStaticdd 
=dd 
falsedd $
;dd$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22bee C
.eeC D
GoodB2G1SinkeeD P
(eeP Q
dataeeQ U
,eeV W
reqeeX [
,ee[ \
respee] a
)eea b
;eeb c
}ff 
privateii 
voidii 
GoodB2G2ii 
(ii 
HttpRequestii %
reqii& )
,ii) *
HttpResponseii+ 7
respii8 <
)ii< =
{jj 
stringkk 
datakk 
=kk 
nullkk 
;kk 
datall 
=ll 
$strll 
;ll 
{nn 	
tryoo 
{pp 
usingqq 
(qq 
	WebClientqq  
clientqq! '
=qq( )
newqq* -
	WebClientqq. 7
(qq7 8
)qq8 9
)qq9 :
{rr 
usingss 
(ss 
StreamReaderss '
srss( *
=ss+ ,
newss- 0
StreamReaderss1 =
(ss= >
clientss> D
.ssD E
OpenReadssE M
(ssM N
$strssN g
)ssg h
)ssh i
)ssi j
{tt 
dataxx 
=xx 
srxx !
.xx! "
ReadLinexx" *
(xx* +
)xx+ ,
;xx, -
}yy 
}zz 
}{{ 
catch|| 
(|| 
IOException|| 
exceptIO|| '
)||' (
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ 
(~~ 
NLog~~ "
.~~" #
LogLevel~~# +
.~~+ ,
Warn~~, 0
,~~0 1
exceptIO~~2 :
,~~: ;
$str~~< W
)~~W X
;~~X Y
} 
}
 	"
goodB2G2PublicStatic
 
=
 
true
 #
;
# $I
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22b
 C
.
C D
GoodB2G2Sink
D P
(
P Q
data
Q U
,
V W
req
X [
,
[ \
resp
] a
)
a b
;
b c
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
=
 
null
 
;
 
data
 
=
 
$str
 
;
 !
goodG2BPublicStatic
 
=
 
true
 "
;
" #I
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22b
 C
.
C D
GoodG2BSink
D O
(
O P
data
P T
,
U V
req
W Z
,
Z [
resp
\ `
)
` a
;
a b
}
 
} 
} Þ#
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22a G
.G H
badPublicStaticH W
)W X
{   	
if"" 
("" 
data"" 
!="" 
null"" 
)"" 
{## 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22a44 G
.44G H 
goodB2G1PublicStatic44H \
)44\ ]
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
$str??- /
,??/ 0
Encoding??1 9
.??9 :
UTF8??: >
)??> ?
;??? @
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22aHH G
.HHG H 
goodB2G2PublicStaticHHH \
)HH\ ]
{II 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
$strMM- /
,MM/ 0
EncodingMM1 9
.MM9 :
UTF8MM: >
)MM> ?
;MM? @
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_22a\\ G
.\\G H
goodG2BPublicStatic\\H [
)\\[ \
{]] 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm Ç1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_31 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
dataCopy"" 
;"" 
{## 	
string$$ 
data$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
dataCopy:: 
=:: 
data:: 
;:: 
};; 	
{<< 	
string== 
data== 
=== 
dataCopy== "
;==" #
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA )
,AA) *
$strAA+ >
+AA? @
dataAAA E
)AAE F
;AAF G
}BB 
}CC 	
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
HttpRequestGG )
reqGG* -
,GG- .
HttpResponseGG/ ;
respGG< @
)GG@ A
{HH 
GoodG2BII 
(II 
reqII 
,II 
respII 
)II 
;II 
GoodB2GJJ 
(JJ 
reqJJ 
,JJ 
respJJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
HttpRequestNN $
reqNN% (
,NN( )
HttpResponseNN* 6
respNN7 ;
)NN; <
{OO 
stringPP 
dataCopyPP 
;PP 
{QQ 	
stringRR 
dataRR 
;RR 
dataTT 
=TT 
$strTT 
;TT 
dataCopyUU 
=UU 
dataUU 
;UU 
}VV 	
{WW 	
stringXX 
dataXX 
=XX 
dataCopyXX "
;XX" #
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
dataCopydd 
;dd 
{ee 	
stringff 
dataff 
;ff 
datagg 
=gg 
$strgg 
;gg 
{ii 
tryjj 
{kk 
usingll 
(ll 
	WebClientll $
clientll% +
=ll, -
newll. 1
	WebClientll2 ;
(ll; <
)ll< =
)ll= >
{mm 
usingnn 
(nn 
StreamReadernn +
srnn, .
=nn/ 0
newnn1 4
StreamReadernn5 A
(nnA B
clientnnB H
.nnH I
OpenReadnnI Q
(nnQ R
$strnnR k
)nnk l
)nnl m
)nnm n
{oo 
datass  
=ss! "
srss# %
.ss% &
ReadLiness& .
(ss. /
)ss/ 0
;ss0 1
}tt 
}uu 
}vv 
catchww 
(ww 
IOExceptionww "
exceptIOww# +
)ww+ ,
{xx 
IOyy 
.yy 
Loggeryy 
.yy 
Logyy !
(yy! "
NLogyy" &
.yy& '
LogLevelyy' /
.yy/ 0
Warnyy0 4
,yy4 5
exceptIOyy6 >
,yy> ?
$stryy@ [
)yy[ \
;yy\ ]
}zz 
}{{ 
dataCopy|| 
=|| 
data|| 
;|| 
}}} 	
{~~ 	
string 
data 
= 
dataCopy "
;" #
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
} 
} Á5
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_41 @
:A B
AbstractTestCaseWebC V
{ 
private   
static   
void   
BadSink   
(    
string    &
data  ' +
,  , -
HttpRequest  . 9
req  : =
,  = >
HttpResponse  ? K
resp  L P
)  P Q
{!! 
if## 

(## 
data## 
!=## 
null## 
)## 
{$$ 	
resp%% 
.%% 
	AddHeader%% 
(%% 
$str%% %
,%%% &
$str%%' :
+%%; <
data%%= A
)%%A B
;%%B C
}&& 	
}'' 
public)) 

override)) 
void)) 
Bad)) 
()) 
HttpRequest)) (
req))) ,
,)), -
HttpResponse)). :
resp)); ?
)))? @
{** 
string++ 
data++ 
;++ 
data,, 
=,, 
$str,, 
;,, 
{.. 	
try// 
{00 
using11 
(11 
	WebClient11  
client11! '
=11( )
new11* -
	WebClient11. 7
(117 8
)118 9
)119 :
{22 
using33 
(33 
StreamReader33 '
sr33( *
=33+ ,
new33- 0
StreamReader331 =
(33= >
client33> D
.33D E
OpenRead33E M
(33M N
$str33N g
)33g h
)33h i
)33i j
{44 
data88 
=88 
sr88 !
.88! "
ReadLine88" *
(88* +
)88+ ,
;88, -
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
BadSinkAA 
(AA 
dataAA 
,AA 
reqAA 
,AA 
respAA  
)AA! "
;AA" #
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
HttpRequestEE )
reqEE* -
,EE- .
HttpResponseEE/ ;
respEE< @
)EE@ A
{FF 
GoodG2BGG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
GoodB2GHH 
(HH 
reqHH 
,HH 
respHH 
)HH 
;HH 
}II 
privateKK 
staticKK 
voidKK 
GoodG2BSinkKK #
(KK# $
stringKK$ *
dataKK+ /
,KK0 1
HttpRequestKK2 =
reqKK> A
,KKA B
HttpResponseKKC O
respKKP T
)KKT U
{LL 
ifNN 

(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 	
respPP 
.PP 
	AddHeaderPP 
(PP 
$strPP %
,PP% &
$strPP' :
+PP; <
dataPP= A
)PPA B
;PPB C
}QQ 	
}RR 
privateUU 
staticUU 
voidUU 
GoodG2BUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataYY 
=YY 
$strYY 
;YY 
GoodG2BSinkZZ 
(ZZ 
dataZZ 
,ZZ 
reqZZ 
,ZZ 
respZZ  $
)ZZ% &
;ZZ& '
}[[ 
private]] 
static]] 
void]] 
GoodB2GSink]] #
(]]# $
string]]$ *
data]]+ /
,]]0 1
HttpRequest]]2 =
req]]> A
,]]A B
HttpResponse]]C O
resp]]P T
)]]T U
{^^ 
if`` 

(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 	
databb 
=bb 
HttpUtilitybb 
.bb 
	UrlEncodebb (
(bb( )
$strbb) +
,bb+ ,
Encodingbb- 5
.bb5 6
UTF8bb6 :
)bb: ;
;bb; <
respcc 
.cc 
	AddHeadercc 
(cc 
$strcc %
,cc% &
$strcc' :
+cc; <
datacc= A
)ccA B
;ccB C
}dd 	
}ee 
privatehh 
statichh 
voidhh 
GoodB2Ghh 
(hh  
HttpRequesthh  +
reqhh, /
,hh/ 0
HttpResponsehh1 =
resphh> B
)hhB C
{ii 
stringjj 
datajj 
;jj 
datakk 
=kk 
$strkk 
;kk 
{mm 	
trynn 
{oo 
usingpp 
(pp 
	WebClientpp  
clientpp! '
=pp( )
newpp* -
	WebClientpp. 7
(pp7 8
)pp8 9
)pp9 :
{qq 
usingrr 
(rr 
StreamReaderrr '
srrr( *
=rr+ ,
newrr- 0
StreamReaderrr1 =
(rr= >
clientrr> D
.rrD E
OpenReadrrE M
(rrM N
$strrrN g
)rrg h
)rrh i
)rri j
{ss 
dataww 
=ww 
srww !
.ww! "
ReadLineww" *
(ww* +
)ww+ ,
;ww, -
}xx 
}yy 
}zz 
catch{{ 
({{ 
IOException{{ 
exceptIO{{ '
){{' (
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
exceptIO}}2 :
,}}: ;
$str}}< W
)}}W X
;}}X Y
}~~ 
} 	
GoodB2GSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
% &
;
& '
}
 
} 
} ±6
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_42 @
:A B
AbstractTestCaseWebC V
{ 
private   
static   
string   
	BadSource   #
(  # $
HttpRequest  $ /
req  0 3
,  3 4
HttpResponse  5 A
resp  B F
)  F G
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
return88 
data88 
;88 
}99 
public;; 

override;; 
void;; 
Bad;; 
(;; 
HttpRequest;; (
req;;) ,
,;;, -
HttpResponse;;. :
resp;;; ?
);;? @
{<< 
string== 
data== 
=== 
	BadSource== 
(==  
req==  #
,==# $
resp==% )
)==) *
;==* +
if?? 

(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 	
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
privateGG 
staticGG 
stringGG 
GoodG2BSourceGG '
(GG' (
HttpRequestGG( 3
reqGG4 7
,GG7 8
HttpResponseGG9 E
respGGF J
)GGJ K
{HH 
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
returnLL 
dataLL 
;LL 
}MM 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
HttpRequestOO  +
reqOO, /
,OO/ 0
HttpResponseOO1 =
respOO> B
)OOB C
{PP 
stringQQ 
dataQQ 
=QQ 
GoodG2BSourceQQ #
(QQ# $
reqQQ$ '
,QQ' (
respQQ) -
)QQ- .
;QQ. /
ifSS 

(SS 
dataSS 
!=SS 
nullSS 
)SS 
{TT 	
respUU 
.UU 
	AddHeaderUU 
(UU 
$strUU %
,UU% &
$strUU' :
+UU; <
dataUU= A
)UUA B
;UUB C
}VV 	
}WW 
privateZZ 
staticZZ 
stringZZ 
GoodB2GSourceZZ '
(ZZ' (
HttpRequestZZ( 3
reqZZ4 7
,ZZ7 8
HttpResponseZZ9 E
respZZF J
)ZZJ K
{[[ 
string\\ 
data\\ 
;\\ 
data]] 
=]] 
$str]] 
;]] 
{__ 	
try`` 
{aa 
usingbb 
(bb 
	WebClientbb  
clientbb! '
=bb( )
newbb* -
	WebClientbb. 7
(bb7 8
)bb8 9
)bb9 :
{cc 
usingdd 
(dd 
StreamReaderdd '
srdd( *
=dd+ ,
newdd- 0
StreamReaderdd1 =
(dd= >
clientdd> D
.ddD E
OpenReadddE M
(ddM N
$strddN g
)ddg h
)ddh i
)ddi j
{ee 
dataii 
=ii 
srii !
.ii! "
ReadLineii" *
(ii* +
)ii+ ,
;ii, -
}jj 
}kk 
}ll 
catchmm 
(mm 
IOExceptionmm 
exceptIOmm '
)mm' (
{nn 
IOoo 
.oo 
Loggeroo 
.oo 
Logoo 
(oo 
NLogoo "
.oo" #
LogLeveloo# +
.oo+ ,
Warnoo, 0
,oo0 1
exceptIOoo2 :
,oo: ;
$stroo< W
)ooW X
;ooX Y
}pp 
}qq 	
returnrr 
datarr 
;rr 
}ss 
privateuu 
staticuu 
voiduu 
GoodB2Guu 
(uu  
HttpRequestuu  +
requu, /
,uu/ 0
HttpResponseuu1 =
respuu> B
)uuB C
{vv 
stringww 
dataww 
=ww 
GoodB2GSourceww #
(ww# $
reqww$ '
,ww' (
respww) -
)ww- .
;ww. /
ifyy 

(yy 
datayy 
!=yy 
nullyy 
)yy 
{zz 	
data{{ 
={{ 
HttpUtility{{ 
.{{ 
	UrlEncode{{ (
({{( )
$str{{) +
,{{+ ,
Encoding{{- 5
.{{5 6
UTF8{{6 :
){{: ;
;{{; <
resp|| 
.|| 
	AddHeader|| 
(|| 
$str|| %
,||% &
$str||' :
+||; <
data||= A
)||A B
;||B C
}}} 	
}~~ 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} 9
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_45 @
:A B
AbstractTestCaseWebC V
{ 
private   
string   
dataBad   
;   
private!! 
string!! 
dataGoodG2B!! 
;!! 
private"" 
string"" 
dataGoodB2G"" 
;"" 
private$$ 
void$$ 
BadSink$$ 
($$ 
HttpRequest$$ $
req$$% (
,$$( )
HttpResponse$$* 6
resp$$7 ;
)$$; <
{%% 
string&& 
data&& 
=&& 
dataBad&& 
;&& 
if(( 

((( 
data(( 
!=(( 
null(( 
)(( 
{)) 	
resp** 
.** 
	AddHeader** 
(** 
$str** %
,**% &
$str**' :
+**; <
data**= A
)**A B
;**B C
}++ 	
},, 
public.. 

override.. 
void.. 
Bad.. 
(.. 
HttpRequest.. (
req..) ,
,.., -
HttpResponse... :
resp..; ?
)..? @
{// 
string00 
data00 
;00 
data11 
=11 
$str11 
;11 
{33 	
try44 
{55 
using66 
(66 
	WebClient66  
client66! '
=66( )
new66* -
	WebClient66. 7
(667 8
)668 9
)669 :
{77 
using88 
(88 
StreamReader88 '
sr88( *
=88+ ,
new88- 0
StreamReader881 =
(88= >
client88> D
.88D E
OpenRead88E M
(88M N
$str88N g
)88g h
)88h i
)88i j
{99 
data== 
=== 
sr== !
.==! "
ReadLine==" *
(==* +
)==+ ,
;==, -
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
}EE 	
dataBadFF 
=FF 
dataFF 
;FF 
BadSinkGG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
HttpRequestKK )
reqKK* -
,KK- .
HttpResponseKK/ ;
respKK< @
)KK@ A
{LL 
GoodG2BMM 
(MM 
reqMM 
,MM 
respMM 
)MM 
;MM 
GoodB2GNN 
(NN 
reqNN 
,NN 
respNN 
)NN 
;NN 
}OO 
privateQQ 
voidQQ 
GoodG2BSinkQQ 
(QQ 
HttpRequestQQ (
reqQQ) ,
,QQ, -
HttpResponseQQ. :
respQQ; ?
)QQ? @
{RR 
stringSS 
dataSS 
=SS 
dataGoodG2BSS !
;SS! "
ifUU 

(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 	
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW %
,WW% &
$strWW' :
+WW; <
dataWW= A
)WWA B
;WWB C
}XX 	
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
HttpRequest\\ $
req\\% (
,\\( )
HttpResponse\\* 6
resp\\7 ;
)\\; <
{]] 
string^^ 
data^^ 
;^^ 
data`` 
=`` 
$str`` 
;`` 
dataGoodG2Baa 
=aa 
dataaa 
;aa 
GoodG2BSinkbb 
(bb 
reqbb 
,bb 
respbb 
)bb 
;bb 
}cc 
privateee 
voidee 
GoodB2GSinkee 
(ee 
HttpRequestee (
reqee) ,
,ee, -
HttpResponseee. :
respee; ?
)ee? @
{ff 
stringgg 
datagg 
=gg 
dataGoodB2Ggg !
;gg! "
ifii 

(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 	
datakk 
=kk 
HttpUtilitykk 
.kk 
	UrlEncodekk (
(kk( )
$strkk) +
,kk+ ,
Encodingkk- 5
.kk5 6
UTF8kk6 :
)kk: ;
;kk; <
respll 
.ll 
	AddHeaderll 
(ll 
$strll %
,ll% &
$strll' :
+ll; <
datall= A
)llA B
;llB C
}mm 	
}nn 
privateqq 
voidqq 
GoodB2Gqq 
(qq 
HttpRequestqq $
reqqq% (
,qq( )
HttpResponseqq* 6
respqq7 ;
)qq; <
{rr 
stringss 
datass 
;ss 
datatt 
=tt 
$strtt 
;tt 
{vv 	
tryww 
{xx 
usingyy 
(yy 
	WebClientyy  
clientyy! '
=yy( )
newyy* -
	WebClientyy. 7
(yy7 8
)yy8 9
)yy9 :
{zz 
using{{ 
({{ 
StreamReader{{ '
sr{{( *
={{+ ,
new{{- 0
StreamReader{{1 =
({{= >
client{{> D
.{{D E
OpenRead{{E M
({{M N
$str{{N g
){{g h
){{h i
){{i j
{|| 
data
 
=
 
sr
 !
.
! "
ReadLine
" *
(
* +
)
+ ,
;
, -
}
 
}
 
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
dataGoodB2G
 
=
 
data
 
;
 
GoodB2GSink
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_51a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_51b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88] ^
;88^ _
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_51bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HHa b
;HHb c
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_51bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dda b
;ddb c
}ee 
}gg 
}hh »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_51b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88\ ]
;88] ^
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HH` a
;HHa b
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dd` a
;dda b
}ee 
}gg 
}hh ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52c C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52c'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52c-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_52c A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88\ ]
;88] ^
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HH` a
;HHa b
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dd` a
;dda b
}ee 
}gg 
}hh ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53c C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53c'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53c-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53c A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53d C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53d'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53d-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_53d A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88\ ]
;88] ^
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HH` a
;HHa b
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dd` a
;dda b
}ee 
}gg 
}hh ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54c C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54c'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54c-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54c A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54d C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54d'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54d-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54d A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54e C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54e'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54e-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_54e A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ¬
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_61a A
:B C
AbstractTestCaseWebD W
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_61b Q
.Q R
	BadSourceR [
([ \
req\ _
,_ `
respa e
)e f
;f g
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_61b11 Q
.11Q R
GoodG2BSource11R _
(11_ `
req11` c
,11c d
resp11e i
)11i j
;11j k
if33 

(33 
data33 
!=33 
null33 
)33 
{44 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_61b<< Q
.<<Q R
GoodB2GSource<<R _
(<<_ `
req<<` c
,<<c d
resp<<e i
)<<i j
;<<j k
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
$str@@) +
,@@+ ,
Encoding@@- 5
.@@5 6
UTF8@@6 :
)@@: ;
;@@; <
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF 
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_61b A
{ 
public   

static   
string   
	BadSource   "
(  " #
HttpRequest  # .
req  / 2
,  2 3
HttpResponse  4 @
resp  A E
)  E F
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
return88 
data88 
;88 
}99 
public>> 

static>> 
string>> 
GoodG2BSource>> &
(>>& '
HttpRequest>>' 2
req>>3 6
,>>6 7
HttpResponse>>8 D
resp>>E I
)>>I J
{?? 
string@@ 
data@@ 
;@@ 
dataBB 
=BB 
$strBB 
;BB 
returnCC 
dataCC 
;CC 
}DD 
publicGG 

staticGG 
stringGG 
GoodB2GSourceGG &
(GG& '
HttpRequestGG' 2
reqGG3 6
,GG6 7
HttpResponseGG8 D
respGGE I
)GGI J
{HH 
stringII 
dataII 
;II 
dataJJ 
=JJ 
$strJJ 
;JJ 
{LL 	
tryMM 
{NN 
usingOO 
(OO 
	WebClientOO  
clientOO! '
=OO( )
newOO* -
	WebClientOO. 7
(OO7 8
)OO8 9
)OO9 :
{PP 
usingQQ 
(QQ 
StreamReaderQQ '
srQQ( *
=QQ+ ,
newQQ- 0
StreamReaderQQ1 =
(QQ= >
clientQQ> D
.QQD E
OpenReadQQE M
(QQM N
$strQQN g
)QQg h
)QQh i
)QQi j
{RR 
dataVV 
=VV 
srVV !
.VV! "
ReadLineVV" *
(VV* +
)VV+ ,
;VV, -
}WW 
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ '
)ZZ' (
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
exceptIO\\2 :
,\\: ;
$str\\< W
)\\W X
;\\X Y
}]] 
}^^ 	
return__ 
data__ 
;__ 
}`` 
}bb 
}cc Ñ.
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_66a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
string88 
[88 
]88 
	dataArray88 
=88 
new88  
string88! '
[88' (
$num88( )
]88) *
;88* +
	dataArray99 
[99 
$num99 
]99 
=99 
data99 
;99 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_66b:: C
.::C D
BadSink::D K
(::K L
	dataArray::L U
,::V W
req::X [
,::[ \
resp::] a
)::b c
;::c d
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
HttpRequest>> )
req>>* -
,>>- .
HttpResponse>>/ ;
resp>>< @
)>>@ A
{?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
HttpRequestEE  +
reqEE, /
,EE/ 0
HttpResponseEE1 =
respEE> B
)EEB C
{FF 
stringGG 
dataGG 
;GG 
dataII 
=II 
$strII 
;II 
stringJJ 
[JJ 
]JJ 
	dataArrayJJ 
=JJ 
newJJ  
stringJJ! '
[JJ' (
$numJJ( )
]JJ) *
;JJ* +
	dataArrayKK 
[KK 
$numKK 
]KK 
=KK 
dataKK 
;KK G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_66bLL C
.LLC D
GoodG2BSinkLLD O
(LLO P
	dataArrayLLP Y
,LLZ [
reqLL\ _
,LL_ `
respLLa e
)LLf g
;LLg h
}MM 
privatePP 
staticPP 
voidPP 
GoodB2GPP 
(PP  
HttpRequestPP  +
reqPP, /
,PP/ 0
HttpResponsePP1 =
respPP> B
)PPB C
{QQ 
stringRR 
dataRR 
;RR 
dataSS 
=SS 
$strSS 
;SS 
{UU 	
tryVV 
{WW 
usingXX 
(XX 
	WebClientXX  
clientXX! '
=XX( )
newXX* -
	WebClientXX. 7
(XX7 8
)XX8 9
)XX9 :
{YY 
usingZZ 
(ZZ 
StreamReaderZZ '
srZZ( *
=ZZ+ ,
newZZ- 0
StreamReaderZZ1 =
(ZZ= >
clientZZ> D
.ZZD E
OpenReadZZE M
(ZZM N
$strZZN g
)ZZg h
)ZZh i
)ZZi j
{[[ 
data__ 
=__ 
sr__ !
.__! "
ReadLine__" *
(__* +
)__+ ,
;__, -
}`` 
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc 
exceptIOcc '
)cc' (
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee 
(ee 
NLogee "
.ee" #
LogLevelee# +
.ee+ ,
Warnee, 0
,ee0 1
exceptIOee2 :
,ee: ;
$stree< W
)eeW X
;eeX Y
}ff 
}gg 	
stringhh 
[hh 
]hh 
	dataArrayhh 
=hh 
newhh  
stringhh! '
[hh' (
$numhh( )
]hh) *
;hh* +
	dataArrayii 
[ii 
$numii 
]ii 
=ii 
dataii 
;ii G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_66bjj C
.jjC D
GoodB2GSinkjjD O
(jjO P
	dataArrayjjP Y
,jjZ [
reqjj\ _
,jj_ `
respjja e
)jjf g
;jjg h
}kk 
}mm 
}nn Å
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_66b A
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA /
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67a A
:B C
AbstractTestCaseWebD W
{ 
public   

class   
	Container   
{!! 
public"" 
string"" 
containerOne"" "
;""" #
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
data(( 
=(( 
$str(( 
;(( 
{** 	
try++ 
{,, 
using-- 
(-- 
	WebClient--  
client--! '
=--( )
new--* -
	WebClient--. 7
(--7 8
)--8 9
)--9 :
{.. 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
client//> D
.//D E
OpenRead//E M
(//M N
$str//N g
)//g h
)//h i
)//i j
{00 
data44 
=44 
sr44 !
.44! "
ReadLine44" *
(44* +
)44+ ,
;44, -
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	
	Container== 
dataContainer== 
===  !
new==" %
	Container==& /
(==/ 0
)==0 1
;==1 2
dataContainer>> 
.>> 
containerOne>> "
=>># $
data>>% )
;>>) *G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67b?? C
.??C D
BadSink??D K
(??K L
dataContainer??L Y
,??Z [
req??\ _
,??_ `
resp??a e
)??f g
;??g h
}@@ 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
GoodG2BEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
GoodB2GFF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodG2BJJ 
(JJ  
HttpRequestJJ  +
reqJJ, /
,JJ/ 0
HttpResponseJJ1 =
respJJ> B
)JJB C
{KK 
stringLL 
dataLL 
;LL 
dataNN 
=NN 
$strNN 
;NN 
	ContainerOO 
dataContainerOO 
=OO  !
newOO" %
	ContainerOO& /
(OO/ 0
)OO0 1
;OO1 2
dataContainerPP 
.PP 
containerOnePP "
=PP# $
dataPP% )
;PP) *G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataContainerQQP ]
,QQ^ _
reqQQ` c
,QQc d
respQQe i
)QQj k
;QQk l
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	
	Containermm 
dataContainermm 
=mm  !
newmm" %
	Containermm& /
(mm/ 0
)mm0 1
;mm1 2
dataContainernn 
.nn 
containerOnenn "
=nn# $
datann% )
;nn) *G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67boo C
.ooC D
GoodB2GSinkooD O
(ooO P
dataContainerooP ]
,oo^ _
reqoo` c
,ooc d
respooe i
)ooj k
;ook l
}pp 
}rr 
}ss  
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67b A
{ 
public 

static 
void 
BadSink 
( G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67a Z
.Z [
	Container[ d
dataContainere r
,s t
HttpRequest	u 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67a**# ^
.**^ _
	Container**_ h
dataContainer**i v
,**w x
HttpRequest	**y 
req
** 
,
** 
HttpResponse
** 
resp
** 
)
** 
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_67a55# ^
.55^ _
	Container55_ h
dataContainer55i v
,55w x
HttpRequest	55y 
req
55 
,
55 
HttpResponse
55 
resp
55 
)
55 
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA &
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68a A
:B C
AbstractTestCaseWebD W
{ 
public   

static   
string   
data   
;   
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68b99 C
.99C D
BadSink99D K
(99K L
req99L O
,99O P
resp99Q U
)99U V
;99V W
}:: 
public== 

override== 
void== 
Good== 
(== 
HttpRequest== )
req==* -
,==- .
HttpResponse==/ ;
resp==< @
)==@ A
{>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
GoodB2G@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
}AA 
privateDD 
staticDD 
voidDD 
GoodG2BDD 
(DD  
HttpRequestDD  +
reqDD, /
,DD/ 0
HttpResponseDD1 =
respDD> B
)DDB C
{EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
reqHHP S
,HHS T
respHHU Y
)HHY Z
;HHZ [
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
dataNN 
=NN 
$strNN 
;NN 
{PP 	
tryQQ 
{RR 
usingSS 
(SS 
	WebClientSS  
clientSS! '
=SS( )
newSS* -
	WebClientSS. 7
(SS7 8
)SS8 9
)SS9 :
{TT 
usingUU 
(UU 
StreamReaderUU '
srUU( *
=UU+ ,
newUU- 0
StreamReaderUU1 =
(UU= >
clientUU> D
.UUD E
OpenReadUUE M
(UUM N
$strUUN g
)UUg h
)UUh i
)UUi j
{VV 
dataZZ 
=ZZ 
srZZ !
.ZZ! "
ReadLineZZ" *
(ZZ* +
)ZZ+ ,
;ZZ, -
}[[ 
}\\ 
}]] 
catch^^ 
(^^ 
IOException^^ 
exceptIO^^ '
)^^' (
{__ 
IO`` 
.`` 
Logger`` 
.`` 
Log`` 
(`` 
NLog`` "
.``" #
LogLevel``# +
.``+ ,
Warn``, 0
,``0 1
exceptIO``2 :
,``: ;
$str``< W
)``W X
;``X Y
}aa 
}bb 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68bcc C
.ccC D
GoodB2GSinkccD O
(ccO P
reqccP S
,ccS T
respccU Y
)ccY Z
;ccZ [
}dd 
}ff 
}gg ¦
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68b A
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68a Q
.Q R
dataR V
;V W
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68a,, Q
.,,Q R
data,,R V
;,,V W
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_68a77 Q
.77Q R
data77R V
;77V W
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ¿(
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_71a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_71b88 C
.88C D
BadSink88D K
(88K L
(88L M
Object88M S
)88S T
data88T X
,88Y Z
req88[ ^
,88^ _
resp88` d
)88e f
;88f g
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
staticCC 
voidCC 
GoodG2BCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_71bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
(HHP Q
ObjectHHQ W
)HHW X
dataHHX \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_71bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
(ddP Q
ObjectddQ W
)ddW X
dataddX \
,dd] ^
reqdd_ b
,ddb c
respddd h
)ddi j
;ddj k
}ee 
}gg 
}hh ÷
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_71b A
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ¯6
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_72a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	
	Hashtable99 
dataHashtable99 
=99  !
new99" %
	Hashtable99& /
(99/ 0
$num990 1
)991 2
;992 3
dataHashtable:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: !
)::! "
;::" #
dataHashtable;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; !
);;! "
;;;" #
dataHashtable<< 
.<< 
Add<< 
(<< 
$num<< 
,<< 
data<< !
)<<! "
;<<" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_72b== C
.==C D
BadSink==D K
(==K L
dataHashtable==L Y
,==Z [
req==\ _
,==_ `
resp==a e
)==f g
;==g h
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodG2BCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2GDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
HttpRequestHH  +
reqHH, /
,HH/ 0
HttpResponseHH1 =
respHH> B
)HHB C
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
	HashtableMM 
dataHashtableMM 
=MM  !
newMM" %
	HashtableMM& /
(MM/ 0
$numMM0 1
)MM1 2
;MM2 3
dataHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN !
)NN! "
;NN" #
dataHashtableOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO !
)OO! "
;OO" #
dataHashtablePP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP !
)PP! "
;PP" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_72bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataHashtableQQP ]
,QQ^ _
reqQQ` c
,QQc d
respQQe i
)QQj k
;QQk l
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	
	Hashtablemm 
dataHashtablemm 
=mm  !
newmm" %
	Hashtablemm& /
(mm/ 0
$nummm0 1
)mm1 2
;mm2 3
dataHashtablenn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann !
)nn! "
;nn" #
dataHashtableoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo !
)oo! "
;oo" #
dataHashtablepp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp !
)pp! "
;pp" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_72bqq C
.qqC D
GoodB2GSinkqqD O
(qqO P
dataHashtableqqP ]
,qq^ _
reqqq` c
,qqc d
respqqe i
)qqj k
;qqk l
}rr 
}tt 
}uu ¢
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_72b A
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB µ6
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_73a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	

LinkedList99 
<99 
string99 
>99 
dataLinkedList99 )
=99* +
new99, /

LinkedList990 :
<99: ;
string99; A
>99A B
(99B C
)99C D
;99D E
dataLinkedList:: 
.:: 
AddLast:: 
(:: 
data:: #
)::# $
;::$ %
dataLinkedList;; 
.;; 
AddLast;; 
(;; 
data;; #
);;# $
;;;$ %
dataLinkedList<< 
.<< 
AddLast<< 
(<< 
data<< #
)<<# $
;<<$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_73b== C
.==C D
BadSink==D K
(==K L
dataLinkedList==L Z
,==[ \
req==] `
,==` a
resp==b f
)==g h
;==h i
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodG2BCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2GDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
HttpRequestHH  +
reqHH, /
,HH/ 0
HttpResponseHH1 =
respHH> B
)HHB C
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 

LinkedListMM 
<MM 
stringMM 
>MM 
dataLinkedListMM )
=MM* +
newMM, /

LinkedListMM0 :
<MM: ;
stringMM; A
>MMA B
(MMB C
)MMC D
;MMD E
dataLinkedListNN 
.NN 
AddLastNN 
(NN 
dataNN #
)NN# $
;NN$ %
dataLinkedListOO 
.OO 
AddLastOO 
(OO 
dataOO #
)OO# $
;OO$ %
dataLinkedListPP 
.PP 
AddLastPP 
(PP 
dataPP #
)PP# $
;PP$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_73bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataLinkedListQQP ^
,QQ_ `
reqQQa d
,QQd e
respQQf j
)QQk l
;QQl m
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	

LinkedListmm 
<mm 
stringmm 
>mm 
dataLinkedListmm )
=mm* +
newmm, /

LinkedListmm0 :
<mm: ;
stringmm; A
>mmA B
(mmB C
)mmC D
;mmD E
dataLinkedListnn 
.nn 
AddLastnn 
(nn 
datann #
)nn# $
;nn$ %
dataLinkedListoo 
.oo 
AddLastoo 
(oo 
dataoo #
)oo# $
;oo$ %
dataLinkedListpp 
.pp 
AddLastpp 
(pp 
datapp #
)pp# $
;pp$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_73bqq C
.qqC D
GoodB2GSinkqqD O
(qqO P
dataLinkedListqqP ^
,qq_ `
reqqqa d
,qqd e
respqqf j
)qqk l
;qql m
}rr 
}tt 
}uu ä
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_73b A
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ú9
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_74a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	

Dictionary99 
<99 
int99 
,99 
string99 
>99 
dataDictionary99 -
=99. /
new990 3

Dictionary994 >
<99> ?
int99? B
,99B C
string99C I
>99I J
(99J K
)99K L
;99L M
dataDictionary:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: "
)::" #
;::# $
dataDictionary;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; "
);;" #
;;;# $
dataDictionary<< 
.<< 
Add<< 
(<< 
$num<< 
,<< 
data<< "
)<<" #
;<<# $G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_74b== C
.==C D
BadSink==D K
(==K L
dataDictionary==L Z
,==[ \
req==] `
,==` a
resp==b f
)==g h
;==h i
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodG2BCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2GDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
HttpRequestHH  +
reqHH, /
,HH/ 0
HttpResponseHH1 =
respHH> B
)HHB C
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 

DictionaryMM 
<MM 
intMM 
,MM 
stringMM 
>MM 
dataDictionaryMM -
=MM. /
newMM0 3

DictionaryMM4 >
<MM> ?
intMM? B
,MMB C
stringMMC I
>MMI J
(MMJ K
)MMK L
;MML M
dataDictionaryNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN "
)NN" #
;NN# $
dataDictionaryOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO "
)OO" #
;OO# $
dataDictionaryPP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP "
)PP" #
;PP# $G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_74bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataDictionaryQQP ^
,QQ_ `
reqQQa d
,QQd e
respQQf j
)QQk l
;QQl m
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	

Dictionarymm 
<mm 
intmm 
,mm 
stringmm 
>mm 
dataDictionarymm -
=mm. /
newmm0 3

Dictionarymm4 >
<mm> ?
intmm? B
,mmB C
stringmmC I
>mmI J
(mmJ K
)mmK L
;mmL M
dataDictionarynn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann "
)nn" #
;nn# $
dataDictionaryoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo "
)oo" #
;oo# $
dataDictionarypp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp "
)pp" #
;pp# $G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_74bqq C
.qqC D
GoodB2GSinkqqD O
(qqO P
dataDictionaryqqP ^
,qq_ `
reqqqa d
,qqd e
respqqf j
)qqk l
;qql m
}rr 
}tt 
}uu 
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_74b A
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB P
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_75a A
:B C
AbstractTestCaseWebD W
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{'' 	
try(( 
{)) 
using** 
(** 
	WebClient**  
client**! '
=**( )
new*** -
	WebClient**. 7
(**7 8
)**8 9
)**9 :
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
client,,> D
.,,D E
OpenRead,,E M
(,,M N
$str,,N g
),,g h
),,h i
),,i j
{-- 
data11 
=11 
sr11 !
.11! "
ReadLine11" *
(11* +
)11+ ,
;11, -
}22 
}33 
}44 
catch55 
(55 
IOException55 
exceptIO55 '
)55' (
{66 
IO77 
.77 
Logger77 
.77 
Log77 
(77 
NLog77 "
.77" #
LogLevel77# +
.77+ ,
Warn77, 0
,770 1
exceptIO772 :
,77: ;
$str77< W
)77W X
;77X Y
}88 
}99 	
byte;; 
[;; 
];; 
dataSerialized;; 
=;; 
null;;  $
;;;$ %
try<< 
{== 	
BinaryFormatter>> 
bf>> 
=>>  
new>>! $
BinaryFormatter>>% 4
(>>4 5
)>>5 6
;>>6 7
using?? 
(?? 
var?? 
ms?? 
=?? 
new?? 
MemoryStream??  ,
(??, -
)??- .
)??. /
{@@ 
bfAA 
.AA 
	SerializeAA 
(AA 
msAA 
,AA  
dataAA! %
)AA% &
;AA& '
dataSerializedBB 
=BB  
msBB! #
.BB# $
ToArrayBB$ +
(BB+ ,
)BB, -
;BB- .
}CC G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_75bDD G
.DDG H
BadSinkDDH O
(DDO P
dataSerializedDDP ^
,DD_ `
reqDDa d
,DDd e
respDDf j
)DDk l
;DDl m
}EE 	
catchFF 
(FF "
SerializationExceptionFF %
exceptSerializeFF& 5
)FF5 6
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. X
,HHX Y
exceptSerializeHHZ i
)HHi j
;HHj k
}II 	
}JJ 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
HttpRequestMM )
reqMM* -
,MM- .
HttpResponseMM/ ;
respMM< @
)MM@ A
{NN 
GoodG2BOO 
(OO 
reqOO 
,OO 
respOO 
)OO 
;OO 
GoodB2GPP 
(PP 
reqPP 
,PP 
respPP 
)PP 
;PP 
}QQ 
privateTT 
staticTT 
voidTT 
GoodG2BTT 
(TT  
HttpRequestTT  +
reqTT, /
,TT/ 0
HttpResponseTT1 =
respTT> B
)TTB C
{UU 
stringVV 
dataVV 
;VV 
dataWW 
=WW 
$strWW 
;WW 
{YY 	
tryZZ 
{[[ 
using\\ 
(\\ 
	WebClient\\  
client\\! '
=\\( )
new\\* -
	WebClient\\. 7
(\\7 8
)\\8 9
)\\9 :
{]] 
using^^ 
(^^ 
StreamReader^^ '
sr^^( *
=^^+ ,
new^^- 0
StreamReader^^1 =
(^^= >
client^^> D
.^^D E
OpenRead^^E M
(^^M N
$str^^N g
)^^g h
)^^h i
)^^i j
{__ 
datacc 
=cc 
srcc !
.cc! "
ReadLinecc" *
(cc* +
)cc+ ,
;cc, -
}dd 
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg 
exceptIOgg '
)gg' (
{hh 
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii "
.ii" #
LogLevelii# +
.ii+ ,
Warnii, 0
,ii0 1
exceptIOii2 :
,ii: ;
$strii< W
)iiW X
;iiX Y
}jj 
}kk 	
bytemm 
[mm 
]mm 
dataSerializedmm 
=mm 
nullmm  $
;mm$ %
trynn 
{oo 	
BinaryFormatterpp 
bfpp 
=pp  
newpp! $
BinaryFormatterpp% 4
(pp4 5
)pp5 6
;pp6 7
usingqq 
(qq 
varqq 
msqq 
=qq 
newqq 
MemoryStreamqq  ,
(qq, -
)qq- .
)qq. /
{rr 
bfss 
.ss 
	Serializess 
(ss 
msss 
,ss  
datass! %
)ss% &
;ss& '
dataSerializedtt 
=tt  
mstt! #
.tt# $
ToArraytt$ +
(tt+ ,
)tt, -
;tt- .
}uu G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_75bvv G
.vvG H
GoodG2BSinkvvH S
(vvS T
dataSerializedvvT b
,vvc d
reqvve h
,vvh i
respvvj n
)vvo p
;vvp q
}ww 	
catchxx 
(xx "
SerializationExceptionxx %
exceptSerializexx& 5
)xx5 6
{yy 	
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz 
.zz 
LogLevelzz '
.zz' (
Warnzz( ,
,zz, -
$strzz. X
,zzX Y
exceptSerializezzZ i
)zzi j
;zzj k
}{{ 	
}|| 
private 
static 
void 
GoodB2G 
(  
HttpRequest  +
req, /
,/ 0
HttpResponse1 =
resp> B
)B C
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
{
 	
try
 
{
 
using
 
(
 
	WebClient
  
client
! '
=
( )
new
* -
	WebClient
. 7
(
7 8
)
8 9
)
9 :
{
 
using
 
(
 
StreamReader
 '
sr
( *
=
+ ,
new
- 0
StreamReader
1 =
(
= >
client
> D
.
D E
OpenRead
E M
(
M N
$str
N g
)
g h
)
h i
)
i j
{
 
data
 
=
 
sr
 !
.
! "
ReadLine
" *
(
* +
)
+ ,
;
, -
}
 
}
 
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
byte
 
[
 
]
 
dataSerialized
 
=
 
null
  $
;
$ %
try
 
{
 	
BinaryFormatter
 
bf
 
=
  
new
! $
BinaryFormatter
% 4
(
4 5
)
5 6
;
6 7
using
 
(
 
var
 
ms
 
=
 
new
 
MemoryStream
  ,
(
, -
)
- .
)
. /
{
 
bf
 
.
 
	Serialize
 
(
 
ms
 
,
  
data
! %
)
% &
;
& '
dataSerialized
 
=
  
ms
! #
.
# $
ToArray
$ +
(
+ ,
)
, -
;
- .
}
   I
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_75b
¡¡ G
.
¡¡G H
GoodB2GSink
¡¡H S
(
¡¡S T
dataSerialized
¡¡T b
,
¡¡c d
req
¡¡e h
,
¡¡h i
resp
¡¡j n
)
¡¡o p
;
¡¡p q
}
¢¢ 	
catch
££ 
(
££ $
SerializationException
££ %
exceptSerialize
££& 5
)
££5 6
{
¤¤ 	
IO
¥¥ 
.
¥¥ 
Logger
¥¥ 
.
¥¥ 
Log
¥¥ 
(
¥¥ 
NLog
¥¥ 
.
¥¥ 
LogLevel
¥¥ '
.
¥¥' (
Warn
¥¥( ,
,
¥¥, -
$str
¥¥. X
,
¥¥X Y
exceptSerialize
¥¥Z i
)
¥¥i j
;
¥¥j k
}
¦¦ 	
}
§§ 
}©© 
}ªª ¤8
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_75b A
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if-- 
(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
$strcc- /
,cc/ 0
Encodingcc1 9
.cc9 :
UTF8cc: >
)cc> ?
;cc? @
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn ú+
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	K
?CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_base88 G

baseObject88H R
=88S T
new88U XK
>CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_bad	88Y 
(
88 
)
88 
;
88 

baseObject99 
.99 
Action99 
(99 
data99 
,99  
req99! $
,99$ %
resp99& *
)99* +
;99+ ,
}:: 
public== 

override== 
void== 
Good== 
(== 
HttpRequest== )
req==* -
,==- .
HttpResponse==/ ;
resp==< @
)==@ A
{>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
GoodB2G@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2BDD 
(DD 
HttpRequestDD $
reqDD% (
,DD( )
HttpResponseDD* 6
respDD7 ;
)DD; <
{EE 
stringFF 
dataFF 
;FF 
dataHH 
=HH 
$strHH 
;HH K
?CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_baseII G

baseObjectIIH R
=IIS T
newIIU XO
BCWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_goodG2B	IIY 
(
II 
)
II 
;
II 

baseObjectJJ 
.JJ 
ActionJJ 
(JJ 
dataJJ 
,JJ  
reqJJ! $
,JJ$ %
respJJ& *
)JJ* +
;JJ+ ,
}KK 
privateNN 
voidNN 
GoodB2GNN 
(NN 
HttpRequestNN $
reqNN% (
,NN( )
HttpResponseNN* 6
respNN7 ;
)NN; <
{OO 
stringPP 
dataPP 
;PP 
dataQQ 
=QQ 
$strQQ 
;QQ 
{SS 	
tryTT 
{UU 
usingVV 
(VV 
	WebClientVV  
clientVV! '
=VV( )
newVV* -
	WebClientVV. 7
(VV7 8
)VV8 9
)VV9 :
{WW 
usingXX 
(XX 
StreamReaderXX '
srXX( *
=XX+ ,
newXX- 0
StreamReaderXX1 =
(XX= >
clientXX> D
.XXD E
OpenReadXXE M
(XXM N
$strXXN g
)XXg h
)XXh i
)XXi j
{YY 
data]] 
=]] 
sr]] !
.]]! "
ReadLine]]" *
(]]* +
)]]+ ,
;]], -
}^^ 
}__ 
}`` 
catchaa 
(aa 
IOExceptionaa 
exceptIOaa '
)aa' (
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
exceptIOcc2 :
,cc: ;
$strcc< W
)ccW X
;ccX Y
}dd 
}ee 	K
?CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_baseff G

baseObjectffH R
=ffS T
newffU XO
BCWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_goodB2G	ffY 
(
ff 
)
ff 
;
ff 

baseObjectgg 
.gg 
Actiongg 
(gg 
datagg 
,gg  
reqgg! $
,gg$ %
respgg& *
)gg* +
;gg+ ,
}hh 
}jj 
}kk ö
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class J
>CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_bad D
:E FL
?CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_base	G 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& é
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 K
?CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_base N
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ã

ÃC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class N
BCWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_goodB2G H
:I JL
?CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_base	K 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
$str##) +
,##+ ,
Encoding##- 5
.##5 6
UTF8##6 :
)##: ;
;##; <
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( þ
ÃC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class N
BCWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_goodG2B H
:I JL
?CWE113_HTTP_Response_Splitting__Web_NetClient_addHeader_81_base	K 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' À*
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_01 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
resp;; 
.;; 
	AddHeader;; 
(;; 
$str;; %
,;;% &
$str;;' :
+;;; <
data;;= A
);;A B
;;;B C
}<< 	
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
HttpRequest@@ )
req@@* -
,@@- .
HttpResponse@@/ ;
resp@@< @
)@@@ A
{AA 
GoodG2BBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
GoodB2GCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
}DD 
privateGG 
voidGG 
GoodG2BGG 
(GG 
HttpRequestGG $
reqGG% (
,GG( )
HttpResponseGG* 6
respGG7 ;
)GG; <
{HH 
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
ifLL 

(LL 
dataLL 
!=LL 
nullLL 
)LL 
{MM 	
respOO 
.OO 
	AddHeaderOO 
(OO 
$strOO %
,OO% &
$strOO' :
+OO; <
dataOO= A
)OOA B
;OOB C
}PP 	
}QQ 
privateTT 
voidTT 
GoodB2GTT 
(TT 
HttpRequestTT $
reqTT% (
,TT( )
HttpResponseTT* 6
respTT7 ;
)TT; <
{UU 
stringVV 
dataVV 
;VV 
dataWW 
=WW 
$strWW 
;WW 
{YY 	
tryZZ 
{[[ 
using\\ 
(\\ 
	WebClient\\  
client\\! '
=\\( )
new\\* -
	WebClient\\. 7
(\\7 8
)\\8 9
)\\9 :
{]] 
using^^ 
(^^ 
StreamReader^^ '
sr^^( *
=^^+ ,
new^^- 0
StreamReader^^1 =
(^^= >
client^^> D
.^^D E
OpenRead^^E M
(^^M N
$str^^N g
)^^g h
)^^h i
)^^i j
{__ 
datacc 
=cc 
srcc !
.cc! "
ReadLinecc" *
(cc* +
)cc+ ,
;cc, -
}dd 
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg 
exceptIOgg '
)gg' (
{hh 
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii "
.ii" #
LogLevelii# +
.ii+ ,
Warnii, 0
,ii0 1
exceptIOii2 :
,ii: ;
$strii< W
)iiW X
;iiX Y
}jj 
}kk 	
ifll 

(ll 
datall 
!=ll 
nullll 
)ll 
{mm 	
dataoo 
=oo 
HttpUtilityoo 
.oo 
	UrlEncodeoo (
(oo( )
dataoo) -
,oo- .
Encodingoo/ 7
.oo7 8
UTF8oo8 <
)oo< =
;oo= >
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp %
,pp% &
$strpp' :
+pp; <
datapp= A
)ppA B
;ppB C
}qq 	
}rr 
}tt 
}uu «S
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_02 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
true## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
trueAA 
)AA 
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
falsePP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
true[[ 
)[[ 
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
trueii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
truett 
)tt 
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
false
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
true
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
true
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ V
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_03 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
$num## 
==## 
$num## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
$numAA 
==AA 
$numAA 
)AA 
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
$numPP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
$num[[ 
==[[ 
$num[[ 
)[[ 
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
$numii 
==ii 
$numii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
$numtt 
==tt 
$numtt 
)tt 
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
$num
   
!=
   
$num
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
$num
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
$num
ÒÒ 
==
ÒÒ 
$num
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ ýV
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_04 @
:A B
AbstractTestCaseWebC V
{ 
private$$ 
const$$ 
bool$$ 
PRIVATE_CONST_TRUE$$ )
=$$* +
true$$, 0
;$$0 1
private%% 
const%% 
bool%% 
PRIVATE_CONST_FALSE%% *
=%%+ ,
false%%- 2
;%%2 3
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
if** 

(** 
PRIVATE_CONST_TRUE** 
)** 
{++ 	
data,, 
=,, 
$str,, 
;,, 
{.. 
try// 
{00 
using11 
(11 
	WebClient11 $
client11% +
=11, -
new11. 1
	WebClient112 ;
(11; <
)11< =
)11= >
{22 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
client33B H
.33H I
OpenRead33I Q
(33Q R
$str33R k
)33k l
)33l m
)33m n
{44 
data88  
=88! "
sr88# %
.88% &
ReadLine88& .
(88. /
)88/ 0
;880 1
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< "
exceptIO<<# +
)<<+ ,
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> !
(>>! "
NLog>>" &
.>>& '
LogLevel>>' /
.>>/ 0
Warn>>0 4
,>>4 5
exceptIO>>6 >
,>>> ?
$str>>@ [
)>>[ \
;>>\ ]
}?? 
}@@ 
}AA 	
elseBB 
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
ifHH 

(HH 
PRIVATE_CONST_TRUEHH 
)HH 
{II 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
respMM 
.MM 
	AddHeaderMM 
(MM 
$strMM )
,MM) *
$strMM+ >
+MM? @
dataMMA E
)MME F
;MMF G
}NN 
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
HttpRequestTT %
reqTT& )
,TT) *
HttpResponseTT+ 7
respTT8 <
)TT< =
{UU 
stringVV 
dataVV 
;VV 
ifWW 

(WW 
PRIVATE_CONST_FALSEWW 
)WW  
{XX 	
data[[ 
=[[ 
null[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$str`` 
;`` 
}aa 	
ifbb 

(bb 
PRIVATE_CONST_TRUEbb 
)bb 
{cc 	
ifdd 
(dd 
datadd 
!=dd 
nulldd 
)dd 
{ee 
respgg 
.gg 
	AddHeadergg 
(gg 
$strgg )
,gg) *
$strgg+ >
+gg? @
dataggA E
)ggE F
;ggF G
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
PRIVATE_CONST_TRUEpp 
)pp 
{qq 	
datass 
=ss 
$strss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
PRIVATE_CONST_TRUE{{ 
){{ 
{|| 	
if}} 
(}} 
data}} 
!=}} 
null}} 
)}} 
{~~ 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
   	
else
¡¡ 
{
¢¢ 	
data
¥¥ 
=
¥¥ 
null
¥¥ 
;
¥¥ 
}
¦¦ 	
if
§§ 

(
§§ !
PRIVATE_CONST_FALSE
§§ 
)
§§  
{
¨¨ 	
IO
ªª 
.
ªª 
	WriteLine
ªª 
(
ªª 
$str
ªª /
)
ªª/ 0
;
ªª0 1
}
«« 	
else
¬¬ 
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 
data
±± 
=
±± 
HttpUtility
±± "
.
±±" #
	UrlEncode
±±# ,
(
±±, -
data
±±- 1
,
±±1 2
Encoding
±±3 ;
.
±±; <
UTF8
±±< @
)
±±@ A
;
±±A B
resp
²² 
.
²² 
	AddHeader
²² 
(
²² 
$str
²² )
,
²²) *
$str
²²+ >
+
²²? @
data
²²A E
)
²²E F
;
²²F G
}
³³ 
}
´´ 	
}
µµ 
private
¸¸ 
void
¸¸ 
GoodB2G2
¸¸ 
(
¸¸ 
HttpRequest
¸¸ %
req
¸¸& )
,
¸¸) *
HttpResponse
¸¸+ 7
resp
¸¸8 <
)
¸¸< =
{
¹¹ 
string
ºº 
data
ºº 
;
ºº 
if
»» 

(
»»  
PRIVATE_CONST_TRUE
»» 
)
»» 
{
¼¼ 	
data
½½ 
=
½½ 
$str
½½ 
;
½½ 
{
¿¿ 
try
ÀÀ 
{
ÁÁ 
using
ÂÂ 
(
ÂÂ 
	WebClient
ÂÂ $
client
ÂÂ% +
=
ÂÂ, -
new
ÂÂ. 1
	WebClient
ÂÂ2 ;
(
ÂÂ; <
)
ÂÂ< =
)
ÂÂ= >
{
ÃÃ 
using
ÄÄ 
(
ÄÄ 
StreamReader
ÄÄ +
sr
ÄÄ, .
=
ÄÄ/ 0
new
ÄÄ1 4
StreamReader
ÄÄ5 A
(
ÄÄA B
client
ÄÄB H
.
ÄÄH I
OpenRead
ÄÄI Q
(
ÄÄQ R
$str
ÄÄR k
)
ÄÄk l
)
ÄÄl m
)
ÄÄm n
{
ÅÅ 
data
ÉÉ  
=
ÉÉ! "
sr
ÉÉ# %
.
ÉÉ% &
ReadLine
ÉÉ& .
(
ÉÉ. /
)
ÉÉ/ 0
;
ÉÉ0 1
}
ÊÊ 
}
ËË 
}
ÌÌ 
catch
ÍÍ 
(
ÍÍ 
IOException
ÍÍ "
exceptIO
ÍÍ# +
)
ÍÍ+ ,
{
ÎÎ 
IO
ÏÏ 
.
ÏÏ 
Logger
ÏÏ 
.
ÏÏ 
Log
ÏÏ !
(
ÏÏ! "
NLog
ÏÏ" &
.
ÏÏ& '
LogLevel
ÏÏ' /
.
ÏÏ/ 0
Warn
ÏÏ0 4
,
ÏÏ4 5
exceptIO
ÏÏ6 >
,
ÏÏ> ?
$str
ÏÏ@ [
)
ÏÏ[ \
;
ÏÏ\ ]
}
ÐÐ 
}
ÑÑ 
}
ÒÒ 	
else
ÓÓ 
{
ÔÔ 	
data
×× 
=
×× 
null
×× 
;
×× 
}
ØØ 	
if
ÙÙ 

(
ÙÙ  
PRIVATE_CONST_TRUE
ÙÙ 
)
ÙÙ 
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
data
ÛÛ 
!=
ÛÛ 
null
ÛÛ 
)
ÛÛ 
{
ÜÜ 
data
ÞÞ 
=
ÞÞ 
HttpUtility
ÞÞ "
.
ÞÞ" #
	UrlEncode
ÞÞ# ,
(
ÞÞ, -
data
ÞÞ- 1
,
ÞÞ1 2
Encoding
ÞÞ3 ;
.
ÞÞ; <
UTF8
ÞÞ< @
)
ÞÞ@ A
;
ÞÞA B
resp
ßß 
.
ßß 
	AddHeader
ßß 
(
ßß 
$str
ßß )
,
ßß) *
$str
ßß+ >
+
ßß? @
data
ßßA E
)
ßßE F
;
ßßF G
}
àà 
}
áá 	
}
ââ 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
åå 
GoodG2B1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
GoodB2G2
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
}
êê 
}ìì 
}íí íU
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_05 @
:A B
AbstractTestCaseWebC V
{ 
private## 
bool## 
privateTrue## 
=## 
true## #
;### $
private$$ 
bool$$ 
privateFalse$$ 
=$$ 
false$$  %
;$$% &
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
privateTrue)) 
))) 
{** 	
data++ 
=++ 
$str++ 
;++ 
{-- 
try.. 
{// 
using00 
(00 
	WebClient00 $
client00% +
=00, -
new00. 1
	WebClient002 ;
(00; <
)00< =
)00= >
{11 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
client22B H
.22H I
OpenRead22I Q
(22Q R
$str22R k
)22k l
)22l m
)22m n
{33 
data77  
=77! "
sr77# %
.77% &
ReadLine77& .
(77. /
)77/ 0
;770 1
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; "
exceptIO;;# +
);;+ ,
{<< 
IO== 
.== 
Logger== 
.== 
Log== !
(==! "
NLog==" &
.==& '
LogLevel==' /
.==/ 0
Warn==0 4
,==4 5
exceptIO==6 >
,==> ?
$str==@ [
)==[ \
;==\ ]
}>> 
}?? 
}@@ 	
elseAA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
ifGG 

(GG 
privateTrueGG 
)GG 
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respLL 
.LL 
	AddHeaderLL 
(LL 
$strLL )
,LL) *
$strLL+ >
+LL? @
dataLLA E
)LLE F
;LLF G
}MM 
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
privateFalseVV 
)VV 
{WW 	
dataZZ 
=ZZ 
nullZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
ifaa 

(aa 
privateTrueaa 
)aa 
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 
respff 
.ff 
	AddHeaderff 
(ff 
$strff )
,ff) *
$strff+ >
+ff? @
dataffA E
)ffE F
;ffF G
}gg 
}hh 	
}ii 
privatell 
voidll 
GoodG2B2ll 
(ll 
HttpRequestll %
reqll& )
,ll) *
HttpResponsell+ 7
respll8 <
)ll< =
{mm 
stringnn 
datann 
;nn 
ifoo 

(oo 
privateTrueoo 
)oo 
{pp 	
datarr 
=rr 
$strrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
nullxx 
;xx 
}yy 	
ifzz 

(zz 
privateTruezz 
)zz 
{{{ 	
if|| 
(|| 
data|| 
!=|| 
null|| 
)|| 
{}} 
resp 
. 
	AddHeader 
( 
$str )
,) *
$str+ >
+? @
dataA E
)E F
;F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
   
{
¡¡ 	
data
¤¤ 
=
¤¤ 
null
¤¤ 
;
¤¤ 
}
¥¥ 	
if
¦¦ 

(
¦¦ 
privateFalse
¦¦ 
)
¦¦ 
{
§§ 	
IO
©© 
.
©© 
	WriteLine
©© 
(
©© 
$str
©© /
)
©©/ 0
;
©©0 1
}
ªª 	
else
«« 
{
¬¬ 	
if
­­ 
(
­­ 
data
­­ 
!=
­­ 
null
­­ 
)
­­ 
{
®® 
data
°° 
=
°° 
HttpUtility
°° "
.
°°" #
	UrlEncode
°°# ,
(
°°, -
data
°°- 1
,
°°1 2
Encoding
°°3 ;
.
°°; <
UTF8
°°< @
)
°°@ A
;
°°A B
resp
±± 
.
±± 
	AddHeader
±± 
(
±± 
$str
±± )
,
±±) *
$str
±±+ >
+
±±? @
data
±±A E
)
±±E F
;
±±F G
}
²² 
}
³³ 	
}
´´ 
private
·· 
void
·· 
GoodB2G2
·· 
(
·· 
HttpRequest
·· %
req
··& )
,
··) *
HttpResponse
··+ 7
resp
··8 <
)
··< =
{
¸¸ 
string
¹¹ 
data
¹¹ 
;
¹¹ 
if
ºº 

(
ºº 
privateTrue
ºº 
)
ºº 
{
»» 	
data
¼¼ 
=
¼¼ 
$str
¼¼ 
;
¼¼ 
{
¾¾ 
try
¿¿ 
{
ÀÀ 
using
ÁÁ 
(
ÁÁ 
	WebClient
ÁÁ $
client
ÁÁ% +
=
ÁÁ, -
new
ÁÁ. 1
	WebClient
ÁÁ2 ;
(
ÁÁ; <
)
ÁÁ< =
)
ÁÁ= >
{
ÂÂ 
using
ÃÃ 
(
ÃÃ 
StreamReader
ÃÃ +
sr
ÃÃ, .
=
ÃÃ/ 0
new
ÃÃ1 4
StreamReader
ÃÃ5 A
(
ÃÃA B
client
ÃÃB H
.
ÃÃH I
OpenRead
ÃÃI Q
(
ÃÃQ R
$str
ÃÃR k
)
ÃÃk l
)
ÃÃl m
)
ÃÃm n
{
ÄÄ 
data
ÈÈ  
=
ÈÈ! "
sr
ÈÈ# %
.
ÈÈ% &
ReadLine
ÈÈ& .
(
ÈÈ. /
)
ÈÈ/ 0
;
ÈÈ0 1
}
ÉÉ 
}
ÊÊ 
}
ËË 
catch
ÌÌ 
(
ÌÌ 
IOException
ÌÌ "
exceptIO
ÌÌ# +
)
ÌÌ+ ,
{
ÍÍ 
IO
ÎÎ 
.
ÎÎ 
Logger
ÎÎ 
.
ÎÎ 
Log
ÎÎ !
(
ÎÎ! "
NLog
ÎÎ" &
.
ÎÎ& '
LogLevel
ÎÎ' /
.
ÎÎ/ 0
Warn
ÎÎ0 4
,
ÎÎ4 5
exceptIO
ÎÎ6 >
,
ÎÎ> ?
$str
ÎÎ@ [
)
ÎÎ[ \
;
ÎÎ\ ]
}
ÏÏ 
}
ÐÐ 
}
ÑÑ 	
else
ÒÒ 
{
ÓÓ 	
data
ÖÖ 
=
ÖÖ 
null
ÖÖ 
;
ÖÖ 
}
×× 	
if
ØØ 

(
ØØ 
privateTrue
ØØ 
)
ØØ 
{
ÙÙ 	
if
ÚÚ 
(
ÚÚ 
data
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
)
ÚÚ 
{
ÛÛ 
data
ÝÝ 
=
ÝÝ 
HttpUtility
ÝÝ "
.
ÝÝ" #
	UrlEncode
ÝÝ# ,
(
ÝÝ, -
data
ÝÝ- 1
,
ÝÝ1 2
Encoding
ÝÝ3 ;
.
ÝÝ; <
UTF8
ÝÝ< @
)
ÝÝ@ A
;
ÝÝA B
resp
ÞÞ 
.
ÞÞ 
	AddHeader
ÞÞ 
(
ÞÞ 
$str
ÞÞ )
,
ÞÞ) *
$str
ÞÞ+ >
+
ÞÞ? @
data
ÞÞA E
)
ÞÞE F
;
ÞÞF G
}
ßß 
}
àà 	
}
áá 
public
ãã 

override
ãã 
void
ãã 
Good
ãã 
(
ãã 
HttpRequest
ãã )
req
ãã* -
,
ãã- .
HttpResponse
ãã/ ;
resp
ãã< @
)
ãã@ A
{
ää 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G1
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
éé 
}ëë 
}ìì ºX
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_06 @
:A B
AbstractTestCaseWebC V
{ 
private## 
const## 
int## 
PRIVATE_CONST_FIVE## (
=##) *
$num##+ ,
;##, -
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_FIVE(( 
==((  
$num((  !
)((! "
{)) 	
data** 
=** 
$str** 
;** 
{,, 
try-- 
{.. 
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
data66  
=66! "
sr66# %
.66% &
ReadLine66& .
(66. /
)66/ 0
;660 1
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
}?? 	
else@@ 
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
ifFF 

(FF 
PRIVATE_CONST_FIVEFF 
==FF  
$numFF  !
)FF! "
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
HttpRequestRR %
reqRR& )
,RR) *
HttpResponseRR+ 7
respRR8 <
)RR< =
{SS 
stringTT 
dataTT 
;TT 
ifUU 

(UU 
PRIVATE_CONST_FIVEUU 
!=UU  
$numUU  !
)UU! "
{VV 	
dataYY 
=YY 
nullYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
if`` 

(`` 
PRIVATE_CONST_FIVE`` 
==``  
$num``  !
)``! "
{aa 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
ifnn 

(nn 
PRIVATE_CONST_FIVEnn 
==nn  
$numnn  !
)nn! "
{oo 	
dataqq 
=qq 
$strqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
nullww 
;ww 
}xx 	
ifyy 

(yy 
PRIVATE_CONST_FIVEyy 
==yy  
$numyy  !
)yy! "
{zz 	
if{{ 
({{ 
data{{ 
!={{ 
null{{ 
){{ 
{|| 
resp~~ 
.~~ 
	AddHeader~~ 
(~~ 
$str~~ )
,~~) *
$str~~+ >
+~~? @
data~~A E
)~~E F
;~~F G
} 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
   	
data
££ 
=
££ 
null
££ 
;
££ 
}
¤¤ 	
if
¥¥ 

(
¥¥  
PRIVATE_CONST_FIVE
¥¥ 
!=
¥¥  
$num
¥¥  !
)
¥¥! "
{
¦¦ 	
IO
¨¨ 
.
¨¨ 
	WriteLine
¨¨ 
(
¨¨ 
$str
¨¨ /
)
¨¨/ 0
;
¨¨0 1
}
©© 	
else
ªª 
{
«« 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
data
¯¯- 1
,
¯¯1 2
Encoding
¯¯3 ;
.
¯¯; <
UTF8
¯¯< @
)
¯¯@ A
;
¯¯A B
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
}
²² 	
}
³³ 
private
¶¶ 
void
¶¶ 
GoodB2G2
¶¶ 
(
¶¶ 
HttpRequest
¶¶ %
req
¶¶& )
,
¶¶) *
HttpResponse
¶¶+ 7
resp
¶¶8 <
)
¶¶< =
{
·· 
string
¸¸ 
data
¸¸ 
;
¸¸ 
if
¹¹ 

(
¹¹  
PRIVATE_CONST_FIVE
¹¹ 
==
¹¹  
$num
¹¹  !
)
¹¹! "
{
ºº 	
data
»» 
=
»» 
$str
»» 
;
»» 
{
½½ 
try
¾¾ 
{
¿¿ 
using
ÀÀ 
(
ÀÀ 
	WebClient
ÀÀ $
client
ÀÀ% +
=
ÀÀ, -
new
ÀÀ. 1
	WebClient
ÀÀ2 ;
(
ÀÀ; <
)
ÀÀ< =
)
ÀÀ= >
{
ÁÁ 
using
ÂÂ 
(
ÂÂ 
StreamReader
ÂÂ +
sr
ÂÂ, .
=
ÂÂ/ 0
new
ÂÂ1 4
StreamReader
ÂÂ5 A
(
ÂÂA B
client
ÂÂB H
.
ÂÂH I
OpenRead
ÂÂI Q
(
ÂÂQ R
$str
ÂÂR k
)
ÂÂk l
)
ÂÂl m
)
ÂÂm n
{
ÃÃ 
data
ÇÇ  
=
ÇÇ! "
sr
ÇÇ# %
.
ÇÇ% &
ReadLine
ÇÇ& .
(
ÇÇ. /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÈÈ 
}
ÉÉ 
}
ÊÊ 
catch
ËË 
(
ËË 
IOException
ËË "
exceptIO
ËË# +
)
ËË+ ,
{
ÌÌ 
IO
ÍÍ 
.
ÍÍ 
Logger
ÍÍ 
.
ÍÍ 
Log
ÍÍ !
(
ÍÍ! "
NLog
ÍÍ" &
.
ÍÍ& '
LogLevel
ÍÍ' /
.
ÍÍ/ 0
Warn
ÍÍ0 4
,
ÍÍ4 5
exceptIO
ÍÍ6 >
,
ÍÍ> ?
$str
ÍÍ@ [
)
ÍÍ[ \
;
ÍÍ\ ]
}
ÎÎ 
}
ÏÏ 
}
ÐÐ 	
else
ÑÑ 
{
ÒÒ 	
data
ÕÕ 
=
ÕÕ 
null
ÕÕ 
;
ÕÕ 
}
ÖÖ 	
if
×× 

(
××  
PRIVATE_CONST_FIVE
×× 
==
××  
$num
××  !
)
××! "
{
ØØ 	
if
ÙÙ 
(
ÙÙ 
data
ÙÙ 
!=
ÙÙ 
null
ÙÙ 
)
ÙÙ 
{
ÚÚ 
data
ÜÜ 
=
ÜÜ 
HttpUtility
ÜÜ "
.
ÜÜ" #
	UrlEncode
ÜÜ# ,
(
ÜÜ, -
data
ÜÜ- 1
,
ÜÜ1 2
Encoding
ÜÜ3 ;
.
ÜÜ; <
UTF8
ÜÜ< @
)
ÜÜ@ A
;
ÜÜA B
resp
ÝÝ 
.
ÝÝ 
	AddHeader
ÝÝ 
(
ÝÝ 
$str
ÝÝ )
,
ÝÝ) *
$str
ÝÝ+ >
+
ÝÝ? @
data
ÝÝA E
)
ÝÝE F
;
ÝÝF G
}
ÞÞ 
}
ßß 	
}
àà 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
HttpRequest
ââ )
req
ââ* -
,
ââ- .
HttpResponse
ââ/ ;
resp
ââ< @
)
ââ@ A
{
ãã 
GoodG2B1
ää 
(
ää 
req
ää 
,
ää 
resp
ää 
)
ää 
;
ää 
GoodG2B2
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodB2G1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
}
èè 
}êê 
}ëë ÚW
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_07 @
:A B
AbstractTestCaseWebC V
{ 
private## 
int## 
privateFive## 
=## 
$num## 
;##  
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
privateFive(( 
==(( 
$num(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{,, 
try-- 
{.. 
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
data66  
=66! "
sr66# %
.66% &
ReadLine66& .
(66. /
)66/ 0
;660 1
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
}?? 	
else@@ 
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
ifFF 

(FF 
privateFiveFF 
==FF 
$numFF 
)FF 
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
HttpRequestRR %
reqRR& )
,RR) *
HttpResponseRR+ 7
respRR8 <
)RR< =
{SS 
stringTT 
dataTT 
;TT 
ifUU 

(UU 
privateFiveUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
nullYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
if`` 

(`` 
privateFive`` 
==`` 
$num`` 
)`` 
{aa 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
ifnn 

(nn 
privateFivenn 
==nn 
$numnn 
)nn 
{oo 	
dataqq 
=qq 
$strqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
nullww 
;ww 
}xx 	
ifyy 

(yy 
privateFiveyy 
==yy 
$numyy 
)yy 
{zz 	
if{{ 
({{ 
data{{ 
!={{ 
null{{ 
){{ 
{|| 
resp~~ 
.~~ 
	AddHeader~~ 
(~~ 
$str~~ )
,~~) *
$str~~+ >
+~~? @
data~~A E
)~~E F
;~~F G
} 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
   	
data
££ 
=
££ 
null
££ 
;
££ 
}
¤¤ 	
if
¥¥ 

(
¥¥ 
privateFive
¥¥ 
!=
¥¥ 
$num
¥¥ 
)
¥¥ 
{
¦¦ 	
IO
¨¨ 
.
¨¨ 
	WriteLine
¨¨ 
(
¨¨ 
$str
¨¨ /
)
¨¨/ 0
;
¨¨0 1
}
©© 	
else
ªª 
{
«« 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
data
¯¯- 1
,
¯¯1 2
Encoding
¯¯3 ;
.
¯¯; <
UTF8
¯¯< @
)
¯¯@ A
;
¯¯A B
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
}
²² 	
}
³³ 
private
¶¶ 
void
¶¶ 
GoodB2G2
¶¶ 
(
¶¶ 
HttpRequest
¶¶ %
req
¶¶& )
,
¶¶) *
HttpResponse
¶¶+ 7
resp
¶¶8 <
)
¶¶< =
{
·· 
string
¸¸ 
data
¸¸ 
;
¸¸ 
if
¹¹ 

(
¹¹ 
privateFive
¹¹ 
==
¹¹ 
$num
¹¹ 
)
¹¹ 
{
ºº 	
data
»» 
=
»» 
$str
»» 
;
»» 
{
½½ 
try
¾¾ 
{
¿¿ 
using
ÀÀ 
(
ÀÀ 
	WebClient
ÀÀ $
client
ÀÀ% +
=
ÀÀ, -
new
ÀÀ. 1
	WebClient
ÀÀ2 ;
(
ÀÀ; <
)
ÀÀ< =
)
ÀÀ= >
{
ÁÁ 
using
ÂÂ 
(
ÂÂ 
StreamReader
ÂÂ +
sr
ÂÂ, .
=
ÂÂ/ 0
new
ÂÂ1 4
StreamReader
ÂÂ5 A
(
ÂÂA B
client
ÂÂB H
.
ÂÂH I
OpenRead
ÂÂI Q
(
ÂÂQ R
$str
ÂÂR k
)
ÂÂk l
)
ÂÂl m
)
ÂÂm n
{
ÃÃ 
data
ÇÇ  
=
ÇÇ! "
sr
ÇÇ# %
.
ÇÇ% &
ReadLine
ÇÇ& .
(
ÇÇ. /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÈÈ 
}
ÉÉ 
}
ÊÊ 
catch
ËË 
(
ËË 
IOException
ËË "
exceptIO
ËË# +
)
ËË+ ,
{
ÌÌ 
IO
ÍÍ 
.
ÍÍ 
Logger
ÍÍ 
.
ÍÍ 
Log
ÍÍ !
(
ÍÍ! "
NLog
ÍÍ" &
.
ÍÍ& '
LogLevel
ÍÍ' /
.
ÍÍ/ 0
Warn
ÍÍ0 4
,
ÍÍ4 5
exceptIO
ÍÍ6 >
,
ÍÍ> ?
$str
ÍÍ@ [
)
ÍÍ[ \
;
ÍÍ\ ]
}
ÎÎ 
}
ÏÏ 
}
ÐÐ 	
else
ÑÑ 
{
ÒÒ 	
data
ÕÕ 
=
ÕÕ 
null
ÕÕ 
;
ÕÕ 
}
ÖÖ 	
if
×× 

(
×× 
privateFive
×× 
==
×× 
$num
×× 
)
×× 
{
ØØ 	
if
ÙÙ 
(
ÙÙ 
data
ÙÙ 
!=
ÙÙ 
null
ÙÙ 
)
ÙÙ 
{
ÚÚ 
data
ÜÜ 
=
ÜÜ 
HttpUtility
ÜÜ "
.
ÜÜ" #
	UrlEncode
ÜÜ# ,
(
ÜÜ, -
data
ÜÜ- 1
,
ÜÜ1 2
Encoding
ÜÜ3 ;
.
ÜÜ; <
UTF8
ÜÜ< @
)
ÜÜ@ A
;
ÜÜA B
resp
ÝÝ 
.
ÝÝ 
	AddHeader
ÝÝ 
(
ÝÝ 
$str
ÝÝ )
,
ÝÝ) *
$str
ÝÝ+ >
+
ÝÝ? @
data
ÝÝA E
)
ÝÝE F
;
ÝÝF G
}
ÞÞ 
}
ßß 	
}
àà 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
HttpRequest
ââ )
req
ââ* -
,
ââ- .
HttpResponse
ââ/ ;
resp
ââ< @
)
ââ@ A
{
ãã 
GoodG2B1
ää 
(
ää 
req
ää 
,
ää 
resp
ää 
)
ää 
;
ää 
GoodG2B2
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodB2G1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
}
èè 
}êê 
}ëë ÛZ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_08 @
:A B
AbstractTestCaseWebC V
{ 
private## 
static## 
bool## 
PrivateReturnsTrue## *
(##* +
)##+ ,
{$$ 
return%% 
true%% 
;%% 
}&& 
private(( 
static(( 
bool(( 
PrivateReturnsFalse(( +
(((+ ,
)((, -
{)) 
return** 
false** 
;** 
}++ 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
if00 

(00 
PrivateReturnsTrue00 
(00 
)00  
)00  !
{11 	
data22 
=22 
$str22 
;22 
{44 
try55 
{66 
using77 
(77 
	WebClient77 $
client77% +
=77, -
new77. 1
	WebClient772 ;
(77; <
)77< =
)77= >
{88 
using99 
(99 
StreamReader99 +
sr99, .
=99/ 0
new991 4
StreamReader995 A
(99A B
client99B H
.99H I
OpenRead99I Q
(99Q R
$str99R k
)99k l
)99l m
)99m n
{:: 
data>>  
=>>! "
sr>># %
.>>% &
ReadLine>>& .
(>>. /
)>>/ 0
;>>0 1
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
ifNN 

(NN 
PrivateReturnsTrueNN 
(NN 
)NN  
)NN  !
{OO 	
ifPP 
(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 
respSS 
.SS 
	AddHeaderSS 
(SS 
$strSS )
,SS) *
$strSS+ >
+SS? @
dataSSA E
)SSE F
;SSF G
}TT 
}UU 	
}VV 
privateZZ 
voidZZ 
GoodG2B1ZZ 
(ZZ 
HttpRequestZZ %
reqZZ& )
,ZZ) *
HttpResponseZZ+ 7
respZZ8 <
)ZZ< =
{[[ 
string\\ 
data\\ 
;\\ 
if]] 

(]] 
PrivateReturnsFalse]] 
(]]  
)]]  !
)]]! "
{^^ 	
dataaa 
=aa 
nullaa 
;aa 
}bb 	
elsecc 
{dd 	
dataff 
=ff 
$strff 
;ff 
}gg 	
ifhh 

(hh 
PrivateReturnsTruehh 
(hh 
)hh  
)hh  !
{ii 	
ifjj 
(jj 
datajj 
!=jj 
nulljj 
)jj 
{kk 
respmm 
.mm 
	AddHeadermm 
(mm 
$strmm )
,mm) *
$strmm+ >
+mm? @
datammA E
)mmE F
;mmF G
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodG2B2ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
PrivateReturnsTruevv 
(vv 
)vv  
)vv  !
{ww 	
datayy 
=yy 
$stryy 
;yy 
}zz 	
else{{ 
{|| 	
data 
= 
null 
; 
}
 	
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
   
catch
¡¡ 
(
¡¡ 
IOException
¡¡ "
exceptIO
¡¡# +
)
¡¡+ ,
{
¢¢ 
IO
££ 
.
££ 
Logger
££ 
.
££ 
Log
££ !
(
££! "
NLog
££" &
.
££& '
LogLevel
££' /
.
££/ 0
Warn
££0 4
,
££4 5
exceptIO
££6 >
,
££> ?
$str
££@ [
)
££[ \
;
££\ ]
}
¤¤ 
}
¥¥ 
}
¦¦ 	
else
§§ 
{
¨¨ 	
data
«« 
=
«« 
null
«« 
;
«« 
}
¬¬ 	
if
­­ 

(
­­ !
PrivateReturnsFalse
­­ 
(
­­  
)
­­  !
)
­­! "
{
®® 	
IO
°° 
.
°° 
	WriteLine
°° 
(
°° 
$str
°° /
)
°°/ 0
;
°°0 1
}
±± 	
else
²² 
{
³³ 	
if
´´ 
(
´´ 
data
´´ 
!=
´´ 
null
´´ 
)
´´ 
{
µµ 
data
·· 
=
·· 
HttpUtility
·· "
.
··" #
	UrlEncode
··# ,
(
··, -
data
··- 1
,
··1 2
Encoding
··3 ;
.
··; <
UTF8
··< @
)
··@ A
;
··A B
resp
¸¸ 
.
¸¸ 
	AddHeader
¸¸ 
(
¸¸ 
$str
¸¸ )
,
¸¸) *
$str
¸¸+ >
+
¸¸? @
data
¸¸A E
)
¸¸E F
;
¸¸F G
}
¹¹ 
}
ºº 	
}
»» 
private
¾¾ 
void
¾¾ 
GoodB2G2
¾¾ 
(
¾¾ 
HttpRequest
¾¾ %
req
¾¾& )
,
¾¾) *
HttpResponse
¾¾+ 7
resp
¾¾8 <
)
¾¾< =
{
¿¿ 
string
ÀÀ 
data
ÀÀ 
;
ÀÀ 
if
ÁÁ 

(
ÁÁ  
PrivateReturnsTrue
ÁÁ 
(
ÁÁ 
)
ÁÁ  
)
ÁÁ  !
{
ÂÂ 	
data
ÃÃ 
=
ÃÃ 
$str
ÃÃ 
;
ÃÃ 
{
ÅÅ 
try
ÆÆ 
{
ÇÇ 
using
ÈÈ 
(
ÈÈ 
	WebClient
ÈÈ $
client
ÈÈ% +
=
ÈÈ, -
new
ÈÈ. 1
	WebClient
ÈÈ2 ;
(
ÈÈ; <
)
ÈÈ< =
)
ÈÈ= >
{
ÉÉ 
using
ÊÊ 
(
ÊÊ 
StreamReader
ÊÊ +
sr
ÊÊ, .
=
ÊÊ/ 0
new
ÊÊ1 4
StreamReader
ÊÊ5 A
(
ÊÊA B
client
ÊÊB H
.
ÊÊH I
OpenRead
ÊÊI Q
(
ÊÊQ R
$str
ÊÊR k
)
ÊÊk l
)
ÊÊl m
)
ÊÊm n
{
ËË 
data
ÏÏ  
=
ÏÏ! "
sr
ÏÏ# %
.
ÏÏ% &
ReadLine
ÏÏ& .
(
ÏÏ. /
)
ÏÏ/ 0
;
ÏÏ0 1
}
ÐÐ 
}
ÑÑ 
}
ÒÒ 
catch
ÓÓ 
(
ÓÓ 
IOException
ÓÓ "
exceptIO
ÓÓ# +
)
ÓÓ+ ,
{
ÔÔ 
IO
ÕÕ 
.
ÕÕ 
Logger
ÕÕ 
.
ÕÕ 
Log
ÕÕ !
(
ÕÕ! "
NLog
ÕÕ" &
.
ÕÕ& '
LogLevel
ÕÕ' /
.
ÕÕ/ 0
Warn
ÕÕ0 4
,
ÕÕ4 5
exceptIO
ÕÕ6 >
,
ÕÕ> ?
$str
ÕÕ@ [
)
ÕÕ[ \
;
ÕÕ\ ]
}
ÖÖ 
}
×× 
}
ØØ 	
else
ÙÙ 
{
ÚÚ 	
data
ÝÝ 
=
ÝÝ 
null
ÝÝ 
;
ÝÝ 
}
ÞÞ 	
if
ßß 

(
ßß  
PrivateReturnsTrue
ßß 
(
ßß 
)
ßß  
)
ßß  !
{
àà 	
if
áá 
(
áá 
data
áá 
!=
áá 
null
áá 
)
áá 
{
ââ 
data
ää 
=
ää 
HttpUtility
ää "
.
ää" #
	UrlEncode
ää# ,
(
ää, -
data
ää- 1
,
ää1 2
Encoding
ää3 ;
.
ää; <
UTF8
ää< @
)
ää@ A
;
ääA B
resp
åå 
.
åå 
	AddHeader
åå 
(
åå 
$str
åå )
,
åå) *
$str
åå+ >
+
åå? @
data
ååA E
)
ååE F
;
ååF G
}
ææ 
}
çç 	
}
èè 
public
êê 

override
êê 
void
êê 
Good
êê 
(
êê 
HttpRequest
êê )
req
êê* -
,
êê- .
HttpResponse
êê/ ;
resp
êê< @
)
êê@ A
{
ëë 
GoodG2B1
ìì 
(
ìì 
req
ìì 
,
ìì 
resp
ìì 
)
ìì 
;
ìì 
GoodG2B2
íí 
(
íí 
req
íí 
,
íí 
resp
íí 
)
íí 
;
íí 
GoodB2G1
îî 
(
îî 
req
îî 
,
îî 
resp
îî 
)
îî 
;
îî 
GoodB2G2
ïï 
(
ïï 
req
ïï 
,
ïï 
resp
ïï 
)
ïï 
;
ïï 
}
ðð 
}òò 
}óó W
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_09 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.##  
STATIC_READONLY_TRUE## #
)### $
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA  
STATIC_READONLY_TRUEAA #
)AA# $
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP !
STATIC_READONLY_FALSEPP $
)PP$ %
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[  
STATIC_READONLY_TRUE[[ #
)[[# $
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii  
STATIC_READONLY_TRUEii #
)ii# $
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt  
STATIC_READONLY_TRUEtt #
)tt# $
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   #
STATIC_READONLY_FALSE
   $
)
  $ %
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ "
STATIC_READONLY_TRUE
´´ #
)
´´# $
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ "
STATIC_READONLY_TRUE
ÒÒ #
)
ÒÒ# $
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ ­V
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_10 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 

staticTrue## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA 

staticTrueAA 
)AA 
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
staticFalsePP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[ 

staticTrue[[ 
)[[ 
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii 

staticTrueii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt 

staticTruett 
)tt 
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   
staticFalse
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 

staticTrue
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ 

staticTrue
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ ¯Y
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_11 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 
StaticReturnsTrue##  
(##  !
)##! "
)##" #
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA
 
IOAA 
.AA 
StaticReturnsTrueAA 
(AA  
)AA  !
)AA! "
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
StaticReturnsFalsePP !
(PP! "
)PP" #
)PP# $
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[ 
StaticReturnsTrue[[  
([[  !
)[[! "
)[[" #
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii 
StaticReturnsTrueii  
(ii  !
)ii! "
)ii" #
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt 
StaticReturnsTruett  
(tt  !
)tt! "
)tt" #
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
    
StaticReturnsFalse
   !
(
  ! "
)
  " #
)
  # $
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 
StaticReturnsTrue
´´  
(
´´  !
)
´´! "
)
´´" #
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ 
StaticReturnsTrue
ÒÒ  
(
ÒÒ  !
)
ÒÒ! "
)
ÒÒ" #
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ N
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_12 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(##
 
IO## 
.## $
StaticReturnsTrueOrFalse## &
(##& '
)##' (
)##( )
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data>> 
=>> 
$str>> 
;>> 
}?? 	
if@@ 

(@@
 
IO@@ 
.@@ $
StaticReturnsTrueOrFalse@@ &
(@@& '
)@@' (
)@@( )
{AA 	
ifBB 
(BB 
dataBB 
!=BB 
nullBB 
)BB 
{CC 
respEE 
.EE 
	AddHeaderEE 
(EE 
$strEE )
,EE) *
$strEE+ >
+EE? @
dataEEA E
)EEE F
;EEF G
}FF 
}GG 	
elseHH 
{II 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
dataMM- 1
,MM1 2
EncodingMM3 ;
.MM; <
UTF8MM< @
)MM@ A
;MMA B
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
}QQ 
privateVV 
voidVV 
GoodG2BVV 
(VV 
HttpRequestVV $
reqVV% (
,VV( )
HttpResponseVV* 6
respVV7 ;
)VV; <
{WW 
stringXX 
dataXX 
;XX 
ifYY 

(YY
 
IOYY 
.YY $
StaticReturnsTrueOrFalseYY &
(YY& '
)YY' (
)YY( )
{ZZ 	
data\\ 
=\\ 
$str\\ 
;\\ 
}]] 	
else^^ 
{__ 	
dataaa 
=aa 
$straa 
;aa 
}bb 	
ifcc 

(cc
 
IOcc 
.cc $
StaticReturnsTrueOrFalsecc &
(cc& '
)cc' (
)cc( )
{dd 	
ifee 
(ee 
dataee 
!=ee 
nullee 
)ee 
{ff 
resphh 
.hh 
	AddHeaderhh 
(hh 
$strhh )
,hh) *
$strhh+ >
+hh? @
datahhA E
)hhE F
;hhF G
}ii 
}jj 	
elsekk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privateww 
voidww 
GoodB2Gww 
(ww 
HttpRequestww $
reqww% (
,ww( )
HttpResponseww* 6
respww7 ;
)ww; <
{xx 
stringyy 
datayy 
;yy 
ifzz 

(zz
 
IOzz 
.zz $
StaticReturnsTrueOrFalsezz &
(zz& '
)zz' (
)zz( )
{{{ 	
data|| 
=|| 
$str|| 
;|| 
{~~ 
try 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
    
=
  ! "
sr
  # %
.
  % &
ReadLine
  & .
(
  . /
)
  / 0
;
  0 1
}
¡¡ 
}
¢¢ 
}
££ 
catch
¤¤ 
(
¤¤ 
IOException
¤¤ "
exceptIO
¤¤# +
)
¤¤+ ,
{
¥¥ 
IO
¦¦ 
.
¦¦ 
Logger
¦¦ 
.
¦¦ 
Log
¦¦ !
(
¦¦! "
NLog
¦¦" &
.
¦¦& '
LogLevel
¦¦' /
.
¦¦/ 0
Warn
¦¦0 4
,
¦¦4 5
exceptIO
¦¦6 >
,
¦¦> ?
$str
¦¦@ [
)
¦¦[ \
;
¦¦\ ]
}
§§ 
}
¨¨ 
}
©© 	
if
ªª 

(
ªª
 
IO
ªª 
.
ªª &
StaticReturnsTrueOrFalse
ªª &
(
ªª& '
)
ªª' (
)
ªª( )
{
«« 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
data
¯¯- 1
,
¯¯1 2
Encoding
¯¯3 ;
.
¯¯; <
UTF8
¯¯< @
)
¯¯@ A
;
¯¯A B
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
}
²² 	
else
³³ 
{
´´ 	
if
µµ 
(
µµ 
data
µµ 
!=
µµ 
null
µµ 
)
µµ 
{
¶¶ 
data
¸¸ 
=
¸¸ 
HttpUtility
¸¸ "
.
¸¸" #
	UrlEncode
¸¸# ,
(
¸¸, -
data
¸¸- 1
,
¸¸1 2
Encoding
¸¸3 ;
.
¸¸; <
UTF8
¸¸< @
)
¸¸@ A
;
¸¸A B
resp
¹¹ 
.
¹¹ 
	AddHeader
¹¹ 
(
¹¹ 
$str
¹¹ )
,
¹¹) *
$str
¹¹+ >
+
¹¹? @
data
¹¹A E
)
¹¹E F
;
¹¹F G
}
ºº 
}
»» 	
}
¼¼ 
public
¾¾ 

override
¾¾ 
void
¾¾ 
Good
¾¾ 
(
¾¾ 
HttpRequest
¾¾ )
req
¾¾* -
,
¾¾- .
HttpResponse
¾¾/ ;
resp
¾¾< @
)
¾¾@ A
{
ÀÀ 
GoodG2B
ÁÁ 
(
ÁÁ 
req
ÁÁ 
,
ÁÁ 
resp
ÁÁ 
)
ÁÁ 
;
ÁÁ 
GoodB2G
ÂÂ 
(
ÂÂ 
req
ÂÂ 
,
ÂÂ 
resp
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÃÃ 
}ÅÅ 
}ÆÆ óY
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_13 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.##  
STATIC_READONLY_FIVE## #
==### %
$num##% &
)##& '
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA  
STATIC_READONLY_FIVEAA #
==AA# %
$numAA% &
)AA& '
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP  
STATIC_READONLY_FIVEPP #
!=PP# %
$numPP% &
)PP& '
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[  
STATIC_READONLY_FIVE[[ #
==[[# %
$num[[% &
)[[& '
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii  
STATIC_READONLY_FIVEii #
==ii# %
$numii% &
)ii& '
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt  
STATIC_READONLY_FIVEtt #
==tt# %
$numtt% &
)tt& '
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   "
STATIC_READONLY_FIVE
   #
!=
  # %
$num
  % &
)
  & '
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ "
STATIC_READONLY_FIVE
´´ #
==
´´# %
$num
´´% &
)
´´& '
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ "
STATIC_READONLY_FIVE
ÒÒ #
==
ÒÒ# %
$num
ÒÒ% &
)
ÒÒ& '
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ Y
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_14 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 

staticFive## 
==## 
$num## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
}:: 	
else;; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
ifAA 

(AA 
IOAA 
.AA 

staticFiveAA 
==AA 
$numAA 
)AA 
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 

staticFivePP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[ 
IO[[ 
.[[ 

staticFive[[ 
==[[ 
$num[[ 
)[[ 
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
IOii 
.ii 

staticFiveii 
==ii 
$numii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
IOtt 
.tt 

staticFivett 
==tt 
$numtt 
)tt 
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 
respyy 
.yy 
	AddHeaderyy 
(yy 
$stryy )
,yy) *
$stryy+ >
+yy? @
datayyA E
)yyE F
;yyF G
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
 
using
 
(
 
StreamReader
 +
sr
, .
=
/ 0
new
1 4
StreamReader
5 A
(
A B
client
B H
.
H I
OpenRead
I Q
(
Q R
$str
R k
)
k l
)
l m
)
m n
{
 
data
  
=
! "
sr
# %
.
% &
ReadLine
& .
(
. /
)
/ 0
;
0 1
}
 
}
 
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
IO
   
.
   

staticFive
   
!=
   
$num
   
)
   
{
¡¡ 	
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
}
¤¤ 	
else
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodB2G2
±± 
(
±± 
HttpRequest
±± %
req
±±& )
,
±±) *
HttpResponse
±±+ 7
resp
±±8 <
)
±±< =
{
²² 
string
³³ 
data
³³ 
;
³³ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 

staticFive
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
µµ 	
data
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 
{
¸¸ 
try
¹¹ 
{
ºº 
using
»» 
(
»» 
	WebClient
»» $
client
»»% +
=
»», -
new
»». 1
	WebClient
»»2 ;
(
»»; <
)
»»< =
)
»»= >
{
¼¼ 
using
½½ 
(
½½ 
StreamReader
½½ +
sr
½½, .
=
½½/ 0
new
½½1 4
StreamReader
½½5 A
(
½½A B
client
½½B H
.
½½H I
OpenRead
½½I Q
(
½½Q R
$str
½½R k
)
½½k l
)
½½l m
)
½½m n
{
¾¾ 
data
ÂÂ  
=
ÂÂ! "
sr
ÂÂ# %
.
ÂÂ% &
ReadLine
ÂÂ& .
(
ÂÂ. /
)
ÂÂ/ 0
;
ÂÂ0 1
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
catch
ÆÆ 
(
ÆÆ 
IOException
ÆÆ "
exceptIO
ÆÆ# +
)
ÆÆ+ ,
{
ÇÇ 
IO
ÈÈ 
.
ÈÈ 
Logger
ÈÈ 
.
ÈÈ 
Log
ÈÈ !
(
ÈÈ! "
NLog
ÈÈ" &
.
ÈÈ& '
LogLevel
ÈÈ' /
.
ÈÈ/ 0
Warn
ÈÈ0 4
,
ÈÈ4 5
exceptIO
ÈÈ6 >
,
ÈÈ> ?
$str
ÈÈ@ [
)
ÈÈ[ \
;
ÈÈ\ ]
}
ÉÉ 
}
ÊÊ 
}
ËË 	
else
ÌÌ 
{
ÍÍ 	
data
ÐÐ 
=
ÐÐ 
null
ÐÐ 
;
ÐÐ 
}
ÑÑ 	
if
ÒÒ 

(
ÒÒ 
IO
ÒÒ 
.
ÒÒ 

staticFive
ÒÒ 
==
ÒÒ 
$num
ÒÒ 
)
ÒÒ 
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
}
ÚÚ 	
}
ÛÛ 
public
ÝÝ 

override
ÝÝ 
void
ÝÝ 
Good
ÝÝ 
(
ÝÝ 
HttpRequest
ÝÝ )
req
ÝÝ* -
,
ÝÝ- .
HttpResponse
ÝÝ/ ;
resp
ÝÝ< @
)
ÝÝ@ A
{
ÞÞ 
GoodG2B1
ßß 
(
ßß 
req
ßß 
,
ßß 
resp
ßß 
)
ßß 
;
ßß 
GoodG2B2
àà 
(
àà 
req
àà 
,
àà 
resp
àà 
)
àà 
;
àà 
GoodB2G1
áá 
(
áá 
req
áá 
,
áá 
resp
áá 
)
áá 
;
áá 
GoodB2G2
ââ 
(
ââ 
req
ââ 
,
ââ 
resp
ââ 
)
ââ 
;
ââ 
}
ãã 
}åå 
}ææ Íb
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_15 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
switch## 
(## 
$num## 
)## 
{$$ 	
case%% 
$num%% 
:%% 
data&& 
=&& 
$str&& 
;&& 
{(( 
try)) 
{** 
using++ 
(++ 
	WebClient++ $
client++% +
=++, -
new++. 1
	WebClient++2 ;
(++; <
)++< =
)++= >
{,, 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
client--B H
.--H I
OpenRead--I Q
(--Q R
$str--R k
)--k l
)--l m
)--m n
{.. 
data22  
=22! "
sr22# %
.22% &
ReadLine22& .
(22. /
)22/ 0
;220 1
}33 
}44 
}55 
catch66 
(66 
IOException66 "
exceptIO66# +
)66+ ,
{77 
IO88 
.88 
Logger88 
.88 
Log88 !
(88! "
NLog88" &
.88& '
LogLevel88' /
.88/ 0
Warn880 4
,884 5
exceptIO886 >
,88> ?
$str88@ [
)88[ \
;88\ ]
}99 
}:: 
break;; 
;;; 
default<< 
:<< 
data?? 
=?? 
null?? 
;?? 
break@@ 
;@@ 
}AA 	
switchBB 
(BB 
$numBB 
)BB 
{CC 	
caseDD 
$numDD 
:DD 
ifEE 
(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH )
,HH) *
$strHH+ >
+HH? @
dataHHA E
)HHE F
;HHF G
}II 
breakJJ 
;JJ 
defaultKK 
:KK 
IOMM 
.MM 
	WriteLineMM 
(MM 
$strMM /
)MM/ 0
;MM0 1
breakNN 
;NN 
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
HttpRequestTT %
reqTT& )
,TT) *
HttpResponseTT+ 7
respTT8 <
)TT< =
{UU 
stringVV 
dataVV 
;VV 
switchWW 
(WW 
$numWW 
)WW 
{XX 	
caseYY 
$numYY 
:YY 
data\\ 
=\\ 
null\\ 
;\\ 
break]] 
;]] 
default^^ 
:^^ 
data`` 
=`` 
$str`` 
;`` 
breakaa 
;aa 
}bb 	
switchcc 
(cc 
$numcc 
)cc 
{dd 	
caseee 
$numee 
:ee 
ifff 
(ff 
dataff 
!=ff 
nullff 
)ff 
{gg 
respii 
.ii 
	AddHeaderii 
(ii 
$strii )
,ii) *
$strii+ >
+ii? @
dataiiA E
)iiE F
;iiF G
}jj 
breakkk 
;kk 
defaultll 
:ll 
IOnn 
.nn 
	WriteLinenn 
(nn 
$strnn /
)nn/ 0
;nn0 1
breakoo 
;oo 
}pp 	
}qq 
privatett 
voidtt 
GoodG2B2tt 
(tt 
HttpRequesttt %
reqtt& )
,tt) *
HttpResponsett+ 7
resptt8 <
)tt< =
{uu 
stringvv 
datavv 
;vv 
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
data{{ 
={{ 
$str{{ 
;{{ 
break|| 
;|| 
default}} 
:}} 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
default
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
using
 
(
 
	WebClient
 $
client
% +
=
, -
new
. 1
	WebClient
2 ;
(
; <
)
< =
)
= >
{
   
using
¡¡ 
(
¡¡ 
StreamReader
¡¡ +
sr
¡¡, .
=
¡¡/ 0
new
¡¡1 4
StreamReader
¡¡5 A
(
¡¡A B
client
¡¡B H
.
¡¡H I
OpenRead
¡¡I Q
(
¡¡Q R
$str
¡¡R k
)
¡¡k l
)
¡¡l m
)
¡¡m n
{
¢¢ 
data
¦¦  
=
¦¦! "
sr
¦¦# %
.
¦¦% &
ReadLine
¦¦& .
(
¦¦. /
)
¦¦/ 0
;
¦¦0 1
}
§§ 
}
¨¨ 
}
©© 
catch
ªª 
(
ªª 
IOException
ªª "
exceptIO
ªª# +
)
ªª+ ,
{
«« 
IO
¬¬ 
.
¬¬ 
Logger
¬¬ 
.
¬¬ 
Log
¬¬ !
(
¬¬! "
NLog
¬¬" &
.
¬¬& '
LogLevel
¬¬' /
.
¬¬/ 0
Warn
¬¬0 4
,
¬¬4 5
exceptIO
¬¬6 >
,
¬¬> ?
$str
¬¬@ [
)
¬¬[ \
;
¬¬\ ]
}
­­ 
}
®® 
break
¯¯ 
;
¯¯ 
default
°° 
:
°° 
data
³³ 
=
³³ 
null
³³ 
;
³³ 
break
´´ 
;
´´ 
}
µµ 	
switch
¶¶ 
(
¶¶ 
$num
¶¶ 
)
¶¶ 
{
·· 	
case
¸¸ 
$num
¸¸ 
:
¸¸ 
IO
ºº 
.
ºº 
	WriteLine
ºº 
(
ºº 
$str
ºº /
)
ºº/ 0
;
ºº0 1
break
»» 
;
»» 
default
¼¼ 
:
¼¼ 
if
½½ 
(
½½ 
data
½½ 
!=
½½ 
null
½½ 
)
½½ 
{
¾¾ 
data
ÀÀ 
=
ÀÀ 
HttpUtility
ÀÀ "
.
ÀÀ" #
	UrlEncode
ÀÀ# ,
(
ÀÀ, -
data
ÀÀ- 1
,
ÀÀ1 2
Encoding
ÀÀ3 ;
.
ÀÀ; <
UTF8
ÀÀ< @
)
ÀÀ@ A
;
ÀÀA B
resp
ÁÁ 
.
ÁÁ 
	AddHeader
ÁÁ 
(
ÁÁ 
$str
ÁÁ )
,
ÁÁ) *
$str
ÁÁ+ >
+
ÁÁ? @
data
ÁÁA E
)
ÁÁE F
;
ÁÁF G
}
ÂÂ 
break
ÃÃ 
;
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
private
ÈÈ 
void
ÈÈ 
GoodB2G2
ÈÈ 
(
ÈÈ 
HttpRequest
ÈÈ %
req
ÈÈ& )
,
ÈÈ) *
HttpResponse
ÈÈ+ 7
resp
ÈÈ8 <
)
ÈÈ< =
{
ÉÉ 
string
ÊÊ 
data
ÊÊ 
;
ÊÊ 
switch
ËË 
(
ËË 
$num
ËË 
)
ËË 
{
ÌÌ 	
case
ÍÍ 
$num
ÍÍ 
:
ÍÍ 
data
ÎÎ 
=
ÎÎ 
$str
ÎÎ 
;
ÎÎ 
{
ÐÐ 
try
ÑÑ 
{
ÒÒ 
using
ÓÓ 
(
ÓÓ 
	WebClient
ÓÓ $
client
ÓÓ% +
=
ÓÓ, -
new
ÓÓ. 1
	WebClient
ÓÓ2 ;
(
ÓÓ; <
)
ÓÓ< =
)
ÓÓ= >
{
ÔÔ 
using
ÕÕ 
(
ÕÕ 
StreamReader
ÕÕ +
sr
ÕÕ, .
=
ÕÕ/ 0
new
ÕÕ1 4
StreamReader
ÕÕ5 A
(
ÕÕA B
client
ÕÕB H
.
ÕÕH I
OpenRead
ÕÕI Q
(
ÕÕQ R
$str
ÕÕR k
)
ÕÕk l
)
ÕÕl m
)
ÕÕm n
{
ÖÖ 
data
ÚÚ  
=
ÚÚ! "
sr
ÚÚ# %
.
ÚÚ% &
ReadLine
ÚÚ& .
(
ÚÚ. /
)
ÚÚ/ 0
;
ÚÚ0 1
}
ÛÛ 
}
ÜÜ 
}
ÝÝ 
catch
ÞÞ 
(
ÞÞ 
IOException
ÞÞ "
exceptIO
ÞÞ# +
)
ÞÞ+ ,
{
ßß 
IO
àà 
.
àà 
Logger
àà 
.
àà 
Log
àà !
(
àà! "
NLog
àà" &
.
àà& '
LogLevel
àà' /
.
àà/ 0
Warn
àà0 4
,
àà4 5
exceptIO
àà6 >
,
àà> ?
$str
àà@ [
)
àà[ \
;
àà\ ]
}
áá 
}
ââ 
break
ãã 
;
ãã 
default
ää 
:
ää 
data
çç 
=
çç 
null
çç 
;
çç 
break
èè 
;
èè 
}
éé 	
switch
êê 
(
êê 
$num
êê 
)
êê 
{
ëë 	
case
ìì 
$num
ìì 
:
ìì 
if
íí 
(
íí 
data
íí 
!=
íí 
null
íí 
)
íí 
{
îî 
data
ðð 
=
ðð 
HttpUtility
ðð "
.
ðð" #
	UrlEncode
ðð# ,
(
ðð, -
data
ðð- 1
,
ðð1 2
Encoding
ðð3 ;
.
ðð; <
UTF8
ðð< @
)
ðð@ A
;
ððA B
resp
ññ 
.
ññ 
	AddHeader
ññ 
(
ññ 
$str
ññ )
,
ññ) *
$str
ññ+ >
+
ññ? @
data
ññA E
)
ññE F
;
ññF G
}
òò 
break
óó 
;
óó 
default
ôô 
:
ôô 
IO
öö 
.
öö 
	WriteLine
öö 
(
öö 
$str
öö /
)
öö/ 0
;
öö0 1
break
÷÷ 
;
÷÷ 
}
øø 	
}
ùù 
public
ûû 

override
ûû 
void
ûû 
Good
ûû 
(
ûû 
HttpRequest
ûû )
req
ûû* -
,
ûû- .
HttpResponse
ûû/ ;
resp
ûû< @
)
ûû@ A
{
üü 
GoodG2B1
ýý 
(
ýý 
req
ýý 
,
ýý 
resp
ýý 
)
ýý 
;
ýý 
GoodG2B2
þþ 
(
þþ 
req
þþ 
,
þþ 
resp
þþ 
)
þþ 
;
þþ 
GoodB2G1
ÿÿ 
(
ÿÿ 
req
ÿÿ 
,
ÿÿ 
resp
ÿÿ 
)
ÿÿ 
;
ÿÿ 
GoodB2G2
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} ¬1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_16 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
while## 
(## 
true## 
)## 
{$$ 	
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
break:: 
;:: 
};; 	
while<< 
(<< 
true<< 
)<< 
{== 	
if>> 
(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA )
,AA) *
$strAA+ >
+AA? @
dataAAA E
)AAE F
;AAF G
}BB 
breakCC 
;CC 
}DD 	
}EE 
privateII 
voidII 
GoodG2BII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataKK 
;KK 
whileLL 
(LL 
trueLL 
)LL 
{MM 	
dataOO 
=OO 
$strOO 
;OO 
breakPP 
;PP 
}QQ 	
whileRR 
(RR 
trueRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
breakYY 
;YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodB2G^^ 
(^^ 
HttpRequest^^ $
req^^% (
,^^( )
HttpResponse^^* 6
resp^^7 ;
)^^; <
{__ 
string`` 
data`` 
;`` 
whileaa 
(aa 
trueaa 
)aa 
{bb 	
datacc 
=cc 
$strcc 
;cc 
{ee 
tryff 
{gg 
usinghh 
(hh 
	WebClienthh $
clienthh% +
=hh, -
newhh. 1
	WebClienthh2 ;
(hh; <
)hh< =
)hh= >
{ii 
usingjj 
(jj 
StreamReaderjj +
srjj, .
=jj/ 0
newjj1 4
StreamReaderjj5 A
(jjA B
clientjjB H
.jjH I
OpenReadjjI Q
(jjQ R
$strjjR k
)jjk l
)jjl m
)jjm n
{kk 
dataoo  
=oo! "
sroo# %
.oo% &
ReadLineoo& .
(oo. /
)oo/ 0
;oo0 1
}pp 
}qq 
}rr 
catchss 
(ss 
IOExceptionss "
exceptIOss# +
)ss+ ,
{tt 
IOuu 
.uu 
Loggeruu 
.uu 
Loguu !
(uu! "
NLoguu" &
.uu& '
LogLeveluu' /
.uu/ 0
Warnuu0 4
,uu4 5
exceptIOuu6 >
,uu> ?
$struu@ [
)uu[ \
;uu\ ]
}vv 
}ww 
breakxx 
;xx 
}yy 	
whilezz 
(zz 
truezz 
)zz 
{{{ 	
if|| 
(|| 
data|| 
!=|| 
null|| 
)|| 
{}} 
data 
= 
HttpUtility "
." #
	UrlEncode# ,
(, -
data- 1
,1 2
Encoding3 ;
.; <
UTF8< @
)@ A
;A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} µ0
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_17 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data'' 
='' 
$str'' 
;'' 
{)) 	
try** 
{++ 
using,, 
(,, 
	WebClient,,  
client,,! '
=,,( )
new,,* -
	WebClient,,. 7
(,,7 8
),,8 9
),,9 :
{-- 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
client..> D
...D E
OpenRead..E M
(..M N
$str..N g
)..g h
)..h i
)..i j
{// 
data33 
=33 
sr33 !
.33! "
ReadLine33" *
(33* +
)33+ ,
;33, -
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
for<< 
(<< 
int<< 
j<< 
=<< 
$num<< 
;<< 
j<< 
<<< 
$num<< 
;<< 
j<<  
++<<  "
)<<" #
{== 	
if>> 
(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA )
,AA) *
$strAA+ >
+AA? @
dataAAA E
)AAE F
;AAF G
}BB 
}CC 	
}DD 
privateHH 
voidHH 
GoodG2BHH 
(HH 
HttpRequestHH $
reqHH% (
,HH( )
HttpResponseHH* 6
respHH7 ;
)HH; <
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
forMM 
(MM 
intMM 
jMM 
=MM 
$numMM 
;MM 
jMM 
<MM 
$numMM 
;MM 
jMM  
++MM  "
)MM" #
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respRR 
.RR 
	AddHeaderRR 
(RR 
$strRR )
,RR) *
$strRR+ >
+RR? @
dataRRA E
)RRE F
;RRF G
}SS 
}TT 	
}UU 
privateXX 
voidXX 
GoodB2GXX 
(XX 
HttpRequestXX $
reqXX% (
,XX( )
HttpResponseXX* 6
respXX7 ;
)XX; <
{YY 
stringZZ 
dataZZ 
;ZZ 
data[[ 
=[[ 
$str[[ 
;[[ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	WebClient``  
client``! '
=``( )
new``* -
	WebClient``. 7
(``7 8
)``8 9
)``9 :
{aa 
usingbb 
(bb 
StreamReaderbb '
srbb( *
=bb+ ,
newbb- 0
StreamReaderbb1 =
(bb= >
clientbb> D
.bbD E
OpenReadbbE M
(bbM N
$strbbN g
)bbg h
)bbh i
)bbi j
{cc 
datagg 
=gg 
srgg !
.gg! "
ReadLinegg" *
(gg* +
)gg+ ,
;gg, -
}hh 
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk 
exceptIOkk '
)kk' (
{ll 
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm "
.mm" #
LogLevelmm# +
.mm+ ,
Warnmm, 0
,mm0 1
exceptIOmm2 :
,mm: ;
$strmm< W
)mmW X
;mmX Y
}nn 
}oo 	
forpp 
(pp 
intpp 
kpp 
=pp 
$numpp 
;pp 
kpp 
<pp 
$numpp 
;pp 
kpp  
++pp  "
)pp" #
{qq 	
ifrr 
(rr 
datarr 
!=rr 
nullrr 
)rr 
{ss 
datauu 
=uu 
HttpUtilityuu "
.uu" #
	UrlEncodeuu# ,
(uu, -
datauu- 1
,uu1 2
Encodinguu3 ;
.uu; <
UTF8uu< @
)uu@ A
;uuA B
respvv 
.vv 
	AddHeadervv 
(vv 
$strvv )
,vv) *
$strvv+ >
+vv? @
datavvA E
)vvE F
;vvF G
}ww 
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
HttpRequest{{ )
req{{* -
,{{- .
HttpResponse{{/ ;
resp{{< @
){{@ A
{|| 
GoodG2B}} 
(}} 
req}} 
,}} 
resp}} 
)}} 
;}} 
GoodB2G~~ 
(~~ 
req~~ 
,~~ 
resp~~ 
)~~ 
;~~ 
} 
} 
} W
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_21 @
:A B
AbstractTestCaseWebC V
{ 
private!! 
bool!! 

badPrivate!! 
=!! 
false!! #
;!!# $
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data&& 
=&& 
$str&& 
;&& 
{(( 	
try)) 
{** 
using++ 
(++ 
	WebClient++  
client++! '
=++( )
new++* -
	WebClient++. 7
(++7 8
)++8 9
)++9 :
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
client--> D
.--D E
OpenRead--E M
(--M N
$str--N g
)--g h
)--h i
)--i j
{.. 
data22 
=22 
sr22 !
.22! "
ReadLine22" *
(22* +
)22+ ,
;22, -
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	

badPrivate;; 
=;; 
true;; 
;;; 
BadSink<< 
(<< 
data<< 
,<< 
req<< 
,<< 
resp<<  
)<<  !
;<<! "
}== 
private?? 
void?? 
BadSink?? 
(?? 
string?? 
data??  $
,??% &
HttpRequest??' 2
req??3 6
,??6 7
HttpResponse??8 D
resp??E I
)??I J
{@@ 
ifAA 

(AA 

badPrivateAA 
)AA 
{BB 	
ifCC 
(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF )
,FF) *
$strFF+ >
+FF? @
dataFFA E
)FFE F
;FFF G
}GG 
}HH 	
}II 
privateLL 
boolLL 
goodB2G1PrivateLL  
=LL! "
falseLL# (
;LL( )
privateMM 
boolMM 
goodB2G2PrivateMM  
=MM! "
falseMM# (
;MM( )
privateNN 
boolNN 
goodG2BPrivateNN 
=NN  !
falseNN" '
;NN' (
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
HttpRequestPP )
reqPP* -
,PP- .
HttpResponsePP/ ;
respPP< @
)PP@ A
{QQ 
GoodB2G1RR 
(RR 
reqRR 
,RR 
respRR 
)RR 
;RR 
GoodB2G2SS 
(SS 
reqSS 
,SS 
respSS 
)SS 
;SS 
GoodG2BTT 
(TT 
reqTT 
,TT 
respTT 
)TT 
;TT 
}UU 
privateXX 
voidXX 
GoodB2G1XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
;ZZ 
data[[ 
=[[ 
$str[[ 
;[[ 
{]] 	
try^^ 
{__ 
using`` 
(`` 
	WebClient``  
client``! '
=``( )
new``* -
	WebClient``. 7
(``7 8
)``8 9
)``9 :
{aa 
usingbb 
(bb 
StreamReaderbb '
srbb( *
=bb+ ,
newbb- 0
StreamReaderbb1 =
(bb= >
clientbb> D
.bbD E
OpenReadbbE M
(bbM N
$strbbN g
)bbg h
)bbh i
)bbi j
{cc 
datagg 
=gg 
srgg !
.gg! "
ReadLinegg" *
(gg* +
)gg+ ,
;gg, -
}hh 
}ii 
}jj 
catchkk 
(kk 
IOExceptionkk 
exceptIOkk '
)kk' (
{ll 
IOmm 
.mm 
Loggermm 
.mm 
Logmm 
(mm 
NLogmm "
.mm" #
LogLevelmm# +
.mm+ ,
Warnmm, 0
,mm0 1
exceptIOmm2 :
,mm: ;
$strmm< W
)mmW X
;mmX Y
}nn 
}oo 	
goodB2G1Privatepp 
=pp 
falsepp 
;pp  
GoodB2G1Sinkqq 
(qq 
dataqq 
,qq 
reqqq 
,qq  
respqq! %
)qq% &
;qq& '
}rr 
privatett 
voidtt 
GoodB2G1Sinktt 
(tt 
stringtt $
datatt% )
,tt* +
HttpRequesttt, 7
reqtt8 ;
,tt; <
HttpResponsett= I
respttJ N
)ttN O
{uu 
ifvv 

(vv 
goodB2G1Privatevv 
)vv 
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
$stryy /
)yy/ 0
;yy0 1
}zz 	
else{{ 
{|| 	
if}} 
(}} 
data}} 
!=}} 
null}} 
)}} 
{~~ 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
{
 	
try
 
{
 
using
 
(
 
	WebClient
  
client
! '
=
( )
new
* -
	WebClient
. 7
(
7 8
)
8 9
)
9 :
{
 
using
 
(
 
StreamReader
 '
sr
( *
=
+ ,
new
- 0
StreamReader
1 =
(
= >
client
> D
.
D E
OpenRead
E M
(
M N
$str
N g
)
g h
)
h i
)
i j
{
 
data
 
=
 
sr
 !
.
! "
ReadLine
" *
(
* +
)
+ ,
;
, -
}
 
}
 
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
goodB2G2Private
 
=
 
true
 
;
 
GoodB2G2Sink
   
(
   
data
   
,
   
req
   
,
    
resp
  ! %
)
  % &
;
  & '
}
¡¡ 
private
££ 
void
££ 
GoodB2G2Sink
££ 
(
££ 
string
££ $
data
££% )
,
££* +
HttpRequest
££, 7
req
££8 ;
,
££; <
HttpResponse
££= I
resp
££J N
)
££N O
{
¤¤ 
if
¥¥ 

(
¥¥ 
goodB2G2Private
¥¥ 
)
¥¥ 
{
¦¦ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
ªª 
=
ªª 
HttpUtility
ªª "
.
ªª" #
	UrlEncode
ªª# ,
(
ªª, -
data
ªª- 1
,
ªª1 2
Encoding
ªª3 ;
.
ªª; <
UTF8
ªª< @
)
ªª@ A
;
ªªA B
resp
«« 
.
«« 
	AddHeader
«« 
(
«« 
$str
«« )
,
««) *
$str
««+ >
+
««? @
data
««A E
)
««E F
;
««F G
}
¬¬ 
}
­­ 	
}
®® 
private
±± 
void
±± 
GoodG2B
±± 
(
±± 
HttpRequest
±± $
req
±±% (
,
±±( )
HttpResponse
±±* 6
resp
±±7 ;
)
±±; <
{
²² 
string
³³ 
data
³³ 
;
³³ 
data
µµ 
=
µµ 
$str
µµ 
;
µµ 
goodG2BPrivate
¶¶ 
=
¶¶ 
true
¶¶ 
;
¶¶ 
GoodG2BSink
·· 
(
·· 
data
·· 
,
·· 
req
·· 
,
·· 
resp
··  $
)
··$ %
;
··% &
}
¸¸ 
private
ºº 
void
ºº 
GoodG2BSink
ºº 
(
ºº 
string
ºº #
data
ºº$ (
,
ºº) *
HttpRequest
ºº+ 6
req
ºº7 :
,
ºº: ;
HttpResponse
ºº< H
resp
ººI M
)
ººM N
{
»» 
if
¼¼ 

(
¼¼ 
goodG2BPrivate
¼¼ 
)
¼¼ 
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 
resp
ÁÁ 
.
ÁÁ 
	AddHeader
ÁÁ 
(
ÁÁ 
$str
ÁÁ )
,
ÁÁ) *
$str
ÁÁ+ >
+
ÁÁ? @
data
ÁÁA E
)
ÁÁE F
;
ÁÁF G
}
ÂÂ 
}
ÃÃ 	
}
ÄÄ 
}ÆÆ 
}ÇÇ >
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

static!! 
bool!! 
badPublicStatic!! &
=!!' (
false!!) .
;!!. /
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
=%% 
null%% 
;%% 
data&& 
=&& 
$str&& 
;&& 
{(( 	
try)) 
{** 
using++ 
(++ 
	WebClient++  
client++! '
=++( )
new++* -
	WebClient++. 7
(++7 8
)++8 9
)++9 :
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
client--> D
.--D E
OpenRead--E M
(--M N
$str--N g
)--g h
)--h i
)--i j
{.. 
data22 
=22 
sr22 !
.22! "
ReadLine22" *
(22* +
)22+ ,
;22, -
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	
badPublicStatic;; 
=;; 
true;; 
;;; G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22b<< C
.<<C D
BadSink<<D K
(<<K L
data<<L P
,<<Q R
req<<S V
,<<V W
resp<<X \
)<<\ ]
;<<] ^
}== 
public@@ 

static@@ 
bool@@  
goodB2G1PublicStatic@@ +
=@@, -
false@@. 3
;@@3 4
publicAA 

staticAA 
boolAA  
goodB2G2PublicStaticAA +
=AA, -
falseAA. 3
;AA3 4
publicBB 

staticBB 
boolBB 
goodG2BPublicStaticBB *
=BB+ ,
falseBB- 2
;BB2 3
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
HttpRequestDD )
reqDD* -
,DD- .
HttpResponseDD/ ;
respDD< @
)DD@ A
{EE 
GoodB2G1FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
GoodB2G2GG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
GoodG2BHH 
(HH 
reqHH 
,HH 
respHH 
)HH 
;HH 
}II 
privateLL 
voidLL 
GoodB2G1LL 
(LL 
HttpRequestLL %
reqLL& )
,LL) *
HttpResponseLL+ 7
respLL8 <
)LL< =
{MM 
stringNN 
dataNN 
=NN 
nullNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	 
goodB2G1PublicStaticdd 
=dd 
falsedd $
;dd$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22bee C
.eeC D
GoodB2G1SinkeeD P
(eeP Q
dataeeQ U
,eeV W
reqeeX [
,ee[ \
respee] a
)eea b
;eeb c
}ff 
privateii 
voidii 
GoodB2G2ii 
(ii 
HttpRequestii %
reqii& )
,ii) *
HttpResponseii+ 7
respii8 <
)ii< =
{jj 
stringkk 
datakk 
=kk 
nullkk 
;kk 
datall 
=ll 
$strll 
;ll 
{nn 	
tryoo 
{pp 
usingqq 
(qq 
	WebClientqq  
clientqq! '
=qq( )
newqq* -
	WebClientqq. 7
(qq7 8
)qq8 9
)qq9 :
{rr 
usingss 
(ss 
StreamReaderss '
srss( *
=ss+ ,
newss- 0
StreamReaderss1 =
(ss= >
clientss> D
.ssD E
OpenReadssE M
(ssM N
$strssN g
)ssg h
)ssh i
)ssi j
{tt 
dataxx 
=xx 
srxx !
.xx! "
ReadLinexx" *
(xx* +
)xx+ ,
;xx, -
}yy 
}zz 
}{{ 
catch|| 
(|| 
IOException|| 
exceptIO|| '
)||' (
{}} 
IO~~ 
.~~ 
Logger~~ 
.~~ 
Log~~ 
(~~ 
NLog~~ "
.~~" #
LogLevel~~# +
.~~+ ,
Warn~~, 0
,~~0 1
exceptIO~~2 :
,~~: ;
$str~~< W
)~~W X
;~~X Y
} 
}
 	"
goodB2G2PublicStatic
 
=
 
true
 #
;
# $I
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22b
 C
.
C D
GoodB2G2Sink
D P
(
P Q
data
Q U
,
V W
req
X [
,
[ \
resp
] a
)
a b
;
b c
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
=
 
null
 
;
 
data
 
=
 
$str
 
;
 !
goodG2BPublicStatic
 
=
 
true
 "
;
" #I
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22b
 C
.
C D
GoodG2BSink
D O
(
O P
data
P T
,
U V
req
W Z
,
Z [
resp
\ `
)
` a
;
a b
}
 
} 
} Þ#
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22a G
.G H
badPublicStaticH W
)W X
{   	
if!! 
(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22a44 G
.44G H 
goodB2G1PublicStatic44H \
)44\ ]
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
data??- 1
,??1 2
Encoding??3 ;
.??; <
UTF8??< @
)??@ A
;??A B
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22aHH G
.HHG H 
goodB2G2PublicStaticHHH \
)HH\ ]
{II 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
dataMM- 1
,MM1 2
EncodingMM3 ;
.MM; <
UTF8MM< @
)MM@ A
;MMA B
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_22a\\ G
.\\G H
goodG2BPublicStatic\\H [
)\\[ \
{]] 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm Ç1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_31 @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
dataCopy"" 
;"" 
{## 	
string$$ 
data$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{'' 
try(( 
{)) 
using** 
(** 
	WebClient** $
client**% +
=**, -
new**. 1
	WebClient**2 ;
(**; <
)**< =
)**= >
{++ 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
client,,B H
.,,H I
OpenRead,,I Q
(,,Q R
$str,,R k
),,k l
),,l m
),,m n
{-- 
data11  
=11! "
sr11# %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
}22 
}33 
}44 
catch55 
(55 
IOException55 "
exceptIO55# +
)55+ ,
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptIO776 >
,77> ?
$str77@ [
)77[ \
;77\ ]
}88 
}99 
dataCopy:: 
=:: 
data:: 
;:: 
};; 	
{<< 	
string== 
data== 
=== 
dataCopy== "
;==" #
if>> 
(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA )
,AA) *
$strAA+ >
+AA? @
dataAAA E
)AAE F
;AAF G
}BB 
}CC 	
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
HttpRequestGG )
reqGG* -
,GG- .
HttpResponseGG/ ;
respGG< @
)GG@ A
{HH 
GoodG2BII 
(II 
reqII 
,II 
respII 
)II 
;II 
GoodB2GJJ 
(JJ 
reqJJ 
,JJ 
respJJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
HttpRequestNN $
reqNN% (
,NN( )
HttpResponseNN* 6
respNN7 ;
)NN; <
{OO 
stringPP 
dataCopyPP 
;PP 
{QQ 	
stringRR 
dataRR 
;RR 
dataTT 
=TT 
$strTT 
;TT 
dataCopyUU 
=UU 
dataUU 
;UU 
}VV 	
{WW 	
stringXX 
dataXX 
=XX 
dataCopyXX "
;XX" #
ifYY 
(YY 
dataYY 
!=YY 
nullYY 
)YY 
{ZZ 
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
dataCopydd 
;dd 
{ee 	
stringff 
dataff 
;ff 
datagg 
=gg 
$strgg 
;gg 
{ii 
tryjj 
{kk 
usingll 
(ll 
	WebClientll $
clientll% +
=ll, -
newll. 1
	WebClientll2 ;
(ll; <
)ll< =
)ll= >
{mm 
usingnn 
(nn 
StreamReadernn +
srnn, .
=nn/ 0
newnn1 4
StreamReadernn5 A
(nnA B
clientnnB H
.nnH I
OpenReadnnI Q
(nnQ R
$strnnR k
)nnk l
)nnl m
)nnm n
{oo 
datass  
=ss! "
srss# %
.ss% &
ReadLiness& .
(ss. /
)ss/ 0
;ss0 1
}tt 
}uu 
}vv 
catchww 
(ww 
IOExceptionww "
exceptIOww# +
)ww+ ,
{xx 
IOyy 
.yy 
Loggeryy 
.yy 
Logyy !
(yy! "
NLogyy" &
.yy& '
LogLevelyy' /
.yy/ 0
Warnyy0 4
,yy4 5
exceptIOyy6 >
,yy> ?
$stryy@ [
)yy[ \
;yy\ ]
}zz 
}{{ 
dataCopy|| 
=|| 
data|| 
;|| 
}}} 	
{~~ 	
string 
data 
= 
dataCopy "
;" #
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
} 
} Á5
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_41 @
:A B
AbstractTestCaseWebC V
{ 
private   
static   
void   
BadSink   
(    
string    &
data  ' +
,  , -
HttpRequest  . 9
req  : =
,  = >
HttpResponse  ? K
resp  L P
)  P Q
{!! 
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp%% 
.%% 
	AddHeader%% 
(%% 
$str%% %
,%%% &
$str%%' :
+%%; <
data%%= A
)%%A B
;%%B C
}&& 	
}'' 
public)) 

override)) 
void)) 
Bad)) 
()) 
HttpRequest)) (
req))) ,
,)), -
HttpResponse)). :
resp)); ?
)))? @
{** 
string++ 
data++ 
;++ 
data,, 
=,, 
$str,, 
;,, 
{.. 	
try// 
{00 
using11 
(11 
	WebClient11  
client11! '
=11( )
new11* -
	WebClient11. 7
(117 8
)118 9
)119 :
{22 
using33 
(33 
StreamReader33 '
sr33( *
=33+ ,
new33- 0
StreamReader331 =
(33= >
client33> D
.33D E
OpenRead33E M
(33M N
$str33N g
)33g h
)33h i
)33i j
{44 
data88 
=88 
sr88 !
.88! "
ReadLine88" *
(88* +
)88+ ,
;88, -
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
BadSinkAA 
(AA 
dataAA 
,AA 
reqAA 
,AA 
respAA  
)AA! "
;AA" #
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
HttpRequestEE )
reqEE* -
,EE- .
HttpResponseEE/ ;
respEE< @
)EE@ A
{FF 
GoodG2BGG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
GoodB2GHH 
(HH 
reqHH 
,HH 
respHH 
)HH 
;HH 
}II 
privateKK 
staticKK 
voidKK 
GoodG2BSinkKK #
(KK# $
stringKK$ *
dataKK+ /
,KK0 1
HttpRequestKK2 =
reqKK> A
,KKA B
HttpResponseKKC O
respKKP T
)KKT U
{LL 
ifMM 

(MM 
dataMM 
!=MM 
nullMM 
)MM 
{NN 	
respPP 
.PP 
	AddHeaderPP 
(PP 
$strPP %
,PP% &
$strPP' :
+PP; <
dataPP= A
)PPA B
;PPB C
}QQ 	
}RR 
privateUU 
staticUU 
voidUU 
GoodG2BUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataYY 
=YY 
$strYY 
;YY 
GoodG2BSinkZZ 
(ZZ 
dataZZ 
,ZZ 
reqZZ 
,ZZ 
respZZ  $
)ZZ% &
;ZZ& '
}[[ 
private]] 
static]] 
void]] 
GoodB2GSink]] #
(]]# $
string]]$ *
data]]+ /
,]]0 1
HttpRequest]]2 =
req]]> A
,]]A B
HttpResponse]]C O
resp]]P T
)]]T U
{^^ 
if__ 

(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 	
databb 
=bb 
HttpUtilitybb 
.bb 
	UrlEncodebb (
(bb( )
databb) -
,bb- .
Encodingbb/ 7
.bb7 8
UTF8bb8 <
)bb< =
;bb= >
respcc 
.cc 
	AddHeadercc 
(cc 
$strcc %
,cc% &
$strcc' :
+cc; <
datacc= A
)ccA B
;ccB C
}dd 	
}ee 
privatehh 
statichh 
voidhh 
GoodB2Ghh 
(hh  
HttpRequesthh  +
reqhh, /
,hh/ 0
HttpResponsehh1 =
resphh> B
)hhB C
{ii 
stringjj 
datajj 
;jj 
datakk 
=kk 
$strkk 
;kk 
{mm 	
trynn 
{oo 
usingpp 
(pp 
	WebClientpp  
clientpp! '
=pp( )
newpp* -
	WebClientpp. 7
(pp7 8
)pp8 9
)pp9 :
{qq 
usingrr 
(rr 
StreamReaderrr '
srrr( *
=rr+ ,
newrr- 0
StreamReaderrr1 =
(rr= >
clientrr> D
.rrD E
OpenReadrrE M
(rrM N
$strrrN g
)rrg h
)rrh i
)rri j
{ss 
dataww 
=ww 
srww !
.ww! "
ReadLineww" *
(ww* +
)ww+ ,
;ww, -
}xx 
}yy 
}zz 
catch{{ 
({{ 
IOException{{ 
exceptIO{{ '
){{' (
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} "
.}}" #
LogLevel}}# +
.}}+ ,
Warn}}, 0
,}}0 1
exceptIO}}2 :
,}}: ;
$str}}< W
)}}W X
;}}X Y
}~~ 
} 	
GoodB2GSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
% &
;
& '
}
 
} 
} ±6
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_42 @
:A B
AbstractTestCaseWebC V
{ 
private   
static   
string   
	BadSource   #
(  # $
HttpRequest  $ /
req  0 3
,  3 4
HttpResponse  5 A
resp  B F
)  F G
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
return88 
data88 
;88 
}99 
public;; 

override;; 
void;; 
Bad;; 
(;; 
HttpRequest;; (
req;;) ,
,;;, -
HttpResponse;;. :
resp;;; ?
);;? @
{<< 
string== 
data== 
=== 
	BadSource== 
(==  
req==  #
,==# $
resp==% )
)==) *
;==* +
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
privateGG 
staticGG 
stringGG 
GoodG2BSourceGG '
(GG' (
HttpRequestGG( 3
reqGG4 7
,GG7 8
HttpResponseGG9 E
respGGF J
)GGJ K
{HH 
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
returnLL 
dataLL 
;LL 
}MM 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
HttpRequestOO  +
reqOO, /
,OO/ 0
HttpResponseOO1 =
respOO> B
)OOB C
{PP 
stringQQ 
dataQQ 
=QQ 
GoodG2BSourceQQ #
(QQ# $
reqQQ$ '
,QQ' (
respQQ) -
)QQ- .
;QQ. /
ifRR 

(RR 
dataRR 
!=RR 
nullRR 
)RR 
{SS 	
respUU 
.UU 
	AddHeaderUU 
(UU 
$strUU %
,UU% &
$strUU' :
+UU; <
dataUU= A
)UUA B
;UUB C
}VV 	
}WW 
privateZZ 
staticZZ 
stringZZ 
GoodB2GSourceZZ '
(ZZ' (
HttpRequestZZ( 3
reqZZ4 7
,ZZ7 8
HttpResponseZZ9 E
respZZF J
)ZZJ K
{[[ 
string\\ 
data\\ 
;\\ 
data]] 
=]] 
$str]] 
;]] 
{__ 	
try`` 
{aa 
usingbb 
(bb 
	WebClientbb  
clientbb! '
=bb( )
newbb* -
	WebClientbb. 7
(bb7 8
)bb8 9
)bb9 :
{cc 
usingdd 
(dd 
StreamReaderdd '
srdd( *
=dd+ ,
newdd- 0
StreamReaderdd1 =
(dd= >
clientdd> D
.ddD E
OpenReadddE M
(ddM N
$strddN g
)ddg h
)ddh i
)ddi j
{ee 
dataii 
=ii 
srii !
.ii! "
ReadLineii" *
(ii* +
)ii+ ,
;ii, -
}jj 
}kk 
}ll 
catchmm 
(mm 
IOExceptionmm 
exceptIOmm '
)mm' (
{nn 
IOoo 
.oo 
Loggeroo 
.oo 
Logoo 
(oo 
NLogoo "
.oo" #
LogLeveloo# +
.oo+ ,
Warnoo, 0
,oo0 1
exceptIOoo2 :
,oo: ;
$stroo< W
)ooW X
;ooX Y
}pp 
}qq 	
returnrr 
datarr 
;rr 
}ss 
privateuu 
staticuu 
voiduu 
GoodB2Guu 
(uu  
HttpRequestuu  +
requu, /
,uu/ 0
HttpResponseuu1 =
respuu> B
)uuB C
{vv 
stringww 
dataww 
=ww 
GoodB2GSourceww #
(ww# $
reqww$ '
,ww' (
respww) -
)ww- .
;ww. /
ifxx 

(xx 
dataxx 
!=xx 
nullxx 
)xx 
{yy 	
data{{ 
={{ 
HttpUtility{{ 
.{{ 
	UrlEncode{{ (
({{( )
data{{) -
,{{- .
Encoding{{/ 7
.{{7 8
UTF8{{8 <
){{< =
;{{= >
resp|| 
.|| 
	AddHeader|| 
(|| 
$str|| %
,||% &
$str||' :
+||; <
data||= A
)||A B
;||B C
}}} 	
}~~ 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} 9
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_45 @
:A B
AbstractTestCaseWebC V
{ 
private   
string   
dataBad   
;   
private!! 
string!! 
dataGoodG2B!! 
;!! 
private"" 
string"" 
dataGoodB2G"" 
;"" 
private$$ 
void$$ 
BadSink$$ 
($$ 
HttpRequest$$ $
req$$% (
,$$( )
HttpResponse$$* 6
resp$$7 ;
)$$; <
{%% 
string&& 
data&& 
=&& 
dataBad&& 
;&& 
if'' 

('' 
data'' 
!='' 
null'' 
)'' 
{(( 	
resp** 
.** 
	AddHeader** 
(** 
$str** %
,**% &
$str**' :
+**; <
data**= A
)**A B
;**B C
}++ 	
},, 
public.. 

override.. 
void.. 
Bad.. 
(.. 
HttpRequest.. (
req..) ,
,.., -
HttpResponse... :
resp..; ?
)..? @
{// 
string00 
data00 
;00 
data11 
=11 
$str11 
;11 
{33 	
try44 
{55 
using66 
(66 
	WebClient66  
client66! '
=66( )
new66* -
	WebClient66. 7
(667 8
)668 9
)669 :
{77 
using88 
(88 
StreamReader88 '
sr88( *
=88+ ,
new88- 0
StreamReader881 =
(88= >
client88> D
.88D E
OpenRead88E M
(88M N
$str88N g
)88g h
)88h i
)88i j
{99 
data== 
=== 
sr== !
.==! "
ReadLine==" *
(==* +
)==+ ,
;==, -
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
}EE 	
dataBadFF 
=FF 
dataFF 
;FF 
BadSinkGG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
HttpRequestKK )
reqKK* -
,KK- .
HttpResponseKK/ ;
respKK< @
)KK@ A
{LL 
GoodG2BMM 
(MM 
reqMM 
,MM 
respMM 
)MM 
;MM 
GoodB2GNN 
(NN 
reqNN 
,NN 
respNN 
)NN 
;NN 
}OO 
privateQQ 
voidQQ 
GoodG2BSinkQQ 
(QQ 
HttpRequestQQ (
reqQQ) ,
,QQ, -
HttpResponseQQ. :
respQQ; ?
)QQ? @
{RR 
stringSS 
dataSS 
=SS 
dataGoodG2BSS !
;SS! "
ifTT 

(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 	
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW %
,WW% &
$strWW' :
+WW; <
dataWW= A
)WWA B
;WWB C
}XX 	
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
HttpRequest\\ $
req\\% (
,\\( )
HttpResponse\\* 6
resp\\7 ;
)\\; <
{]] 
string^^ 
data^^ 
;^^ 
data`` 
=`` 
$str`` 
;`` 
dataGoodG2Baa 
=aa 
dataaa 
;aa 
GoodG2BSinkbb 
(bb 
reqbb 
,bb 
respbb 
)bb 
;bb 
}cc 
privateee 
voidee 
GoodB2GSinkee 
(ee 
HttpRequestee (
reqee) ,
,ee, -
HttpResponseee. :
respee; ?
)ee? @
{ff 
stringgg 
datagg 
=gg 
dataGoodB2Ggg !
;gg! "
ifhh 

(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 	
datakk 
=kk 
HttpUtilitykk 
.kk 
	UrlEncodekk (
(kk( )
datakk) -
,kk- .
Encodingkk/ 7
.kk7 8
UTF8kk8 <
)kk< =
;kk= >
respll 
.ll 
	AddHeaderll 
(ll 
$strll %
,ll% &
$strll' :
+ll; <
datall= A
)llA B
;llB C
}mm 	
}nn 
privateqq 
voidqq 
GoodB2Gqq 
(qq 
HttpRequestqq $
reqqq% (
,qq( )
HttpResponseqq* 6
respqq7 ;
)qq; <
{rr 
stringss 
datass 
;ss 
datatt 
=tt 
$strtt 
;tt 
{vv 	
tryww 
{xx 
usingyy 
(yy 
	WebClientyy  
clientyy! '
=yy( )
newyy* -
	WebClientyy. 7
(yy7 8
)yy8 9
)yy9 :
{zz 
using{{ 
({{ 
StreamReader{{ '
sr{{( *
={{+ ,
new{{- 0
StreamReader{{1 =
({{= >
client{{> D
.{{D E
OpenRead{{E M
({{M N
$str{{N g
){{g h
){{h i
){{i j
{|| 
data
 
=
 
sr
 !
.
! "
ReadLine
" *
(
* +
)
+ ,
;
, -
}
 
}
 
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
dataGoodB2G
 
=
 
data
 
;
 
GoodB2GSink
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_51a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_51b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88] ^
;88^ _
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_51bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HHa b
;HHb c
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_51bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dda b
;ddb c
}ee 
}gg 
}hh »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_51b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88\ ]
;88] ^
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HH` a
;HHa b
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dd` a
;dda b
}ee 
}gg 
}hh ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52c C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52c'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52c-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_52c A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88\ ]
;88] ^
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HH` a
;HHa b
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dd` a
;dda b
}ee 
}gg 
}hh ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53c C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53c'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53c-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53c A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53d C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53d'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53d-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_53d A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> '
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54b88 C
.88C D
BadSink88D K
(88K L
data88L P
,88Q R
req88S V
,88V W
resp88X \
)88\ ]
;88] ^
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
dataHHP T
,HHU V
reqHHW Z
,HHZ [
respHH\ `
)HH` a
;HHa b
}II 
privateLL 
voidLL 
GoodB2GLL 
(LL 
HttpRequestLL $
reqLL% (
,LL( )
HttpResponseLL* 6
respLL7 ;
)LL; <
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
dataddP T
,ddU V
reqddW Z
,ddZ [
respdd\ `
)dd` a
;dda b
}ee 
}gg 
}hh ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54b A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54c C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54c'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54c-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54c A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54d C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54d'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54d-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 ú
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54d A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54e C
.C D
BadSinkD K
(K L
dataL P
,Q R
reqS V
,V W
respX \
)\ ]
;] ^
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54e'' C
.''C D
GoodG2BSink''D O
(''O P
data''P T
,''U V
req''W Z
,''Z [
resp''\ `
)''` a
;''a b
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54e-- C
.--C D
GoodB2GSink--D O
(--O P
data--P T
,--U V
req--W Z
,--Z [
resp--\ `
)--` a
;--a b
}.. 
}00 
}11 »
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_54e A
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ¬
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_61a A
:B C
AbstractTestCaseWebD W
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_61b Q
.Q R
	BadSourceR [
([ \
req\ _
,_ `
respa e
)e f
;f g
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_61b11 Q
.11Q R
GoodG2BSource11R _
(11_ `
req11` c
,11c d
resp11e i
)11i j
;11j k
if22 

(22 
data22 
!=22 
null22 
)22 
{33 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_61b<< Q
.<<Q R
GoodB2GSource<<R _
(<<_ `
req<<` c
,<<c d
resp<<e i
)<<i j
;<<j k
if== 

(== 
data== 
!=== 
null== 
)== 
{>> 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
data@@) -
,@@- .
Encoding@@/ 7
.@@7 8
UTF8@@8 <
)@@< =
;@@= >
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF 
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_61b A
{ 
public   

static   
string   
	BadSource   "
(  " #
HttpRequest  # .
req  / 2
,  2 3
HttpResponse  4 @
resp  A E
)  E F
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
return88 
data88 
;88 
}99 
public>> 

static>> 
string>> 
GoodG2BSource>> &
(>>& '
HttpRequest>>' 2
req>>3 6
,>>6 7
HttpResponse>>8 D
resp>>E I
)>>I J
{?? 
string@@ 
data@@ 
;@@ 
dataBB 
=BB 
$strBB 
;BB 
returnCC 
dataCC 
;CC 
}DD 
publicGG 

staticGG 
stringGG 
GoodB2GSourceGG &
(GG& '
HttpRequestGG' 2
reqGG3 6
,GG6 7
HttpResponseGG8 D
respGGE I
)GGI J
{HH 
stringII 
dataII 
;II 
dataJJ 
=JJ 
$strJJ 
;JJ 
{LL 	
tryMM 
{NN 
usingOO 
(OO 
	WebClientOO  
clientOO! '
=OO( )
newOO* -
	WebClientOO. 7
(OO7 8
)OO8 9
)OO9 :
{PP 
usingQQ 
(QQ 
StreamReaderQQ '
srQQ( *
=QQ+ ,
newQQ- 0
StreamReaderQQ1 =
(QQ= >
clientQQ> D
.QQD E
OpenReadQQE M
(QQM N
$strQQN g
)QQg h
)QQh i
)QQi j
{RR 
dataVV 
=VV 
srVV !
.VV! "
ReadLineVV" *
(VV* +
)VV+ ,
;VV, -
}WW 
}XX 
}YY 
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ '
)ZZ' (
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
exceptIO\\2 :
,\\: ;
$str\\< W
)\\W X
;\\X Y
}]] 
}^^ 	
return__ 
data__ 
;__ 
}`` 
}bb 
}cc Ñ.
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_66a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
string88 
[88 
]88 
	dataArray88 
=88 
new88  
string88! '
[88' (
$num88( )
]88) *
;88* +
	dataArray99 
[99 
$num99 
]99 
=99 
data99 
;99 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_66b:: C
.::C D
BadSink::D K
(::K L
	dataArray::L U
,::V W
req::X [
,::[ \
resp::] a
)::b c
;::c d
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
HttpRequest>> )
req>>* -
,>>- .
HttpResponse>>/ ;
resp>>< @
)>>@ A
{?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
HttpRequestEE  +
reqEE, /
,EE/ 0
HttpResponseEE1 =
respEE> B
)EEB C
{FF 
stringGG 
dataGG 
;GG 
dataII 
=II 
$strII 
;II 
stringJJ 
[JJ 
]JJ 
	dataArrayJJ 
=JJ 
newJJ  
stringJJ! '
[JJ' (
$numJJ( )
]JJ) *
;JJ* +
	dataArrayKK 
[KK 
$numKK 
]KK 
=KK 
dataKK 
;KK G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_66bLL C
.LLC D
GoodG2BSinkLLD O
(LLO P
	dataArrayLLP Y
,LLZ [
reqLL\ _
,LL_ `
respLLa e
)LLf g
;LLg h
}MM 
privatePP 
staticPP 
voidPP 
GoodB2GPP 
(PP  
HttpRequestPP  +
reqPP, /
,PP/ 0
HttpResponsePP1 =
respPP> B
)PPB C
{QQ 
stringRR 
dataRR 
;RR 
dataSS 
=SS 
$strSS 
;SS 
{UU 	
tryVV 
{WW 
usingXX 
(XX 
	WebClientXX  
clientXX! '
=XX( )
newXX* -
	WebClientXX. 7
(XX7 8
)XX8 9
)XX9 :
{YY 
usingZZ 
(ZZ 
StreamReaderZZ '
srZZ( *
=ZZ+ ,
newZZ- 0
StreamReaderZZ1 =
(ZZ= >
clientZZ> D
.ZZD E
OpenReadZZE M
(ZZM N
$strZZN g
)ZZg h
)ZZh i
)ZZi j
{[[ 
data__ 
=__ 
sr__ !
.__! "
ReadLine__" *
(__* +
)__+ ,
;__, -
}`` 
}aa 
}bb 
catchcc 
(cc 
IOExceptioncc 
exceptIOcc '
)cc' (
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee 
(ee 
NLogee "
.ee" #
LogLevelee# +
.ee+ ,
Warnee, 0
,ee0 1
exceptIOee2 :
,ee: ;
$stree< W
)eeW X
;eeX Y
}ff 
}gg 	
stringhh 
[hh 
]hh 
	dataArrayhh 
=hh 
newhh  
stringhh! '
[hh' (
$numhh( )
]hh) *
;hh* +
	dataArrayii 
[ii 
$numii 
]ii 
=ii 
dataii 
;ii G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_66bjj C
.jjC D
GoodB2GSinkjjD O
(jjO P
	dataArrayjjP Y
,jjZ [
reqjj\ _
,jj_ `
respjja e
)jjf g
;jjg h
}kk 
}mm 
}nn Å
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_66b A
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA /
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67a A
:B C
AbstractTestCaseWebD W
{ 
public   

class   
	Container   
{!! 
public"" 
string"" 
containerOne"" "
;""" #
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
data(( 
=(( 
$str(( 
;(( 
{** 	
try++ 
{,, 
using-- 
(-- 
	WebClient--  
client--! '
=--( )
new--* -
	WebClient--. 7
(--7 8
)--8 9
)--9 :
{.. 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
client//> D
.//D E
OpenRead//E M
(//M N
$str//N g
)//g h
)//h i
)//i j
{00 
data44 
=44 
sr44 !
.44! "
ReadLine44" *
(44* +
)44+ ,
;44, -
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	
	Container== 
dataContainer== 
===  !
new==" %
	Container==& /
(==/ 0
)==0 1
;==1 2
dataContainer>> 
.>> 
containerOne>> "
=>># $
data>>% )
;>>) *G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67b?? C
.??C D
BadSink??D K
(??K L
dataContainer??L Y
,??Z [
req??\ _
,??_ `
resp??a e
)??f g
;??g h
}@@ 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
GoodG2BEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
GoodB2GFF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodG2BJJ 
(JJ  
HttpRequestJJ  +
reqJJ, /
,JJ/ 0
HttpResponseJJ1 =
respJJ> B
)JJB C
{KK 
stringLL 
dataLL 
;LL 
dataNN 
=NN 
$strNN 
;NN 
	ContainerOO 
dataContainerOO 
=OO  !
newOO" %
	ContainerOO& /
(OO/ 0
)OO0 1
;OO1 2
dataContainerPP 
.PP 
containerOnePP "
=PP# $
dataPP% )
;PP) *G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataContainerQQP ]
,QQ^ _
reqQQ` c
,QQc d
respQQe i
)QQj k
;QQk l
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	
	Containermm 
dataContainermm 
=mm  !
newmm" %
	Containermm& /
(mm/ 0
)mm0 1
;mm1 2
dataContainernn 
.nn 
containerOnenn "
=nn# $
datann% )
;nn) *G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67boo C
.ooC D
GoodB2GSinkooD O
(ooO P
dataContainerooP ]
,oo^ _
reqoo` c
,ooc d
respooe i
)ooj k
;ook l
}pp 
}rr 
}ss  
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67b A
{ 
public 

static 
void 
BadSink 
( G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67a Z
.Z [
	Container[ d
dataContainere r
,s t
HttpRequest	u 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67a**# ^
.**^ _
	Container**_ h
dataContainer**i v
,**w x
HttpRequest	**y 
req
** 
,
** 
HttpResponse
** 
resp
** 
)
** 
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_67a55# ^
.55^ _
	Container55_ h
dataContainer55i v
,55w x
HttpRequest	55y 
req
55 
,
55 
HttpResponse
55 
resp
55 
)
55 
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA &
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68a A
:B C
AbstractTestCaseWebD W
{ 
public   

static   
string   
data   
;   
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68b99 C
.99C D
BadSink99D K
(99K L
req99L O
,99O P
resp99Q U
)99U V
;99V W
}:: 
public== 

override== 
void== 
Good== 
(== 
HttpRequest== )
req==* -
,==- .
HttpResponse==/ ;
resp==< @
)==@ A
{>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
GoodB2G@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
}AA 
privateDD 
staticDD 
voidDD 
GoodG2BDD 
(DD  
HttpRequestDD  +
reqDD, /
,DD/ 0
HttpResponseDD1 =
respDD> B
)DDB C
{EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
reqHHP S
,HHS T
respHHU Y
)HHY Z
;HHZ [
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
dataNN 
=NN 
$strNN 
;NN 
{PP 	
tryQQ 
{RR 
usingSS 
(SS 
	WebClientSS  
clientSS! '
=SS( )
newSS* -
	WebClientSS. 7
(SS7 8
)SS8 9
)SS9 :
{TT 
usingUU 
(UU 
StreamReaderUU '
srUU( *
=UU+ ,
newUU- 0
StreamReaderUU1 =
(UU= >
clientUU> D
.UUD E
OpenReadUUE M
(UUM N
$strUUN g
)UUg h
)UUh i
)UUi j
{VV 
dataZZ 
=ZZ 
srZZ !
.ZZ! "
ReadLineZZ" *
(ZZ* +
)ZZ+ ,
;ZZ, -
}[[ 
}\\ 
}]] 
catch^^ 
(^^ 
IOException^^ 
exceptIO^^ '
)^^' (
{__ 
IO`` 
.`` 
Logger`` 
.`` 
Log`` 
(`` 
NLog`` "
.``" #
LogLevel``# +
.``+ ,
Warn``, 0
,``0 1
exceptIO``2 :
,``: ;
$str``< W
)``W X
;``X Y
}aa 
}bb 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68bcc C
.ccC D
GoodB2GSinkccD O
(ccO P
reqccP S
,ccS T
respccU Y
)ccY Z
;ccZ [
}dd 
}ff 
}gg ¦
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68b A
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68a Q
.Q R
dataR V
;V W
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68a,, Q
.,,Q R
data,,R V
;,,V W
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_68a77 Q
.77Q R
data77R V
;77V W
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ¿(
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_71a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_71b88 C
.88C D
BadSink88D K
(88K L
(88L M
Object88M S
)88S T
data88T X
,88Y Z
req88[ ^
,88^ _
resp88` d
)88e f
;88f g
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
staticCC 
voidCC 
GoodG2BCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
$strGG 
;GG G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_71bHH C
.HHC D
GoodG2BSinkHHD O
(HHO P
(HHP Q
ObjectHHQ W
)HHW X
dataHHX \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{QQ 	
tryRR 
{SS 
usingTT 
(TT 
	WebClientTT  
clientTT! '
=TT( )
newTT* -
	WebClientTT. 7
(TT7 8
)TT8 9
)TT9 :
{UU 
usingVV 
(VV 
StreamReaderVV '
srVV( *
=VV+ ,
newVV- 0
StreamReaderVV1 =
(VV= >
clientVV> D
.VVD E
OpenReadVVE M
(VVM N
$strVVN g
)VVg h
)VVh i
)VVi j
{WW 
data[[ 
=[[ 
sr[[ !
.[[! "
ReadLine[[" *
([[* +
)[[+ ,
;[[, -
}\\ 
}]] 
}^^ 
catch__ 
(__ 
IOException__ 
exceptIO__ '
)__' (
{`` 
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa "
.aa" #
LogLevelaa# +
.aa+ ,
Warnaa, 0
,aa0 1
exceptIOaa2 :
,aa: ;
$straa< W
)aaW X
;aaX Y
}bb 
}cc 	G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_71bdd C
.ddC D
GoodB2GSinkddD O
(ddO P
(ddP Q
ObjectddQ W
)ddW X
dataddX \
,dd] ^
reqdd_ b
,ddb c
respddd h
)ddi j
;ddj k
}ee 
}gg 
}hh ÷
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_71b A
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ¯6
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_72a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	
	Hashtable99 
dataHashtable99 
=99  !
new99" %
	Hashtable99& /
(99/ 0
$num990 1
)991 2
;992 3
dataHashtable:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: !
)::! "
;::" #
dataHashtable;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; !
);;! "
;;;" #
dataHashtable<< 
.<< 
Add<< 
(<< 
$num<< 
,<< 
data<< !
)<<! "
;<<" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_72b== C
.==C D
BadSink==D K
(==K L
dataHashtable==L Y
,==Z [
req==\ _
,==_ `
resp==a e
)==f g
;==g h
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodG2BCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2GDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
HttpRequestHH  +
reqHH, /
,HH/ 0
HttpResponseHH1 =
respHH> B
)HHB C
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
	HashtableMM 
dataHashtableMM 
=MM  !
newMM" %
	HashtableMM& /
(MM/ 0
$numMM0 1
)MM1 2
;MM2 3
dataHashtableNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN !
)NN! "
;NN" #
dataHashtableOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO !
)OO! "
;OO" #
dataHashtablePP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP !
)PP! "
;PP" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_72bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataHashtableQQP ]
,QQ^ _
reqQQ` c
,QQc d
respQQe i
)QQj k
;QQk l
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	
	Hashtablemm 
dataHashtablemm 
=mm  !
newmm" %
	Hashtablemm& /
(mm/ 0
$nummm0 1
)mm1 2
;mm2 3
dataHashtablenn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann !
)nn! "
;nn" #
dataHashtableoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo !
)oo! "
;oo" #
dataHashtablepp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp !
)pp! "
;pp" #G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_72bqq C
.qqC D
GoodB2GSinkqqD O
(qqO P
dataHashtableqqP ]
,qq^ _
reqqq` c
,qqc d
respqqe i
)qqj k
;qqk l
}rr 
}tt 
}uu ¢
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_72b A
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB µ6
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_73a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	

LinkedList99 
<99 
string99 
>99 
dataLinkedList99 )
=99* +
new99, /

LinkedList990 :
<99: ;
string99; A
>99A B
(99B C
)99C D
;99D E
dataLinkedList:: 
.:: 
AddLast:: 
(:: 
data:: #
)::# $
;::$ %
dataLinkedList;; 
.;; 
AddLast;; 
(;; 
data;; #
);;# $
;;;$ %
dataLinkedList<< 
.<< 
AddLast<< 
(<< 
data<< #
)<<# $
;<<$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_73b== C
.==C D
BadSink==D K
(==K L
dataLinkedList==L Z
,==[ \
req==] `
,==` a
resp==b f
)==g h
;==h i
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodG2BCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2GDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
HttpRequestHH  +
reqHH, /
,HH/ 0
HttpResponseHH1 =
respHH> B
)HHB C
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 

LinkedListMM 
<MM 
stringMM 
>MM 
dataLinkedListMM )
=MM* +
newMM, /

LinkedListMM0 :
<MM: ;
stringMM; A
>MMA B
(MMB C
)MMC D
;MMD E
dataLinkedListNN 
.NN 
AddLastNN 
(NN 
dataNN #
)NN# $
;NN$ %
dataLinkedListOO 
.OO 
AddLastOO 
(OO 
dataOO #
)OO# $
;OO$ %
dataLinkedListPP 
.PP 
AddLastPP 
(PP 
dataPP #
)PP# $
;PP$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_73bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataLinkedListQQP ^
,QQ_ `
reqQQa d
,QQd e
respQQf j
)QQk l
;QQl m
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	

LinkedListmm 
<mm 
stringmm 
>mm 
dataLinkedListmm )
=mm* +
newmm, /

LinkedListmm0 :
<mm: ;
stringmm; A
>mmA B
(mmB C
)mmC D
;mmD E
dataLinkedListnn 
.nn 
AddLastnn 
(nn 
datann #
)nn# $
;nn$ %
dataLinkedListoo 
.oo 
AddLastoo 
(oo 
dataoo #
)oo# $
;oo$ %
dataLinkedListpp 
.pp 
AddLastpp 
(pp 
datapp #
)pp# $
;pp$ %G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_73bqq C
.qqC D
GoodB2GSinkqqD O
(qqO P
dataLinkedListqqP ^
,qq_ `
reqqqa d
,qqd e
respqqf j
)qqk l
;qql m
}rr 
}tt 
}uu ä
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_73b A
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ú9
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_74a A
:B C
AbstractTestCaseWebD W
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
try'' 
{(( 
using)) 
()) 
	WebClient))  
client))! '
=))( )
new))* -
	WebClient)). 7
())7 8
)))8 9
)))9 :
{** 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
client++> D
.++D E
OpenRead++E M
(++M N
$str++N g
)++g h
)++h i
)++i j
{,, 
data00 
=00 
sr00 !
.00! "
ReadLine00" *
(00* +
)00+ ,
;00, -
}11 
}22 
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	

Dictionary99 
<99 
int99 
,99 
string99 
>99 
dataDictionary99 -
=99. /
new990 3

Dictionary994 >
<99> ?
int99? B
,99B C
string99C I
>99I J
(99J K
)99K L
;99L M
dataDictionary:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: "
)::" #
;::# $
dataDictionary;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; "
);;" #
;;;# $
dataDictionary<< 
.<< 
Add<< 
(<< 
$num<< 
,<< 
data<< "
)<<" #
;<<# $G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_74b== C
.==C D
BadSink==D K
(==K L
dataDictionary==L Z
,==[ \
req==] `
,==` a
resp==b f
)==g h
;==h i
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodG2BCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2GDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
HttpRequestHH  +
reqHH, /
,HH/ 0
HttpResponseHH1 =
respHH> B
)HHB C
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 

DictionaryMM 
<MM 
intMM 
,MM 
stringMM 
>MM 
dataDictionaryMM -
=MM. /
newMM0 3

DictionaryMM4 >
<MM> ?
intMM? B
,MMB C
stringMMC I
>MMI J
(MMJ K
)MMK L
;MML M
dataDictionaryNN 
.NN 
AddNN 
(NN 
$numNN 
,NN 
dataNN "
)NN" #
;NN# $
dataDictionaryOO 
.OO 
AddOO 
(OO 
$numOO 
,OO 
dataOO "
)OO" #
;OO# $
dataDictionaryPP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP "
)PP" #
;PP# $G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_74bQQ C
.QQC D
GoodG2BSinkQQD O
(QQO P
dataDictionaryQQP ^
,QQ_ `
reqQQa d
,QQd e
respQQf j
)QQk l
;QQl m
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 	
try[[ 
{\\ 
using]] 
(]] 
	WebClient]]  
client]]! '
=]]( )
new]]* -
	WebClient]]. 7
(]]7 8
)]]8 9
)]]9 :
{^^ 
using__ 
(__ 
StreamReader__ '
sr__( *
=__+ ,
new__- 0
StreamReader__1 =
(__= >
client__> D
.__D E
OpenRead__E M
(__M N
$str__N g
)__g h
)__h i
)__i j
{`` 
datadd 
=dd 
srdd !
.dd! "
ReadLinedd" *
(dd* +
)dd+ ,
;dd, -
}ee 
}ff 
}gg 
catchhh 
(hh 
IOExceptionhh 
exceptIOhh '
)hh' (
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj 
(jj 
NLogjj "
.jj" #
LogLeveljj# +
.jj+ ,
Warnjj, 0
,jj0 1
exceptIOjj2 :
,jj: ;
$strjj< W
)jjW X
;jjX Y
}kk 
}ll 	

Dictionarymm 
<mm 
intmm 
,mm 
stringmm 
>mm 
dataDictionarymm -
=mm. /
newmm0 3

Dictionarymm4 >
<mm> ?
intmm? B
,mmB C
stringmmC I
>mmI J
(mmJ K
)mmK L
;mmL M
dataDictionarynn 
.nn 
Addnn 
(nn 
$numnn 
,nn 
datann "
)nn" #
;nn# $
dataDictionaryoo 
.oo 
Addoo 
(oo 
$numoo 
,oo 
dataoo "
)oo" #
;oo# $
dataDictionarypp 
.pp 
Addpp 
(pp 
$numpp 
,pp 
datapp "
)pp" #
;pp# $G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_74bqq C
.qqC D
GoodB2GSinkqqD O
(qqO P
dataDictionaryqqP ^
,qq_ `
reqqqa d
,qqd e
respqqf j
)qqk l
;qql m
}rr 
}tt 
}uu 
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_74b A
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB P
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_75a A
:B C
AbstractTestCaseWebD W
{   
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{'' 	
try(( 
{)) 
using** 
(** 
	WebClient**  
client**! '
=**( )
new*** -
	WebClient**. 7
(**7 8
)**8 9
)**9 :
{++ 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
client,,> D
.,,D E
OpenRead,,E M
(,,M N
$str,,N g
),,g h
),,h i
),,i j
{-- 
data11 
=11 
sr11 !
.11! "
ReadLine11" *
(11* +
)11+ ,
;11, -
}22 
}33 
}44 
catch55 
(55 
IOException55 
exceptIO55 '
)55' (
{66 
IO77 
.77 
Logger77 
.77 
Log77 
(77 
NLog77 "
.77" #
LogLevel77# +
.77+ ,
Warn77, 0
,770 1
exceptIO772 :
,77: ;
$str77< W
)77W X
;77X Y
}88 
}99 	
byte;; 
[;; 
];; 
dataSerialized;; 
=;; 
null;;  $
;;;$ %
try<< 
{== 	
BinaryFormatter>> 
bf>> 
=>>  
new>>! $
BinaryFormatter>>% 4
(>>4 5
)>>5 6
;>>6 7
using?? 
(?? 
var?? 
ms?? 
=?? 
new?? 
MemoryStream??  ,
(??, -
)??- .
)??. /
{@@ 
bfAA 
.AA 
	SerializeAA 
(AA 
msAA 
,AA  
dataAA! %
)AA% &
;AA& '
dataSerializedBB 
=BB  
msBB! #
.BB# $
ToArrayBB$ +
(BB+ ,
)BB, -
;BB- .
}CC G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_75bDD G
.DDG H
BadSinkDDH O
(DDO P
dataSerializedDDP ^
,DD_ `
reqDDa d
,DDd e
respDDf j
)DDk l
;DDl m
}EE 	
catchFF 
(FF "
SerializationExceptionFF %
exceptSerializeFF& 5
)FF5 6
{GG 	
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH 
.HH 
LogLevelHH '
.HH' (
WarnHH( ,
,HH, -
$strHH. X
,HHX Y
exceptSerializeHHZ i
)HHi j
;HHj k
}II 	
}JJ 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
HttpRequestMM )
reqMM* -
,MM- .
HttpResponseMM/ ;
respMM< @
)MM@ A
{NN 
GoodG2BOO 
(OO 
reqOO 
,OO 
respOO 
)OO 
;OO 
GoodB2GPP 
(PP 
reqPP 
,PP 
respPP 
)PP 
;PP 
}QQ 
privateTT 
staticTT 
voidTT 
GoodG2BTT 
(TT  
HttpRequestTT  +
reqTT, /
,TT/ 0
HttpResponseTT1 =
respTT> B
)TTB C
{UU 
stringVV 
dataVV 
;VV 
dataWW 
=WW 
$strWW 
;WW 
{YY 	
tryZZ 
{[[ 
using\\ 
(\\ 
	WebClient\\  
client\\! '
=\\( )
new\\* -
	WebClient\\. 7
(\\7 8
)\\8 9
)\\9 :
{]] 
using^^ 
(^^ 
StreamReader^^ '
sr^^( *
=^^+ ,
new^^- 0
StreamReader^^1 =
(^^= >
client^^> D
.^^D E
OpenRead^^E M
(^^M N
$str^^N g
)^^g h
)^^h i
)^^i j
{__ 
datacc 
=cc 
srcc !
.cc! "
ReadLinecc" *
(cc* +
)cc+ ,
;cc, -
}dd 
}ee 
}ff 
catchgg 
(gg 
IOExceptiongg 
exceptIOgg '
)gg' (
{hh 
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii "
.ii" #
LogLevelii# +
.ii+ ,
Warnii, 0
,ii0 1
exceptIOii2 :
,ii: ;
$strii< W
)iiW X
;iiX Y
}jj 
}kk 	
bytemm 
[mm 
]mm 
dataSerializedmm 
=mm 
nullmm  $
;mm$ %
trynn 
{oo 	
BinaryFormatterpp 
bfpp 
=pp  
newpp! $
BinaryFormatterpp% 4
(pp4 5
)pp5 6
;pp6 7
usingqq 
(qq 
varqq 
msqq 
=qq 
newqq 
MemoryStreamqq  ,
(qq, -
)qq- .
)qq. /
{rr 
bfss 
.ss 
	Serializess 
(ss 
msss 
,ss  
datass! %
)ss% &
;ss& '
dataSerializedtt 
=tt  
mstt! #
.tt# $
ToArraytt$ +
(tt+ ,
)tt, -
;tt- .
}uu G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_75bvv G
.vvG H
GoodG2BSinkvvH S
(vvS T
dataSerializedvvT b
,vvc d
reqvve h
,vvh i
respvvj n
)vvo p
;vvp q
}ww 	
catchxx 
(xx "
SerializationExceptionxx %
exceptSerializexx& 5
)xx5 6
{yy 	
IOzz 
.zz 
Loggerzz 
.zz 
Logzz 
(zz 
NLogzz 
.zz 
LogLevelzz '
.zz' (
Warnzz( ,
,zz, -
$strzz. X
,zzX Y
exceptSerializezzZ i
)zzi j
;zzj k
}{{ 	
}|| 
private 
static 
void 
GoodB2G 
(  
HttpRequest  +
req, /
,/ 0
HttpResponse1 =
resp> B
)B C
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
{
 	
try
 
{
 
using
 
(
 
	WebClient
  
client
! '
=
( )
new
* -
	WebClient
. 7
(
7 8
)
8 9
)
9 :
{
 
using
 
(
 
StreamReader
 '
sr
( *
=
+ ,
new
- 0
StreamReader
1 =
(
= >
client
> D
.
D E
OpenRead
E M
(
M N
$str
N g
)
g h
)
h i
)
i j
{
 
data
 
=
 
sr
 !
.
! "
ReadLine
" *
(
* +
)
+ ,
;
, -
}
 
}
 
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
byte
 
[
 
]
 
dataSerialized
 
=
 
null
  $
;
$ %
try
 
{
 	
BinaryFormatter
 
bf
 
=
  
new
! $
BinaryFormatter
% 4
(
4 5
)
5 6
;
6 7
using
 
(
 
var
 
ms
 
=
 
new
 
MemoryStream
  ,
(
, -
)
- .
)
. /
{
 
bf
 
.
 
	Serialize
 
(
 
ms
 
,
  
data
! %
)
% &
;
& '
dataSerialized
 
=
  
ms
! #
.
# $
ToArray
$ +
(
+ ,
)
, -
;
- .
}
   I
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_75b
¡¡ G
.
¡¡G H
GoodB2GSink
¡¡H S
(
¡¡S T
dataSerialized
¡¡T b
,
¡¡c d
req
¡¡e h
,
¡¡h i
resp
¡¡j n
)
¡¡o p
;
¡¡p q
}
¢¢ 	
catch
££ 
(
££ $
SerializationException
££ %
exceptSerialize
££& 5
)
££5 6
{
¤¤ 	
IO
¥¥ 
.
¥¥ 
Logger
¥¥ 
.
¥¥ 
Log
¥¥ 
(
¥¥ 
NLog
¥¥ 
.
¥¥ 
LogLevel
¥¥ '
.
¥¥' (
Warn
¥¥( ,
,
¥¥, -
$str
¥¥. X
,
¥¥X Y
exceptSerialize
¥¥Z i
)
¥¥i j
;
¥¥j k
}
¦¦ 	
}
§§ 
}©© 
}ªª ¤8
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_75b A
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if,, 
(,, 
data,, 
!=,, 
null,, 
),, 
{-- 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
if`` 
(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
datacc- 1
,cc1 2
Encodingcc3 ;
.cc; <
UTF8cc< @
)cc@ A
;ccA B
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn ú+
¼C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class G
;CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81a A
:B C
AbstractTestCaseWebD W
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 	
try&& 
{'' 
using(( 
((( 
	WebClient((  
client((! '
=((( )
new((* -
	WebClient((. 7
(((7 8
)((8 9
)((9 :
{)) 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
client**> D
.**D E
OpenRead**E M
(**M N
$str**N g
)**g h
)**h i
)**i j
{++ 
data// 
=// 
sr// !
.//! "
ReadLine//" *
(//* +
)//+ ,
;//, -
}00 
}11 
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	K
?CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_base88 G

baseObject88H R
=88S T
new88U XK
>CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_bad	88Y 
(
88 
)
88 
;
88 

baseObject99 
.99 
Action99 
(99 
data99 
,99  
req99! $
,99$ %
resp99& *
)99* +
;99+ ,
}:: 
public== 

override== 
void== 
Good== 
(== 
HttpRequest== )
req==* -
,==- .
HttpResponse==/ ;
resp==< @
)==@ A
{>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
GoodB2G@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2BDD 
(DD 
HttpRequestDD $
reqDD% (
,DD( )
HttpResponseDD* 6
respDD7 ;
)DD; <
{EE 
stringFF 
dataFF 
;FF 
dataHH 
=HH 
$strHH 
;HH K
?CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_baseII G

baseObjectIIH R
=IIS T
newIIU XO
BCWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_goodG2B	IIY 
(
II 
)
II 
;
II 

baseObjectJJ 
.JJ 
ActionJJ 
(JJ 
dataJJ 
,JJ  
reqJJ! $
,JJ$ %
respJJ& *
)JJ* +
;JJ+ ,
}KK 
privateNN 
voidNN 
GoodB2GNN 
(NN 
HttpRequestNN $
reqNN% (
,NN( )
HttpResponseNN* 6
respNN7 ;
)NN; <
{OO 
stringPP 
dataPP 
;PP 
dataQQ 
=QQ 
$strQQ 
;QQ 
{SS 	
tryTT 
{UU 
usingVV 
(VV 
	WebClientVV  
clientVV! '
=VV( )
newVV* -
	WebClientVV. 7
(VV7 8
)VV8 9
)VV9 :
{WW 
usingXX 
(XX 
StreamReaderXX '
srXX( *
=XX+ ,
newXX- 0
StreamReaderXX1 =
(XX= >
clientXX> D
.XXD E
OpenReadXXE M
(XXM N
$strXXN g
)XXg h
)XXh i
)XXi j
{YY 
data]] 
=]] 
sr]] !
.]]! "
ReadLine]]" *
(]]* +
)]]+ ,
;]], -
}^^ 
}__ 
}`` 
catchaa 
(aa 
IOExceptionaa 
exceptIOaa '
)aa' (
{bb 
IOcc 
.cc 
Loggercc 
.cc 
Logcc 
(cc 
NLogcc "
.cc" #
LogLevelcc# +
.cc+ ,
Warncc, 0
,cc0 1
exceptIOcc2 :
,cc: ;
$strcc< W
)ccW X
;ccX Y
}dd 
}ee 	K
?CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_baseff G

baseObjectffH R
=ffS T
newffU XO
BCWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_goodB2G	ffY 
(
ff 
)
ff 
;
ff 

baseObjectgg 
.gg 
Actiongg 
(gg 
datagg 
,gg  
reqgg! $
,gg$ %
respgg& *
)gg* +
;gg+ ,
}hh 
}jj 
}kk ö
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class J
>CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_bad D
:E FL
?CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_base	G 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& é
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 K
?CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_base N
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ã

ÃC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class N
BCWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_goodB2G H
:I JL
?CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_base	K 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
data##) -
,##- .
Encoding##/ 7
.##7 8
UTF8##8 <
)##< =
;##= >
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( þ
ÃC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class N
BCWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_goodG2B H
:I JL
?CWE113_HTTP_Response_Splitting__Web_NetClient_setHeader_81_base	K 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' ¯
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_01 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
if## 

(## 
data## 
!=## 
null## 
)## 
{$$ 	

HttpCookie%% 

cookieSink%% !
=%%" #
new%%$ '

HttpCookie%%( 2
(%%2 3
$str%%3 9
,%%9 :
data%%; ?
)%%? @
;%%@ A
resp'' 
.'' 
AppendCookie'' 
('' 

cookieSink'' (
)''( )
;'') *
}(( 	
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
void33 
GoodG2B33 
(33 
HttpRequest33 $
req33% (
,33( )
HttpResponse33* 6
resp337 ;
)33; <
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	

HttpCookie:: 

cookieSink:: !
=::" #
new::$ '

HttpCookie::( 2
(::2 3
$str::3 9
,::9 :
data::; ?
)::? @
;::@ A
resp<< 
.<< 
AppendCookie<< 
(<< 

cookieSink<< (
)<<( )
;<<) *
}== 	
}>> 
privateAA 
voidAA 
GoodB2GAA 
(AA 
HttpRequestAA $
reqAA% (
,AA( )
HttpResponseAA* 6
respAA7 ;
)AA; <
{BB 
stringCC 
dataCC 
;CC 
dataEE 
=EE 
reqEE 
.EE 
ParamsEE 
.EE 
GetEE 
(EE 
$strEE $
)EE$ %
;EE% &
ifFF 

(FF 
dataFF 
!=FF 
nullFF 
)FF 
{GG 	

HttpCookieHH 

cookieSinkHH !
=HH" #
newHH$ '

HttpCookieHH( 2
(HH2 3
$strHH3 9
,HH9 :
HttpUtilityHH; F
.HHF G
	UrlEncodeHHG P
(HHP Q
dataHHQ U
,HHU V
EncodingHHW _
.HH_ `
UTF8HH` d
)HHd e
)HHe f
;HHf g
respJJ 
.JJ 
AppendCookieJJ 
(JJ 

cookieSinkJJ (
)JJ( )
;JJ) *
}KK 	
}LL 
}NN 
}OO ½=
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_02 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
true,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private99 
void99 
GoodG2B199 
(99 
HttpRequest99 %
req99& )
,99) *
HttpResponse99+ 7
resp998 <
)99< =
{:: 
string;; 
data;; 
;;; 
if<< 

(<< 
false<< 
)<< 
{== 	
data@@ 
=@@ 
null@@ 
;@@ 
}AA 	
elseBB 
{CC 	
dataEE 
=EE 
$strEE 
;EE 
}FF 	
ifGG 

(GG 
trueGG 
)GG 
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 

HttpCookieKK 

cookieSinkKK %
=KK& '
newKK( +

HttpCookieKK, 6
(KK6 7
$strKK7 =
,KK= >
dataKK? C
)KKC D
;KKD E
respMM 
.MM 
AppendCookieMM !
(MM! "

cookieSinkMM" ,
)MM, -
;MM- .
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
trueVV 
)VV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
null__ 
;__ 
}`` 	
ifaa 

(aa 
trueaa 
)aa 
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
dataee? C
)eeC D
;eeD E
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2G1mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
truepp 
)pp 
{qq 	
datass 
=ss 
reqss 
.ss 
Paramsss 
.ss 
Getss !
(ss! "
$strss" (
)ss( )
;ss) *
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
false{{ 
){{ 
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
$str~~ /
)~~/ 0
;~~0 1
} 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
true
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
   
.
   
AppendCookie
   !
(
  ! "

cookieSink
  " ,
)
  , -
;
  - .
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
¦¦ 
GoodG2B1
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
GoodG2B2
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodB2G2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
}
«« 
}­­ 
}®® @
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_03 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
$num,, 
==,, 
$num,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private99 
void99 
GoodG2B199 
(99 
HttpRequest99 %
req99& )
,99) *
HttpResponse99+ 7
resp998 <
)99< =
{:: 
string;; 
data;; 
;;; 
if<< 

(<< 
$num<< 
!=<< 
$num<< 
)<< 
{== 	
data@@ 
=@@ 
null@@ 
;@@ 
}AA 	
elseBB 
{CC 	
dataEE 
=EE 
$strEE 
;EE 
}FF 	
ifGG 

(GG 
$numGG 
==GG 
$numGG 
)GG 
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 

HttpCookieKK 

cookieSinkKK %
=KK& '
newKK( +

HttpCookieKK, 6
(KK6 7
$strKK7 =
,KK= >
dataKK? C
)KKC D
;KKD E
respMM 
.MM 
AppendCookieMM !
(MM! "

cookieSinkMM" ,
)MM, -
;MM- .
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
$numVV 
==VV 
$numVV 
)VV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
null__ 
;__ 
}`` 	
ifaa 

(aa 
$numaa 
==aa 
$numaa 
)aa 
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
dataee? C
)eeC D
;eeD E
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2G1mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
$numpp 
==pp 
$numpp 
)pp 
{qq 	
datass 
=ss 
reqss 
.ss 
Paramsss 
.ss 
Getss !
(ss! "
$strss" (
)ss( )
;ss) *
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
$num{{ 
!={{ 
$num{{ 
){{ 
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
$str~~ /
)~~/ 0
;~~0 1
} 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
   
.
   
AppendCookie
   !
(
  ! "

cookieSink
  " ,
)
  , -
;
  - .
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
¦¦ 
GoodG2B1
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
GoodG2B2
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodB2G2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
}
«« 
}­­ 
}®® A
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_04 E
:F G
AbstractTestCaseWebH [
{ 
private"" 
const"" 
bool"" 
PRIVATE_CONST_TRUE"" )
=""* +
true"", 0
;""0 1
private## 
const## 
bool## 
PRIVATE_CONST_FALSE## *
=##+ ,
false##- 2
;##2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data++ 
=++ 
req++ 
.++ 
Params++ 
.++ 
Get++ !
(++! "
$str++" (
)++( )
;++) *
},, 	
else-- 
{.. 	
data11 
=11 
null11 
;11 
}22 	
if33 

(33 
PRIVATE_CONST_TRUE33 
)33 
{44 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 

HttpCookie77 

cookieSink77 %
=77& '
new77( +

HttpCookie77, 6
(776 7
$str777 =
,77= >
data77? C
)77C D
;77D E
resp99 
.99 
AppendCookie99 !
(99! "

cookieSink99" ,
)99, -
;99- .
}:: 
};; 	
}<< 
private@@ 
void@@ 
GoodG2B1@@ 
(@@ 
HttpRequest@@ %
req@@& )
,@@) *
HttpResponse@@+ 7
resp@@8 <
)@@< =
{AA 
stringBB 
dataBB 
;BB 
ifCC 

(CC 
PRIVATE_CONST_FALSECC 
)CC  
{DD 	
dataGG 
=GG 
nullGG 
;GG 
}HH 	
elseII 
{JJ 	
dataLL 
=LL 
$strLL 
;LL 
}MM 	
ifNN 

(NN 
PRIVATE_CONST_TRUENN 
)NN 
{OO 	
ifPP 
(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 

HttpCookieRR 

cookieSinkRR %
=RR& '
newRR( +

HttpCookieRR, 6
(RR6 7
$strRR7 =
,RR= >
dataRR? C
)RRC D
;RRD E
respTT 
.TT 
AppendCookieTT !
(TT! "

cookieSinkTT" ,
)TT, -
;TT- .
}UU 
}VV 	
}WW 
privateZZ 
voidZZ 
GoodG2B2ZZ 
(ZZ 
HttpRequestZZ %
reqZZ& )
,ZZ) *
HttpResponseZZ+ 7
respZZ8 <
)ZZ< =
{[[ 
string\\ 
data\\ 
;\\ 
if]] 

(]] 
PRIVATE_CONST_TRUE]] 
)]] 
{^^ 	
data`` 
=`` 
$str`` 
;`` 
}aa 	
elsebb 
{cc 	
dataff 
=ff 
nullff 
;ff 
}gg 	
ifhh 

(hh 
PRIVATE_CONST_TRUEhh 
)hh 
{ii 	
ifjj 
(jj 
datajj 
!=jj 
nulljj 
)jj 
{kk 

HttpCookiell 

cookieSinkll %
=ll& '
newll( +

HttpCookiell, 6
(ll6 7
$strll7 =
,ll= >
datall? C
)llC D
;llD E
respnn 
.nn 
AppendCookienn !
(nn! "

cookieSinknn" ,
)nn, -
;nn- .
}oo 
}pp 	
}qq 
privatett 
voidtt 
GoodB2G1tt 
(tt 
HttpRequesttt %
reqtt& )
,tt) *
HttpResponsett+ 7
resptt8 <
)tt< =
{uu 
stringvv 
datavv 
;vv 
ifww 

(ww 
PRIVATE_CONST_TRUEww 
)ww 
{xx 	
datazz 
=zz 
reqzz 
.zz 
Paramszz 
.zz 
Getzz !
(zz! "
$strzz" (
)zz( )
;zz) *
}{{ 	
else|| 
{}} 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PRIVATE_CONST_FALSE
 
)
  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
   	
if
¡¡ 

(
¡¡  
PRIVATE_CONST_TRUE
¡¡ 
)
¡¡ 
{
¢¢ 	
if
££ 
(
££ 
data
££ 
!=
££ 
null
££ 
)
££ 
{
¤¤ 

HttpCookie
¥¥ 

cookieSink
¥¥ %
=
¥¥& '
new
¥¥( +

HttpCookie
¥¥, 6
(
¥¥6 7
$str
¥¥7 =
,
¥¥= >
HttpUtility
¥¥? J
.
¥¥J K
	UrlEncode
¥¥K T
(
¥¥T U
data
¥¥U Y
,
¥¥Y Z
Encoding
¥¥[ c
.
¥¥c d
UTF8
¥¥d h
)
¥¥h i
)
¥¥i j
;
¥¥j k
resp
§§ 
.
§§ 
AppendCookie
§§ !
(
§§! "

cookieSink
§§" ,
)
§§, -
;
§§- .
}
¨¨ 
}
©© 	
}
ªª 
public
¬¬ 

override
¬¬ 
void
¬¬ 
Good
¬¬ 
(
¬¬ 
HttpRequest
¬¬ )
req
¬¬* -
,
¬¬- .
HttpResponse
¬¬/ ;
resp
¬¬< @
)
¬¬@ A
{
­­ 
GoodG2B1
®® 
(
®® 
req
®® 
,
®® 
resp
®® 
)
®® 
;
®® 
GoodG2B2
¯¯ 
(
¯¯ 
req
¯¯ 
,
¯¯ 
resp
¯¯ 
)
¯¯ 
;
¯¯ 
GoodB2G1
°° 
(
°° 
req
°° 
,
°° 
resp
°° 
)
°° 
;
°° 
GoodB2G2
±± 
(
±± 
req
±± 
,
±± 
resp
±± 
)
±± 
;
±± 
}
²² 
}´´ 
}µµ @
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_05 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data** 
=** 
req** 
.** 
Params** 
.** 
Get** !
(**! "
$str**" (
)**( )
;**) *
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
privateTrue22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
privateFalseBB 
)BB 
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
privateTrueMM 
)MM 
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
privateTrue\\ 
)\\ 
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
privateTruegg 
)gg 
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
privateTruevv 
)vv 
{ww 	
datayy 
=yy 
reqyy 
.yy 
Paramsyy 
.yy 
Getyy !
(yy! "
$stryy" (
)yy( )
;yy) *
}zz 	
else{{ 
{|| 	
data 
= 
null 
; 
}
 	
if
 

(
 
privateFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
   

(
   
privateTrue
   
)
   
{
¡¡ 	
if
¢¢ 
(
¢¢ 
data
¢¢ 
!=
¢¢ 
null
¢¢ 
)
¢¢ 
{
££ 

HttpCookie
¤¤ 

cookieSink
¤¤ %
=
¤¤& '
new
¤¤( +

HttpCookie
¤¤, 6
(
¤¤6 7
$str
¤¤7 =
,
¤¤= >
HttpUtility
¤¤? J
.
¤¤J K
	UrlEncode
¤¤K T
(
¤¤T U
data
¤¤U Y
,
¤¤Y Z
Encoding
¤¤[ c
.
¤¤c d
UTF8
¤¤d h
)
¤¤h i
)
¤¤i j
;
¤¤j k
resp
¦¦ 
.
¦¦ 
AppendCookie
¦¦ !
(
¦¦! "

cookieSink
¦¦" ,
)
¦¦, -
;
¦¦- .
}
§§ 
}
¨¨ 	
}
©© 
public
«« 

override
«« 
void
«« 
Good
«« 
(
«« 
HttpRequest
«« )
req
««* -
,
««- .
HttpResponse
««/ ;
resp
««< @
)
««@ A
{
¬¬ 
GoodG2B1
­­ 
(
­­ 
req
­­ 
,
­­ 
resp
­­ 
)
­­ 
;
­­ 
GoodG2B2
®® 
(
®® 
req
®® 
,
®® 
resp
®® 
)
®® 
;
®® 
GoodB2G1
¯¯ 
(
¯¯ 
req
¯¯ 
,
¯¯ 
resp
¯¯ 
)
¯¯ 
;
¯¯ 
GoodB2G2
°° 
(
°° 
req
°° 
,
°° 
resp
°° 
)
°° 
;
°° 
}
±± 
}³³ 
}´´ ÊB
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_06 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&&  
$num&&  !
)&&! "
{'' 	
data)) 
=)) 
req)) 
.)) 
Params)) 
.)) 
Get)) !
())! "
$str))" (
)))( )
;))) *
}** 	
else++ 
{,, 	
data// 
=// 
null// 
;// 
}00 	
if11 

(11 
PRIVATE_CONST_FIVE11 
==11  
$num11  !
)11! "
{22 	
if33 
(33 
data33 
!=33 
null33 
)33 
{44 

HttpCookie55 

cookieSink55 %
=55& '
new55( +

HttpCookie55, 6
(556 7
$str557 =
,55= >
data55? C
)55C D
;55D E
resp77 
.77 
AppendCookie77 !
(77! "

cookieSink77" ,
)77, -
;77- .
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
PRIVATE_CONST_FIVEAA 
!=AA  
$numAA  !
)AA! "
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
PRIVATE_CONST_FIVELL 
==LL  
$numLL  !
)LL! "
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 

HttpCookiePP 

cookieSinkPP %
=PP& '
newPP( +

HttpCookiePP, 6
(PP6 7
$strPP7 =
,PP= >
dataPP? C
)PPC D
;PPD E
respRR 
.RR 
AppendCookieRR !
(RR! "

cookieSinkRR" ,
)RR, -
;RR- .
}SS 
}TT 	
}UU 
privateXX 
voidXX 
GoodG2B2XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
PRIVATE_CONST_FIVE[[ 
==[[  
$num[[  !
)[[! "
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
else`` 
{aa 	
datadd 
=dd 
nulldd 
;dd 
}ee 	
ifff 

(ff 
PRIVATE_CONST_FIVEff 
==ff  
$numff  !
)ff! "
{gg 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 

HttpCookiejj 

cookieSinkjj %
=jj& '
newjj( +

HttpCookiejj, 6
(jj6 7
$strjj7 =
,jj= >
datajj? C
)jjC D
;jjD E
respll 
.ll 
AppendCookiell !
(ll! "

cookieSinkll" ,
)ll, -
;ll- .
}mm 
}nn 	
}oo 
privaterr 
voidrr 
GoodB2G1rr 
(rr 
HttpRequestrr %
reqrr& )
,rr) *
HttpResponserr+ 7
resprr8 <
)rr< =
{ss 
stringtt 
datatt 
;tt 
ifuu 

(uu 
PRIVATE_CONST_FIVEuu 
==uu  
$numuu  !
)uu! "
{vv 	
dataxx 
=xx 
reqxx 
.xx 
Paramsxx 
.xx 
Getxx !
(xx! "
$strxx" (
)xx( )
;xx) *
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
null~~ 
;~~ 
} 	
if
 

(
  
PRIVATE_CONST_FIVE
 
!=
  
$num
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
   	
if
¡¡ 
(
¡¡ 
data
¡¡ 
!=
¡¡ 
null
¡¡ 
)
¡¡ 
{
¢¢ 

HttpCookie
££ 

cookieSink
££ %
=
££& '
new
££( +

HttpCookie
££, 6
(
££6 7
$str
££7 =
,
££= >
HttpUtility
££? J
.
££J K
	UrlEncode
££K T
(
££T U
data
££U Y
,
££Y Z
Encoding
££[ c
.
££c d
UTF8
££d h
)
££h i
)
££i j
;
££j k
resp
¥¥ 
.
¥¥ 
AppendCookie
¥¥ !
(
¥¥! "

cookieSink
¥¥" ,
)
¥¥, -
;
¥¥- .
}
¦¦ 
}
§§ 	
}
¨¨ 
public
ªª 

override
ªª 
void
ªª 
Good
ªª 
(
ªª 
HttpRequest
ªª )
req
ªª* -
,
ªª- .
HttpResponse
ªª/ ;
resp
ªª< @
)
ªª@ A
{
«« 
GoodG2B1
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
GoodG2B2
­­ 
(
­­ 
req
­­ 
,
­­ 
resp
­­ 
)
­­ 
;
­­ 
GoodB2G1
®® 
(
®® 
req
®® 
,
®® 
resp
®® 
)
®® 
;
®® 
GoodB2G2
¯¯ 
(
¯¯ 
req
¯¯ 
,
¯¯ 
resp
¯¯ 
)
¯¯ 
;
¯¯ 
}
°° 
}²² 
}³³ êA
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_07 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data)) 
=)) 
req)) 
.)) 
Params)) 
.)) 
Get)) !
())! "
$str))" (
)))( )
;))) *
}** 	
else++ 
{,, 	
data// 
=// 
null// 
;// 
}00 	
if11 

(11 
privateFive11 
==11 
$num11 
)11 
{22 	
if33 
(33 
data33 
!=33 
null33 
)33 
{44 

HttpCookie55 

cookieSink55 %
=55& '
new55( +

HttpCookie55, 6
(556 7
$str557 =
,55= >
data55? C
)55C D
;55D E
resp77 
.77 
AppendCookie77 !
(77! "

cookieSink77" ,
)77, -
;77- .
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
privateFiveAA 
!=AA 
$numAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
privateFiveLL 
==LL 
$numLL 
)LL 
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 

HttpCookiePP 

cookieSinkPP %
=PP& '
newPP( +

HttpCookiePP, 6
(PP6 7
$strPP7 =
,PP= >
dataPP? C
)PPC D
;PPD E
respRR 
.RR 
AppendCookieRR !
(RR! "

cookieSinkRR" ,
)RR, -
;RR- .
}SS 
}TT 	
}UU 
privateXX 
voidXX 
GoodG2B2XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
privateFive[[ 
==[[ 
$num[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
else`` 
{aa 	
datadd 
=dd 
nulldd 
;dd 
}ee 	
ifff 

(ff 
privateFiveff 
==ff 
$numff 
)ff 
{gg 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 

HttpCookiejj 

cookieSinkjj %
=jj& '
newjj( +

HttpCookiejj, 6
(jj6 7
$strjj7 =
,jj= >
datajj? C
)jjC D
;jjD E
respll 
.ll 
AppendCookiell !
(ll! "

cookieSinkll" ,
)ll, -
;ll- .
}mm 
}nn 	
}oo 
privaterr 
voidrr 
GoodB2G1rr 
(rr 
HttpRequestrr %
reqrr& )
,rr) *
HttpResponserr+ 7
resprr8 <
)rr< =
{ss 
stringtt 
datatt 
;tt 
ifuu 

(uu 
privateFiveuu 
==uu 
$numuu 
)uu 
{vv 	
dataxx 
=xx 
reqxx 
.xx 
Paramsxx 
.xx 
Getxx !
(xx! "
$strxx" (
)xx( )
;xx) *
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
null~~ 
;~~ 
} 	
if
 

(
 
privateFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
   	
if
¡¡ 
(
¡¡ 
data
¡¡ 
!=
¡¡ 
null
¡¡ 
)
¡¡ 
{
¢¢ 

HttpCookie
££ 

cookieSink
££ %
=
££& '
new
££( +

HttpCookie
££, 6
(
££6 7
$str
££7 =
,
££= >
HttpUtility
££? J
.
££J K
	UrlEncode
££K T
(
££T U
data
££U Y
,
££Y Z
Encoding
££[ c
.
££c d
UTF8
££d h
)
££h i
)
££i j
;
££j k
resp
¥¥ 
.
¥¥ 
AppendCookie
¥¥ !
(
¥¥! "

cookieSink
¥¥" ,
)
¥¥, -
;
¥¥- .
}
¦¦ 
}
§§ 	
}
¨¨ 
public
ªª 

override
ªª 
void
ªª 
Good
ªª 
(
ªª 
HttpRequest
ªª )
req
ªª* -
,
ªª- .
HttpResponse
ªª/ ;
resp
ªª< @
)
ªª@ A
{
«« 
GoodG2B1
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
GoodG2B2
­­ 
(
­­ 
req
­­ 
,
­­ 
resp
­­ 
)
­­ 
;
­­ 
GoodB2G1
®® 
(
®® 
req
®® 
,
®® 
resp
®® 
)
®® 
;
®® 
GoodB2G2
¯¯ 
(
¯¯ 
req
¯¯ 
,
¯¯ 
resp
¯¯ 
)
¯¯ 
;
¯¯ 
}
°° 
}²² 
}³³ ÛD
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_08 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public++ 

override++ 
void++ 
Bad++ 
(++ 
HttpRequest++ (
req++) ,
,++, -
HttpResponse++. :
resp++; ?
)++? @
{,, 
string-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data11 
=11 
req11 
.11 
Params11 
.11 
Get11 !
(11! "
$str11" (
)11( )
;11) *
}22 	
else33 
{44 	
data77 
=77 
null77 
;77 
}88 	
if99 

(99 
PrivateReturnsTrue99 
(99 
)99  
)99  !
{:: 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 

HttpCookie== 

cookieSink== %
===& '
new==( +

HttpCookie==, 6
(==6 7
$str==7 =
,=== >
data==? C
)==C D
;==D E
resp?? 
.?? 
AppendCookie?? !
(??! "

cookieSink??" ,
)??, -
;??- .
}@@ 
}AA 	
}BB 
privateFF 
voidFF 
GoodG2B1FF 
(FF 
HttpRequestFF %
reqFF& )
,FF) *
HttpResponseFF+ 7
respFF8 <
)FF< =
{GG 
stringHH 
dataHH 
;HH 
ifII 

(II 
PrivateReturnsFalseII 
(II  
)II  !
)II! "
{JJ 	
dataMM 
=MM 
nullMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$strRR 
;RR 
}SS 	
ifTT 

(TT 
PrivateReturnsTrueTT 
(TT 
)TT  
)TT  !
{UU 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 

HttpCookieXX 

cookieSinkXX %
=XX& '
newXX( +

HttpCookieXX, 6
(XX6 7
$strXX7 =
,XX= >
dataXX? C
)XXC D
;XXD E
respZZ 
.ZZ 
AppendCookieZZ !
(ZZ! "

cookieSinkZZ" ,
)ZZ, -
;ZZ- .
}[[ 
}\\ 	
}]] 
private`` 
void`` 
GoodG2B2`` 
(`` 
HttpRequest`` %
req``& )
,``) *
HttpResponse``+ 7
resp``8 <
)``< =
{aa 
stringbb 
databb 
;bb 
ifcc 

(cc 
PrivateReturnsTruecc 
(cc 
)cc  
)cc  !
{dd 	
dataff 
=ff 
$strff 
;ff 
}gg 	
elsehh 
{ii 	
datall 
=ll 
nullll 
;ll 
}mm 	
ifnn 

(nn 
PrivateReturnsTruenn 
(nn 
)nn  
)nn  !
{oo 	
ifpp 
(pp 
datapp 
!=pp 
nullpp 
)pp 
{qq 

HttpCookierr 

cookieSinkrr %
=rr& '
newrr( +

HttpCookierr, 6
(rr6 7
$strrr7 =
,rr= >
datarr? C
)rrC D
;rrD E
resptt 
.tt 
AppendCookiett !
(tt! "

cookieSinktt" ,
)tt, -
;tt- .
}uu 
}vv 	
}ww 
privatezz 
voidzz 
GoodB2G1zz 
(zz 
HttpRequestzz %
reqzz& )
,zz) *
HttpResponsezz+ 7
respzz8 <
)zz< =
{{{ 
string|| 
data|| 
;|| 
if}} 

(}} 
PrivateReturnsTrue}} 
(}} 
)}}  
)}}  !
{~~ 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
   	
else
¡¡ 
{
¢¢ 	
data
¥¥ 
=
¥¥ 
null
¥¥ 
;
¥¥ 
}
¦¦ 	
if
§§ 

(
§§  
PrivateReturnsTrue
§§ 
(
§§ 
)
§§  
)
§§  !
{
¨¨ 	
if
©© 
(
©© 
data
©© 
!=
©© 
null
©© 
)
©© 
{
ªª 

HttpCookie
«« 

cookieSink
«« %
=
««& '
new
««( +

HttpCookie
««, 6
(
««6 7
$str
««7 =
,
««= >
HttpUtility
««? J
.
««J K
	UrlEncode
««K T
(
««T U
data
««U Y
,
««Y Z
Encoding
««[ c
.
««c d
UTF8
««d h
)
««h i
)
««i j
;
««j k
resp
­­ 
.
­­ 
AppendCookie
­­ !
(
­­! "

cookieSink
­­" ,
)
­­, -
;
­­- .
}
®® 
}
¯¯ 	
}
°° 
public
²² 

override
²² 
void
²² 
Good
²² 
(
²² 
HttpRequest
²² )
req
²²* -
,
²²- .
HttpResponse
²²/ ;
resp
²²< @
)
²²@ A
{
³³ 
GoodG2B1
´´ 
(
´´ 
req
´´ 
,
´´ 
resp
´´ 
)
´´ 
;
´´ 
GoodG2B2
µµ 
(
µµ 
req
µµ 
,
µµ 
resp
µµ 
)
µµ 
;
µµ 
GoodB2G1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodB2G2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
}
¸¸ 
}ºº 
}»» A
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_09 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,,  
STATIC_READONLY_TRUE,, #
),,# $
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private99 
void99 
GoodG2B199 
(99 
HttpRequest99 %
req99& )
,99) *
HttpResponse99+ 7
resp998 <
)99< =
{:: 
string;; 
data;; 
;;; 
if<< 

(<< 
IO<< 
.<< !
STATIC_READONLY_FALSE<< $
)<<$ %
{== 	
data@@ 
=@@ 
null@@ 
;@@ 
}AA 	
elseBB 
{CC 	
dataEE 
=EE 
$strEE 
;EE 
}FF 	
ifGG 

(GG 
IOGG 
.GG  
STATIC_READONLY_TRUEGG #
)GG# $
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 

HttpCookieKK 

cookieSinkKK %
=KK& '
newKK( +

HttpCookieKK, 6
(KK6 7
$strKK7 =
,KK= >
dataKK? C
)KKC D
;KKD E
respMM 
.MM 
AppendCookieMM !
(MM! "

cookieSinkMM" ,
)MM, -
;MM- .
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
IOVV 
.VV  
STATIC_READONLY_TRUEVV #
)VV# $
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
null__ 
;__ 
}`` 	
ifaa 

(aa 
IOaa 
.aa  
STATIC_READONLY_TRUEaa #
)aa# $
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
dataee? C
)eeC D
;eeD E
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2G1mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
IOpp 
.pp  
STATIC_READONLY_TRUEpp #
)pp# $
{qq 	
datass 
=ss 
reqss 
.ss 
Paramsss 
.ss 
Getss !
(ss! "
$strss" (
)ss( )
;ss) *
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
IO{{ 
.{{ !
STATIC_READONLY_FALSE{{ $
){{$ %
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
$str~~ /
)~~/ 0
;~~0 1
} 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
   
.
   
AppendCookie
   !
(
  ! "

cookieSink
  " ,
)
  , -
;
  - .
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
¦¦ 
GoodG2B1
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
GoodG2B2
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodB2G2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
}
«« 
}­­ 
}®® ·@
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_10 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,, 

staticTrue,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private99 
void99 
GoodG2B199 
(99 
HttpRequest99 %
req99& )
,99) *
HttpResponse99+ 7
resp998 <
)99< =
{:: 
string;; 
data;; 
;;; 
if<< 

(<< 
IO<< 
.<< 
staticFalse<< 
)<< 
{== 	
data@@ 
=@@ 
null@@ 
;@@ 
}AA 	
elseBB 
{CC 	
dataEE 
=EE 
$strEE 
;EE 
}FF 	
ifGG 

(GG 
IOGG 
.GG 

staticTrueGG 
)GG 
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 

HttpCookieKK 

cookieSinkKK %
=KK& '
newKK( +

HttpCookieKK, 6
(KK6 7
$strKK7 =
,KK= >
dataKK? C
)KKC D
;KKD E
respMM 
.MM 
AppendCookieMM !
(MM! "

cookieSinkMM" ,
)MM, -
;MM- .
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
IOVV 
.VV 

staticTrueVV 
)VV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
null__ 
;__ 
}`` 	
ifaa 

(aa 
IOaa 
.aa 

staticTrueaa 
)aa 
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
dataee? C
)eeC D
;eeD E
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2G1mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
IOpp 
.pp 

staticTruepp 
)pp 
{qq 	
datass 
=ss 
reqss 
.ss 
Paramsss 
.ss 
Getss !
(ss! "
$strss" (
)ss( )
;ss) *
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
IO{{ 
.{{ 
staticFalse{{ 
){{ 
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
$str~~ /
)~~/ 0
;~~0 1
} 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
   
.
   
AppendCookie
   !
(
  ! "

cookieSink
  " ,
)
  , -
;
  - .
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
¦¦ 
GoodG2B1
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
GoodG2B2
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodB2G2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
}
«« 
}­­ 
}®® ±C
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_11 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,,
 
IO,, 
.,, 
StaticReturnsTrue,, 
(,,  
),,  !
),,! "
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private99 
void99 
GoodG2B199 
(99 
HttpRequest99 %
req99& )
,99) *
HttpResponse99+ 7
resp998 <
)99< =
{:: 
string;; 
data;; 
;;; 
if<< 

(<< 
IO<< 
.<< 
StaticReturnsFalse<< !
(<<! "
)<<" #
)<<# $
{== 	
data@@ 
=@@ 
null@@ 
;@@ 
}AA 	
elseBB 
{CC 	
dataEE 
=EE 
$strEE 
;EE 
}FF 	
ifGG 

(GG 
IOGG 
.GG 
StaticReturnsTrueGG  
(GG  !
)GG! "
)GG" #
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 

HttpCookieKK 

cookieSinkKK %
=KK& '
newKK( +

HttpCookieKK, 6
(KK6 7
$strKK7 =
,KK= >
dataKK? C
)KKC D
;KKD E
respMM 
.MM 
AppendCookieMM !
(MM! "

cookieSinkMM" ,
)MM, -
;MM- .
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
IOVV 
.VV 
StaticReturnsTrueVV  
(VV  !
)VV! "
)VV" #
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
null__ 
;__ 
}`` 	
ifaa 

(aa 
IOaa 
.aa 
StaticReturnsTrueaa  
(aa  !
)aa! "
)aa" #
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
dataee? C
)eeC D
;eeD E
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2G1mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
IOpp 
.pp 
StaticReturnsTruepp  
(pp  !
)pp! "
)pp" #
{qq 	
datass 
=ss 
reqss 
.ss 
Paramsss 
.ss 
Getss !
(ss! "
$strss" (
)ss( )
;ss) *
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
IO{{ 
.{{ 
StaticReturnsFalse{{ !
({{! "
){{" #
){{# $
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
$str~~ /
)~~/ 0
;~~0 1
} 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
   
.
   
AppendCookie
   !
(
  ! "

cookieSink
  " ,
)
  , -
;
  - .
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
¦¦ 
GoodG2B1
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
GoodG2B2
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodB2G2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
}
«« 
}­­ 
}®® 8
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_12 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!!
 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! &
(!!& '
)!!' (
)!!( )
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data)) 
=)) 
$str)) 
;)) 
}** 	
if++ 

(++
 
IO++ 
.++ $
StaticReturnsTrueOrFalse++ &
(++& '
)++' (
)++( )
{,, 	
if-- 
(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 

HttpCookie// 

cookieSink// %
=//& '
new//( +

HttpCookie//, 6
(//6 7
$str//7 =
,//= >
data//? C
)//C D
;//D E
resp11 
.11 
AppendCookie11 !
(11! "

cookieSink11" ,
)11, -
;11- .
}22 
}33 	
else44 
{55 	
if66 
(66 
data66 
!=66 
null66 
)66 
{77 

HttpCookie88 

cookieSink88 %
=88& '
new88( +

HttpCookie88, 6
(886 7
$str887 =
,88= >
HttpUtility88? J
.88J K
	UrlEncode88K T
(88T U
data88U Y
,88Y Z
Encoding88[ c
.88c d
UTF888d h
)88h i
)88i j
;88j k
resp:: 
.:: 
AppendCookie:: !
(::! "

cookieSink::" ,
)::, -
;::- .
};; 
}<< 	
}== 
privateBB 
voidBB 
GoodG2BBB 
(BB 
HttpRequestBB $
reqBB% (
,BB( )
HttpResponseBB* 6
respBB7 ;
)BB; <
{CC 
stringDD 
dataDD 
;DD 
ifEE 

(EE
 
IOEE 
.EE $
StaticReturnsTrueOrFalseEE &
(EE& '
)EE' (
)EE( )
{FF 	
dataHH 
=HH 
$strHH 
;HH 
}II 	
elseJJ 
{KK 	
dataMM 
=MM 
$strMM 
;MM 
}NN 	
ifOO 

(OO
 
IOOO 
.OO $
StaticReturnsTrueOrFalseOO &
(OO& '
)OO' (
)OO( )
{PP 	
ifQQ 
(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 

HttpCookieSS 

cookieSinkSS %
=SS& '
newSS( +

HttpCookieSS, 6
(SS6 7
$strSS7 =
,SS= >
dataSS? C
)SSC D
;SSD E
respUU 
.UU 
AppendCookieUU !
(UU! "

cookieSinkUU" ,
)UU, -
;UU- .
}VV 
}WW 	
elseXX 
{YY 	
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 

HttpCookie\\ 

cookieSink\\ %
=\\& '
new\\( +

HttpCookie\\, 6
(\\6 7
$str\\7 =
,\\= >
data\\? C
)\\C D
;\\D E
resp^^ 
.^^ 
AppendCookie^^ !
(^^! "

cookieSink^^" ,
)^^, -
;^^- .
}__ 
}`` 	
}aa 
privateee 
voidee 
GoodB2Gee 
(ee 
HttpRequestee $
reqee% (
,ee( )
HttpResponseee* 6
respee7 ;
)ee; <
{ff 
stringgg 
datagg 
;gg 
ifhh 

(hh
 
IOhh 
.hh $
StaticReturnsTrueOrFalsehh &
(hh& '
)hh' (
)hh( )
{ii 	
datakk 
=kk 
reqkk 
.kk 
Paramskk 
.kk 
Getkk !
(kk! "
$strkk" (
)kk( )
;kk) *
}ll 	
elsemm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
ifrr 

(rr
 
IOrr 
.rr $
StaticReturnsTrueOrFalserr &
(rr& '
)rr' (
)rr( )
{ss 	
iftt 
(tt 
datatt 
!=tt 
nulltt 
)tt 
{uu 

HttpCookievv 

cookieSinkvv %
=vv& '
newvv( +

HttpCookievv, 6
(vv6 7
$strvv7 =
,vv= >
HttpUtilityvv? J
.vvJ K
	UrlEncodevvK T
(vvT U
datavvU Y
,vvY Z
Encodingvv[ c
.vvc d
UTF8vvd h
)vvh i
)vvi j
;vvj k
respxx 
.xx 
AppendCookiexx !
(xx! "

cookieSinkxx" ,
)xx, -
;xx- .
}yy 
}zz 	
else{{ 
{|| 	
if}} 
(}} 
data}} 
!=}} 
null}} 
)}} 
{~~ 

HttpCookie 

cookieSink %
=& '
new( +

HttpCookie, 6
(6 7
$str7 =
,= >
HttpUtility? J
.J K
	UrlEncodeK T
(T U
dataU Y
,Y Z
Encoding[ c
.c d
UTF8d h
)h i
)i j
;j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} õC
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_13 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!# %
$num!!% &
)!!& '
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,,  
STATIC_READONLY_FIVE,, #
==,,# %
$num,,% &
),,& '
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private99 
void99 
GoodG2B199 
(99 
HttpRequest99 %
req99& )
,99) *
HttpResponse99+ 7
resp998 <
)99< =
{:: 
string;; 
data;; 
;;; 
if<< 

(<< 
IO<< 
.<<  
STATIC_READONLY_FIVE<< #
!=<<# %
$num<<% &
)<<& '
{== 	
data@@ 
=@@ 
null@@ 
;@@ 
}AA 	
elseBB 
{CC 	
dataEE 
=EE 
$strEE 
;EE 
}FF 	
ifGG 

(GG 
IOGG 
.GG  
STATIC_READONLY_FIVEGG #
==GG# %
$numGG% &
)GG& '
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 

HttpCookieKK 

cookieSinkKK %
=KK& '
newKK( +

HttpCookieKK, 6
(KK6 7
$strKK7 =
,KK= >
dataKK? C
)KKC D
;KKD E
respMM 
.MM 
AppendCookieMM !
(MM! "

cookieSinkMM" ,
)MM, -
;MM- .
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
IOVV 
.VV  
STATIC_READONLY_FIVEVV #
==VV# %
$numVV% &
)VV& '
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
null__ 
;__ 
}`` 	
ifaa 

(aa 
IOaa 
.aa  
STATIC_READONLY_FIVEaa #
==aa# %
$numaa% &
)aa& '
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
dataee? C
)eeC D
;eeD E
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2G1mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
IOpp 
.pp  
STATIC_READONLY_FIVEpp #
==pp# %
$numpp% &
)pp& '
{qq 	
datass 
=ss 
reqss 
.ss 
Paramsss 
.ss 
Getss !
(ss! "
$strss" (
)ss( )
;ss) *
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
IO{{ 
.{{  
STATIC_READONLY_FIVE{{ #
!={{# %
$num{{% &
){{& '
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
$str~~ /
)~~/ 0
;~~0 1
} 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
   
.
   
AppendCookie
   !
(
  ! "

cookieSink
  " ,
)
  , -
;
  - .
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
¦¦ 
GoodG2B1
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
GoodG2B2
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodB2G2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
}
«« 
}­­ 
}®® C
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_14 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,, 

staticFive,, 
==,, 
$num,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private99 
void99 
GoodG2B199 
(99 
HttpRequest99 %
req99& )
,99) *
HttpResponse99+ 7
resp998 <
)99< =
{:: 
string;; 
data;; 
;;; 
if<< 

(<< 
IO<< 
.<< 

staticFive<< 
!=<< 
$num<< 
)<< 
{== 	
data@@ 
=@@ 
null@@ 
;@@ 
}AA 	
elseBB 
{CC 	
dataEE 
=EE 
$strEE 
;EE 
}FF 	
ifGG 

(GG 
IOGG 
.GG 

staticFiveGG 
==GG 
$numGG 
)GG 
{HH 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 

HttpCookieKK 

cookieSinkKK %
=KK& '
newKK( +

HttpCookieKK, 6
(KK6 7
$strKK7 =
,KK= >
dataKK? C
)KKC D
;KKD E
respMM 
.MM 
AppendCookieMM !
(MM! "

cookieSinkMM" ,
)MM, -
;MM- .
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
ifVV 

(VV 
IOVV 
.VV 

staticFiveVV 
==VV 
$numVV 
)VV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
null__ 
;__ 
}`` 	
ifaa 

(aa 
IOaa 
.aa 

staticFiveaa 
==aa 
$numaa 
)aa 
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
dataee? C
)eeC D
;eeD E
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodB2G1mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
ifpp 

(pp 
IOpp 
.pp 

staticFivepp 
==pp 
$numpp 
)pp 
{qq 	
datass 
=ss 
reqss 
.ss 
Paramsss 
.ss 
Getss !
(ss! "
$strss" (
)ss( )
;ss) *
}tt 	
elseuu 
{vv 	
datayy 
=yy 
nullyy 
;yy 
}zz 	
if{{ 

({{ 
IO{{ 
.{{ 

staticFive{{ 
!={{ 
$num{{ 
){{ 
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
$str~~ /
)~~/ 0
;~~0 1
} 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
   
.
   
AppendCookie
   !
(
  ! "

cookieSink
  " ,
)
  , -
;
  - .
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
¦¦ 
GoodG2B1
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
GoodG2B2
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodB2G2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
}
«« 
}­­ 
}®® ÏL
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_15 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" (
)%%( )
;%%) *
break&& 
;&& 
default'' 
:'' 
data** 
=** 
null** 
;** 
break++ 
;++ 
},, 	
switch-- 
(-- 
$num-- 
)-- 
{.. 	
case// 
$num// 
:// 
if00 
(00 
data00 
!=00 
null00 
)00 
{11 

HttpCookie22 

cookieSink22 %
=22& '
new22( +

HttpCookie22, 6
(226 7
$str227 =
,22= >
data22? C
)22C D
;22D E
resp44 
.44 
AppendCookie44 !
(44! "

cookieSink44" ,
)44, -
;44- .
}55 
break66 
;66 
default77 
:77 
IO99 
.99 
	WriteLine99 
(99 
$str99 /
)99/ 0
;990 1
break:: 
;:: 
};; 	
}<< 
private@@ 
void@@ 
GoodG2B1@@ 
(@@ 
HttpRequest@@ %
req@@& )
,@@) *
HttpResponse@@+ 7
resp@@8 <
)@@< =
{AA 
stringBB 
dataBB 
;BB 
switchCC 
(CC 
$numCC 
)CC 
{DD 	
caseEE 
$numEE 
:EE 
dataHH 
=HH 
nullHH 
;HH 
breakII 
;II 
defaultJJ 
:JJ 
dataLL 
=LL 
$strLL 
;LL 
breakMM 
;MM 
}NN 	
switchOO 
(OO 
$numOO 
)OO 
{PP 	
caseQQ 
$numQQ 
:QQ 
ifRR 
(RR 
dataRR 
!=RR 
nullRR 
)RR 
{SS 

HttpCookieTT 

cookieSinkTT %
=TT& '
newTT( +

HttpCookieTT, 6
(TT6 7
$strTT7 =
,TT= >
dataTT? C
)TTC D
;TTD E
respVV 
.VV 
AppendCookieVV !
(VV! "

cookieSinkVV" ,
)VV, -
;VV- .
}WW 
breakXX 
;XX 
defaultYY 
:YY 
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
$str[[ /
)[[/ 0
;[[0 1
break\\ 
;\\ 
}]] 	
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
HttpRequestaa %
reqaa& )
,aa) *
HttpResponseaa+ 7
respaa8 <
)aa< =
{bb 
stringcc 
datacc 
;cc 
switchdd 
(dd 
$numdd 
)dd 
{ee 	
caseff 
$numff 
:ff 
datahh 
=hh 
$strhh 
;hh 
breakii 
;ii 
defaultjj 
:jj 
datamm 
=mm 
nullmm 
;mm 
breaknn 
;nn 
}oo 	
switchpp 
(pp 
$numpp 
)pp 
{qq 	
caserr 
$numrr 
:rr 
ifss 
(ss 
datass 
!=ss 
nullss 
)ss 
{tt 

HttpCookieuu 

cookieSinkuu %
=uu& '
newuu( +

HttpCookieuu, 6
(uu6 7
$struu7 =
,uu= >
datauu? C
)uuC D
;uuD E
respww 
.ww 
AppendCookieww !
(ww! "

cookieSinkww" ,
)ww, -
;ww- .
}xx 
breakyy 
;yy 
defaultzz 
:zz 
IO|| 
.|| 
	WriteLine|| 
(|| 
$str|| /
)||/ 0
;||0 1
break}} 
;}} 
}~~ 	
} 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
break
 
;
 
default
 
:
 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
default
 
:
 
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
break
 
;
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
switch
¦¦ 
(
¦¦ 
$num
¦¦ 
)
¦¦ 
{
§§ 	
case
¨¨ 
$num
¨¨ 
:
¨¨ 
data
ªª 
=
ªª 
req
ªª 
.
ªª 
Params
ªª 
.
ªª 
Get
ªª !
(
ªª! "
$str
ªª" (
)
ªª( )
;
ªª) *
break
«« 
;
«« 
default
¬¬ 
:
¬¬ 
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
break
°° 
;
°° 
}
±± 	
switch
²² 
(
²² 
$num
²² 
)
²² 
{
³³ 	
case
´´ 
$num
´´ 
:
´´ 
if
µµ 
(
µµ 
data
µµ 
!=
µµ 
null
µµ 
)
µµ 
{
¶¶ 

HttpCookie
·· 

cookieSink
·· %
=
··& '
new
··( +

HttpCookie
··, 6
(
··6 7
$str
··7 =
,
··= >
HttpUtility
··? J
.
··J K
	UrlEncode
··K T
(
··T U
data
··U Y
,
··Y Z
Encoding
··[ c
.
··c d
UTF8
··d h
)
··h i
)
··i j
;
··j k
resp
¹¹ 
.
¹¹ 
AppendCookie
¹¹ !
(
¹¹! "

cookieSink
¹¹" ,
)
¹¹, -
;
¹¹- .
}
ºº 
break
»» 
;
»» 
default
¼¼ 
:
¼¼ 
IO
¾¾ 
.
¾¾ 
	WriteLine
¾¾ 
(
¾¾ 
$str
¾¾ /
)
¾¾/ 0
;
¾¾0 1
break
¿¿ 
;
¿¿ 
}
ÀÀ 	
}
ÁÁ 
public
ÃÃ 

override
ÃÃ 
void
ÃÃ 
Good
ÃÃ 
(
ÃÃ 
HttpRequest
ÃÃ )
req
ÃÃ* -
,
ÃÃ- .
HttpResponse
ÃÃ/ ;
resp
ÃÃ< @
)
ÃÃ@ A
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
req
ÅÅ 
,
ÅÅ 
resp
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodB2G1
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G2
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
}
ÉÉ 
}ËË 
}ÌÌ Á#
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_16 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
break%% 
;%% 
}&& 	
while'' 
('' 
true'' 
)'' 
{(( 	
if)) 
()) 
data)) 
!=)) 
null)) 
))) 
{** 

HttpCookie++ 

cookieSink++ %
=++& '
new++( +

HttpCookie++, 6
(++6 7
$str++7 =
,++= >
data++? C
)++C D
;++D E
resp-- 
.-- 
AppendCookie-- !
(--! "

cookieSink--" ,
)--, -
;--- .
}.. 
break// 
;// 
}00 	
}11 
private55 
void55 
GoodG2B55 
(55 
HttpRequest55 $
req55% (
,55( )
HttpResponse55* 6
resp557 ;
)55; <
{66 
string77 
data77 
;77 
while88 
(88 
true88 
)88 
{99 	
data;; 
=;; 
$str;; 
;;; 
break<< 
;<< 
}== 	
while>> 
(>> 
true>> 
)>> 
{?? 	
if@@ 
(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 

HttpCookieBB 

cookieSinkBB %
=BB& '
newBB( +

HttpCookieBB, 6
(BB6 7
$strBB7 =
,BB= >
dataBB? C
)BBC D
;BBD E
respDD 
.DD 
AppendCookieDD !
(DD! "

cookieSinkDD" ,
)DD, -
;DD- .
}EE 
breakFF 
;FF 
}GG 	
}HH 
privateKK 
voidKK 
GoodB2GKK 
(KK 
HttpRequestKK $
reqKK% (
,KK( )
HttpResponseKK* 6
respKK7 ;
)KK; <
{LL 
stringMM 
dataMM 
;MM 
whileNN 
(NN 
trueNN 
)NN 
{OO 	
dataQQ 
=QQ 
reqQQ 
.QQ 
ParamsQQ 
.QQ 
GetQQ !
(QQ! "
$strQQ" (
)QQ( )
;QQ) *
breakRR 
;RR 
}SS 	
whileTT 
(TT 
trueTT 
)TT 
{UU 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 

HttpCookieXX 

cookieSinkXX %
=XX& '
newXX( +

HttpCookieXX, 6
(XX6 7
$strXX7 =
,XX= >
HttpUtilityXX? J
.XXJ K
	UrlEncodeXXK T
(XXT U
dataXXU Y
,XXY Z
EncodingXX[ c
.XXc d
UTF8XXd h
)XXh i
)XXi j
;XXj k
respZZ 
.ZZ 
AppendCookieZZ !
(ZZ! "

cookieSinkZZ" ,
)ZZ, -
;ZZ- .
}[[ 
break\\ 
;\\ 
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
HttpRequest`` )
req``* -
,``- .
HttpResponse``/ ;
resp``< @
)``@ A
{aa 
GoodG2Bbb 
(bb 
reqbb 
,bb 
respbb 
)bb 
;bb 
GoodB2Gcc 
(cc 
reqcc 
,cc 
respcc 
)cc 
;cc 
}dd 
}ff 
}gg  #
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_17 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data&& 
=&& 
req&& 
.&& 
Params&& 
.&& 
Get&& 
(&& 
$str&& $
)&&$ %
;&&% &
for'' 
('' 
int'' 
j'' 
='' 
$num'' 
;'' 
j'' 
<'' 
$num'' 
;'' 
j''  
++''  "
)''" #
{(( 	
if)) 
()) 
data)) 
!=)) 
null)) 
))) 
{** 

HttpCookie++ 

cookieSink++ %
=++& '
new++( +

HttpCookie++, 6
(++6 7
$str++7 =
,++= >
data++? C
)++C D
;++D E
resp-- 
.-- 
AppendCookie-- !
(--! "

cookieSink--" ,
)--, -
;--- .
}.. 
}// 	
}00 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 
for99 
(99 
int99 
j99 
=99 
$num99 
;99 
j99 
<99 
$num99 
;99 
j99  
++99  "
)99" #
{:: 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 

HttpCookie== 

cookieSink== %
===& '
new==( +

HttpCookie==, 6
(==6 7
$str==7 =
,=== >
data==? C
)==C D
;==D E
resp?? 
.?? 
AppendCookie?? !
(??! "

cookieSink??" ,
)??, -
;??- .
}@@ 
}AA 	
}BB 
privateEE 
voidEE 
GoodB2GEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataGG 
;GG 
dataII 
=II 
reqII 
.II 
ParamsII 
.II 
GetII 
(II 
$strII $
)II$ %
;II% &
forJJ 
(JJ 
intJJ 
kJJ 
=JJ 
$numJJ 
;JJ 
kJJ 
<JJ 
$numJJ 
;JJ 
kJJ  
++JJ  "
)JJ" #
{KK 	
ifLL 
(LL 
dataLL 
!=LL 
nullLL 
)LL 
{MM 

HttpCookieNN 

cookieSinkNN %
=NN& '
newNN( +

HttpCookieNN, 6
(NN6 7
$strNN7 =
,NN= >
HttpUtilityNN? J
.NNJ K
	UrlEncodeNNK T
(NNT U
dataNNU Y
,NNY Z
EncodingNN[ c
.NNc d
UTF8NNd h
)NNh i
)NNi j
;NNj k
respPP 
.PP 
AppendCookiePP !
(PP! "

cookieSinkPP" ,
)PP, -
;PP- .
}QQ 
}RR 	
}SS 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
HttpRequestUU )
reqUU* -
,UU- .
HttpResponseUU/ ;
respUU< @
)UU@ A
{VV 
GoodG2BWW 
(WW 
reqWW 
,WW 
respWW 
)WW 
;WW 
GoodB2GXX 
(XX 
reqXX 
,XX 
respXX 
)XX 
;XX 
}YY 
}[[ 
}\\ ²?
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_21 E
:F G
AbstractTestCaseWebH [
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &

badPrivate&& 
=&& 
true&& 
;&& 
BadSink'' 
('' 
data'' 
,'' 
req'' 
,'' 
resp''  
)''  !
;''! "
}(( 
private** 
void** 
BadSink** 
(** 
string** 
data**  $
,**% &
HttpRequest**' 2
req**3 6
,**6 7
HttpResponse**8 D
resp**E I
)**I J
{++ 
if,, 

(,, 

badPrivate,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 

HttpCookie00 

cookieSink00 %
=00& '
new00( +

HttpCookie00, 6
(006 7
$str007 =
,00= >
data00? C
)00C D
;00D E
resp22 
.22 
AppendCookie22 !
(22! "

cookieSink22" ,
)22, -
;22- .
}33 
}44 	
}55 
private88 
bool88 
goodB2G1Private88  
=88! "
false88# (
;88( )
private99 
bool99 
goodB2G2Private99  
=99! "
false99# (
;99( )
private:: 
bool:: 
goodG2BPrivate:: 
=::  !
false::" '
;::' (
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodB2G1>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G2?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodB2G1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
dataHH 
=HH 
reqHH 
.HH 
ParamsHH 
.HH 
GetHH 
(HH 
$strHH $
)HH$ %
;HH% &
goodB2G1PrivateII 
=II 
falseII 
;II  
GoodB2G1SinkJJ 
(JJ 
dataJJ 
,JJ 
reqJJ 
,JJ  
respJJ! %
)JJ% &
;JJ& '
}KK 
privateMM 
voidMM 
GoodB2G1SinkMM 
(MM 
stringMM $
dataMM% )
,MM* +
HttpRequestMM, 7
reqMM8 ;
,MM; <
HttpResponseMM= I
respMMJ N
)MMN O
{NN 
ifOO 

(OO 
goodB2G1PrivateOO 
)OO 
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
$strRR /
)RR/ 0
;RR0 1
}SS 	
elseTT 
{UU 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 

HttpCookieXX 

cookieSinkXX %
=XX& '
newXX( +

HttpCookieXX, 6
(XX6 7
$strXX7 =
,XX= >
HttpUtilityXX? J
.XXJ K
	UrlEncodeXXK T
(XXT U
dataXXU Y
,XXY Z
EncodingXX[ c
.XXc d
UTF8XXd h
)XXh i
)XXi j
;XXj k
respZZ 
.ZZ 
AppendCookieZZ !
(ZZ! "

cookieSinkZZ" ,
)ZZ, -
;ZZ- .
}[[ 
}\\ 	
}]] 
private`` 
void`` 
GoodB2G2`` 
(`` 
HttpRequest`` %
req``& )
,``) *
HttpResponse``+ 7
resp``8 <
)``< =
{aa 
stringbb 
databb 
;bb 
datadd 
=dd 
reqdd 
.dd 
Paramsdd 
.dd 
Getdd 
(dd 
$strdd $
)dd$ %
;dd% &
goodB2G2Privateee 
=ee 
trueee 
;ee 
GoodB2G2Sinkff 
(ff 
dataff 
,ff 
reqff 
,ff  
respff! %
)ff% &
;ff& '
}gg 
privateii 
voidii 
GoodB2G2Sinkii 
(ii 
stringii $
dataii% )
,ii* +
HttpRequestii, 7
reqii8 ;
,ii; <
HttpResponseii= I
respiiJ N
)iiN O
{jj 
ifkk 

(kk 
goodB2G2Privatekk 
)kk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 

HttpCookieoo 

cookieSinkoo %
=oo& '
newoo( +

HttpCookieoo, 6
(oo6 7
$stroo7 =
,oo= >
HttpUtilityoo? J
.ooJ K
	UrlEncodeooK T
(ooT U
dataooU Y
,ooY Z
Encodingoo[ c
.ooc d
UTF8ood h
)ooh i
)ooi j
;ooj k
respqq 
.qq 
AppendCookieqq !
(qq! "

cookieSinkqq" ,
)qq, -
;qq- .
}rr 
}ss 	
}tt 
privateww 
voidww 
GoodG2Bww 
(ww 
HttpRequestww $
reqww% (
,ww( )
HttpResponseww* 6
respww7 ;
)ww; <
{xx 
stringyy 
datayy 
;yy 
data{{ 
={{ 
$str{{ 
;{{ 
goodG2BPrivate|| 
=|| 
true|| 
;|| 
GoodG2BSink}} 
(}} 
data}} 
,}} 
req}} 
,}} 
resp}}  $
)}}$ %
;}}% &
}~~ 
private
 
void
 
GoodG2BSink
 
(
 
string
 #
data
$ (
,
) *
HttpRequest
+ 6
req
7 :
,
: ;
HttpResponse
< H
resp
I M
)
M N
{
 
if
 

(
 
goodG2BPrivate
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
data
? C
)
C D
;
D E
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
} 
} ¿%
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22a F
:G H
AbstractTestCaseWebI \
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
=## 
null## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &
badPublicStatic&& 
=&& 
true&& 
;&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22b'' H
.''H I
BadSink''I P
(''P Q
data''Q U
,''V W
req''X [
,''[ \
resp''] a
)''a b
;''b c
}(( 
public++ 

static++ 
bool++  
goodB2G1PublicStatic++ +
=++, -
false++. 3
;++3 4
public,, 

static,, 
bool,,  
goodB2G2PublicStatic,, +
=,,, -
false,,. 3
;,,3 4
public-- 

static-- 
bool-- 
goodG2BPublicStatic-- *
=--+ ,
false--- 2
;--2 3
public// 

override// 
void// 
Good// 
(// 
HttpRequest// )
req//* -
,//- .
HttpResponse/// ;
resp//< @
)//@ A
{00 
GoodB2G111 
(11 
req11 
,11 
resp11 
)11 
;11 
GoodB2G222 
(22 
req22 
,22 
resp22 
)22 
;22 
GoodG2B33 
(33 
req33 
,33 
resp33 
)33 
;33 
}44 
private77 
void77 
GoodB2G177 
(77 
HttpRequest77 %
req77& )
,77) *
HttpResponse77+ 7
resp778 <
)77< =
{88 
string99 
data99 
=99 
null99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% & 
goodB2G1PublicStatic<< 
=<< 
false<< $
;<<$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22b== H
.==H I
GoodB2G1Sink==I U
(==U V
data==V Z
,==[ \
req==] `
,==` a
resp==b f
)==f g
;==g h
}>> 
privateAA 
voidAA 
GoodB2G2AA 
(AA 
HttpRequestAA %
reqAA& )
,AA) *
HttpResponseAA+ 7
respAA8 <
)AA< =
{BB 
stringCC 
dataCC 
=CC 
nullCC 
;CC 
dataEE 
=EE 
reqEE 
.EE 
ParamsEE 
.EE 
GetEE 
(EE 
$strEE $
)EE$ %
;EE% & 
goodB2G2PublicStaticFF 
=FF 
trueFF #
;FF# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22bGG H
.GGH I
GoodB2G2SinkGGI U
(GGU V
dataGGV Z
,GG[ \
reqGG] `
,GG` a
respGGb f
)GGf g
;GGg h
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
HttpRequestKK $
reqKK% (
,KK( )
HttpResponseKK* 6
respKK7 ;
)KK; <
{LL 
stringMM 
dataMM 
=MM 
nullMM 
;MM 
dataOO 
=OO 
$strOO 
;OO 
goodG2BPublicStaticPP 
=PP 
truePP "
;PP" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22bQQ H
.QQH I
GoodG2BSinkQQI T
(QQT U
dataQQU Y
,QQZ [
reqQQ\ _
,QQ_ `
respQQa e
)QQe f
;QQf g
}RR 
}TT 
}UU ´'
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22a L
.L M
badPublicStaticM \
)\ ]
{   	
if!! 
(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 

HttpCookie## 

cookieSink## %
=##& '
new##( +

HttpCookie##, 6
(##6 7
$str##7 =
,##= >
data##? C
)##C D
;##D E
resp%% 
.%% 
AppendCookie%% !
(%%! "

cookieSink%%" ,
)%%, -
;%%- .
}&& 
}'' 	
else(( 
{)) 	
data,, 
=,, 
null,, 
;,, 
}-- 	
}.. 
public33 

static33 
void33 
GoodB2G1Sink33 #
(33# $
string33$ *
data33+ /
,330 1
HttpRequest332 =
req33> A
,33A B
HttpResponse33C O
resp33P T
)33T U
{44 
if55 

(55 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22a55 L
.55L M 
goodB2G1PublicStatic55M a
)55a b
{66 	
data99 
=99 
null99 
;99 
}:: 	
else;; 
{<< 	
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 

HttpCookie?? 

cookieSink?? %
=??& '
new??( +

HttpCookie??, 6
(??6 7
$str??7 =
,??= >
HttpUtility??? J
.??J K
	UrlEncode??K T
(??T U
data??U Y
,??Y Z
Encoding??[ c
.??c d
UTF8??d h
)??h i
)??i j
;??j k
respAA 
.AA 
AppendCookieAA !
(AA! "

cookieSinkAA" ,
)AA, -
;AA- .
}BB 
}CC 	
}DD 
publicGG 

staticGG 
voidGG 
GoodB2G2SinkGG #
(GG# $
stringGG$ *
dataGG+ /
,GG0 1
HttpRequestGG2 =
reqGG> A
,GGA B
HttpResponseGGC O
respGGP T
)GGT U
{HH 
ifII 

(II L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22aII L
.IIL M 
goodB2G2PublicStaticIIM a
)IIa b
{JJ 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 

HttpCookieMM 

cookieSinkMM %
=MM& '
newMM( +

HttpCookieMM, 6
(MM6 7
$strMM7 =
,MM= >
HttpUtilityMM? J
.MMJ K
	UrlEncodeMMK T
(MMT U
dataMMU Y
,MMY Z
EncodingMM[ c
.MMc d
UTF8MMd h
)MMh i
)MMi j
;MMj k
respOO 
.OO 
AppendCookieOO !
(OO! "

cookieSinkOO" ,
)OO, -
;OO- .
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
nullVV 
;VV 
}WW 	
}XX 
public[[ 

static[[ 
void[[ 
GoodG2BSink[[ "
([[" #
string[[# )
data[[* .
,[[/ 0
HttpRequest[[1 <
req[[= @
,[[@ A
HttpResponse[[B N
resp[[O S
)[[S T
{\\ 
if]] 

(]] L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_22a]] L
.]]L M
goodG2BPublicStatic]]M `
)]]` a
{^^ 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 

HttpCookieaa 

cookieSinkaa %
=aa& '
newaa( +

HttpCookieaa, 6
(aa6 7
$straa7 =
,aa= >
dataaa? C
)aaC D
;aaD E
respcc 
.cc 
AppendCookiecc !
(cc! "

cookieSinkcc" ,
)cc, -
;cc- .
}dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
}ll 
}nn 
}oo î#
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_31 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
dataCopy   
;   
{!! 	
string"" 
data"" 
;"" 
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
dataCopy%% 
=%% 
data%% 
;%% 
}&& 	
{'' 	
string(( 
data(( 
=(( 
dataCopy(( "
;((" #
if)) 
()) 
data)) 
!=)) 
null)) 
))) 
{** 

HttpCookie++ 

cookieSink++ %
=++& '
new++( +

HttpCookie++, 6
(++6 7
$str++7 =
,++= >
data++? C
)++C D
;++D E
resp-- 
.-- 
AppendCookie-- !
(--! "

cookieSink--" ,
)--, -
;--- .
}.. 
}// 	
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
dataCopy<< 
;<< 
{== 	
string>> 
data>> 
;>> 
data@@ 
=@@ 
$str@@ 
;@@ 
dataCopyAA 
=AA 
dataAA 
;AA 
}BB 	
{CC 	
stringDD 
dataDD 
=DD 
dataCopyDD "
;DD" #
ifEE 
(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 

HttpCookieGG 

cookieSinkGG %
=GG& '
newGG( +

HttpCookieGG, 6
(GG6 7
$strGG7 =
,GG= >
dataGG? C
)GGC D
;GGD E
respII 
.II 
AppendCookieII !
(II! "

cookieSinkII" ,
)II, -
;II- .
}JJ 
}KK 	
}LL 
privateOO 
voidOO 
GoodB2GOO 
(OO 
HttpRequestOO $
reqOO% (
,OO( )
HttpResponseOO* 6
respOO7 ;
)OO; <
{PP 
stringQQ 
dataCopyQQ 
;QQ 
{RR 	
stringSS 
dataSS 
;SS 
dataUU 
=UU 
reqUU 
.UU 
ParamsUU 
.UU 
GetUU !
(UU! "
$strUU" (
)UU( )
;UU) *
dataCopyVV 
=VV 
dataVV 
;VV 
}WW 	
{XX 	
stringYY 
dataYY 
=YY 
dataCopyYY "
;YY" #
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 

HttpCookie\\ 

cookieSink\\ %
=\\& '
new\\( +

HttpCookie\\, 6
(\\6 7
$str\\7 =
,\\= >
HttpUtility\\? J
.\\J K
	UrlEncode\\K T
(\\T U
data\\U Y
,\\Y Z
Encoding\\[ c
.\\c d
UTF8\\d h
)\\h i
)\\i j
;\\j k
resp^^ 
.^^ 
AppendCookie^^ !
(^^! "

cookieSink^^" ,
)^^, -
;^^- .
}__ 
}`` 	
}aa 
}cc 
}dd (
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_41 E
:F G
AbstractTestCaseWebH [
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public(( 

override(( 
void(( 
Bad(( 
((( 
HttpRequest(( (
req(() ,
,((, -
HttpResponse((. :
resp((; ?
)((? @
{)) 
string** 
data** 
;** 
data,, 
=,, 
req,, 
.,, 
Params,, 
.,, 
Get,, 
(,, 
$str,, $
),,$ %
;,,% &
BadSink-- 
(-- 
data-- 
,-- 
req-- 
,-- 
resp--  
)--! "
;--" #
}.. 
public11 

override11 
void11 
Good11 
(11 
HttpRequest11 )
req11* -
,11- .
HttpResponse11/ ;
resp11< @
)11@ A
{22 
GoodG2B33 
(33 
req33 
,33 
resp33 
)33 
;33 
GoodB2G44 
(44 
req44 
,44 
resp44 
)44 
;44 
}55 
private77 
static77 
void77 
GoodG2BSink77 #
(77# $
string77$ *
data77+ /
,770 1
HttpRequest772 =
req77> A
,77A B
HttpResponse77C O
resp77P T
)77T U
{88 
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	

HttpCookie;; 

cookieSink;; !
=;;" #
new;;$ '

HttpCookie;;( 2
(;;2 3
$str;;3 9
,;;9 :
data;;; ?
);;? @
;;;@ A
resp== 
.== 
AppendCookie== 
(== 

cookieSink== (
)==( )
;==) *
}>> 	
}?? 
privateBB 
staticBB 
voidBB 
GoodG2BBB 
(BB  
HttpRequestBB  +
reqBB, /
,BB/ 0
HttpResponseBB1 =
respBB> B
)BBB C
{CC 
stringDD 
dataDD 
;DD 
dataFF 
=FF 
$strFF 
;FF 
GoodG2BSinkGG 
(GG 
dataGG 
,GG 
reqGG 
,GG 
respGG  $
)GG% &
;GG& '
}HH 
privateJJ 
staticJJ 
voidJJ 
GoodB2GSinkJJ #
(JJ# $
stringJJ$ *
dataJJ+ /
,JJ0 1
HttpRequestJJ2 =
reqJJ> A
,JJA B
HttpResponseJJC O
respJJP T
)JJT U
{KK 
ifLL 

(LL 
dataLL 
!=LL 
nullLL 
)LL 
{MM 	

HttpCookieNN 

cookieSinkNN !
=NN" #
newNN$ '

HttpCookieNN( 2
(NN2 3
$strNN3 9
,NN9 :
HttpUtilityNN; F
.NNF G
	UrlEncodeNNG P
(NNP Q
dataNNQ U
,NNU V
EncodingNNW _
.NN_ `
UTF8NN` d
)NNd e
)NNe f
;NNf g
respPP 
.PP 
AppendCookiePP 
(PP 

cookieSinkPP (
)PP( )
;PP) *
}QQ 	
}RR 
privateUU 
staticUU 
voidUU 
GoodB2GUU 
(UU  
HttpRequestUU  +
reqUU, /
,UU/ 0
HttpResponseUU1 =
respUU> B
)UUB C
{VV 
stringWW 
dataWW 
;WW 
dataYY 
=YY 
reqYY 
.YY 
ParamsYY 
.YY 
GetYY 
(YY 
$strYY $
)YY$ %
;YY% &
GoodB2GSinkZZ 
(ZZ 
dataZZ 
,ZZ 
reqZZ 
,ZZ 
respZZ  $
)ZZ% &
;ZZ& '
}[[ 
}]] 
}^^ æ(
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_42 E
:F G
AbstractTestCaseWebH [
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
return## 
data## 
;## 
}$$ 
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
=(( 
	BadSource(( 
(((  
req((  #
,((# $
resp((% )
)(() *
;((* +
if)) 

()) 
data)) 
!=)) 
null)) 
))) 
{** 	

HttpCookie++ 

cookieSink++ !
=++" #
new++$ '

HttpCookie++( 2
(++2 3
$str++3 9
,++9 :
data++; ?
)++? @
;++@ A
resp-- 
.-- 
AppendCookie-- 
(-- 

cookieSink-- (
)--( )
;--) *
}.. 	
}// 
private33 
static33 
string33 
GoodG2BSource33 '
(33' (
HttpRequest33( 3
req334 7
,337 8
HttpResponse339 E
resp33F J
)33J K
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 
return88 
data88 
;88 
}99 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
string== 
data== 
=== 
GoodG2BSource== #
(==# $
req==$ '
,==' (
resp==) -
)==- .
;==. /
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	

HttpCookie@@ 

cookieSink@@ !
=@@" #
new@@$ '

HttpCookie@@( 2
(@@2 3
$str@@3 9
,@@9 :
data@@; ?
)@@? @
;@@@ A
respBB 
.BB 
AppendCookieBB 
(BB 

cookieSinkBB (
)BB( )
;BB) *
}CC 	
}DD 
privateGG 
staticGG 
stringGG 
GoodB2GSourceGG '
(GG' (
HttpRequestGG( 3
reqGG4 7
,GG7 8
HttpResponseGG9 E
respGGF J
)GGJ K
{HH 
stringII 
dataII 
;II 
dataKK 
=KK 
reqKK 
.KK 
ParamsKK 
.KK 
GetKK 
(KK 
$strKK $
)KK$ %
;KK% &
returnLL 
dataLL 
;LL 
}MM 
privateOO 
staticOO 
voidOO 
GoodB2GOO 
(OO  
HttpRequestOO  +
reqOO, /
,OO/ 0
HttpResponseOO1 =
respOO> B
)OOB C
{PP 
stringQQ 
dataQQ 
=QQ 
GoodB2GSourceQQ #
(QQ# $
reqQQ$ '
,QQ' (
respQQ) -
)QQ- .
;QQ. /
ifRR 

(RR 
dataRR 
!=RR 
nullRR 
)RR 
{SS 	

HttpCookieTT 

cookieSinkTT !
=TT" #
newTT$ '

HttpCookieTT( 2
(TT2 3
$strTT3 9
,TT9 :
HttpUtilityTT; F
.TTF G
	UrlEncodeTTG P
(TTP Q
dataTTQ U
,TTU V
EncodingTTW _
.TT_ `
UTF8TT` d
)TTd e
)TTe f
;TTf g
respVV 
.VV 
AppendCookieVV 
(VV 

cookieSinkVV (
)VV( )
;VV) *
}WW 	
}XX 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
HttpRequestZZ )
reqZZ* -
,ZZ- .
HttpResponseZZ/ ;
respZZ< @
)ZZ@ A
{[[ 
GoodG2B\\ 
(\\ 
req\\ 
,\\ 
resp\\ 
)\\ 
;\\ 
GoodB2G]] 
(]] 
req]] 
,]] 
resp]] 
)]] 
;]] 
}^^ 
}`` 
}aa +
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_45 E
:F G
AbstractTestCaseWebH [
{ 
private 
string 
dataBad 
; 
private 
string 
dataGoodG2B 
; 
private   
string   
dataGoodB2G   
;   
private"" 
void"" 
BadSink"" 
("" 
HttpRequest"" $
req""% (
,""( )
HttpResponse""* 6
resp""7 ;
)""; <
{## 
string$$ 
data$$ 
=$$ 
dataBad$$ 
;$$ 
if%% 

(%% 
data%% 
!=%% 
null%% 
)%% 
{&& 	

HttpCookie'' 

cookieSink'' !
=''" #
new''$ '

HttpCookie''( 2
(''2 3
$str''3 9
,''9 :
data''; ?
)''? @
;''@ A
resp)) 
.)) 
AppendCookie)) 
()) 

cookieSink)) (
)))( )
;))) *
}** 	
}++ 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
data11 
=11 
req11 
.11 
Params11 
.11 
Get11 
(11 
$str11 $
)11$ %
;11% &
dataBad22 
=22 
data22 
;22 
BadSink33 
(33 
req33 
,33 
resp33 
)33 
;33 
}44 
public77 

override77 
void77 
Good77 
(77 
HttpRequest77 )
req77* -
,77- .
HttpResponse77/ ;
resp77< @
)77@ A
{88 
GoodG2B99 
(99 
req99 
,99 
resp99 
)99 
;99 
GoodB2G:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
};; 
private== 
void== 
GoodG2BSink== 
(== 
HttpRequest== (
req==) ,
,==, -
HttpResponse==. :
resp==; ?
)==? @
{>> 
string?? 
data?? 
=?? 
dataGoodG2B?? !
;??! "
if@@ 

(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 	

HttpCookieBB 

cookieSinkBB !
=BB" #
newBB$ '

HttpCookieBB( 2
(BB2 3
$strBB3 9
,BB9 :
dataBB; ?
)BB? @
;BB@ A
respDD 
.DD 
AppendCookieDD 
(DD 

cookieSinkDD (
)DD( )
;DD) *
}EE 	
}FF 
privateII 
voidII 
GoodG2BII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataKK 
;KK 
dataMM 
=MM 
$strMM 
;MM 
dataGoodG2BNN 
=NN 
dataNN 
;NN 
GoodG2BSinkOO 
(OO 
reqOO 
,OO 
respOO 
)OO 
;OO 
}PP 
privateRR 
voidRR 
GoodB2GSinkRR 
(RR 
HttpRequestRR (
reqRR) ,
,RR, -
HttpResponseRR. :
respRR; ?
)RR? @
{SS 
stringTT 
dataTT 
=TT 
dataGoodB2GTT !
;TT! "
ifUU 

(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 	

HttpCookieWW 

cookieSinkWW !
=WW" #
newWW$ '

HttpCookieWW( 2
(WW2 3
$strWW3 9
,WW9 :
HttpUtilityWW; F
.WWF G
	UrlEncodeWWG P
(WWP Q
dataWWQ U
,WWU V
EncodingWWW _
.WW_ `
UTF8WW` d
)WWd e
)WWe f
;WWf g
respYY 
.YY 
AppendCookieYY 
(YY 

cookieSinkYY (
)YY( )
;YY) *
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodB2G^^ 
(^^ 
HttpRequest^^ $
req^^% (
,^^( )
HttpResponse^^* 6
resp^^7 ;
)^^; <
{__ 
string`` 
data`` 
;`` 
databb 
=bb 
reqbb 
.bb 
Paramsbb 
.bb 
Getbb 
(bb 
$strbb $
)bb$ %
;bb% &
dataGoodB2Gcc 
=cc 
datacc 
;cc 
GoodB2GSinkdd 
(dd 
reqdd 
,dd 
respdd 
)dd 
;dd 
}ee 
}gg 
}hh 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_51a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_51b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##b c
;##c d
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_51b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33f g
;33g h
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_51b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<f g
;<<g h
}== 
}?? 
}@@ °
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_51b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 °
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_52c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53d H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53d'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53d-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 °
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_53d F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54d H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54d'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54d-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54d F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54e H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54e'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54e-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 °
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_54e F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ °
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_61a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_61b V
.V W
	BadSourceW `
(` a
reqa d
,d e
respf j
)j k
;k l
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
GoodB2G,, 
(,, 
req,, 
,,, 
resp,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
HttpRequest00  +
req00, /
,00/ 0
HttpResponse001 =
resp00> B
)00B C
{11 
string22 
data22 
=22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_61b22 V
.22V W
GoodG2BSource22W d
(22d e
req22e h
,22h i
resp22j n
)22n o
;22o p
if33 

(33 
data33 
!=33 
null33 
)33 
{44 	

HttpCookie55 

cookieSink55 !
=55" #
new55$ '

HttpCookie55( 2
(552 3
$str553 9
,559 :
data55; ?
)55? @
;55@ A
resp77 
.77 
AppendCookie77 
(77 

cookieSink77 (
)77( )
;77) *
}88 	
}99 
private<< 
static<< 
void<< 
GoodB2G<< 
(<<  
HttpRequest<<  +
req<<, /
,<</ 0
HttpResponse<<1 =
resp<<> B
)<<B C
{== 
string>> 
data>> 
=>> L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_61b>> V
.>>V W
GoodB2GSource>>W d
(>>d e
req>>e h
,>>h i
resp>>j n
)>>n o
;>>o p
if?? 

(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 	

HttpCookieAA 

cookieSinkAA !
=AA" #
newAA$ '

HttpCookieAA( 2
(AA2 3
$strAA3 9
,AA9 :
HttpUtilityAA; F
.AAF G
	UrlEncodeAAG P
(AAP Q
dataAAQ U
,AAU V
EncodingAAW _
.AA_ `
UTF8AA` d
)AAd e
)AAe f
;AAf g
respCC 
.CC 
AppendCookieCC 
(CC 

cookieSinkCC (
)CC( )
;CC) *
}DD 	
}EE 
}GG 
}HH 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_61b F
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
return## 
data## 
;## 
}$$ 
public)) 

static)) 
string)) 
GoodG2BSource)) &
())& '
HttpRequest))' 2
req))3 6
,))6 7
HttpResponse))8 D
resp))E I
)))I J
{** 
string++ 
data++ 
;++ 
data-- 
=-- 
$str-- 
;-- 
return.. 
data.. 
;.. 
}// 
public22 

static22 
string22 
GoodB2GSource22 &
(22& '
HttpRequest22' 2
req223 6
,226 7
HttpResponse228 D
resp22E I
)22I J
{33 
string44 
data44 
;44 
data66 
=66 
req66 
.66 
Params66 
.66 
Get66 
(66 
$str66 $
)66$ %
;66% &
return77 
data77 
;77 
}88 
}:: 
};; ä
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_66a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
string## 
[## 
]## 
	dataArray## 
=## 
new##  
string##! '
[##' (
$num##( )
]##) *
;##* +
	dataArray$$ 
[$$ 
$num$$ 
]$$ 
=$$ 
data$$ 
;$$ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_66b%% H
.%%H I
BadSink%%I P
(%%P Q
	dataArray%%Q Z
,%%[ \
req%%] `
,%%` a
resp%%b f
)%%g h
;%%h i
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
GoodB2G,, 
(,, 
req,, 
,,, 
resp,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
HttpRequest00  +
req00, /
,00/ 0
HttpResponse001 =
resp00> B
)00B C
{11 
string22 
data22 
;22 
data44 
=44 
$str44 
;44 
string55 
[55 
]55 
	dataArray55 
=55 
new55  
string55! '
[55' (
$num55( )
]55) *
;55* +
	dataArray66 
[66 
$num66 
]66 
=66 
data66 
;66 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_66b77 H
.77H I
GoodG2BSink77I T
(77T U
	dataArray77U ^
,77_ `
req77a d
,77d e
resp77f j
)77k l
;77l m
}88 
private;; 
static;; 
void;; 
GoodB2G;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
string== 
data== 
;== 
data?? 
=?? 
req?? 
.?? 
Params?? 
.?? 
Get?? 
(?? 
$str?? $
)??$ %
;??% &
string@@ 
[@@ 
]@@ 
	dataArray@@ 
=@@ 
new@@  
string@@! '
[@@' (
$num@@( )
]@@) *
;@@* +
	dataArrayAA 
[AA 
$numAA 
]AA 
=AA 
dataAA 
;AA L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_66bBB H
.BBH I
GoodB2GSinkBBI T
(BBT U
	dataArrayBBU ^
,BB_ `
reqBBa d
,BBd e
respBBf j
)BBk l
;BBl m
}CC 
}EE 
}FF º
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_66b F
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
string++# )
[++) *
]++* +
	dataArray++, 5
,++6 7
HttpRequest++8 C
req++D G
,++G H
HttpResponse++I U
resp++V Z
)++Z [
{,, 
string-- 
data-- 
=-- 
	dataArray-- 
[--  
$num--  !
]--! "
;--" #
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #
string77# )
[77) *
]77* +
	dataArray77, 5
,776 7
HttpRequest778 C
req77D G
,77G H
HttpResponse77I U
resp77V Z
)77Z [
{88 
string99 
data99 
=99 
	dataArray99 
[99  
$num99  !
]99! "
;99" #
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC ¢
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67a F
:G H
AbstractTestCaseWebI \
{ 
public 

class 
	Container 
{ 
public   
string   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data'' 
='' 
req'' 
.'' 
Params'' 
.'' 
Get'' 
('' 
$str'' $
)''$ %
;''% &
	Container(( 
dataContainer(( 
=((  !
new((" %
	Container((& /
(((/ 0
)((0 1
;((1 2
dataContainer)) 
.)) 
containerOne)) "
=))# $
data))% )
;))) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67b** H
.**H I
BadSink**I P
(**P Q
dataContainer**Q ^
,**_ `
req**a d
,**d e
resp**f j
)**k l
;**l m
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
HttpRequest55  +
req55, /
,55/ 0
HttpResponse551 =
resp55> B
)55B C
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 
	Container:: 
dataContainer:: 
=::  !
new::" %
	Container::& /
(::/ 0
)::0 1
;::1 2
dataContainer;; 
.;; 
containerOne;; "
=;;# $
data;;% )
;;;) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataContainer<<U b
,<<c d
req<<e h
,<<h i
resp<<j n
)<<o p
;<<p q
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
	ContainerEE 
dataContainerEE 
=EE  !
newEE" %
	ContainerEE& /
(EE/ 0
)EE0 1
;EE1 2
dataContainerFF 
.FF 
containerOneFF "
=FF# $
dataFF% )
;FF) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67bGG H
.GGH I
GoodB2GSinkGGI T
(GGT U
dataContainerGGU b
,GGc d
reqGGe h
,GGh i
respGGj n
)GGo p
;GGp q
}HH 
}JJ 
}KK ¤
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67b F
{ 
public 

static 
void 
BadSink 
( L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67a _
._ `
	Container` i
dataContainerj w
,x y
HttpRequest	z 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67a++# c
.++c d
	Container++d m
dataContainer++n {
,++| }
HttpRequest	++~ 
req
++ 
,
++ 
HttpResponse
++ 
resp
++  
)
++  ¡
{,, 
string-- 
data-- 
=-- 
dataContainer-- #
.--# $
containerOne--$ 0
;--0 1
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_67a77# c
.77c d
	Container77d m
dataContainer77n {
,77| }
HttpRequest	77~ 
req
77 
,
77 
HttpResponse
77 
resp
77  
)
77  ¡
{88 
string99 
data99 
=99 
dataContainer99 #
.99# $
containerOne99$ 0
;990 1
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68a F
:G H
AbstractTestCaseWebI \
{ 
public 

static 
string 
data 
; 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68b$$ H
.$$H I
BadSink$$I P
($$P Q
req$$Q T
,$$T U
resp$$V Z
)$$Z [
;$$[ \
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68b33 H
.33H I
GoodG2BSink33I T
(33T U
req33U X
,33X Y
resp33Z ^
)33^ _
;33_ `
}44 
private77 
static77 
void77 
GoodB2G77 
(77  
HttpRequest77  +
req77, /
,77/ 0
HttpResponse771 =
resp77> B
)77B C
{88 
data:: 
=:: 
req:: 
.:: 
Params:: 
.:: 
Get:: 
(:: 
$str:: $
)::$ %
;::% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68b;; H
.;;H I
GoodB2GSink;;I T
(;;T U
req;;U X
,;;X Y
resp;;Z ^
);;^ _
;;;_ `
}<< 
}>> 
}?? ª
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68b F
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68a V
.V W
dataW [
;[ \
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
HttpRequest++# .
req++/ 2
,++2 3
HttpResponse++4 @
resp++A E
)++E F
{,, 
string-- 
data-- 
=-- L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68a-- V
.--V W
data--W [
;--[ \
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #
HttpRequest77# .
req77/ 2
,772 3
HttpResponse774 @
resp77A E
)77E F
{88 
string99 
data99 
=99 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_68a99 V
.99V W
data99W [
;99[ \
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC Ò
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_71a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_71b## H
.##H I
BadSink##I P
(##P Q
(##Q R
Object##R X
)##X Y
data##Y ]
,##^ _
req##` c
,##c d
resp##e i
)##j k
;##k l
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
HttpRequest..  +
req.., /
,../ 0
HttpResponse..1 =
resp..> B
)..B C
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_71b33 H
.33H I
GoodG2BSink33I T
(33T U
(33U V
Object33V \
)33\ ]
data33] a
,33b c
req33d g
,33g h
resp33i m
)33n o
;33o p
}44 
private77 
static77 
void77 
GoodB2G77 
(77  
HttpRequest77  +
req77, /
,77/ 0
HttpResponse771 =
resp77> B
)77B C
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_71b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
(<<U V
Object<<V \
)<<\ ]
data<<] a
,<<b c
req<<d g
,<<g h
resp<<i m
)<<n o
;<<o p
}== 
}?? 
}@@ ì
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_71b F
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #
Object,,# )

dataObject,,* 4
,,,5 6
HttpRequest,,7 B
req,,C F
,,,F G
HttpResponse,,H T
resp,,U Y
),,Y Z
{-- 
string.. 
data.. 
=.. 
(.. 
string.. 
).. 

dataObject.. (
;..( )
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #
Object88# )

dataObject88* 4
,885 6
HttpRequest887 B
req88C F
,88F G
HttpResponse88H T
resp88U Y
)88Y Z
{99 
string:: 
data:: 
=:: 
(:: 
string:: 
):: 

dataObject:: (
;::( )
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD Â&
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_72a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &
	Hashtable$$ 
dataHashtable$$ 
=$$  !
new$$" %
	Hashtable$$& /
($$/ 0
$num$$0 1
)$$1 2
;$$2 3
dataHashtable%% 
.%% 
Add%% 
(%% 
$num%% 
,%% 
data%% !
)%%! "
;%%" #
dataHashtable&& 
.&& 
Add&& 
(&& 
$num&& 
,&& 
data&& !
)&&! "
;&&" #
dataHashtable'' 
.'' 
Add'' 
('' 
$num'' 
,'' 
data'' !
)''! "
;''" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_72b(( H
.((H I
BadSink((I P
(((P Q
dataHashtable((Q ^
,((_ `
req((a d
,((d e
resp((f j
)((k l
;((l m
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 
	Hashtable88 
dataHashtable88 
=88  !
new88" %
	Hashtable88& /
(88/ 0
$num880 1
)881 2
;882 3
dataHashtable99 
.99 
Add99 
(99 
$num99 
,99 
data99 !
)99! "
;99" #
dataHashtable:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: !
)::! "
;::" #
dataHashtable;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; !
);;! "
;;;" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_72b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataHashtable<<U b
,<<c d
req<<e h
,<<h i
resp<<j n
)<<o p
;<<p q
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
	HashtableEE 
dataHashtableEE 
=EE  !
newEE" %
	HashtableEE& /
(EE/ 0
$numEE0 1
)EE1 2
;EE2 3
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #
dataHashtableHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH !
)HH! "
;HH" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_72bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataHashtableIIU b
,IIc d
reqIIe h
,IIh i
respIIj n
)IIo p
;IIp q
}JJ 
}LL 
}MM 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_72b F
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #
	Hashtable,,# ,
dataHashtable,,- :
,,,; <
HttpRequest,,= H
req,,I L
,,,L M
HttpResponse,,N Z
resp,,[ _
),,_ `
{-- 
string.. 
data.. 
=.. 
(.. 
string.. 
).. 
dataHashtable.. ,
[.., -
$num..- .
]... /
;../ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #
	Hashtable88# ,
dataHashtable88- :
,88; <
HttpRequest88= H
req88I L
,88L M
HttpResponse88N Z
resp88[ _
)88_ `
{99 
string:: 
data:: 
=:: 
(:: 
string:: 
):: 
dataHashtable:: ,
[::, -
$num::- .
]::. /
;::/ 0
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD È&
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_73a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &

LinkedList$$ 
<$$ 
string$$ 
>$$ 
dataLinkedList$$ )
=$$* +
new$$, /

LinkedList$$0 :
<$$: ;
string$$; A
>$$A B
($$B C
)$$C D
;$$D E
dataLinkedList%% 
.%% 
AddLast%% 
(%% 
data%% #
)%%# $
;%%$ %
dataLinkedList&& 
.&& 
AddLast&& 
(&& 
data&& #
)&&# $
;&&$ %
dataLinkedList'' 
.'' 
AddLast'' 
('' 
data'' #
)''# $
;''$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_73b(( H
.((H I
BadSink((I P
(((P Q
dataLinkedList((Q _
,((` a
req((b e
,((e f
resp((g k
)((l m
;((m n
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 

LinkedList88 
<88 
string88 
>88 
dataLinkedList88 )
=88* +
new88, /

LinkedList880 :
<88: ;
string88; A
>88A B
(88B C
)88C D
;88D E
dataLinkedList99 
.99 
AddLast99 
(99 
data99 #
)99# $
;99$ %
dataLinkedList:: 
.:: 
AddLast:: 
(:: 
data:: #
)::# $
;::$ %
dataLinkedList;; 
.;; 
AddLast;; 
(;; 
data;; #
);;# $
;;;$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_73b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataLinkedList<<U c
,<<d e
req<<f i
,<<i j
resp<<k o
)<<p q
;<<q r
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &

LinkedListEE 
<EE 
stringEE 
>EE 
dataLinkedListEE )
=EE* +
newEE, /

LinkedListEE0 :
<EE: ;
stringEE; A
>EEA B
(EEB C
)EEC D
;EED E
dataLinkedListFF 
.FF 
AddLastFF 
(FF 
dataFF #
)FF# $
;FF$ %
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %
dataLinkedListHH 
.HH 
AddLastHH 
(HH 
dataHH #
)HH# $
;HH$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_73bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataLinkedListIIU c
,IId e
reqIIf i
,IIi j
respIIk o
)IIp q
;IIq r
}JJ 
}LL 
}MM Ù
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_73b F
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #

LinkedList,,# -
<,,- .
string,,. 4
>,,4 5
dataLinkedList,,6 D
,,,E F
HttpRequest,,G R
req,,S V
,,,V W
HttpResponse,,X d
resp,,e i
),,i j
{-- 
string.. 
data.. 
=.. 
dataLinkedList.. $
...$ %
Last..% )
...) *
Value..* /
;../ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #

LinkedList88# -
<88- .
string88. 4
>884 5
dataLinkedList886 D
,88E F
HttpRequest88G R
req88S V
,88V W
HttpResponse88X d
resp88e i
)88i j
{99 
string:: 
data:: 
=:: 
dataLinkedList:: $
.::$ %
Last::% )
.::) *
Value::* /
;::/ 0
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD *
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_74a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &

Dictionary$$ 
<$$ 
int$$ 
,$$ 
string$$ 
>$$ 
dataDictionary$$ -
=$$. /
new$$0 3

Dictionary$$4 >
<$$> ?
int$$? B
,$$B C
string$$C I
>$$I J
($$J K
)$$K L
;$$L M
dataDictionary%% 
.%% 
Add%% 
(%% 
$num%% 
,%% 
data%% "
)%%" #
;%%# $
dataDictionary&& 
.&& 
Add&& 
(&& 
$num&& 
,&& 
data&& "
)&&" #
;&&# $
dataDictionary'' 
.'' 
Add'' 
('' 
$num'' 
,'' 
data'' "
)''" #
;''# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_74b(( H
.((H I
BadSink((I P
(((P Q
dataDictionary((Q _
,((` a
req((b e
,((e f
resp((g k
)((l m
;((m n
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 

Dictionary88 
<88 
int88 
,88 
string88 
>88 
dataDictionary88 -
=88. /
new880 3

Dictionary884 >
<88> ?
int88? B
,88B C
string88C I
>88I J
(88J K
)88K L
;88L M
dataDictionary99 
.99 
Add99 
(99 
$num99 
,99 
data99 "
)99" #
;99# $
dataDictionary:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: "
)::" #
;::# $
dataDictionary;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; "
);;" #
;;;# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_74b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataDictionary<<U c
,<<d e
req<<f i
,<<i j
resp<<k o
)<<p q
;<<q r
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &

DictionaryEE 
<EE 
intEE 
,EE 
stringEE 
>EE 
dataDictionaryEE -
=EE. /
newEE0 3

DictionaryEE4 >
<EE> ?
intEE? B
,EEB C
stringEEC I
>EEI J
(EEJ K
)EEK L
;EEL M
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $
dataDictionaryHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH "
)HH" #
;HH# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_74bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataDictionaryIIU c
,IId e
reqIIf i
,IIi j
respIIk o
)IIp q
;IIq r
}JJ 
}LL 
}MM 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_74b F
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, #
(,,# $

Dictionary,,$ .
<,,. /
int,,/ 2
,,,2 3
string,,3 9
>,,9 :
dataDictionary,,; I
,,,J K
HttpRequest,,L W
req,,X [
,,,[ \
HttpResponse,,] i
resp,,j n
),,n o
{-- 
string.. 
data.. 
=.. 
dataDictionary.. $
[..$ %
$num..% &
]..& '
;..' (
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #

Dictionary88# -
<88- .
int88. 1
,881 2
string882 8
>888 9
dataDictionary88: H
,88I J
HttpRequest88K V
req88W Z
,88Z [
HttpResponse88\ h
resp88i m
)88m n
{99 
string:: 
data:: 
=:: 
dataDictionary:: $
[::$ %
$num::% &
]::& '
;::' (
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD é5
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_75a F
:G H
AbstractTestCaseWebI \
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &
byte'' 
['' 
]'' 
dataSerialized'' 
='' 
null''  $
;''$ %
try(( 
{)) 	
BinaryFormatter** 
bf** 
=**  
new**! $
BinaryFormatter**% 4
(**4 5
)**5 6
;**6 7
using++ 
(++ 
var++ 
ms++ 
=++ 
new++ 
MemoryStream++  ,
(++, -
)++- .
)++. /
{,, 
bf-- 
.-- 
	Serialize-- 
(-- 
ms-- 
,--  
data--! %
)--% &
;--& '
dataSerialized.. 
=..  
ms..! #
...# $
ToArray..$ +
(..+ ,
).., -
;..- .
}// L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_75b00 L
.00L M
BadSink00M T
(00T U
dataSerialized00U c
,00d e
req00f i
,00i j
resp00k o
)00p q
;00q r
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. X
,44X Y
exceptSerialize44Z i
)44i j
;44j k
}55 	
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
byteFF 
[FF 
]FF 
dataSerializedFF 
=FF 
nullFF  $
;FF$ %
tryGG 
{HH 	
BinaryFormatterII 
bfII 
=II  
newII! $
BinaryFormatterII% 4
(II4 5
)II5 6
;II6 7
usingJJ 
(JJ 
varJJ 
msJJ 
=JJ 
newJJ 
MemoryStreamJJ  ,
(JJ, -
)JJ- .
)JJ. /
{KK 
bfLL 
.LL 
	SerializeLL 
(LL 
msLL 
,LL  
dataLL! %
)LL% &
;LL& '
dataSerializedMM 
=MM  
msMM! #
.MM# $
ToArrayMM$ +
(MM+ ,
)MM, -
;MM- .
}NN L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_75bOO L
.OOL M
GoodG2BSinkOOM X
(OOX Y
dataSerializedOOY g
,OOh i
reqOOj m
,OOm n
respOOo s
)OOt u
;OOu v
}PP 	
catchQQ 
(QQ "
SerializationExceptionQQ %
exceptSerializeQQ& 5
)QQ5 6
{RR 	
IOSS 
.SS 
LoggerSS 
.SS 
LogSS 
(SS 
NLogSS 
.SS 
LogLevelSS '
.SS' (
WarnSS( ,
,SS, -
$strSS. X
,SSX Y
exceptSerializeSSZ i
)SSi j
;SSj k
}TT 	
}UU 
privateXX 
staticXX 
voidXX 
GoodB2GXX 
(XX  
HttpRequestXX  +
reqXX, /
,XX/ 0
HttpResponseXX1 =
respXX> B
)XXB C
{YY 
stringZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
req\\ 
.\\ 
Params\\ 
.\\ 
Get\\ 
(\\ 
$str\\ $
)\\$ %
;\\% &
byte^^ 
[^^ 
]^^ 
dataSerialized^^ 
=^^ 
null^^  $
;^^$ %
try__ 
{`` 	
BinaryFormatteraa 
bfaa 
=aa  
newaa! $
BinaryFormatteraa% 4
(aa4 5
)aa5 6
;aa6 7
usingbb 
(bb 
varbb 
msbb 
=bb 
newbb 
MemoryStreambb  ,
(bb, -
)bb- .
)bb. /
{cc 
bfdd 
.dd 
	Serializedd 
(dd 
msdd 
,dd  
datadd! %
)dd% &
;dd& '
dataSerializedee 
=ee  
msee! #
.ee# $
ToArrayee$ +
(ee+ ,
)ee, -
;ee- .
}ff L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_75bgg L
.ggL M
GoodB2GSinkggM X
(ggX Y
dataSerializedggY g
,ggh i
reqggj m
,ggm n
respggo s
)ggt u
;ggu v
}hh 	
catchii 
(ii "
SerializationExceptionii %
exceptSerializeii& 5
)ii5 6
{jj 	
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk 
.kk 
LogLevelkk '
.kk' (
Warnkk( ,
,kk, -
$strkk. X
,kkX Y
exceptSerializekkZ i
)kki j
;kkj k
}ll 	
}mm 
}oo 
}pp ;
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_75b F
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if,, 
(,, 
data,, 
!=,, 
null,, 
),, 
{-- 

HttpCookie.. 

cookieSink.. %
=..& '
new..( +

HttpCookie.., 6
(..6 7
$str..7 =
,..= >
data..? C
)..C D
;..D E
resp00 
.00 
AppendCookie00 !
(00! "

cookieSink00" ,
)00, -
;00- .
}11 
}22 	
catch33 
(33 "
SerializationException33 %
exceptSerialize33& 5
)335 6
{44 	
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 
.55 
LogLevel55 '
.55' (
Warn55( ,
,55, -
$str55. Y
,55Y Z
exceptSerialize55[ j
)55j k
;55k l
}66 	
}77 
public<< 

static<< 
void<< 
GoodG2BSink<< "
(<<" #
byte<<# '
[<<' (
]<<( )
dataSerialized<<* 8
,<<9 :
HttpRequest<<; F
req<<G J
,<<J K
HttpResponse<<L X
resp<<Y ]
)<<] ^
{== 
try>> 
{?? 	
string@@ 
data@@ 
;@@ 
varAA 
binFormAA 
=AA 
newAA 
BinaryFormatterAA -
(AA- .
)AA. /
;AA/ 0
usingBB 
(BB 
varBB 
	memStreamBB  
=BB! "
newBB# &
MemoryStreamBB' 3
(BB3 4
)BB4 5
)BB5 6
{CC 
	memStreamDD 
.DD 
WriteDD 
(DD  
dataSerializedDD  .
,DD. /
$numDD0 1
,DD1 2
dataSerializedDD3 A
.DDA B
LengthDDB H
)DDH I
;DDI J
	memStreamEE 
.EE 
SeekEE 
(EE 
$numEE  
,EE  !

SeekOriginEE" ,
.EE, -
BeginEE- 2
)EE2 3
;EE3 4
dataFF 
=FF 
(FF 
stringFF 
)FF 
binFormFF &
.FF& '
DeserializeFF' 2
(FF2 3
	memStreamFF3 <
)FF< =
;FF= >
}GG 
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 

HttpCookieJJ 

cookieSinkJJ %
=JJ& '
newJJ( +

HttpCookieJJ, 6
(JJ6 7
$strJJ7 =
,JJ= >
dataJJ? C
)JJC D
;JJD E
respLL 
.LL 
AppendCookieLL !
(LL! "

cookieSinkLL" ,
)LL, -
;LL- .
}MM 
}NN 	
catchOO 
(OO "
SerializationExceptionOO %
exceptSerializeOO& 5
)OO5 6
{PP 	
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ 
(QQ 
NLogQQ 
.QQ 
LogLevelQQ '
.QQ' (
WarnQQ( ,
,QQ, -
$strQQ. Y
,QQY Z
exceptSerializeQQ[ j
)QQj k
;QQk l
}RR 	
}SS 
publicVV 

staticVV 
voidVV 
GoodB2GSinkVV "
(VV" #
byteVV# '
[VV' (
]VV( )
dataSerializedVV* 8
,VV9 :
HttpRequestVV; F
reqVVG J
,VVJ K
HttpResponseVVL X
respVVY ]
)VV] ^
{WW 
tryXX 
{YY 	
stringZZ 
dataZZ 
;ZZ 
var[[ 
binForm[[ 
=[[ 
new[[ 
BinaryFormatter[[ -
([[- .
)[[. /
;[[/ 0
using\\ 
(\\ 
var\\ 
	memStream\\  
=\\! "
new\\# &
MemoryStream\\' 3
(\\3 4
)\\4 5
)\\5 6
{]] 
	memStream^^ 
.^^ 
Write^^ 
(^^  
dataSerialized^^  .
,^^. /
$num^^0 1
,^^1 2
dataSerialized^^3 A
.^^A B
Length^^B H
)^^H I
;^^I J
	memStream__ 
.__ 
Seek__ 
(__ 
$num__  
,__  !

SeekOrigin__" ,
.__, -
Begin__- 2
)__2 3
;__3 4
data`` 
=`` 
(`` 
string`` 
)`` 
binForm`` &
.``& '
Deserialize``' 2
(``2 3
	memStream``3 <
)``< =
;``= >
}aa 
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 

HttpCookiedd 

cookieSinkdd %
=dd& '
newdd( +

HttpCookiedd, 6
(dd6 7
$strdd7 =
,dd= >
HttpUtilitydd? J
.ddJ K
	UrlEncodeddK T
(ddT U
dataddU Y
,ddY Z
Encodingdd[ c
.ddc d
UTF8ddd h
)ddh i
)ddi j
;ddj k
respff 
.ff 
AppendCookieff !
(ff! "

cookieSinkff" ,
)ff, -
;ff- .
}gg 
}hh 	
catchii 
(ii "
SerializationExceptionii %
exceptSerializeii& 5
)ii5 6
{jj 	
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk 
.kk 
LogLevelkk '
.kk' (
Warnkk( ,
,kk, -
$strkk. Y
,kkY Z
exceptSerializekk[ j
)kkj k
;kkk l
}ll 	
}mm 
}oo 
}pp 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base## L

baseObject##M W
=##X Y
new##Z ]P
CCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_bad	##^ ¡
(
##¡ ¢
)
##¢ £
;
##£ ¤

baseObject$$ 
.$$ 
Action$$ 
($$ 
data$$ 
,$$  
req$$! $
,$$$ %
resp$$& *
)$$* +
;$$+ ,
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
void// 
GoodG2B// 
(// 
HttpRequest// $
req//% (
,//( )
HttpResponse//* 6
resp//7 ;
)//; <
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base44 L

baseObject44M W
=44X Y
new44Z ]T
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_goodG2B	44^ ¥
(
44¥ ¦
)
44¦ §
;
44§ ¨

baseObject55 
.55 
Action55 
(55 
data55 
,55  
req55! $
,55$ %
resp55& *
)55* +
;55+ ,
}66 
private99 
void99 
GoodB2G99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
data;; 
;;; 
data== 
=== 
req== 
.== 
Params== 
.== 
Get== 
(== 
$str== $
)==$ %
;==% &P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base>> L

baseObject>>M W
=>>X Y
new>>Z ]T
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_goodB2G	>>^ ¥
(
>>¥ ¦
)
>>¦ §
;
>>§ ¨

baseObject?? 
.?? 
Action?? 
(?? 
data?? 
,??  
req??! $
,??$ %
resp??& *
)??* +
;??+ ,
}@@ 
}BB 
}CC 

ÄC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class O
CCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_bad I
:J KQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base	L 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
}&& 
}'' ó
ÅC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base S
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ¿
ÈC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class S
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_goodB2G M
:N OQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base	P 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
HttpUtility""; F
.""F G
	UrlEncode""G P
(""P Q
data""Q U
,""U V
Encoding""W _
.""_ `
UTF8""` d
)""d e
)""e f
;""f g
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
}'' 
}(( 

ÈC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class S
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_goodG2B M
:N OQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addCookie_81_base	P 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
}'' 
}(( Ä
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_01 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
if$$ 

($$ 
data$$ 
!=$$ 
null$$ 
)$$ 
{%% 	
resp&& 
.&& 
	AddHeader&& 
(&& 
$str&& %
,&&% &
$str&&' :
+&&; <
data&&= A
)&&A B
;&&B C
}'' 	
}(( 
public++ 

override++ 
void++ 
Good++ 
(++ 
HttpRequest++ )
req++* -
,++- .
HttpResponse++/ ;
resp++< @
)++@ A
{,, 
GoodG2B-- 
(-- 
req-- 
,-- 
resp-- 
)-- 
;-- 
GoodB2G.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
}// 
private22 
void22 
GoodG2B22 
(22 
HttpRequest22 $
req22% (
,22( )
HttpResponse22* 6
resp227 ;
)22; <
{33 
string44 
data44 
;44 
data66 
=66 
$str66 
;66 
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
resp:: 
.:: 
	AddHeader:: 
(:: 
$str:: %
,::% &
$str::' :
+::; <
data::= A
)::A B
;::B C
};; 	
}<< 
private?? 
void?? 
GoodB2G?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
reqCC 
.CC 
ParamsCC 
.CC 
GetCC 
(CC 
$strCC $
)CC$ %
;CC% &
ifEE 

(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 	
dataGG 
=GG 
HttpUtilityGG 
.GG 
	UrlEncodeGG (
(GG( )
$strGG) +
,GG+ ,
EncodingGG- 5
.GG5 6
UTF8GG6 :
)GG: ;
;GG; <
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH %
,HH% &
$strHH' :
+HH; <
dataHH= A
)HHA B
;HHB C
}II 	
}JJ 
}LL 
}MM æ8
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_02 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
true,, 
),, 
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
false;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
trueFF 
)FF 
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
trueTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
true__ 
)__ 
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
truemm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
falsexx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
true
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« À;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_03 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
$num,, 
==,, 
$num,, 
),, 
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
$num;; 
!=;; 
$num;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
$numFF 
==FF 
$numFF 
)FF 
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
$numTT 
==TT 
$numTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
$num__ 
==__ 
$num__ 
)__ 
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
$nummm 
==mm 
$nummm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
$numxx 
!=xx 
$numxx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« <
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_04 E
:F G
AbstractTestCaseWebH [
{ 
private"" 
const"" 
bool"" 
PRIVATE_CONST_TRUE"" )
=""* +
true"", 0
;""0 1
private## 
const## 
bool## 
PRIVATE_CONST_FALSE## *
=##+ ,
false##- 2
;##2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data++ 
=++ 
req++ 
.++ 
Params++ 
.++ 
Get++ !
(++! "
$str++" (
)++( )
;++) *
},, 	
else-- 
{.. 	
data11 
=11 
null11 
;11 
}22 	
if33 

(33 
PRIVATE_CONST_TRUE33 
)33 
{44 	
if66 
(66 
data66 
!=66 
null66 
)66 
{77 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
PRIVATE_CONST_FALSEBB 
)BB  
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
PRIVATE_CONST_TRUEMM 
)MM 
{NN 	
ifPP 
(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 
respRR 
.RR 
	AddHeaderRR 
(RR 
$strRR )
,RR) *
$strRR+ >
+RR? @
dataRRA E
)RRE F
;RRF G
}SS 
}TT 	
}UU 
privateXX 
voidXX 
GoodG2B2XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
PRIVATE_CONST_TRUE[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
else`` 
{aa 	
datadd 
=dd 
nulldd 
;dd 
}ee 	
ifff 

(ff 
PRIVATE_CONST_TRUEff 
)ff 
{gg 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 
respkk 
.kk 
	AddHeaderkk 
(kk 
$strkk )
,kk) *
$strkk+ >
+kk? @
datakkA E
)kkE F
;kkF G
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodB2G1qq 
(qq 
HttpRequestqq %
reqqq& )
,qq) *
HttpResponseqq+ 7
respqq8 <
)qq< =
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
PRIVATE_CONST_TRUEtt 
)tt 
{uu 	
dataww 
=ww 
reqww 
.ww 
Paramsww 
.ww 
Getww !
(ww! "
$strww" (
)ww( )
;ww) *
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
PRIVATE_CONST_FALSE 
)  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
if
¡¡ 
(
¡¡ 
data
¡¡ 
!=
¡¡ 
null
¡¡ 
)
¡¡ 
{
¢¢ 
data
££ 
=
££ 
HttpUtility
££ "
.
££" #
	UrlEncode
££# ,
(
££, -
$str
££- /
,
££/ 0
Encoding
££1 9
.
££9 :
UTF8
££: >
)
££> ?
;
££? @
resp
¤¤ 
.
¤¤ 
	AddHeader
¤¤ 
(
¤¤ 
$str
¤¤ )
,
¤¤) *
$str
¤¤+ >
+
¤¤? @
data
¤¤A E
)
¤¤E F
;
¤¤F G
}
¥¥ 
}
¦¦ 	
}
§§ 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
HttpRequest
©© )
req
©©* -
,
©©- .
HttpResponse
©©/ ;
resp
©©< @
)
©©@ A
{
ªª 
GoodG2B1
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodG2B2
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
GoodB2G1
­­ 
(
­­ 
req
­­ 
,
­­ 
resp
­­ 
)
­­ 
;
­­ 
GoodB2G2
®® 
(
®® 
req
®® 
,
®® 
resp
®® 
)
®® 
;
®® 
}
¯¯ 
}±± 
}²² ¢;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_05 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data** 
=** 
req** 
.** 
Params** 
.** 
Get** !
(**! "
$str**" (
)**( )
;**) *
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
privateTrue22 
)22 
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
privateFalseAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
privateTrueLL 
)LL 
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
privateTrueZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
privateTrueee 
)ee 
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
privateTruess 
)ss 
{tt 	
datavv 
=vv 
reqvv 
.vv 
Paramsvv 
.vv 
Getvv !
(vv! "
$strvv" (
)vv( )
;vv) *
}ww 	
elsexx 
{yy 	
data|| 
=|| 
null|| 
;|| 
}}} 	
if~~ 

(~~ 
privateFalse~~ 
)~~ 
{ 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateTrue
 
)
 
{
 	
if
   
(
   
data
   
!=
   
null
   
)
   
{
¡¡ 
data
¢¢ 
=
¢¢ 
HttpUtility
¢¢ "
.
¢¢" #
	UrlEncode
¢¢# ,
(
¢¢, -
$str
¢¢- /
,
¢¢/ 0
Encoding
¢¢1 9
.
¢¢9 :
UTF8
¢¢: >
)
¢¢> ?
;
¢¢? @
resp
££ 
.
££ 
	AddHeader
££ 
(
££ 
$str
££ )
,
££) *
$str
££+ >
+
££? @
data
££A E
)
££E F
;
££F G
}
¤¤ 
}
¥¥ 	
}
¦¦ 
public
¨¨ 

override
¨¨ 
void
¨¨ 
Good
¨¨ 
(
¨¨ 
HttpRequest
¨¨ )
req
¨¨* -
,
¨¨- .
HttpResponse
¨¨/ ;
resp
¨¨< @
)
¨¨@ A
{
©© 
GoodG2B1
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
GoodG2B2
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodB2G1
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
GoodB2G2
­­ 
(
­­ 
req
­­ 
,
­­ 
resp
­­ 
)
­­ 
;
­­ 
}
®® 
}°° 
}±± é=
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_06 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&&  
$num&&  !
)&&! "
{'' 	
data)) 
=)) 
req)) 
.)) 
Params)) 
.)) 
Get)) !
())! "
$str))" (
)))( )
;))) *
}** 	
else++ 
{,, 	
data// 
=// 
null// 
;// 
}00 	
if11 

(11 
PRIVATE_CONST_FIVE11 
==11  
$num11  !
)11! "
{22 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp66 
.66 
	AddHeader66 
(66 
$str66 )
,66) *
$str66+ >
+66? @
data66A E
)66E F
;66F G
}77 
}88 	
}99 
private== 
void== 
GoodG2B1== 
(== 
HttpRequest== %
req==& )
,==) *
HttpResponse==+ 7
resp==8 <
)==< =
{>> 
string?? 
data?? 
;?? 
if@@ 

(@@ 
PRIVATE_CONST_FIVE@@ 
!=@@  
$num@@  !
)@@! "
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
elseFF 
{GG 	
dataII 
=II 
$strII 
;II 
}JJ 	
ifKK 

(KK 
PRIVATE_CONST_FIVEKK 
==KK  
$numKK  !
)KK! "
{LL 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respPP 
.PP 
	AddHeaderPP 
(PP 
$strPP )
,PP) *
$strPP+ >
+PP? @
dataPPA E
)PPE F
;PPF G
}QQ 
}RR 	
}SS 
privateVV 
voidVV 
GoodG2B2VV 
(VV 
HttpRequestVV %
reqVV& )
,VV) *
HttpResponseVV+ 7
respVV8 <
)VV< =
{WW 
stringXX 
dataXX 
;XX 
ifYY 

(YY 
PRIVATE_CONST_FIVEYY 
==YY  
$numYY  !
)YY! "
{ZZ 	
data\\ 
=\\ 
$str\\ 
;\\ 
}]] 	
else^^ 
{__ 	
databb 
=bb 
nullbb 
;bb 
}cc 	
ifdd 

(dd 
PRIVATE_CONST_FIVEdd 
==dd  
$numdd  !
)dd! "
{ee 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respii 
.ii 
	AddHeaderii 
(ii 
$strii )
,ii) *
$strii+ >
+ii? @
dataiiA E
)iiE F
;iiF G
}jj 
}kk 	
}ll 
privateoo 
voidoo 
GoodB2G1oo 
(oo 
HttpRequestoo %
reqoo& )
,oo) *
HttpResponseoo+ 7
respoo8 <
)oo< =
{pp 
stringqq 
dataqq 
;qq 
ifrr 

(rr 
PRIVATE_CONST_FIVErr 
==rr  
$numrr  !
)rr! "
{ss 	
datauu 
=uu 
requu 
.uu 
Paramsuu 
.uu 
Getuu !
(uu! "
$struu" (
)uu( )
;uu) *
}vv 	
elseww 
{xx 	
data{{ 
={{ 
null{{ 
;{{ 
}|| 	
if}} 

(}} 
PRIVATE_CONST_FIVE}} 
!=}}  
$num}}  !
)}}! "
{~~ 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
   
data
¡¡ 
=
¡¡ 
HttpUtility
¡¡ "
.
¡¡" #
	UrlEncode
¡¡# ,
(
¡¡, -
$str
¡¡- /
,
¡¡/ 0
Encoding
¡¡1 9
.
¡¡9 :
UTF8
¡¡: >
)
¡¡> ?
;
¡¡? @
resp
¢¢ 
.
¢¢ 
	AddHeader
¢¢ 
(
¢¢ 
$str
¢¢ )
,
¢¢) *
$str
¢¢+ >
+
¢¢? @
data
¢¢A E
)
¢¢E F
;
¢¢F G
}
££ 
}
¤¤ 	
}
¥¥ 
public
§§ 

override
§§ 
void
§§ 
Good
§§ 
(
§§ 
HttpRequest
§§ )
req
§§* -
,
§§- .
HttpResponse
§§/ ;
resp
§§< @
)
§§@ A
{
¨¨ 
GoodG2B1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodG2B2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
GoodB2G1
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodB2G2
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 
}¯¯ 
}°° =
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_07 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data)) 
=)) 
req)) 
.)) 
Params)) 
.)) 
Get)) !
())! "
$str))" (
)))( )
;))) *
}** 	
else++ 
{,, 	
data// 
=// 
null// 
;// 
}00 	
if11 

(11 
privateFive11 
==11 
$num11 
)11 
{22 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp66 
.66 
	AddHeader66 
(66 
$str66 )
,66) *
$str66+ >
+66? @
data66A E
)66E F
;66F G
}77 
}88 	
}99 
private== 
void== 
GoodG2B1== 
(== 
HttpRequest== %
req==& )
,==) *
HttpResponse==+ 7
resp==8 <
)==< =
{>> 
string?? 
data?? 
;?? 
if@@ 

(@@ 
privateFive@@ 
!=@@ 
$num@@ 
)@@ 
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
elseFF 
{GG 	
dataII 
=II 
$strII 
;II 
}JJ 	
ifKK 

(KK 
privateFiveKK 
==KK 
$numKK 
)KK 
{LL 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respPP 
.PP 
	AddHeaderPP 
(PP 
$strPP )
,PP) *
$strPP+ >
+PP? @
dataPPA E
)PPE F
;PPF G
}QQ 
}RR 	
}SS 
privateVV 
voidVV 
GoodG2B2VV 
(VV 
HttpRequestVV %
reqVV& )
,VV) *
HttpResponseVV+ 7
respVV8 <
)VV< =
{WW 
stringXX 
dataXX 
;XX 
ifYY 

(YY 
privateFiveYY 
==YY 
$numYY 
)YY 
{ZZ 	
data\\ 
=\\ 
$str\\ 
;\\ 
}]] 	
else^^ 
{__ 	
databb 
=bb 
nullbb 
;bb 
}cc 	
ifdd 

(dd 
privateFivedd 
==dd 
$numdd 
)dd 
{ee 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respii 
.ii 
	AddHeaderii 
(ii 
$strii )
,ii) *
$strii+ >
+ii? @
dataiiA E
)iiE F
;iiF G
}jj 
}kk 	
}ll 
privateoo 
voidoo 
GoodB2G1oo 
(oo 
HttpRequestoo %
reqoo& )
,oo) *
HttpResponseoo+ 7
respoo8 <
)oo< =
{pp 
stringqq 
dataqq 
;qq 
ifrr 

(rr 
privateFiverr 
==rr 
$numrr 
)rr 
{ss 	
datauu 
=uu 
requu 
.uu 
Paramsuu 
.uu 
Getuu !
(uu! "
$struu" (
)uu( )
;uu) *
}vv 	
elseww 
{xx 	
data{{ 
={{ 
null{{ 
;{{ 
}|| 	
if}} 

(}} 
privateFive}} 
!=}} 
$num}} 
)}} 
{~~ 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
   
data
¡¡ 
=
¡¡ 
HttpUtility
¡¡ "
.
¡¡" #
	UrlEncode
¡¡# ,
(
¡¡, -
$str
¡¡- /
,
¡¡/ 0
Encoding
¡¡1 9
.
¡¡9 :
UTF8
¡¡: >
)
¡¡> ?
;
¡¡? @
resp
¢¢ 
.
¢¢ 
	AddHeader
¢¢ 
(
¢¢ 
$str
¢¢ )
,
¢¢) *
$str
¢¢+ >
+
¢¢? @
data
¢¢A E
)
¢¢E F
;
¢¢F G
}
££ 
}
¤¤ 	
}
¥¥ 
public
§§ 

override
§§ 
void
§§ 
Good
§§ 
(
§§ 
HttpRequest
§§ )
req
§§* -
,
§§- .
HttpResponse
§§/ ;
resp
§§< @
)
§§@ A
{
¨¨ 
GoodG2B1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodG2B2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
GoodB2G1
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodB2G2
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 
}¯¯ 
}°° î?
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_08 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public++ 

override++ 
void++ 
Bad++ 
(++ 
HttpRequest++ (
req++) ,
,++, -
HttpResponse++. :
resp++; ?
)++? @
{,, 
string-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data11 
=11 
req11 
.11 
Params11 
.11 
Get11 !
(11! "
$str11" (
)11( )
;11) *
}22 	
else33 
{44 	
data77 
=77 
null77 
;77 
}88 	
if99 

(99 
PrivateReturnsTrue99 
(99 
)99  
)99  !
{:: 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
resp>> 
.>> 
	AddHeader>> 
(>> 
$str>> )
,>>) *
$str>>+ >
+>>? @
data>>A E
)>>E F
;>>F G
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
PrivateReturnsFalseHH 
(HH  
)HH  !
)HH! "
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
PrivateReturnsTrueSS 
(SS 
)SS  
)SS  !
{TT 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 
respXX 
.XX 
	AddHeaderXX 
(XX 
$strXX )
,XX) *
$strXX+ >
+XX? @
dataXXA E
)XXE F
;XXF G
}YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodG2B2^^ 
(^^ 
HttpRequest^^ %
req^^& )
,^^) *
HttpResponse^^+ 7
resp^^8 <
)^^< =
{__ 
string`` 
data`` 
;`` 
ifaa 

(aa 
PrivateReturnsTrueaa 
(aa 
)aa  
)aa  !
{bb 	
datadd 
=dd 
$strdd 
;dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
ifll 

(ll 
PrivateReturnsTruell 
(ll 
)ll  
)ll  !
{mm 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 
respqq 
.qq 
	AddHeaderqq 
(qq 
$strqq )
,qq) *
$strqq+ >
+qq? @
dataqqA E
)qqE F
;qqF G
}rr 
}ss 	
}tt 
privateww 
voidww 
GoodB2G1ww 
(ww 
HttpRequestww %
reqww& )
,ww) *
HttpResponseww+ 7
respww8 <
)ww< =
{xx 
stringyy 
datayy 
;yy 
ifzz 

(zz 
PrivateReturnsTruezz 
(zz 
)zz  
)zz  !
{{{ 	
data}} 
=}} 
req}} 
.}} 
Params}} 
.}} 
Get}} !
(}}! "
$str}}" (
)}}( )
;}}) *
}~~ 	
else 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
}
££ 	
if
¤¤ 

(
¤¤  
PrivateReturnsTrue
¤¤ 
(
¤¤ 
)
¤¤  
)
¤¤  !
{
¥¥ 	
if
§§ 
(
§§ 
data
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
¨¨ 
data
©© 
=
©© 
HttpUtility
©© "
.
©©" #
	UrlEncode
©©# ,
(
©©, -
$str
©©- /
,
©©/ 0
Encoding
©©1 9
.
©©9 :
UTF8
©©: >
)
©©> ?
;
©©? @
resp
ªª 
.
ªª 
	AddHeader
ªª 
(
ªª 
$str
ªª )
,
ªª) *
$str
ªª+ >
+
ªª? @
data
ªªA E
)
ªªE F
;
ªªF G
}
«« 
}
¬¬ 	
}
­­ 
public
¯¯ 

override
¯¯ 
void
¯¯ 
Good
¯¯ 
(
¯¯ 
HttpRequest
¯¯ )
req
¯¯* -
,
¯¯- .
HttpResponse
¯¯/ ;
resp
¯¯< @
)
¯¯@ A
{
°° 
GoodG2B1
±± 
(
±± 
req
±± 
,
±± 
resp
±± 
)
±± 
;
±± 
GoodG2B2
²² 
(
²² 
req
²² 
,
²² 
resp
²² 
)
²² 
;
²² 
GoodB2G1
³³ 
(
³³ 
req
³³ 
,
³³ 
resp
³³ 
)
³³ 
;
³³ 
GoodB2G2
´´ 
(
´´ 
req
´´ 
,
´´ 
resp
´´ 
)
´´ 
;
´´ 
}
µµ 
}·· 
}¸¸ Ä<
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_09 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,,  
STATIC_READONLY_TRUE,, #
),,# $
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; !
STATIC_READONLY_FALSE;; $
);;$ %
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF  
STATIC_READONLY_TRUEFF #
)FF# $
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT  
STATIC_READONLY_TRUETT #
)TT# $
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__  
STATIC_READONLY_TRUE__ #
)__# $
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm  
STATIC_READONLY_TRUEmm #
)mm# $
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx !
STATIC_READONLY_FALSExx $
)xx$ %
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« à;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_10 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,, 

staticTrue,, 
),, 
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; 
staticFalse;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF 

staticTrueFF 
)FF 
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT 

staticTrueTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__ 

staticTrue__ 
)__ 
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm 

staticTruemm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx 
staticFalsexx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« Ú>
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_11 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,,
 
IO,, 
.,, 
StaticReturnsTrue,, 
(,,  
),,  !
),,! "
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; 
StaticReturnsFalse;; !
(;;! "
);;" #
);;# $
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF 
StaticReturnsTrueFF  
(FF  !
)FF! "
)FF" #
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT 
StaticReturnsTrueTT  
(TT  !
)TT! "
)TT" #
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__ 
StaticReturnsTrue__  
(__  !
)__! "
)__" #
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm 
StaticReturnsTruemm  
(mm  !
)mm! "
)mm" #
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx 
StaticReturnsFalsexx !
(xx! "
)xx" #
)xx# $
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« é2
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_12 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!!
 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! &
(!!& '
)!!' (
)!!( )
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data)) 
=)) 
$str)) 
;)) 
}** 	
if++ 

(++
 
IO++ 
.++ $
StaticReturnsTrueOrFalse++ &
(++& '
)++' (
)++( )
{,, 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp00 
.00 
	AddHeader00 
(00 
$str00 )
,00) *
$str00+ >
+00? @
data00A E
)00E F
;00F G
}11 
}22 	
else33 
{44 	
if66 
(66 
data66 
!=66 
null66 
)66 
{77 
data88 
=88 
HttpUtility88 "
.88" #
	UrlEncode88# ,
(88, -
$str88- /
,88/ 0
Encoding881 9
.889 :
UTF888: >
)88> ?
;88? @
resp99 
.99 
	AddHeader99 
(99 
$str99 )
,99) *
$str99+ >
+99? @
data99A E
)99E F
;99F G
}:: 
};; 	
}<< 
privateAA 
voidAA 
GoodG2BAA 
(AA 
HttpRequestAA $
reqAA% (
,AA( )
HttpResponseAA* 6
respAA7 ;
)AA; <
{BB 
stringCC 
dataCC 
;CC 
ifDD 

(DD
 
IODD 
.DD $
StaticReturnsTrueOrFalseDD &
(DD& '
)DD' (
)DD( )
{EE 	
dataGG 
=GG 
$strGG 
;GG 
}HH 	
elseII 
{JJ 	
dataLL 
=LL 
$strLL 
;LL 
}MM 	
ifNN 

(NN
 
IONN 
.NN $
StaticReturnsTrueOrFalseNN &
(NN& '
)NN' (
)NN( )
{OO 	
ifQQ 
(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 
respSS 
.SS 
	AddHeaderSS 
(SS 
$strSS )
,SS) *
$strSS+ >
+SS? @
dataSSA E
)SSE F
;SSF G
}TT 
}UU 	
elseVV 
{WW 	
ifYY 
(YY 
dataYY 
!=YY 
nullYY 
)YY 
{ZZ 
resp[[ 
.[[ 
	AddHeader[[ 
([[ 
$str[[ )
,[[) *
$str[[+ >
+[[? @
data[[A E
)[[E F
;[[F G
}\\ 
}]] 	
}^^ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee
 
IOee 
.ee $
StaticReturnsTrueOrFalseee &
(ee& '
)ee' (
)ee( )
{ff 	
datahh 
=hh 
reqhh 
.hh 
Paramshh 
.hh 
Gethh !
(hh! "
$strhh" (
)hh( )
;hh) *
}ii 	
elsejj 
{kk 	
datamm 
=mm 
reqmm 
.mm 
Paramsmm 
.mm 
Getmm !
(mm! "
$strmm" (
)mm( )
;mm) *
}nn 	
ifoo 

(oo
 
IOoo 
.oo $
StaticReturnsTrueOrFalseoo &
(oo& '
)oo' (
)oo( )
{pp 	
ifrr 
(rr 
datarr 
!=rr 
nullrr 
)rr 
{ss 
datatt 
=tt 
HttpUtilitytt "
.tt" #
	UrlEncodett# ,
(tt, -
$strtt- /
,tt/ 0
Encodingtt1 9
.tt9 :
UTF8tt: >
)tt> ?
;tt? @
respuu 
.uu 
	AddHeaderuu 
(uu 
$struu )
,uu) *
$struu+ >
+uu? @
datauuA E
)uuE F
;uuF G
}vv 
}ww 	
elsexx 
{yy 	
if{{ 
({{ 
data{{ 
!={{ 
null{{ 
){{ 
{|| 
data}} 
=}} 
HttpUtility}} "
.}}" #
	UrlEncode}}# ,
(}}, -
$str}}- /
,}}/ 0
Encoding}}1 9
.}}9 :
UTF8}}: >
)}}> ?
;}}? @
resp~~ 
.~~ 
	AddHeader~~ 
(~~ 
$str~~ )
,~~) *
$str~~+ >
+~~? @
data~~A E
)~~E F
;~~F G
} 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} ?
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_13 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!# %
$num!!% &
)!!& '
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,,  
STATIC_READONLY_FIVE,, #
==,,# %
$num,,% &
),,& '
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;;  
STATIC_READONLY_FIVE;; #
!=;;# %
$num;;% &
);;& '
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF  
STATIC_READONLY_FIVEFF #
==FF# %
$numFF% &
)FF& '
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT  
STATIC_READONLY_FIVETT #
==TT# %
$numTT% &
)TT& '
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__  
STATIC_READONLY_FIVE__ #
==__# %
$num__% &
)__& '
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm  
STATIC_READONLY_FIVEmm #
==mm# %
$nummm% &
)mm& '
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx  
STATIC_READONLY_FIVExx #
!=xx# %
$numxx% &
)xx& '
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« º>
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_14 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,, 

staticFive,, 
==,, 
$num,, 
),, 
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; 

staticFive;; 
!=;; 
$num;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF 

staticFiveFF 
==FF 
$numFF 
)FF 
{GG 	
ifII 
(II 
dataII 
!=II 
nullII 
)II 
{JJ 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT 

staticFiveTT 
==TT 
$numTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__ 

staticFive__ 
==__ 
$num__ 
)__ 
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm 

staticFivemm 
==mm 
$nummm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx 

staticFivexx 
!=xx 
$numxx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« èG
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_15 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" (
)%%( )
;%%) *
break&& 
;&& 
default'' 
:'' 
data** 
=** 
null** 
;** 
break++ 
;++ 
},, 	
switch-- 
(-- 
$num-- 
)-- 
{.. 	
case// 
$num// 
:// 
if11 
(11 
data11 
!=11 
null11 
)11 
{22 
resp33 
.33 
	AddHeader33 
(33 
$str33 )
,33) *
$str33+ >
+33? @
data33A E
)33E F
;33F G
}44 
break55 
;55 
default66 
:66 
IO88 
.88 
	WriteLine88 
(88 
$str88 /
)88/ 0
;880 1
break99 
;99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
switchBB 
(BB 
$numBB 
)BB 
{CC 	
caseDD 
$numDD 
:DD 
dataGG 
=GG 
nullGG 
;GG 
breakHH 
;HH 
defaultII 
:II 
dataKK 
=KK 
$strKK 
;KK 
breakLL 
;LL 
}MM 	
switchNN 
(NN 
$numNN 
)NN 
{OO 	
casePP 
$numPP 
:PP 
ifRR 
(RR 
dataRR 
!=RR 
nullRR 
)RR 
{SS 
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT )
,TT) *
$strTT+ >
+TT? @
dataTTA E
)TTE F
;TTF G
}UU 
breakVV 
;VV 
defaultWW 
:WW 
IOYY 
.YY 
	WriteLineYY 
(YY 
$strYY /
)YY/ 0
;YY0 1
breakZZ 
;ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
switchbb 
(bb 
$numbb 
)bb 
{cc 	
casedd 
$numdd 
:dd 
dataff 
=ff 
$strff 
;ff 
breakgg 
;gg 
defaulthh 
:hh 
datakk 
=kk 
nullkk 
;kk 
breakll 
;ll 
}mm 	
switchnn 
(nn 
$numnn 
)nn 
{oo 	
casepp 
$numpp 
:pp 
ifrr 
(rr 
datarr 
!=rr 
nullrr 
)rr 
{ss 
resptt 
.tt 
	AddHeadertt 
(tt 
$strtt )
,tt) *
$strtt+ >
+tt? @
datattA E
)ttE F
;ttF G
}uu 
breakvv 
;vv 
defaultww 
:ww 
IOyy 
.yy 
	WriteLineyy 
(yy 
$stryy /
)yy/ 0
;yy0 1
breakzz 
;zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
break
 
;
 
default
 
:
 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
default
 
:
 
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
switch
££ 
(
££ 
$num
££ 
)
££ 
{
¤¤ 	
case
¥¥ 
$num
¥¥ 
:
¥¥ 
data
§§ 
=
§§ 
req
§§ 
.
§§ 
Params
§§ 
.
§§ 
Get
§§ !
(
§§! "
$str
§§" (
)
§§( )
;
§§) *
break
¨¨ 
;
¨¨ 
default
©© 
:
©© 
data
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
break
­­ 
;
­­ 
}
®® 	
switch
¯¯ 
(
¯¯ 
$num
¯¯ 
)
¯¯ 
{
°° 	
case
±± 
$num
±± 
:
±± 
if
³³ 
(
³³ 
data
³³ 
!=
³³ 
null
³³ 
)
³³ 
{
´´ 
data
µµ 
=
µµ 
HttpUtility
µµ "
.
µµ" #
	UrlEncode
µµ# ,
(
µµ, -
$str
µµ- /
,
µµ/ 0
Encoding
µµ1 9
.
µµ9 :
UTF8
µµ: >
)
µµ> ?
;
µµ? @
resp
¶¶ 
.
¶¶ 
	AddHeader
¶¶ 
(
¶¶ 
$str
¶¶ )
,
¶¶) *
$str
¶¶+ >
+
¶¶? @
data
¶¶A E
)
¶¶E F
;
¶¶F G
}
·· 
break
¸¸ 
;
¸¸ 
default
¹¹ 
:
¹¹ 
IO
»» 
.
»» 
	WriteLine
»» 
(
»» 
$str
»» /
)
»»/ 0
;
»»0 1
break
¼¼ 
;
¼¼ 
}
½½ 	
}
¾¾ 
public
ÀÀ 

override
ÀÀ 
void
ÀÀ 
Good
ÀÀ 
(
ÀÀ 
HttpRequest
ÀÀ )
req
ÀÀ* -
,
ÀÀ- .
HttpResponse
ÀÀ/ ;
resp
ÀÀ< @
)
ÀÀ@ A
{
ÁÁ 
GoodG2B1
ÂÂ 
(
ÂÂ 
req
ÂÂ 
,
ÂÂ 
resp
ÂÂ 
)
ÂÂ 
;
ÂÂ 
GoodG2B2
ÃÃ 
(
ÃÃ 
req
ÃÃ 
,
ÃÃ 
resp
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÄÄ 
(
ÄÄ 
req
ÄÄ 
,
ÄÄ 
resp
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodB2G2
ÅÅ 
(
ÅÅ 
req
ÅÅ 
,
ÅÅ 
resp
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÆÆ 
}ÈÈ 
}ÉÉ Ö 
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_16 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
break%% 
;%% 
}&& 	
while'' 
('' 
true'' 
)'' 
{(( 	
if** 
(** 
data** 
!=** 
null** 
)** 
{++ 
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, )
,,,) *
$str,,+ >
+,,? @
data,,A E
),,E F
;,,F G
}-- 
break.. 
;.. 
}// 	
}00 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
while77 
(77 
true77 
)77 
{88 	
data:: 
=:: 
$str:: 
;:: 
break;; 
;;; 
}<< 	
while== 
(== 
true== 
)== 
{>> 	
if@@ 
(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB )
,BB) *
$strBB+ >
+BB? @
dataBBA E
)BBE F
;BBF G
}CC 
breakDD 
;DD 
}EE 	
}FF 
privateII 
voidII 
GoodB2GII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataKK 
;KK 
whileLL 
(LL 
trueLL 
)LL 
{MM 	
dataOO 
=OO 
reqOO 
.OO 
ParamsOO 
.OO 
GetOO !
(OO! "
$strOO" (
)OO( )
;OO) *
breakPP 
;PP 
}QQ 	
whileRR 
(RR 
trueRR 
)RR 
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
dataWW 
=WW 
HttpUtilityWW "
.WW" #
	UrlEncodeWW# ,
(WW, -
$strWW- /
,WW/ 0
EncodingWW1 9
.WW9 :
UTF8WW: >
)WW> ?
;WW? @
respXX 
.XX 
	AddHeaderXX 
(XX 
$strXX )
,XX) *
$strXX+ >
+XX? @
dataXXA E
)XXE F
;XXF G
}YY 
breakZZ 
;ZZ 
}[[ 	
}\\ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
HttpRequest^^ )
req^^* -
,^^- .
HttpResponse^^/ ;
resp^^< @
)^^@ A
{__ 
GoodG2B`` 
(`` 
req`` 
,`` 
resp`` 
)`` 
;`` 
GoodB2Gaa 
(aa 
reqaa 
,aa 
respaa 
)aa 
;aa 
}bb 
}dd 
}ee µ 
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_17 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data&& 
=&& 
req&& 
.&& 
Params&& 
.&& 
Get&& 
(&& 
$str&& $
)&&$ %
;&&% &
for'' 
('' 
int'' 
j'' 
='' 
$num'' 
;'' 
j'' 
<'' 
$num'' 
;'' 
j''  
++''  "
)''" #
{(( 	
if** 
(** 
data** 
!=** 
null** 
)** 
{++ 
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, )
,,,) *
$str,,+ >
+,,? @
data,,A E
),,E F
;,,F G
}-- 
}.. 	
}// 
private33 
void33 
GoodG2B33 
(33 
HttpRequest33 $
req33% (
,33( )
HttpResponse33* 6
resp337 ;
)33; <
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 
for88 
(88 
int88 
j88 
=88 
$num88 
;88 
j88 
<88 
$num88 
;88 
j88  
++88  "
)88" #
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
reqGG 
.GG 
ParamsGG 
.GG 
GetGG 
(GG 
$strGG $
)GG$ %
;GG% &
forHH 
(HH 
intHH 
kHH 
=HH 
$numHH 
;HH 
kHH 
<HH 
$numHH 
;HH 
kHH  
++HH  "
)HH" #
{II 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
$strMM- /
,MM/ 0
EncodingMM1 9
.MM9 :
UTF8MM: >
)MM> ?
;MM? @
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
HttpRequestSS )
reqSS* -
,SS- .
HttpResponseSS/ ;
respSS< @
)SS@ A
{TT 
GoodG2BUU 
(UU 
reqUU 
,UU 
respUU 
)UU 
;UU 
GoodB2GVV 
(VV 
reqVV 
,VV 
respVV 
)VV 
;VV 
}WW 
}YY 
}ZZ Ò;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_21 E
:F G
AbstractTestCaseWebH [
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &

badPrivate&& 
=&& 
true&& 
;&& 
BadSink'' 
('' 
data'' 
,'' 
req'' 
,'' 
resp''  
)''  !
;''! "
}(( 
private** 
void** 
BadSink** 
(** 
string** 
data**  $
,**% &
HttpRequest**' 2
req**3 6
,**6 7
HttpResponse**8 D
resp**E I
)**I J
{++ 
if,, 

(,, 

badPrivate,, 
),, 
{-- 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private77 
bool77 
goodB2G1Private77  
=77! "
false77# (
;77( )
private88 
bool88 
goodB2G2Private88  
=88! "
false88# (
;88( )
private99 
bool99 
goodG2BPrivate99 
=99  !
false99" '
;99' (
public;; 

override;; 
void;; 
Good;; 
(;; 
HttpRequest;; )
req;;* -
,;;- .
HttpResponse;;/ ;
resp;;< @
);;@ A
{<< 
GoodB2G1== 
(== 
req== 
,== 
resp== 
)== 
;== 
GoodB2G2>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodB2G1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
reqGG 
.GG 
ParamsGG 
.GG 
GetGG 
(GG 
$strGG $
)GG$ %
;GG% &
goodB2G1PrivateHH 
=HH 
falseHH 
;HH  
GoodB2G1SinkII 
(II 
dataII 
,II 
reqII 
,II  
respII! %
)II% &
;II& '
}JJ 
privateLL 
voidLL 
GoodB2G1SinkLL 
(LL 
stringLL $
dataLL% )
,LL* +
HttpRequestLL, 7
reqLL8 ;
,LL; <
HttpResponseLL= I
respLLJ N
)LLN O
{MM 
ifNN 

(NN 
goodB2G1PrivateNN 
)NN 
{OO 	
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
$strQQ /
)QQ/ 0
;QQ0 1
}RR 	
elseSS 
{TT 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 
dataXX 
=XX 
HttpUtilityXX "
.XX" #
	UrlEncodeXX# ,
(XX, -
$strXX- /
,XX/ 0
EncodingXX1 9
.XX9 :
UTF8XX: >
)XX> ?
;XX? @
respYY 
.YY 
	AddHeaderYY 
(YY 
$strYY )
,YY) *
$strYY+ >
+YY? @
dataYYA E
)YYE F
;YYF G
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodB2G2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
datacc 
=cc 
reqcc 
.cc 
Paramscc 
.cc 
Getcc 
(cc 
$strcc $
)cc$ %
;cc% &
goodB2G2Privatedd 
=dd 
truedd 
;dd 
GoodB2G2Sinkee 
(ee 
dataee 
,ee 
reqee 
,ee  
respee! %
)ee% &
;ee& '
}ff 
privatehh 
voidhh 
GoodB2G2Sinkhh 
(hh 
stringhh $
datahh% )
,hh* +
HttpRequesthh, 7
reqhh8 ;
,hh; <
HttpResponsehh= I
resphhJ N
)hhN O
{ii 
ifjj 

(jj 
goodB2G2Privatejj 
)jj 
{kk 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
dataoo 
=oo 
HttpUtilityoo "
.oo" #
	UrlEncodeoo# ,
(oo, -
$stroo- /
,oo/ 0
Encodingoo1 9
.oo9 :
UTF8oo: >
)oo> ?
;oo? @
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodG2Bvv 
(vv 
HttpRequestvv $
reqvv% (
,vv( )
HttpResponsevv* 6
respvv7 ;
)vv; <
{ww 
stringxx 
dataxx 
;xx 
datazz 
=zz 
$strzz 
;zz 
goodG2BPrivate{{ 
={{ 
true{{ 
;{{ 
GoodG2BSink|| 
(|| 
data|| 
,|| 
req|| 
,|| 
resp||  $
)||$ %
;||% &
}}} 
private 
void 
GoodG2BSink 
( 
string #
data$ (
,) *
HttpRequest+ 6
req7 :
,: ;
HttpResponse< H
respI M
)M N
{
 
if
 

(
 
goodG2BPrivate
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
} 
} ¿%
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22a F
:G H
AbstractTestCaseWebI \
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
=## 
null## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &
badPublicStatic&& 
=&& 
true&& 
;&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22b'' H
.''H I
BadSink''I P
(''P Q
data''Q U
,''V W
req''X [
,''[ \
resp''] a
)''a b
;''b c
}(( 
public++ 

static++ 
bool++  
goodB2G1PublicStatic++ +
=++, -
false++. 3
;++3 4
public,, 

static,, 
bool,,  
goodB2G2PublicStatic,, +
=,,, -
false,,. 3
;,,3 4
public-- 

static-- 
bool-- 
goodG2BPublicStatic-- *
=--+ ,
false--- 2
;--2 3
public// 

override// 
void// 
Good// 
(// 
HttpRequest// )
req//* -
,//- .
HttpResponse/// ;
resp//< @
)//@ A
{00 
GoodB2G111 
(11 
req11 
,11 
resp11 
)11 
;11 
GoodB2G222 
(22 
req22 
,22 
resp22 
)22 
;22 
GoodG2B33 
(33 
req33 
,33 
resp33 
)33 
;33 
}44 
private77 
void77 
GoodB2G177 
(77 
HttpRequest77 %
req77& )
,77) *
HttpResponse77+ 7
resp778 <
)77< =
{88 
string99 
data99 
=99 
null99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% & 
goodB2G1PublicStatic<< 
=<< 
false<< $
;<<$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22b== H
.==H I
GoodB2G1Sink==I U
(==U V
data==V Z
,==[ \
req==] `
,==` a
resp==b f
)==f g
;==g h
}>> 
privateAA 
voidAA 
GoodB2G2AA 
(AA 
HttpRequestAA %
reqAA& )
,AA) *
HttpResponseAA+ 7
respAA8 <
)AA< =
{BB 
stringCC 
dataCC 
=CC 
nullCC 
;CC 
dataEE 
=EE 
reqEE 
.EE 
ParamsEE 
.EE 
GetEE 
(EE 
$strEE $
)EE$ %
;EE% & 
goodB2G2PublicStaticFF 
=FF 
trueFF #
;FF# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22bGG H
.GGH I
GoodB2G2SinkGGI U
(GGU V
dataGGV Z
,GG[ \
reqGG] `
,GG` a
respGGb f
)GGf g
;GGg h
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
HttpRequestKK $
reqKK% (
,KK( )
HttpResponseKK* 6
respKK7 ;
)KK; <
{LL 
stringMM 
dataMM 
=MM 
nullMM 
;MM 
dataOO 
=OO 
$strOO 
;OO 
goodG2BPublicStaticPP 
=PP 
truePP "
;PP" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22bQQ H
.QQH I
GoodG2BSinkQQI T
(QQT U
dataQQU Y
,QQZ [
reqQQ\ _
,QQ_ `
respQQa e
)QQe f
;QQf g
}RR 
}TT 
}UU ü#
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22a L
.L M
badPublicStaticM \
)\ ]
{   	
if"" 
("" 
data"" 
!="" 
null"" 
)"" 
{## 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22a44 L
.44L M 
goodB2G1PublicStatic44M a
)44a b
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
$str??- /
,??/ 0
Encoding??1 9
.??9 :
UTF8??: >
)??> ?
;??? @
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22aHH L
.HHL M 
goodB2G2PublicStaticHHM a
)HHa b
{II 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
$strMM- /
,MM/ 0
EncodingMM1 9
.MM9 :
UTF8MM: >
)MM> ?
;MM? @
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_22a\\ L
.\\L M
goodG2BPublicStatic\\M `
)\\` a
{]] 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm !
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_31 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
dataCopy   
;   
{!! 	
string"" 
data"" 
;"" 
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
dataCopy%% 
=%% 
data%% 
;%% 
}&& 	
{'' 	
string(( 
data(( 
=(( 
dataCopy(( "
;((" #
if** 
(** 
data** 
!=** 
null** 
)** 
{++ 
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, )
,,,) *
$str,,+ >
+,,? @
data,,A E
),,E F
;,,F G
}-- 
}.. 	
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
void99 
GoodG2B99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
dataCopy;; 
;;; 
{<< 	
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? 
dataCopy@@ 
=@@ 
data@@ 
;@@ 
}AA 	
{BB 	
stringCC 
dataCC 
=CC 
dataCopyCC "
;CC" #
ifEE 
(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 
respGG 
.GG 
	AddHeaderGG 
(GG 
$strGG )
,GG) *
$strGG+ >
+GG? @
dataGGA E
)GGE F
;GGF G
}HH 
}II 	
}JJ 
privateMM 
voidMM 
GoodB2GMM 
(MM 
HttpRequestMM $
reqMM% (
,MM( )
HttpResponseMM* 6
respMM7 ;
)MM; <
{NN 
stringOO 
dataCopyOO 
;OO 
{PP 	
stringQQ 
dataQQ 
;QQ 
dataSS 
=SS 
reqSS 
.SS 
ParamsSS 
.SS 
GetSS !
(SS! "
$strSS" (
)SS( )
;SS) *
dataCopyTT 
=TT 
dataTT 
;TT 
}UU 	
{VV 	
stringWW 
dataWW 
=WW 
dataCopyWW "
;WW" #
ifYY 
(YY 
dataYY 
!=YY 
nullYY 
)YY 
{ZZ 
data[[ 
=[[ 
HttpUtility[[ "
.[[" #
	UrlEncode[[# ,
([[, -
$str[[- /
,[[/ 0
Encoding[[1 9
.[[9 :
UTF8[[: >
)[[> ?
;[[? @
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
}aa 
}bb ­%
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_41 E
:F G
AbstractTestCaseWebH [
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
data++ 
=++ 
req++ 
.++ 
Params++ 
.++ 
Get++ 
(++ 
$str++ $
)++$ %
;++% &
BadSink,, 
(,, 
data,, 
,,, 
req,, 
,,, 
resp,,  
),,! "
;,," #
}-- 
public00 

override00 
void00 
Good00 
(00 
HttpRequest00 )
req00* -
,00- .
HttpResponse00/ ;
resp00< @
)00@ A
{11 
GoodG2B22 
(22 
req22 
,22 
resp22 
)22 
;22 
GoodB2G33 
(33 
req33 
,33 
resp33 
)33 
;33 
}44 
private66 
static66 
void66 
GoodG2BSink66 #
(66# $
string66$ *
data66+ /
,660 1
HttpRequest662 =
req66> A
,66A B
HttpResponse66C O
resp66P T
)66T U
{77 
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
resp;; 
.;; 
	AddHeader;; 
(;; 
$str;; %
,;;% &
$str;;' :
+;;; <
data;;= A
);;A B
;;;B C
}<< 	
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
$strDD 
;DD 
GoodG2BSinkEE 
(EE 
dataEE 
,EE 
reqEE 
,EE 
respEE  $
)EE% &
;EE& '
}FF 
privateHH 
staticHH 
voidHH 
GoodB2GSinkHH #
(HH# $
stringHH$ *
dataHH+ /
,HH0 1
HttpRequestHH2 =
reqHH> A
,HHA B
HttpResponseHHC O
respHHP T
)HHT U
{II 
ifKK 

(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 	
dataMM 
=MM 
HttpUtilityMM 
.MM 
	UrlEncodeMM (
(MM( )
$strMM) +
,MM+ ,
EncodingMM- 5
.MM5 6
UTF8MM6 :
)MM: ;
;MM; <
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN %
,NN% &
$strNN' :
+NN; <
dataNN= A
)NNA B
;NNB C
}OO 	
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
HttpRequestSS  +
reqSS, /
,SS/ 0
HttpResponseSS1 =
respSS> B
)SSB C
{TT 
stringUU 
dataUU 
;UU 
dataWW 
=WW 
reqWW 
.WW 
ParamsWW 
.WW 
GetWW 
(WW 
$strWW $
)WW$ %
;WW% &
GoodB2GSinkXX 
(XX 
dataXX 
,XX 
reqXX 
,XX 
respXX  $
)XX% &
;XX& '
}YY 
}[[ 
}\\ û%
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_42 E
:F G
AbstractTestCaseWebH [
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
return## 
data## 
;## 
}$$ 
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
=(( 
	BadSource(( 
(((  
req((  #
,((# $
resp((% )
)(() *
;((* +
if** 

(** 
data** 
!=** 
null** 
)** 
{++ 	
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, %
,,,% &
$str,,' :
+,,; <
data,,= A
),,A B
;,,B C
}-- 	
}.. 
private22 
static22 
string22 
GoodG2BSource22 '
(22' (
HttpRequest22( 3
req224 7
,227 8
HttpResponse229 E
resp22F J
)22J K
{33 
string44 
data44 
;44 
data66 
=66 
$str66 
;66 
return77 
data77 
;77 
}88 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< 
GoodG2BSource<< #
(<<# $
req<<$ '
,<<' (
resp<<) -
)<<- .
;<<. /
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ %
,@@% &
$str@@' :
+@@; <
data@@= A
)@@A B
;@@B C
}AA 	
}BB 
privateEE 
staticEE 
stringEE 
GoodB2GSourceEE '
(EE' (
HttpRequestEE( 3
reqEE4 7
,EE7 8
HttpResponseEE9 E
respEEF J
)EEJ K
{FF 
stringGG 
dataGG 
;GG 
dataII 
=II 
reqII 
.II 
ParamsII 
.II 
GetII 
(II 
$strII $
)II$ %
;II% &
returnJJ 
dataJJ 
;JJ 
}KK 
privateMM 
staticMM 
voidMM 
GoodB2GMM 
(MM  
HttpRequestMM  +
reqMM, /
,MM/ 0
HttpResponseMM1 =
respMM> B
)MMB C
{NN 
stringOO 
dataOO 
=OO 
GoodB2GSourceOO #
(OO# $
reqOO$ '
,OO' (
respOO) -
)OO- .
;OO. /
ifQQ 

(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
dataSS 
=SS 
HttpUtilitySS 
.SS 
	UrlEncodeSS (
(SS( )
$strSS) +
,SS+ ,
EncodingSS- 5
.SS5 6
UTF8SS6 :
)SS: ;
;SS; <
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT %
,TT% &
$strTT' :
+TT; <
dataTT= A
)TTA B
;TTB C
}UU 	
}VV 
publicXX 

overrideXX 
voidXX 
GoodXX 
(XX 
HttpRequestXX )
reqXX* -
,XX- .
HttpResponseXX/ ;
respXX< @
)XX@ A
{YY 
GoodG2BZZ 
(ZZ 
reqZZ 
,ZZ 
respZZ 
)ZZ 
;ZZ 
GoodB2G[[ 
([[ 
req[[ 
,[[ 
resp[[ 
)[[ 
;[[ 
}\\ 
}^^ 
}__  (
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_45 E
:F G
AbstractTestCaseWebH [
{ 
private 
string 
dataBad 
; 
private 
string 
dataGoodG2B 
; 
private   
string   
dataGoodB2G   
;   
private"" 
void"" 
BadSink"" 
("" 
HttpRequest"" $
req""% (
,""( )
HttpResponse""* 6
resp""7 ;
)""; <
{## 
string$$ 
data$$ 
=$$ 
dataBad$$ 
;$$ 
if&& 

(&& 
data&& 
!=&& 
null&& 
)&& 
{'' 	
resp(( 
.(( 
	AddHeader(( 
((( 
$str(( %
,((% &
$str((' :
+((; <
data((= A
)((A B
;((B C
})) 	
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
data00 
=00 
req00 
.00 
Params00 
.00 
Get00 
(00 
$str00 $
)00$ %
;00% &
dataBad11 
=11 
data11 
;11 
BadSink22 
(22 
req22 
,22 
resp22 
)22 
;22 
}33 
public66 

override66 
void66 
Good66 
(66 
HttpRequest66 )
req66* -
,66- .
HttpResponse66/ ;
resp66< @
)66@ A
{77 
GoodG2B88 
(88 
req88 
,88 
resp88 
)88 
;88 
GoodB2G99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
private<< 
void<< 
GoodG2BSink<< 
(<< 
HttpRequest<< (
req<<) ,
,<<, -
HttpResponse<<. :
resp<<; ?
)<<? @
{== 
string>> 
data>> 
=>> 
dataGoodG2B>> !
;>>! "
if@@ 

(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 	
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB %
,BB% &
$strBB' :
+BB; <
dataBB= A
)BBA B
;BBB C
}CC 	
}DD 
privateGG 
voidGG 
GoodG2BGG 
(GG 
HttpRequestGG $
reqGG% (
,GG( )
HttpResponseGG* 6
respGG7 ;
)GG; <
{HH 
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
dataGoodG2BLL 
=LL 
dataLL 
;LL 
GoodG2BSinkMM 
(MM 
reqMM 
,MM 
respMM 
)MM 
;MM 
}NN 
privatePP 
voidPP 
GoodB2GSinkPP 
(PP 
HttpRequestPP (
reqPP) ,
,PP, -
HttpResponsePP. :
respPP; ?
)PP? @
{QQ 
stringRR 
dataRR 
=RR 
dataGoodB2GRR !
;RR! "
ifTT 

(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 	
dataVV 
=VV 
HttpUtilityVV 
.VV 
	UrlEncodeVV (
(VV( )
$strVV) +
,VV+ ,
EncodingVV- 5
.VV5 6
UTF8VV6 :
)VV: ;
;VV; <
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW %
,WW% &
$strWW' :
+WW; <
dataWW= A
)WWA B
;WWB C
}XX 	
}YY 
private\\ 
void\\ 
GoodB2G\\ 
(\\ 
HttpRequest\\ $
req\\% (
,\\( )
HttpResponse\\* 6
resp\\7 ;
)\\; <
{]] 
string^^ 
data^^ 
;^^ 
data`` 
=`` 
req`` 
.`` 
Params`` 
.`` 
Get`` 
(`` 
$str`` $
)``$ %
;``% &
dataGoodB2Gaa 
=aa 
dataaa 
;aa 
GoodB2GSinkbb 
(bb 
reqbb 
,bb 
respbb 
)bb 
;bb 
}cc 
}ee 
}ff 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_51a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_51b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##b c
;##c d
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_51b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33f g
;33g h
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_51b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<f g
;<<g h
}== 
}?? 
}@@ Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_51b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_52c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53d H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53d'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53d-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_53d F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54d H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54d'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54d-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54d F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54e H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54e'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54e-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_54e F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_61a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_61b V
.V W
	BadSourceW `
(` a
reqa d
,d e
respf j
)j k
;k l
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_61b11 V
.11V W
GoodG2BSource11W d
(11d e
req11e h
,11h i
resp11j n
)11n o
;11o p
if33 

(33 
data33 
!=33 
null33 
)33 
{44 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_61b<< V
.<<V W
GoodB2GSource<<W d
(<<d e
req<<e h
,<<h i
resp<<j n
)<<n o
;<<o p
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
$str@@) +
,@@+ ,
Encoding@@- 5
.@@5 6
UTF8@@6 :
)@@: ;
;@@; <
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_61b F
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
return## 
data## 
;## 
}$$ 
public)) 

static)) 
string)) 
GoodG2BSource)) &
())& '
HttpRequest))' 2
req))3 6
,))6 7
HttpResponse))8 D
resp))E I
)))I J
{** 
string++ 
data++ 
;++ 
data-- 
=-- 
$str-- 
;-- 
return.. 
data.. 
;.. 
}// 
public22 

static22 
string22 
GoodB2GSource22 &
(22& '
HttpRequest22' 2
req223 6
,226 7
HttpResponse228 D
resp22E I
)22I J
{33 
string44 
data44 
;44 
data66 
=66 
req66 
.66 
Params66 
.66 
Get66 
(66 
$str66 $
)66$ %
;66% &
return77 
data77 
;77 
}88 
}:: 
};; ä
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_66a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
string## 
[## 
]## 
	dataArray## 
=## 
new##  
string##! '
[##' (
$num##( )
]##) *
;##* +
	dataArray$$ 
[$$ 
$num$$ 
]$$ 
=$$ 
data$$ 
;$$ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_66b%% H
.%%H I
BadSink%%I P
(%%P Q
	dataArray%%Q Z
,%%[ \
req%%] `
,%%` a
resp%%b f
)%%g h
;%%h i
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
GoodB2G,, 
(,, 
req,, 
,,, 
resp,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
HttpRequest00  +
req00, /
,00/ 0
HttpResponse001 =
resp00> B
)00B C
{11 
string22 
data22 
;22 
data44 
=44 
$str44 
;44 
string55 
[55 
]55 
	dataArray55 
=55 
new55  
string55! '
[55' (
$num55( )
]55) *
;55* +
	dataArray66 
[66 
$num66 
]66 
=66 
data66 
;66 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_66b77 H
.77H I
GoodG2BSink77I T
(77T U
	dataArray77U ^
,77_ `
req77a d
,77d e
resp77f j
)77k l
;77l m
}88 
private;; 
static;; 
void;; 
GoodB2G;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
string== 
data== 
;== 
data?? 
=?? 
req?? 
.?? 
Params?? 
.?? 
Get?? 
(?? 
$str?? $
)??$ %
;??% &
string@@ 
[@@ 
]@@ 
	dataArray@@ 
=@@ 
new@@  
string@@! '
[@@' (
$num@@( )
]@@) *
;@@* +
	dataArrayAA 
[AA 
$numAA 
]AA 
=AA 
dataAA 
;AA L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_66bBB H
.BBH I
GoodB2GSinkBBI T
(BBT U
	dataArrayBBU ^
,BB_ `
reqBBa d
,BBd e
respBBf j
)BBk l
;BBl m
}CC 
}EE 
}FF Ï
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_66b F
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ¢
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67a F
:G H
AbstractTestCaseWebI \
{ 
public 

class 
	Container 
{ 
public   
string   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data'' 
='' 
req'' 
.'' 
Params'' 
.'' 
Get'' 
('' 
$str'' $
)''$ %
;''% &
	Container(( 
dataContainer(( 
=((  !
new((" %
	Container((& /
(((/ 0
)((0 1
;((1 2
dataContainer)) 
.)) 
containerOne)) "
=))# $
data))% )
;))) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67b** H
.**H I
BadSink**I P
(**P Q
dataContainer**Q ^
,**_ `
req**a d
,**d e
resp**f j
)**k l
;**l m
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
HttpRequest55  +
req55, /
,55/ 0
HttpResponse551 =
resp55> B
)55B C
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 
	Container:: 
dataContainer:: 
=::  !
new::" %
	Container::& /
(::/ 0
)::0 1
;::1 2
dataContainer;; 
.;; 
containerOne;; "
=;;# $
data;;% )
;;;) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataContainer<<U b
,<<c d
req<<e h
,<<h i
resp<<j n
)<<o p
;<<p q
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
	ContainerEE 
dataContainerEE 
=EE  !
newEE" %
	ContainerEE& /
(EE/ 0
)EE0 1
;EE1 2
dataContainerFF 
.FF 
containerOneFF "
=FF# $
dataFF% )
;FF) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67bGG H
.GGH I
GoodB2GSinkGGI T
(GGT U
dataContainerGGU b
,GGc d
reqGGe h
,GGh i
respGGj n
)GGo p
;GGp q
}HH 
}JJ 
}KK ¹
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67b F
{ 
public 

static 
void 
BadSink 
( L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67a _
._ `
	Container` i
dataContainerj w
,x y
HttpRequest	z 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67a**# c
.**c d
	Container**d m
dataContainer**n {
,**| }
HttpRequest	**~ 
req
** 
,
** 
HttpResponse
** 
resp
**  
)
**  ¡
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_67a55# c
.55c d
	Container55d m
dataContainer55n {
,55| }
HttpRequest	55~ 
req
55 
,
55 
HttpResponse
55 
resp
55  
)
55  ¡
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68a F
:G H
AbstractTestCaseWebI \
{ 
public 

static 
string 
data 
; 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68b$$ H
.$$H I
BadSink$$I P
($$P Q
req$$Q T
,$$T U
resp$$V Z
)$$Z [
;$$[ \
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68b33 H
.33H I
GoodG2BSink33I T
(33T U
req33U X
,33X Y
resp33Z ^
)33^ _
;33_ `
}44 
private77 
static77 
void77 
GoodB2G77 
(77  
HttpRequest77  +
req77, /
,77/ 0
HttpResponse771 =
resp77> B
)77B C
{88 
data:: 
=:: 
req:: 
.:: 
Params:: 
.:: 
Get:: 
(:: 
$str:: $
)::$ %
;::% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68b;; H
.;;H I
GoodB2GSink;;I T
(;;T U
req;;U X
,;;X Y
resp;;Z ^
);;^ _
;;;_ `
}<< 
}>> 
}?? ¿
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68b F
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68a V
.V W
dataW [
;[ \
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68a,, V
.,,V W
data,,W [
;,,[ \
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_68a77 V
.77V W
data77W [
;77[ \
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA Ò
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_71a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_71b## H
.##H I
BadSink##I P
(##P Q
(##Q R
Object##R X
)##X Y
data##Y ]
,##^ _
req##` c
,##c d
resp##e i
)##j k
;##k l
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
HttpRequest..  +
req.., /
,../ 0
HttpResponse..1 =
resp..> B
)..B C
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_71b33 H
.33H I
GoodG2BSink33I T
(33T U
(33U V
Object33V \
)33\ ]
data33] a
,33b c
req33d g
,33g h
resp33i m
)33n o
;33o p
}44 
private77 
static77 
void77 
GoodB2G77 
(77  
HttpRequest77  +
req77, /
,77/ 0
HttpResponse771 =
resp77> B
)77B C
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_71b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
(<<U V
Object<<V \
)<<\ ]
data<<] a
,<<b c
req<<d g
,<<g h
resp<<i m
)<<n o
;<<o p
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_71b F
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB Â&
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_72a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &
	Hashtable$$ 
dataHashtable$$ 
=$$  !
new$$" %
	Hashtable$$& /
($$/ 0
$num$$0 1
)$$1 2
;$$2 3
dataHashtable%% 
.%% 
Add%% 
(%% 
$num%% 
,%% 
data%% !
)%%! "
;%%" #
dataHashtable&& 
.&& 
Add&& 
(&& 
$num&& 
,&& 
data&& !
)&&! "
;&&" #
dataHashtable'' 
.'' 
Add'' 
('' 
$num'' 
,'' 
data'' !
)''! "
;''" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_72b(( H
.((H I
BadSink((I P
(((P Q
dataHashtable((Q ^
,((_ `
req((a d
,((d e
resp((f j
)((k l
;((l m
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 
	Hashtable88 
dataHashtable88 
=88  !
new88" %
	Hashtable88& /
(88/ 0
$num880 1
)881 2
;882 3
dataHashtable99 
.99 
Add99 
(99 
$num99 
,99 
data99 !
)99! "
;99" #
dataHashtable:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: !
)::! "
;::" #
dataHashtable;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; !
);;! "
;;;" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_72b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataHashtable<<U b
,<<c d
req<<e h
,<<h i
resp<<j n
)<<o p
;<<p q
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
	HashtableEE 
dataHashtableEE 
=EE  !
newEE" %
	HashtableEE& /
(EE/ 0
$numEE0 1
)EE1 2
;EE2 3
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #
dataHashtableHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH !
)HH! "
;HH" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_72bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataHashtableIIU b
,IIc d
reqIIe h
,IIh i
respIIj n
)IIo p
;IIp q
}JJ 
}LL 
}MM ¬
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_72b F
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB È&
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_73a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &

LinkedList$$ 
<$$ 
string$$ 
>$$ 
dataLinkedList$$ )
=$$* +
new$$, /

LinkedList$$0 :
<$$: ;
string$$; A
>$$A B
($$B C
)$$C D
;$$D E
dataLinkedList%% 
.%% 
AddLast%% 
(%% 
data%% #
)%%# $
;%%$ %
dataLinkedList&& 
.&& 
AddLast&& 
(&& 
data&& #
)&&# $
;&&$ %
dataLinkedList'' 
.'' 
AddLast'' 
('' 
data'' #
)''# $
;''$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_73b(( H
.((H I
BadSink((I P
(((P Q
dataLinkedList((Q _
,((` a
req((b e
,((e f
resp((g k
)((l m
;((m n
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 

LinkedList88 
<88 
string88 
>88 
dataLinkedList88 )
=88* +
new88, /

LinkedList880 :
<88: ;
string88; A
>88A B
(88B C
)88C D
;88D E
dataLinkedList99 
.99 
AddLast99 
(99 
data99 #
)99# $
;99$ %
dataLinkedList:: 
.:: 
AddLast:: 
(:: 
data:: #
)::# $
;::$ %
dataLinkedList;; 
.;; 
AddLast;; 
(;; 
data;; #
);;# $
;;;$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_73b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataLinkedList<<U c
,<<d e
req<<f i
,<<i j
resp<<k o
)<<p q
;<<q r
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &

LinkedListEE 
<EE 
stringEE 
>EE 
dataLinkedListEE )
=EE* +
newEE, /

LinkedListEE0 :
<EE: ;
stringEE; A
>EEA B
(EEB C
)EEC D
;EED E
dataLinkedListFF 
.FF 
AddLastFF 
(FF 
dataFF #
)FF# $
;FF$ %
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %
dataLinkedListHH 
.HH 
AddLastHH 
(HH 
dataHH #
)HH# $
;HH$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_73bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataLinkedListIIU c
,IId e
reqIIf i
,IIi j
respIIk o
)IIp q
;IIq r
}JJ 
}LL 
}MM î
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_73b F
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB *
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_74a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &

Dictionary$$ 
<$$ 
int$$ 
,$$ 
string$$ 
>$$ 
dataDictionary$$ -
=$$. /
new$$0 3

Dictionary$$4 >
<$$> ?
int$$? B
,$$B C
string$$C I
>$$I J
($$J K
)$$K L
;$$L M
dataDictionary%% 
.%% 
Add%% 
(%% 
$num%% 
,%% 
data%% "
)%%" #
;%%# $
dataDictionary&& 
.&& 
Add&& 
(&& 
$num&& 
,&& 
data&& "
)&&" #
;&&# $
dataDictionary'' 
.'' 
Add'' 
('' 
$num'' 
,'' 
data'' "
)''" #
;''# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_74b(( H
.((H I
BadSink((I P
(((P Q
dataDictionary((Q _
,((` a
req((b e
,((e f
resp((g k
)((l m
;((m n
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 

Dictionary88 
<88 
int88 
,88 
string88 
>88 
dataDictionary88 -
=88. /
new880 3

Dictionary884 >
<88> ?
int88? B
,88B C
string88C I
>88I J
(88J K
)88K L
;88L M
dataDictionary99 
.99 
Add99 
(99 
$num99 
,99 
data99 "
)99" #
;99# $
dataDictionary:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: "
)::" #
;::# $
dataDictionary;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; "
);;" #
;;;# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_74b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataDictionary<<U c
,<<d e
req<<f i
,<<i j
resp<<k o
)<<p q
;<<q r
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &

DictionaryEE 
<EE 
intEE 
,EE 
stringEE 
>EE 
dataDictionaryEE -
=EE. /
newEE0 3

DictionaryEE4 >
<EE> ?
intEE? B
,EEB C
stringEEC I
>EEI J
(EEJ K
)EEK L
;EEL M
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $
dataDictionaryHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH "
)HH" #
;HH# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_74bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataDictionaryIIU c
,IId e
reqIIf i
,IIi j
respIIk o
)IIp q
;IIq r
}JJ 
}LL 
}MM 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_74b F
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB é5
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_75a F
:G H
AbstractTestCaseWebI \
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &
byte'' 
['' 
]'' 
dataSerialized'' 
='' 
null''  $
;''$ %
try(( 
{)) 	
BinaryFormatter** 
bf** 
=**  
new**! $
BinaryFormatter**% 4
(**4 5
)**5 6
;**6 7
using++ 
(++ 
var++ 
ms++ 
=++ 
new++ 
MemoryStream++  ,
(++, -
)++- .
)++. /
{,, 
bf-- 
.-- 
	Serialize-- 
(-- 
ms-- 
,--  
data--! %
)--% &
;--& '
dataSerialized.. 
=..  
ms..! #
...# $
ToArray..$ +
(..+ ,
).., -
;..- .
}// L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_75b00 L
.00L M
BadSink00M T
(00T U
dataSerialized00U c
,00d e
req00f i
,00i j
resp00k o
)00p q
;00q r
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. X
,44X Y
exceptSerialize44Z i
)44i j
;44j k
}55 	
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
byteFF 
[FF 
]FF 
dataSerializedFF 
=FF 
nullFF  $
;FF$ %
tryGG 
{HH 	
BinaryFormatterII 
bfII 
=II  
newII! $
BinaryFormatterII% 4
(II4 5
)II5 6
;II6 7
usingJJ 
(JJ 
varJJ 
msJJ 
=JJ 
newJJ 
MemoryStreamJJ  ,
(JJ, -
)JJ- .
)JJ. /
{KK 
bfLL 
.LL 
	SerializeLL 
(LL 
msLL 
,LL  
dataLL! %
)LL% &
;LL& '
dataSerializedMM 
=MM  
msMM! #
.MM# $
ToArrayMM$ +
(MM+ ,
)MM, -
;MM- .
}NN L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_75bOO L
.OOL M
GoodG2BSinkOOM X
(OOX Y
dataSerializedOOY g
,OOh i
reqOOj m
,OOm n
respOOo s
)OOt u
;OOu v
}PP 	
catchQQ 
(QQ "
SerializationExceptionQQ %
exceptSerializeQQ& 5
)QQ5 6
{RR 	
IOSS 
.SS 
LoggerSS 
.SS 
LogSS 
(SS 
NLogSS 
.SS 
LogLevelSS '
.SS' (
WarnSS( ,
,SS, -
$strSS. X
,SSX Y
exceptSerializeSSZ i
)SSi j
;SSj k
}TT 	
}UU 
privateXX 
staticXX 
voidXX 
GoodB2GXX 
(XX  
HttpRequestXX  +
reqXX, /
,XX/ 0
HttpResponseXX1 =
respXX> B
)XXB C
{YY 
stringZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
req\\ 
.\\ 
Params\\ 
.\\ 
Get\\ 
(\\ 
$str\\ $
)\\$ %
;\\% &
byte^^ 
[^^ 
]^^ 
dataSerialized^^ 
=^^ 
null^^  $
;^^$ %
try__ 
{`` 	
BinaryFormatteraa 
bfaa 
=aa  
newaa! $
BinaryFormatteraa% 4
(aa4 5
)aa5 6
;aa6 7
usingbb 
(bb 
varbb 
msbb 
=bb 
newbb 
MemoryStreambb  ,
(bb, -
)bb- .
)bb. /
{cc 
bfdd 
.dd 
	Serializedd 
(dd 
msdd 
,dd  
datadd! %
)dd% &
;dd& '
dataSerializedee 
=ee  
msee! #
.ee# $
ToArrayee$ +
(ee+ ,
)ee, -
;ee- .
}ff L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_75bgg L
.ggL M
GoodB2GSinkggM X
(ggX Y
dataSerializedggY g
,ggh i
reqggj m
,ggm n
respggo s
)ggt u
;ggu v
}hh 	
catchii 
(ii "
SerializationExceptionii %
exceptSerializeii& 5
)ii5 6
{jj 	
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk 
.kk 
LogLevelkk '
.kk' (
Warnkk( ,
,kk, -
$strkk. X
,kkX Y
exceptSerializekkZ i
)kki j
;kkj k
}ll 	
}mm 
}oo 
}pp ®8
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_75b F
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if-- 
(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
$strcc- /
,cc/ 0
Encodingcc1 9
.cc9 :
UTF8cc: >
)cc> ?
;cc? @
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base## L

baseObject##M W
=##X Y
new##Z ]P
CCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_bad	##^ ¡
(
##¡ ¢
)
##¢ £
;
##£ ¤

baseObject$$ 
.$$ 
Action$$ 
($$ 
data$$ 
,$$  
req$$! $
,$$$ %
resp$$& *
)$$* +
;$$+ ,
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
void// 
GoodG2B// 
(// 
HttpRequest// $
req//% (
,//( )
HttpResponse//* 6
resp//7 ;
)//; <
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base44 L

baseObject44M W
=44X Y
new44Z ]T
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_goodG2B	44^ ¥
(
44¥ ¦
)
44¦ §
;
44§ ¨

baseObject55 
.55 
Action55 
(55 
data55 
,55  
req55! $
,55$ %
resp55& *
)55* +
;55+ ,
}66 
private99 
void99 
GoodB2G99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
data;; 
;;; 
data== 
=== 
req== 
.== 
Params== 
.== 
Get== 
(== 
$str== $
)==$ %
;==% &P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base>> L

baseObject>>M W
=>>X Y
new>>Z ]T
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_goodB2G	>>^ ¥
(
>>¥ ¦
)
>>¦ §
;
>>§ ¨

baseObject?? 
.?? 
Action?? 
(?? 
data?? 
,??  
req??! $
,??$ %
resp??& *
)??* +
;??+ ,
}@@ 
}BB 
}CC 	
ÄC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class O
CCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_bad I
:J KQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base	L 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& ó
ÅC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base S
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ò

ÈC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class S
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_goodB2G M
:N OQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base	P 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
$str##) +
,##+ ,
Encoding##- 5
.##5 6
UTF8##6 :
)##: ;
;##; <
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( 	
ÈC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class S
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_goodG2B M
:N OQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_addHeader_81_base	P 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' Ä
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_01 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
if## 

(## 
data## 
!=## 
null## 
)## 
{$$ 	
resp&& 
.&& 
	AddHeader&& 
(&& 
$str&& %
,&&% &
$str&&' :
+&&; <
data&&= A
)&&A B
;&&B C
}'' 	
}(( 
public++ 

override++ 
void++ 
Good++ 
(++ 
HttpRequest++ )
req++* -
,++- .
HttpResponse++/ ;
resp++< @
)++@ A
{,, 
GoodG2B-- 
(-- 
req-- 
,-- 
resp-- 
)-- 
;-- 
GoodB2G.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
}// 
private22 
void22 
GoodG2B22 
(22 
HttpRequest22 $
req22% (
,22( )
HttpResponse22* 6
resp227 ;
)22; <
{33 
string44 
data44 
;44 
data66 
=66 
$str66 
;66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	
resp:: 
.:: 
	AddHeader:: 
(:: 
$str:: %
,::% &
$str::' :
+::; <
data::= A
)::A B
;::B C
};; 	
}<< 
private?? 
void?? 
GoodB2G?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
reqCC 
.CC 
ParamsCC 
.CC 
GetCC 
(CC 
$strCC $
)CC$ %
;CC% &
ifDD 

(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 	
dataGG 
=GG 
HttpUtilityGG 
.GG 
	UrlEncodeGG (
(GG( )
dataGG) -
,GG- .
EncodingGG/ 7
.GG7 8
UTF8GG8 <
)GG< =
;GG= >
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH %
,HH% &
$strHH' :
+HH; <
dataHH= A
)HHA B
;HHB C
}II 	
}JJ 
}LL 
}MM Ú8
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_02 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
true,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
false;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
trueFF 
)FF 
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
trueTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
true__ 
)__ 
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
truemm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
falsexx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
true
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« ´;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_03 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
$num,, 
==,, 
$num,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
$num;; 
!=;; 
$num;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
$numFF 
==FF 
$numFF 
)FF 
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
$numTT 
==TT 
$numTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
$num__ 
==__ 
$num__ 
)__ 
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
$nummm 
==mm 
$nummm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
$numxx 
!=xx 
$numxx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« <
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_04 E
:F G
AbstractTestCaseWebH [
{ 
private"" 
const"" 
bool"" 
PRIVATE_CONST_TRUE"" )
=""* +
true"", 0
;""0 1
private## 
const## 
bool## 
PRIVATE_CONST_FALSE## *
=##+ ,
false##- 2
;##2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data++ 
=++ 
req++ 
.++ 
Params++ 
.++ 
Get++ !
(++! "
$str++" (
)++( )
;++) *
},, 	
else-- 
{.. 	
data11 
=11 
null11 
;11 
}22 	
if33 

(33 
PRIVATE_CONST_TRUE33 
)33 
{44 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
PRIVATE_CONST_FALSEBB 
)BB  
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
PRIVATE_CONST_TRUEMM 
)MM 
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respRR 
.RR 
	AddHeaderRR 
(RR 
$strRR )
,RR) *
$strRR+ >
+RR? @
dataRRA E
)RRE F
;RRF G
}SS 
}TT 	
}UU 
privateXX 
voidXX 
GoodG2B2XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
PRIVATE_CONST_TRUE[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
else`` 
{aa 	
datadd 
=dd 
nulldd 
;dd 
}ee 	
ifff 

(ff 
PRIVATE_CONST_TRUEff 
)ff 
{gg 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respkk 
.kk 
	AddHeaderkk 
(kk 
$strkk )
,kk) *
$strkk+ >
+kk? @
datakkA E
)kkE F
;kkF G
}ll 
}mm 	
}nn 
privateqq 
voidqq 
GoodB2G1qq 
(qq 
HttpRequestqq %
reqqq& )
,qq) *
HttpResponseqq+ 7
respqq8 <
)qq< =
{rr 
stringss 
datass 
;ss 
iftt 

(tt 
PRIVATE_CONST_TRUEtt 
)tt 
{uu 	
dataww 
=ww 
reqww 
.ww 
Paramsww 
.ww 
Getww !
(ww! "
$strww" (
)ww( )
;ww) *
}xx 	
elseyy 
{zz 	
data}} 
=}} 
null}} 
;}} 
}~~ 	
if 

( 
PRIVATE_CONST_FALSE 
)  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
if
   
(
   
data
   
!=
   
null
   
)
   
{
¡¡ 
data
££ 
=
££ 
HttpUtility
££ "
.
££" #
	UrlEncode
££# ,
(
££, -
data
££- 1
,
££1 2
Encoding
££3 ;
.
££; <
UTF8
££< @
)
££@ A
;
££A B
resp
¤¤ 
.
¤¤ 
	AddHeader
¤¤ 
(
¤¤ 
$str
¤¤ )
,
¤¤) *
$str
¤¤+ >
+
¤¤? @
data
¤¤A E
)
¤¤E F
;
¤¤F G
}
¥¥ 
}
¦¦ 	
}
§§ 
public
©© 

override
©© 
void
©© 
Good
©© 
(
©© 
HttpRequest
©© )
req
©©* -
,
©©- .
HttpResponse
©©/ ;
resp
©©< @
)
©©@ A
{
ªª 
GoodG2B1
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodG2B2
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
GoodB2G1
­­ 
(
­­ 
req
­­ 
,
­­ 
resp
­­ 
)
­­ 
;
­­ 
GoodB2G2
®® 
(
®® 
req
®® 
,
®® 
resp
®® 
)
®® 
;
®® 
}
¯¯ 
}±± 
}²² ¢;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_05 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data** 
=** 
req** 
.** 
Params** 
.** 
Get** !
(**! "
$str**" (
)**( )
;**) *
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
privateTrue22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
privateFalseAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
privateTrueLL 
)LL 
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
privateTrueZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
privateTrueee 
)ee 
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
privateTruess 
)ss 
{tt 	
datavv 
=vv 
reqvv 
.vv 
Paramsvv 
.vv 
Getvv !
(vv! "
$strvv" (
)vv( )
;vv) *
}ww 	
elsexx 
{yy 	
data|| 
=|| 
null|| 
;|| 
}}} 	
if~~ 

(~~ 
privateFalse~~ 
)~~ 
{ 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateTrue
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
   
data
¢¢ 
=
¢¢ 
HttpUtility
¢¢ "
.
¢¢" #
	UrlEncode
¢¢# ,
(
¢¢, -
data
¢¢- 1
,
¢¢1 2
Encoding
¢¢3 ;
.
¢¢; <
UTF8
¢¢< @
)
¢¢@ A
;
¢¢A B
resp
££ 
.
££ 
	AddHeader
££ 
(
££ 
$str
££ )
,
££) *
$str
££+ >
+
££? @
data
££A E
)
££E F
;
££F G
}
¤¤ 
}
¥¥ 	
}
¦¦ 
public
¨¨ 

override
¨¨ 
void
¨¨ 
Good
¨¨ 
(
¨¨ 
HttpRequest
¨¨ )
req
¨¨* -
,
¨¨- .
HttpResponse
¨¨/ ;
resp
¨¨< @
)
¨¨@ A
{
©© 
GoodG2B1
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
GoodG2B2
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodB2G1
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
GoodB2G2
­­ 
(
­­ 
req
­­ 
,
­­ 
resp
­­ 
)
­­ 
;
­­ 
}
®® 
}°° 
}±± é=
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_06 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&&  
$num&&  !
)&&! "
{'' 	
data)) 
=)) 
req)) 
.)) 
Params)) 
.)) 
Get)) !
())! "
$str))" (
)))( )
;))) *
}** 	
else++ 
{,, 	
data// 
=// 
null// 
;// 
}00 	
if11 

(11 
PRIVATE_CONST_FIVE11 
==11  
$num11  !
)11! "
{22 	
if33 
(33 
data33 
!=33 
null33 
)33 
{44 
resp66 
.66 
	AddHeader66 
(66 
$str66 )
,66) *
$str66+ >
+66? @
data66A E
)66E F
;66F G
}77 
}88 	
}99 
private== 
void== 
GoodG2B1== 
(== 
HttpRequest== %
req==& )
,==) *
HttpResponse==+ 7
resp==8 <
)==< =
{>> 
string?? 
data?? 
;?? 
if@@ 

(@@ 
PRIVATE_CONST_FIVE@@ 
!=@@  
$num@@  !
)@@! "
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
elseFF 
{GG 	
dataII 
=II 
$strII 
;II 
}JJ 	
ifKK 

(KK 
PRIVATE_CONST_FIVEKK 
==KK  
$numKK  !
)KK! "
{LL 	
ifMM 
(MM 
dataMM 
!=MM 
nullMM 
)MM 
{NN 
respPP 
.PP 
	AddHeaderPP 
(PP 
$strPP )
,PP) *
$strPP+ >
+PP? @
dataPPA E
)PPE F
;PPF G
}QQ 
}RR 	
}SS 
privateVV 
voidVV 
GoodG2B2VV 
(VV 
HttpRequestVV %
reqVV& )
,VV) *
HttpResponseVV+ 7
respVV8 <
)VV< =
{WW 
stringXX 
dataXX 
;XX 
ifYY 

(YY 
PRIVATE_CONST_FIVEYY 
==YY  
$numYY  !
)YY! "
{ZZ 	
data\\ 
=\\ 
$str\\ 
;\\ 
}]] 	
else^^ 
{__ 	
databb 
=bb 
nullbb 
;bb 
}cc 	
ifdd 

(dd 
PRIVATE_CONST_FIVEdd 
==dd  
$numdd  !
)dd! "
{ee 	
ifff 
(ff 
dataff 
!=ff 
nullff 
)ff 
{gg 
respii 
.ii 
	AddHeaderii 
(ii 
$strii )
,ii) *
$strii+ >
+ii? @
dataiiA E
)iiE F
;iiF G
}jj 
}kk 	
}ll 
privateoo 
voidoo 
GoodB2G1oo 
(oo 
HttpRequestoo %
reqoo& )
,oo) *
HttpResponseoo+ 7
respoo8 <
)oo< =
{pp 
stringqq 
dataqq 
;qq 
ifrr 

(rr 
PRIVATE_CONST_FIVErr 
==rr  
$numrr  !
)rr! "
{ss 	
datauu 
=uu 
requu 
.uu 
Paramsuu 
.uu 
Getuu !
(uu! "
$struu" (
)uu( )
;uu) *
}vv 	
elseww 
{xx 	
data{{ 
={{ 
null{{ 
;{{ 
}|| 	
if}} 

(}} 
PRIVATE_CONST_FIVE}} 
!=}}  
$num}}  !
)}}! "
{~~ 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
¡¡ 
=
¡¡ 
HttpUtility
¡¡ "
.
¡¡" #
	UrlEncode
¡¡# ,
(
¡¡, -
data
¡¡- 1
,
¡¡1 2
Encoding
¡¡3 ;
.
¡¡; <
UTF8
¡¡< @
)
¡¡@ A
;
¡¡A B
resp
¢¢ 
.
¢¢ 
	AddHeader
¢¢ 
(
¢¢ 
$str
¢¢ )
,
¢¢) *
$str
¢¢+ >
+
¢¢? @
data
¢¢A E
)
¢¢E F
;
¢¢F G
}
££ 
}
¤¤ 	
}
¥¥ 
public
§§ 

override
§§ 
void
§§ 
Good
§§ 
(
§§ 
HttpRequest
§§ )
req
§§* -
,
§§- .
HttpResponse
§§/ ;
resp
§§< @
)
§§@ A
{
¨¨ 
GoodG2B1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodG2B2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
GoodB2G1
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodB2G2
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 
}¯¯ 
}°° =
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_07 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data)) 
=)) 
req)) 
.)) 
Params)) 
.)) 
Get)) !
())! "
$str))" (
)))( )
;))) *
}** 	
else++ 
{,, 	
data// 
=// 
null// 
;// 
}00 	
if11 

(11 
privateFive11 
==11 
$num11 
)11 
{22 	
if33 
(33 
data33 
!=33 
null33 
)33 
{44 
resp66 
.66 
	AddHeader66 
(66 
$str66 )
,66) *
$str66+ >
+66? @
data66A E
)66E F
;66F G
}77 
}88 	
}99 
private== 
void== 
GoodG2B1== 
(== 
HttpRequest== %
req==& )
,==) *
HttpResponse==+ 7
resp==8 <
)==< =
{>> 
string?? 
data?? 
;?? 
if@@ 

(@@ 
privateFive@@ 
!=@@ 
$num@@ 
)@@ 
{AA 	
dataDD 
=DD 
nullDD 
;DD 
}EE 	
elseFF 
{GG 	
dataII 
=II 
$strII 
;II 
}JJ 	
ifKK 

(KK 
privateFiveKK 
==KK 
$numKK 
)KK 
{LL 	
ifMM 
(MM 
dataMM 
!=MM 
nullMM 
)MM 
{NN 
respPP 
.PP 
	AddHeaderPP 
(PP 
$strPP )
,PP) *
$strPP+ >
+PP? @
dataPPA E
)PPE F
;PPF G
}QQ 
}RR 	
}SS 
privateVV 
voidVV 
GoodG2B2VV 
(VV 
HttpRequestVV %
reqVV& )
,VV) *
HttpResponseVV+ 7
respVV8 <
)VV< =
{WW 
stringXX 
dataXX 
;XX 
ifYY 

(YY 
privateFiveYY 
==YY 
$numYY 
)YY 
{ZZ 	
data\\ 
=\\ 
$str\\ 
;\\ 
}]] 	
else^^ 
{__ 	
databb 
=bb 
nullbb 
;bb 
}cc 	
ifdd 

(dd 
privateFivedd 
==dd 
$numdd 
)dd 
{ee 	
ifff 
(ff 
dataff 
!=ff 
nullff 
)ff 
{gg 
respii 
.ii 
	AddHeaderii 
(ii 
$strii )
,ii) *
$strii+ >
+ii? @
dataiiA E
)iiE F
;iiF G
}jj 
}kk 	
}ll 
privateoo 
voidoo 
GoodB2G1oo 
(oo 
HttpRequestoo %
reqoo& )
,oo) *
HttpResponseoo+ 7
respoo8 <
)oo< =
{pp 
stringqq 
dataqq 
;qq 
ifrr 

(rr 
privateFiverr 
==rr 
$numrr 
)rr 
{ss 	
datauu 
=uu 
requu 
.uu 
Paramsuu 
.uu 
Getuu !
(uu! "
$struu" (
)uu( )
;uu) *
}vv 	
elseww 
{xx 	
data{{ 
={{ 
null{{ 
;{{ 
}|| 	
if}} 

(}} 
privateFive}} 
!=}} 
$num}} 
)}} 
{~~ 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
¡¡ 
=
¡¡ 
HttpUtility
¡¡ "
.
¡¡" #
	UrlEncode
¡¡# ,
(
¡¡, -
data
¡¡- 1
,
¡¡1 2
Encoding
¡¡3 ;
.
¡¡; <
UTF8
¡¡< @
)
¡¡@ A
;
¡¡A B
resp
¢¢ 
.
¢¢ 
	AddHeader
¢¢ 
(
¢¢ 
$str
¢¢ )
,
¢¢) *
$str
¢¢+ >
+
¢¢? @
data
¢¢A E
)
¢¢E F
;
¢¢F G
}
££ 
}
¤¤ 	
}
¥¥ 
public
§§ 

override
§§ 
void
§§ 
Good
§§ 
(
§§ 
HttpRequest
§§ )
req
§§* -
,
§§- .
HttpResponse
§§/ ;
resp
§§< @
)
§§@ A
{
¨¨ 
GoodG2B1
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
GoodG2B2
ªª 
(
ªª 
req
ªª 
,
ªª 
resp
ªª 
)
ªª 
;
ªª 
GoodB2G1
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodB2G2
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 
}¯¯ 
}°° î?
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_08 E
:F G
AbstractTestCaseWebH [
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public++ 

override++ 
void++ 
Bad++ 
(++ 
HttpRequest++ (
req++) ,
,++, -
HttpResponse++. :
resp++; ?
)++? @
{,, 
string-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data11 
=11 
req11 
.11 
Params11 
.11 
Get11 !
(11! "
$str11" (
)11( )
;11) *
}22 	
else33 
{44 	
data77 
=77 
null77 
;77 
}88 	
if99 

(99 
PrivateReturnsTrue99 
(99 
)99  
)99  !
{:: 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp>> 
.>> 
	AddHeader>> 
(>> 
$str>> )
,>>) *
$str>>+ >
+>>? @
data>>A E
)>>E F
;>>F G
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
PrivateReturnsFalseHH 
(HH  
)HH  !
)HH! "
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
PrivateReturnsTrueSS 
(SS 
)SS  
)SS  !
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respXX 
.XX 
	AddHeaderXX 
(XX 
$strXX )
,XX) *
$strXX+ >
+XX? @
dataXXA E
)XXE F
;XXF G
}YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodG2B2^^ 
(^^ 
HttpRequest^^ %
req^^& )
,^^) *
HttpResponse^^+ 7
resp^^8 <
)^^< =
{__ 
string`` 
data`` 
;`` 
ifaa 

(aa 
PrivateReturnsTrueaa 
(aa 
)aa  
)aa  !
{bb 	
datadd 
=dd 
$strdd 
;dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
ifll 

(ll 
PrivateReturnsTruell 
(ll 
)ll  
)ll  !
{mm 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
respqq 
.qq 
	AddHeaderqq 
(qq 
$strqq )
,qq) *
$strqq+ >
+qq? @
dataqqA E
)qqE F
;qqF G
}rr 
}ss 	
}tt 
privateww 
voidww 
GoodB2G1ww 
(ww 
HttpRequestww %
reqww& )
,ww) *
HttpResponseww+ 7
respww8 <
)ww< =
{xx 
stringyy 
datayy 
;yy 
ifzz 

(zz 
PrivateReturnsTruezz 
(zz 
)zz  
)zz  !
{{{ 	
data}} 
=}} 
req}} 
.}} 
Params}} 
.}} 
Get}} !
(}}! "
$str}}" (
)}}( )
;}}) *
}~~ 	
else 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
}
££ 	
if
¤¤ 

(
¤¤  
PrivateReturnsTrue
¤¤ 
(
¤¤ 
)
¤¤  
)
¤¤  !
{
¥¥ 	
if
¦¦ 
(
¦¦ 
data
¦¦ 
!=
¦¦ 
null
¦¦ 
)
¦¦ 
{
§§ 
data
©© 
=
©© 
HttpUtility
©© "
.
©©" #
	UrlEncode
©©# ,
(
©©, -
data
©©- 1
,
©©1 2
Encoding
©©3 ;
.
©©; <
UTF8
©©< @
)
©©@ A
;
©©A B
resp
ªª 
.
ªª 
	AddHeader
ªª 
(
ªª 
$str
ªª )
,
ªª) *
$str
ªª+ >
+
ªª? @
data
ªªA E
)
ªªE F
;
ªªF G
}
«« 
}
¬¬ 	
}
­­ 
public
¯¯ 

override
¯¯ 
void
¯¯ 
Good
¯¯ 
(
¯¯ 
HttpRequest
¯¯ )
req
¯¯* -
,
¯¯- .
HttpResponse
¯¯/ ;
resp
¯¯< @
)
¯¯@ A
{
°° 
GoodG2B1
±± 
(
±± 
req
±± 
,
±± 
resp
±± 
)
±± 
;
±± 
GoodG2B2
²² 
(
²² 
req
²² 
,
²² 
resp
²² 
)
²² 
;
²² 
GoodB2G1
³³ 
(
³³ 
req
³³ 
,
³³ 
resp
³³ 
)
³³ 
;
³³ 
GoodB2G2
´´ 
(
´´ 
req
´´ 
,
´´ 
resp
´´ 
)
´´ 
;
´´ 
}
µµ 
}·· 
}¸¸ ¸<
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_09 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,,  
STATIC_READONLY_TRUE,, #
),,# $
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; !
STATIC_READONLY_FALSE;; $
);;$ %
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF  
STATIC_READONLY_TRUEFF #
)FF# $
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT  
STATIC_READONLY_TRUETT #
)TT# $
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__  
STATIC_READONLY_TRUE__ #
)__# $
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm  
STATIC_READONLY_TRUEmm #
)mm# $
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx !
STATIC_READONLY_FALSExx $
)xx$ %
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« Ô;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_10 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,, 

staticTrue,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; 
staticFalse;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF 

staticTrueFF 
)FF 
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT 

staticTrueTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__ 

staticTrue__ 
)__ 
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm 

staticTruemm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx 
staticFalsexx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« Î>
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_11 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,,
 
IO,, 
.,, 
StaticReturnsTrue,, 
(,,  
),,  !
),,! "
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; 
StaticReturnsFalse;; !
(;;! "
);;" #
);;# $
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF 
StaticReturnsTrueFF  
(FF  !
)FF! "
)FF" #
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT 
StaticReturnsTrueTT  
(TT  !
)TT! "
)TT" #
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__ 
StaticReturnsTrue__  
(__  !
)__! "
)__" #
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm 
StaticReturnsTruemm  
(mm  !
)mm! "
)mm" #
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx 
StaticReturnsFalsexx !
(xx! "
)xx" #
)xx# $
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« é2
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_12 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!!
 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! &
(!!& '
)!!' (
)!!( )
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data)) 
=)) 
$str)) 
;)) 
}** 	
if++ 

(++
 
IO++ 
.++ $
StaticReturnsTrueOrFalse++ &
(++& '
)++' (
)++( )
{,, 	
if-- 
(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 
resp00 
.00 
	AddHeader00 
(00 
$str00 )
,00) *
$str00+ >
+00? @
data00A E
)00E F
;00F G
}11 
}22 	
else33 
{44 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
data88 
=88 
HttpUtility88 "
.88" #
	UrlEncode88# ,
(88, -
data88- 1
,881 2
Encoding883 ;
.88; <
UTF888< @
)88@ A
;88A B
resp99 
.99 
	AddHeader99 
(99 
$str99 )
,99) *
$str99+ >
+99? @
data99A E
)99E F
;99F G
}:: 
};; 	
}<< 
privateAA 
voidAA 
GoodG2BAA 
(AA 
HttpRequestAA $
reqAA% (
,AA( )
HttpResponseAA* 6
respAA7 ;
)AA; <
{BB 
stringCC 
dataCC 
;CC 
ifDD 

(DD
 
IODD 
.DD $
StaticReturnsTrueOrFalseDD &
(DD& '
)DD' (
)DD( )
{EE 	
dataGG 
=GG 
$strGG 
;GG 
}HH 	
elseII 
{JJ 	
dataLL 
=LL 
$strLL 
;LL 
}MM 	
ifNN 

(NN
 
IONN 
.NN $
StaticReturnsTrueOrFalseNN &
(NN& '
)NN' (
)NN( )
{OO 	
ifPP 
(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 
respSS 
.SS 
	AddHeaderSS 
(SS 
$strSS )
,SS) *
$strSS+ >
+SS? @
dataSSA E
)SSE F
;SSF G
}TT 
}UU 	
elseVV 
{WW 	
ifXX 
(XX 
dataXX 
!=XX 
nullXX 
)XX 
{YY 
resp[[ 
.[[ 
	AddHeader[[ 
([[ 
$str[[ )
,[[) *
$str[[+ >
+[[? @
data[[A E
)[[E F
;[[F G
}\\ 
}]] 	
}^^ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee
 
IOee 
.ee $
StaticReturnsTrueOrFalseee &
(ee& '
)ee' (
)ee( )
{ff 	
datahh 
=hh 
reqhh 
.hh 
Paramshh 
.hh 
Gethh !
(hh! "
$strhh" (
)hh( )
;hh) *
}ii 	
elsejj 
{kk 	
datamm 
=mm 
reqmm 
.mm 
Paramsmm 
.mm 
Getmm !
(mm! "
$strmm" (
)mm( )
;mm) *
}nn 	
ifoo 

(oo
 
IOoo 
.oo $
StaticReturnsTrueOrFalseoo &
(oo& '
)oo' (
)oo( )
{pp 	
ifqq 
(qq 
dataqq 
!=qq 
nullqq 
)qq 
{rr 
datatt 
=tt 
HttpUtilitytt "
.tt" #
	UrlEncodett# ,
(tt, -
datatt- 1
,tt1 2
Encodingtt3 ;
.tt; <
UTF8tt< @
)tt@ A
;ttA B
respuu 
.uu 
	AddHeaderuu 
(uu 
$struu )
,uu) *
$struu+ >
+uu? @
datauuA E
)uuE F
;uuF G
}vv 
}ww 	
elsexx 
{yy 	
ifzz 
(zz 
datazz 
!=zz 
nullzz 
)zz 
{{{ 
data}} 
=}} 
HttpUtility}} "
.}}" #
	UrlEncode}}# ,
(}}, -
data}}- 1
,}}1 2
Encoding}}3 ;
.}}; <
UTF8}}< @
)}}@ A
;}}A B
resp~~ 
.~~ 
	AddHeader~~ 
(~~ 
$str~~ )
,~~) *
$str~~+ >
+~~? @
data~~A E
)~~E F
;~~F G
} 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} ?
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_13 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!# %
$num!!% &
)!!& '
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,,  
STATIC_READONLY_FIVE,, #
==,,# %
$num,,% &
),,& '
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;;  
STATIC_READONLY_FIVE;; #
!=;;# %
$num;;% &
);;& '
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF  
STATIC_READONLY_FIVEFF #
==FF# %
$numFF% &
)FF& '
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT  
STATIC_READONLY_FIVETT #
==TT# %
$numTT% &
)TT& '
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__  
STATIC_READONLY_FIVE__ #
==__# %
$num__% &
)__& '
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm  
STATIC_READONLY_FIVEmm #
==mm# %
$nummm% &
)mm& '
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx  
STATIC_READONLY_FIVExx #
!=xx# %
$numxx% &
)xx& '
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« ®>
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_14 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
if,, 

(,, 
IO,, 
.,, 

staticFive,, 
==,, 
$num,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private88 
void88 
GoodG2B188 
(88 
HttpRequest88 %
req88& )
,88) *
HttpResponse88+ 7
resp888 <
)88< =
{99 
string:: 
data:: 
;:: 
if;; 

(;; 
IO;; 
.;; 

staticFive;; 
!=;; 
$num;; 
);; 
{<< 	
data?? 
=?? 
null?? 
;?? 
}@@ 	
elseAA 
{BB 	
dataDD 
=DD 
$strDD 
;DD 
}EE 	
ifFF 

(FF 
IOFF 
.FF 

staticFiveFF 
==FF 
$numFF 
)FF 
{GG 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respKK 
.KK 
	AddHeaderKK 
(KK 
$strKK )
,KK) *
$strKK+ >
+KK? @
dataKKA E
)KKE F
;KKF G
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodG2B2QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
IOTT 
.TT 

staticFiveTT 
==TT 
$numTT 
)TT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data]] 
=]] 
null]] 
;]] 
}^^ 	
if__ 

(__ 
IO__ 
.__ 

staticFive__ 
==__ 
$num__ 
)__ 
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodB2G1jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
IOmm 
.mm 

staticFivemm 
==mm 
$nummm 
)mm 
{nn 	
datapp 
=pp 
reqpp 
.pp 
Paramspp 
.pp 
Getpp !
(pp! "
$strpp" (
)pp( )
;pp) *
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
IOxx 
.xx 

staticFivexx 
!=xx 
$numxx 
)xx 
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
$str{{ /
){{/ 0
;{{0 1
}|| 	
else}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
   
public
¢¢ 

override
¢¢ 
void
¢¢ 
Good
¢¢ 
(
¢¢ 
HttpRequest
¢¢ )
req
¢¢* -
,
¢¢- .
HttpResponse
¢¢/ ;
resp
¢¢< @
)
¢¢@ A
{
££ 
GoodG2B1
¤¤ 
(
¤¤ 
req
¤¤ 
,
¤¤ 
resp
¤¤ 
)
¤¤ 
;
¤¤ 
GoodG2B2
¥¥ 
(
¥¥ 
req
¥¥ 
,
¥¥ 
resp
¥¥ 
)
¥¥ 
;
¥¥ 
GoodB2G1
¦¦ 
(
¦¦ 
req
¦¦ 
,
¦¦ 
resp
¦¦ 
)
¦¦ 
;
¦¦ 
GoodB2G2
§§ 
(
§§ 
req
§§ 
,
§§ 
resp
§§ 
)
§§ 
;
§§ 
}
¨¨ 
}ªª 
}«« èG
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_15 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% !
(%%! "
$str%%" (
)%%( )
;%%) *
break&& 
;&& 
default'' 
:'' 
data** 
=** 
null** 
;** 
break++ 
;++ 
},, 	
switch-- 
(-- 
$num-- 
)-- 
{.. 	
case// 
$num// 
:// 
if00 
(00 
data00 
!=00 
null00 
)00 
{11 
resp33 
.33 
	AddHeader33 
(33 
$str33 )
,33) *
$str33+ >
+33? @
data33A E
)33E F
;33F G
}44 
break55 
;55 
default66 
:66 
IO88 
.88 
	WriteLine88 
(88 
$str88 /
)88/ 0
;880 1
break99 
;99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
switchBB 
(BB 
$numBB 
)BB 
{CC 	
caseDD 
$numDD 
:DD 
dataGG 
=GG 
nullGG 
;GG 
breakHH 
;HH 
defaultII 
:II 
dataKK 
=KK 
$strKK 
;KK 
breakLL 
;LL 
}MM 	
switchNN 
(NN 
$numNN 
)NN 
{OO 	
casePP 
$numPP 
:PP 
ifQQ 
(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT )
,TT) *
$strTT+ >
+TT? @
dataTTA E
)TTE F
;TTF G
}UU 
breakVV 
;VV 
defaultWW 
:WW 
IOYY 
.YY 
	WriteLineYY 
(YY 
$strYY /
)YY/ 0
;YY0 1
breakZZ 
;ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
switchbb 
(bb 
$numbb 
)bb 
{cc 	
casedd 
$numdd 
:dd 
dataff 
=ff 
$strff 
;ff 
breakgg 
;gg 
defaulthh 
:hh 
datakk 
=kk 
nullkk 
;kk 
breakll 
;ll 
}mm 	
switchnn 
(nn 
$numnn 
)nn 
{oo 	
casepp 
$numpp 
:pp 
ifqq 
(qq 
dataqq 
!=qq 
nullqq 
)qq 
{rr 
resptt 
.tt 
	AddHeadertt 
(tt 
$strtt )
,tt) *
$strtt+ >
+tt? @
datattA E
)ttE F
;ttF G
}uu 
breakvv 
;vv 
defaultww 
:ww 
IOyy 
.yy 
	WriteLineyy 
(yy 
$stryy /
)yy/ 0
;yy0 1
breakzz 
;zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
req
 
.
 
Params
 
.
 
Get
 !
(
! "
$str
" (
)
( )
;
) *
break
 
;
 
default
 
:
 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
default
 
:
 
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
switch
££ 
(
££ 
$num
££ 
)
££ 
{
¤¤ 	
case
¥¥ 
$num
¥¥ 
:
¥¥ 
data
§§ 
=
§§ 
req
§§ 
.
§§ 
Params
§§ 
.
§§ 
Get
§§ !
(
§§! "
$str
§§" (
)
§§( )
;
§§) *
break
¨¨ 
;
¨¨ 
default
©© 
:
©© 
data
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
break
­­ 
;
­­ 
}
®® 	
switch
¯¯ 
(
¯¯ 
$num
¯¯ 
)
¯¯ 
{
°° 	
case
±± 
$num
±± 
:
±± 
if
²² 
(
²² 
data
²² 
!=
²² 
null
²² 
)
²² 
{
³³ 
data
µµ 
=
µµ 
HttpUtility
µµ "
.
µµ" #
	UrlEncode
µµ# ,
(
µµ, -
data
µµ- 1
,
µµ1 2
Encoding
µµ3 ;
.
µµ; <
UTF8
µµ< @
)
µµ@ A
;
µµA B
resp
¶¶ 
.
¶¶ 
	AddHeader
¶¶ 
(
¶¶ 
$str
¶¶ )
,
¶¶) *
$str
¶¶+ >
+
¶¶? @
data
¶¶A E
)
¶¶E F
;
¶¶F G
}
·· 
break
¸¸ 
;
¸¸ 
default
¹¹ 
:
¹¹ 
IO
»» 
.
»» 
	WriteLine
»» 
(
»» 
$str
»» /
)
»»/ 0
;
»»0 1
break
¼¼ 
;
¼¼ 
}
½½ 	
}
¾¾ 
public
ÀÀ 

override
ÀÀ 
void
ÀÀ 
Good
ÀÀ 
(
ÀÀ 
HttpRequest
ÀÀ )
req
ÀÀ* -
,
ÀÀ- .
HttpResponse
ÀÀ/ ;
resp
ÀÀ< @
)
ÀÀ@ A
{
ÁÁ 
GoodG2B1
ÂÂ 
(
ÂÂ 
req
ÂÂ 
,
ÂÂ 
resp
ÂÂ 
)
ÂÂ 
;
ÂÂ 
GoodG2B2
ÃÃ 
(
ÃÃ 
req
ÃÃ 
,
ÃÃ 
resp
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodB2G1
ÄÄ 
(
ÄÄ 
req
ÄÄ 
,
ÄÄ 
resp
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodB2G2
ÅÅ 
(
ÅÅ 
req
ÅÅ 
,
ÅÅ 
resp
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÆÆ 
}ÈÈ 
}ÉÉ Ö 
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_16 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
break%% 
;%% 
}&& 	
while'' 
('' 
true'' 
)'' 
{(( 	
if)) 
()) 
data)) 
!=)) 
null)) 
))) 
{** 
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, )
,,,) *
$str,,+ >
+,,? @
data,,A E
),,E F
;,,F G
}-- 
break.. 
;.. 
}// 	
}00 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
while77 
(77 
true77 
)77 
{88 	
data:: 
=:: 
$str:: 
;:: 
break;; 
;;; 
}<< 	
while== 
(== 
true== 
)== 
{>> 	
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB )
,BB) *
$strBB+ >
+BB? @
dataBBA E
)BBE F
;BBF G
}CC 
breakDD 
;DD 
}EE 	
}FF 
privateII 
voidII 
GoodB2GII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataKK 
;KK 
whileLL 
(LL 
trueLL 
)LL 
{MM 	
dataOO 
=OO 
reqOO 
.OO 
ParamsOO 
.OO 
GetOO !
(OO! "
$strOO" (
)OO( )
;OO) *
breakPP 
;PP 
}QQ 	
whileRR 
(RR 
trueRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
dataWW 
=WW 
HttpUtilityWW "
.WW" #
	UrlEncodeWW# ,
(WW, -
dataWW- 1
,WW1 2
EncodingWW3 ;
.WW; <
UTF8WW< @
)WW@ A
;WWA B
respXX 
.XX 
	AddHeaderXX 
(XX 
$strXX )
,XX) *
$strXX+ >
+XX? @
dataXXA E
)XXE F
;XXF G
}YY 
breakZZ 
;ZZ 
}[[ 	
}\\ 
public^^ 

override^^ 
void^^ 
Good^^ 
(^^ 
HttpRequest^^ )
req^^* -
,^^- .
HttpResponse^^/ ;
resp^^< @
)^^@ A
{__ 
GoodG2B`` 
(`` 
req`` 
,`` 
resp`` 
)`` 
;`` 
GoodB2Gaa 
(aa 
reqaa 
,aa 
respaa 
)aa 
;aa 
}bb 
}dd 
}ee µ 
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_17 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data&& 
=&& 
req&& 
.&& 
Params&& 
.&& 
Get&& 
(&& 
$str&& $
)&&$ %
;&&% &
for'' 
('' 
int'' 
j'' 
='' 
$num'' 
;'' 
j'' 
<'' 
$num'' 
;'' 
j''  
++''  "
)''" #
{(( 	
if)) 
()) 
data)) 
!=)) 
null)) 
))) 
{** 
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, )
,,,) *
$str,,+ >
+,,? @
data,,A E
),,E F
;,,F G
}-- 
}.. 	
}// 
private33 
void33 
GoodG2B33 
(33 
HttpRequest33 $
req33% (
,33( )
HttpResponse33* 6
resp337 ;
)33; <
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 
for88 
(88 
int88 
j88 
=88 
$num88 
;88 
j88 
<88 
$num88 
;88 
j88  
++88  "
)88" #
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
reqGG 
.GG 
ParamsGG 
.GG 
GetGG 
(GG 
$strGG $
)GG$ %
;GG% &
forHH 
(HH 
intHH 
kHH 
=HH 
$numHH 
;HH 
kHH 
<HH 
$numHH 
;HH 
kHH  
++HH  "
)HH" #
{II 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
dataMM- 1
,MM1 2
EncodingMM3 ;
.MM; <
UTF8MM< @
)MM@ A
;MMA B
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
}QQ 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
HttpRequestSS )
reqSS* -
,SS- .
HttpResponseSS/ ;
respSS< @
)SS@ A
{TT 
GoodG2BUU 
(UU 
reqUU 
,UU 
respUU 
)UU 
;UU 
GoodB2GVV 
(VV 
reqVV 
,VV 
respVV 
)VV 
;VV 
}WW 
}YY 
}ZZ Ò;
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_21 E
:F G
AbstractTestCaseWebH [
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &

badPrivate&& 
=&& 
true&& 
;&& 
BadSink'' 
('' 
data'' 
,'' 
req'' 
,'' 
resp''  
)''  !
;''! "
}(( 
private** 
void** 
BadSink** 
(** 
string** 
data**  $
,**% &
HttpRequest**' 2
req**3 6
,**6 7
HttpResponse**8 D
resp**E I
)**I J
{++ 
if,, 

(,, 

badPrivate,, 
),, 
{-- 	
if.. 
(.. 
data.. 
!=.. 
null.. 
).. 
{// 
resp11 
.11 
	AddHeader11 
(11 
$str11 )
,11) *
$str11+ >
+11? @
data11A E
)11E F
;11F G
}22 
}33 	
}44 
private77 
bool77 
goodB2G1Private77  
=77! "
false77# (
;77( )
private88 
bool88 
goodB2G2Private88  
=88! "
false88# (
;88( )
private99 
bool99 
goodG2BPrivate99 
=99  !
false99" '
;99' (
public;; 

override;; 
void;; 
Good;; 
(;; 
HttpRequest;; )
req;;* -
,;;- .
HttpResponse;;/ ;
resp;;< @
);;@ A
{<< 
GoodB2G1== 
(== 
req== 
,== 
resp== 
)== 
;== 
GoodB2G2>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodB2G1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
;EE 
dataGG 
=GG 
reqGG 
.GG 
ParamsGG 
.GG 
GetGG 
(GG 
$strGG $
)GG$ %
;GG% &
goodB2G1PrivateHH 
=HH 
falseHH 
;HH  
GoodB2G1SinkII 
(II 
dataII 
,II 
reqII 
,II  
respII! %
)II% &
;II& '
}JJ 
privateLL 
voidLL 
GoodB2G1SinkLL 
(LL 
stringLL $
dataLL% )
,LL* +
HttpRequestLL, 7
reqLL8 ;
,LL; <
HttpResponseLL= I
respLLJ N
)LLN O
{MM 
ifNN 

(NN 
goodB2G1PrivateNN 
)NN 
{OO 	
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
$strQQ /
)QQ/ 0
;QQ0 1
}RR 	
elseSS 
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
dataXX 
=XX 
HttpUtilityXX "
.XX" #
	UrlEncodeXX# ,
(XX, -
dataXX- 1
,XX1 2
EncodingXX3 ;
.XX; <
UTF8XX< @
)XX@ A
;XXA B
respYY 
.YY 
	AddHeaderYY 
(YY 
$strYY )
,YY) *
$strYY+ >
+YY? @
dataYYA E
)YYE F
;YYF G
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodB2G2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
datacc 
=cc 
reqcc 
.cc 
Paramscc 
.cc 
Getcc 
(cc 
$strcc $
)cc$ %
;cc% &
goodB2G2Privatedd 
=dd 
truedd 
;dd 
GoodB2G2Sinkee 
(ee 
dataee 
,ee 
reqee 
,ee  
respee! %
)ee% &
;ee& '
}ff 
privatehh 
voidhh 
GoodB2G2Sinkhh 
(hh 
stringhh $
datahh% )
,hh* +
HttpRequesthh, 7
reqhh8 ;
,hh; <
HttpResponsehh= I
resphhJ N
)hhN O
{ii 
ifjj 

(jj 
goodB2G2Privatejj 
)jj 
{kk 	
ifll 
(ll 
datall 
!=ll 
nullll 
)ll 
{mm 
dataoo 
=oo 
HttpUtilityoo "
.oo" #
	UrlEncodeoo# ,
(oo, -
dataoo- 1
,oo1 2
Encodingoo3 ;
.oo; <
UTF8oo< @
)oo@ A
;ooA B
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodG2Bvv 
(vv 
HttpRequestvv $
reqvv% (
,vv( )
HttpResponsevv* 6
respvv7 ;
)vv; <
{ww 
stringxx 
dataxx 
;xx 
datazz 
=zz 
$strzz 
;zz 
goodG2BPrivate{{ 
={{ 
true{{ 
;{{ 
GoodG2BSink|| 
(|| 
data|| 
,|| 
req|| 
,|| 
resp||  $
)||$ %
;||% &
}}} 
private 
void 
GoodG2BSink 
( 
string #
data$ (
,) *
HttpRequest+ 6
req7 :
,: ;
HttpResponse< H
respI M
)M N
{
 
if
 

(
 
goodG2BPrivate
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
} 
} ¿%
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22a F
:G H
AbstractTestCaseWebI \
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
=## 
null## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &
badPublicStatic&& 
=&& 
true&& 
;&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22b'' H
.''H I
BadSink''I P
(''P Q
data''Q U
,''V W
req''X [
,''[ \
resp''] a
)''a b
;''b c
}(( 
public++ 

static++ 
bool++  
goodB2G1PublicStatic++ +
=++, -
false++. 3
;++3 4
public,, 

static,, 
bool,,  
goodB2G2PublicStatic,, +
=,,, -
false,,. 3
;,,3 4
public-- 

static-- 
bool-- 
goodG2BPublicStatic-- *
=--+ ,
false--- 2
;--2 3
public// 

override// 
void// 
Good// 
(// 
HttpRequest// )
req//* -
,//- .
HttpResponse/// ;
resp//< @
)//@ A
{00 
GoodB2G111 
(11 
req11 
,11 
resp11 
)11 
;11 
GoodB2G222 
(22 
req22 
,22 
resp22 
)22 
;22 
GoodG2B33 
(33 
req33 
,33 
resp33 
)33 
;33 
}44 
private77 
void77 
GoodB2G177 
(77 
HttpRequest77 %
req77& )
,77) *
HttpResponse77+ 7
resp778 <
)77< =
{88 
string99 
data99 
=99 
null99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% & 
goodB2G1PublicStatic<< 
=<< 
false<< $
;<<$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22b== H
.==H I
GoodB2G1Sink==I U
(==U V
data==V Z
,==[ \
req==] `
,==` a
resp==b f
)==f g
;==g h
}>> 
privateAA 
voidAA 
GoodB2G2AA 
(AA 
HttpRequestAA %
reqAA& )
,AA) *
HttpResponseAA+ 7
respAA8 <
)AA< =
{BB 
stringCC 
dataCC 
=CC 
nullCC 
;CC 
dataEE 
=EE 
reqEE 
.EE 
ParamsEE 
.EE 
GetEE 
(EE 
$strEE $
)EE$ %
;EE% & 
goodB2G2PublicStaticFF 
=FF 
trueFF #
;FF# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22bGG H
.GGH I
GoodB2G2SinkGGI U
(GGU V
dataGGV Z
,GG[ \
reqGG] `
,GG` a
respGGb f
)GGf g
;GGg h
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
HttpRequestKK $
reqKK% (
,KK( )
HttpResponseKK* 6
respKK7 ;
)KK; <
{LL 
stringMM 
dataMM 
=MM 
nullMM 
;MM 
dataOO 
=OO 
$strOO 
;OO 
goodG2BPublicStaticPP 
=PP 
truePP "
;PP" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22bQQ H
.QQH I
GoodG2BSinkQQI T
(QQT U
dataQQU Y
,QQZ [
reqQQ\ _
,QQ_ `
respQQa e
)QQe f
;QQf g
}RR 
}TT 
}UU ü#
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22a L
.L M
badPublicStaticM \
)\ ]
{   	
if!! 
(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22a44 L
.44L M 
goodB2G1PublicStatic44M a
)44a b
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
data??- 1
,??1 2
Encoding??3 ;
.??; <
UTF8??< @
)??@ A
;??A B
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22aHH L
.HHL M 
goodB2G2PublicStaticHHM a
)HHa b
{II 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
dataMM- 1
,MM1 2
EncodingMM3 ;
.MM; <
UTF8MM< @
)MM@ A
;MMA B
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_22a\\ L
.\\L M
goodG2BPublicStatic\\M `
)\\` a
{]] 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm !
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_31 E
:F G
AbstractTestCaseWebH [
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
dataCopy   
;   
{!! 	
string"" 
data"" 
;"" 
data$$ 
=$$ 
req$$ 
.$$ 
Params$$ 
.$$ 
Get$$ !
($$! "
$str$$" (
)$$( )
;$$) *
dataCopy%% 
=%% 
data%% 
;%% 
}&& 	
{'' 	
string(( 
data(( 
=(( 
dataCopy(( "
;((" #
if)) 
()) 
data)) 
!=)) 
null)) 
))) 
{** 
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, )
,,,) *
$str,,+ >
+,,? @
data,,A E
),,E F
;,,F G
}-- 
}.. 	
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
void99 
GoodG2B99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
dataCopy;; 
;;; 
{<< 	
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? 
dataCopy@@ 
=@@ 
data@@ 
;@@ 
}AA 	
{BB 	
stringCC 
dataCC 
=CC 
dataCopyCC "
;CC" #
ifDD 
(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 
respGG 
.GG 
	AddHeaderGG 
(GG 
$strGG )
,GG) *
$strGG+ >
+GG? @
dataGGA E
)GGE F
;GGF G
}HH 
}II 	
}JJ 
privateMM 
voidMM 
GoodB2GMM 
(MM 
HttpRequestMM $
reqMM% (
,MM( )
HttpResponseMM* 6
respMM7 ;
)MM; <
{NN 
stringOO 
dataCopyOO 
;OO 
{PP 	
stringQQ 
dataQQ 
;QQ 
dataSS 
=SS 
reqSS 
.SS 
ParamsSS 
.SS 
GetSS !
(SS! "
$strSS" (
)SS( )
;SS) *
dataCopyTT 
=TT 
dataTT 
;TT 
}UU 	
{VV 	
stringWW 
dataWW 
=WW 
dataCopyWW "
;WW" #
ifXX 
(XX 
dataXX 
!=XX 
nullXX 
)XX 
{YY 
data[[ 
=[[ 
HttpUtility[[ "
.[[" #
	UrlEncode[[# ,
([[, -
data[[- 1
,[[1 2
Encoding[[3 ;
.[[; <
UTF8[[< @
)[[@ A
;[[A B
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
}aa 
}bb ­%
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_41 E
:F G
AbstractTestCaseWebH [
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
data++ 
=++ 
req++ 
.++ 
Params++ 
.++ 
Get++ 
(++ 
$str++ $
)++$ %
;++% &
BadSink,, 
(,, 
data,, 
,,, 
req,, 
,,, 
resp,,  
),,! "
;,," #
}-- 
public00 

override00 
void00 
Good00 
(00 
HttpRequest00 )
req00* -
,00- .
HttpResponse00/ ;
resp00< @
)00@ A
{11 
GoodG2B22 
(22 
req22 
,22 
resp22 
)22 
;22 
GoodB2G33 
(33 
req33 
,33 
resp33 
)33 
;33 
}44 
private66 
static66 
void66 
GoodG2BSink66 #
(66# $
string66$ *
data66+ /
,660 1
HttpRequest662 =
req66> A
,66A B
HttpResponse66C O
resp66P T
)66T U
{77 
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
resp;; 
.;; 
	AddHeader;; 
(;; 
$str;; %
,;;% &
$str;;' :
+;;; <
data;;= A
);;A B
;;;B C
}<< 	
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
$strDD 
;DD 
GoodG2BSinkEE 
(EE 
dataEE 
,EE 
reqEE 
,EE 
respEE  $
)EE% &
;EE& '
}FF 
privateHH 
staticHH 
voidHH 
GoodB2GSinkHH #
(HH# $
stringHH$ *
dataHH+ /
,HH0 1
HttpRequestHH2 =
reqHH> A
,HHA B
HttpResponseHHC O
respHHP T
)HHT U
{II 
ifJJ 

(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 	
dataMM 
=MM 
HttpUtilityMM 
.MM 
	UrlEncodeMM (
(MM( )
dataMM) -
,MM- .
EncodingMM/ 7
.MM7 8
UTF8MM8 <
)MM< =
;MM= >
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN %
,NN% &
$strNN' :
+NN; <
dataNN= A
)NNA B
;NNB C
}OO 	
}PP 
privateSS 
staticSS 
voidSS 
GoodB2GSS 
(SS  
HttpRequestSS  +
reqSS, /
,SS/ 0
HttpResponseSS1 =
respSS> B
)SSB C
{TT 
stringUU 
dataUU 
;UU 
dataWW 
=WW 
reqWW 
.WW 
ParamsWW 
.WW 
GetWW 
(WW 
$strWW $
)WW$ %
;WW% &
GoodB2GSinkXX 
(XX 
dataXX 
,XX 
reqXX 
,XX 
respXX  $
)XX% &
;XX& '
}YY 
}[[ 
}\\ û%
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_42 E
:F G
AbstractTestCaseWebH [
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
return## 
data## 
;## 
}$$ 
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
=(( 
	BadSource(( 
(((  
req((  #
,((# $
resp((% )
)(() *
;((* +
if)) 

()) 
data)) 
!=)) 
null)) 
))) 
{** 	
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, %
,,,% &
$str,,' :
+,,; <
data,,= A
),,A B
;,,B C
}-- 	
}.. 
private22 
static22 
string22 
GoodG2BSource22 '
(22' (
HttpRequest22( 3
req224 7
,227 8
HttpResponse229 E
resp22F J
)22J K
{33 
string44 
data44 
;44 
data66 
=66 
$str66 
;66 
return77 
data77 
;77 
}88 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< 
GoodG2BSource<< #
(<<# $
req<<$ '
,<<' (
resp<<) -
)<<- .
;<<. /
if== 

(== 
data== 
!=== 
null== 
)== 
{>> 	
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ %
,@@% &
$str@@' :
+@@; <
data@@= A
)@@A B
;@@B C
}AA 	
}BB 
privateEE 
staticEE 
stringEE 
GoodB2GSourceEE '
(EE' (
HttpRequestEE( 3
reqEE4 7
,EE7 8
HttpResponseEE9 E
respEEF J
)EEJ K
{FF 
stringGG 
dataGG 
;GG 
dataII 
=II 
reqII 
.II 
ParamsII 
.II 
GetII 
(II 
$strII $
)II$ %
;II% &
returnJJ 
dataJJ 
;JJ 
}KK 
privateMM 
staticMM 
voidMM 
GoodB2GMM 
(MM  
HttpRequestMM  +
reqMM, /
,MM/ 0
HttpResponseMM1 =
respMM> B
)MMB C
{NN 
stringOO 
dataOO 
=OO 
GoodB2GSourceOO #
(OO# $
reqOO$ '
,OO' (
respOO) -
)OO- .
;OO. /
ifPP 

(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 	
dataSS 
=SS 
HttpUtilitySS 
.SS 
	UrlEncodeSS (
(SS( )
dataSS) -
,SS- .
EncodingSS/ 7
.SS7 8
UTF8SS8 <
)SS< =
;SS= >
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT %
,TT% &
$strTT' :
+TT; <
dataTT= A
)TTA B
;TTB C
}UU 	
}VV 
publicXX 

overrideXX 
voidXX 
GoodXX 
(XX 
HttpRequestXX )
reqXX* -
,XX- .
HttpResponseXX/ ;
respXX< @
)XX@ A
{YY 
GoodG2BZZ 
(ZZ 
reqZZ 
,ZZ 
respZZ 
)ZZ 
;ZZ 
GoodB2G[[ 
([[ 
req[[ 
,[[ 
resp[[ 
)[[ 
;[[ 
}\\ 
}^^ 
}__  (
ÀC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class K
?CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_45 E
:F G
AbstractTestCaseWebH [
{ 
private 
string 
dataBad 
; 
private 
string 
dataGoodG2B 
; 
private   
string   
dataGoodB2G   
;   
private"" 
void"" 
BadSink"" 
("" 
HttpRequest"" $
req""% (
,""( )
HttpResponse""* 6
resp""7 ;
)""; <
{## 
string$$ 
data$$ 
=$$ 
dataBad$$ 
;$$ 
if%% 

(%% 
data%% 
!=%% 
null%% 
)%% 
{&& 	
resp(( 
.(( 
	AddHeader(( 
((( 
$str(( %
,((% &
$str((' :
+((; <
data((= A
)((A B
;((B C
})) 	
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
data00 
=00 
req00 
.00 
Params00 
.00 
Get00 
(00 
$str00 $
)00$ %
;00% &
dataBad11 
=11 
data11 
;11 
BadSink22 
(22 
req22 
,22 
resp22 
)22 
;22 
}33 
public66 

override66 
void66 
Good66 
(66 
HttpRequest66 )
req66* -
,66- .
HttpResponse66/ ;
resp66< @
)66@ A
{77 
GoodG2B88 
(88 
req88 
,88 
resp88 
)88 
;88 
GoodB2G99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
private<< 
void<< 
GoodG2BSink<< 
(<< 
HttpRequest<< (
req<<) ,
,<<, -
HttpResponse<<. :
resp<<; ?
)<<? @
{== 
string>> 
data>> 
=>> 
dataGoodG2B>> !
;>>! "
if?? 

(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 	
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB %
,BB% &
$strBB' :
+BB; <
dataBB= A
)BBA B
;BBB C
}CC 	
}DD 
privateGG 
voidGG 
GoodG2BGG 
(GG 
HttpRequestGG $
reqGG% (
,GG( )
HttpResponseGG* 6
respGG7 ;
)GG; <
{HH 
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
dataGoodG2BLL 
=LL 
dataLL 
;LL 
GoodG2BSinkMM 
(MM 
reqMM 
,MM 
respMM 
)MM 
;MM 
}NN 
privatePP 
voidPP 
GoodB2GSinkPP 
(PP 
HttpRequestPP (
reqPP) ,
,PP, -
HttpResponsePP. :
respPP; ?
)PP? @
{QQ 
stringRR 
dataRR 
=RR 
dataGoodB2GRR !
;RR! "
ifSS 

(SS 
dataSS 
!=SS 
nullSS 
)SS 
{TT 	
dataVV 
=VV 
HttpUtilityVV 
.VV 
	UrlEncodeVV (
(VV( )
dataVV) -
,VV- .
EncodingVV/ 7
.VV7 8
UTF8VV8 <
)VV< =
;VV= >
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW %
,WW% &
$strWW' :
+WW; <
dataWW= A
)WWA B
;WWB C
}XX 	
}YY 
private\\ 
void\\ 
GoodB2G\\ 
(\\ 
HttpRequest\\ $
req\\% (
,\\( )
HttpResponse\\* 6
resp\\7 ;
)\\; <
{]] 
string^^ 
data^^ 
;^^ 
data`` 
=`` 
req`` 
.`` 
Params`` 
.`` 
Get`` 
(`` 
$str`` $
)``$ %
;``% &
dataGoodB2Gaa 
=aa 
dataaa 
;aa 
GoodB2GSinkbb 
(bb 
reqbb 
,bb 
respbb 
)bb 
;bb 
}cc 
}ee 
}ff 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_51a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_51b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##b c
;##c d
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_51b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33f g
;33g h
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_51b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<f g
;<<g h
}== 
}?? 
}@@ Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_51b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_52c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53d H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53d'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53d-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_53d F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54b## H
.##H I
BadSink##I P
(##P Q
data##Q U
,##V W
req##X [
,##[ \
resp##] a
)##a b
;##b c
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
void.. 
GoodG2B.. 
(.. 
HttpRequest.. $
req..% (
,..( )
HttpResponse..* 6
resp..7 ;
)..; <
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54b33 H
.33H I
GoodG2BSink33I T
(33T U
data33U Y
,33Z [
req33\ _
,33_ `
resp33a e
)33e f
;33f g
}44 
private77 
void77 
GoodB2G77 
(77 
HttpRequest77 $
req77% (
,77( )
HttpResponse77* 6
resp777 ;
)77; <
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
data<<U Y
,<<Z [
req<<\ _
,<<_ `
resp<<a e
)<<e f
;<<f g
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54b F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54c H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54c'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54c-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54c F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54d H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54d'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54d-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54d F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54e H
.H I
BadSinkI P
(P Q
dataQ U
,V W
reqX [
,[ \
resp] a
)a b
;b c
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54e'' H
.''H I
GoodG2BSink''I T
(''T U
data''U Y
,''Z [
req''\ _
,''_ `
resp''a e
)''e f
;''f g
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54e-- H
.--H I
GoodB2GSink--I T
(--T U
data--U Y
,--Z [
req--\ _
,--_ `
resp--a e
)--e f
;--f g
}.. 
}00 
}11 Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_54e F
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Å
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_61a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_61b V
.V W
	BadSourceW `
(` a
reqa d
,d e
respf j
)j k
;k l
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_61b11 V
.11V W
GoodG2BSource11W d
(11d e
req11e h
,11h i
resp11j n
)11n o
;11o p
if22 

(22 
data22 
!=22 
null22 
)22 
{33 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_61b<< V
.<<V W
GoodB2GSource<<W d
(<<d e
req<<e h
,<<h i
resp<<j n
)<<n o
;<<o p
if== 

(== 
data== 
!=== 
null== 
)== 
{>> 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
data@@) -
,@@- .
Encoding@@/ 7
.@@7 8
UTF8@@8 <
)@@< =
;@@= >
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_61b F
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
return## 
data## 
;## 
}$$ 
public)) 

static)) 
string)) 
GoodG2BSource)) &
())& '
HttpRequest))' 2
req))3 6
,))6 7
HttpResponse))8 D
resp))E I
)))I J
{** 
string++ 
data++ 
;++ 
data-- 
=-- 
$str-- 
;-- 
return.. 
data.. 
;.. 
}// 
public22 

static22 
string22 
GoodB2GSource22 &
(22& '
HttpRequest22' 2
req223 6
,226 7
HttpResponse228 D
resp22E I
)22I J
{33 
string44 
data44 
;44 
data66 
=66 
req66 
.66 
Params66 
.66 
Get66 
(66 
$str66 $
)66$ %
;66% &
return77 
data77 
;77 
}88 
}:: 
};; ä
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_66a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &
string## 
[## 
]## 
	dataArray## 
=## 
new##  
string##! '
[##' (
$num##( )
]##) *
;##* +
	dataArray$$ 
[$$ 
$num$$ 
]$$ 
=$$ 
data$$ 
;$$ L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_66b%% H
.%%H I
BadSink%%I P
(%%P Q
	dataArray%%Q Z
,%%[ \
req%%] `
,%%` a
resp%%b f
)%%g h
;%%h i
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
GoodB2G,, 
(,, 
req,, 
,,, 
resp,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
HttpRequest00  +
req00, /
,00/ 0
HttpResponse001 =
resp00> B
)00B C
{11 
string22 
data22 
;22 
data44 
=44 
$str44 
;44 
string55 
[55 
]55 
	dataArray55 
=55 
new55  
string55! '
[55' (
$num55( )
]55) *
;55* +
	dataArray66 
[66 
$num66 
]66 
=66 
data66 
;66 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_66b77 H
.77H I
GoodG2BSink77I T
(77T U
	dataArray77U ^
,77_ `
req77a d
,77d e
resp77f j
)77k l
;77l m
}88 
private;; 
static;; 
void;; 
GoodB2G;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
string== 
data== 
;== 
data?? 
=?? 
req?? 
.?? 
Params?? 
.?? 
Get?? 
(?? 
$str?? $
)??$ %
;??% &
string@@ 
[@@ 
]@@ 
	dataArray@@ 
=@@ 
new@@  
string@@! '
[@@' (
$num@@( )
]@@) *
;@@* +
	dataArrayAA 
[AA 
$numAA 
]AA 
=AA 
dataAA 
;AA L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_66bBB H
.BBH I
GoodB2GSinkBBI T
(BBT U
	dataArrayBBU ^
,BB_ `
reqBBa d
,BBd e
respBBf j
)BBk l
;BBl m
}CC 
}EE 
}FF Ï
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_66b F
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ¢
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67a F
:G H
AbstractTestCaseWebI \
{ 
public 

class 
	Container 
{ 
public   
string   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data'' 
='' 
req'' 
.'' 
Params'' 
.'' 
Get'' 
('' 
$str'' $
)''$ %
;''% &
	Container(( 
dataContainer(( 
=((  !
new((" %
	Container((& /
(((/ 0
)((0 1
;((1 2
dataContainer)) 
.)) 
containerOne)) "
=))# $
data))% )
;))) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67b** H
.**H I
BadSink**I P
(**P Q
dataContainer**Q ^
,**_ `
req**a d
,**d e
resp**f j
)**k l
;**l m
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
HttpRequest55  +
req55, /
,55/ 0
HttpResponse551 =
resp55> B
)55B C
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 
	Container:: 
dataContainer:: 
=::  !
new::" %
	Container::& /
(::/ 0
)::0 1
;::1 2
dataContainer;; 
.;; 
containerOne;; "
=;;# $
data;;% )
;;;) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataContainer<<U b
,<<c d
req<<e h
,<<h i
resp<<j n
)<<o p
;<<p q
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
	ContainerEE 
dataContainerEE 
=EE  !
newEE" %
	ContainerEE& /
(EE/ 0
)EE0 1
;EE1 2
dataContainerFF 
.FF 
containerOneFF "
=FF# $
dataFF% )
;FF) *L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67bGG H
.GGH I
GoodB2GSinkGGI T
(GGT U
dataContainerGGU b
,GGc d
reqGGe h
,GGh i
respGGj n
)GGo p
;GGp q
}HH 
}JJ 
}KK ¹
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67b F
{ 
public 

static 
void 
BadSink 
( L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67a _
._ `
	Container` i
dataContainerj w
,x y
HttpRequest	z 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67a**# c
.**c d
	Container**d m
dataContainer**n {
,**| }
HttpRequest	**~ 
req
** 
,
** 
HttpResponse
** 
resp
**  
)
**  ¡
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_67a55# c
.55c d
	Container55d m
dataContainer55n {
,55| }
HttpRequest	55~ 
req
55 
,
55 
HttpResponse
55 
resp
55  
)
55  ¡
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68a F
:G H
AbstractTestCaseWebI \
{ 
public 

static 
string 
data 
; 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68b$$ H
.$$H I
BadSink$$I P
($$P Q
req$$Q T
,$$T U
resp$$V Z
)$$Z [
;$$[ \
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68b33 H
.33H I
GoodG2BSink33I T
(33T U
req33U X
,33X Y
resp33Z ^
)33^ _
;33_ `
}44 
private77 
static77 
void77 
GoodB2G77 
(77  
HttpRequest77  +
req77, /
,77/ 0
HttpResponse771 =
resp77> B
)77B C
{88 
data:: 
=:: 
req:: 
.:: 
Params:: 
.:: 
Get:: 
(:: 
$str:: $
)::$ %
;::% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68b;; H
.;;H I
GoodB2GSink;;I T
(;;T U
req;;U X
,;;X Y
resp;;Z ^
);;^ _
;;;_ `
}<< 
}>> 
}?? ¿
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68b F
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68a V
.V W
dataW [
;[ \
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68a,, V
.,,V W
data,,W [
;,,[ \
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_68a77 V
.77V W
data77W [
;77[ \
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA Ò
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_71a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_71b## H
.##H I
BadSink##I P
(##P Q
(##Q R
Object##R X
)##X Y
data##Y ]
,##^ _
req##` c
,##c d
resp##e i
)##j k
;##k l
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
HttpRequest..  +
req.., /
,../ 0
HttpResponse..1 =
resp..> B
)..B C
{// 
string00 
data00 
;00 
data22 
=22 
$str22 
;22 L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_71b33 H
.33H I
GoodG2BSink33I T
(33T U
(33U V
Object33V \
)33\ ]
data33] a
,33b c
req33d g
,33g h
resp33i m
)33n o
;33o p
}44 
private77 
static77 
void77 
GoodB2G77 
(77  
HttpRequest77  +
req77, /
,77/ 0
HttpResponse771 =
resp77> B
)77B C
{88 
string99 
data99 
;99 
data;; 
=;; 
req;; 
.;; 
Params;; 
.;; 
Get;; 
(;; 
$str;; $
);;$ %
;;;% &L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_71b<< H
.<<H I
GoodB2GSink<<I T
(<<T U
(<<U V
Object<<V \
)<<\ ]
data<<] a
,<<b c
req<<d g
,<<g h
resp<<i m
)<<n o
;<<o p
}== 
}?? 
}@@ 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_71b F
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB Â&
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_72a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &
	Hashtable$$ 
dataHashtable$$ 
=$$  !
new$$" %
	Hashtable$$& /
($$/ 0
$num$$0 1
)$$1 2
;$$2 3
dataHashtable%% 
.%% 
Add%% 
(%% 
$num%% 
,%% 
data%% !
)%%! "
;%%" #
dataHashtable&& 
.&& 
Add&& 
(&& 
$num&& 
,&& 
data&& !
)&&! "
;&&" #
dataHashtable'' 
.'' 
Add'' 
('' 
$num'' 
,'' 
data'' !
)''! "
;''" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_72b(( H
.((H I
BadSink((I P
(((P Q
dataHashtable((Q ^
,((_ `
req((a d
,((d e
resp((f j
)((k l
;((l m
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 
	Hashtable88 
dataHashtable88 
=88  !
new88" %
	Hashtable88& /
(88/ 0
$num880 1
)881 2
;882 3
dataHashtable99 
.99 
Add99 
(99 
$num99 
,99 
data99 !
)99! "
;99" #
dataHashtable:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: !
)::! "
;::" #
dataHashtable;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; !
);;! "
;;;" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_72b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataHashtable<<U b
,<<c d
req<<e h
,<<h i
resp<<j n
)<<o p
;<<p q
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
	HashtableEE 
dataHashtableEE 
=EE  !
newEE" %
	HashtableEE& /
(EE/ 0
$numEE0 1
)EE1 2
;EE2 3
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #
dataHashtableHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH !
)HH! "
;HH" #L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_72bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataHashtableIIU b
,IIc d
reqIIe h
,IIh i
respIIj n
)IIo p
;IIp q
}JJ 
}LL 
}MM ¬
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_72b F
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB È&
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_73a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &

LinkedList$$ 
<$$ 
string$$ 
>$$ 
dataLinkedList$$ )
=$$* +
new$$, /

LinkedList$$0 :
<$$: ;
string$$; A
>$$A B
($$B C
)$$C D
;$$D E
dataLinkedList%% 
.%% 
AddLast%% 
(%% 
data%% #
)%%# $
;%%$ %
dataLinkedList&& 
.&& 
AddLast&& 
(&& 
data&& #
)&&# $
;&&$ %
dataLinkedList'' 
.'' 
AddLast'' 
('' 
data'' #
)''# $
;''$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_73b(( H
.((H I
BadSink((I P
(((P Q
dataLinkedList((Q _
,((` a
req((b e
,((e f
resp((g k
)((l m
;((m n
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 

LinkedList88 
<88 
string88 
>88 
dataLinkedList88 )
=88* +
new88, /

LinkedList880 :
<88: ;
string88; A
>88A B
(88B C
)88C D
;88D E
dataLinkedList99 
.99 
AddLast99 
(99 
data99 #
)99# $
;99$ %
dataLinkedList:: 
.:: 
AddLast:: 
(:: 
data:: #
)::# $
;::$ %
dataLinkedList;; 
.;; 
AddLast;; 
(;; 
data;; #
);;# $
;;;$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_73b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataLinkedList<<U c
,<<d e
req<<f i
,<<i j
resp<<k o
)<<p q
;<<q r
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &

LinkedListEE 
<EE 
stringEE 
>EE 
dataLinkedListEE )
=EE* +
newEE, /

LinkedListEE0 :
<EE: ;
stringEE; A
>EEA B
(EEB C
)EEC D
;EED E
dataLinkedListFF 
.FF 
AddLastFF 
(FF 
dataFF #
)FF# $
;FF$ %
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %
dataLinkedListHH 
.HH 
AddLastHH 
(HH 
dataHH #
)HH# $
;HH$ %L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_73bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataLinkedListIIU c
,IId e
reqIIf i
,IIi j
respIIk o
)IIp q
;IIq r
}JJ 
}LL 
}MM î
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_73b F
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB *
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_74a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data## 
=## 
req## 
.## 
Params## 
.## 
Get## 
(## 
$str## $
)##$ %
;##% &

Dictionary$$ 
<$$ 
int$$ 
,$$ 
string$$ 
>$$ 
dataDictionary$$ -
=$$. /
new$$0 3

Dictionary$$4 >
<$$> ?
int$$? B
,$$B C
string$$C I
>$$I J
($$J K
)$$K L
;$$L M
dataDictionary%% 
.%% 
Add%% 
(%% 
$num%% 
,%% 
data%% "
)%%" #
;%%# $
dataDictionary&& 
.&& 
Add&& 
(&& 
$num&& 
,&& 
data&& "
)&&" #
;&&# $
dataDictionary'' 
.'' 
Add'' 
('' 
$num'' 
,'' 
data'' "
)''" #
;''# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_74b(( H
.((H I
BadSink((I P
(((P Q
dataDictionary((Q _
,((` a
req((b e
,((e f
resp((g k
)((l m
;((m n
})) 
public,, 

override,, 
void,, 
Good,, 
(,, 
HttpRequest,, )
req,,* -
,,,- .
HttpResponse,,/ ;
resp,,< @
),,@ A
{-- 
GoodG2B.. 
(.. 
req.. 
,.. 
resp.. 
).. 
;.. 
GoodB2G// 
(// 
req// 
,// 
resp// 
)// 
;// 
}00 
private33 
static33 
void33 
GoodG2B33 
(33  
HttpRequest33  +
req33, /
,33/ 0
HttpResponse331 =
resp33> B
)33B C
{44 
string55 
data55 
;55 
data77 
=77 
$str77 
;77 

Dictionary88 
<88 
int88 
,88 
string88 
>88 
dataDictionary88 -
=88. /
new880 3

Dictionary884 >
<88> ?
int88? B
,88B C
string88C I
>88I J
(88J K
)88K L
;88L M
dataDictionary99 
.99 
Add99 
(99 
$num99 
,99 
data99 "
)99" #
;99# $
dataDictionary:: 
.:: 
Add:: 
(:: 
$num:: 
,:: 
data:: "
)::" #
;::# $
dataDictionary;; 
.;; 
Add;; 
(;; 
$num;; 
,;; 
data;; "
);;" #
;;;# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_74b<< H
.<<H I
GoodG2BSink<<I T
(<<T U
dataDictionary<<U c
,<<d e
req<<f i
,<<i j
resp<<k o
)<<p q
;<<q r
}== 
private@@ 
static@@ 
void@@ 
GoodB2G@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &

DictionaryEE 
<EE 
intEE 
,EE 
stringEE 
>EE 
dataDictionaryEE -
=EE. /
newEE0 3

DictionaryEE4 >
<EE> ?
intEE? B
,EEB C
stringEEC I
>EEI J
(EEJ K
)EEK L
;EEL M
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $
dataDictionaryHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH "
)HH" #
;HH# $L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_74bII H
.IIH I
GoodB2GSinkIII T
(IIT U
dataDictionaryIIU c
,IId e
reqIIf i
,IIi j
respIIk o
)IIp q
;IIq r
}JJ 
}LL 
}MM 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_74b F
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB é5
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_75a F
:G H
AbstractTestCaseWebI \
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data%% 
=%% 
req%% 
.%% 
Params%% 
.%% 
Get%% 
(%% 
$str%% $
)%%$ %
;%%% &
byte'' 
['' 
]'' 
dataSerialized'' 
='' 
null''  $
;''$ %
try(( 
{)) 	
BinaryFormatter** 
bf** 
=**  
new**! $
BinaryFormatter**% 4
(**4 5
)**5 6
;**6 7
using++ 
(++ 
var++ 
ms++ 
=++ 
new++ 
MemoryStream++  ,
(++, -
)++- .
)++. /
{,, 
bf-- 
.-- 
	Serialize-- 
(-- 
ms-- 
,--  
data--! %
)--% &
;--& '
dataSerialized.. 
=..  
ms..! #
...# $
ToArray..$ +
(..+ ,
).., -
;..- .
}// L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_75b00 L
.00L M
BadSink00M T
(00T U
dataSerialized00U c
,00d e
req00f i
,00i j
resp00k o
)00p q
;00q r
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. X
,44X Y
exceptSerialize44Z i
)44i j
;44j k
}55 	
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
reqDD 
.DD 
ParamsDD 
.DD 
GetDD 
(DD 
$strDD $
)DD$ %
;DD% &
byteFF 
[FF 
]FF 
dataSerializedFF 
=FF 
nullFF  $
;FF$ %
tryGG 
{HH 	
BinaryFormatterII 
bfII 
=II  
newII! $
BinaryFormatterII% 4
(II4 5
)II5 6
;II6 7
usingJJ 
(JJ 
varJJ 
msJJ 
=JJ 
newJJ 
MemoryStreamJJ  ,
(JJ, -
)JJ- .
)JJ. /
{KK 
bfLL 
.LL 
	SerializeLL 
(LL 
msLL 
,LL  
dataLL! %
)LL% &
;LL& '
dataSerializedMM 
=MM  
msMM! #
.MM# $
ToArrayMM$ +
(MM+ ,
)MM, -
;MM- .
}NN L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_75bOO L
.OOL M
GoodG2BSinkOOM X
(OOX Y
dataSerializedOOY g
,OOh i
reqOOj m
,OOm n
respOOo s
)OOt u
;OOu v
}PP 	
catchQQ 
(QQ "
SerializationExceptionQQ %
exceptSerializeQQ& 5
)QQ5 6
{RR 	
IOSS 
.SS 
LoggerSS 
.SS 
LogSS 
(SS 
NLogSS 
.SS 
LogLevelSS '
.SS' (
WarnSS( ,
,SS, -
$strSS. X
,SSX Y
exceptSerializeSSZ i
)SSi j
;SSj k
}TT 	
}UU 
privateXX 
staticXX 
voidXX 
GoodB2GXX 
(XX  
HttpRequestXX  +
reqXX, /
,XX/ 0
HttpResponseXX1 =
respXX> B
)XXB C
{YY 
stringZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
req\\ 
.\\ 
Params\\ 
.\\ 
Get\\ 
(\\ 
$str\\ $
)\\$ %
;\\% &
byte^^ 
[^^ 
]^^ 
dataSerialized^^ 
=^^ 
null^^  $
;^^$ %
try__ 
{`` 	
BinaryFormatteraa 
bfaa 
=aa  
newaa! $
BinaryFormatteraa% 4
(aa4 5
)aa5 6
;aa6 7
usingbb 
(bb 
varbb 
msbb 
=bb 
newbb 
MemoryStreambb  ,
(bb, -
)bb- .
)bb. /
{cc 
bfdd 
.dd 
	Serializedd 
(dd 
msdd 
,dd  
datadd! %
)dd% &
;dd& '
dataSerializedee 
=ee  
msee! #
.ee# $
ToArrayee$ +
(ee+ ,
)ee, -
;ee- .
}ff L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_75bgg L
.ggL M
GoodB2GSinkggM X
(ggX Y
dataSerializedggY g
,ggh i
reqggj m
,ggm n
respggo s
)ggt u
;ggu v
}hh 	
catchii 
(ii "
SerializationExceptionii %
exceptSerializeii& 5
)ii5 6
{jj 	
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk 
.kk 
LogLevelkk '
.kk' (
Warnkk( ,
,kk, -
$strkk. X
,kkX Y
exceptSerializekkZ i
)kki j
;kkj k
}ll 	
}mm 
}oo 
}pp ®8
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_75b F
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if,, 
(,, 
data,, 
!=,, 
null,, 
),, 
{-- 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
if`` 
(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
datacc- 1
,cc1 2
Encodingcc3 ;
.cc; <
UTF8cc< @
)cc@ A
;ccA B
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn 
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81a F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data"" 
="" 
req"" 
."" 
Params"" 
."" 
Get"" 
("" 
$str"" $
)""$ %
;""% &P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base## L

baseObject##M W
=##X Y
new##Z ]P
CCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_bad	##^ ¡
(
##¡ ¢
)
##¢ £
;
##£ ¤

baseObject$$ 
.$$ 
Action$$ 
($$ 
data$$ 
,$$  
req$$! $
,$$$ %
resp$$& *
)$$* +
;$$+ ,
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
void// 
GoodG2B// 
(// 
HttpRequest// $
req//% (
,//( )
HttpResponse//* 6
resp//7 ;
)//; <
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base44 L

baseObject44M W
=44X Y
new44Z ]T
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_goodG2B	44^ ¥
(
44¥ ¦
)
44¦ §
;
44§ ¨

baseObject55 
.55 
Action55 
(55 
data55 
,55  
req55! $
,55$ %
resp55& *
)55* +
;55+ ,
}66 
private99 
void99 
GoodB2G99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
data;; 
;;; 
data== 
=== 
req== 
.== 
Params== 
.== 
Get== 
(== 
$str== $
)==$ %
;==% &P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base>> L

baseObject>>M W
=>>X Y
new>>Z ]T
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_goodB2G	>>^ ¥
(
>>¥ ¦
)
>>¦ §
;
>>§ ¨

baseObject?? 
.?? 
Action?? 
(?? 
data?? 
,??  
req??! $
,??$ %
resp??& *
)??* +
;??+ ,
}@@ 
}BB 
}CC 	
ÄC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class O
CCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_bad I
:J KQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base	L 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& ó
ÅC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 P
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base S
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ò

ÈC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class S
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_goodB2G M
:N OQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base	P 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
data##) -
,##- .
Encoding##/ 7
.##7 8
UTF8##8 <
)##< =
;##= >
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( 	
ÈC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class S
GCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_goodG2B M
:N OQ
DCWE113_HTTP_Response_Splitting__Web_Params_Get_Web_setHeader_81_base	P 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' é!
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_01 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
if)) 

()) 
data)) 
!=)) 
null)) 
))) 
{** 	

HttpCookie++ 

cookieSink++ !
=++" #
new++$ '

HttpCookie++( 2
(++2 3
$str++3 9
,++9 :
data++; ?
)++? @
;++@ A
resp-- 
.-- 
AppendCookie-- 
(-- 

cookieSink-- (
)--( )
;--) *
}.. 	
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
void99 
GoodG2B99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	

HttpCookie@@ 

cookieSink@@ !
=@@" #
new@@$ '

HttpCookie@@( 2
(@@2 3
$str@@3 9
,@@9 :
data@@; ?
)@@? @
;@@@ A
respBB 
.BB 
AppendCookieBB 
(BB 

cookieSinkBB (
)BB( )
;BB) *
}CC 	
}DD 
privateGG 
voidGG 
GoodB2GGG 
(GG 
HttpRequestGG $
reqGG% (
,GG( )
HttpResponseGG* 6
respGG7 ;
)GG; <
{HH 
stringII 
dataII 
;II 
dataJJ 
=JJ 
$strJJ 
;JJ 
{LL 	
ifMM 
(MM 
reqMM 
.MM 
QueryStringMM 
[MM  
$strMM  $
]MM$ %
!=MM& (
nullMM) -
)MM- .
{NN 
dataOO 
=OO 
reqOO 
.OO 
QueryStringOO &
[OO& '
$strOO' +
]OO+ ,
;OO, -
}PP 
}QQ 	
ifRR 

(RR 
dataRR 
!=RR 
nullRR 
)RR 
{SS 	

HttpCookieTT 

cookieSinkTT !
=TT" #
newTT$ '

HttpCookieTT( 2
(TT2 3
$strTT3 9
,TT9 :
HttpUtilityTT; F
.TTF G
	UrlEncodeTTG P
(TTP Q
dataTTQ U
,TTU V
EncodingTTW _
.TT_ `
UTF8TT` d
)TTd e
)TTe f
;TTf g
respVV 
.VV 
AppendCookieVV 
(VV 

cookieSinkVV (
)VV( )
;VV) *
}WW 	
}XX 
}ZZ 
}[[ ßD
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_02 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
true22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
falseBB 
)BB 
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
trueMM 
)MM 
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
true\\ 
)\\ 
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
truegg 
)gg 
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
truevv 
)vv 
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
false
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
   
(
   
req
   
.
   
QueryString
   #
[
  # $
$str
  $ (
]
  ( )
!=
  * ,
null
  - 1
)
  1 2
{
¡¡ 
data
¢¢ 
=
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ *
[
¢¢* +
$str
¢¢+ /
]
¢¢/ 0
;
¢¢0 1
}
££ 
}
¤¤ 
}
¥¥ 	
else
¦¦ 
{
§§ 	
data
ªª 
=
ªª 
null
ªª 
;
ªª 
}
«« 	
if
¬¬ 

(
¬¬ 
true
¬¬ 
)
¬¬ 
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 

HttpCookie
°° 

cookieSink
°° %
=
°°& '
new
°°( +

HttpCookie
°°, 6
(
°°6 7
$str
°°7 =
,
°°= >
HttpUtility
°°? J
.
°°J K
	UrlEncode
°°K T
(
°°T U
data
°°U Y
,
°°Y Z
Encoding
°°[ c
.
°°c d
UTF8
°°d h
)
°°h i
)
°°i j
;
°°j k
resp
²² 
.
²² 
AppendCookie
²² !
(
²²! "

cookieSink
²²" ,
)
²², -
;
²²- .
}
³³ 
}
´´ 	
}
µµ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
¸¸ 
GoodG2B1
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
GoodG2B2
ºº 
(
ºº 
req
ºº 
,
ºº 
resp
ºº 
)
ºº 
;
ºº 
GoodB2G1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodB2G2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 
}¿¿ 
}ÀÀ ½G
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_03 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
$num22 
==22 
$num22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
$numBB 
!=BB 
$numBB 
)BB 
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
$numMM 
==MM 
$numMM 
)MM 
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
$num\\ 
==\\ 
$num\\ 
)\\ 
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
$numgg 
==gg 
$numgg 
)gg 
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
$numvv 
==vv 
$numvv 
)vv 
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
   
(
   
req
   
.
   
QueryString
   #
[
  # $
$str
  $ (
]
  ( )
!=
  * ,
null
  - 1
)
  1 2
{
¡¡ 
data
¢¢ 
=
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ *
[
¢¢* +
$str
¢¢+ /
]
¢¢/ 0
;
¢¢0 1
}
££ 
}
¤¤ 
}
¥¥ 	
else
¦¦ 
{
§§ 	
data
ªª 
=
ªª 
null
ªª 
;
ªª 
}
«« 	
if
¬¬ 

(
¬¬ 
$num
¬¬ 
==
¬¬ 
$num
¬¬ 
)
¬¬ 
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 

HttpCookie
°° 

cookieSink
°° %
=
°°& '
new
°°( +

HttpCookie
°°, 6
(
°°6 7
$str
°°7 =
,
°°= >
HttpUtility
°°? J
.
°°J K
	UrlEncode
°°K T
(
°°T U
data
°°U Y
,
°°Y Z
Encoding
°°[ c
.
°°c d
UTF8
°°d h
)
°°h i
)
°°i j
;
°°j k
resp
²² 
.
²² 
AppendCookie
²² !
(
²²! "

cookieSink
²²" ,
)
²², -
;
²²- .
}
³³ 
}
´´ 	
}
µµ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
¸¸ 
GoodG2B1
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
GoodG2B2
ºº 
(
ºº 
req
ºº 
,
ºº 
resp
ºº 
)
ºº 
;
ºº 
GoodB2G1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodB2G2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 
}¿¿ 
}ÀÀ ±H
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_04 F
:G H
AbstractTestCaseWebI \
{ 
private"" 
const"" 
bool"" 
PRIVATE_CONST_TRUE"" )
=""* +
true"", 0
;""0 1
private## 
const## 
bool## 
PRIVATE_CONST_FALSE## *
=##+ ,
false##- 2
;##2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{,, 
if-- 
(-- 
req-- 
.-- 
QueryString-- #
[--# $
$str--$ (
]--( )
!=--* ,
null--- 1
)--1 2
{.. 
data// 
=// 
req// 
.// 
QueryString// *
[//* +
$str//+ /
]/// 0
;//0 1
}00 
}11 
}22 	
else33 
{44 	
data77 
=77 
null77 
;77 
}88 	
if99 

(99 
PRIVATE_CONST_TRUE99 
)99 
{:: 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 

HttpCookie== 

cookieSink== %
===& '
new==( +

HttpCookie==, 6
(==6 7
$str==7 =
,=== >
data==? C
)==C D
;==D E
resp?? 
.?? 
AppendCookie?? !
(??! "

cookieSink??" ,
)??, -
;??- .
}@@ 
}AA 	
}BB 
privateFF 
voidFF 
GoodG2B1FF 
(FF 
HttpRequestFF %
reqFF& )
,FF) *
HttpResponseFF+ 7
respFF8 <
)FF< =
{GG 
stringHH 
dataHH 
;HH 
ifII 

(II 
PRIVATE_CONST_FALSEII 
)II  
{JJ 	
dataMM 
=MM 
nullMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$strRR 
;RR 
}SS 	
ifTT 

(TT 
PRIVATE_CONST_TRUETT 
)TT 
{UU 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 

HttpCookieXX 

cookieSinkXX %
=XX& '
newXX( +

HttpCookieXX, 6
(XX6 7
$strXX7 =
,XX= >
dataXX? C
)XXC D
;XXD E
respZZ 
.ZZ 
AppendCookieZZ !
(ZZ! "

cookieSinkZZ" ,
)ZZ, -
;ZZ- .
}[[ 
}\\ 	
}]] 
private`` 
void`` 
GoodG2B2`` 
(`` 
HttpRequest`` %
req``& )
,``) *
HttpResponse``+ 7
resp``8 <
)``< =
{aa 
stringbb 
databb 
;bb 
ifcc 

(cc 
PRIVATE_CONST_TRUEcc 
)cc 
{dd 	
dataff 
=ff 
$strff 
;ff 
}gg 	
elsehh 
{ii 	
datall 
=ll 
nullll 
;ll 
}mm 	
ifnn 

(nn 
PRIVATE_CONST_TRUEnn 
)nn 
{oo 	
ifpp 
(pp 
datapp 
!=pp 
nullpp 
)pp 
{qq 

HttpCookierr 

cookieSinkrr %
=rr& '
newrr( +

HttpCookierr, 6
(rr6 7
$strrr7 =
,rr= >
datarr? C
)rrC D
;rrD E
resptt 
.tt 
AppendCookiett !
(tt! "

cookieSinktt" ,
)tt, -
;tt- .
}uu 
}vv 	
}ww 
privatezz 
voidzz 
GoodB2G1zz 
(zz 
HttpRequestzz %
reqzz& )
,zz) *
HttpResponsezz+ 7
respzz8 <
)zz< =
{{{ 
string|| 
data|| 
;|| 
if}} 

(}} 
PRIVATE_CONST_TRUE}} 
)}} 
{~~ 	
data 
= 
$str 
; 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PRIVATE_CONST_FALSE
 
)
  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
   
string
¡¡ 
data
¡¡ 
;
¡¡ 
if
¢¢ 

(
¢¢  
PRIVATE_CONST_TRUE
¢¢ 
)
¢¢ 
{
££ 	
data
¤¤ 
=
¤¤ 
$str
¤¤ 
;
¤¤ 
{
¦¦ 
if
§§ 
(
§§ 
req
§§ 
.
§§ 
QueryString
§§ #
[
§§# $
$str
§§$ (
]
§§( )
!=
§§* ,
null
§§- 1
)
§§1 2
{
¨¨ 
data
©© 
=
©© 
req
©© 
.
©© 
QueryString
©© *
[
©©* +
$str
©©+ /
]
©©/ 0
;
©©0 1
}
ªª 
}
«« 
}
¬¬ 	
else
­­ 
{
®® 	
data
±± 
=
±± 
null
±± 
;
±± 
}
²² 	
if
³³ 

(
³³  
PRIVATE_CONST_TRUE
³³ 
)
³³ 
{
´´ 	
if
µµ 
(
µµ 
data
µµ 
!=
µµ 
null
µµ 
)
µµ 
{
¶¶ 

HttpCookie
·· 

cookieSink
·· %
=
··& '
new
··( +

HttpCookie
··, 6
(
··6 7
$str
··7 =
,
··= >
HttpUtility
··? J
.
··J K
	UrlEncode
··K T
(
··T U
data
··U Y
,
··Y Z
Encoding
··[ c
.
··c d
UTF8
··d h
)
··h i
)
··i j
;
··j k
resp
¹¹ 
.
¹¹ 
AppendCookie
¹¹ !
(
¹¹! "

cookieSink
¹¹" ,
)
¹¹, -
;
¹¹- .
}
ºº 
}
»» 	
}
¼¼ 
public
¾¾ 

override
¾¾ 
void
¾¾ 
Good
¾¾ 
(
¾¾ 
HttpRequest
¾¾ )
req
¾¾* -
,
¾¾- .
HttpResponse
¾¾/ ;
resp
¾¾< @
)
¾¾@ A
{
¿¿ 
GoodG2B1
ÀÀ 
(
ÀÀ 
req
ÀÀ 
,
ÀÀ 
resp
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodG2B2
ÁÁ 
(
ÁÁ 
req
ÁÁ 
,
ÁÁ 
resp
ÁÁ 
)
ÁÁ 
;
ÁÁ 
GoodB2G1
ÂÂ 
(
ÂÂ 
req
ÂÂ 
,
ÂÂ 
resp
ÂÂ 
)
ÂÂ 
;
ÂÂ 
GoodB2G2
ÃÃ 
(
ÃÃ 
req
ÃÃ 
,
ÃÃ 
resp
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÄÄ 
}ÆÆ 
}ÇÇ ·G
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_05 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
$str)) 
;)) 
{++ 
if,, 
(,, 
req,, 
.,, 
QueryString,, #
[,,# $
$str,,$ (
],,( )
!=,,* ,
null,,- 1
),,1 2
{-- 
data.. 
=.. 
req.. 
... 
QueryString.. *
[..* +
$str..+ /
]../ 0
;..0 1
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
privateTrue88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
privateFalseHH 
)HH 
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
privateTrueSS 
)SS 
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
privateTruebb 
)bb 
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
privateTruemm 
)mm 
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
privateTrue|| 
)|| 
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
   
data
   
;
   
if
¡¡ 

(
¡¡ 
privateTrue
¡¡ 
)
¡¡ 
{
¢¢ 	
data
££ 
=
££ 
$str
££ 
;
££ 
{
¥¥ 
if
¦¦ 
(
¦¦ 
req
¦¦ 
.
¦¦ 
QueryString
¦¦ #
[
¦¦# $
$str
¦¦$ (
]
¦¦( )
!=
¦¦* ,
null
¦¦- 1
)
¦¦1 2
{
§§ 
data
¨¨ 
=
¨¨ 
req
¨¨ 
.
¨¨ 
QueryString
¨¨ *
[
¨¨* +
$str
¨¨+ /
]
¨¨/ 0
;
¨¨0 1
}
©© 
}
ªª 
}
«« 	
else
¬¬ 
{
­­ 	
data
°° 
=
°° 
null
°° 
;
°° 
}
±± 	
if
²² 

(
²² 
privateTrue
²² 
)
²² 
{
³³ 	
if
´´ 
(
´´ 
data
´´ 
!=
´´ 
null
´´ 
)
´´ 
{
µµ 

HttpCookie
¶¶ 

cookieSink
¶¶ %
=
¶¶& '
new
¶¶( +

HttpCookie
¶¶, 6
(
¶¶6 7
$str
¶¶7 =
,
¶¶= >
HttpUtility
¶¶? J
.
¶¶J K
	UrlEncode
¶¶K T
(
¶¶T U
data
¶¶U Y
,
¶¶Y Z
Encoding
¶¶[ c
.
¶¶c d
UTF8
¶¶d h
)
¶¶h i
)
¶¶i j
;
¶¶j k
resp
¸¸ 
.
¸¸ 
AppendCookie
¸¸ !
(
¸¸! "

cookieSink
¸¸" ,
)
¸¸, -
;
¸¸- .
}
¹¹ 
}
ºº 	
}
»» 
public
½½ 

override
½½ 
void
½½ 
Good
½½ 
(
½½ 
HttpRequest
½½ )
req
½½* -
,
½½- .
HttpResponse
½½/ ;
resp
½½< @
)
½½@ A
{
¾¾ 
GoodG2B1
¿¿ 
(
¿¿ 
req
¿¿ 
,
¿¿ 
resp
¿¿ 
)
¿¿ 
;
¿¿ 
GoodG2B2
ÀÀ 
(
ÀÀ 
req
ÀÀ 
,
ÀÀ 
resp
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodB2G1
ÁÁ 
(
ÁÁ 
req
ÁÁ 
,
ÁÁ 
resp
ÁÁ 
)
ÁÁ 
;
ÁÁ 
GoodB2G2
ÂÂ 
(
ÂÂ 
req
ÂÂ 
,
ÂÂ 
resp
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÃÃ 
}ÅÅ 
}ÆÆ J
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_06 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&&  
$num&&  !
)&&! "
{'' 	
data(( 
=(( 
$str(( 
;(( 
{** 
if++ 
(++ 
req++ 
.++ 
QueryString++ #
[++# $
$str++$ (
]++( )
!=++* ,
null++- 1
)++1 2
{,, 
data-- 
=-- 
req-- 
.-- 
QueryString-- *
[--* +
$str--+ /
]--/ 0
;--0 1
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
null55 
;55 
}66 	
if77 

(77 
PRIVATE_CONST_FIVE77 
==77  
$num77  !
)77! "
{88 	
if99 
(99 
data99 
!=99 
null99 
)99 
{:: 

HttpCookie;; 

cookieSink;; %
=;;& '
new;;( +

HttpCookie;;, 6
(;;6 7
$str;;7 =
,;;= >
data;;? C
);;C D
;;;D E
resp== 
.== 
AppendCookie== !
(==! "

cookieSink==" ,
)==, -
;==- .
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
PRIVATE_CONST_FIVEGG 
!=GG  
$numGG  !
)GG! "
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
PRIVATE_CONST_FIVERR 
==RR  
$numRR  !
)RR! "
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 

HttpCookieVV 

cookieSinkVV %
=VV& '
newVV( +

HttpCookieVV, 6
(VV6 7
$strVV7 =
,VV= >
dataVV? C
)VVC D
;VVD E
respXX 
.XX 
AppendCookieXX !
(XX! "

cookieSinkXX" ,
)XX, -
;XX- .
}YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodG2B2^^ 
(^^ 
HttpRequest^^ %
req^^& )
,^^) *
HttpResponse^^+ 7
resp^^8 <
)^^< =
{__ 
string`` 
data`` 
;`` 
ifaa 

(aa 
PRIVATE_CONST_FIVEaa 
==aa  
$numaa  !
)aa! "
{bb 	
datadd 
=dd 
$strdd 
;dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
ifll 

(ll 
PRIVATE_CONST_FIVEll 
==ll  
$numll  !
)ll! "
{mm 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 

HttpCookiepp 

cookieSinkpp %
=pp& '
newpp( +

HttpCookiepp, 6
(pp6 7
$strpp7 =
,pp= >
datapp? C
)ppC D
;ppD E
resprr 
.rr 
AppendCookierr !
(rr! "

cookieSinkrr" ,
)rr, -
;rr- .
}ss 
}tt 	
}uu 
privatexx 
voidxx 
GoodB2G1xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
PRIVATE_CONST_FIVE{{ 
=={{  
$num{{  !
){{! "
{|| 	
data}} 
=}} 
$str}} 
;}} 
{ 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
!=
  
$num
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
   

(
    
PRIVATE_CONST_FIVE
   
==
    
$num
    !
)
  ! "
{
¡¡ 	
data
¢¢ 
=
¢¢ 
$str
¢¢ 
;
¢¢ 
{
¤¤ 
if
¥¥ 
(
¥¥ 
req
¥¥ 
.
¥¥ 
QueryString
¥¥ #
[
¥¥# $
$str
¥¥$ (
]
¥¥( )
!=
¥¥* ,
null
¥¥- 1
)
¥¥1 2
{
¦¦ 
data
§§ 
=
§§ 
req
§§ 
.
§§ 
QueryString
§§ *
[
§§* +
$str
§§+ /
]
§§/ 0
;
§§0 1
}
¨¨ 
}
©© 
}
ªª 	
else
«« 
{
¬¬ 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
°° 	
if
±± 

(
±±  
PRIVATE_CONST_FIVE
±± 
==
±±  
$num
±±  !
)
±±! "
{
²² 	
if
³³ 
(
³³ 
data
³³ 
!=
³³ 
null
³³ 
)
³³ 
{
´´ 

HttpCookie
µµ 

cookieSink
µµ %
=
µµ& '
new
µµ( +

HttpCookie
µµ, 6
(
µµ6 7
$str
µµ7 =
,
µµ= >
HttpUtility
µµ? J
.
µµJ K
	UrlEncode
µµK T
(
µµT U
data
µµU Y
,
µµY Z
Encoding
µµ[ c
.
µµc d
UTF8
µµd h
)
µµh i
)
µµi j
;
µµj k
resp
·· 
.
·· 
AppendCookie
·· !
(
··! "

cookieSink
··" ,
)
··, -
;
··- .
}
¸¸ 
}
¹¹ 	
}
ºº 
public
¼¼ 

override
¼¼ 
void
¼¼ 
Good
¼¼ 
(
¼¼ 
HttpRequest
¼¼ )
req
¼¼* -
,
¼¼- .
HttpResponse
¼¼/ ;
resp
¼¼< @
)
¼¼@ A
{
½½ 
GoodG2B1
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
GoodG2B2
¿¿ 
(
¿¿ 
req
¿¿ 
,
¿¿ 
resp
¿¿ 
)
¿¿ 
;
¿¿ 
GoodB2G1
ÀÀ 
(
ÀÀ 
req
ÀÀ 
,
ÀÀ 
resp
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodB2G2
ÁÁ 
(
ÁÁ 
req
ÁÁ 
,
ÁÁ 
resp
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ÂÂ 
}ÄÄ 
}ÅÅ  I
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_07 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
$str(( 
;(( 
{** 
if++ 
(++ 
req++ 
.++ 
QueryString++ #
[++# $
$str++$ (
]++( )
!=++* ,
null++- 1
)++1 2
{,, 
data-- 
=-- 
req-- 
.-- 
QueryString-- *
[--* +
$str--+ /
]--/ 0
;--0 1
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
null55 
;55 
}66 	
if77 

(77 
privateFive77 
==77 
$num77 
)77 
{88 	
if99 
(99 
data99 
!=99 
null99 
)99 
{:: 

HttpCookie;; 

cookieSink;; %
=;;& '
new;;( +

HttpCookie;;, 6
(;;6 7
$str;;7 =
,;;= >
data;;? C
);;C D
;;;D E
resp== 
.== 
AppendCookie== !
(==! "

cookieSink==" ,
)==, -
;==- .
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
privateFiveGG 
!=GG 
$numGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
privateFiveRR 
==RR 
$numRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 

HttpCookieVV 

cookieSinkVV %
=VV& '
newVV( +

HttpCookieVV, 6
(VV6 7
$strVV7 =
,VV= >
dataVV? C
)VVC D
;VVD E
respXX 
.XX 
AppendCookieXX !
(XX! "

cookieSinkXX" ,
)XX, -
;XX- .
}YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodG2B2^^ 
(^^ 
HttpRequest^^ %
req^^& )
,^^) *
HttpResponse^^+ 7
resp^^8 <
)^^< =
{__ 
string`` 
data`` 
;`` 
ifaa 

(aa 
privateFiveaa 
==aa 
$numaa 
)aa 
{bb 	
datadd 
=dd 
$strdd 
;dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
ifll 

(ll 
privateFivell 
==ll 
$numll 
)ll 
{mm 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 

HttpCookiepp 

cookieSinkpp %
=pp& '
newpp( +

HttpCookiepp, 6
(pp6 7
$strpp7 =
,pp= >
datapp? C
)ppC D
;ppD E
resprr 
.rr 
AppendCookierr !
(rr! "

cookieSinkrr" ,
)rr, -
;rr- .
}ss 
}tt 	
}uu 
privatexx 
voidxx 
GoodB2G1xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
privateFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data}} 
=}} 
$str}} 
;}} 
{ 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
   

(
   
privateFive
   
==
   
$num
   
)
   
{
¡¡ 	
data
¢¢ 
=
¢¢ 
$str
¢¢ 
;
¢¢ 
{
¤¤ 
if
¥¥ 
(
¥¥ 
req
¥¥ 
.
¥¥ 
QueryString
¥¥ #
[
¥¥# $
$str
¥¥$ (
]
¥¥( )
!=
¥¥* ,
null
¥¥- 1
)
¥¥1 2
{
¦¦ 
data
§§ 
=
§§ 
req
§§ 
.
§§ 
QueryString
§§ *
[
§§* +
$str
§§+ /
]
§§/ 0
;
§§0 1
}
¨¨ 
}
©© 
}
ªª 	
else
«« 
{
¬¬ 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
°° 	
if
±± 

(
±± 
privateFive
±± 
==
±± 
$num
±± 
)
±± 
{
²² 	
if
³³ 
(
³³ 
data
³³ 
!=
³³ 
null
³³ 
)
³³ 
{
´´ 

HttpCookie
µµ 

cookieSink
µµ %
=
µµ& '
new
µµ( +

HttpCookie
µµ, 6
(
µµ6 7
$str
µµ7 =
,
µµ= >
HttpUtility
µµ? J
.
µµJ K
	UrlEncode
µµK T
(
µµT U
data
µµU Y
,
µµY Z
Encoding
µµ[ c
.
µµc d
UTF8
µµd h
)
µµh i
)
µµi j
;
µµj k
resp
·· 
.
·· 
AppendCookie
·· !
(
··! "

cookieSink
··" ,
)
··, -
;
··- .
}
¸¸ 
}
¹¹ 	
}
ºº 
public
¼¼ 

override
¼¼ 
void
¼¼ 
Good
¼¼ 
(
¼¼ 
HttpRequest
¼¼ )
req
¼¼* -
,
¼¼- .
HttpResponse
¼¼/ ;
resp
¼¼< @
)
¼¼@ A
{
½½ 
GoodG2B1
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
GoodG2B2
¿¿ 
(
¿¿ 
req
¿¿ 
,
¿¿ 
resp
¿¿ 
)
¿¿ 
;
¿¿ 
GoodB2G1
ÀÀ 
(
ÀÀ 
req
ÀÀ 
,
ÀÀ 
resp
ÀÀ 
)
ÀÀ 
;
ÀÀ 
GoodB2G2
ÁÁ 
(
ÁÁ 
req
ÁÁ 
,
ÁÁ 
resp
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ÂÂ 
}ÄÄ 
}ÅÅ L
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_08 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public++ 

override++ 
void++ 
Bad++ 
(++ 
HttpRequest++ (
req++) ,
,++, -
HttpResponse++. :
resp++; ?
)++? @
{,, 
string-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
$str00 
;00 
{22 
if33 
(33 
req33 
.33 
QueryString33 #
[33# $
$str33$ (
]33( )
!=33* ,
null33- 1
)331 2
{44 
data55 
=55 
req55 
.55 
QueryString55 *
[55* +
$str55+ /
]55/ 0
;550 1
}66 
}77 
}88 	
else99 
{:: 	
data== 
=== 
null== 
;== 
}>> 	
if?? 

(?? 
PrivateReturnsTrue?? 
(?? 
)??  
)??  !
{@@ 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 

HttpCookieCC 

cookieSinkCC %
=CC& '
newCC( +

HttpCookieCC, 6
(CC6 7
$strCC7 =
,CC= >
dataCC? C
)CCC D
;CCD E
respEE 
.EE 
AppendCookieEE !
(EE! "

cookieSinkEE" ,
)EE, -
;EE- .
}FF 
}GG 	
}HH 
privateLL 
voidLL 
GoodG2B1LL 
(LL 
HttpRequestLL %
reqLL& )
,LL) *
HttpResponseLL+ 7
respLL8 <
)LL< =
{MM 
stringNN 
dataNN 
;NN 
ifOO 

(OO 
PrivateReturnsFalseOO 
(OO  
)OO  !
)OO! "
{PP 	
dataSS 
=SS 
nullSS 
;SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$strXX 
;XX 
}YY 	
ifZZ 

(ZZ 
PrivateReturnsTrueZZ 
(ZZ 
)ZZ  
)ZZ  !
{[[ 	
if\\ 
(\\ 
data\\ 
!=\\ 
null\\ 
)\\ 
{]] 

HttpCookie^^ 

cookieSink^^ %
=^^& '
new^^( +

HttpCookie^^, 6
(^^6 7
$str^^7 =
,^^= >
data^^? C
)^^C D
;^^D E
resp`` 
.`` 
AppendCookie`` !
(``! "

cookieSink``" ,
)``, -
;``- .
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
PrivateReturnsTrueii 
(ii 
)ii  
)ii  !
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
PrivateReturnsTruett 
(tt 
)tt  
)tt  !
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 

HttpCookiexx 

cookieSinkxx %
=xx& '
newxx( +

HttpCookiexx, 6
(xx6 7
$strxx7 =
,xx= >
dataxx? C
)xxC D
;xxD E
respzz 
.zz 
AppendCookiezz !
(zz! "

cookieSinkzz" ,
)zz, -
;zz- .
}{{ 
}|| 	
}}} 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
   
}
¡¡ 	
}
¢¢ 
private
¥¥ 
void
¥¥ 
GoodB2G2
¥¥ 
(
¥¥ 
HttpRequest
¥¥ %
req
¥¥& )
,
¥¥) *
HttpResponse
¥¥+ 7
resp
¥¥8 <
)
¥¥< =
{
¦¦ 
string
§§ 
data
§§ 
;
§§ 
if
¨¨ 

(
¨¨  
PrivateReturnsTrue
¨¨ 
(
¨¨ 
)
¨¨  
)
¨¨  !
{
©© 	
data
ªª 
=
ªª 
$str
ªª 
;
ªª 
{
¬¬ 
if
­­ 
(
­­ 
req
­­ 
.
­­ 
QueryString
­­ #
[
­­# $
$str
­­$ (
]
­­( )
!=
­­* ,
null
­­- 1
)
­­1 2
{
®® 
data
¯¯ 
=
¯¯ 
req
¯¯ 
.
¯¯ 
QueryString
¯¯ *
[
¯¯* +
$str
¯¯+ /
]
¯¯/ 0
;
¯¯0 1
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹  
PrivateReturnsTrue
¹¹ 
(
¹¹ 
)
¹¹  
)
¹¹  !
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 

HttpCookie
½½ 

cookieSink
½½ %
=
½½& '
new
½½( +

HttpCookie
½½, 6
(
½½6 7
$str
½½7 =
,
½½= >
HttpUtility
½½? J
.
½½J K
	UrlEncode
½½K T
(
½½T U
data
½½U Y
,
½½Y Z
Encoding
½½[ c
.
½½c d
UTF8
½½d h
)
½½h i
)
½½i j
;
½½j k
resp
¿¿ 
.
¿¿ 
AppendCookie
¿¿ !
(
¿¿! "

cookieSink
¿¿" ,
)
¿¿, -
;
¿¿- .
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ ÁH
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_09 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22  
STATIC_READONLY_TRUE22 #
)22# $
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB !
STATIC_READONLY_FALSEBB $
)BB$ %
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
IOMM 
.MM  
STATIC_READONLY_TRUEMM #
)MM# $
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\  
STATIC_READONLY_TRUE\\ #
)\\# $
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
IOgg 
.gg  
STATIC_READONLY_TRUEgg #
)gg# $
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
IOvv 
.vv  
STATIC_READONLY_TRUEvv #
)vv# $
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 #
STATIC_READONLY_FALSE
 $
)
$ %
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
$str
 
;
 
{
 
if
   
(
   
req
   
.
   
QueryString
   #
[
  # $
$str
  $ (
]
  ( )
!=
  * ,
null
  - 1
)
  1 2
{
¡¡ 
data
¢¢ 
=
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ *
[
¢¢* +
$str
¢¢+ /
]
¢¢/ 0
;
¢¢0 1
}
££ 
}
¤¤ 
}
¥¥ 	
else
¦¦ 
{
§§ 	
data
ªª 
=
ªª 
null
ªª 
;
ªª 
}
«« 	
if
¬¬ 

(
¬¬ 
IO
¬¬ 
.
¬¬ "
STATIC_READONLY_TRUE
¬¬ #
)
¬¬# $
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 

HttpCookie
°° 

cookieSink
°° %
=
°°& '
new
°°( +

HttpCookie
°°, 6
(
°°6 7
$str
°°7 =
,
°°= >
HttpUtility
°°? J
.
°°J K
	UrlEncode
°°K T
(
°°T U
data
°°U Y
,
°°Y Z
Encoding
°°[ c
.
°°c d
UTF8
°°d h
)
°°h i
)
°°i j
;
°°j k
resp
²² 
.
²² 
AppendCookie
²² !
(
²²! "

cookieSink
²²" ,
)
²², -
;
²²- .
}
³³ 
}
´´ 	
}
µµ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
¸¸ 
GoodG2B1
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
GoodG2B2
ºº 
(
ºº 
req
ºº 
,
ºº 
resp
ºº 
)
ºº 
;
ºº 
GoodB2G1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodB2G2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 
}¿¿ 
}ÀÀ ÝG
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_10 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22 

staticTrue22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 
staticFalseBB 
)BB 
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
IOMM 
.MM 

staticTrueMM 
)MM 
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 

staticTrue\\ 
)\\ 
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
IOgg 
.gg 

staticTruegg 
)gg 
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
IOvv 
.vv 

staticTruevv 
)vv 
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
staticFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
   
(
   
req
   
.
   
QueryString
   #
[
  # $
$str
  $ (
]
  ( )
!=
  * ,
null
  - 1
)
  1 2
{
¡¡ 
data
¢¢ 
=
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ *
[
¢¢* +
$str
¢¢+ /
]
¢¢/ 0
;
¢¢0 1
}
££ 
}
¤¤ 
}
¥¥ 	
else
¦¦ 
{
§§ 	
data
ªª 
=
ªª 
null
ªª 
;
ªª 
}
«« 	
if
¬¬ 

(
¬¬ 
IO
¬¬ 
.
¬¬ 

staticTrue
¬¬ 
)
¬¬ 
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 

HttpCookie
°° 

cookieSink
°° %
=
°°& '
new
°°( +

HttpCookie
°°, 6
(
°°6 7
$str
°°7 =
,
°°= >
HttpUtility
°°? J
.
°°J K
	UrlEncode
°°K T
(
°°T U
data
°°U Y
,
°°Y Z
Encoding
°°[ c
.
°°c d
UTF8
°°d h
)
°°h i
)
°°i j
;
°°j k
resp
²² 
.
²² 
AppendCookie
²² !
(
²²! "

cookieSink
²²" ,
)
²², -
;
²²- .
}
³³ 
}
´´ 	
}
µµ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
¸¸ 
GoodG2B1
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
GoodG2B2
ºº 
(
ºº 
req
ºº 
,
ºº 
resp
ºº 
)
ºº 
;
ºº 
GoodB2G1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodB2G2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 
}¿¿ 
}ÀÀ ÛJ
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_11 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22
 
IO22 
.22 
StaticReturnsTrue22 
(22  
)22  !
)22! "
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 
StaticReturnsFalseBB !
(BB! "
)BB" #
)BB# $
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
IOMM 
.MM 
StaticReturnsTrueMM  
(MM  !
)MM! "
)MM" #
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 
StaticReturnsTrue\\  
(\\  !
)\\! "
)\\" #
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
IOgg 
.gg 
StaticReturnsTruegg  
(gg  !
)gg! "
)gg" #
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
IOvv 
.vv 
StaticReturnsTruevv  
(vv  !
)vv! "
)vv" #
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
  
StaticReturnsFalse
 !
(
! "
)
" #
)
# $
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
$str
 
;
 
{
 
if
   
(
   
req
   
.
   
QueryString
   #
[
  # $
$str
  $ (
]
  ( )
!=
  * ,
null
  - 1
)
  1 2
{
¡¡ 
data
¢¢ 
=
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ *
[
¢¢* +
$str
¢¢+ /
]
¢¢/ 0
;
¢¢0 1
}
££ 
}
¤¤ 
}
¥¥ 	
else
¦¦ 
{
§§ 	
data
ªª 
=
ªª 
null
ªª 
;
ªª 
}
«« 	
if
¬¬ 

(
¬¬ 
IO
¬¬ 
.
¬¬ 
StaticReturnsTrue
¬¬  
(
¬¬  !
)
¬¬! "
)
¬¬" #
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 

HttpCookie
°° 

cookieSink
°° %
=
°°& '
new
°°( +

HttpCookie
°°, 6
(
°°6 7
$str
°°7 =
,
°°= >
HttpUtility
°°? J
.
°°J K
	UrlEncode
°°K T
(
°°T U
data
°°U Y
,
°°Y Z
Encoding
°°[ c
.
°°c d
UTF8
°°d h
)
°°h i
)
°°i j
;
°°j k
resp
²² 
.
²² 
AppendCookie
²² !
(
²²! "

cookieSink
²²" ,
)
²², -
;
²²- .
}
³³ 
}
´´ 	
}
µµ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
¸¸ 
GoodG2B1
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
GoodG2B2
ºº 
(
ºº 
req
ºº 
,
ºº 
resp
ºº 
)
ºº 
;
ºº 
GoodB2G1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodB2G2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 
}¿¿ 
}ÀÀ @
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_12 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!!
 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! &
(!!& '
)!!' (
)!!( )
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data// 
=// 
$str// 
;// 
}00 	
if11 

(11
 
IO11 
.11 $
StaticReturnsTrueOrFalse11 &
(11& '
)11' (
)11( )
{22 	
if33 
(33 
data33 
!=33 
null33 
)33 
{44 

HttpCookie55 

cookieSink55 %
=55& '
new55( +

HttpCookie55, 6
(556 7
$str557 =
,55= >
data55? C
)55C D
;55D E
resp77 
.77 
AppendCookie77 !
(77! "

cookieSink77" ,
)77, -
;77- .
}88 
}99 	
else:: 
{;; 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 

HttpCookie>> 

cookieSink>> %
=>>& '
new>>( +

HttpCookie>>, 6
(>>6 7
$str>>7 =
,>>= >
HttpUtility>>? J
.>>J K
	UrlEncode>>K T
(>>T U
data>>U Y
,>>Y Z
Encoding>>[ c
.>>c d
UTF8>>d h
)>>h i
)>>i j
;>>j k
resp@@ 
.@@ 
AppendCookie@@ !
(@@! "

cookieSink@@" ,
)@@, -
;@@- .
}AA 
}BB 	
}CC 
privateHH 
voidHH 
GoodG2BHH 
(HH 
HttpRequestHH $
reqHH% (
,HH( )
HttpResponseHH* 6
respHH7 ;
)HH; <
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK
 
IOKK 
.KK $
StaticReturnsTrueOrFalseKK &
(KK& '
)KK' (
)KK( )
{LL 	
dataNN 
=NN 
$strNN 
;NN 
}OO 	
elsePP 
{QQ 	
dataSS 
=SS 
$strSS 
;SS 
}TT 	
ifUU 

(UU
 
IOUU 
.UU $
StaticReturnsTrueOrFalseUU &
(UU& '
)UU' (
)UU( )
{VV 	
ifWW 
(WW 
dataWW 
!=WW 
nullWW 
)WW 
{XX 

HttpCookieYY 

cookieSinkYY %
=YY& '
newYY( +

HttpCookieYY, 6
(YY6 7
$strYY7 =
,YY= >
dataYY? C
)YYC D
;YYD E
resp[[ 
.[[ 
AppendCookie[[ !
([[! "

cookieSink[[" ,
)[[, -
;[[- .
}\\ 
}]] 	
else^^ 
{__ 	
if`` 
(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 

HttpCookiebb 

cookieSinkbb %
=bb& '
newbb( +

HttpCookiebb, 6
(bb6 7
$strbb7 =
,bb= >
databb? C
)bbC D
;bbD E
respdd 
.dd 
AppendCookiedd !
(dd! "

cookieSinkdd" ,
)dd, -
;dd- .
}ee 
}ff 	
}gg 
privatekk 
voidkk 
GoodB2Gkk 
(kk 
HttpRequestkk $
reqkk% (
,kk( )
HttpResponsekk* 6
respkk7 ;
)kk; <
{ll 
stringmm 
datamm 
;mm 
ifnn 

(nn
 
IOnn 
.nn $
StaticReturnsTrueOrFalsenn &
(nn& '
)nn' (
)nn( )
{oo 	
datapp 
=pp 
$strpp 
;pp 
{rr 
ifss 
(ss 
reqss 
.ss 
QueryStringss #
[ss# $
$strss$ (
]ss( )
!=ss* ,
nullss- 1
)ss1 2
{tt 
datauu 
=uu 
requu 
.uu 
QueryStringuu *
[uu* +
$struu+ /
]uu/ 0
;uu0 1
}vv 
}ww 
}xx 	
elseyy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{}} 
if~~ 
(~~ 
req~~ 
.~~ 
QueryString~~ #
[~~# $
$str~~$ (
]~~( )
!=~~* ,
null~~- 1
)~~1 2
{ 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
if
 

(

 
IO
 
.
 &
StaticReturnsTrueOrFalse
 &
(
& '
)
' (
)
( )
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
}   K
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_13 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!# %
$num!!% &
)!!& '
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22  
STATIC_READONLY_FIVE22 #
==22# %
$num22% &
)22& '
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB  
STATIC_READONLY_FIVEBB #
!=BB# %
$numBB% &
)BB& '
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
IOMM 
.MM  
STATIC_READONLY_FIVEMM #
==MM# %
$numMM% &
)MM& '
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\  
STATIC_READONLY_FIVE\\ #
==\\# %
$num\\% &
)\\& '
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
IOgg 
.gg  
STATIC_READONLY_FIVEgg #
==gg# %
$numgg% &
)gg& '
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
IOvv 
.vv  
STATIC_READONLY_FIVEvv #
==vv# %
$numvv% &
)vv& '
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
!=
# %
$num
% &
)
& '
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
$str
 
;
 
{
 
if
   
(
   
req
   
.
   
QueryString
   #
[
  # $
$str
  $ (
]
  ( )
!=
  * ,
null
  - 1
)
  1 2
{
¡¡ 
data
¢¢ 
=
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ *
[
¢¢* +
$str
¢¢+ /
]
¢¢/ 0
;
¢¢0 1
}
££ 
}
¤¤ 
}
¥¥ 	
else
¦¦ 
{
§§ 	
data
ªª 
=
ªª 
null
ªª 
;
ªª 
}
«« 	
if
¬¬ 

(
¬¬ 
IO
¬¬ 
.
¬¬ "
STATIC_READONLY_FIVE
¬¬ #
==
¬¬# %
$num
¬¬% &
)
¬¬& '
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 

HttpCookie
°° 

cookieSink
°° %
=
°°& '
new
°°( +

HttpCookie
°°, 6
(
°°6 7
$str
°°7 =
,
°°= >
HttpUtility
°°? J
.
°°J K
	UrlEncode
°°K T
(
°°T U
data
°°U Y
,
°°Y Z
Encoding
°°[ c
.
°°c d
UTF8
°°d h
)
°°h i
)
°°i j
;
°°j k
resp
²² 
.
²² 
AppendCookie
²² !
(
²²! "

cookieSink
²²" ,
)
²², -
;
²²- .
}
³³ 
}
´´ 	
}
µµ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
¸¸ 
GoodG2B1
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
GoodG2B2
ºº 
(
ºº 
req
ºº 
,
ºº 
resp
ºº 
)
ºº 
;
ºº 
GoodB2G1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodB2G2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 
}¿¿ 
}ÀÀ »J
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_14 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22 

staticFive22 
==22 
$num22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
HttpRequest?? %
req??& )
,??) *
HttpResponse??+ 7
resp??8 <
)??< =
{@@ 
stringAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 

staticFiveBB 
!=BB 
$numBB 
)BB 
{CC 	
dataFF 
=FF 
nullFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$strKK 
;KK 
}LL 	
ifMM 

(MM 
IOMM 
.MM 

staticFiveMM 
==MM 
$numMM 
)MM 
{NN 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 

HttpCookieQQ 

cookieSinkQQ %
=QQ& '
newQQ( +

HttpCookieQQ, 6
(QQ6 7
$strQQ7 =
,QQ= >
dataQQ? C
)QQC D
;QQD E
respSS 
.SS 
AppendCookieSS !
(SS! "

cookieSinkSS" ,
)SS, -
;SS- .
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodG2B2YY 
(YY 
HttpRequestYY %
reqYY& )
,YY) *
HttpResponseYY+ 7
respYY8 <
)YY< =
{ZZ 
string[[ 
data[[ 
;[[ 
if\\ 

(\\ 
IO\\ 
.\\ 

staticFive\\ 
==\\ 
$num\\ 
)\\ 
{]] 	
data__ 
=__ 
$str__ 
;__ 
}`` 	
elseaa 
{bb 	
dataee 
=ee 
nullee 
;ee 
}ff 	
ifgg 

(gg 
IOgg 
.gg 

staticFivegg 
==gg 
$numgg 
)gg 
{hh 	
ifii 
(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 

HttpCookiekk 

cookieSinkkk %
=kk& '
newkk( +

HttpCookiekk, 6
(kk6 7
$strkk7 =
,kk= >
datakk? C
)kkC D
;kkD E
respmm 
.mm 
AppendCookiemm !
(mm! "

cookieSinkmm" ,
)mm, -
;mm- .
}nn 
}oo 	
}pp 
privatess 
voidss 
GoodB2G1ss 
(ss 
HttpRequestss %
reqss& )
,ss) *
HttpResponsess+ 7
respss8 <
)ss< =
{tt 
stringuu 
datauu 
;uu 
ifvv 

(vv 
IOvv 
.vv 

staticFivevv 
==vv 
$numvv 
)vv 
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
   
(
   
req
   
.
   
QueryString
   #
[
  # $
$str
  $ (
]
  ( )
!=
  * ,
null
  - 1
)
  1 2
{
¡¡ 
data
¢¢ 
=
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ *
[
¢¢* +
$str
¢¢+ /
]
¢¢/ 0
;
¢¢0 1
}
££ 
}
¤¤ 
}
¥¥ 	
else
¦¦ 
{
§§ 	
data
ªª 
=
ªª 
null
ªª 
;
ªª 
}
«« 	
if
¬¬ 

(
¬¬ 
IO
¬¬ 
.
¬¬ 

staticFive
¬¬ 
==
¬¬ 
$num
¬¬ 
)
¬¬ 
{
­­ 	
if
®® 
(
®® 
data
®® 
!=
®® 
null
®® 
)
®® 
{
¯¯ 

HttpCookie
°° 

cookieSink
°° %
=
°°& '
new
°°( +

HttpCookie
°°, 6
(
°°6 7
$str
°°7 =
,
°°= >
HttpUtility
°°? J
.
°°J K
	UrlEncode
°°K T
(
°°T U
data
°°U Y
,
°°Y Z
Encoding
°°[ c
.
°°c d
UTF8
°°d h
)
°°h i
)
°°i j
;
°°j k
resp
²² 
.
²² 
AppendCookie
²² !
(
²²! "

cookieSink
²²" ,
)
²², -
;
²²- .
}
³³ 
}
´´ 	
}
µµ 
public
·· 

override
·· 
void
·· 
Good
·· 
(
·· 
HttpRequest
·· )
req
··* -
,
··- .
HttpResponse
··/ ;
resp
··< @
)
··@ A
{
¸¸ 
GoodG2B1
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
GoodG2B2
ºº 
(
ºº 
req
ºº 
,
ºº 
resp
ºº 
)
ºº 
;
ºº 
GoodB2G1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodB2G2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 
}¿¿ 
}ÀÀ T
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_15 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 
if'' 
('' 
req'' 
.'' 
QueryString'' #
[''# $
$str''$ (
]''( )
!=''* ,
null''- 1
)''1 2
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) *
[))* +
$str))+ /
]))/ 0
;))0 1
}** 
}++ 
break,, 
;,, 
default-- 
:-- 
data00 
=00 
null00 
;00 
break11 
;11 
}22 	
switch33 
(33 
$num33 
)33 
{44 	
case55 
$num55 
:55 
if66 
(66 
data66 
!=66 
null66 
)66 
{77 

HttpCookie88 

cookieSink88 %
=88& '
new88( +

HttpCookie88, 6
(886 7
$str887 =
,88= >
data88? C
)88C D
;88D E
resp:: 
.:: 
AppendCookie:: !
(::! "

cookieSink::" ,
)::, -
;::- .
};; 
break<< 
;<< 
default== 
:== 
IO?? 
.?? 
	WriteLine?? 
(?? 
$str?? /
)??/ 0
;??0 1
break@@ 
;@@ 
}AA 	
}BB 
privateFF 
voidFF 
GoodG2B1FF 
(FF 
HttpRequestFF %
reqFF& )
,FF) *
HttpResponseFF+ 7
respFF8 <
)FF< =
{GG 
stringHH 
dataHH 
;HH 
switchII 
(II 
$numII 
)II 
{JJ 	
caseKK 
$numKK 
:KK 
dataNN 
=NN 
nullNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataRR 
=RR 
$strRR 
;RR 
breakSS 
;SS 
}TT 	
switchUU 
(UU 
$numUU 
)UU 
{VV 	
caseWW 
$numWW 
:WW 
ifXX 
(XX 
dataXX 
!=XX 
nullXX 
)XX 
{YY 

HttpCookieZZ 

cookieSinkZZ %
=ZZ& '
newZZ( +

HttpCookieZZ, 6
(ZZ6 7
$strZZ7 =
,ZZ= >
dataZZ? C
)ZZC D
;ZZD E
resp\\ 
.\\ 
AppendCookie\\ !
(\\! "

cookieSink\\" ,
)\\, -
;\\- .
}]] 
break^^ 
;^^ 
default__ 
:__ 
IOaa 
.aa 
	WriteLineaa 
(aa 
$straa /
)aa/ 0
;aa0 1
breakbb 
;bb 
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
HttpRequestgg %
reqgg& )
,gg) *
HttpResponsegg+ 7
respgg8 <
)gg< =
{hh 
stringii 
dataii 
;ii 
switchjj 
(jj 
$numjj 
)jj 
{kk 	
casell 
$numll 
:ll 
datann 
=nn 
$strnn 
;nn 
breakoo 
;oo 
defaultpp 
:pp 
datass 
=ss 
nullss 
;ss 
breaktt 
;tt 
}uu 	
switchvv 
(vv 
$numvv 
)vv 
{ww 	
casexx 
$numxx 
:xx 
ifyy 
(yy 
datayy 
!=yy 
nullyy 
)yy 
{zz 

HttpCookie{{ 

cookieSink{{ %
={{& '
new{{( +

HttpCookie{{, 6
({{6 7
$str{{7 =
,{{= >
data{{? C
){{C D
;{{D E
resp}} 
.}} 
AppendCookie}} !
(}}! "

cookieSink}}" ,
)}}, -
;}}- .
}~~ 
break 
; 
default
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
break
 
;
 
default
 
:
 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
IO
¡¡ 
.
¡¡ 
	WriteLine
¡¡ 
(
¡¡ 
$str
¡¡ /
)
¡¡/ 0
;
¡¡0 1
break
¢¢ 
;
¢¢ 
default
££ 
:
££ 
if
¤¤ 
(
¤¤ 
data
¤¤ 
!=
¤¤ 
null
¤¤ 
)
¤¤ 
{
¥¥ 

HttpCookie
¦¦ 

cookieSink
¦¦ %
=
¦¦& '
new
¦¦( +

HttpCookie
¦¦, 6
(
¦¦6 7
$str
¦¦7 =
,
¦¦= >
HttpUtility
¦¦? J
.
¦¦J K
	UrlEncode
¦¦K T
(
¦¦T U
data
¦¦U Y
,
¦¦Y Z
Encoding
¦¦[ c
.
¦¦c d
UTF8
¦¦d h
)
¦¦h i
)
¦¦i j
;
¦¦j k
resp
¨¨ 
.
¨¨ 
AppendCookie
¨¨ !
(
¨¨! "

cookieSink
¨¨" ,
)
¨¨, -
;
¨¨- .
}
©© 
break
ªª 
;
ªª 
}
«« 	
}
¬¬ 
private
¯¯ 
void
¯¯ 
GoodB2G2
¯¯ 
(
¯¯ 
HttpRequest
¯¯ %
req
¯¯& )
,
¯¯) *
HttpResponse
¯¯+ 7
resp
¯¯8 <
)
¯¯< =
{
°° 
string
±± 
data
±± 
;
±± 
switch
²² 
(
²² 
$num
²² 
)
²² 
{
³³ 	
case
´´ 
$num
´´ 
:
´´ 
data
µµ 
=
µµ 
$str
µµ 
;
µµ 
{
·· 
if
¸¸ 
(
¸¸ 
req
¸¸ 
.
¸¸ 
QueryString
¸¸ #
[
¸¸# $
$str
¸¸$ (
]
¸¸( )
!=
¸¸* ,
null
¸¸- 1
)
¸¸1 2
{
¹¹ 
data
ºº 
=
ºº 
req
ºº 
.
ºº 
QueryString
ºº *
[
ºº* +
$str
ºº+ /
]
ºº/ 0
;
ºº0 1
}
»» 
}
¼¼ 
break
½½ 
;
½½ 
default
¾¾ 
:
¾¾ 
data
ÁÁ 
=
ÁÁ 
null
ÁÁ 
;
ÁÁ 
break
ÂÂ 
;
ÂÂ 
}
ÃÃ 	
switch
ÄÄ 
(
ÄÄ 
$num
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
case
ÆÆ 
$num
ÆÆ 
:
ÆÆ 
if
ÇÇ 
(
ÇÇ 
data
ÇÇ 
!=
ÇÇ 
null
ÇÇ 
)
ÇÇ 
{
ÈÈ 

HttpCookie
ÉÉ 

cookieSink
ÉÉ %
=
ÉÉ& '
new
ÉÉ( +

HttpCookie
ÉÉ, 6
(
ÉÉ6 7
$str
ÉÉ7 =
,
ÉÉ= >
HttpUtility
ÉÉ? J
.
ÉÉJ K
	UrlEncode
ÉÉK T
(
ÉÉT U
data
ÉÉU Y
,
ÉÉY Z
Encoding
ÉÉ[ c
.
ÉÉc d
UTF8
ÉÉd h
)
ÉÉh i
)
ÉÉi j
;
ÉÉj k
resp
ËË 
.
ËË 
AppendCookie
ËË !
(
ËË! "

cookieSink
ËË" ,
)
ËË, -
;
ËË- .
}
ÌÌ 
break
ÍÍ 
;
ÍÍ 
default
ÎÎ 
:
ÎÎ 
IO
ÐÐ 
.
ÐÐ 
	WriteLine
ÐÐ 
(
ÐÐ 
$str
ÐÐ /
)
ÐÐ/ 0
;
ÐÐ0 1
break
ÑÑ 
;
ÑÑ 
}
ÒÒ 	
}
ÓÓ 
public
ÕÕ 

override
ÕÕ 
void
ÕÕ 
Good
ÕÕ 
(
ÕÕ 
HttpRequest
ÕÕ )
req
ÕÕ* -
,
ÕÕ- .
HttpResponse
ÕÕ/ ;
resp
ÕÕ< @
)
ÕÕ@ A
{
ÖÖ 
GoodG2B1
×× 
(
×× 
req
×× 
,
×× 
resp
×× 
)
×× 
;
×× 
GoodG2B2
ØØ 
(
ØØ 
req
ØØ 
,
ØØ 
resp
ØØ 
)
ØØ 
;
ØØ 
GoodB2G1
ÙÙ 
(
ÙÙ 
req
ÙÙ 
,
ÙÙ 
resp
ÙÙ 
)
ÙÙ 
;
ÙÙ 
GoodB2G2
ÚÚ 
(
ÚÚ 
req
ÚÚ 
,
ÚÚ 
resp
ÚÚ 
)
ÚÚ 
;
ÚÚ 
}
ÛÛ 
}ÝÝ 
}ÞÞ û'
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_16 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
break++ 
;++ 
},, 	
while-- 
(-- 
true-- 
)-- 
{.. 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 

HttpCookie11 

cookieSink11 %
=11& '
new11( +

HttpCookie11, 6
(116 7
$str117 =
,11= >
data11? C
)11C D
;11D E
resp33 
.33 
AppendCookie33 !
(33! "

cookieSink33" ,
)33, -
;33- .
}44 
break55 
;55 
}66 	
}77 
private;; 
void;; 
GoodG2B;; 
(;; 
HttpRequest;; $
req;;% (
,;;( )
HttpResponse;;* 6
resp;;7 ;
);;; <
{<< 
string== 
data== 
;== 
while>> 
(>> 
true>> 
)>> 
{?? 	
dataAA 
=AA 
$strAA 
;AA 
breakBB 
;BB 
}CC 	
whileDD 
(DD 
trueDD 
)DD 
{EE 	
ifFF 
(FF 
dataFF 
!=FF 
nullFF 
)FF 
{GG 

HttpCookieHH 

cookieSinkHH %
=HH& '
newHH( +

HttpCookieHH, 6
(HH6 7
$strHH7 =
,HH= >
dataHH? C
)HHC D
;HHD E
respJJ 
.JJ 
AppendCookieJJ !
(JJ! "

cookieSinkJJ" ,
)JJ, -
;JJ- .
}KK 
breakLL 
;LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodB2GQQ 
(QQ 
HttpRequestQQ $
reqQQ% (
,QQ( )
HttpResponseQQ* 6
respQQ7 ;
)QQ; <
{RR 
stringSS 
dataSS 
;SS 
whileTT 
(TT 
trueTT 
)TT 
{UU 	
dataVV 
=VV 
$strVV 
;VV 
{XX 
ifYY 
(YY 
reqYY 
.YY 
QueryStringYY #
[YY# $
$strYY$ (
]YY( )
!=YY* ,
nullYY- 1
)YY1 2
{ZZ 
data[[ 
=[[ 
req[[ 
.[[ 
QueryString[[ *
[[[* +
$str[[+ /
][[/ 0
;[[0 1
}\\ 
}]] 
break^^ 
;^^ 
}__ 	
while`` 
(`` 
true`` 
)`` 
{aa 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 

HttpCookiedd 

cookieSinkdd %
=dd& '
newdd( +

HttpCookiedd, 6
(dd6 7
$strdd7 =
,dd= >
HttpUtilitydd? J
.ddJ K
	UrlEncodeddK T
(ddT U
dataddU Y
,ddY Z
Encodingdd[ c
.ddc d
UTF8ddd h
)ddh i
)ddi j
;ddj k
respff 
.ff 
AppendCookieff !
(ff! "

cookieSinkff" ,
)ff, -
;ff- .
}gg 
breakhh 
;hh 
}ii 	
}jj 
publicll 

overridell 
voidll 
Goodll 
(ll 
HttpRequestll )
reqll* -
,ll- .
HttpResponsell/ ;
respll< @
)ll@ A
{mm 
GoodG2Bnn 
(nn 
reqnn 
,nn 
respnn 
)nn 
;nn 
GoodB2Goo 
(oo 
reqoo 
,oo 
respoo 
)oo 
;oo 
}pp 
}rr 
}ss Ú'
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_17 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data%% 
=%% 
$str%% 
;%% 
{'' 	
if(( 
((( 
req(( 
.(( 
QueryString(( 
[((  
$str((  $
](($ %
!=((& (
null(() -
)((- .
{)) 
data** 
=** 
req** 
.** 
QueryString** &
[**& '
$str**' +
]**+ ,
;**, -
}++ 
},, 	
for-- 
(-- 
int-- 
j-- 
=-- 
$num-- 
;-- 
j-- 
<-- 
$num-- 
;-- 
j--  
++--  "
)--" #
{.. 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 

HttpCookie11 

cookieSink11 %
=11& '
new11( +

HttpCookie11, 6
(116 7
$str117 =
,11= >
data11? C
)11C D
;11D E
resp33 
.33 
AppendCookie33 !
(33! "

cookieSink33" ,
)33, -
;33- .
}44 
}55 	
}66 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> 
for?? 
(?? 
int?? 
j?? 
=?? 
$num?? 
;?? 
j?? 
<?? 
$num?? 
;?? 
j??  
++??  "
)??" #
{@@ 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 

HttpCookieCC 

cookieSinkCC %
=CC& '
newCC( +

HttpCookieCC, 6
(CC6 7
$strCC7 =
,CC= >
dataCC? C
)CCC D
;CCD E
respEE 
.EE 
AppendCookieEE !
(EE! "

cookieSinkEE" ,
)EE, -
;EE- .
}FF 
}GG 	
}HH 
privateKK 
voidKK 
GoodB2GKK 
(KK 
HttpRequestKK $
reqKK% (
,KK( )
HttpResponseKK* 6
respKK7 ;
)KK; <
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{PP 	
ifQQ 
(QQ 
reqQQ 
.QQ 
QueryStringQQ 
[QQ  
$strQQ  $
]QQ$ %
!=QQ& (
nullQQ) -
)QQ- .
{RR 
dataSS 
=SS 
reqSS 
.SS 
QueryStringSS &
[SS& '
$strSS' +
]SS+ ,
;SS, -
}TT 
}UU 	
forVV 
(VV 
intVV 
kVV 
=VV 
$numVV 
;VV 
kVV 
<VV 
$numVV 
;VV 
kVV  
++VV  "
)VV" #
{WW 	
ifXX 
(XX 
dataXX 
!=XX 
nullXX 
)XX 
{YY 

HttpCookieZZ 

cookieSinkZZ %
=ZZ& '
newZZ( +

HttpCookieZZ, 6
(ZZ6 7
$strZZ7 =
,ZZ= >
HttpUtilityZZ? J
.ZZJ K
	UrlEncodeZZK T
(ZZT U
dataZZU Y
,ZZY Z
EncodingZZ[ c
.ZZc d
UTF8ZZd h
)ZZh i
)ZZi j
;ZZj k
resp\\ 
.\\ 
AppendCookie\\ !
(\\! "

cookieSink\\" ,
)\\, -
;\\- .
}]] 
}^^ 	
}__ 
publicaa 

overrideaa 
voidaa 
Goodaa 
(aa 
HttpRequestaa )
reqaa* -
,aa- .
HttpResponseaa/ ;
respaa< @
)aa@ A
{bb 
GoodG2Bcc 
(cc 
reqcc 
,cc 
respcc 
)cc 
;cc 
GoodB2Gdd 
(dd 
reqdd 
,dd 
respdd 
)dd 
;dd 
}ee 
}gg 
}hh G
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_21 F
:G H
AbstractTestCaseWebI \
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	

badPrivate,, 
=,, 
true,, 
;,, 
BadSink-- 
(-- 
data-- 
,-- 
req-- 
,-- 
resp--  
)--  !
;--! "
}.. 
private00 
void00 
BadSink00 
(00 
string00 
data00  $
,00% &
HttpRequest00' 2
req003 6
,006 7
HttpResponse008 D
resp00E I
)00I J
{11 
if22 

(22 

badPrivate22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 

HttpCookie66 

cookieSink66 %
=66& '
new66( +

HttpCookie66, 6
(666 7
$str667 =
,66= >
data66? C
)66C D
;66D E
resp88 
.88 
AppendCookie88 !
(88! "

cookieSink88" ,
)88, -
;88- .
}99 
}:: 	
};; 
private>> 
bool>> 
goodB2G1Private>>  
=>>! "
false>># (
;>>( )
private?? 
bool?? 
goodB2G2Private??  
=??! "
false??# (
;??( )
private@@ 
bool@@ 
goodG2BPrivate@@ 
=@@  !
false@@" '
;@@' (
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
HttpRequestBB )
reqBB* -
,BB- .
HttpResponseBB/ ;
respBB< @
)BB@ A
{CC 
GoodB2G1DD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
GoodB2G2EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
GoodG2BFF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
privateJJ 
voidJJ 
GoodB2G1JJ 
(JJ 
HttpRequestJJ %
reqJJ& )
,JJ) *
HttpResponseJJ+ 7
respJJ8 <
)JJ< =
{KK 
stringLL 
dataLL 
;LL 
dataMM 
=MM 
$strMM 
;MM 
{OO 	
ifPP 
(PP 
reqPP 
.PP 
QueryStringPP 
[PP  
$strPP  $
]PP$ %
!=PP& (
nullPP) -
)PP- .
{QQ 
dataRR 
=RR 
reqRR 
.RR 
QueryStringRR &
[RR& '
$strRR' +
]RR+ ,
;RR, -
}SS 
}TT 	
goodB2G1PrivateUU 
=UU 
falseUU 
;UU  
GoodB2G1SinkVV 
(VV 
dataVV 
,VV 
reqVV 
,VV  
respVV! %
)VV% &
;VV& '
}WW 
privateYY 
voidYY 
GoodB2G1SinkYY 
(YY 
stringYY $
dataYY% )
,YY* +
HttpRequestYY, 7
reqYY8 ;
,YY; <
HttpResponseYY= I
respYYJ N
)YYN O
{ZZ 
if[[ 

([[ 
goodB2G1Private[[ 
)[[ 
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
$str^^ /
)^^/ 0
;^^0 1
}__ 	
else`` 
{aa 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 

HttpCookiedd 

cookieSinkdd %
=dd& '
newdd( +

HttpCookiedd, 6
(dd6 7
$strdd7 =
,dd= >
HttpUtilitydd? J
.ddJ K
	UrlEncodeddK T
(ddT U
dataddU Y
,ddY Z
Encodingdd[ c
.ddc d
UTF8ddd h
)ddh i
)ddi j
;ddj k
respff 
.ff 
AppendCookieff !
(ff! "

cookieSinkff" ,
)ff, -
;ff- .
}gg 
}hh 	
}ii 
privatell 
voidll 
GoodB2G2ll 
(ll 
HttpRequestll %
reqll& )
,ll) *
HttpResponsell+ 7
respll8 <
)ll< =
{mm 
stringnn 
datann 
;nn 
dataoo 
=oo 
$stroo 
;oo 
{qq 	
ifrr 
(rr 
reqrr 
.rr 
QueryStringrr 
[rr  
$strrr  $
]rr$ %
!=rr& (
nullrr) -
)rr- .
{ss 
datatt 
=tt 
reqtt 
.tt 
QueryStringtt &
[tt& '
$strtt' +
]tt+ ,
;tt, -
}uu 
}vv 	
goodB2G2Privateww 
=ww 
trueww 
;ww 
GoodB2G2Sinkxx 
(xx 
dataxx 
,xx 
reqxx 
,xx  
respxx! %
)xx% &
;xx& '
}yy 
private{{ 
void{{ 
GoodB2G2Sink{{ 
({{ 
string{{ $
data{{% )
,{{* +
HttpRequest{{, 7
req{{8 ;
,{{; <
HttpResponse{{= I
resp{{J N
){{N O
{|| 
if}} 

(}} 
goodB2G2Private}} 
)}} 
{~~ 	
if 
( 
data 
!= 
null 
) 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
goodG2BPrivate
 
=
 
true
 
;
 
GoodG2BSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
$ %
;
% &
}
 
private
 
void
 
GoodG2BSink
 
(
 
string
 #
data
$ (
,
) *
HttpRequest
+ 6
req
7 :
,
: ;
HttpResponse
< H
resp
I M
)
M N
{
 
if
 

(
 
goodG2BPrivate
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
data
? C
)
C D
;
D E
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
} 
}   ,
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
=## 
null## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	
badPublicStatic,, 
=,, 
true,, 
;,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22b-- I
.--I J
BadSink--J Q
(--Q R
data--R V
,--W X
req--Y \
,--\ ]
resp--^ b
)--b c
;--c d
}.. 
public11 

static11 
bool11  
goodB2G1PublicStatic11 +
=11, -
false11. 3
;113 4
public22 

static22 
bool22  
goodB2G2PublicStatic22 +
=22, -
false22. 3
;223 4
public33 

static33 
bool33 
goodG2BPublicStatic33 *
=33+ ,
false33- 2
;332 3
public55 

override55 
void55 
Good55 
(55 
HttpRequest55 )
req55* -
,55- .
HttpResponse55/ ;
resp55< @
)55@ A
{66 
GoodB2G177 
(77 
req77 
,77 
resp77 
)77 
;77 
GoodB2G288 
(88 
req88 
,88 
resp88 
)88 
;88 
GoodG2B99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
private== 
void== 
GoodB2G1== 
(== 
HttpRequest== %
req==& )
,==) *
HttpResponse==+ 7
resp==8 <
)==< =
{>> 
string?? 
data?? 
=?? 
null?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	 
goodB2G1PublicStaticHH 
=HH 
falseHH $
;HH$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22bII I
.III J
GoodB2G1SinkIIJ V
(IIV W
dataIIW [
,II\ ]
reqII^ a
,IIa b
respIIc g
)IIg h
;IIh i
}JJ 
privateMM 
voidMM 
GoodB2G2MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
=OO 
nullOO 
;OO 
dataPP 
=PP 
$strPP 
;PP 
{RR 	
ifSS 
(SS 
reqSS 
.SS 
QueryStringSS 
[SS  
$strSS  $
]SS$ %
!=SS& (
nullSS) -
)SS- .
{TT 
dataUU 
=UU 
reqUU 
.UU 
QueryStringUU &
[UU& '
$strUU' +
]UU+ ,
;UU, -
}VV 
}WW 	 
goodB2G2PublicStaticXX 
=XX 
trueXX #
;XX# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22bYY I
.YYI J
GoodB2G2SinkYYJ V
(YYV W
dataYYW [
,YY\ ]
reqYY^ a
,YYa b
respYYc g
)YYg h
;YYh i
}ZZ 
private]] 
void]] 
GoodG2B]] 
(]] 
HttpRequest]] $
req]]% (
,]]( )
HttpResponse]]* 6
resp]]7 ;
)]]; <
{^^ 
string__ 
data__ 
=__ 
null__ 
;__ 
dataaa 
=aa 
$straa 
;aa 
goodG2BPublicStaticbb 
=bb 
truebb "
;bb" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22bcc I
.ccI J
GoodG2BSinkccJ U
(ccU V
dataccV Z
,cc[ \
reqcc] `
,cc` a
respccb f
)ccf g
;ccg h
}dd 
}ff 
}gg º'
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22a M
.M N
badPublicStaticN ]
)] ^
{   	
if!! 
(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 

HttpCookie## 

cookieSink## %
=##& '
new##( +

HttpCookie##, 6
(##6 7
$str##7 =
,##= >
data##? C
)##C D
;##D E
resp%% 
.%% 
AppendCookie%% !
(%%! "

cookieSink%%" ,
)%%, -
;%%- .
}&& 
}'' 	
else(( 
{)) 	
data,, 
=,, 
null,, 
;,, 
}-- 	
}.. 
public33 

static33 
void33 
GoodB2G1Sink33 #
(33# $
string33$ *
data33+ /
,330 1
HttpRequest332 =
req33> A
,33A B
HttpResponse33C O
resp33P T
)33T U
{44 
if55 

(55 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22a55 M
.55M N 
goodB2G1PublicStatic55N b
)55b c
{66 	
data99 
=99 
null99 
;99 
}:: 	
else;; 
{<< 	
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 

HttpCookie?? 

cookieSink?? %
=??& '
new??( +

HttpCookie??, 6
(??6 7
$str??7 =
,??= >
HttpUtility??? J
.??J K
	UrlEncode??K T
(??T U
data??U Y
,??Y Z
Encoding??[ c
.??c d
UTF8??d h
)??h i
)??i j
;??j k
respAA 
.AA 
AppendCookieAA !
(AA! "

cookieSinkAA" ,
)AA, -
;AA- .
}BB 
}CC 	
}DD 
publicGG 

staticGG 
voidGG 
GoodB2G2SinkGG #
(GG# $
stringGG$ *
dataGG+ /
,GG0 1
HttpRequestGG2 =
reqGG> A
,GGA B
HttpResponseGGC O
respGGP T
)GGT U
{HH 
ifII 

(II M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22aII M
.IIM N 
goodB2G2PublicStaticIIN b
)IIb c
{JJ 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 

HttpCookieMM 

cookieSinkMM %
=MM& '
newMM( +

HttpCookieMM, 6
(MM6 7
$strMM7 =
,MM= >
HttpUtilityMM? J
.MMJ K
	UrlEncodeMMK T
(MMT U
dataMMU Y
,MMY Z
EncodingMM[ c
.MMc d
UTF8MMd h
)MMh i
)MMi j
;MMj k
respOO 
.OO 
AppendCookieOO !
(OO! "

cookieSinkOO" ,
)OO, -
;OO- .
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
nullVV 
;VV 
}WW 	
}XX 
public[[ 

static[[ 
void[[ 
GoodG2BSink[[ "
([[" #
string[[# )
data[[* .
,[[/ 0
HttpRequest[[1 <
req[[= @
,[[@ A
HttpResponse[[B N
resp[[O S
)[[S T
{\\ 
if]] 

(]] M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_22a]] M
.]]M N
goodG2BPublicStatic]]N a
)]]a b
{^^ 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 

HttpCookieaa 

cookieSinkaa %
=aa& '
newaa( +

HttpCookieaa, 6
(aa6 7
$straa7 =
,aa= >
dataaa? C
)aaC D
;aaD E
respcc 
.cc 
AppendCookiecc !
(cc! "

cookieSinkcc" ,
)cc, -
;cc- .
}dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
}ll 
}nn 
}oo ¨(
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_31 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
dataCopy   
;   
{!! 	
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
dataCopy++ 
=++ 
data++ 
;++ 
},, 	
{-- 	
string.. 
data.. 
=.. 
dataCopy.. "
;.." #
if// 
(// 
data// 
!=// 
null// 
)// 
{00 

HttpCookie11 

cookieSink11 %
=11& '
new11( +

HttpCookie11, 6
(116 7
$str117 =
,11= >
data11? C
)11C D
;11D E
resp33 
.33 
AppendCookie33 !
(33! "

cookieSink33" ,
)33, -
;33- .
}44 
}55 	
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataCopyBB 
;BB 
{CC 	
stringDD 
dataDD 
;DD 
dataFF 
=FF 
$strFF 
;FF 
dataCopyGG 
=GG 
dataGG 
;GG 
}HH 	
{II 	
stringJJ 
dataJJ 
=JJ 
dataCopyJJ "
;JJ" #
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 

HttpCookieMM 

cookieSinkMM %
=MM& '
newMM( +

HttpCookieMM, 6
(MM6 7
$strMM7 =
,MM= >
dataMM? C
)MMC D
;MMD E
respOO 
.OO 
AppendCookieOO !
(OO! "

cookieSinkOO" ,
)OO, -
;OO- .
}PP 
}QQ 	
}RR 
privateUU 
voidUU 
GoodB2GUU 
(UU 
HttpRequestUU $
reqUU% (
,UU( )
HttpResponseUU* 6
respUU7 ;
)UU; <
{VV 
stringWW 
dataCopyWW 
;WW 
{XX 	
stringYY 
dataYY 
;YY 
dataZZ 
=ZZ 
$strZZ 
;ZZ 
{\\ 
if]] 
(]] 
req]] 
.]] 
QueryString]] #
[]]# $
$str]]$ (
]]]( )
!=]]* ,
null]]- 1
)]]1 2
{^^ 
data__ 
=__ 
req__ 
.__ 
QueryString__ *
[__* +
$str__+ /
]__/ 0
;__0 1
}`` 
}aa 
dataCopybb 
=bb 
databb 
;bb 
}cc 	
{dd 	
stringee 
dataee 
=ee 
dataCopyee "
;ee" #
ifff 
(ff 
dataff 
!=ff 
nullff 
)ff 
{gg 

HttpCookiehh 

cookieSinkhh %
=hh& '
newhh( +

HttpCookiehh, 6
(hh6 7
$strhh7 =
,hh= >
HttpUtilityhh? J
.hhJ K
	UrlEncodehhK T
(hhT U
datahhU Y
,hhY Z
Encodinghh[ c
.hhc d
UTF8hhd h
)hhh i
)hhi j
;hhj k
respjj 
.jj 
AppendCookiejj !
(jj! "

cookieSinkjj" ,
)jj, -
;jj- .
}kk 
}ll 	
}mm 
}oo 
}pp Ò,
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_41 F
:G H
AbstractTestCaseWebI \
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public(( 

override(( 
void(( 
Bad(( 
((( 
HttpRequest(( (
req(() ,
,((, -
HttpResponse((. :
resp((; ?
)((? @
{)) 
string** 
data** 
;** 
data++ 
=++ 
$str++ 
;++ 
{-- 	
if.. 
(.. 
req.. 
... 
QueryString.. 
[..  
$str..  $
]..$ %
!=..& (
null..) -
)..- .
{// 
data00 
=00 
req00 
.00 
QueryString00 &
[00& '
$str00' +
]00+ ,
;00, -
}11 
}22 	
BadSink33 
(33 
data33 
,33 
req33 
,33 
resp33  
)33! "
;33" #
}44 
public77 

override77 
void77 
Good77 
(77 
HttpRequest77 )
req77* -
,77- .
HttpResponse77/ ;
resp77< @
)77@ A
{88 
GoodG2B99 
(99 
req99 
,99 
resp99 
)99 
;99 
GoodB2G:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
};; 
private== 
static== 
void== 
GoodG2BSink== #
(==# $
string==$ *
data==+ /
,==0 1
HttpRequest==2 =
req==> A
,==A B
HttpResponse==C O
resp==P T
)==T U
{>> 
if?? 

(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 	

HttpCookieAA 

cookieSinkAA !
=AA" #
newAA$ '

HttpCookieAA( 2
(AA2 3
$strAA3 9
,AA9 :
dataAA; ?
)AA? @
;AA@ A
respCC 
.CC 
AppendCookieCC 
(CC 

cookieSinkCC (
)CC( )
;CC) *
}DD 	
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
HttpRequestHH  +
reqHH, /
,HH/ 0
HttpResponseHH1 =
respHH> B
)HHB C
{II 
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
GoodG2BSinkMM 
(MM 
dataMM 
,MM 
reqMM 
,MM 
respMM  $
)MM% &
;MM& '
}NN 
privatePP 
staticPP 
voidPP 
GoodB2GSinkPP #
(PP# $
stringPP$ *
dataPP+ /
,PP0 1
HttpRequestPP2 =
reqPP> A
,PPA B
HttpResponsePPC O
respPPP T
)PPT U
{QQ 
ifRR 

(RR 
dataRR 
!=RR 
nullRR 
)RR 
{SS 	

HttpCookieTT 

cookieSinkTT !
=TT" #
newTT$ '

HttpCookieTT( 2
(TT2 3
$strTT3 9
,TT9 :
HttpUtilityTT; F
.TTF G
	UrlEncodeTTG P
(TTP Q
dataTTQ U
,TTU V
EncodingTTW _
.TT_ `
UTF8TT` d
)TTd e
)TTe f
;TTf g
respVV 
.VV 
AppendCookieVV 
(VV 

cookieSinkVV (
)VV( )
;VV) *
}WW 	
}XX 
private[[ 
static[[ 
void[[ 
GoodB2G[[ 
([[  
HttpRequest[[  +
req[[, /
,[[/ 0
HttpResponse[[1 =
resp[[> B
)[[B C
{\\ 
string]] 
data]] 
;]] 
data^^ 
=^^ 
$str^^ 
;^^ 
{`` 	
ifaa 
(aa 
reqaa 
.aa 
QueryStringaa 
[aa  
$straa  $
]aa$ %
!=aa& (
nullaa) -
)aa- .
{bb 
datacc 
=cc 
reqcc 
.cc 
QueryStringcc &
[cc& '
$strcc' +
]cc+ ,
;cc, -
}dd 
}ee 	
GoodB2GSinkff 
(ff 
dataff 
,ff 
reqff 
,ff 
respff  $
)ff% &
;ff& '
}gg 
}ii 
}jj  -
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_42 F
:G H
AbstractTestCaseWebI \
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
return)) 
data)) 
;)) 
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
=.. 
	BadSource.. 
(..  
req..  #
,..# $
resp..% )
)..) *
;..* +
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
private99 
static99 
string99 
GoodG2BSource99 '
(99' (
HttpRequest99( 3
req994 7
,997 8
HttpResponse999 E
resp99F J
)99J K
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 
return>> 
data>> 
;>> 
}?? 
privateAA 
staticAA 
voidAA 
GoodG2BAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
stringCC 
dataCC 
=CC 
GoodG2BSourceCC #
(CC# $
reqCC$ '
,CC' (
respCC) -
)CC- .
;CC. /
ifDD 

(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 	

HttpCookieFF 

cookieSinkFF !
=FF" #
newFF$ '

HttpCookieFF( 2
(FF2 3
$strFF3 9
,FF9 :
dataFF; ?
)FF? @
;FF@ A
respHH 
.HH 
AppendCookieHH 
(HH 

cookieSinkHH (
)HH( )
;HH) *
}II 	
}JJ 
privateMM 
staticMM 
stringMM 
GoodB2GSourceMM '
(MM' (
HttpRequestMM( 3
reqMM4 7
,MM7 8
HttpResponseMM9 E
respMMF J
)MMJ K
{NN 
stringOO 
dataOO 
;OO 
dataPP 
=PP 
$strPP 
;PP 
{RR 	
ifSS 
(SS 
reqSS 
.SS 
QueryStringSS 
[SS  
$strSS  $
]SS$ %
!=SS& (
nullSS) -
)SS- .
{TT 
dataUU 
=UU 
reqUU 
.UU 
QueryStringUU &
[UU& '
$strUU' +
]UU+ ,
;UU, -
}VV 
}WW 	
returnXX 
dataXX 
;XX 
}YY 
private[[ 
static[[ 
void[[ 
GoodB2G[[ 
([[  
HttpRequest[[  +
req[[, /
,[[/ 0
HttpResponse[[1 =
resp[[> B
)[[B C
{\\ 
string]] 
data]] 
=]] 
GoodB2GSource]] #
(]]# $
req]]$ '
,]]' (
resp]]) -
)]]- .
;]]. /
if^^ 

(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 	

HttpCookie`` 

cookieSink`` !
=``" #
new``$ '

HttpCookie``( 2
(``2 3
$str``3 9
,``9 :
HttpUtility``; F
.``F G
	UrlEncode``G P
(``P Q
data``Q U
,``U V
Encoding``W _
.``_ `
UTF8``` d
)``d e
)``e f
;``f g
respbb 
.bb 
AppendCookiebb 
(bb 

cookieSinkbb (
)bb( )
;bb) *
}cc 	
}dd 
publicff 

overrideff 
voidff 
Goodff 
(ff 
HttpRequestff )
reqff* -
,ff- .
HttpResponseff/ ;
respff< @
)ff@ A
{gg 
GoodG2Bhh 
(hh 
reqhh 
,hh 
resphh 
)hh 
;hh 
GoodB2Gii 
(ii 
reqii 
,ii 
respii 
)ii 
;ii 
}jj 
}ll 
}mm Å/
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_45 F
:G H
AbstractTestCaseWebI \
{ 
private 
string 
dataBad 
; 
private 
string 
dataGoodG2B 
; 
private   
string   
dataGoodB2G   
;   
private"" 
void"" 
BadSink"" 
("" 
HttpRequest"" $
req""% (
,""( )
HttpResponse""* 6
resp""7 ;
)""; <
{## 
string$$ 
data$$ 
=$$ 
dataBad$$ 
;$$ 
if%% 

(%% 
data%% 
!=%% 
null%% 
)%% 
{&& 	

HttpCookie'' 

cookieSink'' !
=''" #
new''$ '

HttpCookie''( 2
(''2 3
$str''3 9
,''9 :
data''; ?
)''? @
;''@ A
resp)) 
.)) 
AppendCookie)) 
()) 

cookieSink)) (
)))( )
;))) *
}** 	
}++ 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
data00 
=00 
$str00 
;00 
{22 	
if33 
(33 
req33 
.33 
QueryString33 
[33  
$str33  $
]33$ %
!=33& (
null33) -
)33- .
{44 
data55 
=55 
req55 
.55 
QueryString55 &
[55& '
$str55' +
]55+ ,
;55, -
}66 
}77 	
dataBad88 
=88 
data88 
;88 
BadSink99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
public== 

override== 
void== 
Good== 
(== 
HttpRequest== )
req==* -
,==- .
HttpResponse==/ ;
resp==< @
)==@ A
{>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
GoodB2G@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
}AA 
privateCC 
voidCC 
GoodG2BSinkCC 
(CC 
HttpRequestCC (
reqCC) ,
,CC, -
HttpResponseCC. :
respCC; ?
)CC? @
{DD 
stringEE 
dataEE 
=EE 
dataGoodG2BEE !
;EE! "
ifFF 

(FF 
dataFF 
!=FF 
nullFF 
)FF 
{GG 	

HttpCookieHH 

cookieSinkHH !
=HH" #
newHH$ '

HttpCookieHH( 2
(HH2 3
$strHH3 9
,HH9 :
dataHH; ?
)HH? @
;HH@ A
respJJ 
.JJ 
AppendCookieJJ 
(JJ 

cookieSinkJJ (
)JJ( )
;JJ) *
}KK 	
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
HttpRequestOO $
reqOO% (
,OO( )
HttpResponseOO* 6
respOO7 ;
)OO; <
{PP 
stringQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$strSS 
;SS 
dataGoodG2BTT 
=TT 
dataTT 
;TT 
GoodG2BSinkUU 
(UU 
reqUU 
,UU 
respUU 
)UU 
;UU 
}VV 
privateXX 
voidXX 
GoodB2GSinkXX 
(XX 
HttpRequestXX (
reqXX) ,
,XX, -
HttpResponseXX. :
respXX; ?
)XX? @
{YY 
stringZZ 
dataZZ 
=ZZ 
dataGoodB2GZZ !
;ZZ! "
if[[ 

([[ 
data[[ 
!=[[ 
null[[ 
)[[ 
{\\ 	

HttpCookie]] 

cookieSink]] !
=]]" #
new]]$ '

HttpCookie]]( 2
(]]2 3
$str]]3 9
,]]9 :
HttpUtility]]; F
.]]F G
	UrlEncode]]G P
(]]P Q
data]]Q U
,]]U V
Encoding]]W _
.]]_ `
UTF8]]` d
)]]d e
)]]e f
;]]f g
resp__ 
.__ 
AppendCookie__ 
(__ 

cookieSink__ (
)__( )
;__) *
}`` 	
}aa 
privatedd 
voiddd 
GoodB2Gdd 
(dd 
HttpRequestdd $
reqdd% (
,dd( )
HttpResponsedd* 6
respdd7 ;
)dd; <
{ee 
stringff 
dataff 
;ff 
datagg 
=gg 
$strgg 
;gg 
{ii 	
ifjj 
(jj 
reqjj 
.jj 
QueryStringjj 
[jj  
$strjj  $
]jj$ %
!=jj& (
nulljj) -
)jj- .
{kk 
datall 
=ll 
reqll 
.ll 
QueryStringll &
[ll& '
$strll' +
]ll+ ,
;ll, -
}mm 
}nn 	
dataGoodB2Goo 
=oo 
dataoo 
;oo 
GoodB2GSinkpp 
(pp 
reqpp 
,pp 
resppp 
)pp 
;pp 
}qq 
}ss 
}tt Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_51a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_51b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))c d
;))d e
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_51b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99g h
;99h i
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_51bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHg h
;HHh i
}II 
}KK 
}LL ²
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_51b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 ²
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_52c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53d I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53d'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53d-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 ²
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_53d G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54d I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54d'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54d-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54d G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54e I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54e'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54e-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 ²
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_54e G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ µ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_61a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_61b W
.W X
	BadSourceX a
(a b
reqb e
,e f
respg k
)k l
;l m
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
GoodB2G,, 
(,, 
req,, 
,,, 
resp,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
HttpRequest00  +
req00, /
,00/ 0
HttpResponse001 =
resp00> B
)00B C
{11 
string22 
data22 
=22 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_61b22 W
.22W X
GoodG2BSource22X e
(22e f
req22f i
,22i j
resp22k o
)22o p
;22p q
if33 

(33 
data33 
!=33 
null33 
)33 
{44 	

HttpCookie55 

cookieSink55 !
=55" #
new55$ '

HttpCookie55( 2
(552 3
$str553 9
,559 :
data55; ?
)55? @
;55@ A
resp77 
.77 
AppendCookie77 
(77 

cookieSink77 (
)77( )
;77) *
}88 	
}99 
private<< 
static<< 
void<< 
GoodB2G<< 
(<<  
HttpRequest<<  +
req<<, /
,<</ 0
HttpResponse<<1 =
resp<<> B
)<<B C
{== 
string>> 
data>> 
=>> M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_61b>> W
.>>W X
GoodB2GSource>>X e
(>>e f
req>>f i
,>>i j
resp>>k o
)>>o p
;>>p q
if?? 

(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 	

HttpCookieAA 

cookieSinkAA !
=AA" #
newAA$ '

HttpCookieAA( 2
(AA2 3
$strAA3 9
,AA9 :
HttpUtilityAA; F
.AAF G
	UrlEncodeAAG P
(AAP Q
dataAAQ U
,AAU V
EncodingAAW _
.AA_ `
UTF8AA` d
)AAd e
)AAe f
;AAf g
respCC 
.CC 
AppendCookieCC 
(CC 

cookieSinkCC (
)CC( )
;CC) *
}DD 	
}EE 
}GG 
}HH Ä
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_61b G
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
return)) 
data)) 
;)) 
}** 
public// 

static// 
string// 
GoodG2BSource// &
(//& '
HttpRequest//' 2
req//3 6
,//6 7
HttpResponse//8 D
resp//E I
)//I J
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 
return44 
data44 
;44 
}55 
public88 

static88 
string88 
GoodB2GSource88 &
(88& '
HttpRequest88' 2
req883 6
,886 7
HttpResponse888 D
resp88E I
)88I J
{99 
string:: 
data:: 
;:: 
data;; 
=;; 
$str;; 
;;; 
{== 	
if>> 
(>> 
req>> 
.>> 
QueryString>> 
[>>  
$str>>  $
]>>$ %
!=>>& (
null>>) -
)>>- .
{?? 
data@@ 
=@@ 
req@@ 
.@@ 
QueryString@@ &
[@@& '
$str@@' +
]@@+ ,
;@@, -
}AA 
}BB 	
returnCC 
dataCC 
;CC 
}DD 
}FF 
}GG ¡#
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_66a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
string)) 
[)) 
])) 
	dataArray)) 
=)) 
new))  
string))! '
[))' (
$num))( )
]))) *
;))* +
	dataArray** 
[** 
$num** 
]** 
=** 
data** 
;** M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_66b++ I
.++I J
BadSink++J Q
(++Q R
	dataArray++R [
,++\ ]
req++^ a
,++a b
resp++c g
)++h i
;++i j
},, 
public// 

override// 
void// 
Good// 
(// 
HttpRequest// )
req//* -
,//- .
HttpResponse/// ;
resp//< @
)//@ A
{00 
GoodG2B11 
(11 
req11 
,11 
resp11 
)11 
;11 
GoodB2G22 
(22 
req22 
,22 
resp22 
)22 
;22 
}33 
private66 
static66 
void66 
GoodG2B66 
(66  
HttpRequest66  +
req66, /
,66/ 0
HttpResponse661 =
resp66> B
)66B C
{77 
string88 
data88 
;88 
data:: 
=:: 
$str:: 
;:: 
string;; 
[;; 
];; 
	dataArray;; 
=;; 
new;;  
string;;! '
[;;' (
$num;;( )
];;) *
;;;* +
	dataArray<< 
[<< 
$num<< 
]<< 
=<< 
data<< 
;<< M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_66b== I
.==I J
GoodG2BSink==J U
(==U V
	dataArray==V _
,==` a
req==b e
,==e f
resp==g k
)==l m
;==m n
}>> 
privateAA 
staticAA 
voidAA 
GoodB2GAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
stringCC 
dataCC 
;CC 
dataDD 
=DD 
$strDD 
;DD 
{FF 	
ifGG 
(GG 
reqGG 
.GG 
QueryStringGG 
[GG  
$strGG  $
]GG$ %
!=GG& (
nullGG) -
)GG- .
{HH 
dataII 
=II 
reqII 
.II 
QueryStringII &
[II& '
$strII' +
]II+ ,
;II, -
}JJ 
}KK 	
stringLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
stringLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_66bNN I
.NNI J
GoodB2GSinkNNJ U
(NNU V
	dataArrayNNV _
,NN` a
reqNNb e
,NNe f
respNNg k
)NNl m
;NNm n
}OO 
}QQ 
}RR ¼
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_66b G
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
string++# )
[++) *
]++* +
	dataArray++, 5
,++6 7
HttpRequest++8 C
req++D G
,++G H
HttpResponse++I U
resp++V Z
)++Z [
{,, 
string-- 
data-- 
=-- 
	dataArray-- 
[--  
$num--  !
]--! "
;--" #
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #
string77# )
[77) *
]77* +
	dataArray77, 5
,776 7
HttpRequest778 C
req77D G
,77G H
HttpResponse77I U
resp77V Z
)77Z [
{88 
string99 
data99 
=99 
	dataArray99 
[99  
$num99  !
]99! "
;99" #
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC ß#
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

class 
	Container 
{ 
public   
string   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data&& 
=&& 
$str&& 
;&& 
{(( 	
if)) 
()) 
req)) 
.)) 
QueryString)) 
[))  
$str))  $
]))$ %
!=))& (
null))) -
)))- .
{** 
data++ 
=++ 
req++ 
.++ 
QueryString++ &
[++& '
$str++' +
]+++ ,
;++, -
},, 
}-- 	
	Container.. 
dataContainer.. 
=..  !
new.." %
	Container..& /
(../ 0
)..0 1
;..1 2
dataContainer// 
.// 
containerOne// "
=//# $
data//% )
;//) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67b00 I
.00I J
BadSink00J Q
(00Q R
dataContainer00R _
,00` a
req00b e
,00e f
resp00g k
)00l m
;00m n
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? 
	Container@@ 
dataContainer@@ 
=@@  !
new@@" %
	Container@@& /
(@@/ 0
)@@0 1
;@@1 2
dataContainerAA 
.AA 
containerOneAA "
=AA# $
dataAA% )
;AA) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataContainerBBV c
,BBd e
reqBBf i
,BBi j
respBBk o
)BBp q
;BBq r
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67bSS I
.SSI J
GoodB2GSinkSSJ U
(SSU V
dataContainerSSV c
,SSd e
reqSSf i
,SSi j
respSSk o
)SSp q
;SSq r
}TT 
}VV 
}WW ©
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67b G
{ 
public 

static 
void 
BadSink 
( M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67a `
.` a
	Containera j
dataContainerk x
,y z
HttpRequest	{ 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67a++# d
.++d e
	Container++e n
dataContainer++o |
,++} ~
HttpRequest	++ 
req
++ 
,
++ 
HttpResponse
++ 
resp
++ ¡
)
++¡ ¢
{,, 
string-- 
data-- 
=-- 
dataContainer-- #
.--# $
containerOne--$ 0
;--0 1
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_67a77# d
.77d e
	Container77e n
dataContainer77o |
,77} ~
HttpRequest	77 
req
77 
,
77 
HttpResponse
77 
resp
77 ¡
)
77¡ ¢
{88 
string99 
data99 
=99 
dataContainer99 #
.99# $
containerOne99$ 0
;990 1
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC Ô
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

static 
string 
data 
; 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68b** I
.**I J
BadSink**J Q
(**Q R
req**R U
,**U V
resp**W [
)**[ \
;**\ ]
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
HttpRequest55  +
req55, /
,55/ 0
HttpResponse551 =
resp55> B
)55B C
{66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68b99 I
.99I J
GoodG2BSink99J U
(99U V
req99V Y
,99Y Z
resp99[ _
)99_ `
;99` a
}:: 
private== 
static== 
void== 
GoodB2G== 
(==  
HttpRequest==  +
req==, /
,==/ 0
HttpResponse==1 =
resp==> B
)==B C
{>> 
data?? 
=?? 
$str?? 
;?? 
{AA 	
ifBB 
(BB 
reqBB 
.BB 
QueryStringBB 
[BB  
$strBB  $
]BB$ %
!=BB& (
nullBB) -
)BB- .
{CC 
dataDD 
=DD 
reqDD 
.DD 
QueryStringDD &
[DD& '
$strDD' +
]DD+ ,
;DD, -
}EE 
}FF 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68bGG I
.GGI J
GoodB2GSinkGGJ U
(GGU V
reqGGV Y
,GGY Z
respGG[ _
)GG_ `
;GG` a
}HH 
}JJ 
}KK ¯
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68b G
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68a W
.W X
dataX \
;\ ]
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
HttpRequest++# .
req++/ 2
,++2 3
HttpResponse++4 @
resp++A E
)++E F
{,, 
string-- 
data-- 
=-- M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68a-- W
.--W X
data--X \
;--\ ]
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #
HttpRequest77# .
req77/ 2
,772 3
HttpResponse774 @
resp77A E
)77E F
{88 
string99 
data99 
=99 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_68a99 W
.99W X
data99X \
;99\ ]
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_71a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_71b)) I
.))I J
BadSink))J Q
())Q R
())R S
Object))S Y
)))Y Z
data))Z ^
,))_ `
req))a d
,))d e
resp))f j
)))k l
;))l m
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
static44 
void44 
GoodG2B44 
(44  
HttpRequest44  +
req44, /
,44/ 0
HttpResponse441 =
resp44> B
)44B C
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_71b99 I
.99I J
GoodG2BSink99J U
(99U V
(99V W
Object99W ]
)99] ^
data99^ b
,99c d
req99e h
,99h i
resp99j n
)99o p
;99p q
}:: 
private== 
static== 
void== 
GoodB2G== 
(==  
HttpRequest==  +
req==, /
,==/ 0
HttpResponse==1 =
resp==> B
)==B C
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_71bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
(HHV W
ObjectHHW ]
)HH] ^
dataHH^ b
,HHc d
reqHHe h
,HHh i
respHHj n
)HHo p
;HHp q
}II 
}KK 
}LL î
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_71b G
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #
Object,,# )

dataObject,,* 4
,,,5 6
HttpRequest,,7 B
req,,C F
,,,F G
HttpResponse,,H T
resp,,U Y
),,Y Z
{-- 
string.. 
data.. 
=.. 
(.. 
string.. 
).. 

dataObject.. (
;..( )
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #
Object88# )

dataObject88* 4
,885 6
HttpRequest887 B
req88C F
,88F G
HttpResponse88H T
resp88U Y
)88Y Z
{99 
string:: 
data:: 
=:: 
(:: 
string:: 
):: 

dataObject:: (
;::( )
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD ÿ*
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_72a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	
	Hashtable** 
dataHashtable** 
=**  !
new**" %
	Hashtable**& /
(**/ 0
$num**0 1
)**1 2
;**2 3
dataHashtable++ 
.++ 
Add++ 
(++ 
$num++ 
,++ 
data++ !
)++! "
;++" #
dataHashtable,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, !
),,! "
;,," #
dataHashtable-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- !
)--! "
;--" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_72b.. I
...I J
BadSink..J Q
(..Q R
dataHashtable..R _
,..` a
req..b e
,..e f
resp..g k
)..l m
;..m n
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 
	Hashtable>> 
dataHashtable>> 
=>>  !
new>>" %
	Hashtable>>& /
(>>/ 0
$num>>0 1
)>>1 2
;>>2 3
dataHashtable?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? !
)??! "
;??" #
dataHashtable@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ !
)@@! "
;@@" #
dataHashtableAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA !
)AA! "
;AA" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_72bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataHashtableBBV c
,BBd e
reqBBf i
,BBi j
respBBk o
)BBp q
;BBq r
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
	HashtableQQ 
dataHashtableQQ 
=QQ  !
newQQ" %
	HashtableQQ& /
(QQ/ 0
$numQQ0 1
)QQ1 2
;QQ2 3
dataHashtableRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR !
)RR! "
;RR" #
dataHashtableSS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS !
)SS! "
;SS" #
dataHashtableTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT !
)TT! "
;TT" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_72bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataHashtableUUV c
,UUd e
reqUUf i
,UUi j
respUUk o
)UUp q
;UUq r
}VV 
}XX 
}YY 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_72b G
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #
	Hashtable,,# ,
dataHashtable,,- :
,,,; <
HttpRequest,,= H
req,,I L
,,,L M
HttpResponse,,N Z
resp,,[ _
),,_ `
{-- 
string.. 
data.. 
=.. 
(.. 
string.. 
).. 
dataHashtable.. ,
[.., -
$num..- .
]... /
;../ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #
	Hashtable88# ,
dataHashtable88- :
,88; <
HttpRequest88= H
req88I L
,88L M
HttpResponse88N Z
resp88[ _
)88_ `
{99 
string:: 
data:: 
=:: 
(:: 
string:: 
):: 
dataHashtable:: ,
[::, -
$num::- .
]::. /
;::/ 0
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD +
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_73a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	

LinkedList** 
<** 
string** 
>** 
dataLinkedList** )
=*** +
new**, /

LinkedList**0 :
<**: ;
string**; A
>**A B
(**B C
)**C D
;**D E
dataLinkedList++ 
.++ 
AddLast++ 
(++ 
data++ #
)++# $
;++$ %
dataLinkedList,, 
.,, 
AddLast,, 
(,, 
data,, #
),,# $
;,,$ %
dataLinkedList-- 
.-- 
AddLast-- 
(-- 
data-- #
)--# $
;--$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_73b.. I
...I J
BadSink..J Q
(..Q R
dataLinkedList..R `
,..a b
req..c f
,..f g
resp..h l
)..m n
;..n o
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 

LinkedList>> 
<>> 
string>> 
>>> 
dataLinkedList>> )
=>>* +
new>>, /

LinkedList>>0 :
<>>: ;
string>>; A
>>>A B
(>>B C
)>>C D
;>>D E
dataLinkedList?? 
.?? 
AddLast?? 
(?? 
data?? #
)??# $
;??$ %
dataLinkedList@@ 
.@@ 
AddLast@@ 
(@@ 
data@@ #
)@@# $
;@@$ %
dataLinkedListAA 
.AA 
AddLastAA 
(AA 
dataAA #
)AA# $
;AA$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_73bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataLinkedListBBV d
,BBe f
reqBBg j
,BBj k
respBBl p
)BBq r
;BBr s
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	

LinkedListQQ 
<QQ 
stringQQ 
>QQ 
dataLinkedListQQ )
=QQ* +
newQQ, /

LinkedListQQ0 :
<QQ: ;
stringQQ; A
>QQA B
(QQB C
)QQC D
;QQD E
dataLinkedListRR 
.RR 
AddLastRR 
(RR 
dataRR #
)RR# $
;RR$ %
dataLinkedListSS 
.SS 
AddLastSS 
(SS 
dataSS #
)SS# $
;SS$ %
dataLinkedListTT 
.TT 
AddLastTT 
(TT 
dataTT #
)TT# $
;TT$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_73bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataLinkedListUUV d
,UUe f
reqUUg j
,UUj k
respUUl p
)UUq r
;UUr s
}VV 
}XX 
}YY Û
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_73b G
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #

LinkedList,,# -
<,,- .
string,,. 4
>,,4 5
dataLinkedList,,6 D
,,,E F
HttpRequest,,G R
req,,S V
,,,V W
HttpResponse,,X d
resp,,e i
),,i j
{-- 
string.. 
data.. 
=.. 
dataLinkedList.. $
...$ %
Last..% )
...) *
Value..* /
;../ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #

LinkedList88# -
<88- .
string88. 4
>884 5
dataLinkedList886 D
,88E F
HttpRequest88G R
req88S V
,88V W
HttpResponse88X d
resp88e i
)88i j
{99 
string:: 
data:: 
=:: 
dataLinkedList:: $
.::$ %
Last::% )
.::) *
Value::* /
;::/ 0
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD Ê.
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_74a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	

Dictionary** 
<** 
int** 
,** 
string** 
>** 
dataDictionary** -
=**. /
new**0 3

Dictionary**4 >
<**> ?
int**? B
,**B C
string**C I
>**I J
(**J K
)**K L
;**L M
dataDictionary++ 
.++ 
Add++ 
(++ 
$num++ 
,++ 
data++ "
)++" #
;++# $
dataDictionary,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, "
),," #
;,,# $
dataDictionary-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- "
)--" #
;--# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_74b.. I
...I J
BadSink..J Q
(..Q R
dataDictionary..R `
,..a b
req..c f
,..f g
resp..h l
)..m n
;..n o
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 

Dictionary>> 
<>> 
int>> 
,>> 
string>> 
>>> 
dataDictionary>> -
=>>. /
new>>0 3

Dictionary>>4 >
<>>> ?
int>>? B
,>>B C
string>>C I
>>>I J
(>>J K
)>>K L
;>>L M
dataDictionary?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? "
)??" #
;??# $
dataDictionary@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ "
)@@" #
;@@# $
dataDictionaryAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA "
)AA" #
;AA# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_74bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataDictionaryBBV d
,BBe f
reqBBg j
,BBj k
respBBl p
)BBq r
;BBr s
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	

DictionaryQQ 
<QQ 
intQQ 
,QQ 
stringQQ 
>QQ 
dataDictionaryQQ -
=QQ. /
newQQ0 3

DictionaryQQ4 >
<QQ> ?
intQQ? B
,QQB C
stringQQC I
>QQI J
(QQJ K
)QQK L
;QQL M
dataDictionaryRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR "
)RR" #
;RR# $
dataDictionarySS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS "
)SS" #
;SS# $
dataDictionaryTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT "
)TT" #
;TT# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_74bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataDictionaryUUV d
,UUe f
reqUUg j
,UUj k
respUUl p
)UUq r
;UUr s
}VV 
}XX 
}YY 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_74b G
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, #
(,,# $

Dictionary,,$ .
<,,. /
int,,/ 2
,,,2 3
string,,3 9
>,,9 :
dataDictionary,,; I
,,,J K
HttpRequest,,L W
req,,X [
,,,[ \
HttpResponse,,] i
resp,,j n
),,n o
{-- 
string.. 
data.. 
=.. 
dataDictionary.. $
[..$ %
$num..% &
]..& '
;..' (
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #

Dictionary88# -
<88- .
int88. 1
,881 2
string882 8
>888 9
dataDictionary88: H
,88I J
HttpRequest88K V
req88W Z
,88Z [
HttpResponse88\ h
resp88i m
)88m n
{99 
string:: 
data:: 
=:: 
dataDictionary:: $
[::$ %
$num::% &
]::& '
;::' (
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD Æ<
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_75a G
:H I
AbstractTestCaseWebJ ]
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	
byte-- 
[-- 
]-- 
dataSerialized-- 
=-- 
null--  $
;--$ %
try.. 
{// 	
BinaryFormatter00 
bf00 
=00  
new00! $
BinaryFormatter00% 4
(004 5
)005 6
;006 7
using11 
(11 
var11 
ms11 
=11 
new11 
MemoryStream11  ,
(11, -
)11- .
)11. /
{22 
bf33 
.33 
	Serialize33 
(33 
ms33 
,33  
data33! %
)33% &
;33& '
dataSerialized44 
=44  
ms44! #
.44# $
ToArray44$ +
(44+ ,
)44, -
;44- .
}55 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_75b66 M
.66M N
BadSink66N U
(66U V
dataSerialized66V d
,66e f
req66g j
,66j k
resp66l p
)66q r
;66r s
}77 	
catch88 
(88 "
SerializationException88 %
exceptSerialize88& 5
)885 6
{99 	
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: 
.:: 
LogLevel:: '
.::' (
Warn::( ,
,::, -
$str::. X
,::X Y
exceptSerialize::Z i
)::i j
;::j k
};; 	
}<< 
public?? 

override?? 
void?? 
Good?? 
(?? 
HttpRequest?? )
req??* -
,??- .
HttpResponse??/ ;
resp??< @
)??@ A
{@@ 
GoodG2BAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
GoodB2GBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
byteRR 
[RR 
]RR 
dataSerializedRR 
=RR 
nullRR  $
;RR$ %
trySS 
{TT 	
BinaryFormatterUU 
bfUU 
=UU  
newUU! $
BinaryFormatterUU% 4
(UU4 5
)UU5 6
;UU6 7
usingVV 
(VV 
varVV 
msVV 
=VV 
newVV 
MemoryStreamVV  ,
(VV, -
)VV- .
)VV. /
{WW 
bfXX 
.XX 
	SerializeXX 
(XX 
msXX 
,XX  
dataXX! %
)XX% &
;XX& '
dataSerializedYY 
=YY  
msYY! #
.YY# $
ToArrayYY$ +
(YY+ ,
)YY, -
;YY- .
}ZZ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_75b[[ M
.[[M N
GoodG2BSink[[N Y
([[Y Z
dataSerialized[[Z h
,[[i j
req[[k n
,[[n o
resp[[p t
)[[u v
;[[v w
}\\ 	
catch]] 
(]] "
SerializationException]] %
exceptSerialize]]& 5
)]]5 6
{^^ 	
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ 
.__ 
LogLevel__ '
.__' (
Warn__( ,
,__, -
$str__. X
,__X Y
exceptSerialize__Z i
)__i j
;__j k
}`` 	
}aa 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
HttpRequestdd  +
reqdd, /
,dd/ 0
HttpResponsedd1 =
respdd> B
)ddB C
{ee 
stringff 
dataff 
;ff 
datagg 
=gg 
$strgg 
;gg 
{ii 	
ifjj 
(jj 
reqjj 
.jj 
QueryStringjj 
[jj  
$strjj  $
]jj$ %
!=jj& (
nulljj) -
)jj- .
{kk 
datall 
=ll 
reqll 
.ll 
QueryStringll &
[ll& '
$strll' +
]ll+ ,
;ll, -
}mm 
}nn 	
bytepp 
[pp 
]pp 
dataSerializedpp 
=pp 
nullpp  $
;pp$ %
tryqq 
{rr 	
BinaryFormatterss 
bfss 
=ss  
newss! $
BinaryFormatterss% 4
(ss4 5
)ss5 6
;ss6 7
usingtt 
(tt 
vartt 
mstt 
=tt 
newtt 
MemoryStreamtt  ,
(tt, -
)tt- .
)tt. /
{uu 
bfvv 
.vv 
	Serializevv 
(vv 
msvv 
,vv  
datavv! %
)vv% &
;vv& '
dataSerializedww 
=ww  
msww! #
.ww# $
ToArrayww$ +
(ww+ ,
)ww, -
;ww- .
}xx M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_75byy M
.yyM N
GoodB2GSinkyyN Y
(yyY Z
dataSerializedyyZ h
,yyi j
reqyyk n
,yyn o
respyyp t
)yyu v
;yyv w
}zz 	
catch{{ 
({{ "
SerializationException{{ %
exceptSerialize{{& 5
){{5 6
{|| 	
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} 
.}} 
LogLevel}} '
.}}' (
Warn}}( ,
,}}, -
$str}}. X
,}}X Y
exceptSerialize}}Z i
)}}i j
;}}j k
}~~ 	
} 
} 
} ;
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_75b G
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if,, 
(,, 
data,, 
!=,, 
null,, 
),, 
{-- 

HttpCookie.. 

cookieSink.. %
=..& '
new..( +

HttpCookie.., 6
(..6 7
$str..7 =
,..= >
data..? C
)..C D
;..D E
resp00 
.00 
AppendCookie00 !
(00! "

cookieSink00" ,
)00, -
;00- .
}11 
}22 	
catch33 
(33 "
SerializationException33 %
exceptSerialize33& 5
)335 6
{44 	
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 
.55 
LogLevel55 '
.55' (
Warn55( ,
,55, -
$str55. Y
,55Y Z
exceptSerialize55[ j
)55j k
;55k l
}66 	
}77 
public<< 

static<< 
void<< 
GoodG2BSink<< "
(<<" #
byte<<# '
[<<' (
]<<( )
dataSerialized<<* 8
,<<9 :
HttpRequest<<; F
req<<G J
,<<J K
HttpResponse<<L X
resp<<Y ]
)<<] ^
{== 
try>> 
{?? 	
string@@ 
data@@ 
;@@ 
varAA 
binFormAA 
=AA 
newAA 
BinaryFormatterAA -
(AA- .
)AA. /
;AA/ 0
usingBB 
(BB 
varBB 
	memStreamBB  
=BB! "
newBB# &
MemoryStreamBB' 3
(BB3 4
)BB4 5
)BB5 6
{CC 
	memStreamDD 
.DD 
WriteDD 
(DD  
dataSerializedDD  .
,DD. /
$numDD0 1
,DD1 2
dataSerializedDD3 A
.DDA B
LengthDDB H
)DDH I
;DDI J
	memStreamEE 
.EE 
SeekEE 
(EE 
$numEE  
,EE  !

SeekOriginEE" ,
.EE, -
BeginEE- 2
)EE2 3
;EE3 4
dataFF 
=FF 
(FF 
stringFF 
)FF 
binFormFF &
.FF& '
DeserializeFF' 2
(FF2 3
	memStreamFF3 <
)FF< =
;FF= >
}GG 
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 

HttpCookieJJ 

cookieSinkJJ %
=JJ& '
newJJ( +

HttpCookieJJ, 6
(JJ6 7
$strJJ7 =
,JJ= >
dataJJ? C
)JJC D
;JJD E
respLL 
.LL 
AppendCookieLL !
(LL! "

cookieSinkLL" ,
)LL, -
;LL- .
}MM 
}NN 	
catchOO 
(OO "
SerializationExceptionOO %
exceptSerializeOO& 5
)OO5 6
{PP 	
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ 
(QQ 
NLogQQ 
.QQ 
LogLevelQQ '
.QQ' (
WarnQQ( ,
,QQ, -
$strQQ. Y
,QQY Z
exceptSerializeQQ[ j
)QQj k
;QQk l
}RR 	
}SS 
publicVV 

staticVV 
voidVV 
GoodB2GSinkVV "
(VV" #
byteVV# '
[VV' (
]VV( )
dataSerializedVV* 8
,VV9 :
HttpRequestVV; F
reqVVG J
,VVJ K
HttpResponseVVL X
respVVY ]
)VV] ^
{WW 
tryXX 
{YY 	
stringZZ 
dataZZ 
;ZZ 
var[[ 
binForm[[ 
=[[ 
new[[ 
BinaryFormatter[[ -
([[- .
)[[. /
;[[/ 0
using\\ 
(\\ 
var\\ 
	memStream\\  
=\\! "
new\\# &
MemoryStream\\' 3
(\\3 4
)\\4 5
)\\5 6
{]] 
	memStream^^ 
.^^ 
Write^^ 
(^^  
dataSerialized^^  .
,^^. /
$num^^0 1
,^^1 2
dataSerialized^^3 A
.^^A B
Length^^B H
)^^H I
;^^I J
	memStream__ 
.__ 
Seek__ 
(__ 
$num__  
,__  !

SeekOrigin__" ,
.__, -
Begin__- 2
)__2 3
;__3 4
data`` 
=`` 
(`` 
string`` 
)`` 
binForm`` &
.``& '
Deserialize``' 2
(``2 3
	memStream``3 <
)``< =
;``= >
}aa 
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 

HttpCookiedd 

cookieSinkdd %
=dd& '
newdd( +

HttpCookiedd, 6
(dd6 7
$strdd7 =
,dd= >
HttpUtilitydd? J
.ddJ K
	UrlEncodeddK T
(ddT U
dataddU Y
,ddY Z
Encodingdd[ c
.ddc d
UTF8ddd h
)ddh i
)ddi j
;ddj k
respff 
.ff 
AppendCookieff !
(ff! "

cookieSinkff" ,
)ff, -
;ff- .
}gg 
}hh 	
catchii 
(ii "
SerializationExceptionii %
exceptSerializeii& 5
)ii5 6
{jj 	
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk 
.kk 
LogLevelkk '
.kk' (
Warnkk( ,
,kk, -
$strkk. Y
,kkY Z
exceptSerializekk[ j
)kkj k
;kkk l
}ll 	
}mm 
}oo 
}pp Ü 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_base)) M

baseObject))N X
=))Y Z
new))[ ^Q
DCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_bad	))_ £
(
))£ ¤
)
))¤ ¥
;
))¥ ¦

baseObject** 
.** 
Action** 
(** 
data** 
,**  
req**! $
,**$ %
resp**& *
)*** +
;**+ ,
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
void55 
GoodG2B55 
(55 
HttpRequest55 $
req55% (
,55( )
HttpResponse55* 6
resp557 ;
)55; <
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_base:: M

baseObject::N X
=::Y Z
new::[ ^U
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_goodG2B	::_ §
(
::§ ¨
)
::¨ ©
;
::© ª

baseObject;; 
.;; 
Action;; 
(;; 
data;; 
,;;  
req;;! $
,;;$ %
resp;;& *
);;* +
;;;+ ,
}<< 
private?? 
void?? 
GoodB2G?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataBB 
=BB 
$strBB 
;BB 
{DD 	
ifEE 
(EE 
reqEE 
.EE 
QueryStringEE 
[EE  
$strEE  $
]EE$ %
!=EE& (
nullEE) -
)EE- .
{FF 
dataGG 
=GG 
reqGG 
.GG 
QueryStringGG &
[GG& '
$strGG' +
]GG+ ,
;GG, -
}HH 
}II 	Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_baseJJ M

baseObjectJJN X
=JJY Z
newJJ[ ^U
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_goodB2G	JJ_ §
(
JJ§ ¨
)
JJ¨ ©
;
JJ© ª

baseObjectKK 
.KK 
ActionKK 
(KK 
dataKK 
,KK  
reqKK! $
,KK$ %
respKK& *
)KK* +
;KK+ ,
}LL 
}NN 
}OO 

ÅC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class P
DCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_bad J
:K LR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_base	M 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
}&& 
}'' õ
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_base T
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} Â
ÉC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class T
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_goodB2G N
:O PR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_base	Q 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
HttpUtility""; F
.""F G
	UrlEncode""G P
(""P Q
data""Q U
,""U V
Encoding""W _
.""_ `
UTF8""` d
)""d e
)""e f
;""f g
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
}'' 
}(( 

ÉC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class T
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_goodG2B N
:O PR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addCookie_81_base	Q 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
}'' 
}(( þ
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_01 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
if** 

(** 
data** 
!=** 
null** 
)** 
{++ 	
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, %
,,,% &
$str,,' :
+,,; <
data,,= A
),,A B
;,,B C
}-- 	
}.. 
public11 

override11 
void11 
Good11 
(11 
HttpRequest11 )
req11* -
,11- .
HttpResponse11/ ;
resp11< @
)11@ A
{22 
GoodG2B33 
(33 
req33 
,33 
resp33 
)33 
;33 
GoodB2G44 
(44 
req44 
,44 
resp44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
HttpRequest88 $
req88% (
,88( )
HttpResponse88* 6
resp887 ;
)88; <
{99 
string:: 
data:: 
;:: 
data<< 
=<< 
$str<< 
;<< 
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ %
,@@% &
$str@@' :
+@@; <
data@@= A
)@@A B
;@@B C
}AA 	
}BB 
privateEE 
voidEE 
GoodB2GEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataGG 
;GG 
dataHH 
=HH 
$strHH 
;HH 
{JJ 	
ifKK 
(KK 
reqKK 
.KK 
QueryStringKK 
[KK  
$strKK  $
]KK$ %
!=KK& (
nullKK) -
)KK- .
{LL 
dataMM 
=MM 
reqMM 
.MM 
QueryStringMM &
[MM& '
$strMM' +
]MM+ ,
;MM, -
}NN 
}OO 	
ifQQ 

(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
dataSS 
=SS 
HttpUtilitySS 
.SS 
	UrlEncodeSS (
(SS( )
$strSS) +
,SS+ ,
EncodingSS- 5
.SS5 6
UTF8SS6 :
)SS: ;
;SS; <
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT %
,TT% &
$strTT' :
+TT; <
dataTT= A
)TTA B
;TTB C
}UU 	
}VV 
}XX 
}YY @
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_02 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
true22 
)22 
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
falseAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
trueLL 
)LL 
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
trueZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
trueee 
)ee 
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
truess 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
false
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
true
©© 
)
©© 
{
ªª 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
$str
®®- /
,
®®/ 0
Encoding
®®1 9
.
®®9 :
UTF8
®®: >
)
®®> ?
;
®®? @
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ äB
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_03 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
$num22 
==22 
$num22 
)22 
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
$numAA 
!=AA 
$numAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
$numLL 
==LL 
$numLL 
)LL 
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
$numZZ 
==ZZ 
$numZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
$numee 
==ee 
$numee 
)ee 
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
$numss 
==ss 
$numss 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
$num
©© 
==
©© 
$num
©© 
)
©© 
{
ªª 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
$str
®®- /
,
®®/ 0
Encoding
®®1 9
.
®®9 :
UTF8
®®: >
)
®®> ?
;
®®? @
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ ÆC
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_04 F
:G H
AbstractTestCaseWebI \
{ 
private"" 
const"" 
bool"" 
PRIVATE_CONST_TRUE"" )
=""* +
true"", 0
;""0 1
private## 
const## 
bool## 
PRIVATE_CONST_FALSE## *
=##+ ,
false##- 2
;##2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{,, 
if-- 
(-- 
req-- 
.-- 
QueryString-- #
[--# $
$str--$ (
]--( )
!=--* ,
null--- 1
)--1 2
{.. 
data// 
=// 
req// 
.// 
QueryString// *
[//* +
$str//+ /
]/// 0
;//0 1
}00 
}11 
}22 	
else33 
{44 	
data77 
=77 
null77 
;77 
}88 	
if99 

(99 
PRIVATE_CONST_TRUE99 
)99 
{:: 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
resp>> 
.>> 
	AddHeader>> 
(>> 
$str>> )
,>>) *
$str>>+ >
+>>? @
data>>A E
)>>E F
;>>F G
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
PRIVATE_CONST_FALSEHH 
)HH  
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
PRIVATE_CONST_TRUESS 
)SS 
{TT 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 
respXX 
.XX 
	AddHeaderXX 
(XX 
$strXX )
,XX) *
$strXX+ >
+XX? @
dataXXA E
)XXE F
;XXF G
}YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodG2B2^^ 
(^^ 
HttpRequest^^ %
req^^& )
,^^) *
HttpResponse^^+ 7
resp^^8 <
)^^< =
{__ 
string`` 
data`` 
;`` 
ifaa 

(aa 
PRIVATE_CONST_TRUEaa 
)aa 
{bb 	
datadd 
=dd 
$strdd 
;dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
ifll 

(ll 
PRIVATE_CONST_TRUEll 
)ll 
{mm 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 
respqq 
.qq 
	AddHeaderqq 
(qq 
$strqq )
,qq) *
$strqq+ >
+qq? @
dataqqA E
)qqE F
;qqF G
}rr 
}ss 	
}tt 
privateww 
voidww 
GoodB2G1ww 
(ww 
HttpRequestww %
reqww& )
,ww) *
HttpResponseww+ 7
respww8 <
)ww< =
{xx 
stringyy 
datayy 
;yy 
ifzz 

(zz 
PRIVATE_CONST_TRUEzz 
)zz 
{{{ 	
data|| 
=|| 
$str|| 
;|| 
{~~ 
if 
( 
req 
. 
QueryString #
[# $
$str$ (
]( )
!=* ,
null- 1
)1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PRIVATE_CONST_FALSE
 
)
  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
   	
data
¡¡ 
=
¡¡ 
$str
¡¡ 
;
¡¡ 
{
££ 
if
¤¤ 
(
¤¤ 
req
¤¤ 
.
¤¤ 
QueryString
¤¤ #
[
¤¤# $
$str
¤¤$ (
]
¤¤( )
!=
¤¤* ,
null
¤¤- 1
)
¤¤1 2
{
¥¥ 
data
¦¦ 
=
¦¦ 
req
¦¦ 
.
¦¦ 
QueryString
¦¦ *
[
¦¦* +
$str
¦¦+ /
]
¦¦/ 0
;
¦¦0 1
}
§§ 
}
¨¨ 
}
©© 	
else
ªª 
{
«« 	
data
®® 
=
®® 
null
®® 
;
®® 
}
¯¯ 	
if
°° 

(
°°  
PRIVATE_CONST_TRUE
°° 
)
°° 
{
±± 	
if
³³ 
(
³³ 
data
³³ 
!=
³³ 
null
³³ 
)
³³ 
{
´´ 
data
µµ 
=
µµ 
HttpUtility
µµ "
.
µµ" #
	UrlEncode
µµ# ,
(
µµ, -
$str
µµ- /
,
µµ/ 0
Encoding
µµ1 9
.
µµ9 :
UTF8
µµ: >
)
µµ> ?
;
µµ? @
resp
¶¶ 
.
¶¶ 
	AddHeader
¶¶ 
(
¶¶ 
$str
¶¶ )
,
¶¶) *
$str
¶¶+ >
+
¶¶? @
data
¶¶A E
)
¶¶E F
;
¶¶F G
}
·· 
}
¸¸ 	
}
¹¹ 
public
»» 

override
»» 
void
»» 
Good
»» 
(
»» 
HttpRequest
»» )
req
»»* -
,
»»- .
HttpResponse
»»/ ;
resp
»»< @
)
»»@ A
{
¼¼ 
GoodG2B1
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodG2B2
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
GoodB2G1
¿¿ 
(
¿¿ 
req
¿¿ 
,
¿¿ 
resp
¿¿ 
)
¿¿ 
;
¿¿ 
GoodB2G2
ÀÀ 
(
ÀÀ 
req
ÀÀ 
,
ÀÀ 
resp
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÁÁ 
}ÃÃ 
}ÄÄ ÊB
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_05 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
$str)) 
;)) 
{++ 
if,, 
(,, 
req,, 
.,, 
QueryString,, #
[,,# $
$str,,$ (
],,( )
!=,,* ,
null,,- 1
),,1 2
{-- 
data.. 
=.. 
req.. 
... 
QueryString.. *
[..* +
$str..+ /
]../ 0
;..0 1
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
privateTrue88 
)88 
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
privateFalseGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
privateTrueRR 
)RR 
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
privateTrue`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
privateTruekk 
)kk 
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
privateTrueyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{}} 
if~~ 
(~~ 
req~~ 
.~~ 
QueryString~~ #
[~~# $
$str~~$ (
]~~( )
!=~~* ,
null~~- 1
)~~1 2
{ 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
   
=
   
$str
   
;
   
{
¢¢ 
if
££ 
(
££ 
req
££ 
.
££ 
QueryString
££ #
[
££# $
$str
££$ (
]
££( )
!=
££* ,
null
££- 1
)
££1 2
{
¤¤ 
data
¥¥ 
=
¥¥ 
req
¥¥ 
.
¥¥ 
QueryString
¥¥ *
[
¥¥* +
$str
¥¥+ /
]
¥¥/ 0
;
¥¥0 1
}
¦¦ 
}
§§ 
}
¨¨ 	
else
©© 
{
ªª 	
data
­­ 
=
­­ 
null
­­ 
;
­­ 
}
®® 	
if
¯¯ 

(
¯¯ 
privateTrue
¯¯ 
)
¯¯ 
{
°° 	
if
²² 
(
²² 
data
²² 
!=
²² 
null
²² 
)
²² 
{
³³ 
data
´´ 
=
´´ 
HttpUtility
´´ "
.
´´" #
	UrlEncode
´´# ,
(
´´, -
$str
´´- /
,
´´/ 0
Encoding
´´1 9
.
´´9 :
UTF8
´´: >
)
´´> ?
;
´´? @
resp
µµ 
.
µµ 
	AddHeader
µµ 
(
µµ 
$str
µµ )
,
µµ) *
$str
µµ+ >
+
µµ? @
data
µµA E
)
µµE F
;
µµF G
}
¶¶ 
}
·· 	
}
¸¸ 
public
ºº 

override
ºº 
void
ºº 
Good
ºº 
(
ºº 
HttpRequest
ºº )
req
ºº* -
,
ºº- .
HttpResponse
ºº/ ;
resp
ºº< @
)
ºº@ A
{
»» 
GoodG2B1
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
GoodG2B2
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodB2G1
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
GoodB2G2
¿¿ 
(
¿¿ 
req
¿¿ 
,
¿¿ 
resp
¿¿ 
)
¿¿ 
;
¿¿ 
}
ÀÀ 
}ÂÂ 
}ÃÃ E
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_06 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&&  
$num&&  !
)&&! "
{'' 	
data(( 
=(( 
$str(( 
;(( 
{** 
if++ 
(++ 
req++ 
.++ 
QueryString++ #
[++# $
$str++$ (
]++( )
!=++* ,
null++- 1
)++1 2
{,, 
data-- 
=-- 
req-- 
.-- 
QueryString-- *
[--* +
$str--+ /
]--/ 0
;--0 1
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
null55 
;55 
}66 	
if77 

(77 
PRIVATE_CONST_FIVE77 
==77  
$num77  !
)77! "
{88 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< )
,<<) *
$str<<+ >
+<<? @
data<<A E
)<<E F
;<<F G
}== 
}>> 	
}?? 
privateCC 
voidCC 
GoodG2B1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
;EE 
ifFF 

(FF 
PRIVATE_CONST_FIVEFF 
!=FF  
$numFF  !
)FF! "
{GG 	
dataJJ 
=JJ 
nullJJ 
;JJ 
}KK 	
elseLL 
{MM 	
dataOO 
=OO 
$strOO 
;OO 
}PP 	
ifQQ 

(QQ 
PRIVATE_CONST_FIVEQQ 
==QQ  
$numQQ  !
)QQ! "
{RR 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respVV 
.VV 
	AddHeaderVV 
(VV 
$strVV )
,VV) *
$strVV+ >
+VV? @
dataVVA E
)VVE F
;VVF G
}WW 
}XX 	
}YY 
private\\ 
void\\ 
GoodG2B2\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
PRIVATE_CONST_FIVE__ 
==__  
$num__  !
)__! "
{`` 	
databb 
=bb 
$strbb 
;bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
ifjj 

(jj 
PRIVATE_CONST_FIVEjj 
==jj  
$numjj  !
)jj! "
{kk 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
respoo 
.oo 
	AddHeaderoo 
(oo 
$stroo )
,oo) *
$stroo+ >
+oo? @
dataooA E
)ooE F
;ooF G
}pp 
}qq 	
}rr 
privateuu 
voiduu 
GoodB2G1uu 
(uu 
HttpRequestuu %
requu& )
,uu) *
HttpResponseuu+ 7
respuu8 <
)uu< =
{vv 
stringww 
dataww 
;ww 
ifxx 

(xx 
PRIVATE_CONST_FIVExx 
==xx  
$numxx  !
)xx! "
{yy 	
datazz 
=zz 
$strzz 
;zz 
{|| 
if}} 
(}} 
req}} 
.}} 
QueryString}} #
[}}# $
$str}}$ (
]}}( )
!=}}* ,
null}}- 1
)}}1 2
{~~ 
data 
= 
req 
. 
QueryString *
[* +
$str+ /
]/ 0
;0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
!=
  
$num
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
$str
 
;
 
{
¡¡ 
if
¢¢ 
(
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ #
[
¢¢# $
$str
¢¢$ (
]
¢¢( )
!=
¢¢* ,
null
¢¢- 1
)
¢¢1 2
{
££ 
data
¤¤ 
=
¤¤ 
req
¤¤ 
.
¤¤ 
QueryString
¤¤ *
[
¤¤* +
$str
¤¤+ /
]
¤¤/ 0
;
¤¤0 1
}
¥¥ 
}
¦¦ 
}
§§ 	
else
¨¨ 
{
©© 	
data
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
­­ 	
if
®® 

(
®®  
PRIVATE_CONST_FIVE
®® 
==
®®  
$num
®®  !
)
®®! "
{
¯¯ 	
if
±± 
(
±± 
data
±± 
!=
±± 
null
±± 
)
±± 
{
²² 
data
³³ 
=
³³ 
HttpUtility
³³ "
.
³³" #
	UrlEncode
³³# ,
(
³³, -
$str
³³- /
,
³³/ 0
Encoding
³³1 9
.
³³9 :
UTF8
³³: >
)
³³> ?
;
³³? @
resp
´´ 
.
´´ 
	AddHeader
´´ 
(
´´ 
$str
´´ )
,
´´) *
$str
´´+ >
+
´´? @
data
´´A E
)
´´E F
;
´´F G
}
µµ 
}
¶¶ 	
}
·· 
public
¹¹ 

override
¹¹ 
void
¹¹ 
Good
¹¹ 
(
¹¹ 
HttpRequest
¹¹ )
req
¹¹* -
,
¹¹- .
HttpResponse
¹¹/ ;
resp
¹¹< @
)
¹¹@ A
{
ºº 
GoodG2B1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodG2B2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
GoodB2G1
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodB2G2
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
}
¿¿ 
}ÁÁ 
}ÂÂ £D
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_07 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
$str(( 
;(( 
{** 
if++ 
(++ 
req++ 
.++ 
QueryString++ #
[++# $
$str++$ (
]++( )
!=++* ,
null++- 1
)++1 2
{,, 
data-- 
=-- 
req-- 
.-- 
QueryString-- *
[--* +
$str--+ /
]--/ 0
;--0 1
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
null55 
;55 
}66 	
if77 

(77 
privateFive77 
==77 
$num77 
)77 
{88 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< )
,<<) *
$str<<+ >
+<<? @
data<<A E
)<<E F
;<<F G
}== 
}>> 	
}?? 
privateCC 
voidCC 
GoodG2B1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
;EE 
ifFF 

(FF 
privateFiveFF 
!=FF 
$numFF 
)FF 
{GG 	
dataJJ 
=JJ 
nullJJ 
;JJ 
}KK 	
elseLL 
{MM 	
dataOO 
=OO 
$strOO 
;OO 
}PP 	
ifQQ 

(QQ 
privateFiveQQ 
==QQ 
$numQQ 
)QQ 
{RR 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respVV 
.VV 
	AddHeaderVV 
(VV 
$strVV )
,VV) *
$strVV+ >
+VV? @
dataVVA E
)VVE F
;VVF G
}WW 
}XX 	
}YY 
private\\ 
void\\ 
GoodG2B2\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
privateFive__ 
==__ 
$num__ 
)__ 
{`` 	
databb 
=bb 
$strbb 
;bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
ifjj 

(jj 
privateFivejj 
==jj 
$numjj 
)jj 
{kk 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
respoo 
.oo 
	AddHeaderoo 
(oo 
$stroo )
,oo) *
$stroo+ >
+oo? @
dataooA E
)ooE F
;ooF G
}pp 
}qq 	
}rr 
privateuu 
voiduu 
GoodB2G1uu 
(uu 
HttpRequestuu %
requu& )
,uu) *
HttpResponseuu+ 7
respuu8 <
)uu< =
{vv 
stringww 
dataww 
;ww 
ifxx 

(xx 
privateFivexx 
==xx 
$numxx 
)xx 
{yy 	
datazz 
=zz 
$strzz 
;zz 
{|| 
if}} 
(}} 
req}} 
.}} 
QueryString}} #
[}}# $
$str}}$ (
]}}( )
!=}}* ,
null}}- 1
)}}1 2
{~~ 
data 
= 
req 
. 
QueryString *
[* +
$str+ /
]/ 0
;0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
¡¡ 
if
¢¢ 
(
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ #
[
¢¢# $
$str
¢¢$ (
]
¢¢( )
!=
¢¢* ,
null
¢¢- 1
)
¢¢1 2
{
££ 
data
¤¤ 
=
¤¤ 
req
¤¤ 
.
¤¤ 
QueryString
¤¤ *
[
¤¤* +
$str
¤¤+ /
]
¤¤/ 0
;
¤¤0 1
}
¥¥ 
}
¦¦ 
}
§§ 	
else
¨¨ 
{
©© 	
data
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
­­ 	
if
®® 

(
®® 
privateFive
®® 
==
®® 
$num
®® 
)
®® 
{
¯¯ 	
if
±± 
(
±± 
data
±± 
!=
±± 
null
±± 
)
±± 
{
²² 
data
³³ 
=
³³ 
HttpUtility
³³ "
.
³³" #
	UrlEncode
³³# ,
(
³³, -
$str
³³- /
,
³³/ 0
Encoding
³³1 9
.
³³9 :
UTF8
³³: >
)
³³> ?
;
³³? @
resp
´´ 
.
´´ 
	AddHeader
´´ 
(
´´ 
$str
´´ )
,
´´) *
$str
´´+ >
+
´´? @
data
´´A E
)
´´E F
;
´´F G
}
µµ 
}
¶¶ 	
}
·· 
public
¹¹ 

override
¹¹ 
void
¹¹ 
Good
¹¹ 
(
¹¹ 
HttpRequest
¹¹ )
req
¹¹* -
,
¹¹- .
HttpResponse
¹¹/ ;
resp
¹¹< @
)
¹¹@ A
{
ºº 
GoodG2B1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodG2B2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
GoodB2G1
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodB2G2
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
}
¿¿ 
}ÁÁ 
}ÂÂ °G
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_08 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public++ 

override++ 
void++ 
Bad++ 
(++ 
HttpRequest++ (
req++) ,
,++, -
HttpResponse++. :
resp++; ?
)++? @
{,, 
string-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
$str00 
;00 
{22 
if33 
(33 
req33 
.33 
QueryString33 #
[33# $
$str33$ (
]33( )
!=33* ,
null33- 1
)331 2
{44 
data55 
=55 
req55 
.55 
QueryString55 *
[55* +
$str55+ /
]55/ 0
;550 1
}66 
}77 
}88 	
else99 
{:: 	
data== 
=== 
null== 
;== 
}>> 	
if?? 

(?? 
PrivateReturnsTrue?? 
(?? 
)??  
)??  !
{@@ 	
ifBB 
(BB 
dataBB 
!=BB 
nullBB 
)BB 
{CC 
respDD 
.DD 
	AddHeaderDD 
(DD 
$strDD )
,DD) *
$strDD+ >
+DD? @
dataDDA E
)DDE F
;DDF G
}EE 
}FF 	
}GG 
privateKK 
voidKK 
GoodG2B1KK 
(KK 
HttpRequestKK %
reqKK& )
,KK) *
HttpResponseKK+ 7
respKK8 <
)KK< =
{LL 
stringMM 
dataMM 
;MM 
ifNN 

(NN 
PrivateReturnsFalseNN 
(NN  
)NN  !
)NN! "
{OO 	
dataRR 
=RR 
nullRR 
;RR 
}SS 	
elseTT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
ifYY 

(YY 
PrivateReturnsTrueYY 
(YY 
)YY  
)YY  !
{ZZ 	
if\\ 
(\\ 
data\\ 
!=\\ 
null\\ 
)\\ 
{]] 
resp^^ 
.^^ 
	AddHeader^^ 
(^^ 
$str^^ )
,^^) *
$str^^+ >
+^^? @
data^^A E
)^^E F
;^^F G
}__ 
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
HttpRequestdd %
reqdd& )
,dd) *
HttpResponsedd+ 7
respdd8 <
)dd< =
{ee 
stringff 
dataff 
;ff 
ifgg 

(gg 
PrivateReturnsTruegg 
(gg 
)gg  
)gg  !
{hh 	
datajj 
=jj 
$strjj 
;jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
nullpp 
;pp 
}qq 	
ifrr 

(rr 
PrivateReturnsTruerr 
(rr 
)rr  
)rr  !
{ss 	
ifuu 
(uu 
datauu 
!=uu 
nulluu 
)uu 
{vv 
respww 
.ww 
	AddHeaderww 
(ww 
$strww )
,ww) *
$strww+ >
+ww? @
datawwA E
)wwE F
;wwF G
}xx 
}yy 	
}zz 
private}} 
void}} 
GoodB2G1}} 
(}} 
HttpRequest}} %
req}}& )
,}}) *
HttpResponse}}+ 7
resp}}8 <
)}}< =
{~~ 
string 
data 
; 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
¢¢ 
void
¢¢ 
GoodB2G2
¢¢ 
(
¢¢ 
HttpRequest
¢¢ %
req
¢¢& )
,
¢¢) *
HttpResponse
¢¢+ 7
resp
¢¢8 <
)
¢¢< =
{
££ 
string
¤¤ 
data
¤¤ 
;
¤¤ 
if
¥¥ 

(
¥¥  
PrivateReturnsTrue
¥¥ 
(
¥¥ 
)
¥¥  
)
¥¥  !
{
¦¦ 	
data
§§ 
=
§§ 
$str
§§ 
;
§§ 
{
©© 
if
ªª 
(
ªª 
req
ªª 
.
ªª 
QueryString
ªª #
[
ªª# $
$str
ªª$ (
]
ªª( )
!=
ªª* ,
null
ªª- 1
)
ªª1 2
{
«« 
data
¬¬ 
=
¬¬ 
req
¬¬ 
.
¬¬ 
QueryString
¬¬ *
[
¬¬* +
$str
¬¬+ /
]
¬¬/ 0
;
¬¬0 1
}
­­ 
}
®® 
}
¯¯ 	
else
°° 
{
±± 	
data
´´ 
=
´´ 
null
´´ 
;
´´ 
}
µµ 	
if
¶¶ 

(
¶¶  
PrivateReturnsTrue
¶¶ 
(
¶¶ 
)
¶¶  
)
¶¶  !
{
·· 	
if
¹¹ 
(
¹¹ 
data
¹¹ 
!=
¹¹ 
null
¹¹ 
)
¹¹ 
{
ºº 
data
»» 
=
»» 
HttpUtility
»» "
.
»»" #
	UrlEncode
»»# ,
(
»», -
$str
»»- /
,
»»/ 0
Encoding
»»1 9
.
»»9 :
UTF8
»»: >
)
»»> ?
;
»»? @
resp
¼¼ 
.
¼¼ 
	AddHeader
¼¼ 
(
¼¼ 
$str
¼¼ )
,
¼¼) *
$str
¼¼+ >
+
¼¼? @
data
¼¼A E
)
¼¼E F
;
¼¼F G
}
½½ 
}
¾¾ 	
}
¿¿ 
public
ÁÁ 

override
ÁÁ 
void
ÁÁ 
Good
ÁÁ 
(
ÁÁ 
HttpRequest
ÁÁ )
req
ÁÁ* -
,
ÁÁ- .
HttpResponse
ÁÁ/ ;
resp
ÁÁ< @
)
ÁÁ@ A
{
ÂÂ 
GoodG2B1
ÃÃ 
(
ÃÃ 
req
ÃÃ 
,
ÃÃ 
resp
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodG2B2
ÄÄ 
(
ÄÄ 
req
ÄÄ 
,
ÄÄ 
resp
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodB2G1
ÅÅ 
(
ÅÅ 
req
ÅÅ 
,
ÅÅ 
resp
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodB2G2
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ÇÇ 
}ÉÉ 
}ÊÊ èC
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_09 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22  
STATIC_READONLY_TRUE22 #
)22# $
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA !
STATIC_READONLY_FALSEAA $
)AA$ %
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL  
STATIC_READONLY_TRUELL #
)LL# $
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ  
STATIC_READONLY_TRUEZZ #
)ZZ# $
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_TRUEee #
)ee# $
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss  
STATIC_READONLY_TRUEss #
)ss# $
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 #
STATIC_READONLY_FALSE
 $
)
$ %
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© "
STATIC_READONLY_TRUE
©© #
)
©©# $
{
ªª 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
$str
®®- /
,
®®/ 0
Encoding
®®1 9
.
®®9 :
UTF8
®®: >
)
®®> ?
;
®®? @
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ C
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_10 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22 

staticTrue22 
)22 
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA 
staticFalseAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL 

staticTrueLL 
)LL 
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ 

staticTrueZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee 

staticTrueee 
)ee 
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss 

staticTruess 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
staticFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© 

staticTrue
©© 
)
©© 
{
ªª 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
$str
®®- /
,
®®/ 0
Encoding
®®1 9
.
®®9 :
UTF8
®®: >
)
®®> ?
;
®®? @
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ F
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_11 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22
 
IO22 
.22 
StaticReturnsTrue22 
(22  
)22  !
)22! "
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA 
StaticReturnsFalseAA !
(AA! "
)AA" #
)AA# $
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL 
StaticReturnsTrueLL  
(LL  !
)LL! "
)LL" #
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ 
StaticReturnsTrueZZ  
(ZZ  !
)ZZ! "
)ZZ" #
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee 
StaticReturnsTrueee  
(ee  !
)ee! "
)ee" #
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss 
StaticReturnsTruess  
(ss  !
)ss! "
)ss" #
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
  
StaticReturnsFalse
 !
(
! "
)
" #
)
# $
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© 
StaticReturnsTrue
©©  
(
©©  !
)
©©! "
)
©©" #
{
ªª 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
$str
®®- /
,
®®/ 0
Encoding
®®1 9
.
®®9 :
UTF8
®®: >
)
®®> ?
;
®®? @
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ Ù:
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_12 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!!
 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! &
(!!& '
)!!' (
)!!( )
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data// 
=// 
$str// 
;// 
}00 	
if11 

(11
 
IO11 
.11 $
StaticReturnsTrueOrFalse11 &
(11& '
)11' (
)11( )
{22 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp66 
.66 
	AddHeader66 
(66 
$str66 )
,66) *
$str66+ >
+66? @
data66A E
)66E F
;66F G
}77 
}88 	
else99 
{:: 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
data>> 
=>> 
HttpUtility>> "
.>>" #
	UrlEncode>># ,
(>>, -
$str>>- /
,>>/ 0
Encoding>>1 9
.>>9 :
UTF8>>: >
)>>> ?
;>>? @
resp?? 
.?? 
	AddHeader?? 
(?? 
$str?? )
,??) *
$str??+ >
+??? @
data??A E
)??E F
;??F G
}@@ 
}AA 	
}BB 
privateGG 
voidGG 
GoodG2BGG 
(GG 
HttpRequestGG $
reqGG% (
,GG( )
HttpResponseGG* 6
respGG7 ;
)GG; <
{HH 
stringII 
dataII 
;II 
ifJJ 

(JJ
 
IOJJ 
.JJ $
StaticReturnsTrueOrFalseJJ &
(JJ& '
)JJ' (
)JJ( )
{KK 	
dataMM 
=MM 
$strMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$strRR 
;RR 
}SS 	
ifTT 

(TT
 
IOTT 
.TT $
StaticReturnsTrueOrFalseTT &
(TT& '
)TT' (
)TT( )
{UU 	
ifWW 
(WW 
dataWW 
!=WW 
nullWW 
)WW 
{XX 
respYY 
.YY 
	AddHeaderYY 
(YY 
$strYY )
,YY) *
$strYY+ >
+YY? @
dataYYA E
)YYE F
;YYF G
}ZZ 
}[[ 	
else\\ 
{]] 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
}dd 
privatehh 
voidhh 
GoodB2Ghh 
(hh 
HttpRequesthh $
reqhh% (
,hh( )
HttpResponsehh* 6
resphh7 ;
)hh; <
{ii 
stringjj 
datajj 
;jj 
ifkk 

(kk
 
IOkk 
.kk $
StaticReturnsTrueOrFalsekk &
(kk& '
)kk' (
)kk( )
{ll 	
datamm 
=mm 
$strmm 
;mm 
{oo 
ifpp 
(pp 
reqpp 
.pp 
QueryStringpp #
[pp# $
$strpp$ (
]pp( )
!=pp* ,
nullpp- 1
)pp1 2
{qq 
datarr 
=rr 
reqrr 
.rr 
QueryStringrr *
[rr* +
$strrr+ /
]rr/ 0
;rr0 1
}ss 
}tt 
}uu 	
elsevv 
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
if
 

(

 
IO
 
.
 &
StaticReturnsTrueOrFalse
 &
(
& '
)
' (
)
( )
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} ÆF
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_13 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!# %
$num!!% &
)!!& '
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22  
STATIC_READONLY_FIVE22 #
==22# %
$num22% &
)22& '
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA  
STATIC_READONLY_FIVEAA #
!=AA# %
$numAA% &
)AA& '
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL  
STATIC_READONLY_FIVELL #
==LL# %
$numLL% &
)LL& '
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ  
STATIC_READONLY_FIVEZZ #
==ZZ# %
$numZZ% &
)ZZ& '
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_FIVEee #
==ee# %
$numee% &
)ee& '
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss  
STATIC_READONLY_FIVEss #
==ss# %
$numss% &
)ss& '
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
!=
# %
$num
% &
)
& '
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© "
STATIC_READONLY_FIVE
©© #
==
©©# %
$num
©©% &
)
©©& '
{
ªª 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
$str
®®- /
,
®®/ 0
Encoding
®®1 9
.
®®9 :
UTF8
®®: >
)
®®> ?
;
®®? @
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ âE
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_14 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22 

staticFive22 
==22 
$num22 
)22 
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA 

staticFiveAA 
!=AA 
$numAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL 

staticFiveLL 
==LL 
$numLL 
)LL 
{MM 	
ifOO 
(OO 
dataOO 
!=OO 
nullOO 
)OO 
{PP 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ 

staticFiveZZ 
==ZZ 
$numZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee 

staticFiveee 
==ee 
$numee 
)ee 
{ff 	
ifhh 
(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss 

staticFivess 
==ss 
$numss 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© 

staticFive
©© 
==
©© 
$num
©© 
)
©© 
{
ªª 	
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
$str
®®- /
,
®®/ 0
Encoding
®®1 9
.
®®9 :
UTF8
®®: >
)
®®> ?
;
®®? @
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ O
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_15 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 
if'' 
('' 
req'' 
.'' 
QueryString'' #
[''# $
$str''$ (
]''( )
!=''* ,
null''- 1
)''1 2
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) *
[))* +
$str))+ /
]))/ 0
;))0 1
}** 
}++ 
break,, 
;,, 
default-- 
:-- 
data00 
=00 
null00 
;00 
break11 
;11 
}22 	
switch33 
(33 
$num33 
)33 
{44 	
case55 
$num55 
:55 
if77 
(77 
data77 
!=77 
null77 
)77 
{88 
resp99 
.99 
	AddHeader99 
(99 
$str99 )
,99) *
$str99+ >
+99? @
data99A E
)99E F
;99F G
}:: 
break;; 
;;; 
default<< 
:<< 
IO>> 
.>> 
	WriteLine>> 
(>> 
$str>> /
)>>/ 0
;>>0 1
break?? 
;?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
switchHH 
(HH 
$numHH 
)HH 
{II 	
caseJJ 
$numJJ 
:JJ 
dataMM 
=MM 
nullMM 
;MM 
breakNN 
;NN 
defaultOO 
:OO 
dataQQ 
=QQ 
$strQQ 
;QQ 
breakRR 
;RR 
}SS 	
switchTT 
(TT 
$numTT 
)TT 
{UU 	
caseVV 
$numVV 
:VV 
ifXX 
(XX 
dataXX 
!=XX 
nullXX 
)XX 
{YY 
respZZ 
.ZZ 
	AddHeaderZZ 
(ZZ 
$strZZ )
,ZZ) *
$strZZ+ >
+ZZ? @
dataZZA E
)ZZE F
;ZZF G
}[[ 
break\\ 
;\\ 
default]] 
:]] 
IO__ 
.__ 
	WriteLine__ 
(__ 
$str__ /
)__/ 0
;__0 1
break`` 
;`` 
}aa 	
}bb 
privateee 
voidee 
GoodG2B2ee 
(ee 
HttpRequestee %
reqee& )
,ee) *
HttpResponseee+ 7
respee8 <
)ee< =
{ff 
stringgg 
datagg 
;gg 
switchhh 
(hh 
$numhh 
)hh 
{ii 	
casejj 
$numjj 
:jj 
datall 
=ll 
$strll 
;ll 
breakmm 
;mm 
defaultnn 
:nn 
dataqq 
=qq 
nullqq 
;qq 
breakrr 
;rr 
}ss 	
switchtt 
(tt 
$numtt 
)tt 
{uu 	
casevv 
$numvv 
:vv 
ifxx 
(xx 
dataxx 
!=xx 
nullxx 
)xx 
{yy 
respzz 
.zz 
	AddHeaderzz 
(zz 
$strzz )
,zz) *
$strzz+ >
+zz? @
datazzA E
)zzE F
;zzF G
}{{ 
break|| 
;|| 
default}} 
:}} 
IO 
. 
	WriteLine 
( 
$str /
)/ 0
;0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
break
 
;
 
default
 
:
 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
default
   
:
   
if
¢¢ 
(
¢¢ 
data
¢¢ 
!=
¢¢ 
null
¢¢ 
)
¢¢ 
{
££ 
data
¤¤ 
=
¤¤ 
HttpUtility
¤¤ "
.
¤¤" #
	UrlEncode
¤¤# ,
(
¤¤, -
$str
¤¤- /
,
¤¤/ 0
Encoding
¤¤1 9
.
¤¤9 :
UTF8
¤¤: >
)
¤¤> ?
;
¤¤? @
resp
¥¥ 
.
¥¥ 
	AddHeader
¥¥ 
(
¥¥ 
$str
¥¥ )
,
¥¥) *
$str
¥¥+ >
+
¥¥? @
data
¥¥A E
)
¥¥E F
;
¥¥F G
}
¦¦ 
break
§§ 
;
§§ 
}
¨¨ 	
}
©© 
private
¬¬ 
void
¬¬ 
GoodB2G2
¬¬ 
(
¬¬ 
HttpRequest
¬¬ %
req
¬¬& )
,
¬¬) *
HttpResponse
¬¬+ 7
resp
¬¬8 <
)
¬¬< =
{
­­ 
string
®® 
data
®® 
;
®® 
switch
¯¯ 
(
¯¯ 
$num
¯¯ 
)
¯¯ 
{
°° 	
case
±± 
$num
±± 
:
±± 
data
²² 
=
²² 
$str
²² 
;
²² 
{
´´ 
if
µµ 
(
µµ 
req
µµ 
.
µµ 
QueryString
µµ #
[
µµ# $
$str
µµ$ (
]
µµ( )
!=
µµ* ,
null
µµ- 1
)
µµ1 2
{
¶¶ 
data
·· 
=
·· 
req
·· 
.
·· 
QueryString
·· *
[
··* +
$str
··+ /
]
··/ 0
;
··0 1
}
¸¸ 
}
¹¹ 
break
ºº 
;
ºº 
default
»» 
:
»» 
data
¾¾ 
=
¾¾ 
null
¾¾ 
;
¾¾ 
break
¿¿ 
;
¿¿ 
}
ÀÀ 	
switch
ÁÁ 
(
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
{
ÂÂ 	
case
ÃÃ 
$num
ÃÃ 
:
ÃÃ 
if
ÅÅ 
(
ÅÅ 
data
ÅÅ 
!=
ÅÅ 
null
ÅÅ 
)
ÅÅ 
{
ÆÆ 
data
ÇÇ 
=
ÇÇ 
HttpUtility
ÇÇ "
.
ÇÇ" #
	UrlEncode
ÇÇ# ,
(
ÇÇ, -
$str
ÇÇ- /
,
ÇÇ/ 0
Encoding
ÇÇ1 9
.
ÇÇ9 :
UTF8
ÇÇ: >
)
ÇÇ> ?
;
ÇÇ? @
resp
ÈÈ 
.
ÈÈ 
	AddHeader
ÈÈ 
(
ÈÈ 
$str
ÈÈ )
,
ÈÈ) *
$str
ÈÈ+ >
+
ÈÈ? @
data
ÈÈA E
)
ÈÈE F
;
ÈÈF G
}
ÉÉ 
break
ÊÊ 
;
ÊÊ 
default
ËË 
:
ËË 
IO
ÍÍ 
.
ÍÍ 
	WriteLine
ÍÍ 
(
ÍÍ 
$str
ÍÍ /
)
ÍÍ/ 0
;
ÍÍ0 1
break
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
}
ÐÐ 
public
ÒÒ 

override
ÒÒ 
void
ÒÒ 
Good
ÒÒ 
(
ÒÒ 
HttpRequest
ÒÒ )
req
ÒÒ* -
,
ÒÒ- .
HttpResponse
ÒÒ/ ;
resp
ÒÒ< @
)
ÒÒ@ A
{
ÓÓ 
GoodG2B1
ÔÔ 
(
ÔÔ 
req
ÔÔ 
,
ÔÔ 
resp
ÔÔ 
)
ÔÔ 
;
ÔÔ 
GoodG2B2
ÕÕ 
(
ÕÕ 
req
ÕÕ 
,
ÕÕ 
resp
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G1
ÖÖ 
(
ÖÖ 
req
ÖÖ 
,
ÖÖ 
resp
ÖÖ 
)
ÖÖ 
;
ÖÖ 
GoodB2G2
×× 
(
×× 
req
×× 
,
×× 
resp
×× 
)
×× 
;
×× 
}
ØØ 
}ÚÚ 
}ÛÛ %
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_16 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
break++ 
;++ 
},, 	
while-- 
(-- 
true-- 
)-- 
{.. 	
if00 
(00 
data00 
!=00 
null00 
)00 
{11 
resp22 
.22 
	AddHeader22 
(22 
$str22 )
,22) *
$str22+ >
+22? @
data22A E
)22E F
;22F G
}33 
break44 
;44 
}55 	
}66 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
while== 
(== 
true== 
)== 
{>> 	
data@@ 
=@@ 
$str@@ 
;@@ 
breakAA 
;AA 
}BB 	
whileCC 
(CC 
trueCC 
)CC 
{DD 	
ifFF 
(FF 
dataFF 
!=FF 
nullFF 
)FF 
{GG 
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH )
,HH) *
$strHH+ >
+HH? @
dataHHA E
)HHE F
;HHF G
}II 
breakJJ 
;JJ 
}KK 	
}LL 
privateOO 
voidOO 
GoodB2GOO 
(OO 
HttpRequestOO $
reqOO% (
,OO( )
HttpResponseOO* 6
respOO7 ;
)OO; <
{PP 
stringQQ 
dataQQ 
;QQ 
whileRR 
(RR 
trueRR 
)RR 
{SS 	
dataTT 
=TT 
$strTT 
;TT 
{VV 
ifWW 
(WW 
reqWW 
.WW 
QueryStringWW #
[WW# $
$strWW$ (
]WW( )
!=WW* ,
nullWW- 1
)WW1 2
{XX 
dataYY 
=YY 
reqYY 
.YY 
QueryStringYY *
[YY* +
$strYY+ /
]YY/ 0
;YY0 1
}ZZ 
}[[ 
break\\ 
;\\ 
}]] 	
while^^ 
(^^ 
true^^ 
)^^ 
{__ 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
$strcc- /
,cc/ 0
Encodingcc1 9
.cc9 :
UTF8cc: >
)cc> ?
;cc? @
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
breakff 
;ff 
}gg 	
}hh 
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
HttpRequestjj )
reqjj* -
,jj- .
HttpResponsejj/ ;
respjj< @
)jj@ A
{kk 
GoodG2Bll 
(ll 
reqll 
,ll 
respll 
)ll 
;ll 
GoodB2Gmm 
(mm 
reqmm 
,mm 
respmm 
)mm 
;mm 
}nn 
}pp 
}qq ï$
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_17 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data%% 
=%% 
$str%% 
;%% 
{'' 	
if(( 
((( 
req(( 
.(( 
QueryString(( 
[((  
$str((  $
](($ %
!=((& (
null(() -
)((- .
{)) 
data** 
=** 
req** 
.** 
QueryString** &
[**& '
$str**' +
]**+ ,
;**, -
}++ 
},, 	
for-- 
(-- 
int-- 
j-- 
=-- 
$num-- 
;-- 
j-- 
<-- 
$num-- 
;-- 
j--  
++--  "
)--" #
{.. 	
if00 
(00 
data00 
!=00 
null00 
)00 
{11 
resp22 
.22 
	AddHeader22 
(22 
$str22 )
,22) *
$str22+ >
+22? @
data22A E
)22E F
;22F G
}33 
}44 	
}55 
private99 
void99 
GoodG2B99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 
for>> 
(>> 
int>> 
j>> 
=>> 
$num>> 
;>> 
j>> 
<>> 
$num>> 
;>> 
j>>  
++>>  "
)>>" #
{?? 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 
respCC 
.CC 
	AddHeaderCC 
(CC 
$strCC )
,CC) *
$strCC+ >
+CC? @
dataCCA E
)CCE F
;CCF G
}DD 
}EE 	
}FF 
privateII 
voidII 
GoodB2GII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataKK 
;KK 
dataLL 
=LL 
$strLL 
;LL 
{NN 	
ifOO 
(OO 
reqOO 
.OO 
QueryStringOO 
[OO  
$strOO  $
]OO$ %
!=OO& (
nullOO) -
)OO- .
{PP 
dataQQ 
=QQ 
reqQQ 
.QQ 
QueryStringQQ &
[QQ& '
$strQQ' +
]QQ+ ,
;QQ, -
}RR 
}SS 	
forTT 
(TT 
intTT 
kTT 
=TT 
$numTT 
;TT 
kTT 
<TT 
$numTT 
;TT 
kTT  
++TT  "
)TT" #
{UU 	
ifWW 
(WW 
dataWW 
!=WW 
nullWW 
)WW 
{XX 
dataYY 
=YY 
HttpUtilityYY "
.YY" #
	UrlEncodeYY# ,
(YY, -
$strYY- /
,YY/ 0
EncodingYY1 9
.YY9 :
UTF8YY: >
)YY> ?
;YY? @
respZZ 
.ZZ 
	AddHeaderZZ 
(ZZ 
$strZZ )
,ZZ) *
$strZZ+ >
+ZZ? @
dataZZA E
)ZZE F
;ZZF G
}[[ 
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
HttpRequest__ )
req__* -
,__- .
HttpResponse__/ ;
resp__< @
)__@ A
{`` 
GoodG2Baa 
(aa 
reqaa 
,aa 
respaa 
)aa 
;aa 
GoodB2Gbb 
(bb 
reqbb 
,bb 
respbb 
)bb 
;bb 
}cc 
}ee 
}ff ºC
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_21 F
:G H
AbstractTestCaseWebI \
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	

badPrivate,, 
=,, 
true,, 
;,, 
BadSink-- 
(-- 
data-- 
,-- 
req-- 
,-- 
resp--  
)--  !
;--! "
}.. 
private00 
void00 
BadSink00 
(00 
string00 
data00  $
,00% &
HttpRequest00' 2
req003 6
,006 7
HttpResponse008 D
resp00E I
)00I J
{11 
if22 

(22 

badPrivate22 
)22 
{33 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private== 
bool== 
goodB2G1Private==  
===! "
false==# (
;==( )
private>> 
bool>> 
goodB2G2Private>>  
=>>! "
false>># (
;>>( )
private?? 
bool?? 
goodG2BPrivate?? 
=??  !
false??" '
;??' (
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodB2G1CC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2G2DD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
GoodG2BEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodB2G1II 
(II 
HttpRequestII %
reqII& )
,II) *
HttpResponseII+ 7
respII8 <
)II< =
{JJ 
stringKK 
dataKK 
;KK 
dataLL 
=LL 
$strLL 
;LL 
{NN 	
ifOO 
(OO 
reqOO 
.OO 
QueryStringOO 
[OO  
$strOO  $
]OO$ %
!=OO& (
nullOO) -
)OO- .
{PP 
dataQQ 
=QQ 
reqQQ 
.QQ 
QueryStringQQ &
[QQ& '
$strQQ' +
]QQ+ ,
;QQ, -
}RR 
}SS 	
goodB2G1PrivateTT 
=TT 
falseTT 
;TT  
GoodB2G1SinkUU 
(UU 
dataUU 
,UU 
reqUU 
,UU  
respUU! %
)UU% &
;UU& '
}VV 
privateXX 
voidXX 
GoodB2G1SinkXX 
(XX 
stringXX $
dataXX% )
,XX* +
HttpRequestXX, 7
reqXX8 ;
,XX; <
HttpResponseXX= I
respXXJ N
)XXN O
{YY 
ifZZ 

(ZZ 
goodB2G1PrivateZZ 
)ZZ 
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
$str]] /
)]]/ 0
;]]0 1
}^^ 	
else__ 
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
datadd 
=dd 
HttpUtilitydd "
.dd" #
	UrlEncodedd# ,
(dd, -
$strdd- /
,dd/ 0
Encodingdd1 9
.dd9 :
UTF8dd: >
)dd> ?
;dd? @
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodB2G2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
datann 
=nn 
$strnn 
;nn 
{pp 	
ifqq 
(qq 
reqqq 
.qq 
QueryStringqq 
[qq  
$strqq  $
]qq$ %
!=qq& (
nullqq) -
)qq- .
{rr 
datass 
=ss 
reqss 
.ss 
QueryStringss &
[ss& '
$strss' +
]ss+ ,
;ss, -
}tt 
}uu 	
goodB2G2Privatevv 
=vv 
truevv 
;vv 
GoodB2G2Sinkww 
(ww 
dataww 
,ww 
reqww 
,ww  
respww! %
)ww% &
;ww& '
}xx 
privatezz 
voidzz 
GoodB2G2Sinkzz 
(zz 
stringzz $
datazz% )
,zz* +
HttpRequestzz, 7
reqzz8 ;
,zz; <
HttpResponsezz= I
respzzJ N
)zzN O
{{{ 
if|| 

(|| 
goodB2G2Private|| 
)|| 
{}} 	
if 
( 
data 
!= 
null 
) 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
goodG2BPrivate
 
=
 
true
 
;
 
GoodG2BSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
$ %
;
% &
}
 
private
 
void
 
GoodG2BSink
 
(
 
string
 #
data
$ (
,
) *
HttpRequest
+ 6
req
7 :
,
: ;
HttpResponse
< H
resp
I M
)
M N
{
 
if
 

(
 
goodG2BPrivate
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
} 
} ,
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
=## 
null## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	
badPublicStatic,, 
=,, 
true,, 
;,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22b-- I
.--I J
BadSink--J Q
(--Q R
data--R V
,--W X
req--Y \
,--\ ]
resp--^ b
)--b c
;--c d
}.. 
public11 

static11 
bool11  
goodB2G1PublicStatic11 +
=11, -
false11. 3
;113 4
public22 

static22 
bool22  
goodB2G2PublicStatic22 +
=22, -
false22. 3
;223 4
public33 

static33 
bool33 
goodG2BPublicStatic33 *
=33+ ,
false33- 2
;332 3
public55 

override55 
void55 
Good55 
(55 
HttpRequest55 )
req55* -
,55- .
HttpResponse55/ ;
resp55< @
)55@ A
{66 
GoodB2G177 
(77 
req77 
,77 
resp77 
)77 
;77 
GoodB2G288 
(88 
req88 
,88 
resp88 
)88 
;88 
GoodG2B99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
private== 
void== 
GoodB2G1== 
(== 
HttpRequest== %
req==& )
,==) *
HttpResponse==+ 7
resp==8 <
)==< =
{>> 
string?? 
data?? 
=?? 
null?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	 
goodB2G1PublicStaticHH 
=HH 
falseHH $
;HH$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22bII I
.III J
GoodB2G1SinkIIJ V
(IIV W
dataIIW [
,II\ ]
reqII^ a
,IIa b
respIIc g
)IIg h
;IIh i
}JJ 
privateMM 
voidMM 
GoodB2G2MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
=OO 
nullOO 
;OO 
dataPP 
=PP 
$strPP 
;PP 
{RR 	
ifSS 
(SS 
reqSS 
.SS 
QueryStringSS 
[SS  
$strSS  $
]SS$ %
!=SS& (
nullSS) -
)SS- .
{TT 
dataUU 
=UU 
reqUU 
.UU 
QueryStringUU &
[UU& '
$strUU' +
]UU+ ,
;UU, -
}VV 
}WW 	 
goodB2G2PublicStaticXX 
=XX 
trueXX #
;XX# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22bYY I
.YYI J
GoodB2G2SinkYYJ V
(YYV W
dataYYW [
,YY\ ]
reqYY^ a
,YYa b
respYYc g
)YYg h
;YYh i
}ZZ 
private]] 
void]] 
GoodG2B]] 
(]] 
HttpRequest]] $
req]]% (
,]]( )
HttpResponse]]* 6
resp]]7 ;
)]]; <
{^^ 
string__ 
data__ 
=__ 
null__ 
;__ 
dataaa 
=aa 
$straa 
;aa 
goodG2BPublicStaticbb 
=bb 
truebb "
;bb" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22bcc I
.ccI J
GoodG2BSinkccJ U
(ccU V
dataccV Z
,cc[ \
reqcc] `
,cc` a
respccb f
)ccf g
;ccg h
}dd 
}ff 
}gg $
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22a M
.M N
badPublicStaticN ]
)] ^
{   	
if"" 
("" 
data"" 
!="" 
null"" 
)"" 
{## 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22a44 M
.44M N 
goodB2G1PublicStatic44N b
)44b c
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
$str??- /
,??/ 0
Encoding??1 9
.??9 :
UTF8??: >
)??> ?
;??? @
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22aHH M
.HHM N 
goodB2G2PublicStaticHHN b
)HHb c
{II 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
$strMM- /
,MM/ 0
EncodingMM1 9
.MM9 :
UTF8MM: >
)MM> ?
;MM? @
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_22a\\ M
.\\M N
goodG2BPublicStatic\\N a
)\\a b
{]] 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm ½%
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_31 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
dataCopy   
;   
{!! 	
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
dataCopy++ 
=++ 
data++ 
;++ 
},, 	
{-- 	
string.. 
data.. 
=.. 
dataCopy.. "
;.." #
if00 
(00 
data00 
!=00 
null00 
)00 
{11 
resp22 
.22 
	AddHeader22 
(22 
$str22 )
,22) *
$str22+ >
+22? @
data22A E
)22E F
;22F G
}33 
}44 	
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
void?? 
GoodG2B?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataCopyAA 
;AA 
{BB 	
stringCC 
dataCC 
;CC 
dataEE 
=EE 
$strEE 
;EE 
dataCopyFF 
=FF 
dataFF 
;FF 
}GG 	
{HH 	
stringII 
dataII 
=II 
dataCopyII "
;II" #
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
respMM 
.MM 
	AddHeaderMM 
(MM 
$strMM )
,MM) *
$strMM+ >
+MM? @
dataMMA E
)MME F
;MMF G
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodB2GSS 
(SS 
HttpRequestSS $
reqSS% (
,SS( )
HttpResponseSS* 6
respSS7 ;
)SS; <
{TT 
stringUU 
dataCopyUU 
;UU 
{VV 	
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 
if[[ 
([[ 
req[[ 
.[[ 
QueryString[[ #
[[[# $
$str[[$ (
][[( )
!=[[* ,
null[[- 1
)[[1 2
{\\ 
data]] 
=]] 
req]] 
.]] 
QueryString]] *
[]]* +
$str]]+ /
]]]/ 0
;]]0 1
}^^ 
}__ 
dataCopy`` 
=`` 
data`` 
;`` 
}aa 	
{bb 	
stringcc 
datacc 
=cc 
dataCopycc "
;cc" #
ifee 
(ee 
dataee 
!=ee 
nullee 
)ee 
{ff 
datagg 
=gg 
HttpUtilitygg "
.gg" #
	UrlEncodegg# ,
(gg, -
$strgg- /
,gg/ 0
Encodinggg1 9
.gg9 :
UTF8gg: >
)gg> ?
;gg? @
resphh 
.hh 
	AddHeaderhh 
(hh 
$strhh )
,hh) *
$strhh+ >
+hh? @
datahhA E
)hhE F
;hhF G
}ii 
}jj 	
}kk 
}mm 
}nn ç)
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_41 F
:G H
AbstractTestCaseWebI \
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
data** 
=** 
$str** 
;** 
{,, 	
if-- 
(-- 
req-- 
.-- 
QueryString-- 
[--  
$str--  $
]--$ %
!=--& (
null--) -
)--- .
{.. 
data// 
=// 
req// 
.// 
QueryString// &
[//& '
$str//' +
]//+ ,
;//, -
}00 
}11 	
BadSink22 
(22 
data22 
,22 
req22 
,22 
resp22  
)22! "
;22" #
}33 
public66 

override66 
void66 
Good66 
(66 
HttpRequest66 )
req66* -
,66- .
HttpResponse66/ ;
resp66< @
)66@ A
{77 
GoodG2B88 
(88 
req88 
,88 
resp88 
)88 
;88 
GoodB2G99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
private<< 
static<< 
void<< 
GoodG2BSink<< #
(<<# $
string<<$ *
data<<+ /
,<<0 1
HttpRequest<<2 =
req<<> A
,<<A B
HttpResponse<<C O
resp<<P T
)<<T U
{== 
if?? 

(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 	
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataJJ 
=JJ 
$strJJ 
;JJ 
GoodG2BSinkKK 
(KK 
dataKK 
,KK 
reqKK 
,KK 
respKK  $
)KK% &
;KK& '
}LL 
privateNN 
staticNN 
voidNN 
GoodB2GSinkNN #
(NN# $
stringNN$ *
dataNN+ /
,NN0 1
HttpRequestNN2 =
reqNN> A
,NNA B
HttpResponseNNC O
respNNP T
)NNT U
{OO 
ifQQ 

(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
dataSS 
=SS 
HttpUtilitySS 
.SS 
	UrlEncodeSS (
(SS( )
$strSS) +
,SS+ ,
EncodingSS- 5
.SS5 6
UTF8SS6 :
)SS: ;
;SS; <
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT %
,TT% &
$strTT' :
+TT; <
dataTT= A
)TTA B
;TTB C
}UU 	
}VV 
privateYY 
staticYY 
voidYY 
GoodB2GYY 
(YY  
HttpRequestYY  +
reqYY, /
,YY/ 0
HttpResponseYY1 =
respYY> B
)YYB C
{ZZ 
string[[ 
data[[ 
;[[ 
data\\ 
=\\ 
$str\\ 
;\\ 
{^^ 	
if__ 
(__ 
req__ 
.__ 
QueryString__ 
[__  
$str__  $
]__$ %
!=__& (
null__) -
)__- .
{`` 
dataaa 
=aa 
reqaa 
.aa 
QueryStringaa &
[aa& '
$straa' +
]aa+ ,
;aa, -
}bb 
}cc 	
GoodB2GSinkdd 
(dd 
datadd 
,dd 
reqdd 
,dd 
respdd  $
)dd% &
;dd& '
}ee 
}gg 
}hh µ*
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_42 F
:G H
AbstractTestCaseWebI \
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
return)) 
data)) 
;)) 
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
=.. 
	BadSource.. 
(..  
req..  #
,..# $
resp..% )
)..) *
;..* +
if00 

(00 
data00 
!=00 
null00 
)00 
{11 	
resp22 
.22 
	AddHeader22 
(22 
$str22 %
,22% &
$str22' :
+22; <
data22= A
)22A B
;22B C
}33 	
}44 
private88 
static88 
string88 
GoodG2BSource88 '
(88' (
HttpRequest88( 3
req884 7
,887 8
HttpResponse889 E
resp88F J
)88J K
{99 
string:: 
data:: 
;:: 
data<< 
=<< 
$str<< 
;<< 
return== 
data== 
;== 
}>> 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
=BB 
GoodG2BSourceBB #
(BB# $
reqBB$ '
,BB' (
respBB) -
)BB- .
;BB. /
ifDD 

(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 	
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF %
,FF% &
$strFF' :
+FF; <
dataFF= A
)FFA B
;FFB C
}GG 	
}HH 
privateKK 
staticKK 
stringKK 
GoodB2GSourceKK '
(KK' (
HttpRequestKK( 3
reqKK4 7
,KK7 8
HttpResponseKK9 E
respKKF J
)KKJ K
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{PP 	
ifQQ 
(QQ 
reqQQ 
.QQ 
QueryStringQQ 
[QQ  
$strQQ  $
]QQ$ %
!=QQ& (
nullQQ) -
)QQ- .
{RR 
dataSS 
=SS 
reqSS 
.SS 
QueryStringSS &
[SS& '
$strSS' +
]SS+ ,
;SS, -
}TT 
}UU 	
returnVV 
dataVV 
;VV 
}WW 
privateYY 
staticYY 
voidYY 
GoodB2GYY 
(YY  
HttpRequestYY  +
reqYY, /
,YY/ 0
HttpResponseYY1 =
respYY> B
)YYB C
{ZZ 
string[[ 
data[[ 
=[[ 
GoodB2GSource[[ #
([[# $
req[[$ '
,[[' (
resp[[) -
)[[- .
;[[. /
if]] 

(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 	
data__ 
=__ 
HttpUtility__ 
.__ 
	UrlEncode__ (
(__( )
$str__) +
,__+ ,
Encoding__- 5
.__5 6
UTF8__6 :
)__: ;
;__; <
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` %
,``% &
$str``' :
+``; <
data``= A
)``A B
;``B C
}aa 	
}bb 
publicdd 

overridedd 
voiddd 
Gooddd 
(dd 
HttpRequestdd )
reqdd* -
,dd- .
HttpResponsedd/ ;
respdd< @
)dd@ A
{ee 
GoodG2Bff 
(ff 
reqff 
,ff 
respff 
)ff 
;ff 
GoodB2Ggg 
(gg 
reqgg 
,gg 
respgg 
)gg 
;gg 
}hh 
}jj 
}kk Ú,
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_45 F
:G H
AbstractTestCaseWebI \
{ 
private 
string 
dataBad 
; 
private 
string 
dataGoodG2B 
; 
private   
string   
dataGoodB2G   
;   
private"" 
void"" 
BadSink"" 
("" 
HttpRequest"" $
req""% (
,""( )
HttpResponse""* 6
resp""7 ;
)""; <
{## 
string$$ 
data$$ 
=$$ 
dataBad$$ 
;$$ 
if&& 

(&& 
data&& 
!=&& 
null&& 
)&& 
{'' 	
resp(( 
.(( 
	AddHeader(( 
((( 
$str(( %
,((% &
$str((' :
+((; <
data((= A
)((A B
;((B C
})) 	
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
data// 
=// 
$str// 
;// 
{11 	
if22 
(22 
req22 
.22 
QueryString22 
[22  
$str22  $
]22$ %
!=22& (
null22) -
)22- .
{33 
data44 
=44 
req44 
.44 
QueryString44 &
[44& '
$str44' +
]44+ ,
;44, -
}55 
}66 	
dataBad77 
=77 
data77 
;77 
BadSink88 
(88 
req88 
,88 
resp88 
)88 
;88 
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateBB 
voidBB 
GoodG2BSinkBB 
(BB 
HttpRequestBB (
reqBB) ,
,BB, -
HttpResponseBB. :
respBB; ?
)BB? @
{CC 
stringDD 
dataDD 
=DD 
dataGoodG2BDD !
;DD! "
ifFF 

(FF 
dataFF 
!=FF 
nullFF 
)FF 
{GG 	
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH %
,HH% &
$strHH' :
+HH; <
dataHH= A
)HHA B
;HHB C
}II 	
}JJ 
privateMM 
voidMM 
GoodG2BMM 
(MM 
HttpRequestMM $
reqMM% (
,MM( )
HttpResponseMM* 6
respMM7 ;
)MM; <
{NN 
stringOO 
dataOO 
;OO 
dataQQ 
=QQ 
$strQQ 
;QQ 
dataGoodG2BRR 
=RR 
dataRR 
;RR 
GoodG2BSinkSS 
(SS 
reqSS 
,SS 
respSS 
)SS 
;SS 
}TT 
privateVV 
voidVV 
GoodB2GSinkVV 
(VV 
HttpRequestVV (
reqVV) ,
,VV, -
HttpResponseVV. :
respVV; ?
)VV? @
{WW 
stringXX 
dataXX 
=XX 
dataGoodB2GXX !
;XX! "
ifZZ 

(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 	
data\\ 
=\\ 
HttpUtility\\ 
.\\ 
	UrlEncode\\ (
(\\( )
$str\\) +
,\\+ ,
Encoding\\- 5
.\\5 6
UTF8\\6 :
)\\: ;
;\\; <
resp]] 
.]] 
	AddHeader]] 
(]] 
$str]] %
,]]% &
$str]]' :
+]]; <
data]]= A
)]]A B
;]]B C
}^^ 	
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
dataee 
=ee 
$stree 
;ee 
{gg 	
ifhh 
(hh 
reqhh 
.hh 
QueryStringhh 
[hh  
$strhh  $
]hh$ %
!=hh& (
nullhh) -
)hh- .
{ii 
datajj 
=jj 
reqjj 
.jj 
QueryStringjj &
[jj& '
$strjj' +
]jj+ ,
;jj, -
}kk 
}ll 	
dataGoodB2Gmm 
=mm 
datamm 
;mm 
GoodB2GSinknn 
(nn 
reqnn 
,nn 
respnn 
)nn 
;nn 
}oo 
}qq 
}rr Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_51a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_51b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))c d
;))d e
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_51b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99g h
;99h i
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_51bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHg h
;HHh i
}II 
}KK 
}LL Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_51b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_52c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53d I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53d'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53d-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_53d G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54d I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54d'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54d-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54d G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54e I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54e'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54e-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_54e G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ê
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_61a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_61b W
.W X
	BadSourceX a
(a b
reqb e
,e f
respg k
)k l
;l m
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_61b11 W
.11W X
GoodG2BSource11X e
(11e f
req11f i
,11i j
resp11k o
)11o p
;11p q
if33 

(33 
data33 
!=33 
null33 
)33 
{44 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_61b<< W
.<<W X
GoodB2GSource<<X e
(<<e f
req<<f i
,<<i j
resp<<k o
)<<o p
;<<p q
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
$str@@) +
,@@+ ,
Encoding@@- 5
.@@5 6
UTF8@@6 :
)@@: ;
;@@; <
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF Ä
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_61b G
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
return)) 
data)) 
;)) 
}** 
public// 

static// 
string// 
GoodG2BSource// &
(//& '
HttpRequest//' 2
req//3 6
,//6 7
HttpResponse//8 D
resp//E I
)//I J
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 
return44 
data44 
;44 
}55 
public88 

static88 
string88 
GoodB2GSource88 &
(88& '
HttpRequest88' 2
req883 6
,886 7
HttpResponse888 D
resp88E I
)88I J
{99 
string:: 
data:: 
;:: 
data;; 
=;; 
$str;; 
;;; 
{== 	
if>> 
(>> 
req>> 
.>> 
QueryString>> 
[>>  
$str>>  $
]>>$ %
!=>>& (
null>>) -
)>>- .
{?? 
data@@ 
=@@ 
req@@ 
.@@ 
QueryString@@ &
[@@& '
$str@@' +
]@@+ ,
;@@, -
}AA 
}BB 	
returnCC 
dataCC 
;CC 
}DD 
}FF 
}GG ¡#
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_66a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
string)) 
[)) 
])) 
	dataArray)) 
=)) 
new))  
string))! '
[))' (
$num))( )
]))) *
;))* +
	dataArray** 
[** 
$num** 
]** 
=** 
data** 
;** M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_66b++ I
.++I J
BadSink++J Q
(++Q R
	dataArray++R [
,++\ ]
req++^ a
,++a b
resp++c g
)++h i
;++i j
},, 
public// 

override// 
void// 
Good// 
(// 
HttpRequest// )
req//* -
,//- .
HttpResponse/// ;
resp//< @
)//@ A
{00 
GoodG2B11 
(11 
req11 
,11 
resp11 
)11 
;11 
GoodB2G22 
(22 
req22 
,22 
resp22 
)22 
;22 
}33 
private66 
static66 
void66 
GoodG2B66 
(66  
HttpRequest66  +
req66, /
,66/ 0
HttpResponse661 =
resp66> B
)66B C
{77 
string88 
data88 
;88 
data:: 
=:: 
$str:: 
;:: 
string;; 
[;; 
];; 
	dataArray;; 
=;; 
new;;  
string;;! '
[;;' (
$num;;( )
];;) *
;;;* +
	dataArray<< 
[<< 
$num<< 
]<< 
=<< 
data<< 
;<< M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_66b== I
.==I J
GoodG2BSink==J U
(==U V
	dataArray==V _
,==` a
req==b e
,==e f
resp==g k
)==l m
;==m n
}>> 
privateAA 
staticAA 
voidAA 
GoodB2GAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
stringCC 
dataCC 
;CC 
dataDD 
=DD 
$strDD 
;DD 
{FF 	
ifGG 
(GG 
reqGG 
.GG 
QueryStringGG 
[GG  
$strGG  $
]GG$ %
!=GG& (
nullGG) -
)GG- .
{HH 
dataII 
=II 
reqII 
.II 
QueryStringII &
[II& '
$strII' +
]II+ ,
;II, -
}JJ 
}KK 	
stringLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
stringLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_66bNN I
.NNI J
GoodB2GSinkNNJ U
(NNU V
	dataArrayNNV _
,NN` a
reqNNb e
,NNe f
respNNg k
)NNl m
;NNm n
}OO 
}QQ 
}RR Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_66b G
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ß#
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

class 
	Container 
{ 
public   
string   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data&& 
=&& 
$str&& 
;&& 
{(( 	
if)) 
()) 
req)) 
.)) 
QueryString)) 
[))  
$str))  $
]))$ %
!=))& (
null))) -
)))- .
{** 
data++ 
=++ 
req++ 
.++ 
QueryString++ &
[++& '
$str++' +
]+++ ,
;++, -
},, 
}-- 	
	Container.. 
dataContainer.. 
=..  !
new.." %
	Container..& /
(../ 0
)..0 1
;..1 2
dataContainer// 
.// 
containerOne// "
=//# $
data//% )
;//) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67b00 I
.00I J
BadSink00J Q
(00Q R
dataContainer00R _
,00` a
req00b e
,00e f
resp00g k
)00l m
;00m n
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? 
	Container@@ 
dataContainer@@ 
=@@  !
new@@" %
	Container@@& /
(@@/ 0
)@@0 1
;@@1 2
dataContainerAA 
.AA 
containerOneAA "
=AA# $
dataAA% )
;AA) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataContainerBBV c
,BBd e
reqBBf i
,BBi j
respBBk o
)BBp q
;BBq r
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67bSS I
.SSI J
GoodB2GSinkSSJ U
(SSU V
dataContainerSSV c
,SSd e
reqSSf i
,SSi j
respSSk o
)SSp q
;SSq r
}TT 
}VV 
}WW ¾
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67b G
{ 
public 

static 
void 
BadSink 
( M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67a `
.` a
	Containera j
dataContainerk x
,y z
HttpRequest	{ 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67a**# d
.**d e
	Container**e n
dataContainer**o |
,**} ~
HttpRequest	** 
req
** 
,
** 
HttpResponse
** 
resp
** ¡
)
**¡ ¢
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_67a55# d
.55d e
	Container55e n
dataContainer55o |
,55} ~
HttpRequest	55 
req
55 
,
55 
HttpResponse
55 
resp
55 ¡
)
55¡ ¢
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA Ô
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

static 
string 
data 
; 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68b** I
.**I J
BadSink**J Q
(**Q R
req**R U
,**U V
resp**W [
)**[ \
;**\ ]
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
HttpRequest55  +
req55, /
,55/ 0
HttpResponse551 =
resp55> B
)55B C
{66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68b99 I
.99I J
GoodG2BSink99J U
(99U V
req99V Y
,99Y Z
resp99[ _
)99_ `
;99` a
}:: 
private== 
static== 
void== 
GoodB2G== 
(==  
HttpRequest==  +
req==, /
,==/ 0
HttpResponse==1 =
resp==> B
)==B C
{>> 
data?? 
=?? 
$str?? 
;?? 
{AA 	
ifBB 
(BB 
reqBB 
.BB 
QueryStringBB 
[BB  
$strBB  $
]BB$ %
!=BB& (
nullBB) -
)BB- .
{CC 
dataDD 
=DD 
reqDD 
.DD 
QueryStringDD &
[DD& '
$strDD' +
]DD+ ,
;DD, -
}EE 
}FF 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68bGG I
.GGI J
GoodB2GSinkGGJ U
(GGU V
reqGGV Y
,GGY Z
respGG[ _
)GG_ `
;GG` a
}HH 
}JJ 
}KK Ä
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68b G
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68a W
.W X
dataX \
;\ ]
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68a,, W
.,,W X
data,,X \
;,,\ ]
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_68a77 W
.77W X
data77X \
;77\ ]
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_71a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_71b)) I
.))I J
BadSink))J Q
())Q R
())R S
Object))S Y
)))Y Z
data))Z ^
,))_ `
req))a d
,))d e
resp))f j
)))k l
;))l m
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
static44 
void44 
GoodG2B44 
(44  
HttpRequest44  +
req44, /
,44/ 0
HttpResponse441 =
resp44> B
)44B C
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_71b99 I
.99I J
GoodG2BSink99J U
(99U V
(99V W
Object99W ]
)99] ^
data99^ b
,99c d
req99e h
,99h i
resp99j n
)99o p
;99p q
}:: 
private== 
static== 
void== 
GoodB2G== 
(==  
HttpRequest==  +
req==, /
,==/ 0
HttpResponse==1 =
resp==> B
)==B C
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_71bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
(HHV W
ObjectHHW ]
)HH] ^
dataHH^ b
,HHc d
reqHHe h
,HHh i
respHHj n
)HHo p
;HHp q
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_71b G
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ÿ*
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_72a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	
	Hashtable** 
dataHashtable** 
=**  !
new**" %
	Hashtable**& /
(**/ 0
$num**0 1
)**1 2
;**2 3
dataHashtable++ 
.++ 
Add++ 
(++ 
$num++ 
,++ 
data++ !
)++! "
;++" #
dataHashtable,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, !
),,! "
;,," #
dataHashtable-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- !
)--! "
;--" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_72b.. I
...I J
BadSink..J Q
(..Q R
dataHashtable..R _
,..` a
req..b e
,..e f
resp..g k
)..l m
;..m n
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 
	Hashtable>> 
dataHashtable>> 
=>>  !
new>>" %
	Hashtable>>& /
(>>/ 0
$num>>0 1
)>>1 2
;>>2 3
dataHashtable?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? !
)??! "
;??" #
dataHashtable@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ !
)@@! "
;@@" #
dataHashtableAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA !
)AA! "
;AA" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_72bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataHashtableBBV c
,BBd e
reqBBf i
,BBi j
respBBk o
)BBp q
;BBq r
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
	HashtableQQ 
dataHashtableQQ 
=QQ  !
newQQ" %
	HashtableQQ& /
(QQ/ 0
$numQQ0 1
)QQ1 2
;QQ2 3
dataHashtableRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR !
)RR! "
;RR" #
dataHashtableSS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS !
)SS! "
;SS" #
dataHashtableTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT !
)TT! "
;TT" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_72bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataHashtableUUV c
,UUd e
reqUUf i
,UUi j
respUUk o
)UUp q
;UUq r
}VV 
}XX 
}YY ®
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_72b G
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB +
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_73a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	

LinkedList** 
<** 
string** 
>** 
dataLinkedList** )
=*** +
new**, /

LinkedList**0 :
<**: ;
string**; A
>**A B
(**B C
)**C D
;**D E
dataLinkedList++ 
.++ 
AddLast++ 
(++ 
data++ #
)++# $
;++$ %
dataLinkedList,, 
.,, 
AddLast,, 
(,, 
data,, #
),,# $
;,,$ %
dataLinkedList-- 
.-- 
AddLast-- 
(-- 
data-- #
)--# $
;--$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_73b.. I
...I J
BadSink..J Q
(..Q R
dataLinkedList..R `
,..a b
req..c f
,..f g
resp..h l
)..m n
;..n o
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 

LinkedList>> 
<>> 
string>> 
>>> 
dataLinkedList>> )
=>>* +
new>>, /

LinkedList>>0 :
<>>: ;
string>>; A
>>>A B
(>>B C
)>>C D
;>>D E
dataLinkedList?? 
.?? 
AddLast?? 
(?? 
data?? #
)??# $
;??$ %
dataLinkedList@@ 
.@@ 
AddLast@@ 
(@@ 
data@@ #
)@@# $
;@@$ %
dataLinkedListAA 
.AA 
AddLastAA 
(AA 
dataAA #
)AA# $
;AA$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_73bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataLinkedListBBV d
,BBe f
reqBBg j
,BBj k
respBBl p
)BBq r
;BBr s
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	

LinkedListQQ 
<QQ 
stringQQ 
>QQ 
dataLinkedListQQ )
=QQ* +
newQQ, /

LinkedListQQ0 :
<QQ: ;
stringQQ; A
>QQA B
(QQB C
)QQC D
;QQD E
dataLinkedListRR 
.RR 
AddLastRR 
(RR 
dataRR #
)RR# $
;RR$ %
dataLinkedListSS 
.SS 
AddLastSS 
(SS 
dataSS #
)SS# $
;SS$ %
dataLinkedListTT 
.TT 
AddLastTT 
(TT 
dataTT #
)TT# $
;TT$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_73bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataLinkedListUUV d
,UUe f
reqUUg j
,UUj k
respUUl p
)UUq r
;UUr s
}VV 
}XX 
}YY ð
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_73b G
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB Ê.
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_74a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	

Dictionary** 
<** 
int** 
,** 
string** 
>** 
dataDictionary** -
=**. /
new**0 3

Dictionary**4 >
<**> ?
int**? B
,**B C
string**C I
>**I J
(**J K
)**K L
;**L M
dataDictionary++ 
.++ 
Add++ 
(++ 
$num++ 
,++ 
data++ "
)++" #
;++# $
dataDictionary,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, "
),," #
;,,# $
dataDictionary-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- "
)--" #
;--# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_74b.. I
...I J
BadSink..J Q
(..Q R
dataDictionary..R `
,..a b
req..c f
,..f g
resp..h l
)..m n
;..n o
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 

Dictionary>> 
<>> 
int>> 
,>> 
string>> 
>>> 
dataDictionary>> -
=>>. /
new>>0 3

Dictionary>>4 >
<>>> ?
int>>? B
,>>B C
string>>C I
>>>I J
(>>J K
)>>K L
;>>L M
dataDictionary?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? "
)??" #
;??# $
dataDictionary@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ "
)@@" #
;@@# $
dataDictionaryAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA "
)AA" #
;AA# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_74bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataDictionaryBBV d
,BBe f
reqBBg j
,BBj k
respBBl p
)BBq r
;BBr s
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	

DictionaryQQ 
<QQ 
intQQ 
,QQ 
stringQQ 
>QQ 
dataDictionaryQQ -
=QQ. /
newQQ0 3

DictionaryQQ4 >
<QQ> ?
intQQ? B
,QQB C
stringQQC I
>QQI J
(QQJ K
)QQK L
;QQL M
dataDictionaryRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR "
)RR" #
;RR# $
dataDictionarySS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS "
)SS" #
;SS# $
dataDictionaryTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT "
)TT" #
;TT# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_74bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataDictionaryUUV d
,UUe f
reqUUg j
,UUj k
respUUl p
)UUq r
;UUr s
}VV 
}XX 
}YY 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_74b G
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB Æ<
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_75a G
:H I
AbstractTestCaseWebJ ]
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	
byte-- 
[-- 
]-- 
dataSerialized-- 
=-- 
null--  $
;--$ %
try.. 
{// 	
BinaryFormatter00 
bf00 
=00  
new00! $
BinaryFormatter00% 4
(004 5
)005 6
;006 7
using11 
(11 
var11 
ms11 
=11 
new11 
MemoryStream11  ,
(11, -
)11- .
)11. /
{22 
bf33 
.33 
	Serialize33 
(33 
ms33 
,33  
data33! %
)33% &
;33& '
dataSerialized44 
=44  
ms44! #
.44# $
ToArray44$ +
(44+ ,
)44, -
;44- .
}55 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_75b66 M
.66M N
BadSink66N U
(66U V
dataSerialized66V d
,66e f
req66g j
,66j k
resp66l p
)66q r
;66r s
}77 	
catch88 
(88 "
SerializationException88 %
exceptSerialize88& 5
)885 6
{99 	
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: 
.:: 
LogLevel:: '
.::' (
Warn::( ,
,::, -
$str::. X
,::X Y
exceptSerialize::Z i
)::i j
;::j k
};; 	
}<< 
public?? 

override?? 
void?? 
Good?? 
(?? 
HttpRequest?? )
req??* -
,??- .
HttpResponse??/ ;
resp??< @
)??@ A
{@@ 
GoodG2BAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
GoodB2GBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
byteRR 
[RR 
]RR 
dataSerializedRR 
=RR 
nullRR  $
;RR$ %
trySS 
{TT 	
BinaryFormatterUU 
bfUU 
=UU  
newUU! $
BinaryFormatterUU% 4
(UU4 5
)UU5 6
;UU6 7
usingVV 
(VV 
varVV 
msVV 
=VV 
newVV 
MemoryStreamVV  ,
(VV, -
)VV- .
)VV. /
{WW 
bfXX 
.XX 
	SerializeXX 
(XX 
msXX 
,XX  
dataXX! %
)XX% &
;XX& '
dataSerializedYY 
=YY  
msYY! #
.YY# $
ToArrayYY$ +
(YY+ ,
)YY, -
;YY- .
}ZZ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_75b[[ M
.[[M N
GoodG2BSink[[N Y
([[Y Z
dataSerialized[[Z h
,[[i j
req[[k n
,[[n o
resp[[p t
)[[u v
;[[v w
}\\ 	
catch]] 
(]] "
SerializationException]] %
exceptSerialize]]& 5
)]]5 6
{^^ 	
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ 
.__ 
LogLevel__ '
.__' (
Warn__( ,
,__, -
$str__. X
,__X Y
exceptSerialize__Z i
)__i j
;__j k
}`` 	
}aa 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
HttpRequestdd  +
reqdd, /
,dd/ 0
HttpResponsedd1 =
respdd> B
)ddB C
{ee 
stringff 
dataff 
;ff 
datagg 
=gg 
$strgg 
;gg 
{ii 	
ifjj 
(jj 
reqjj 
.jj 
QueryStringjj 
[jj  
$strjj  $
]jj$ %
!=jj& (
nulljj) -
)jj- .
{kk 
datall 
=ll 
reqll 
.ll 
QueryStringll &
[ll& '
$strll' +
]ll+ ,
;ll, -
}mm 
}nn 	
bytepp 
[pp 
]pp 
dataSerializedpp 
=pp 
nullpp  $
;pp$ %
tryqq 
{rr 	
BinaryFormatterss 
bfss 
=ss  
newss! $
BinaryFormatterss% 4
(ss4 5
)ss5 6
;ss6 7
usingtt 
(tt 
vartt 
mstt 
=tt 
newtt 
MemoryStreamtt  ,
(tt, -
)tt- .
)tt. /
{uu 
bfvv 
.vv 
	Serializevv 
(vv 
msvv 
,vv  
datavv! %
)vv% &
;vv& '
dataSerializedww 
=ww  
msww! #
.ww# $
ToArrayww$ +
(ww+ ,
)ww, -
;ww- .
}xx M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_75byy M
.yyM N
GoodB2GSinkyyN Y
(yyY Z
dataSerializedyyZ h
,yyi j
reqyyk n
,yyn o
respyyp t
)yyu v
;yyv w
}zz 	
catch{{ 
({{ "
SerializationException{{ %
exceptSerialize{{& 5
){{5 6
{|| 	
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} 
.}} 
LogLevel}} '
.}}' (
Warn}}( ,
,}}, -
$str}}. X
,}}X Y
exceptSerialize}}Z i
)}}i j
;}}j k
}~~ 	
} 
} 
} °8
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_75b G
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if-- 
(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
$strcc- /
,cc/ 0
Encodingcc1 9
.cc9 :
UTF8cc: >
)cc> ?
;cc? @
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn Ü 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_base)) M

baseObject))N X
=))Y Z
new))[ ^Q
DCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_bad	))_ £
(
))£ ¤
)
))¤ ¥
;
))¥ ¦

baseObject** 
.** 
Action** 
(** 
data** 
,**  
req**! $
,**$ %
resp**& *
)*** +
;**+ ,
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
void55 
GoodG2B55 
(55 
HttpRequest55 $
req55% (
,55( )
HttpResponse55* 6
resp557 ;
)55; <
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_base:: M

baseObject::N X
=::Y Z
new::[ ^U
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_goodG2B	::_ §
(
::§ ¨
)
::¨ ©
;
::© ª

baseObject;; 
.;; 
Action;; 
(;; 
data;; 
,;;  
req;;! $
,;;$ %
resp;;& *
);;* +
;;;+ ,
}<< 
private?? 
void?? 
GoodB2G?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataBB 
=BB 
$strBB 
;BB 
{DD 	
ifEE 
(EE 
reqEE 
.EE 
QueryStringEE 
[EE  
$strEE  $
]EE$ %
!=EE& (
nullEE) -
)EE- .
{FF 
dataGG 
=GG 
reqGG 
.GG 
QueryStringGG &
[GG& '
$strGG' +
]GG+ ,
;GG, -
}HH 
}II 	Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_baseJJ M

baseObjectJJN X
=JJY Z
newJJ[ ^U
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_goodB2G	JJ_ §
(
JJ§ ¨
)
JJ¨ ©
;
JJ© ª

baseObjectKK 
.KK 
ActionKK 
(KK 
dataKK 
,KK  
reqKK! $
,KK$ %
respKK& *
)KK* +
;KK+ ,
}LL 
}NN 
}OO 	
ÅC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class P
DCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_bad J
:K LR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_base	M 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& õ
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_base T
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} õ

ÉC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class T
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_goodB2G N
:O PR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_base	Q 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
$str##) +
,##+ ,
Encoding##- 5
.##5 6
UTF8##6 :
)##: ;
;##; <
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( 	
ÉC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class T
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_goodG2B N
:O PR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_addHeader_81_base	Q 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' þ
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_01 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
if)) 

()) 
data)) 
!=)) 
null)) 
))) 
{** 	
resp,, 
.,, 
	AddHeader,, 
(,, 
$str,, %
,,,% &
$str,,' :
+,,; <
data,,= A
),,A B
;,,B C
}-- 	
}.. 
public11 

override11 
void11 
Good11 
(11 
HttpRequest11 )
req11* -
,11- .
HttpResponse11/ ;
resp11< @
)11@ A
{22 
GoodG2B33 
(33 
req33 
,33 
resp33 
)33 
;33 
GoodB2G44 
(44 
req44 
,44 
resp44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
HttpRequest88 $
req88% (
,88( )
HttpResponse88* 6
resp887 ;
)88; <
{99 
string:: 
data:: 
;:: 
data<< 
=<< 
$str<< 
;<< 
if== 

(== 
data== 
!=== 
null== 
)== 
{>> 	
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ %
,@@% &
$str@@' :
+@@; <
data@@= A
)@@A B
;@@B C
}AA 	
}BB 
privateEE 
voidEE 
GoodB2GEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataGG 
;GG 
dataHH 
=HH 
$strHH 
;HH 
{JJ 	
ifKK 
(KK 
reqKK 
.KK 
QueryStringKK 
[KK  
$strKK  $
]KK$ %
!=KK& (
nullKK) -
)KK- .
{LL 
dataMM 
=MM 
reqMM 
.MM 
QueryStringMM &
[MM& '
$strMM' +
]MM+ ,
;MM, -
}NN 
}OO 	
ifPP 

(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 	
dataSS 
=SS 
HttpUtilitySS 
.SS 
	UrlEncodeSS (
(SS( )
dataSS) -
,SS- .
EncodingSS/ 7
.SS7 8
UTF8SS8 <
)SS< =
;SS= >
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT %
,TT% &
$strTT' :
+TT; <
dataTT= A
)TTA B
;TTB C
}UU 	
}VV 
}XX 
}YY @
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_02 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
true22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
falseAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
trueLL 
)LL 
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
trueZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
trueee 
)ee 
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
truess 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
false
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
true
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
true
©© 
)
©© 
{
ªª 	
if
«« 
(
«« 
data
«« 
!=
«« 
null
«« 
)
«« 
{
¬¬ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
data
®®- 1
,
®®1 2
Encoding
®®3 ;
.
®®; <
UTF8
®®< @
)
®®@ A
;
®®A B
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ äB
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_03 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
$num22 
==22 
$num22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
$numAA 
!=AA 
$numAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
$numLL 
==LL 
$numLL 
)LL 
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
$numZZ 
==ZZ 
$numZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
$numee 
==ee 
$numee 
)ee 
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
$numss 
==ss 
$numss 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
$num
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
$num
©© 
==
©© 
$num
©© 
)
©© 
{
ªª 	
if
«« 
(
«« 
data
«« 
!=
«« 
null
«« 
)
«« 
{
¬¬ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
data
®®- 1
,
®®1 2
Encoding
®®3 ;
.
®®; <
UTF8
®®< @
)
®®@ A
;
®®A B
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ ÆC
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_04 F
:G H
AbstractTestCaseWebI \
{ 
private"" 
const"" 
bool"" 
PRIVATE_CONST_TRUE"" )
=""* +
true"", 0
;""0 1
private## 
const## 
bool## 
PRIVATE_CONST_FALSE## *
=##+ ,
false##- 2
;##2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{,, 
if-- 
(-- 
req-- 
.-- 
QueryString-- #
[--# $
$str--$ (
]--( )
!=--* ,
null--- 1
)--1 2
{.. 
data// 
=// 
req// 
.// 
QueryString// *
[//* +
$str//+ /
]/// 0
;//0 1
}00 
}11 
}22 	
else33 
{44 	
data77 
=77 
null77 
;77 
}88 	
if99 

(99 
PRIVATE_CONST_TRUE99 
)99 
{:: 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp>> 
.>> 
	AddHeader>> 
(>> 
$str>> )
,>>) *
$str>>+ >
+>>? @
data>>A E
)>>E F
;>>F G
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
PRIVATE_CONST_FALSEHH 
)HH  
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
PRIVATE_CONST_TRUESS 
)SS 
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respXX 
.XX 
	AddHeaderXX 
(XX 
$strXX )
,XX) *
$strXX+ >
+XX? @
dataXXA E
)XXE F
;XXF G
}YY 
}ZZ 	
}[[ 
private^^ 
void^^ 
GoodG2B2^^ 
(^^ 
HttpRequest^^ %
req^^& )
,^^) *
HttpResponse^^+ 7
resp^^8 <
)^^< =
{__ 
string`` 
data`` 
;`` 
ifaa 

(aa 
PRIVATE_CONST_TRUEaa 
)aa 
{bb 	
datadd 
=dd 
$strdd 
;dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
ifll 

(ll 
PRIVATE_CONST_TRUEll 
)ll 
{mm 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
respqq 
.qq 
	AddHeaderqq 
(qq 
$strqq )
,qq) *
$strqq+ >
+qq? @
dataqqA E
)qqE F
;qqF G
}rr 
}ss 	
}tt 
privateww 
voidww 
GoodB2G1ww 
(ww 
HttpRequestww %
reqww& )
,ww) *
HttpResponseww+ 7
respww8 <
)ww< =
{xx 
stringyy 
datayy 
;yy 
ifzz 

(zz 
PRIVATE_CONST_TRUEzz 
)zz 
{{{ 	
data|| 
=|| 
$str|| 
;|| 
{~~ 
if 
( 
req 
. 
QueryString #
[# $
$str$ (
]( )
!=* ,
null- 1
)1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PRIVATE_CONST_FALSE
 
)
  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
   	
data
¡¡ 
=
¡¡ 
$str
¡¡ 
;
¡¡ 
{
££ 
if
¤¤ 
(
¤¤ 
req
¤¤ 
.
¤¤ 
QueryString
¤¤ #
[
¤¤# $
$str
¤¤$ (
]
¤¤( )
!=
¤¤* ,
null
¤¤- 1
)
¤¤1 2
{
¥¥ 
data
¦¦ 
=
¦¦ 
req
¦¦ 
.
¦¦ 
QueryString
¦¦ *
[
¦¦* +
$str
¦¦+ /
]
¦¦/ 0
;
¦¦0 1
}
§§ 
}
¨¨ 
}
©© 	
else
ªª 
{
«« 	
data
®® 
=
®® 
null
®® 
;
®® 
}
¯¯ 	
if
°° 

(
°°  
PRIVATE_CONST_TRUE
°° 
)
°° 
{
±± 	
if
²² 
(
²² 
data
²² 
!=
²² 
null
²² 
)
²² 
{
³³ 
data
µµ 
=
µµ 
HttpUtility
µµ "
.
µµ" #
	UrlEncode
µµ# ,
(
µµ, -
data
µµ- 1
,
µµ1 2
Encoding
µµ3 ;
.
µµ; <
UTF8
µµ< @
)
µµ@ A
;
µµA B
resp
¶¶ 
.
¶¶ 
	AddHeader
¶¶ 
(
¶¶ 
$str
¶¶ )
,
¶¶) *
$str
¶¶+ >
+
¶¶? @
data
¶¶A E
)
¶¶E F
;
¶¶F G
}
·· 
}
¸¸ 	
}
¹¹ 
public
»» 

override
»» 
void
»» 
Good
»» 
(
»» 
HttpRequest
»» )
req
»»* -
,
»»- .
HttpResponse
»»/ ;
resp
»»< @
)
»»@ A
{
¼¼ 
GoodG2B1
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodG2B2
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
GoodB2G1
¿¿ 
(
¿¿ 
req
¿¿ 
,
¿¿ 
resp
¿¿ 
)
¿¿ 
;
¿¿ 
GoodB2G2
ÀÀ 
(
ÀÀ 
req
ÀÀ 
,
ÀÀ 
resp
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÁÁ 
}ÃÃ 
}ÄÄ ÊB
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_05 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
$str)) 
;)) 
{++ 
if,, 
(,, 
req,, 
.,, 
QueryString,, #
[,,# $
$str,,$ (
],,( )
!=,,* ,
null,,- 1
),,1 2
{-- 
data.. 
=.. 
req.. 
... 
QueryString.. *
[..* +
$str..+ /
]../ 0
;..0 1
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
privateTrue88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
privateFalseGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
privateTrueRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
privateTrue`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
privateTruekk 
)kk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
privateTrueyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{}} 
if~~ 
(~~ 
req~~ 
.~~ 
QueryString~~ #
[~~# $
$str~~$ (
]~~( )
!=~~* ,
null~~- 1
)~~1 2
{ 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
   
=
   
$str
   
;
   
{
¢¢ 
if
££ 
(
££ 
req
££ 
.
££ 
QueryString
££ #
[
££# $
$str
££$ (
]
££( )
!=
££* ,
null
££- 1
)
££1 2
{
¤¤ 
data
¥¥ 
=
¥¥ 
req
¥¥ 
.
¥¥ 
QueryString
¥¥ *
[
¥¥* +
$str
¥¥+ /
]
¥¥/ 0
;
¥¥0 1
}
¦¦ 
}
§§ 
}
¨¨ 	
else
©© 
{
ªª 	
data
­­ 
=
­­ 
null
­­ 
;
­­ 
}
®® 	
if
¯¯ 

(
¯¯ 
privateTrue
¯¯ 
)
¯¯ 
{
°° 	
if
±± 
(
±± 
data
±± 
!=
±± 
null
±± 
)
±± 
{
²² 
data
´´ 
=
´´ 
HttpUtility
´´ "
.
´´" #
	UrlEncode
´´# ,
(
´´, -
data
´´- 1
,
´´1 2
Encoding
´´3 ;
.
´´; <
UTF8
´´< @
)
´´@ A
;
´´A B
resp
µµ 
.
µµ 
	AddHeader
µµ 
(
µµ 
$str
µµ )
,
µµ) *
$str
µµ+ >
+
µµ? @
data
µµA E
)
µµE F
;
µµF G
}
¶¶ 
}
·· 	
}
¸¸ 
public
ºº 

override
ºº 
void
ºº 
Good
ºº 
(
ºº 
HttpRequest
ºº )
req
ºº* -
,
ºº- .
HttpResponse
ºº/ ;
resp
ºº< @
)
ºº@ A
{
»» 
GoodG2B1
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
GoodG2B2
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodB2G1
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
GoodB2G2
¿¿ 
(
¿¿ 
req
¿¿ 
,
¿¿ 
resp
¿¿ 
)
¿¿ 
;
¿¿ 
}
ÀÀ 
}ÂÂ 
}ÃÃ E
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_06 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&&  
$num&&  !
)&&! "
{'' 	
data(( 
=(( 
$str(( 
;(( 
{** 
if++ 
(++ 
req++ 
.++ 
QueryString++ #
[++# $
$str++$ (
]++( )
!=++* ,
null++- 1
)++1 2
{,, 
data-- 
=-- 
req-- 
.-- 
QueryString-- *
[--* +
$str--+ /
]--/ 0
;--0 1
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
null55 
;55 
}66 	
if77 

(77 
PRIVATE_CONST_FIVE77 
==77  
$num77  !
)77! "
{88 	
if99 
(99 
data99 
!=99 
null99 
)99 
{:: 
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< )
,<<) *
$str<<+ >
+<<? @
data<<A E
)<<E F
;<<F G
}== 
}>> 	
}?? 
privateCC 
voidCC 
GoodG2B1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
;EE 
ifFF 

(FF 
PRIVATE_CONST_FIVEFF 
!=FF  
$numFF  !
)FF! "
{GG 	
dataJJ 
=JJ 
nullJJ 
;JJ 
}KK 	
elseLL 
{MM 	
dataOO 
=OO 
$strOO 
;OO 
}PP 	
ifQQ 

(QQ 
PRIVATE_CONST_FIVEQQ 
==QQ  
$numQQ  !
)QQ! "
{RR 	
ifSS 
(SS 
dataSS 
!=SS 
nullSS 
)SS 
{TT 
respVV 
.VV 
	AddHeaderVV 
(VV 
$strVV )
,VV) *
$strVV+ >
+VV? @
dataVVA E
)VVE F
;VVF G
}WW 
}XX 	
}YY 
private\\ 
void\\ 
GoodG2B2\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
PRIVATE_CONST_FIVE__ 
==__  
$num__  !
)__! "
{`` 	
databb 
=bb 
$strbb 
;bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
ifjj 

(jj 
PRIVATE_CONST_FIVEjj 
==jj  
$numjj  !
)jj! "
{kk 	
ifll 
(ll 
datall 
!=ll 
nullll 
)ll 
{mm 
respoo 
.oo 
	AddHeaderoo 
(oo 
$stroo )
,oo) *
$stroo+ >
+oo? @
dataooA E
)ooE F
;ooF G
}pp 
}qq 	
}rr 
privateuu 
voiduu 
GoodB2G1uu 
(uu 
HttpRequestuu %
requu& )
,uu) *
HttpResponseuu+ 7
respuu8 <
)uu< =
{vv 
stringww 
dataww 
;ww 
ifxx 

(xx 
PRIVATE_CONST_FIVExx 
==xx  
$numxx  !
)xx! "
{yy 	
datazz 
=zz 
$strzz 
;zz 
{|| 
if}} 
(}} 
req}} 
.}} 
QueryString}} #
[}}# $
$str}}$ (
]}}( )
!=}}* ,
null}}- 1
)}}1 2
{~~ 
data 
= 
req 
. 
QueryString *
[* +
$str+ /
]/ 0
;0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
!=
  
$num
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
$str
 
;
 
{
¡¡ 
if
¢¢ 
(
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ #
[
¢¢# $
$str
¢¢$ (
]
¢¢( )
!=
¢¢* ,
null
¢¢- 1
)
¢¢1 2
{
££ 
data
¤¤ 
=
¤¤ 
req
¤¤ 
.
¤¤ 
QueryString
¤¤ *
[
¤¤* +
$str
¤¤+ /
]
¤¤/ 0
;
¤¤0 1
}
¥¥ 
}
¦¦ 
}
§§ 	
else
¨¨ 
{
©© 	
data
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
­­ 	
if
®® 

(
®®  
PRIVATE_CONST_FIVE
®® 
==
®®  
$num
®®  !
)
®®! "
{
¯¯ 	
if
°° 
(
°° 
data
°° 
!=
°° 
null
°° 
)
°° 
{
±± 
data
³³ 
=
³³ 
HttpUtility
³³ "
.
³³" #
	UrlEncode
³³# ,
(
³³, -
data
³³- 1
,
³³1 2
Encoding
³³3 ;
.
³³; <
UTF8
³³< @
)
³³@ A
;
³³A B
resp
´´ 
.
´´ 
	AddHeader
´´ 
(
´´ 
$str
´´ )
,
´´) *
$str
´´+ >
+
´´? @
data
´´A E
)
´´E F
;
´´F G
}
µµ 
}
¶¶ 	
}
·· 
public
¹¹ 

override
¹¹ 
void
¹¹ 
Good
¹¹ 
(
¹¹ 
HttpRequest
¹¹ )
req
¹¹* -
,
¹¹- .
HttpResponse
¹¹/ ;
resp
¹¹< @
)
¹¹@ A
{
ºº 
GoodG2B1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodG2B2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
GoodB2G1
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodB2G2
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
}
¿¿ 
}ÁÁ 
}ÂÂ £D
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_07 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
$str(( 
;(( 
{** 
if++ 
(++ 
req++ 
.++ 
QueryString++ #
[++# $
$str++$ (
]++( )
!=++* ,
null++- 1
)++1 2
{,, 
data-- 
=-- 
req-- 
.-- 
QueryString-- *
[--* +
$str--+ /
]--/ 0
;--0 1
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
null55 
;55 
}66 	
if77 

(77 
privateFive77 
==77 
$num77 
)77 
{88 	
if99 
(99 
data99 
!=99 
null99 
)99 
{:: 
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< )
,<<) *
$str<<+ >
+<<? @
data<<A E
)<<E F
;<<F G
}== 
}>> 	
}?? 
privateCC 
voidCC 
GoodG2B1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
;EE 
ifFF 

(FF 
privateFiveFF 
!=FF 
$numFF 
)FF 
{GG 	
dataJJ 
=JJ 
nullJJ 
;JJ 
}KK 	
elseLL 
{MM 	
dataOO 
=OO 
$strOO 
;OO 
}PP 	
ifQQ 

(QQ 
privateFiveQQ 
==QQ 
$numQQ 
)QQ 
{RR 	
ifSS 
(SS 
dataSS 
!=SS 
nullSS 
)SS 
{TT 
respVV 
.VV 
	AddHeaderVV 
(VV 
$strVV )
,VV) *
$strVV+ >
+VV? @
dataVVA E
)VVE F
;VVF G
}WW 
}XX 	
}YY 
private\\ 
void\\ 
GoodG2B2\\ 
(\\ 
HttpRequest\\ %
req\\& )
,\\) *
HttpResponse\\+ 7
resp\\8 <
)\\< =
{]] 
string^^ 
data^^ 
;^^ 
if__ 

(__ 
privateFive__ 
==__ 
$num__ 
)__ 
{`` 	
databb 
=bb 
$strbb 
;bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
ifjj 

(jj 
privateFivejj 
==jj 
$numjj 
)jj 
{kk 	
ifll 
(ll 
datall 
!=ll 
nullll 
)ll 
{mm 
respoo 
.oo 
	AddHeaderoo 
(oo 
$stroo )
,oo) *
$stroo+ >
+oo? @
dataooA E
)ooE F
;ooF G
}pp 
}qq 	
}rr 
privateuu 
voiduu 
GoodB2G1uu 
(uu 
HttpRequestuu %
requu& )
,uu) *
HttpResponseuu+ 7
respuu8 <
)uu< =
{vv 
stringww 
dataww 
;ww 
ifxx 

(xx 
privateFivexx 
==xx 
$numxx 
)xx 
{yy 	
datazz 
=zz 
$strzz 
;zz 
{|| 
if}} 
(}} 
req}} 
.}} 
QueryString}} #
[}}# $
$str}}$ (
]}}( )
!=}}* ,
null}}- 1
)}}1 2
{~~ 
data 
= 
req 
. 
QueryString *
[* +
$str+ /
]/ 0
;0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
¡¡ 
if
¢¢ 
(
¢¢ 
req
¢¢ 
.
¢¢ 
QueryString
¢¢ #
[
¢¢# $
$str
¢¢$ (
]
¢¢( )
!=
¢¢* ,
null
¢¢- 1
)
¢¢1 2
{
££ 
data
¤¤ 
=
¤¤ 
req
¤¤ 
.
¤¤ 
QueryString
¤¤ *
[
¤¤* +
$str
¤¤+ /
]
¤¤/ 0
;
¤¤0 1
}
¥¥ 
}
¦¦ 
}
§§ 	
else
¨¨ 
{
©© 	
data
¬¬ 
=
¬¬ 
null
¬¬ 
;
¬¬ 
}
­­ 	
if
®® 

(
®® 
privateFive
®® 
==
®® 
$num
®® 
)
®® 
{
¯¯ 	
if
°° 
(
°° 
data
°° 
!=
°° 
null
°° 
)
°° 
{
±± 
data
³³ 
=
³³ 
HttpUtility
³³ "
.
³³" #
	UrlEncode
³³# ,
(
³³, -
data
³³- 1
,
³³1 2
Encoding
³³3 ;
.
³³; <
UTF8
³³< @
)
³³@ A
;
³³A B
resp
´´ 
.
´´ 
	AddHeader
´´ 
(
´´ 
$str
´´ )
,
´´) *
$str
´´+ >
+
´´? @
data
´´A E
)
´´E F
;
´´F G
}
µµ 
}
¶¶ 	
}
·· 
public
¹¹ 

override
¹¹ 
void
¹¹ 
Good
¹¹ 
(
¹¹ 
HttpRequest
¹¹ )
req
¹¹* -
,
¹¹- .
HttpResponse
¹¹/ ;
resp
¹¹< @
)
¹¹@ A
{
ºº 
GoodG2B1
»» 
(
»» 
req
»» 
,
»» 
resp
»» 
)
»» 
;
»» 
GoodG2B2
¼¼ 
(
¼¼ 
req
¼¼ 
,
¼¼ 
resp
¼¼ 
)
¼¼ 
;
¼¼ 
GoodB2G1
½½ 
(
½½ 
req
½½ 
,
½½ 
resp
½½ 
)
½½ 
;
½½ 
GoodB2G2
¾¾ 
(
¾¾ 
req
¾¾ 
,
¾¾ 
resp
¾¾ 
)
¾¾ 
;
¾¾ 
}
¿¿ 
}ÁÁ 
}ÂÂ °G
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_08 F
:G H
AbstractTestCaseWebI \
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public++ 

override++ 
void++ 
Bad++ 
(++ 
HttpRequest++ (
req++) ,
,++, -
HttpResponse++. :
resp++; ?
)++? @
{,, 
string-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
$str00 
;00 
{22 
if33 
(33 
req33 
.33 
QueryString33 #
[33# $
$str33$ (
]33( )
!=33* ,
null33- 1
)331 2
{44 
data55 
=55 
req55 
.55 
QueryString55 *
[55* +
$str55+ /
]55/ 0
;550 1
}66 
}77 
}88 	
else99 
{:: 	
data== 
=== 
null== 
;== 
}>> 	
if?? 

(?? 
PrivateReturnsTrue?? 
(?? 
)??  
)??  !
{@@ 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 
respDD 
.DD 
	AddHeaderDD 
(DD 
$strDD )
,DD) *
$strDD+ >
+DD? @
dataDDA E
)DDE F
;DDF G
}EE 
}FF 	
}GG 
privateKK 
voidKK 
GoodG2B1KK 
(KK 
HttpRequestKK %
reqKK& )
,KK) *
HttpResponseKK+ 7
respKK8 <
)KK< =
{LL 
stringMM 
dataMM 
;MM 
ifNN 

(NN 
PrivateReturnsFalseNN 
(NN  
)NN  !
)NN! "
{OO 	
dataRR 
=RR 
nullRR 
;RR 
}SS 	
elseTT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
ifYY 

(YY 
PrivateReturnsTrueYY 
(YY 
)YY  
)YY  !
{ZZ 	
if[[ 
([[ 
data[[ 
!=[[ 
null[[ 
)[[ 
{\\ 
resp^^ 
.^^ 
	AddHeader^^ 
(^^ 
$str^^ )
,^^) *
$str^^+ >
+^^? @
data^^A E
)^^E F
;^^F G
}__ 
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
HttpRequestdd %
reqdd& )
,dd) *
HttpResponsedd+ 7
respdd8 <
)dd< =
{ee 
stringff 
dataff 
;ff 
ifgg 

(gg 
PrivateReturnsTruegg 
(gg 
)gg  
)gg  !
{hh 	
datajj 
=jj 
$strjj 
;jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
nullpp 
;pp 
}qq 	
ifrr 

(rr 
PrivateReturnsTruerr 
(rr 
)rr  
)rr  !
{ss 	
iftt 
(tt 
datatt 
!=tt 
nulltt 
)tt 
{uu 
respww 
.ww 
	AddHeaderww 
(ww 
$strww )
,ww) *
$strww+ >
+ww? @
datawwA E
)wwE F
;wwF G
}xx 
}yy 	
}zz 
private}} 
void}} 
GoodB2G1}} 
(}} 
HttpRequest}} %
req}}& )
,}}) *
HttpResponse}}+ 7
resp}}8 <
)}}< =
{~~ 
string 
data 
; 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
¢¢ 
void
¢¢ 
GoodB2G2
¢¢ 
(
¢¢ 
HttpRequest
¢¢ %
req
¢¢& )
,
¢¢) *
HttpResponse
¢¢+ 7
resp
¢¢8 <
)
¢¢< =
{
££ 
string
¤¤ 
data
¤¤ 
;
¤¤ 
if
¥¥ 

(
¥¥  
PrivateReturnsTrue
¥¥ 
(
¥¥ 
)
¥¥  
)
¥¥  !
{
¦¦ 	
data
§§ 
=
§§ 
$str
§§ 
;
§§ 
{
©© 
if
ªª 
(
ªª 
req
ªª 
.
ªª 
QueryString
ªª #
[
ªª# $
$str
ªª$ (
]
ªª( )
!=
ªª* ,
null
ªª- 1
)
ªª1 2
{
«« 
data
¬¬ 
=
¬¬ 
req
¬¬ 
.
¬¬ 
QueryString
¬¬ *
[
¬¬* +
$str
¬¬+ /
]
¬¬/ 0
;
¬¬0 1
}
­­ 
}
®® 
}
¯¯ 	
else
°° 
{
±± 	
data
´´ 
=
´´ 
null
´´ 
;
´´ 
}
µµ 	
if
¶¶ 

(
¶¶  
PrivateReturnsTrue
¶¶ 
(
¶¶ 
)
¶¶  
)
¶¶  !
{
·· 	
if
¸¸ 
(
¸¸ 
data
¸¸ 
!=
¸¸ 
null
¸¸ 
)
¸¸ 
{
¹¹ 
data
»» 
=
»» 
HttpUtility
»» "
.
»»" #
	UrlEncode
»»# ,
(
»», -
data
»»- 1
,
»»1 2
Encoding
»»3 ;
.
»»; <
UTF8
»»< @
)
»»@ A
;
»»A B
resp
¼¼ 
.
¼¼ 
	AddHeader
¼¼ 
(
¼¼ 
$str
¼¼ )
,
¼¼) *
$str
¼¼+ >
+
¼¼? @
data
¼¼A E
)
¼¼E F
;
¼¼F G
}
½½ 
}
¾¾ 	
}
¿¿ 
public
ÁÁ 

override
ÁÁ 
void
ÁÁ 
Good
ÁÁ 
(
ÁÁ 
HttpRequest
ÁÁ )
req
ÁÁ* -
,
ÁÁ- .
HttpResponse
ÁÁ/ ;
resp
ÁÁ< @
)
ÁÁ@ A
{
ÂÂ 
GoodG2B1
ÃÃ 
(
ÃÃ 
req
ÃÃ 
,
ÃÃ 
resp
ÃÃ 
)
ÃÃ 
;
ÃÃ 
GoodG2B2
ÄÄ 
(
ÄÄ 
req
ÄÄ 
,
ÄÄ 
resp
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodB2G1
ÅÅ 
(
ÅÅ 
req
ÅÅ 
,
ÅÅ 
resp
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodB2G2
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ÇÇ 
}ÉÉ 
}ÊÊ èC
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_09 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22  
STATIC_READONLY_TRUE22 #
)22# $
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA !
STATIC_READONLY_FALSEAA $
)AA$ %
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL  
STATIC_READONLY_TRUELL #
)LL# $
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ  
STATIC_READONLY_TRUEZZ #
)ZZ# $
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_TRUEee #
)ee# $
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss  
STATIC_READONLY_TRUEss #
)ss# $
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 #
STATIC_READONLY_FALSE
 $
)
$ %
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_TRUE
 #
)
# $
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© "
STATIC_READONLY_TRUE
©© #
)
©©# $
{
ªª 	
if
«« 
(
«« 
data
«« 
!=
«« 
null
«« 
)
«« 
{
¬¬ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
data
®®- 1
,
®®1 2
Encoding
®®3 ;
.
®®; <
UTF8
®®< @
)
®®@ A
;
®®A B
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ C
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_10 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22 

staticTrue22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA 
staticFalseAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL 

staticTrueLL 
)LL 
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ 

staticTrueZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee 

staticTrueee 
)ee 
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss 

staticTruess 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
staticFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© 

staticTrue
©© 
)
©© 
{
ªª 	
if
«« 
(
«« 
data
«« 
!=
«« 
null
«« 
)
«« 
{
¬¬ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
data
®®- 1
,
®®1 2
Encoding
®®3 ;
.
®®; <
UTF8
®®< @
)
®®@ A
;
®®A B
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ F
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_11 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22
 
IO22 
.22 
StaticReturnsTrue22 
(22  
)22  !
)22! "
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA 
StaticReturnsFalseAA !
(AA! "
)AA" #
)AA# $
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL 
StaticReturnsTrueLL  
(LL  !
)LL! "
)LL" #
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ 
StaticReturnsTrueZZ  
(ZZ  !
)ZZ! "
)ZZ" #
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee 
StaticReturnsTrueee  
(ee  !
)ee! "
)ee" #
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss 
StaticReturnsTruess  
(ss  !
)ss! "
)ss" #
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
  
StaticReturnsFalse
 !
(
! "
)
" #
)
# $
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 
StaticReturnsTrue
  
(
  !
)
! "
)
" #
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© 
StaticReturnsTrue
©©  
(
©©  !
)
©©! "
)
©©" #
{
ªª 	
if
«« 
(
«« 
data
«« 
!=
«« 
null
«« 
)
«« 
{
¬¬ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
data
®®- 1
,
®®1 2
Encoding
®®3 ;
.
®®; <
UTF8
®®< @
)
®®@ A
;
®®A B
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ Ù:
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_12 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!!
 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! &
(!!& '
)!!' (
)!!( )
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data// 
=// 
$str// 
;// 
}00 	
if11 

(11
 
IO11 
.11 $
StaticReturnsTrueOrFalse11 &
(11& '
)11' (
)11( )
{22 	
if33 
(33 
data33 
!=33 
null33 
)33 
{44 
resp66 
.66 
	AddHeader66 
(66 
$str66 )
,66) *
$str66+ >
+66? @
data66A E
)66E F
;66F G
}77 
}88 	
else99 
{:: 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
data>> 
=>> 
HttpUtility>> "
.>>" #
	UrlEncode>># ,
(>>, -
data>>- 1
,>>1 2
Encoding>>3 ;
.>>; <
UTF8>>< @
)>>@ A
;>>A B
resp?? 
.?? 
	AddHeader?? 
(?? 
$str?? )
,??) *
$str??+ >
+??? @
data??A E
)??E F
;??F G
}@@ 
}AA 	
}BB 
privateGG 
voidGG 
GoodG2BGG 
(GG 
HttpRequestGG $
reqGG% (
,GG( )
HttpResponseGG* 6
respGG7 ;
)GG; <
{HH 
stringII 
dataII 
;II 
ifJJ 

(JJ
 
IOJJ 
.JJ $
StaticReturnsTrueOrFalseJJ &
(JJ& '
)JJ' (
)JJ( )
{KK 	
dataMM 
=MM 
$strMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$strRR 
;RR 
}SS 	
ifTT 

(TT
 
IOTT 
.TT $
StaticReturnsTrueOrFalseTT &
(TT& '
)TT' (
)TT( )
{UU 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 
respYY 
.YY 
	AddHeaderYY 
(YY 
$strYY )
,YY) *
$strYY+ >
+YY? @
dataYYA E
)YYE F
;YYF G
}ZZ 
}[[ 	
else\\ 
{]] 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
}dd 
privatehh 
voidhh 
GoodB2Ghh 
(hh 
HttpRequesthh $
reqhh% (
,hh( )
HttpResponsehh* 6
resphh7 ;
)hh; <
{ii 
stringjj 
datajj 
;jj 
ifkk 

(kk
 
IOkk 
.kk $
StaticReturnsTrueOrFalsekk &
(kk& '
)kk' (
)kk( )
{ll 	
datamm 
=mm 
$strmm 
;mm 
{oo 
ifpp 
(pp 
reqpp 
.pp 
QueryStringpp #
[pp# $
$strpp$ (
]pp( )
!=pp* ,
nullpp- 1
)pp1 2
{qq 
datarr 
=rr 
reqrr 
.rr 
QueryStringrr *
[rr* +
$strrr+ /
]rr/ 0
;rr0 1
}ss 
}tt 
}uu 	
elsevv 
{ww 	
dataxx 
=xx 
$strxx 
;xx 
{zz 
if{{ 
({{ 
req{{ 
.{{ 
QueryString{{ #
[{{# $
$str{{$ (
]{{( )
!={{* ,
null{{- 1
){{1 2
{|| 
data}} 
=}} 
req}} 
.}} 
QueryString}} *
[}}* +
$str}}+ /
]}}/ 0
;}}0 1
}~~ 
} 
}
 	
if
 

(

 
IO
 
.
 &
StaticReturnsTrueOrFalse
 &
(
& '
)
' (
)
( )
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
public
 

override
 
void
 
Good
 
(
 
HttpRequest
 )
req
* -
,
- .
HttpResponse
/ ;
resp
< @
)
@ A
{
 
GoodG2B
 
(
 
req
 
,
 
resp
 
)
 
;
 
GoodB2G
 
(
 
req
 
,
 
resp
 
)
 
;
 
}
 
} 
} ÆF
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_13 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!# %
$num!!% &
)!!& '
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22  
STATIC_READONLY_FIVE22 #
==22# %
$num22% &
)22& '
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA  
STATIC_READONLY_FIVEAA #
!=AA# %
$numAA% &
)AA& '
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL  
STATIC_READONLY_FIVELL #
==LL# %
$numLL% &
)LL& '
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ  
STATIC_READONLY_FIVEZZ #
==ZZ# %
$numZZ% &
)ZZ& '
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_FIVEee #
==ee# %
$numee% &
)ee& '
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss  
STATIC_READONLY_FIVEss #
==ss# %
$numss% &
)ss& '
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
!=
# %
$num
% &
)
& '
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
==
# %
$num
% &
)
& '
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© "
STATIC_READONLY_FIVE
©© #
==
©©# %
$num
©©% &
)
©©& '
{
ªª 	
if
«« 
(
«« 
data
«« 
!=
«« 
null
«« 
)
«« 
{
¬¬ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
data
®®- 1
,
®®1 2
Encoding
®®3 ;
.
®®; <
UTF8
®®< @
)
®®@ A
;
®®A B
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ âE
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_14 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
}++ 	
else,, 
{-- 	
data00 
=00 
null00 
;00 
}11 	
if22 

(22 
IO22 
.22 

staticFive22 
==22 
$num22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
HttpRequest>> %
req>>& )
,>>) *
HttpResponse>>+ 7
resp>>8 <
)>>< =
{?? 
string@@ 
data@@ 
;@@ 
ifAA 

(AA 
IOAA 
.AA 

staticFiveAA 
!=AA 
$numAA 
)AA 
{BB 	
dataEE 
=EE 
nullEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$strJJ 
;JJ 
}KK 	
ifLL 

(LL 
IOLL 
.LL 

staticFiveLL 
==LL 
$numLL 
)LL 
{MM 	
ifNN 
(NN 
dataNN 
!=NN 
nullNN 
)NN 
{OO 
respQQ 
.QQ 
	AddHeaderQQ 
(QQ 
$strQQ )
,QQ) *
$strQQ+ >
+QQ? @
dataQQA E
)QQE F
;QQF G
}RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodG2B2WW 
(WW 
HttpRequestWW %
reqWW& )
,WW) *
HttpResponseWW+ 7
respWW8 <
)WW< =
{XX 
stringYY 
dataYY 
;YY 
ifZZ 

(ZZ 
IOZZ 
.ZZ 

staticFiveZZ 
==ZZ 
$numZZ 
)ZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
else__ 
{`` 	
datacc 
=cc 
nullcc 
;cc 
}dd 	
ifee 

(ee 
IOee 
.ee 

staticFiveee 
==ee 
$numee 
)ee 
{ff 	
ifgg 
(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 
respjj 
.jj 
	AddHeaderjj 
(jj 
$strjj )
,jj) *
$strjj+ >
+jj? @
datajjA E
)jjE F
;jjF G
}kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2G1pp 
(pp 
HttpRequestpp %
reqpp& )
,pp) *
HttpResponsepp+ 7
resppp8 <
)pp< =
{qq 
stringrr 
datarr 
;rr 
ifss 

(ss 
IOss 
.ss 

staticFivess 
==ss 
$numss 
)ss 
{tt 	
datauu 
=uu 
$struu 
;uu 
{ww 
ifxx 
(xx 
reqxx 
.xx 
QueryStringxx #
[xx# $
$strxx$ (
]xx( )
!=xx* ,
nullxx- 1
)xx1 2
{yy 
datazz 
=zz 
reqzz 
.zz 
QueryStringzz *
[zz* +
$strzz+ /
]zz/ 0
;zz0 1
}{{ 
}|| 
}}} 	
else~~ 
{ 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodB2G2
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
 
IO
 
.
 

staticFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
   
}
¡¡ 
}
¢¢ 	
else
££ 
{
¤¤ 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
¨¨ 	
if
©© 

(
©© 
IO
©© 
.
©© 

staticFive
©© 
==
©© 
$num
©© 
)
©© 
{
ªª 	
if
«« 
(
«« 
data
«« 
!=
«« 
null
«« 
)
«« 
{
¬¬ 
data
®® 
=
®® 
HttpUtility
®® "
.
®®" #
	UrlEncode
®®# ,
(
®®, -
data
®®- 1
,
®®1 2
Encoding
®®3 ;
.
®®; <
UTF8
®®< @
)
®®@ A
;
®®A B
resp
¯¯ 
.
¯¯ 
	AddHeader
¯¯ 
(
¯¯ 
$str
¯¯ )
,
¯¯) *
$str
¯¯+ >
+
¯¯? @
data
¯¯A E
)
¯¯E F
;
¯¯F G
}
°° 
}
±± 	
}
²² 
public
´´ 

override
´´ 
void
´´ 
Good
´´ 
(
´´ 
HttpRequest
´´ )
req
´´* -
,
´´- .
HttpResponse
´´/ ;
resp
´´< @
)
´´@ A
{
µµ 
GoodG2B1
¶¶ 
(
¶¶ 
req
¶¶ 
,
¶¶ 
resp
¶¶ 
)
¶¶ 
;
¶¶ 
GoodG2B2
·· 
(
·· 
req
·· 
,
·· 
resp
·· 
)
·· 
;
·· 
GoodB2G1
¸¸ 
(
¸¸ 
req
¸¸ 
,
¸¸ 
resp
¸¸ 
)
¸¸ 
;
¸¸ 
GoodB2G2
¹¹ 
(
¹¹ 
req
¹¹ 
,
¹¹ 
resp
¹¹ 
)
¹¹ 
;
¹¹ 
}
ºº 
}¼¼ 
}½½ O
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_15 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 
if'' 
('' 
req'' 
.'' 
QueryString'' #
[''# $
$str''$ (
]''( )
!=''* ,
null''- 1
)''1 2
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) *
[))* +
$str))+ /
]))/ 0
;))0 1
}** 
}++ 
break,, 
;,, 
default-- 
:-- 
data00 
=00 
null00 
;00 
break11 
;11 
}22 	
switch33 
(33 
$num33 
)33 
{44 	
case55 
$num55 
:55 
if66 
(66 
data66 
!=66 
null66 
)66 
{77 
resp99 
.99 
	AddHeader99 
(99 
$str99 )
,99) *
$str99+ >
+99? @
data99A E
)99E F
;99F G
}:: 
break;; 
;;; 
default<< 
:<< 
IO>> 
.>> 
	WriteLine>> 
(>> 
$str>> /
)>>/ 0
;>>0 1
break?? 
;?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
switchHH 
(HH 
$numHH 
)HH 
{II 	
caseJJ 
$numJJ 
:JJ 
dataMM 
=MM 
nullMM 
;MM 
breakNN 
;NN 
defaultOO 
:OO 
dataQQ 
=QQ 
$strQQ 
;QQ 
breakRR 
;RR 
}SS 	
switchTT 
(TT 
$numTT 
)TT 
{UU 	
caseVV 
$numVV 
:VV 
ifWW 
(WW 
dataWW 
!=WW 
nullWW 
)WW 
{XX 
respZZ 
.ZZ 
	AddHeaderZZ 
(ZZ 
$strZZ )
,ZZ) *
$strZZ+ >
+ZZ? @
dataZZA E
)ZZE F
;ZZF G
}[[ 
break\\ 
;\\ 
default]] 
:]] 
IO__ 
.__ 
	WriteLine__ 
(__ 
$str__ /
)__/ 0
;__0 1
break`` 
;`` 
}aa 	
}bb 
privateee 
voidee 
GoodG2B2ee 
(ee 
HttpRequestee %
reqee& )
,ee) *
HttpResponseee+ 7
respee8 <
)ee< =
{ff 
stringgg 
datagg 
;gg 
switchhh 
(hh 
$numhh 
)hh 
{ii 	
casejj 
$numjj 
:jj 
datall 
=ll 
$strll 
;ll 
breakmm 
;mm 
defaultnn 
:nn 
dataqq 
=qq 
nullqq 
;qq 
breakrr 
;rr 
}ss 	
switchtt 
(tt 
$numtt 
)tt 
{uu 	
casevv 
$numvv 
:vv 
ifww 
(ww 
dataww 
!=ww 
nullww 
)ww 
{xx 
respzz 
.zz 
	AddHeaderzz 
(zz 
$strzz )
,zz) *
$strzz+ >
+zz? @
datazzA E
)zzE F
;zzF G
}{{ 
break|| 
;|| 
default}} 
:}} 
IO 
. 
	WriteLine 
( 
$str /
)/ 0
;0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
if
 
(
 
req
 
.
 
QueryString
 #
[
# $
$str
$ (
]
( )
!=
* ,
null
- 1
)
1 2
{
 
data
 
=
 
req
 
.
 
QueryString
 *
[
* +
$str
+ /
]
/ 0
;
0 1
}
 
}
 
break
 
;
 
default
 
:
 
data
 
=
 
null
 
;
 
break
 
;
 
}
 	
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
default
   
:
   
if
¡¡ 
(
¡¡ 
data
¡¡ 
!=
¡¡ 
null
¡¡ 
)
¡¡ 
{
¢¢ 
data
¤¤ 
=
¤¤ 
HttpUtility
¤¤ "
.
¤¤" #
	UrlEncode
¤¤# ,
(
¤¤, -
data
¤¤- 1
,
¤¤1 2
Encoding
¤¤3 ;
.
¤¤; <
UTF8
¤¤< @
)
¤¤@ A
;
¤¤A B
resp
¥¥ 
.
¥¥ 
	AddHeader
¥¥ 
(
¥¥ 
$str
¥¥ )
,
¥¥) *
$str
¥¥+ >
+
¥¥? @
data
¥¥A E
)
¥¥E F
;
¥¥F G
}
¦¦ 
break
§§ 
;
§§ 
}
¨¨ 	
}
©© 
private
¬¬ 
void
¬¬ 
GoodB2G2
¬¬ 
(
¬¬ 
HttpRequest
¬¬ %
req
¬¬& )
,
¬¬) *
HttpResponse
¬¬+ 7
resp
¬¬8 <
)
¬¬< =
{
­­ 
string
®® 
data
®® 
;
®® 
switch
¯¯ 
(
¯¯ 
$num
¯¯ 
)
¯¯ 
{
°° 	
case
±± 
$num
±± 
:
±± 
data
²² 
=
²² 
$str
²² 
;
²² 
{
´´ 
if
µµ 
(
µµ 
req
µµ 
.
µµ 
QueryString
µµ #
[
µµ# $
$str
µµ$ (
]
µµ( )
!=
µµ* ,
null
µµ- 1
)
µµ1 2
{
¶¶ 
data
·· 
=
·· 
req
·· 
.
·· 
QueryString
·· *
[
··* +
$str
··+ /
]
··/ 0
;
··0 1
}
¸¸ 
}
¹¹ 
break
ºº 
;
ºº 
default
»» 
:
»» 
data
¾¾ 
=
¾¾ 
null
¾¾ 
;
¾¾ 
break
¿¿ 
;
¿¿ 
}
ÀÀ 	
switch
ÁÁ 
(
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
{
ÂÂ 	
case
ÃÃ 
$num
ÃÃ 
:
ÃÃ 
if
ÄÄ 
(
ÄÄ 
data
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
)
ÄÄ 
{
ÅÅ 
data
ÇÇ 
=
ÇÇ 
HttpUtility
ÇÇ "
.
ÇÇ" #
	UrlEncode
ÇÇ# ,
(
ÇÇ, -
data
ÇÇ- 1
,
ÇÇ1 2
Encoding
ÇÇ3 ;
.
ÇÇ; <
UTF8
ÇÇ< @
)
ÇÇ@ A
;
ÇÇA B
resp
ÈÈ 
.
ÈÈ 
	AddHeader
ÈÈ 
(
ÈÈ 
$str
ÈÈ )
,
ÈÈ) *
$str
ÈÈ+ >
+
ÈÈ? @
data
ÈÈA E
)
ÈÈE F
;
ÈÈF G
}
ÉÉ 
break
ÊÊ 
;
ÊÊ 
default
ËË 
:
ËË 
IO
ÍÍ 
.
ÍÍ 
	WriteLine
ÍÍ 
(
ÍÍ 
$str
ÍÍ /
)
ÍÍ/ 0
;
ÍÍ0 1
break
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
}
ÐÐ 
public
ÒÒ 

override
ÒÒ 
void
ÒÒ 
Good
ÒÒ 
(
ÒÒ 
HttpRequest
ÒÒ )
req
ÒÒ* -
,
ÒÒ- .
HttpResponse
ÒÒ/ ;
resp
ÒÒ< @
)
ÒÒ@ A
{
ÓÓ 
GoodG2B1
ÔÔ 
(
ÔÔ 
req
ÔÔ 
,
ÔÔ 
resp
ÔÔ 
)
ÔÔ 
;
ÔÔ 
GoodG2B2
ÕÕ 
(
ÕÕ 
req
ÕÕ 
,
ÕÕ 
resp
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G1
ÖÖ 
(
ÖÖ 
req
ÖÖ 
,
ÖÖ 
resp
ÖÖ 
)
ÖÖ 
;
ÖÖ 
GoodB2G2
×× 
(
×× 
req
×× 
,
×× 
resp
×× 
)
×× 
;
×× 
}
ØØ 
}ÚÚ 
}ÛÛ %
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_16 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
break++ 
;++ 
},, 	
while-- 
(-- 
true-- 
)-- 
{.. 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp22 
.22 
	AddHeader22 
(22 
$str22 )
,22) *
$str22+ >
+22? @
data22A E
)22E F
;22F G
}33 
break44 
;44 
}55 	
}66 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
while== 
(== 
true== 
)== 
{>> 	
data@@ 
=@@ 
$str@@ 
;@@ 
breakAA 
;AA 
}BB 	
whileCC 
(CC 
trueCC 
)CC 
{DD 	
ifEE 
(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH )
,HH) *
$strHH+ >
+HH? @
dataHHA E
)HHE F
;HHF G
}II 
breakJJ 
;JJ 
}KK 	
}LL 
privateOO 
voidOO 
GoodB2GOO 
(OO 
HttpRequestOO $
reqOO% (
,OO( )
HttpResponseOO* 6
respOO7 ;
)OO; <
{PP 
stringQQ 
dataQQ 
;QQ 
whileRR 
(RR 
trueRR 
)RR 
{SS 	
dataTT 
=TT 
$strTT 
;TT 
{VV 
ifWW 
(WW 
reqWW 
.WW 
QueryStringWW #
[WW# $
$strWW$ (
]WW( )
!=WW* ,
nullWW- 1
)WW1 2
{XX 
dataYY 
=YY 
reqYY 
.YY 
QueryStringYY *
[YY* +
$strYY+ /
]YY/ 0
;YY0 1
}ZZ 
}[[ 
break\\ 
;\\ 
}]] 	
while^^ 
(^^ 
true^^ 
)^^ 
{__ 	
if`` 
(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
datacc- 1
,cc1 2
Encodingcc3 ;
.cc; <
UTF8cc< @
)cc@ A
;ccA B
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
breakff 
;ff 
}gg 	
}hh 
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
HttpRequestjj )
reqjj* -
,jj- .
HttpResponsejj/ ;
respjj< @
)jj@ A
{kk 
GoodG2Bll 
(ll 
reqll 
,ll 
respll 
)ll 
;ll 
GoodB2Gmm 
(mm 
reqmm 
,mm 
respmm 
)mm 
;mm 
}nn 
}pp 
}qq ï$
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_17 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data%% 
=%% 
$str%% 
;%% 
{'' 	
if(( 
((( 
req(( 
.(( 
QueryString(( 
[((  
$str((  $
](($ %
!=((& (
null(() -
)((- .
{)) 
data** 
=** 
req** 
.** 
QueryString** &
[**& '
$str**' +
]**+ ,
;**, -
}++ 
},, 	
for-- 
(-- 
int-- 
j-- 
=-- 
$num-- 
;-- 
j-- 
<-- 
$num-- 
;-- 
j--  
++--  "
)--" #
{.. 	
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp22 
.22 
	AddHeader22 
(22 
$str22 )
,22) *
$str22+ >
+22? @
data22A E
)22E F
;22F G
}33 
}44 	
}55 
private99 
void99 
GoodG2B99 
(99 
HttpRequest99 $
req99% (
,99( )
HttpResponse99* 6
resp997 ;
)99; <
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 
for>> 
(>> 
int>> 
j>> 
=>> 
$num>> 
;>> 
j>> 
<>> 
$num>> 
;>> 
j>>  
++>>  "
)>>" #
{?? 	
if@@ 
(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 
respCC 
.CC 
	AddHeaderCC 
(CC 
$strCC )
,CC) *
$strCC+ >
+CC? @
dataCCA E
)CCE F
;CCF G
}DD 
}EE 	
}FF 
privateII 
voidII 
GoodB2GII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataKK 
;KK 
dataLL 
=LL 
$strLL 
;LL 
{NN 	
ifOO 
(OO 
reqOO 
.OO 
QueryStringOO 
[OO  
$strOO  $
]OO$ %
!=OO& (
nullOO) -
)OO- .
{PP 
dataQQ 
=QQ 
reqQQ 
.QQ 
QueryStringQQ &
[QQ& '
$strQQ' +
]QQ+ ,
;QQ, -
}RR 
}SS 	
forTT 
(TT 
intTT 
kTT 
=TT 
$numTT 
;TT 
kTT 
<TT 
$numTT 
;TT 
kTT  
++TT  "
)TT" #
{UU 	
ifVV 
(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 
dataYY 
=YY 
HttpUtilityYY "
.YY" #
	UrlEncodeYY# ,
(YY, -
dataYY- 1
,YY1 2
EncodingYY3 ;
.YY; <
UTF8YY< @
)YY@ A
;YYA B
respZZ 
.ZZ 
	AddHeaderZZ 
(ZZ 
$strZZ )
,ZZ) *
$strZZ+ >
+ZZ? @
dataZZA E
)ZZE F
;ZZF G
}[[ 
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
HttpRequest__ )
req__* -
,__- .
HttpResponse__/ ;
resp__< @
)__@ A
{`` 
GoodG2Baa 
(aa 
reqaa 
,aa 
respaa 
)aa 
;aa 
GoodB2Gbb 
(bb 
reqbb 
,bb 
respbb 
)bb 
;bb 
}cc 
}ee 
}ff ¸C
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_21 F
:G H
AbstractTestCaseWebI \
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	

badPrivate,, 
=,, 
true,, 
;,, 
BadSink-- 
(-- 
data-- 
,-- 
req-- 
,-- 
resp--  
)--  !
;--! "
}.. 
private00 
void00 
BadSink00 
(00 
string00 
data00  $
,00% &
HttpRequest00' 2
req003 6
,006 7
HttpResponse008 D
resp00E I
)00I J
{11 
if22 

(22 

badPrivate22 
)22 
{33 	
if44 
(44 
data44 
!=44 
null44 
)44 
{55 
resp77 
.77 
	AddHeader77 
(77 
$str77 )
,77) *
$str77+ >
+77? @
data77A E
)77E F
;77F G
}88 
}99 	
}:: 
private== 
bool== 
goodB2G1Private==  
===! "
false==# (
;==( )
private>> 
bool>> 
goodB2G2Private>>  
=>>! "
false>># (
;>>( )
private?? 
bool?? 
goodG2BPrivate?? 
=??  !
false??" '
;??' (
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodB2G1CC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2G2DD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
GoodG2BEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodB2G1II 
(II 
HttpRequestII %
reqII& )
,II) *
HttpResponseII+ 7
respII8 <
)II< =
{JJ 
stringKK 
dataKK 
;KK 
dataLL 
=LL 
$strLL 
;LL 
{NN 	
ifOO 
(OO 
reqOO 
.OO 
QueryStringOO 
[OO  
$strOO  $
]OO$ %
!=OO& (
nullOO) -
)OO- .
{PP 
dataQQ 
=QQ 
reqQQ 
.QQ 
QueryStringQQ &
[QQ& '
$strQQ' +
]QQ+ ,
;QQ, -
}RR 
}SS 	
goodB2G1PrivateTT 
=TT 
falseTT 
;TT  
GoodB2G1SinkUU 
(UU 
dataUU 
,UU 
reqUU 
,UU  
respUU! %
)UU% &
;UU& '
}VV 
privateXX 
voidXX 
GoodB2G1SinkXX 
(XX 
stringXX $
dataXX% )
,XX* +
HttpRequestXX, 7
reqXX8 ;
,XX; <
HttpResponseXX= I
respXXJ N
)XXN O
{YY 
ifZZ 

(ZZ 
goodB2G1PrivateZZ 
)ZZ 
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
$str]] /
)]]/ 0
;]]0 1
}^^ 	
else__ 
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
datadd 
=dd 
HttpUtilitydd "
.dd" #
	UrlEncodedd# ,
(dd, -
datadd- 1
,dd1 2
Encodingdd3 ;
.dd; <
UTF8dd< @
)dd@ A
;ddA B
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodB2G2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
datann 
=nn 
$strnn 
;nn 
{pp 	
ifqq 
(qq 
reqqq 
.qq 
QueryStringqq 
[qq  
$strqq  $
]qq$ %
!=qq& (
nullqq) -
)qq- .
{rr 
datass 
=ss 
reqss 
.ss 
QueryStringss &
[ss& '
$strss' +
]ss+ ,
;ss, -
}tt 
}uu 	
goodB2G2Privatevv 
=vv 
truevv 
;vv 
GoodB2G2Sinkww 
(ww 
dataww 
,ww 
reqww 
,ww  
respww! %
)ww% &
;ww& '
}xx 
privatezz 
voidzz 
GoodB2G2Sinkzz 
(zz 
stringzz $
datazz% )
,zz* +
HttpRequestzz, 7
reqzz8 ;
,zz; <
HttpResponsezz= I
respzzJ N
)zzN O
{{{ 
if|| 

(|| 
goodB2G2Private|| 
)|| 
{}} 	
if~~ 
(~~ 
data~~ 
!=~~ 
null~~ 
)~~ 
{ 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
goodG2BPrivate
 
=
 
true
 
;
 
GoodG2BSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
$ %
;
% &
}
 
private
 
void
 
GoodG2BSink
 
(
 
string
 #
data
$ (
,
) *
HttpRequest
+ 6
req
7 :
,
: ;
HttpResponse
< H
resp
I M
)
M N
{
 
if
 

(
 
goodG2BPrivate
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
} 
} ,
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
=## 
null## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	
badPublicStatic,, 
=,, 
true,, 
;,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22b-- I
.--I J
BadSink--J Q
(--Q R
data--R V
,--W X
req--Y \
,--\ ]
resp--^ b
)--b c
;--c d
}.. 
public11 

static11 
bool11  
goodB2G1PublicStatic11 +
=11, -
false11. 3
;113 4
public22 

static22 
bool22  
goodB2G2PublicStatic22 +
=22, -
false22. 3
;223 4
public33 

static33 
bool33 
goodG2BPublicStatic33 *
=33+ ,
false33- 2
;332 3
public55 

override55 
void55 
Good55 
(55 
HttpRequest55 )
req55* -
,55- .
HttpResponse55/ ;
resp55< @
)55@ A
{66 
GoodB2G177 
(77 
req77 
,77 
resp77 
)77 
;77 
GoodB2G288 
(88 
req88 
,88 
resp88 
)88 
;88 
GoodG2B99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
private== 
void== 
GoodB2G1== 
(== 
HttpRequest== %
req==& )
,==) *
HttpResponse==+ 7
resp==8 <
)==< =
{>> 
string?? 
data?? 
=?? 
null?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	 
goodB2G1PublicStaticHH 
=HH 
falseHH $
;HH$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22bII I
.III J
GoodB2G1SinkIIJ V
(IIV W
dataIIW [
,II\ ]
reqII^ a
,IIa b
respIIc g
)IIg h
;IIh i
}JJ 
privateMM 
voidMM 
GoodB2G2MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
=OO 
nullOO 
;OO 
dataPP 
=PP 
$strPP 
;PP 
{RR 	
ifSS 
(SS 
reqSS 
.SS 
QueryStringSS 
[SS  
$strSS  $
]SS$ %
!=SS& (
nullSS) -
)SS- .
{TT 
dataUU 
=UU 
reqUU 
.UU 
QueryStringUU &
[UU& '
$strUU' +
]UU+ ,
;UU, -
}VV 
}WW 	 
goodB2G2PublicStaticXX 
=XX 
trueXX #
;XX# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22bYY I
.YYI J
GoodB2G2SinkYYJ V
(YYV W
dataYYW [
,YY\ ]
reqYY^ a
,YYa b
respYYc g
)YYg h
;YYh i
}ZZ 
private]] 
void]] 
GoodG2B]] 
(]] 
HttpRequest]] $
req]]% (
,]]( )
HttpResponse]]* 6
resp]]7 ;
)]]; <
{^^ 
string__ 
data__ 
=__ 
null__ 
;__ 
dataaa 
=aa 
$straa 
;aa 
goodG2BPublicStaticbb 
=bb 
truebb "
;bb" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22bcc I
.ccI J
GoodG2BSinkccJ U
(ccU V
dataccV Z
,cc[ \
reqcc] `
,cc` a
respccb f
)ccf g
;ccg h
}dd 
}ff 
}gg $
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22a M
.M N
badPublicStaticN ]
)] ^
{   	
if!! 
(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22a44 M
.44M N 
goodB2G1PublicStatic44N b
)44b c
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
data??- 1
,??1 2
Encoding??3 ;
.??; <
UTF8??< @
)??@ A
;??A B
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22aHH M
.HHM N 
goodB2G2PublicStaticHHN b
)HHb c
{II 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
dataMM- 1
,MM1 2
EncodingMM3 ;
.MM; <
UTF8MM< @
)MM@ A
;MMA B
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_22a\\ M
.\\M N
goodG2BPublicStatic\\N a
)\\a b
{]] 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm ½%
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_31 F
:G H
AbstractTestCaseWebI \
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
dataCopy   
;   
{!! 	
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{%% 
if&& 
(&& 
req&& 
.&& 
QueryString&& #
[&&# $
$str&&$ (
]&&( )
!=&&* ,
null&&- 1
)&&1 2
{'' 
data(( 
=(( 
req(( 
.(( 
QueryString(( *
[((* +
$str((+ /
]((/ 0
;((0 1
})) 
}** 
dataCopy++ 
=++ 
data++ 
;++ 
},, 	
{-- 	
string.. 
data.. 
=.. 
dataCopy.. "
;.." #
if// 
(// 
data// 
!=// 
null// 
)// 
{00 
resp22 
.22 
	AddHeader22 
(22 
$str22 )
,22) *
$str22+ >
+22? @
data22A E
)22E F
;22F G
}33 
}44 	
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
void?? 
GoodG2B?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataCopyAA 
;AA 
{BB 	
stringCC 
dataCC 
;CC 
dataEE 
=EE 
$strEE 
;EE 
dataCopyFF 
=FF 
dataFF 
;FF 
}GG 	
{HH 	
stringII 
dataII 
=II 
dataCopyII "
;II" #
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
respMM 
.MM 
	AddHeaderMM 
(MM 
$strMM )
,MM) *
$strMM+ >
+MM? @
dataMMA E
)MME F
;MMF G
}NN 
}OO 	
}PP 
privateSS 
voidSS 
GoodB2GSS 
(SS 
HttpRequestSS $
reqSS% (
,SS( )
HttpResponseSS* 6
respSS7 ;
)SS; <
{TT 
stringUU 
dataCopyUU 
;UU 
{VV 	
stringWW 
dataWW 
;WW 
dataXX 
=XX 
$strXX 
;XX 
{ZZ 
if[[ 
([[ 
req[[ 
.[[ 
QueryString[[ #
[[[# $
$str[[$ (
][[( )
!=[[* ,
null[[- 1
)[[1 2
{\\ 
data]] 
=]] 
req]] 
.]] 
QueryString]] *
[]]* +
$str]]+ /
]]]/ 0
;]]0 1
}^^ 
}__ 
dataCopy`` 
=`` 
data`` 
;`` 
}aa 	
{bb 	
stringcc 
datacc 
=cc 
dataCopycc "
;cc" #
ifdd 
(dd 
datadd 
!=dd 
nulldd 
)dd 
{ee 
datagg 
=gg 
HttpUtilitygg "
.gg" #
	UrlEncodegg# ,
(gg, -
datagg- 1
,gg1 2
Encodinggg3 ;
.gg; <
UTF8gg< @
)gg@ A
;ggA B
resphh 
.hh 
	AddHeaderhh 
(hh 
$strhh )
,hh) *
$strhh+ >
+hh? @
datahhA E
)hhE F
;hhF G
}ii 
}jj 	
}kk 
}mm 
}nn ç)
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_41 F
:G H
AbstractTestCaseWebI \
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
data** 
=** 
$str** 
;** 
{,, 	
if-- 
(-- 
req-- 
.-- 
QueryString-- 
[--  
$str--  $
]--$ %
!=--& (
null--) -
)--- .
{.. 
data// 
=// 
req// 
.// 
QueryString// &
[//& '
$str//' +
]//+ ,
;//, -
}00 
}11 	
BadSink22 
(22 
data22 
,22 
req22 
,22 
resp22  
)22! "
;22" #
}33 
public66 

override66 
void66 
Good66 
(66 
HttpRequest66 )
req66* -
,66- .
HttpResponse66/ ;
resp66< @
)66@ A
{77 
GoodG2B88 
(88 
req88 
,88 
resp88 
)88 
;88 
GoodB2G99 
(99 
req99 
,99 
resp99 
)99 
;99 
}:: 
private<< 
static<< 
void<< 
GoodG2BSink<< #
(<<# $
string<<$ *
data<<+ /
,<<0 1
HttpRequest<<2 =
req<<> A
,<<A B
HttpResponse<<C O
resp<<P T
)<<T U
{== 
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataJJ 
=JJ 
$strJJ 
;JJ 
GoodG2BSinkKK 
(KK 
dataKK 
,KK 
reqKK 
,KK 
respKK  $
)KK% &
;KK& '
}LL 
privateNN 
staticNN 
voidNN 
GoodB2GSinkNN #
(NN# $
stringNN$ *
dataNN+ /
,NN0 1
HttpRequestNN2 =
reqNN> A
,NNA B
HttpResponseNNC O
respNNP T
)NNT U
{OO 
ifPP 

(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 	
dataSS 
=SS 
HttpUtilitySS 
.SS 
	UrlEncodeSS (
(SS( )
dataSS) -
,SS- .
EncodingSS/ 7
.SS7 8
UTF8SS8 <
)SS< =
;SS= >
respTT 
.TT 
	AddHeaderTT 
(TT 
$strTT %
,TT% &
$strTT' :
+TT; <
dataTT= A
)TTA B
;TTB C
}UU 	
}VV 
privateYY 
staticYY 
voidYY 
GoodB2GYY 
(YY  
HttpRequestYY  +
reqYY, /
,YY/ 0
HttpResponseYY1 =
respYY> B
)YYB C
{ZZ 
string[[ 
data[[ 
;[[ 
data\\ 
=\\ 
$str\\ 
;\\ 
{^^ 	
if__ 
(__ 
req__ 
.__ 
QueryString__ 
[__  
$str__  $
]__$ %
!=__& (
null__) -
)__- .
{`` 
dataaa 
=aa 
reqaa 
.aa 
QueryStringaa &
[aa& '
$straa' +
]aa+ ,
;aa, -
}bb 
}cc 	
GoodB2GSinkdd 
(dd 
datadd 
,dd 
reqdd 
,dd 
respdd  $
)dd% &
;dd& '
}ee 
}gg 
}hh µ*
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_42 F
:G H
AbstractTestCaseWebI \
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
return)) 
data)) 
;)) 
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
=.. 
	BadSource.. 
(..  
req..  #
,..# $
resp..% )
)..) *
;..* +
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp22 
.22 
	AddHeader22 
(22 
$str22 %
,22% &
$str22' :
+22; <
data22= A
)22A B
;22B C
}33 	
}44 
private88 
static88 
string88 
GoodG2BSource88 '
(88' (
HttpRequest88( 3
req884 7
,887 8
HttpResponse889 E
resp88F J
)88J K
{99 
string:: 
data:: 
;:: 
data<< 
=<< 
$str<< 
;<< 
return== 
data== 
;== 
}>> 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
=BB 
GoodG2BSourceBB #
(BB# $
reqBB$ '
,BB' (
respBB) -
)BB- .
;BB. /
ifCC 

(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 	
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF %
,FF% &
$strFF' :
+FF; <
dataFF= A
)FFA B
;FFB C
}GG 	
}HH 
privateKK 
staticKK 
stringKK 
GoodB2GSourceKK '
(KK' (
HttpRequestKK( 3
reqKK4 7
,KK7 8
HttpResponseKK9 E
respKKF J
)KKJ K
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{PP 	
ifQQ 
(QQ 
reqQQ 
.QQ 
QueryStringQQ 
[QQ  
$strQQ  $
]QQ$ %
!=QQ& (
nullQQ) -
)QQ- .
{RR 
dataSS 
=SS 
reqSS 
.SS 
QueryStringSS &
[SS& '
$strSS' +
]SS+ ,
;SS, -
}TT 
}UU 	
returnVV 
dataVV 
;VV 
}WW 
privateYY 
staticYY 
voidYY 
GoodB2GYY 
(YY  
HttpRequestYY  +
reqYY, /
,YY/ 0
HttpResponseYY1 =
respYY> B
)YYB C
{ZZ 
string[[ 
data[[ 
=[[ 
GoodB2GSource[[ #
([[# $
req[[$ '
,[[' (
resp[[) -
)[[- .
;[[. /
if\\ 

(\\ 
data\\ 
!=\\ 
null\\ 
)\\ 
{]] 	
data__ 
=__ 
HttpUtility__ 
.__ 
	UrlEncode__ (
(__( )
data__) -
,__- .
Encoding__/ 7
.__7 8
UTF8__8 <
)__< =
;__= >
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` %
,``% &
$str``' :
+``; <
data``= A
)``A B
;``B C
}aa 	
}bb 
publicdd 

overridedd 
voiddd 
Gooddd 
(dd 
HttpRequestdd )
reqdd* -
,dd- .
HttpResponsedd/ ;
respdd< @
)dd@ A
{ee 
GoodG2Bff 
(ff 
reqff 
,ff 
respff 
)ff 
;ff 
GoodB2Ggg 
(gg 
reqgg 
,gg 
respgg 
)gg 
;gg 
}hh 
}jj 
}kk Ú,
ÁC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class L
@CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_45 F
:G H
AbstractTestCaseWebI \
{ 
private 
string 
dataBad 
; 
private 
string 
dataGoodG2B 
; 
private   
string   
dataGoodB2G   
;   
private"" 
void"" 
BadSink"" 
("" 
HttpRequest"" $
req""% (
,""( )
HttpResponse""* 6
resp""7 ;
)""; <
{## 
string$$ 
data$$ 
=$$ 
dataBad$$ 
;$$ 
if%% 

(%% 
data%% 
!=%% 
null%% 
)%% 
{&& 	
resp(( 
.(( 
	AddHeader(( 
((( 
$str(( %
,((% &
$str((' :
+((; <
data((= A
)((A B
;((B C
})) 	
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
data// 
=// 
$str// 
;// 
{11 	
if22 
(22 
req22 
.22 
QueryString22 
[22  
$str22  $
]22$ %
!=22& (
null22) -
)22- .
{33 
data44 
=44 
req44 
.44 
QueryString44 &
[44& '
$str44' +
]44+ ,
;44, -
}55 
}66 	
dataBad77 
=77 
data77 
;77 
BadSink88 
(88 
req88 
,88 
resp88 
)88 
;88 
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateBB 
voidBB 
GoodG2BSinkBB 
(BB 
HttpRequestBB (
reqBB) ,
,BB, -
HttpResponseBB. :
respBB; ?
)BB? @
{CC 
stringDD 
dataDD 
=DD 
dataGoodG2BDD !
;DD! "
ifEE 

(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 	
respHH 
.HH 
	AddHeaderHH 
(HH 
$strHH %
,HH% &
$strHH' :
+HH; <
dataHH= A
)HHA B
;HHB C
}II 	
}JJ 
privateMM 
voidMM 
GoodG2BMM 
(MM 
HttpRequestMM $
reqMM% (
,MM( )
HttpResponseMM* 6
respMM7 ;
)MM; <
{NN 
stringOO 
dataOO 
;OO 
dataQQ 
=QQ 
$strQQ 
;QQ 
dataGoodG2BRR 
=RR 
dataRR 
;RR 
GoodG2BSinkSS 
(SS 
reqSS 
,SS 
respSS 
)SS 
;SS 
}TT 
privateVV 
voidVV 
GoodB2GSinkVV 
(VV 
HttpRequestVV (
reqVV) ,
,VV, -
HttpResponseVV. :
respVV; ?
)VV? @
{WW 
stringXX 
dataXX 
=XX 
dataGoodB2GXX !
;XX! "
ifYY 

(YY 
dataYY 
!=YY 
nullYY 
)YY 
{ZZ 	
data\\ 
=\\ 
HttpUtility\\ 
.\\ 
	UrlEncode\\ (
(\\( )
data\\) -
,\\- .
Encoding\\/ 7
.\\7 8
UTF8\\8 <
)\\< =
;\\= >
resp]] 
.]] 
	AddHeader]] 
(]] 
$str]] %
,]]% &
$str]]' :
+]]; <
data]]= A
)]]A B
;]]B C
}^^ 	
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
dataee 
=ee 
$stree 
;ee 
{gg 	
ifhh 
(hh 
reqhh 
.hh 
QueryStringhh 
[hh  
$strhh  $
]hh$ %
!=hh& (
nullhh) -
)hh- .
{ii 
datajj 
=jj 
reqjj 
.jj 
QueryStringjj &
[jj& '
$strjj' +
]jj+ ,
;jj, -
}kk 
}ll 	
dataGoodB2Gmm 
=mm 
datamm 
;mm 
GoodB2GSinknn 
(nn 
reqnn 
,nn 
respnn 
)nn 
;nn 
}oo 
}qq 
}rr Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_51a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_51b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))c d
;))d e
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_51b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99g h
;99h i
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_51bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHg h
;HHh i
}II 
}KK 
}LL Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_51b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_52c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53d I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53d'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53d-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_53d G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54b)) I
.))I J
BadSink))J Q
())Q R
data))R V
,))W X
req))Y \
,))\ ]
resp))^ b
)))b c
;))c d
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
HttpRequest44 $
req44% (
,44( )
HttpResponse44* 6
resp447 ;
)44; <
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54b99 I
.99I J
GoodG2BSink99J U
(99U V
data99V Z
,99[ \
req99] `
,99` a
resp99b f
)99f g
;99g h
}:: 
private== 
void== 
GoodB2G== 
(== 
HttpRequest== $
req==% (
,==( )
HttpResponse==* 6
resp==7 ;
)==; <
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
dataHHV Z
,HH[ \
reqHH] `
,HH` a
respHHb f
)HHf g
;HHg h
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54b G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54c I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54c'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54c-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54c G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54d I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54d'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54d-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54d G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54e I
.I J
BadSinkJ Q
(Q R
dataR V
,W X
reqY \
,\ ]
resp^ b
)b c
;c d
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54e'' I
.''I J
GoodG2BSink''J U
(''U V
data''V Z
,''[ \
req''] `
,''` a
resp''b f
)''f g
;''g h
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54e-- I
.--I J
GoodB2GSink--J U
(--U V
data--V Z
,--[ \
req--] `
,--` a
resp--b f
)--f g
;--g h
}.. 
}00 
}11 Ç
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_54e G
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> Ê
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_61a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_61b W
.W X
	BadSourceX a
(a b
reqb e
,e f
respg k
)k l
;l m
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_61b11 W
.11W X
GoodG2BSource11X e
(11e f
req11f i
,11i j
resp11k o
)11o p
;11p q
if22 

(22 
data22 
!=22 
null22 
)22 
{33 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_61b<< W
.<<W X
GoodB2GSource<<X e
(<<e f
req<<f i
,<<i j
resp<<k o
)<<o p
;<<p q
if== 

(== 
data== 
!=== 
null== 
)== 
{>> 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
data@@) -
,@@- .
Encoding@@/ 7
.@@7 8
UTF8@@8 <
)@@< =
;@@= >
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF Ä
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_61b G
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
return)) 
data)) 
;)) 
}** 
public// 

static// 
string// 
GoodG2BSource// &
(//& '
HttpRequest//' 2
req//3 6
,//6 7
HttpResponse//8 D
resp//E I
)//I J
{00 
string11 
data11 
;11 
data33 
=33 
$str33 
;33 
return44 
data44 
;44 
}55 
public88 

static88 
string88 
GoodB2GSource88 &
(88& '
HttpRequest88' 2
req883 6
,886 7
HttpResponse888 D
resp88E I
)88I J
{99 
string:: 
data:: 
;:: 
data;; 
=;; 
$str;; 
;;; 
{== 	
if>> 
(>> 
req>> 
.>> 
QueryString>> 
[>>  
$str>>  $
]>>$ %
!=>>& (
null>>) -
)>>- .
{?? 
data@@ 
=@@ 
req@@ 
.@@ 
QueryString@@ &
[@@& '
$str@@' +
]@@+ ,
;@@, -
}AA 
}BB 	
returnCC 
dataCC 
;CC 
}DD 
}FF 
}GG ¡#
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_66a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	
string)) 
[)) 
])) 
	dataArray)) 
=)) 
new))  
string))! '
[))' (
$num))( )
]))) *
;))* +
	dataArray** 
[** 
$num** 
]** 
=** 
data** 
;** M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_66b++ I
.++I J
BadSink++J Q
(++Q R
	dataArray++R [
,++\ ]
req++^ a
,++a b
resp++c g
)++h i
;++i j
},, 
public// 

override// 
void// 
Good// 
(// 
HttpRequest// )
req//* -
,//- .
HttpResponse/// ;
resp//< @
)//@ A
{00 
GoodG2B11 
(11 
req11 
,11 
resp11 
)11 
;11 
GoodB2G22 
(22 
req22 
,22 
resp22 
)22 
;22 
}33 
private66 
static66 
void66 
GoodG2B66 
(66  
HttpRequest66  +
req66, /
,66/ 0
HttpResponse661 =
resp66> B
)66B C
{77 
string88 
data88 
;88 
data:: 
=:: 
$str:: 
;:: 
string;; 
[;; 
];; 
	dataArray;; 
=;; 
new;;  
string;;! '
[;;' (
$num;;( )
];;) *
;;;* +
	dataArray<< 
[<< 
$num<< 
]<< 
=<< 
data<< 
;<< M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_66b== I
.==I J
GoodG2BSink==J U
(==U V
	dataArray==V _
,==` a
req==b e
,==e f
resp==g k
)==l m
;==m n
}>> 
privateAA 
staticAA 
voidAA 
GoodB2GAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
stringCC 
dataCC 
;CC 
dataDD 
=DD 
$strDD 
;DD 
{FF 	
ifGG 
(GG 
reqGG 
.GG 
QueryStringGG 
[GG  
$strGG  $
]GG$ %
!=GG& (
nullGG) -
)GG- .
{HH 
dataII 
=II 
reqII 
.II 
QueryStringII &
[II& '
$strII' +
]II+ ,
;II, -
}JJ 
}KK 	
stringLL 
[LL 
]LL 
	dataArrayLL 
=LL 
newLL  
stringLL! '
[LL' (
$numLL( )
]LL) *
;LL* +
	dataArrayMM 
[MM 
$numMM 
]MM 
=MM 
dataMM 
;MM M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_66bNN I
.NNI J
GoodB2GSinkNNJ U
(NNU V
	dataArrayNNV _
,NN` a
reqNNb e
,NNe f
respNNg k
)NNl m
;NNm n
}OO 
}QQ 
}RR Ñ
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_66b G
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ß#
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

class 
	Container 
{ 
public   
string   
containerOne   "
;  " #
}!! 
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
data&& 
=&& 
$str&& 
;&& 
{(( 	
if)) 
()) 
req)) 
.)) 
QueryString)) 
[))  
$str))  $
]))$ %
!=))& (
null))) -
)))- .
{** 
data++ 
=++ 
req++ 
.++ 
QueryString++ &
[++& '
$str++' +
]+++ ,
;++, -
},, 
}-- 	
	Container.. 
dataContainer.. 
=..  !
new.." %
	Container..& /
(../ 0
)..0 1
;..1 2
dataContainer// 
.// 
containerOne// "
=//# $
data//% )
;//) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67b00 I
.00I J
BadSink00J Q
(00Q R
dataContainer00R _
,00` a
req00b e
,00e f
resp00g k
)00l m
;00m n
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? 
	Container@@ 
dataContainer@@ 
=@@  !
new@@" %
	Container@@& /
(@@/ 0
)@@0 1
;@@1 2
dataContainerAA 
.AA 
containerOneAA "
=AA# $
dataAA% )
;AA) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataContainerBBV c
,BBd e
reqBBf i
,BBi j
respBBk o
)BBp q
;BBq r
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
	ContainerQQ 
dataContainerQQ 
=QQ  !
newQQ" %
	ContainerQQ& /
(QQ/ 0
)QQ0 1
;QQ1 2
dataContainerRR 
.RR 
containerOneRR "
=RR# $
dataRR% )
;RR) *M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67bSS I
.SSI J
GoodB2GSinkSSJ U
(SSU V
dataContainerSSV c
,SSd e
reqSSf i
,SSi j
respSSk o
)SSp q
;SSq r
}TT 
}VV 
}WW ¾
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67b G
{ 
public 

static 
void 
BadSink 
( M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67a `
.` a
	Containera j
dataContainerk x
,y z
HttpRequest	{ 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67a**# d
.**d e
	Container**e n
dataContainer**o |
,**} ~
HttpRequest	** 
req
** 
,
** 
HttpResponse
** 
resp
** ¡
)
**¡ ¢
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_67a55# d
.55d e
	Container55e n
dataContainer55o |
,55} ~
HttpRequest	55 
req
55 
,
55 
HttpResponse
55 
resp
55 ¡
)
55¡ ¢
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA Ô
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

static 
string 
data 
; 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68b** I
.**I J
BadSink**J Q
(**Q R
req**R U
,**U V
resp**W [
)**[ \
;**\ ]
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
HttpRequest55  +
req55, /
,55/ 0
HttpResponse551 =
resp55> B
)55B C
{66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68b99 I
.99I J
GoodG2BSink99J U
(99U V
req99V Y
,99Y Z
resp99[ _
)99_ `
;99` a
}:: 
private== 
static== 
void== 
GoodB2G== 
(==  
HttpRequest==  +
req==, /
,==/ 0
HttpResponse==1 =
resp==> B
)==B C
{>> 
data?? 
=?? 
$str?? 
;?? 
{AA 	
ifBB 
(BB 
reqBB 
.BB 
QueryStringBB 
[BB  
$strBB  $
]BB$ %
!=BB& (
nullBB) -
)BB- .
{CC 
dataDD 
=DD 
reqDD 
.DD 
QueryStringDD &
[DD& '
$strDD' +
]DD+ ,
;DD, -
}EE 
}FF 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68bGG I
.GGI J
GoodB2GSinkGGJ U
(GGU V
reqGGV Y
,GGY Z
respGG[ _
)GG_ `
;GG` a
}HH 
}JJ 
}KK Ä
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68b G
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68a W
.W X
dataX \
;\ ]
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68a,, W
.,,W X
data,,X \
;,,\ ]
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_68a77 W
.77W X
data77X \
;77\ ]
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_71a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_71b)) I
.))I J
BadSink))J Q
())Q R
())R S
Object))S Y
)))Y Z
data))Z ^
,))_ `
req))a d
,))d e
resp))f j
)))k l
;))l m
}** 
public-- 

override-- 
void-- 
Good-- 
(-- 
HttpRequest-- )
req--* -
,--- .
HttpResponse--/ ;
resp--< @
)--@ A
{.. 
GoodG2B// 
(// 
req// 
,// 
resp// 
)// 
;// 
GoodB2G00 
(00 
req00 
,00 
resp00 
)00 
;00 
}11 
private44 
static44 
void44 
GoodG2B44 
(44  
HttpRequest44  +
req44, /
,44/ 0
HttpResponse441 =
resp44> B
)44B C
{55 
string66 
data66 
;66 
data88 
=88 
$str88 
;88 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_71b99 I
.99I J
GoodG2BSink99J U
(99U V
(99V W
Object99W ]
)99] ^
data99^ b
,99c d
req99e h
,99h i
resp99j n
)99o p
;99p q
}:: 
private== 
static== 
void== 
GoodB2G== 
(==  
HttpRequest==  +
req==, /
,==/ 0
HttpResponse==1 =
resp==> B
)==B C
{>> 
string?? 
data?? 
;?? 
data@@ 
=@@ 
$str@@ 
;@@ 
{BB 	
ifCC 
(CC 
reqCC 
.CC 
QueryStringCC 
[CC  
$strCC  $
]CC$ %
!=CC& (
nullCC) -
)CC- .
{DD 
dataEE 
=EE 
reqEE 
.EE 
QueryStringEE &
[EE& '
$strEE' +
]EE+ ,
;EE, -
}FF 
}GG 	M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_71bHH I
.HHI J
GoodB2GSinkHHJ U
(HHU V
(HHV W
ObjectHHW ]
)HH] ^
dataHH^ b
,HHc d
reqHHe h
,HHh i
respHHj n
)HHo p
;HHp q
}II 
}KK 
}LL 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_71b G
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ÿ*
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_72a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	
	Hashtable** 
dataHashtable** 
=**  !
new**" %
	Hashtable**& /
(**/ 0
$num**0 1
)**1 2
;**2 3
dataHashtable++ 
.++ 
Add++ 
(++ 
$num++ 
,++ 
data++ !
)++! "
;++" #
dataHashtable,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, !
),,! "
;,," #
dataHashtable-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- !
)--! "
;--" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_72b.. I
...I J
BadSink..J Q
(..Q R
dataHashtable..R _
,..` a
req..b e
,..e f
resp..g k
)..l m
;..m n
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 
	Hashtable>> 
dataHashtable>> 
=>>  !
new>>" %
	Hashtable>>& /
(>>/ 0
$num>>0 1
)>>1 2
;>>2 3
dataHashtable?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? !
)??! "
;??" #
dataHashtable@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ !
)@@! "
;@@" #
dataHashtableAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA !
)AA! "
;AA" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_72bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataHashtableBBV c
,BBd e
reqBBf i
,BBi j
respBBk o
)BBp q
;BBq r
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
	HashtableQQ 
dataHashtableQQ 
=QQ  !
newQQ" %
	HashtableQQ& /
(QQ/ 0
$numQQ0 1
)QQ1 2
;QQ2 3
dataHashtableRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR !
)RR! "
;RR" #
dataHashtableSS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS !
)SS! "
;SS" #
dataHashtableTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT !
)TT! "
;TT" #M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_72bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataHashtableUUV c
,UUd e
reqUUf i
,UUi j
respUUk o
)UUp q
;UUq r
}VV 
}XX 
}YY ®
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_72b G
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB +
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_73a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	

LinkedList** 
<** 
string** 
>** 
dataLinkedList** )
=*** +
new**, /

LinkedList**0 :
<**: ;
string**; A
>**A B
(**B C
)**C D
;**D E
dataLinkedList++ 
.++ 
AddLast++ 
(++ 
data++ #
)++# $
;++$ %
dataLinkedList,, 
.,, 
AddLast,, 
(,, 
data,, #
),,# $
;,,$ %
dataLinkedList-- 
.-- 
AddLast-- 
(-- 
data-- #
)--# $
;--$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_73b.. I
...I J
BadSink..J Q
(..Q R
dataLinkedList..R `
,..a b
req..c f
,..f g
resp..h l
)..m n
;..n o
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 

LinkedList>> 
<>> 
string>> 
>>> 
dataLinkedList>> )
=>>* +
new>>, /

LinkedList>>0 :
<>>: ;
string>>; A
>>>A B
(>>B C
)>>C D
;>>D E
dataLinkedList?? 
.?? 
AddLast?? 
(?? 
data?? #
)??# $
;??$ %
dataLinkedList@@ 
.@@ 
AddLast@@ 
(@@ 
data@@ #
)@@# $
;@@$ %
dataLinkedListAA 
.AA 
AddLastAA 
(AA 
dataAA #
)AA# $
;AA$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_73bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataLinkedListBBV d
,BBe f
reqBBg j
,BBj k
respBBl p
)BBq r
;BBr s
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	

LinkedListQQ 
<QQ 
stringQQ 
>QQ 
dataLinkedListQQ )
=QQ* +
newQQ, /

LinkedListQQ0 :
<QQ: ;
stringQQ; A
>QQA B
(QQB C
)QQC D
;QQD E
dataLinkedListRR 
.RR 
AddLastRR 
(RR 
dataRR #
)RR# $
;RR$ %
dataLinkedListSS 
.SS 
AddLastSS 
(SS 
dataSS #
)SS# $
;SS$ %
dataLinkedListTT 
.TT 
AddLastTT 
(TT 
dataTT #
)TT# $
;TT$ %M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_73bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataLinkedListUUV d
,UUe f
reqUUg j
,UUj k
respUUl p
)UUq r
;UUr s
}VV 
}XX 
}YY ð
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_73b G
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB Ê.
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_74a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{$$ 	
if%% 
(%% 
req%% 
.%% 
QueryString%% 
[%%  
$str%%  $
]%%$ %
!=%%& (
null%%) -
)%%- .
{&& 
data'' 
='' 
req'' 
.'' 
QueryString'' &
[''& '
$str''' +
]''+ ,
;'', -
}(( 
})) 	

Dictionary** 
<** 
int** 
,** 
string** 
>** 
dataDictionary** -
=**. /
new**0 3

Dictionary**4 >
<**> ?
int**? B
,**B C
string**C I
>**I J
(**J K
)**K L
;**L M
dataDictionary++ 
.++ 
Add++ 
(++ 
$num++ 
,++ 
data++ "
)++" #
;++# $
dataDictionary,, 
.,, 
Add,, 
(,, 
$num,, 
,,, 
data,, "
),," #
;,,# $
dataDictionary-- 
.-- 
Add-- 
(-- 
$num-- 
,-- 
data-- "
)--" #
;--# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_74b.. I
...I J
BadSink..J Q
(..Q R
dataDictionary..R `
,..a b
req..c f
,..f g
resp..h l
)..m n
;..n o
}// 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
GoodG2B44 
(44 
req44 
,44 
resp44 
)44 
;44 
GoodB2G55 
(55 
req55 
,55 
resp55 
)55 
;55 
}66 
private99 
static99 
void99 
GoodG2B99 
(99  
HttpRequest99  +
req99, /
,99/ 0
HttpResponse991 =
resp99> B
)99B C
{:: 
string;; 
data;; 
;;; 
data== 
=== 
$str== 
;== 

Dictionary>> 
<>> 
int>> 
,>> 
string>> 
>>> 
dataDictionary>> -
=>>. /
new>>0 3

Dictionary>>4 >
<>>> ?
int>>? B
,>>B C
string>>C I
>>>I J
(>>J K
)>>K L
;>>L M
dataDictionary?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? "
)??" #
;??# $
dataDictionary@@ 
.@@ 
Add@@ 
(@@ 
$num@@ 
,@@ 
data@@ "
)@@" #
;@@# $
dataDictionaryAA 
.AA 
AddAA 
(AA 
$numAA 
,AA 
dataAA "
)AA" #
;AA# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_74bBB I
.BBI J
GoodG2BSinkBBJ U
(BBU V
dataDictionaryBBV d
,BBe f
reqBBg j
,BBj k
respBBl p
)BBq r
;BBr s
}CC 
privateFF 
staticFF 
voidFF 
GoodB2GFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	

DictionaryQQ 
<QQ 
intQQ 
,QQ 
stringQQ 
>QQ 
dataDictionaryQQ -
=QQ. /
newQQ0 3

DictionaryQQ4 >
<QQ> ?
intQQ? B
,QQB C
stringQQC I
>QQI J
(QQJ K
)QQK L
;QQL M
dataDictionaryRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR "
)RR" #
;RR# $
dataDictionarySS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS "
)SS" #
;SS# $
dataDictionaryTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT "
)TT" #
;TT# $M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_74bUU I
.UUI J
GoodB2GSinkUUJ U
(UUU V
dataDictionaryUUV d
,UUe f
reqUUg j
,UUj k
respUUl p
)UUq r
;UUr s
}VV 
}XX 
}YY 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_74b G
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB Æ<
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_75a G
:H I
AbstractTestCaseWebJ ]
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{&& 	
if'' 
('' 
req'' 
.'' 
QueryString'' 
[''  
$str''  $
]''$ %
!=''& (
null'') -
)''- .
{(( 
data)) 
=)) 
req)) 
.)) 
QueryString)) &
[))& '
$str))' +
]))+ ,
;)), -
}** 
}++ 	
byte-- 
[-- 
]-- 
dataSerialized-- 
=-- 
null--  $
;--$ %
try.. 
{// 	
BinaryFormatter00 
bf00 
=00  
new00! $
BinaryFormatter00% 4
(004 5
)005 6
;006 7
using11 
(11 
var11 
ms11 
=11 
new11 
MemoryStream11  ,
(11, -
)11- .
)11. /
{22 
bf33 
.33 
	Serialize33 
(33 
ms33 
,33  
data33! %
)33% &
;33& '
dataSerialized44 
=44  
ms44! #
.44# $
ToArray44$ +
(44+ ,
)44, -
;44- .
}55 M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_75b66 M
.66M N
BadSink66N U
(66U V
dataSerialized66V d
,66e f
req66g j
,66j k
resp66l p
)66q r
;66r s
}77 	
catch88 
(88 "
SerializationException88 %
exceptSerialize88& 5
)885 6
{99 	
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: 
.:: 
LogLevel:: '
.::' (
Warn::( ,
,::, -
$str::. X
,::X Y
exceptSerialize::Z i
)::i j
;::j k
};; 	
}<< 
public?? 

override?? 
void?? 
Good?? 
(?? 
HttpRequest?? )
req??* -
,??- .
HttpResponse??/ ;
resp??< @
)??@ A
{@@ 
GoodG2BAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
GoodB2GBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
;HH 
dataII 
=II 
$strII 
;II 
{KK 	
ifLL 
(LL 
reqLL 
.LL 
QueryStringLL 
[LL  
$strLL  $
]LL$ %
!=LL& (
nullLL) -
)LL- .
{MM 
dataNN 
=NN 
reqNN 
.NN 
QueryStringNN &
[NN& '
$strNN' +
]NN+ ,
;NN, -
}OO 
}PP 	
byteRR 
[RR 
]RR 
dataSerializedRR 
=RR 
nullRR  $
;RR$ %
trySS 
{TT 	
BinaryFormatterUU 
bfUU 
=UU  
newUU! $
BinaryFormatterUU% 4
(UU4 5
)UU5 6
;UU6 7
usingVV 
(VV 
varVV 
msVV 
=VV 
newVV 
MemoryStreamVV  ,
(VV, -
)VV- .
)VV. /
{WW 
bfXX 
.XX 
	SerializeXX 
(XX 
msXX 
,XX  
dataXX! %
)XX% &
;XX& '
dataSerializedYY 
=YY  
msYY! #
.YY# $
ToArrayYY$ +
(YY+ ,
)YY, -
;YY- .
}ZZ M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_75b[[ M
.[[M N
GoodG2BSink[[N Y
([[Y Z
dataSerialized[[Z h
,[[i j
req[[k n
,[[n o
resp[[p t
)[[u v
;[[v w
}\\ 	
catch]] 
(]] "
SerializationException]] %
exceptSerialize]]& 5
)]]5 6
{^^ 	
IO__ 
.__ 
Logger__ 
.__ 
Log__ 
(__ 
NLog__ 
.__ 
LogLevel__ '
.__' (
Warn__( ,
,__, -
$str__. X
,__X Y
exceptSerialize__Z i
)__i j
;__j k
}`` 	
}aa 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
HttpRequestdd  +
reqdd, /
,dd/ 0
HttpResponsedd1 =
respdd> B
)ddB C
{ee 
stringff 
dataff 
;ff 
datagg 
=gg 
$strgg 
;gg 
{ii 	
ifjj 
(jj 
reqjj 
.jj 
QueryStringjj 
[jj  
$strjj  $
]jj$ %
!=jj& (
nulljj) -
)jj- .
{kk 
datall 
=ll 
reqll 
.ll 
QueryStringll &
[ll& '
$strll' +
]ll+ ,
;ll, -
}mm 
}nn 	
bytepp 
[pp 
]pp 
dataSerializedpp 
=pp 
nullpp  $
;pp$ %
tryqq 
{rr 	
BinaryFormatterss 
bfss 
=ss  
newss! $
BinaryFormatterss% 4
(ss4 5
)ss5 6
;ss6 7
usingtt 
(tt 
vartt 
mstt 
=tt 
newtt 
MemoryStreamtt  ,
(tt, -
)tt- .
)tt. /
{uu 
bfvv 
.vv 
	Serializevv 
(vv 
msvv 
,vv  
datavv! %
)vv% &
;vv& '
dataSerializedww 
=ww  
msww! #
.ww# $
ToArrayww$ +
(ww+ ,
)ww, -
;ww- .
}xx M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_75byy M
.yyM N
GoodB2GSinkyyN Y
(yyY Z
dataSerializedyyZ h
,yyi j
reqyyk n
,yyn o
respyyp t
)yyu v
;yyv w
}zz 	
catch{{ 
({{ "
SerializationException{{ %
exceptSerialize{{& 5
){{5 6
{|| 	
IO}} 
.}} 
Logger}} 
.}} 
Log}} 
(}} 
NLog}} 
.}} 
LogLevel}} '
.}}' (
Warn}}( ,
,}}, -
$str}}. X
,}}X Y
exceptSerialize}}Z i
)}}i j
;}}j k
}~~ 	
} 
} 
} °8
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_75b G
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if,, 
(,, 
data,, 
!=,, 
null,, 
),, 
{-- 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
if`` 
(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
datacc- 1
,cc1 2
Encodingcc3 ;
.cc; <
UTF8cc< @
)cc@ A
;ccA B
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn Ü 
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81a G
:H I
AbstractTestCaseWebJ ]
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
;   
data!! 
=!! 
$str!! 
;!! 
{## 	
if$$ 
($$ 
req$$ 
.$$ 
QueryString$$ 
[$$  
$str$$  $
]$$$ %
!=$$& (
null$$) -
)$$- .
{%% 
data&& 
=&& 
req&& 
.&& 
QueryString&& &
[&&& '
$str&&' +
]&&+ ,
;&&, -
}'' 
}(( 	Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_base)) M

baseObject))N X
=))Y Z
new))[ ^Q
DCWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_bad	))_ £
(
))£ ¤
)
))¤ ¥
;
))¥ ¦

baseObject** 
.** 
Action** 
(** 
data** 
,**  
req**! $
,**$ %
resp**& *
)*** +
;**+ ,
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
HttpRequest.. )
req..* -
,..- .
HttpResponse../ ;
resp..< @
)..@ A
{// 
GoodG2B00 
(00 
req00 
,00 
resp00 
)00 
;00 
GoodB2G11 
(11 
req11 
,11 
resp11 
)11 
;11 
}22 
private55 
void55 
GoodG2B55 
(55 
HttpRequest55 $
req55% (
,55( )
HttpResponse55* 6
resp557 ;
)55; <
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_base:: M

baseObject::N X
=::Y Z
new::[ ^U
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_goodG2B	::_ §
(
::§ ¨
)
::¨ ©
;
::© ª

baseObject;; 
.;; 
Action;; 
(;; 
data;; 
,;;  
req;;! $
,;;$ %
resp;;& *
);;* +
;;;+ ,
}<< 
private?? 
void?? 
GoodB2G?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataBB 
=BB 
$strBB 
;BB 
{DD 	
ifEE 
(EE 
reqEE 
.EE 
QueryStringEE 
[EE  
$strEE  $
]EE$ %
!=EE& (
nullEE) -
)EE- .
{FF 
dataGG 
=GG 
reqGG 
.GG 
QueryStringGG &
[GG& '
$strGG' +
]GG+ ,
;GG, -
}HH 
}II 	Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_baseJJ M

baseObjectJJN X
=JJY Z
newJJ[ ^U
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_goodB2G	JJ_ §
(
JJ§ ¨
)
JJ¨ ©
;
JJ© ª

baseObjectKK 
.KK 
ActionKK 
(KK 
dataKK 
,KK  
reqKK! $
,KK$ %
respKK& *
)KK* +
;KK+ ,
}LL 
}NN 
}OO 	
ÅC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class P
DCWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_bad J
:K LR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_base	M 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& õ
ÆC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 Q
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_base T
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} õ

ÉC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class T
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_goodB2G N
:O PR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_base	Q 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
data##) -
,##- .
Encoding##/ 7
.##7 8
UTF8##8 <
)##< =
;##= >
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( 	
ÉC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class T
HCWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_goodG2B N
:O PR
ECWE113_HTTP_Response_Splitting__Web_QueryString_Web_setHeader_81_base	Q 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' ¡%
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_01 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
void?? 
GoodG2B?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 
ifDD 

(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 	

HttpCookieFF 

cookieSinkFF !
=FF" #
newFF$ '

HttpCookieFF( 2
(FF2 3
$strFF3 9
,FF9 :
dataFF; ?
)FF? @
;FF@ A
respHH 
.HH 
AppendCookieHH 
(HH 

cookieSinkHH (
)HH( )
;HH) *
}II 	
}JJ 
privateMM 
voidMM 
GoodB2GMM 
(MM 
HttpRequestMM $
reqMM% (
,MM( )
HttpResponseMM* 6
respMM7 ;
)MM; <
{NN 
stringOO 
dataOO 
;OO 
dataPP 
=PP 
$strPP 
;PP 
{QQ 	
trySS 
{TT 
dataVV 
=VV 
ConsoleVV 
.VV 
ReadLineVV '
(VV' (
)VV( )
;VV) *
}WW 
catchXX 
(XX 
IOExceptionXX 
exceptIOXX '
)XX' (
{YY 
IOZZ 
.ZZ 
LoggerZZ 
.ZZ 
LogZZ 
(ZZ 
NLogZZ "
.ZZ" #
LogLevelZZ# +
.ZZ+ ,
WarnZZ, 0
,ZZ0 1
exceptIOZZ2 :
,ZZ: ;
$strZZ< W
)ZZW X
;ZZX Y
}[[ 
}\\ 	
if]] 

(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 	

HttpCookie__ 

cookieSink__ !
=__" #
new__$ '

HttpCookie__( 2
(__2 3
$str__3 9
,__9 :
HttpUtility__; F
.__F G
	UrlEncode__G P
(__P Q
data__Q U
,__U V
Encoding__W _
.___ `
UTF8__` d
)__d e
)__e f
;__f g
respaa 
.aa 
AppendCookieaa 
(aa 

cookieSinkaa (
)aa( )
;aa) *
}bb 	
}cc 
}ee 
}ff ÜJ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_02 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
true"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
true88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
falseHH 
)HH 
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
trueSS 
)SS 
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
truebb 
)bb 
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
truemm 
)mm 
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
true|| 
)|| 
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{ 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
false
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
if
¦¦ 

(
¦¦ 
true
¦¦ 
)
¦¦ 
{
§§ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
©© 
try
«« 
{
¬¬ 
data
®® 
=
®® 
Console
®® "
.
®®" #
ReadLine
®®# +
(
®®+ ,
)
®®, -
;
®®- .
}
¯¯ 
catch
°° 
(
°° 
IOException
°° "
exceptIO
°°# +
)
°°+ ,
{
±± 
IO
²² 
.
²² 
Logger
²² 
.
²² 
Log
²² !
(
²²! "
NLog
²²" &
.
²²& '
LogLevel
²²' /
.
²²/ 0
Warn
²²0 4
,
²²4 5
exceptIO
²²6 >
,
²²> ?
$str
²²@ [
)
²²[ \
;
²²\ ]
}
³³ 
}
´´ 
}
µµ 	
else
¶¶ 
{
·· 	
data
ºº 
=
ºº 
null
ºº 
;
ºº 
}
»» 	
if
¼¼ 

(
¼¼ 
true
¼¼ 
)
¼¼ 
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 

HttpCookie
ÀÀ 

cookieSink
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +

HttpCookie
ÀÀ, 6
(
ÀÀ6 7
$str
ÀÀ7 =
,
ÀÀ= >
HttpUtility
ÀÀ? J
.
ÀÀJ K
	UrlEncode
ÀÀK T
(
ÀÀT U
data
ÀÀU Y
,
ÀÀY Z
Encoding
ÀÀ[ c
.
ÀÀc d
UTF8
ÀÀd h
)
ÀÀh i
)
ÀÀi j
;
ÀÀj k
resp
ÂÂ 
.
ÂÂ 
AppendCookie
ÂÂ !
(
ÂÂ! "

cookieSink
ÂÂ" ,
)
ÂÂ, -
;
ÂÂ- .
}
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
HttpRequest
ÇÇ )
req
ÇÇ* -
,
ÇÇ- .
HttpResponse
ÇÇ/ ;
resp
ÇÇ< @
)
ÇÇ@ A
{
ÈÈ 
GoodG2B1
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÊÊ 
(
ÊÊ 
req
ÊÊ 
,
ÊÊ 
resp
ÊÊ 
)
ÊÊ 
;
ÊÊ 
GoodB2G1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodB2G2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}ÏÏ 
}ÐÐ ºM
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_03 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
$num"" 
=="" 
$num"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
$num88 
==88 
$num88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
!=HH 
$numHH 
)HH 
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
$numSS 
==SS 
$numSS 
)SS 
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
$numbb 
==bb 
$numbb 
)bb 
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
$nummm 
==mm 
$nummm 
)mm 
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
$num|| 
==|| 
$num|| 
)|| 
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{ 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
if
¦¦ 

(
¦¦ 
$num
¦¦ 
==
¦¦ 
$num
¦¦ 
)
¦¦ 
{
§§ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
©© 
try
«« 
{
¬¬ 
data
®® 
=
®® 
Console
®® "
.
®®" #
ReadLine
®®# +
(
®®+ ,
)
®®, -
;
®®- .
}
¯¯ 
catch
°° 
(
°° 
IOException
°° "
exceptIO
°°# +
)
°°+ ,
{
±± 
IO
²² 
.
²² 
Logger
²² 
.
²² 
Log
²² !
(
²²! "
NLog
²²" &
.
²²& '
LogLevel
²²' /
.
²²/ 0
Warn
²²0 4
,
²²4 5
exceptIO
²²6 >
,
²²> ?
$str
²²@ [
)
²²[ \
;
²²\ ]
}
³³ 
}
´´ 
}
µµ 	
else
¶¶ 
{
·· 	
data
ºº 
=
ºº 
null
ºº 
;
ºº 
}
»» 	
if
¼¼ 

(
¼¼ 
$num
¼¼ 
==
¼¼ 
$num
¼¼ 
)
¼¼ 
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 

HttpCookie
ÀÀ 

cookieSink
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +

HttpCookie
ÀÀ, 6
(
ÀÀ6 7
$str
ÀÀ7 =
,
ÀÀ= >
HttpUtility
ÀÀ? J
.
ÀÀJ K
	UrlEncode
ÀÀK T
(
ÀÀT U
data
ÀÀU Y
,
ÀÀY Z
Encoding
ÀÀ[ c
.
ÀÀc d
UTF8
ÀÀd h
)
ÀÀh i
)
ÀÀi j
;
ÀÀj k
resp
ÂÂ 
.
ÂÂ 
AppendCookie
ÂÂ !
(
ÂÂ! "

cookieSink
ÂÂ" ,
)
ÂÂ, -
;
ÂÂ- .
}
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
HttpRequest
ÇÇ )
req
ÇÇ* -
,
ÇÇ- .
HttpResponse
ÇÇ/ ;
resp
ÇÇ< @
)
ÇÇ@ A
{
ÈÈ 
GoodG2B1
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÊÊ 
(
ÊÊ 
req
ÊÊ 
,
ÊÊ 
resp
ÊÊ 
)
ÊÊ 
;
ÊÊ 
GoodB2G1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodB2G2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}ÏÏ 
}ÐÐ ®N
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_04 ?
:@ A
AbstractTestCaseWebB U
{ 
private## 
const## 
bool## 
PRIVATE_CONST_TRUE## )
=##* +
true##, 0
;##0 1
private$$ 
const$$ 
bool$$ 
PRIVATE_CONST_FALSE$$ *
=$$+ ,
false$$- 2
;$$2 3
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
PRIVATE_CONST_TRUE)) 
))) 
{** 	
data++ 
=++ 
$str++ 
;++ 
{,, 
try.. 
{// 
data11 
=11 
Console11 "
.11" #
ReadLine11# +
(11+ ,
)11, -
;11- .
}22 
catch33 
(33 
IOException33 "
exceptIO33# +
)33+ ,
{44 
IO55 
.55 
Logger55 
.55 
Log55 !
(55! "
NLog55" &
.55& '
LogLevel55' /
.55/ 0
Warn550 4
,554 5
exceptIO556 >
,55> ?
$str55@ [
)55[ \
;55\ ]
}66 
}77 
}88 	
else99 
{:: 	
data== 
=== 
null== 
;== 
}>> 	
if?? 

(?? 
PRIVATE_CONST_TRUE?? 
)?? 
{@@ 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 

HttpCookieCC 

cookieSinkCC %
=CC& '
newCC( +

HttpCookieCC, 6
(CC6 7
$strCC7 =
,CC= >
dataCC? C
)CCC D
;CCD E
respEE 
.EE 
AppendCookieEE !
(EE! "

cookieSinkEE" ,
)EE, -
;EE- .
}FF 
}GG 	
}HH 
privateLL 
voidLL 
GoodG2B1LL 
(LL 
HttpRequestLL %
reqLL& )
,LL) *
HttpResponseLL+ 7
respLL8 <
)LL< =
{MM 
stringNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_FALSEOO 
)OO  
{PP 	
dataSS 
=SS 
nullSS 
;SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$strXX 
;XX 
}YY 	
ifZZ 

(ZZ 
PRIVATE_CONST_TRUEZZ 
)ZZ 
{[[ 	
if\\ 
(\\ 
data\\ 
!=\\ 
null\\ 
)\\ 
{]] 

HttpCookie^^ 

cookieSink^^ %
=^^& '
new^^( +

HttpCookie^^, 6
(^^6 7
$str^^7 =
,^^= >
data^^? C
)^^C D
;^^D E
resp`` 
.`` 
AppendCookie`` !
(``! "

cookieSink``" ,
)``, -
;``- .
}aa 
}bb 	
}cc 
privateff 
voidff 
GoodG2B2ff 
(ff 
HttpRequestff %
reqff& )
,ff) *
HttpResponseff+ 7
respff8 <
)ff< =
{gg 
stringhh 
datahh 
;hh 
ifii 

(ii 
PRIVATE_CONST_TRUEii 
)ii 
{jj 	
datall 
=ll 
$strll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
nullrr 
;rr 
}ss 	
iftt 

(tt 
PRIVATE_CONST_TRUEtt 
)tt 
{uu 	
ifvv 
(vv 
datavv 
!=vv 
nullvv 
)vv 
{ww 

HttpCookiexx 

cookieSinkxx %
=xx& '
newxx( +

HttpCookiexx, 6
(xx6 7
$strxx7 =
,xx= >
dataxx? C
)xxC D
;xxD E
respzz 
.zz 
AppendCookiezz !
(zz! "

cookieSinkzz" ,
)zz, -
;zz- .
}{{ 
}|| 	
}}} 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PRIVATE_CONST_FALSE
 
)
  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
   
(
   
data
   
!=
   
null
   
)
   
{
¡¡ 

HttpCookie
¢¢ 

cookieSink
¢¢ %
=
¢¢& '
new
¢¢( +

HttpCookie
¢¢, 6
(
¢¢6 7
$str
¢¢7 =
,
¢¢= >
HttpUtility
¢¢? J
.
¢¢J K
	UrlEncode
¢¢K T
(
¢¢T U
data
¢¢U Y
,
¢¢Y Z
Encoding
¢¢[ c
.
¢¢c d
UTF8
¢¢d h
)
¢¢h i
)
¢¢i j
;
¢¢j k
resp
¤¤ 
.
¤¤ 
AppendCookie
¤¤ !
(
¤¤! "

cookieSink
¤¤" ,
)
¤¤, -
;
¤¤- .
}
¥¥ 
}
¦¦ 	
}
§§ 
private
ªª 
void
ªª 
GoodB2G2
ªª 
(
ªª 
HttpRequest
ªª %
req
ªª& )
,
ªª) *
HttpResponse
ªª+ 7
resp
ªª8 <
)
ªª< =
{
«« 
string
¬¬ 
data
¬¬ 
;
¬¬ 
if
­­ 

(
­­  
PRIVATE_CONST_TRUE
­­ 
)
­­ 
{
®® 	
data
¯¯ 
=
¯¯ 
$str
¯¯ 
;
¯¯ 
{
°° 
try
²² 
{
³³ 
data
µµ 
=
µµ 
Console
µµ "
.
µµ" #
ReadLine
µµ# +
(
µµ+ ,
)
µµ, -
;
µµ- .
}
¶¶ 
catch
·· 
(
·· 
IOException
·· "
exceptIO
··# +
)
··+ ,
{
¸¸ 
IO
¹¹ 
.
¹¹ 
Logger
¹¹ 
.
¹¹ 
Log
¹¹ !
(
¹¹! "
NLog
¹¹" &
.
¹¹& '
LogLevel
¹¹' /
.
¹¹/ 0
Warn
¹¹0 4
,
¹¹4 5
exceptIO
¹¹6 >
,
¹¹> ?
$str
¹¹@ [
)
¹¹[ \
;
¹¹\ ]
}
ºº 
}
»» 
}
¼¼ 	
else
½½ 
{
¾¾ 	
data
ÁÁ 
=
ÁÁ 
null
ÁÁ 
;
ÁÁ 
}
ÂÂ 	
if
ÃÃ 

(
ÃÃ  
PRIVATE_CONST_TRUE
ÃÃ 
)
ÃÃ 
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
data
ÅÅ 
!=
ÅÅ 
null
ÅÅ 
)
ÅÅ 
{
ÆÆ 

HttpCookie
ÇÇ 

cookieSink
ÇÇ %
=
ÇÇ& '
new
ÇÇ( +

HttpCookie
ÇÇ, 6
(
ÇÇ6 7
$str
ÇÇ7 =
,
ÇÇ= >
HttpUtility
ÇÇ? J
.
ÇÇJ K
	UrlEncode
ÇÇK T
(
ÇÇT U
data
ÇÇU Y
,
ÇÇY Z
Encoding
ÇÇ[ c
.
ÇÇc d
UTF8
ÇÇd h
)
ÇÇh i
)
ÇÇi j
;
ÇÇj k
resp
ÉÉ 
.
ÉÉ 
AppendCookie
ÉÉ !
(
ÉÉ! "

cookieSink
ÉÉ" ,
)
ÉÉ, -
;
ÉÉ- .
}
ÊÊ 
}
ËË 	
}
ÌÌ 
public
ÎÎ 

override
ÎÎ 
void
ÎÎ 
Good
ÎÎ 
(
ÎÎ 
HttpRequest
ÎÎ )
req
ÎÎ* -
,
ÎÎ- .
HttpResponse
ÎÎ/ ;
resp
ÎÎ< @
)
ÎÎ@ A
{
ÏÏ 
GoodG2B1
ÐÐ 
(
ÐÐ 
req
ÐÐ 
,
ÐÐ 
resp
ÐÐ 
)
ÐÐ 
;
ÐÐ 
GoodG2B2
ÑÑ 
(
ÑÑ 
req
ÑÑ 
,
ÑÑ 
resp
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodB2G1
ÒÒ 
(
ÒÒ 
req
ÒÒ 
,
ÒÒ 
resp
ÒÒ 
)
ÒÒ 
;
ÒÒ 
GoodB2G2
ÓÓ 
(
ÓÓ 
req
ÓÓ 
,
ÓÓ 
resp
ÓÓ 
)
ÓÓ 
;
ÓÓ 
}
ÔÔ 
}ÖÖ 
}××  M
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_05 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
bool"" 
privateTrue"" 
="" 
true"" #
;""# $
private## 
bool## 
privateFalse## 
=## 
false##  %
;##% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{++ 
try-- 
{.. 
data00 
=00 
Console00 "
.00" #
ReadLine00# +
(00+ ,
)00, -
;00- .
}11 
catch22 
(22 
IOException22 "
exceptIO22# +
)22+ ,
{33 
IO44 
.44 
Logger44 
.44 
Log44 !
(44! "
NLog44" &
.44& '
LogLevel44' /
.44/ 0
Warn440 4
,444 5
exceptIO446 >
,44> ?
$str44@ [
)44[ \
;44\ ]
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
privateTrue>> 
)>> 
{?? 	
if@@ 
(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 

HttpCookieBB 

cookieSinkBB %
=BB& '
newBB( +

HttpCookieBB, 6
(BB6 7
$strBB7 =
,BB= >
dataBB? C
)BBC D
;BBD E
respDD 
.DD 
AppendCookieDD !
(DD! "

cookieSinkDD" ,
)DD, -
;DD- .
}EE 
}FF 	
}GG 
privateKK 
voidKK 
GoodG2B1KK 
(KK 
HttpRequestKK %
reqKK& )
,KK) *
HttpResponseKK+ 7
respKK8 <
)KK< =
{LL 
stringMM 
dataMM 
;MM 
ifNN 

(NN 
privateFalseNN 
)NN 
{OO 	
dataRR 
=RR 
nullRR 
;RR 
}SS 	
elseTT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
ifYY 

(YY 
privateTrueYY 
)YY 
{ZZ 	
if[[ 
([[ 
data[[ 
!=[[ 
null[[ 
)[[ 
{\\ 

HttpCookie]] 

cookieSink]] %
=]]& '
new]]( +

HttpCookie]], 6
(]]6 7
$str]]7 =
,]]= >
data]]? C
)]]C D
;]]D E
resp__ 
.__ 
AppendCookie__ !
(__! "

cookieSink__" ,
)__, -
;__- .
}`` 
}aa 	
}bb 
privateee 
voidee 
GoodG2B2ee 
(ee 
HttpRequestee %
reqee& )
,ee) *
HttpResponseee+ 7
respee8 <
)ee< =
{ff 
stringgg 
datagg 
;gg 
ifhh 

(hh 
privateTruehh 
)hh 
{ii 	
datakk 
=kk 
$strkk 
;kk 
}ll 	
elsemm 
{nn 	
dataqq 
=qq 
nullqq 
;qq 
}rr 	
ifss 

(ss 
privateTruess 
)ss 
{tt 	
ifuu 
(uu 
datauu 
!=uu 
nulluu 
)uu 
{vv 

HttpCookieww 

cookieSinkww %
=ww& '
newww( +

HttpCookieww, 6
(ww6 7
$strww7 =
,ww= >
dataww? C
)wwC D
;wwD E
respyy 
.yy 
AppendCookieyy !
(yy! "

cookieSinkyy" ,
)yy, -
;yy- .
}zz 
}{{ 	
}|| 
private 
void 
GoodB2G1 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
 
string
 
data
 
;
 
if
 

(
 
privateTrue
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
   

HttpCookie
¡¡ 

cookieSink
¡¡ %
=
¡¡& '
new
¡¡( +

HttpCookie
¡¡, 6
(
¡¡6 7
$str
¡¡7 =
,
¡¡= >
HttpUtility
¡¡? J
.
¡¡J K
	UrlEncode
¡¡K T
(
¡¡T U
data
¡¡U Y
,
¡¡Y Z
Encoding
¡¡[ c
.
¡¡c d
UTF8
¡¡d h
)
¡¡h i
)
¡¡i j
;
¡¡j k
resp
££ 
.
££ 
AppendCookie
££ !
(
££! "

cookieSink
££" ,
)
££, -
;
££- .
}
¤¤ 
}
¥¥ 	
}
¦¦ 
private
©© 
void
©© 
GoodB2G2
©© 
(
©© 
HttpRequest
©© %
req
©©& )
,
©©) *
HttpResponse
©©+ 7
resp
©©8 <
)
©©< =
{
ªª 
string
«« 
data
«« 
;
«« 
if
¬¬ 

(
¬¬ 
privateTrue
¬¬ 
)
¬¬ 
{
­­ 	
data
®® 
=
®® 
$str
®® 
;
®® 
{
¯¯ 
try
±± 
{
²² 
data
´´ 
=
´´ 
Console
´´ "
.
´´" #
ReadLine
´´# +
(
´´+ ,
)
´´, -
;
´´- .
}
µµ 
catch
¶¶ 
(
¶¶ 
IOException
¶¶ "
exceptIO
¶¶# +
)
¶¶+ ,
{
·· 
IO
¸¸ 
.
¸¸ 
Logger
¸¸ 
.
¸¸ 
Log
¸¸ !
(
¸¸! "
NLog
¸¸" &
.
¸¸& '
LogLevel
¸¸' /
.
¸¸/ 0
Warn
¸¸0 4
,
¸¸4 5
exceptIO
¸¸6 >
,
¸¸> ?
$str
¸¸@ [
)
¸¸[ \
;
¸¸\ ]
}
¹¹ 
}
ºº 
}
»» 	
else
¼¼ 
{
½½ 	
data
ÀÀ 
=
ÀÀ 
null
ÀÀ 
;
ÀÀ 
}
ÁÁ 	
if
ÂÂ 

(
ÂÂ 
privateTrue
ÂÂ 
)
ÂÂ 
{
ÃÃ 	
if
ÄÄ 
(
ÄÄ 
data
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
)
ÄÄ 
{
ÅÅ 

HttpCookie
ÆÆ 

cookieSink
ÆÆ %
=
ÆÆ& '
new
ÆÆ( +

HttpCookie
ÆÆ, 6
(
ÆÆ6 7
$str
ÆÆ7 =
,
ÆÆ= >
HttpUtility
ÆÆ? J
.
ÆÆJ K
	UrlEncode
ÆÆK T
(
ÆÆT U
data
ÆÆU Y
,
ÆÆY Z
Encoding
ÆÆ[ c
.
ÆÆc d
UTF8
ÆÆd h
)
ÆÆh i
)
ÆÆi j
;
ÆÆj k
resp
ÈÈ 
.
ÈÈ 
AppendCookie
ÈÈ !
(
ÈÈ! "

cookieSink
ÈÈ" ,
)
ÈÈ, -
;
ÈÈ- .
}
ÉÉ 
}
ÊÊ 	
}
ËË 
public
ÍÍ 

override
ÍÍ 
void
ÍÍ 
Good
ÍÍ 
(
ÍÍ 
HttpRequest
ÍÍ )
req
ÍÍ* -
,
ÍÍ- .
HttpResponse
ÍÍ/ ;
resp
ÍÍ< @
)
ÍÍ@ A
{
ÎÎ 
GoodG2B1
ÏÏ 
(
ÏÏ 
req
ÏÏ 
,
ÏÏ 
resp
ÏÏ 
)
ÏÏ 
;
ÏÏ 
GoodG2B2
ÐÐ 
(
ÐÐ 
req
ÐÐ 
,
ÐÐ 
resp
ÐÐ 
)
ÐÐ 
;
ÐÐ 
GoodB2G1
ÑÑ 
(
ÑÑ 
req
ÑÑ 
,
ÑÑ 
resp
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodB2G2
ÒÒ 
(
ÒÒ 
req
ÒÒ 
,
ÒÒ 
resp
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÓÓ 
}ÕÕ 
}ÖÖ íO
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_06 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
const"" 
int"" 
PRIVATE_CONST_FIVE"" (
="") *
$num""+ ,
;"", -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
==''  
$num''  !
)''! "
{(( 	
data)) 
=)) 
$str)) 
;)) 
{** 
try,, 
{-- 
data// 
=// 
Console// "
.//" #
ReadLine//# +
(//+ ,
)//, -
;//- .
}00 
catch11 
(11 
IOException11 "
exceptIO11# +
)11+ ,
{22 
IO33 
.33 
Logger33 
.33 
Log33 !
(33! "
NLog33" &
.33& '
LogLevel33' /
.33/ 0
Warn330 4
,334 5
exceptIO336 >
,33> ?
$str33@ [
)33[ \
;33\ ]
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
PRIVATE_CONST_FIVE== 
====  
$num==  !
)==! "
{>> 	
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 

HttpCookieAA 

cookieSinkAA %
=AA& '
newAA( +

HttpCookieAA, 6
(AA6 7
$strAA7 =
,AA= >
dataAA? C
)AAC D
;AAD E
respCC 
.CC 
AppendCookieCC !
(CC! "

cookieSinkCC" ,
)CC, -
;CC- .
}DD 
}EE 	
}FF 
privateJJ 
voidJJ 
GoodG2B1JJ 
(JJ 
HttpRequestJJ %
reqJJ& )
,JJ) *
HttpResponseJJ+ 7
respJJ8 <
)JJ< =
{KK 
stringLL 
dataLL 
;LL 
ifMM 

(MM 
PRIVATE_CONST_FIVEMM 
!=MM  
$numMM  !
)MM! "
{NN 	
dataQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataVV 
=VV 
$strVV 
;VV 
}WW 	
ifXX 

(XX 
PRIVATE_CONST_FIVEXX 
==XX  
$numXX  !
)XX! "
{YY 	
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 

HttpCookie\\ 

cookieSink\\ %
=\\& '
new\\( +

HttpCookie\\, 6
(\\6 7
$str\\7 =
,\\= >
data\\? C
)\\C D
;\\D E
resp^^ 
.^^ 
AppendCookie^^ !
(^^! "

cookieSink^^" ,
)^^, -
;^^- .
}__ 
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
HttpRequestdd %
reqdd& )
,dd) *
HttpResponsedd+ 7
respdd8 <
)dd< =
{ee 
stringff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_FIVEgg 
==gg  
$numgg  !
)gg! "
{hh 	
datajj 
=jj 
$strjj 
;jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
nullpp 
;pp 
}qq 	
ifrr 

(rr 
PRIVATE_CONST_FIVErr 
==rr  
$numrr  !
)rr! "
{ss 	
iftt 
(tt 
datatt 
!=tt 
nulltt 
)tt 
{uu 

HttpCookievv 

cookieSinkvv %
=vv& '
newvv( +

HttpCookievv, 6
(vv6 7
$strvv7 =
,vv= >
datavv? C
)vvC D
;vvD E
respxx 
.xx 
AppendCookiexx !
(xx! "

cookieSinkxx" ,
)xx, -
;xx- .
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodB2G1~~ 
(~~ 
HttpRequest~~ %
req~~& )
,~~) *
HttpResponse~~+ 7
resp~~8 <
)~~< =
{ 
string
 
data
 
;
 
if
 

(
  
PRIVATE_CONST_FIVE
 
==
  
$num
  !
)
! "
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
!=
  
$num
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
   

cookieSink
   %
=
  & '
new
  ( +

HttpCookie
  , 6
(
  6 7
$str
  7 =
,
  = >
HttpUtility
  ? J
.
  J K
	UrlEncode
  K T
(
  T U
data
  U Y
,
  Y Z
Encoding
  [ c
.
  c d
UTF8
  d h
)
  h i
)
  i j
;
  j k
resp
¢¢ 
.
¢¢ 
AppendCookie
¢¢ !
(
¢¢! "

cookieSink
¢¢" ,
)
¢¢, -
;
¢¢- .
}
££ 
}
¤¤ 	
}
¥¥ 
private
¨¨ 
void
¨¨ 
GoodB2G2
¨¨ 
(
¨¨ 
HttpRequest
¨¨ %
req
¨¨& )
,
¨¨) *
HttpResponse
¨¨+ 7
resp
¨¨8 <
)
¨¨< =
{
©© 
string
ªª 
data
ªª 
;
ªª 
if
«« 

(
««  
PRIVATE_CONST_FIVE
«« 
==
««  
$num
««  !
)
««! "
{
¬¬ 	
data
­­ 
=
­­ 
$str
­­ 
;
­­ 
{
®® 
try
°° 
{
±± 
data
³³ 
=
³³ 
Console
³³ "
.
³³" #
ReadLine
³³# +
(
³³+ ,
)
³³, -
;
³³- .
}
´´ 
catch
µµ 
(
µµ 
IOException
µµ "
exceptIO
µµ# +
)
µµ+ ,
{
¶¶ 
IO
·· 
.
·· 
Logger
·· 
.
·· 
Log
·· !
(
··! "
NLog
··" &
.
··& '
LogLevel
··' /
.
··/ 0
Warn
··0 4
,
··4 5
exceptIO
··6 >
,
··> ?
$str
··@ [
)
··[ \
;
··\ ]
}
¸¸ 
}
¹¹ 
}
ºº 	
else
»» 
{
¼¼ 	
data
¿¿ 
=
¿¿ 
null
¿¿ 
;
¿¿ 
}
ÀÀ 	
if
ÁÁ 

(
ÁÁ  
PRIVATE_CONST_FIVE
ÁÁ 
==
ÁÁ  
$num
ÁÁ  !
)
ÁÁ! "
{
ÂÂ 	
if
ÃÃ 
(
ÃÃ 
data
ÃÃ 
!=
ÃÃ 
null
ÃÃ 
)
ÃÃ 
{
ÄÄ 

HttpCookie
ÅÅ 

cookieSink
ÅÅ %
=
ÅÅ& '
new
ÅÅ( +

HttpCookie
ÅÅ, 6
(
ÅÅ6 7
$str
ÅÅ7 =
,
ÅÅ= >
HttpUtility
ÅÅ? J
.
ÅÅJ K
	UrlEncode
ÅÅK T
(
ÅÅT U
data
ÅÅU Y
,
ÅÅY Z
Encoding
ÅÅ[ c
.
ÅÅc d
UTF8
ÅÅd h
)
ÅÅh i
)
ÅÅi j
;
ÅÅj k
resp
ÇÇ 
.
ÇÇ 
AppendCookie
ÇÇ !
(
ÇÇ! "

cookieSink
ÇÇ" ,
)
ÇÇ, -
;
ÇÇ- .
}
ÈÈ 
}
ÉÉ 	
}
ÊÊ 
public
ÌÌ 

override
ÌÌ 
void
ÌÌ 
Good
ÌÌ 
(
ÌÌ 
HttpRequest
ÌÌ )
req
ÌÌ* -
,
ÌÌ- .
HttpResponse
ÌÌ/ ;
resp
ÌÌ< @
)
ÌÌ@ A
{
ÍÍ 
GoodG2B1
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodG2B2
ÏÏ 
(
ÏÏ 
req
ÏÏ 
,
ÏÏ 
resp
ÏÏ 
)
ÏÏ 
;
ÏÏ 
GoodB2G1
ÐÐ 
(
ÐÐ 
req
ÐÐ 
,
ÐÐ 
resp
ÐÐ 
)
ÐÐ 
;
ÐÐ 
GoodB2G2
ÑÑ 
(
ÑÑ 
req
ÑÑ 
,
ÑÑ 
resp
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÒÒ 
}ÔÔ 
}ÕÕ O
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_07 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
int"" 
privateFive"" 
="" 
$num"" 
;""  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
$str)) 
;)) 
{** 
try,, 
{-- 
data// 
=// 
Console// "
.//" #
ReadLine//# +
(//+ ,
)//, -
;//- .
}00 
catch11 
(11 
IOException11 "
exceptIO11# +
)11+ ,
{22 
IO33 
.33 
Logger33 
.33 
Log33 !
(33! "
NLog33" &
.33& '
LogLevel33' /
.33/ 0
Warn330 4
,334 5
exceptIO336 >
,33> ?
$str33@ [
)33[ \
;33\ ]
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
privateFive== 
==== 
$num== 
)== 
{>> 	
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 

HttpCookieAA 

cookieSinkAA %
=AA& '
newAA( +

HttpCookieAA, 6
(AA6 7
$strAA7 =
,AA= >
dataAA? C
)AAC D
;AAD E
respCC 
.CC 
AppendCookieCC !
(CC! "

cookieSinkCC" ,
)CC, -
;CC- .
}DD 
}EE 	
}FF 
privateJJ 
voidJJ 
GoodG2B1JJ 
(JJ 
HttpRequestJJ %
reqJJ& )
,JJ) *
HttpResponseJJ+ 7
respJJ8 <
)JJ< =
{KK 
stringLL 
dataLL 
;LL 
ifMM 

(MM 
privateFiveMM 
!=MM 
$numMM 
)MM 
{NN 	
dataQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataVV 
=VV 
$strVV 
;VV 
}WW 	
ifXX 

(XX 
privateFiveXX 
==XX 
$numXX 
)XX 
{YY 	
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 

HttpCookie\\ 

cookieSink\\ %
=\\& '
new\\( +

HttpCookie\\, 6
(\\6 7
$str\\7 =
,\\= >
data\\? C
)\\C D
;\\D E
resp^^ 
.^^ 
AppendCookie^^ !
(^^! "

cookieSink^^" ,
)^^, -
;^^- .
}__ 
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
HttpRequestdd %
reqdd& )
,dd) *
HttpResponsedd+ 7
respdd8 <
)dd< =
{ee 
stringff 
dataff 
;ff 
ifgg 

(gg 
privateFivegg 
==gg 
$numgg 
)gg 
{hh 	
datajj 
=jj 
$strjj 
;jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
nullpp 
;pp 
}qq 	
ifrr 

(rr 
privateFiverr 
==rr 
$numrr 
)rr 
{ss 	
iftt 
(tt 
datatt 
!=tt 
nulltt 
)tt 
{uu 

HttpCookievv 

cookieSinkvv %
=vv& '
newvv( +

HttpCookievv, 6
(vv6 7
$strvv7 =
,vv= >
datavv? C
)vvC D
;vvD E
respxx 
.xx 
AppendCookiexx !
(xx! "

cookieSinkxx" ,
)xx, -
;xx- .
}yy 
}zz 	
}{{ 
private~~ 
void~~ 
GoodB2G1~~ 
(~~ 
HttpRequest~~ %
req~~& )
,~~) *
HttpResponse~~+ 7
resp~~8 <
)~~< =
{ 
string
 
data
 
;
 
if
 

(
 
privateFive
 
==
 
$num
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
   

cookieSink
   %
=
  & '
new
  ( +

HttpCookie
  , 6
(
  6 7
$str
  7 =
,
  = >
HttpUtility
  ? J
.
  J K
	UrlEncode
  K T
(
  T U
data
  U Y
,
  Y Z
Encoding
  [ c
.
  c d
UTF8
  d h
)
  h i
)
  i j
;
  j k
resp
¢¢ 
.
¢¢ 
AppendCookie
¢¢ !
(
¢¢! "

cookieSink
¢¢" ,
)
¢¢, -
;
¢¢- .
}
££ 
}
¤¤ 	
}
¥¥ 
private
¨¨ 
void
¨¨ 
GoodB2G2
¨¨ 
(
¨¨ 
HttpRequest
¨¨ %
req
¨¨& )
,
¨¨) *
HttpResponse
¨¨+ 7
resp
¨¨8 <
)
¨¨< =
{
©© 
string
ªª 
data
ªª 
;
ªª 
if
«« 

(
«« 
privateFive
«« 
==
«« 
$num
«« 
)
«« 
{
¬¬ 	
data
­­ 
=
­­ 
$str
­­ 
;
­­ 
{
®® 
try
°° 
{
±± 
data
³³ 
=
³³ 
Console
³³ "
.
³³" #
ReadLine
³³# +
(
³³+ ,
)
³³, -
;
³³- .
}
´´ 
catch
µµ 
(
µµ 
IOException
µµ "
exceptIO
µµ# +
)
µµ+ ,
{
¶¶ 
IO
·· 
.
·· 
Logger
·· 
.
·· 
Log
·· !
(
··! "
NLog
··" &
.
··& '
LogLevel
··' /
.
··/ 0
Warn
··0 4
,
··4 5
exceptIO
··6 >
,
··> ?
$str
··@ [
)
··[ \
;
··\ ]
}
¸¸ 
}
¹¹ 
}
ºº 	
else
»» 
{
¼¼ 	
data
¿¿ 
=
¿¿ 
null
¿¿ 
;
¿¿ 
}
ÀÀ 	
if
ÁÁ 

(
ÁÁ 
privateFive
ÁÁ 
==
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
{
ÂÂ 	
if
ÃÃ 
(
ÃÃ 
data
ÃÃ 
!=
ÃÃ 
null
ÃÃ 
)
ÃÃ 
{
ÄÄ 

HttpCookie
ÅÅ 

cookieSink
ÅÅ %
=
ÅÅ& '
new
ÅÅ( +

HttpCookie
ÅÅ, 6
(
ÅÅ6 7
$str
ÅÅ7 =
,
ÅÅ= >
HttpUtility
ÅÅ? J
.
ÅÅJ K
	UrlEncode
ÅÅK T
(
ÅÅT U
data
ÅÅU Y
,
ÅÅY Z
Encoding
ÅÅ[ c
.
ÅÅc d
UTF8
ÅÅd h
)
ÅÅh i
)
ÅÅi j
;
ÅÅj k
resp
ÇÇ 
.
ÇÇ 
AppendCookie
ÇÇ !
(
ÇÇ! "

cookieSink
ÇÇ" ,
)
ÇÇ, -
;
ÇÇ- .
}
ÈÈ 
}
ÉÉ 	
}
ÊÊ 
public
ÌÌ 

override
ÌÌ 
void
ÌÌ 
Good
ÌÌ 
(
ÌÌ 
HttpRequest
ÌÌ )
req
ÌÌ* -
,
ÌÌ- .
HttpResponse
ÌÌ/ ;
resp
ÌÌ< @
)
ÌÌ@ A
{
ÍÍ 
GoodG2B1
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodG2B2
ÏÏ 
(
ÏÏ 
req
ÏÏ 
,
ÏÏ 
resp
ÏÏ 
)
ÏÏ 
;
ÏÏ 
GoodB2G1
ÐÐ 
(
ÐÐ 
req
ÐÐ 
,
ÐÐ 
resp
ÐÐ 
)
ÐÐ 
;
ÐÐ 
GoodB2G2
ÑÑ 
(
ÑÑ 
req
ÑÑ 
,
ÑÑ 
resp
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÒÒ 
}ÔÔ 
}ÕÕ R
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_08 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
static"" 
bool"" 
PrivateReturnsTrue"" *
(""* +
)""+ ,
{## 
return$$ 
true$$ 
;$$ 
}%% 
private'' 
static'' 
bool'' 
PrivateReturnsFalse'' +
(''+ ,
)'', -
{(( 
return)) 
false)) 
;)) 
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
$str11 
;11 
{22 
try44 
{55 
data77 
=77 
Console77 "
.77" #
ReadLine77# +
(77+ ,
)77, -
;77- .
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
nullCC 
;CC 
}DD 	
ifEE 

(EE 
PrivateReturnsTrueEE 
(EE 
)EE  
)EE  !
{FF 	
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 

HttpCookieII 

cookieSinkII %
=II& '
newII( +

HttpCookieII, 6
(II6 7
$strII7 =
,II= >
dataII? C
)IIC D
;IID E
respKK 
.KK 
AppendCookieKK !
(KK! "

cookieSinkKK" ,
)KK, -
;KK- .
}LL 
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
HttpRequestRR %
reqRR& )
,RR) *
HttpResponseRR+ 7
respRR8 <
)RR< =
{SS 
stringTT 
dataTT 
;TT 
ifUU 

(UU 
PrivateReturnsFalseUU 
(UU  
)UU  !
)UU! "
{VV 	
dataYY 
=YY 
nullYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$str^^ 
;^^ 
}__ 	
if`` 

(`` 
PrivateReturnsTrue`` 
(`` 
)``  
)``  !
{aa 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 

HttpCookiedd 

cookieSinkdd %
=dd& '
newdd( +

HttpCookiedd, 6
(dd6 7
$strdd7 =
,dd= >
datadd? C
)ddC D
;ddD E
respff 
.ff 
AppendCookieff !
(ff! "

cookieSinkff" ,
)ff, -
;ff- .
}gg 
}hh 	
}ii 
privatell 
voidll 
GoodG2B2ll 
(ll 
HttpRequestll %
reqll& )
,ll) *
HttpResponsell+ 7
respll8 <
)ll< =
{mm 
stringnn 
datann 
;nn 
ifoo 

(oo 
PrivateReturnsTrueoo 
(oo 
)oo  
)oo  !
{pp 	
datarr 
=rr 
$strrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
nullxx 
;xx 
}yy 	
ifzz 

(zz 
PrivateReturnsTruezz 
(zz 
)zz  
)zz  !
{{{ 	
if|| 
(|| 
data|| 
!=|| 
null|| 
)|| 
{}} 

HttpCookie~~ 

cookieSink~~ %
=~~& '
new~~( +

HttpCookie~~, 6
(~~6 7
$str~~7 =
,~~= >
data~~? C
)~~C D
;~~D E
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
   	
IO
¢¢ 
.
¢¢ 
	WriteLine
¢¢ 
(
¢¢ 
$str
¢¢ /
)
¢¢/ 0
;
¢¢0 1
}
££ 	
else
¤¤ 
{
¥¥ 	
if
¦¦ 
(
¦¦ 
data
¦¦ 
!=
¦¦ 
null
¦¦ 
)
¦¦ 
{
§§ 

HttpCookie
¨¨ 

cookieSink
¨¨ %
=
¨¨& '
new
¨¨( +

HttpCookie
¨¨, 6
(
¨¨6 7
$str
¨¨7 =
,
¨¨= >
HttpUtility
¨¨? J
.
¨¨J K
	UrlEncode
¨¨K T
(
¨¨T U
data
¨¨U Y
,
¨¨Y Z
Encoding
¨¨[ c
.
¨¨c d
UTF8
¨¨d h
)
¨¨h i
)
¨¨i j
;
¨¨j k
resp
ªª 
.
ªª 
AppendCookie
ªª !
(
ªª! "

cookieSink
ªª" ,
)
ªª, -
;
ªª- .
}
«« 
}
¬¬ 	
}
­­ 
private
°° 
void
°° 
GoodB2G2
°° 
(
°° 
HttpRequest
°° %
req
°°& )
,
°°) *
HttpResponse
°°+ 7
resp
°°8 <
)
°°< =
{
±± 
string
²² 
data
²² 
;
²² 
if
³³ 

(
³³  
PrivateReturnsTrue
³³ 
(
³³ 
)
³³  
)
³³  !
{
´´ 	
data
µµ 
=
µµ 
$str
µµ 
;
µµ 
{
¶¶ 
try
¸¸ 
{
¹¹ 
data
»» 
=
»» 
Console
»» "
.
»»" #
ReadLine
»»# +
(
»»+ ,
)
»», -
;
»»- .
}
¼¼ 
catch
½½ 
(
½½ 
IOException
½½ "
exceptIO
½½# +
)
½½+ ,
{
¾¾ 
IO
¿¿ 
.
¿¿ 
Logger
¿¿ 
.
¿¿ 
Log
¿¿ !
(
¿¿! "
NLog
¿¿" &
.
¿¿& '
LogLevel
¿¿' /
.
¿¿/ 0
Warn
¿¿0 4
,
¿¿4 5
exceptIO
¿¿6 >
,
¿¿> ?
$str
¿¿@ [
)
¿¿[ \
;
¿¿\ ]
}
ÀÀ 
}
ÁÁ 
}
ÂÂ 	
else
ÃÃ 
{
ÄÄ 	
data
ÇÇ 
=
ÇÇ 
null
ÇÇ 
;
ÇÇ 
}
ÈÈ 	
if
ÉÉ 

(
ÉÉ  
PrivateReturnsTrue
ÉÉ 
(
ÉÉ 
)
ÉÉ  
)
ÉÉ  !
{
ÊÊ 	
if
ËË 
(
ËË 
data
ËË 
!=
ËË 
null
ËË 
)
ËË 
{
ÌÌ 

HttpCookie
ÍÍ 

cookieSink
ÍÍ %
=
ÍÍ& '
new
ÍÍ( +

HttpCookie
ÍÍ, 6
(
ÍÍ6 7
$str
ÍÍ7 =
,
ÍÍ= >
HttpUtility
ÍÍ? J
.
ÍÍJ K
	UrlEncode
ÍÍK T
(
ÍÍT U
data
ÍÍU Y
,
ÍÍY Z
Encoding
ÍÍ[ c
.
ÍÍc d
UTF8
ÍÍd h
)
ÍÍh i
)
ÍÍi j
;
ÍÍj k
resp
ÏÏ 
.
ÏÏ 
AppendCookie
ÏÏ !
(
ÏÏ! "

cookieSink
ÏÏ" ,
)
ÏÏ, -
;
ÏÏ- .
}
ÐÐ 
}
ÑÑ 	
}
ÒÒ 
public
ÔÔ 

override
ÔÔ 
void
ÔÔ 
Good
ÔÔ 
(
ÔÔ 
HttpRequest
ÔÔ )
req
ÔÔ* -
,
ÔÔ- .
HttpResponse
ÔÔ/ ;
resp
ÔÔ< @
)
ÔÔ@ A
{
ÕÕ 
GoodG2B1
ÖÖ 
(
ÖÖ 
req
ÖÖ 
,
ÖÖ 
resp
ÖÖ 
)
ÖÖ 
;
ÖÖ 
GoodG2B2
×× 
(
×× 
req
×× 
,
×× 
resp
×× 
)
×× 
;
×× 
GoodB2G1
ØØ 
(
ØØ 
req
ØØ 
,
ØØ 
resp
ØØ 
)
ØØ 
;
ØØ 
GoodB2G2
ÙÙ 
(
ÙÙ 
req
ÙÙ 
,
ÙÙ 
resp
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ÚÚ 
}ÜÜ 
}ÝÝ ¾N
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_09 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_TRUE"" #
)""# $
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_TRUE88 #
)88# $
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH !
STATIC_READONLY_FALSEHH $
)HH$ %
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS  
STATIC_READONLY_TRUESS #
)SS# $
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
IObb 
.bb  
STATIC_READONLY_TRUEbb #
)bb# $
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
IOmm 
.mm  
STATIC_READONLY_TRUEmm #
)mm# $
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
IO|| 
.||  
STATIC_READONLY_TRUE|| #
)||# $
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{ 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 #
STATIC_READONLY_FALSE
 $
)
$ %
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
if
¦¦ 

(
¦¦ 
IO
¦¦ 
.
¦¦ "
STATIC_READONLY_TRUE
¦¦ #
)
¦¦# $
{
§§ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
©© 
try
«« 
{
¬¬ 
data
®® 
=
®® 
Console
®® "
.
®®" #
ReadLine
®®# +
(
®®+ ,
)
®®, -
;
®®- .
}
¯¯ 
catch
°° 
(
°° 
IOException
°° "
exceptIO
°°# +
)
°°+ ,
{
±± 
IO
²² 
.
²² 
Logger
²² 
.
²² 
Log
²² !
(
²²! "
NLog
²²" &
.
²²& '
LogLevel
²²' /
.
²²/ 0
Warn
²²0 4
,
²²4 5
exceptIO
²²6 >
,
²²> ?
$str
²²@ [
)
²²[ \
;
²²\ ]
}
³³ 
}
´´ 
}
µµ 	
else
¶¶ 
{
·· 	
data
ºº 
=
ºº 
null
ºº 
;
ºº 
}
»» 	
if
¼¼ 

(
¼¼ 
IO
¼¼ 
.
¼¼ "
STATIC_READONLY_TRUE
¼¼ #
)
¼¼# $
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 

HttpCookie
ÀÀ 

cookieSink
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +

HttpCookie
ÀÀ, 6
(
ÀÀ6 7
$str
ÀÀ7 =
,
ÀÀ= >
HttpUtility
ÀÀ? J
.
ÀÀJ K
	UrlEncode
ÀÀK T
(
ÀÀT U
data
ÀÀU Y
,
ÀÀY Z
Encoding
ÀÀ[ c
.
ÀÀc d
UTF8
ÀÀd h
)
ÀÀh i
)
ÀÀi j
;
ÀÀj k
resp
ÂÂ 
.
ÂÂ 
AppendCookie
ÂÂ !
(
ÂÂ! "

cookieSink
ÂÂ" ,
)
ÂÂ, -
;
ÂÂ- .
}
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
HttpRequest
ÇÇ )
req
ÇÇ* -
,
ÇÇ- .
HttpResponse
ÇÇ/ ;
resp
ÇÇ< @
)
ÇÇ@ A
{
ÈÈ 
GoodG2B1
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÊÊ 
(
ÊÊ 
req
ÊÊ 
,
ÊÊ 
resp
ÊÊ 
)
ÊÊ 
;
ÊÊ 
GoodB2G1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodB2G2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}ÏÏ 
}ÐÐ ÚM
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_10 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticTrue"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticTrue88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
staticFalseHH 
)HH 
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS 

staticTrueSS 
)SS 
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
IObb 
.bb 

staticTruebb 
)bb 
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
IOmm 
.mm 

staticTruemm 
)mm 
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
IO|| 
.|| 

staticTrue|| 
)|| 
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{ 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
staticFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
if
¦¦ 

(
¦¦ 
IO
¦¦ 
.
¦¦ 

staticTrue
¦¦ 
)
¦¦ 
{
§§ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
©© 
try
«« 
{
¬¬ 
data
®® 
=
®® 
Console
®® "
.
®®" #
ReadLine
®®# +
(
®®+ ,
)
®®, -
;
®®- .
}
¯¯ 
catch
°° 
(
°° 
IOException
°° "
exceptIO
°°# +
)
°°+ ,
{
±± 
IO
²² 
.
²² 
Logger
²² 
.
²² 
Log
²² !
(
²²! "
NLog
²²" &
.
²²& '
LogLevel
²²' /
.
²²/ 0
Warn
²²0 4
,
²²4 5
exceptIO
²²6 >
,
²²> ?
$str
²²@ [
)
²²[ \
;
²²\ ]
}
³³ 
}
´´ 
}
µµ 	
else
¶¶ 
{
·· 	
data
ºº 
=
ºº 
null
ºº 
;
ºº 
}
»» 	
if
¼¼ 

(
¼¼ 
IO
¼¼ 
.
¼¼ 

staticTrue
¼¼ 
)
¼¼ 
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 

HttpCookie
ÀÀ 

cookieSink
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +

HttpCookie
ÀÀ, 6
(
ÀÀ6 7
$str
ÀÀ7 =
,
ÀÀ= >
HttpUtility
ÀÀ? J
.
ÀÀJ K
	UrlEncode
ÀÀK T
(
ÀÀT U
data
ÀÀU Y
,
ÀÀY Z
Encoding
ÀÀ[ c
.
ÀÀc d
UTF8
ÀÀd h
)
ÀÀh i
)
ÀÀi j
;
ÀÀj k
resp
ÂÂ 
.
ÂÂ 
AppendCookie
ÂÂ !
(
ÂÂ! "

cookieSink
ÂÂ" ,
)
ÂÂ, -
;
ÂÂ- .
}
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
HttpRequest
ÇÇ )
req
ÇÇ* -
,
ÇÇ- .
HttpResponse
ÇÇ/ ;
resp
ÇÇ< @
)
ÇÇ@ A
{
ÈÈ 
GoodG2B1
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÊÊ 
(
ÊÊ 
req
ÊÊ 
,
ÊÊ 
resp
ÊÊ 
)
ÊÊ 
;
ÊÊ 
GoodB2G1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodB2G2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}ÏÏ 
}ÐÐ ØP
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_11 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 
StaticReturnsTrue""  
(""  !
)""! "
)""" #
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88
 
IO88 
.88 
StaticReturnsTrue88 
(88  
)88  !
)88! "
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsFalseHH !
(HH! "
)HH" #
)HH# $
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS 
StaticReturnsTrueSS  
(SS  !
)SS! "
)SS" #
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
IObb 
.bb 
StaticReturnsTruebb  
(bb  !
)bb! "
)bb" #
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
IOmm 
.mm 
StaticReturnsTruemm  
(mm  !
)mm! "
)mm" #
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
IO|| 
.|| 
StaticReturnsTrue||  
(||  !
)||! "
)||" #
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{ 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
  
StaticReturnsFalse
 !
(
! "
)
" #
)
# $
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
if
¦¦ 

(
¦¦ 
IO
¦¦ 
.
¦¦ 
StaticReturnsTrue
¦¦  
(
¦¦  !
)
¦¦! "
)
¦¦" #
{
§§ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
©© 
try
«« 
{
¬¬ 
data
®® 
=
®® 
Console
®® "
.
®®" #
ReadLine
®®# +
(
®®+ ,
)
®®, -
;
®®- .
}
¯¯ 
catch
°° 
(
°° 
IOException
°° "
exceptIO
°°# +
)
°°+ ,
{
±± 
IO
²² 
.
²² 
Logger
²² 
.
²² 
Log
²² !
(
²²! "
NLog
²²" &
.
²²& '
LogLevel
²²' /
.
²²/ 0
Warn
²²0 4
,
²²4 5
exceptIO
²²6 >
,
²²> ?
$str
²²@ [
)
²²[ \
;
²²\ ]
}
³³ 
}
´´ 
}
µµ 	
else
¶¶ 
{
·· 	
data
ºº 
=
ºº 
null
ºº 
;
ºº 
}
»» 	
if
¼¼ 

(
¼¼ 
IO
¼¼ 
.
¼¼ 
StaticReturnsTrue
¼¼  
(
¼¼  !
)
¼¼! "
)
¼¼" #
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 

HttpCookie
ÀÀ 

cookieSink
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +

HttpCookie
ÀÀ, 6
(
ÀÀ6 7
$str
ÀÀ7 =
,
ÀÀ= >
HttpUtility
ÀÀ? J
.
ÀÀJ K
	UrlEncode
ÀÀK T
(
ÀÀT U
data
ÀÀU Y
,
ÀÀY Z
Encoding
ÀÀ[ c
.
ÀÀc d
UTF8
ÀÀd h
)
ÀÀh i
)
ÀÀi j
;
ÀÀj k
resp
ÂÂ 
.
ÂÂ 
AppendCookie
ÂÂ !
(
ÂÂ! "

cookieSink
ÂÂ" ,
)
ÂÂ, -
;
ÂÂ- .
}
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
HttpRequest
ÇÇ )
req
ÇÇ* -
,
ÇÇ- .
HttpResponse
ÇÇ/ ;
resp
ÇÇ< @
)
ÇÇ@ A
{
ÈÈ 
GoodG2B1
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÊÊ 
(
ÊÊ 
req
ÊÊ 
,
ÊÊ 
resp
ÊÊ 
)
ÊÊ 
;
ÊÊ 
GoodB2G1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodB2G2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}ÏÏ 
}ÐÐ F
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_12 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

(""
 
IO"" 
."" $
StaticReturnsTrueOrFalse"" &
(""& '
)""' (
)""( )
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data55 
=55 
$str55 
;55 
}66 	
if77 

(77
 
IO77 
.77 $
StaticReturnsTrueOrFalse77 &
(77& '
)77' (
)77( )
{88 	
if99 
(99 
data99 
!=99 
null99 
)99 
{:: 

HttpCookie;; 

cookieSink;; %
=;;& '
new;;( +

HttpCookie;;, 6
(;;6 7
$str;;7 =
,;;= >
data;;? C
);;C D
;;;D E
resp== 
.== 
AppendCookie== !
(==! "

cookieSink==" ,
)==, -
;==- .
}>> 
}?? 	
else@@ 
{AA 	
ifBB 
(BB 
dataBB 
!=BB 
nullBB 
)BB 
{CC 

HttpCookieDD 

cookieSinkDD %
=DD& '
newDD( +

HttpCookieDD, 6
(DD6 7
$strDD7 =
,DD= >
HttpUtilityDD? J
.DDJ K
	UrlEncodeDDK T
(DDT U
dataDDU Y
,DDY Z
EncodingDD[ c
.DDc d
UTF8DDd h
)DDh i
)DDi j
;DDj k
respFF 
.FF 
AppendCookieFF !
(FF! "

cookieSinkFF" ,
)FF, -
;FF- .
}GG 
}HH 	
}II 
privateNN 
voidNN 
GoodG2BNN 
(NN 
HttpRequestNN $
reqNN% (
,NN( )
HttpResponseNN* 6
respNN7 ;
)NN; <
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ
 
IOQQ 
.QQ $
StaticReturnsTrueOrFalseQQ &
(QQ& '
)QQ' (
)QQ( )
{RR 	
dataTT 
=TT 
$strTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$strYY 
;YY 
}ZZ 	
if[[ 

([[
 
IO[[ 
.[[ $
StaticReturnsTrueOrFalse[[ &
([[& '
)[[' (
)[[( )
{\\ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 

HttpCookie__ 

cookieSink__ %
=__& '
new__( +

HttpCookie__, 6
(__6 7
$str__7 =
,__= >
data__? C
)__C D
;__D E
respaa 
.aa 
AppendCookieaa !
(aa! "

cookieSinkaa" ,
)aa, -
;aa- .
}bb 
}cc 	
elsedd 
{ee 	
ifff 
(ff 
dataff 
!=ff 
nullff 
)ff 
{gg 

HttpCookiehh 

cookieSinkhh %
=hh& '
newhh( +

HttpCookiehh, 6
(hh6 7
$strhh7 =
,hh= >
datahh? C
)hhC D
;hhD E
respjj 
.jj 
AppendCookiejj !
(jj! "

cookieSinkjj" ,
)jj, -
;jj- .
}kk 
}ll 	
}mm 
privateqq 
voidqq 
GoodB2Gqq 
(qq 
HttpRequestqq $
reqqq% (
,qq( )
HttpResponseqq* 6
respqq7 ;
)qq; <
{rr 
stringss 
datass 
;ss 
iftt 

(tt
 
IOtt 
.tt $
StaticReturnsTrueOrFalsett &
(tt& '
)tt' (
)tt( )
{uu 	
datavv 
=vv 
$strvv 
;vv 
{ww 
tryyy 
{zz 
data|| 
=|| 
Console|| "
.||" #
ReadLine||# +
(||+ ,
)||, -
;||- .
}}} 
catch~~ 
(~~ 
IOException~~ "
exceptIO~~# +
)~~+ ,
{ 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
if
 

(

 
IO
 
.
 &
StaticReturnsTrueOrFalse
 &
(
& '
)
' (
)
( )
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
   

HttpCookie
¡¡ 

cookieSink
¡¡ %
=
¡¡& '
new
¡¡( +

HttpCookie
¡¡, 6
(
¡¡6 7
$str
¡¡7 =
,
¡¡= >
HttpUtility
¡¡? J
.
¡¡J K
	UrlEncode
¡¡K T
(
¡¡T U
data
¡¡U Y
,
¡¡Y Z
Encoding
¡¡[ c
.
¡¡c d
UTF8
¡¡d h
)
¡¡h i
)
¡¡i j
;
¡¡j k
resp
££ 
.
££ 
AppendCookie
££ !
(
££! "

cookieSink
££" ,
)
££, -
;
££- .
}
¤¤ 
}
¥¥ 	
}
¦¦ 
public
¨¨ 

override
¨¨ 
void
¨¨ 
Good
¨¨ 
(
¨¨ 
HttpRequest
¨¨ )
req
¨¨* -
,
¨¨- .
HttpResponse
¨¨/ ;
resp
¨¨< @
)
¨¨@ A
{
ªª 
GoodG2B
«« 
(
«« 
req
«« 
,
«« 
resp
«« 
)
«« 
;
«« 
GoodB2G
¬¬ 
(
¬¬ 
req
¬¬ 
,
¬¬ 
resp
¬¬ 
)
¬¬ 
;
¬¬ 
}
­­ 
}¯¯ 
}°° Q
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_13 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_FIVE"" #
==""# %
$num""% &
)""& '
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_FIVE88 #
==88# %
$num88% &
)88& '
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
!=HH# %
$numHH% &
)HH& '
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS  
STATIC_READONLY_FIVESS #
==SS# %
$numSS% &
)SS& '
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
IObb 
.bb  
STATIC_READONLY_FIVEbb #
==bb# %
$numbb% &
)bb& '
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
IOmm 
.mm  
STATIC_READONLY_FIVEmm #
==mm# %
$nummm% &
)mm& '
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
IO|| 
.||  
STATIC_READONLY_FIVE|| #
==||# %
$num||% &
)||& '
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{ 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
!=
# %
$num
% &
)
& '
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
if
¦¦ 

(
¦¦ 
IO
¦¦ 
.
¦¦ "
STATIC_READONLY_FIVE
¦¦ #
==
¦¦# %
$num
¦¦% &
)
¦¦& '
{
§§ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
©© 
try
«« 
{
¬¬ 
data
®® 
=
®® 
Console
®® "
.
®®" #
ReadLine
®®# +
(
®®+ ,
)
®®, -
;
®®- .
}
¯¯ 
catch
°° 
(
°° 
IOException
°° "
exceptIO
°°# +
)
°°+ ,
{
±± 
IO
²² 
.
²² 
Logger
²² 
.
²² 
Log
²² !
(
²²! "
NLog
²²" &
.
²²& '
LogLevel
²²' /
.
²²/ 0
Warn
²²0 4
,
²²4 5
exceptIO
²²6 >
,
²²> ?
$str
²²@ [
)
²²[ \
;
²²\ ]
}
³³ 
}
´´ 
}
µµ 	
else
¶¶ 
{
·· 	
data
ºº 
=
ºº 
null
ºº 
;
ºº 
}
»» 	
if
¼¼ 

(
¼¼ 
IO
¼¼ 
.
¼¼ "
STATIC_READONLY_FIVE
¼¼ #
==
¼¼# %
$num
¼¼% &
)
¼¼& '
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 

HttpCookie
ÀÀ 

cookieSink
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +

HttpCookie
ÀÀ, 6
(
ÀÀ6 7
$str
ÀÀ7 =
,
ÀÀ= >
HttpUtility
ÀÀ? J
.
ÀÀJ K
	UrlEncode
ÀÀK T
(
ÀÀT U
data
ÀÀU Y
,
ÀÀY Z
Encoding
ÀÀ[ c
.
ÀÀc d
UTF8
ÀÀd h
)
ÀÀh i
)
ÀÀi j
;
ÀÀj k
resp
ÂÂ 
.
ÂÂ 
AppendCookie
ÂÂ !
(
ÂÂ! "

cookieSink
ÂÂ" ,
)
ÂÂ, -
;
ÂÂ- .
}
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
HttpRequest
ÇÇ )
req
ÇÇ* -
,
ÇÇ- .
HttpResponse
ÇÇ/ ;
resp
ÇÇ< @
)
ÇÇ@ A
{
ÈÈ 
GoodG2B1
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÊÊ 
(
ÊÊ 
req
ÊÊ 
,
ÊÊ 
resp
ÊÊ 
)
ÊÊ 
;
ÊÊ 
GoodB2G1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodB2G2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}ÏÏ 
}ÐÐ ¸P
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_14 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticFive"" 
=="" 
$num"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticFive88 
==88 
$num88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
HttpRequestEE %
reqEE& )
,EE) *
HttpResponseEE+ 7
respEE8 <
)EE< =
{FF 
stringGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
!=HH 
$numHH 
)HH 
{II 	
dataLL 
=LL 
nullLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$strQQ 
;QQ 
}RR 	
ifSS 

(SS 
IOSS 
.SS 

staticFiveSS 
==SS 
$numSS 
)SS 
{TT 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 

HttpCookieWW 

cookieSinkWW %
=WW& '
newWW( +

HttpCookieWW, 6
(WW6 7
$strWW7 =
,WW= >
dataWW? C
)WWC D
;WWD E
respYY 
.YY 
AppendCookieYY !
(YY! "

cookieSinkYY" ,
)YY, -
;YY- .
}ZZ 
}[[ 	
}\\ 
private__ 
void__ 
GoodG2B2__ 
(__ 
HttpRequest__ %
req__& )
,__) *
HttpResponse__+ 7
resp__8 <
)__< =
{`` 
stringaa 
dataaa 
;aa 
ifbb 

(bb 
IObb 
.bb 

staticFivebb 
==bb 
$numbb 
)bb 
{cc 	
dataee 
=ee 
$stree 
;ee 
}ff 	
elsegg 
{hh 	
datakk 
=kk 
nullkk 
;kk 
}ll 	
ifmm 

(mm 
IOmm 
.mm 

staticFivemm 
==mm 
$nummm 
)mm 
{nn 	
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 

HttpCookieqq 

cookieSinkqq %
=qq& '
newqq( +

HttpCookieqq, 6
(qq6 7
$strqq7 =
,qq= >
dataqq? C
)qqC D
;qqD E
respss 
.ss 
AppendCookiess !
(ss! "

cookieSinkss" ,
)ss, -
;ss- .
}tt 
}uu 	
}vv 
privateyy 
voidyy 
GoodB2G1yy 
(yy 
HttpRequestyy %
reqyy& )
,yy) *
HttpResponseyy+ 7
respyy8 <
)yy< =
{zz 
string{{ 
data{{ 
;{{ 
if|| 

(|| 
IO|| 
.|| 

staticFive|| 
==|| 
$num|| 
)|| 
{}} 	
data~~ 
=~~ 
$str~~ 
;~~ 
{ 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
   
private
££ 
void
££ 
GoodB2G2
££ 
(
££ 
HttpRequest
££ %
req
££& )
,
££) *
HttpResponse
££+ 7
resp
££8 <
)
££< =
{
¤¤ 
string
¥¥ 
data
¥¥ 
;
¥¥ 
if
¦¦ 

(
¦¦ 
IO
¦¦ 
.
¦¦ 

staticFive
¦¦ 
==
¦¦ 
$num
¦¦ 
)
¦¦ 
{
§§ 	
data
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ 
{
©© 
try
«« 
{
¬¬ 
data
®® 
=
®® 
Console
®® "
.
®®" #
ReadLine
®®# +
(
®®+ ,
)
®®, -
;
®®- .
}
¯¯ 
catch
°° 
(
°° 
IOException
°° "
exceptIO
°°# +
)
°°+ ,
{
±± 
IO
²² 
.
²² 
Logger
²² 
.
²² 
Log
²² !
(
²²! "
NLog
²²" &
.
²²& '
LogLevel
²²' /
.
²²/ 0
Warn
²²0 4
,
²²4 5
exceptIO
²²6 >
,
²²> ?
$str
²²@ [
)
²²[ \
;
²²\ ]
}
³³ 
}
´´ 
}
µµ 	
else
¶¶ 
{
·· 	
data
ºº 
=
ºº 
null
ºº 
;
ºº 
}
»» 	
if
¼¼ 

(
¼¼ 
IO
¼¼ 
.
¼¼ 

staticFive
¼¼ 
==
¼¼ 
$num
¼¼ 
)
¼¼ 
{
½½ 	
if
¾¾ 
(
¾¾ 
data
¾¾ 
!=
¾¾ 
null
¾¾ 
)
¾¾ 
{
¿¿ 

HttpCookie
ÀÀ 

cookieSink
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +

HttpCookie
ÀÀ, 6
(
ÀÀ6 7
$str
ÀÀ7 =
,
ÀÀ= >
HttpUtility
ÀÀ? J
.
ÀÀJ K
	UrlEncode
ÀÀK T
(
ÀÀT U
data
ÀÀU Y
,
ÀÀY Z
Encoding
ÀÀ[ c
.
ÀÀc d
UTF8
ÀÀd h
)
ÀÀh i
)
ÀÀi j
;
ÀÀj k
resp
ÂÂ 
.
ÂÂ 
AppendCookie
ÂÂ !
(
ÂÂ! "

cookieSink
ÂÂ" ,
)
ÂÂ, -
;
ÂÂ- .
}
ÃÃ 
}
ÄÄ 	
}
ÅÅ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
HttpRequest
ÇÇ )
req
ÇÇ* -
,
ÇÇ- .
HttpResponse
ÇÇ/ ;
resp
ÇÇ< @
)
ÇÇ@ A
{
ÈÈ 
GoodG2B1
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÊÊ 
(
ÊÊ 
req
ÊÊ 
,
ÊÊ 
resp
ÊÊ 
)
ÊÊ 
;
ÊÊ 
GoodB2G1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodB2G2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}ÏÏ 
}ÐÐ þY
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_15 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
switch"" 
("" 
$num"" 
)"" 
{## 	
case$$ 
$num$$ 
:$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 
try(( 
{)) 
data++ 
=++ 
Console++ "
.++" #
ReadLine++# +
(+++ ,
)++, -
;++- .
},, 
catch-- 
(-- 
IOException-- "
exceptIO--# +
)--+ ,
{.. 
IO// 
.// 
Logger// 
.// 
Log// !
(//! "
NLog//" &
.//& '
LogLevel//' /
./// 0
Warn//0 4
,//4 5
exceptIO//6 >
,//> ?
$str//@ [
)//[ \
;//\ ]
}00 
}11 
break22 
;22 
default33 
:33 
data66 
=66 
null66 
;66 
break77 
;77 
}88 	
switch99 
(99 
$num99 
)99 
{:: 	
case;; 
$num;; 
:;; 
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 

HttpCookie>> 

cookieSink>> %
=>>& '
new>>( +

HttpCookie>>, 6
(>>6 7
$str>>7 =
,>>= >
data>>? C
)>>C D
;>>D E
resp@@ 
.@@ 
AppendCookie@@ !
(@@! "

cookieSink@@" ,
)@@, -
;@@- .
}AA 
breakBB 
;BB 
defaultCC 
:CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
$strEE /
)EE/ 0
;EE0 1
breakFF 
;FF 
}GG 	
}HH 
privateLL 
voidLL 
GoodG2B1LL 
(LL 
HttpRequestLL %
reqLL& )
,LL) *
HttpResponseLL+ 7
respLL8 <
)LL< =
{MM 
stringNN 
dataNN 
;NN 
switchOO 
(OO 
$numOO 
)OO 
{PP 	
caseQQ 
$numQQ 
:QQ 
dataTT 
=TT 
nullTT 
;TT 
breakUU 
;UU 
defaultVV 
:VV 
dataXX 
=XX 
$strXX 
;XX 
breakYY 
;YY 
}ZZ 	
switch[[ 
([[ 
$num[[ 
)[[ 
{\\ 	
case]] 
$num]] 
:]] 
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 

HttpCookie`` 

cookieSink`` %
=``& '
new``( +

HttpCookie``, 6
(``6 7
$str``7 =
,``= >
data``? C
)``C D
;``D E
respbb 
.bb 
AppendCookiebb !
(bb! "

cookieSinkbb" ,
)bb, -
;bb- .
}cc 
breakdd 
;dd 
defaultee 
:ee 
IOgg 
.gg 
	WriteLinegg 
(gg 
$strgg /
)gg/ 0
;gg0 1
breakhh 
;hh 
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
HttpRequestmm %
reqmm& )
,mm) *
HttpResponsemm+ 7
respmm8 <
)mm< =
{nn 
stringoo 
dataoo 
;oo 
switchpp 
(pp 
$numpp 
)pp 
{qq 	
caserr 
$numrr 
:rr 
datatt 
=tt 
$strtt 
;tt 
breakuu 
;uu 
defaultvv 
:vv 
datayy 
=yy 
nullyy 
;yy 
breakzz 
;zz 
}{{ 	
switch|| 
(|| 
$num|| 
)|| 
{}} 	
case~~ 
$num~~ 
:~~ 
if 
( 
data 
!= 
null 
) 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
data
? C
)
C D
;
D E
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
break
 
;
 
default
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
   
break
¡¡ 
;
¡¡ 
default
¢¢ 
:
¢¢ 
data
¥¥ 
=
¥¥ 
null
¥¥ 
;
¥¥ 
break
¦¦ 
;
¦¦ 
}
§§ 	
switch
¨¨ 
(
¨¨ 
$num
¨¨ 
)
¨¨ 
{
©© 	
case
ªª 
$num
ªª 
:
ªª 
IO
¬¬ 
.
¬¬ 
	WriteLine
¬¬ 
(
¬¬ 
$str
¬¬ /
)
¬¬/ 0
;
¬¬0 1
break
­­ 
;
­­ 
default
®® 
:
®® 
if
¯¯ 
(
¯¯ 
data
¯¯ 
!=
¯¯ 
null
¯¯ 
)
¯¯ 
{
°° 

HttpCookie
±± 

cookieSink
±± %
=
±±& '
new
±±( +

HttpCookie
±±, 6
(
±±6 7
$str
±±7 =
,
±±= >
HttpUtility
±±? J
.
±±J K
	UrlEncode
±±K T
(
±±T U
data
±±U Y
,
±±Y Z
Encoding
±±[ c
.
±±c d
UTF8
±±d h
)
±±h i
)
±±i j
;
±±j k
resp
³³ 
.
³³ 
AppendCookie
³³ !
(
³³! "

cookieSink
³³" ,
)
³³, -
;
³³- .
}
´´ 
break
µµ 
;
µµ 
}
¶¶ 	
}
·· 
private
ºº 
void
ºº 
GoodB2G2
ºº 
(
ºº 
HttpRequest
ºº %
req
ºº& )
,
ºº) *
HttpResponse
ºº+ 7
resp
ºº8 <
)
ºº< =
{
»» 
string
¼¼ 
data
¼¼ 
;
¼¼ 
switch
½½ 
(
½½ 
$num
½½ 
)
½½ 
{
¾¾ 	
case
¿¿ 
$num
¿¿ 
:
¿¿ 
data
ÀÀ 
=
ÀÀ 
$str
ÀÀ 
;
ÀÀ 
{
ÁÁ 
try
ÃÃ 
{
ÄÄ 
data
ÆÆ 
=
ÆÆ 
Console
ÆÆ "
.
ÆÆ" #
ReadLine
ÆÆ# +
(
ÆÆ+ ,
)
ÆÆ, -
;
ÆÆ- .
}
ÇÇ 
catch
ÈÈ 
(
ÈÈ 
IOException
ÈÈ "
exceptIO
ÈÈ# +
)
ÈÈ+ ,
{
ÉÉ 
IO
ÊÊ 
.
ÊÊ 
Logger
ÊÊ 
.
ÊÊ 
Log
ÊÊ !
(
ÊÊ! "
NLog
ÊÊ" &
.
ÊÊ& '
LogLevel
ÊÊ' /
.
ÊÊ/ 0
Warn
ÊÊ0 4
,
ÊÊ4 5
exceptIO
ÊÊ6 >
,
ÊÊ> ?
$str
ÊÊ@ [
)
ÊÊ[ \
;
ÊÊ\ ]
}
ËË 
}
ÌÌ 
break
ÍÍ 
;
ÍÍ 
default
ÎÎ 
:
ÎÎ 
data
ÑÑ 
=
ÑÑ 
null
ÑÑ 
;
ÑÑ 
break
ÒÒ 
;
ÒÒ 
}
ÓÓ 	
switch
ÔÔ 
(
ÔÔ 
$num
ÔÔ 
)
ÔÔ 
{
ÕÕ 	
case
ÖÖ 
$num
ÖÖ 
:
ÖÖ 
if
×× 
(
×× 
data
×× 
!=
×× 
null
×× 
)
×× 
{
ØØ 

HttpCookie
ÙÙ 

cookieSink
ÙÙ %
=
ÙÙ& '
new
ÙÙ( +

HttpCookie
ÙÙ, 6
(
ÙÙ6 7
$str
ÙÙ7 =
,
ÙÙ= >
HttpUtility
ÙÙ? J
.
ÙÙJ K
	UrlEncode
ÙÙK T
(
ÙÙT U
data
ÙÙU Y
,
ÙÙY Z
Encoding
ÙÙ[ c
.
ÙÙc d
UTF8
ÙÙd h
)
ÙÙh i
)
ÙÙi j
;
ÙÙj k
resp
ÛÛ 
.
ÛÛ 
AppendCookie
ÛÛ !
(
ÛÛ! "

cookieSink
ÛÛ" ,
)
ÛÛ, -
;
ÛÛ- .
}
ÜÜ 
break
ÝÝ 
;
ÝÝ 
default
ÞÞ 
:
ÞÞ 
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
$str
àà /
)
àà/ 0
;
àà0 1
break
áá 
;
áá 
}
ââ 	
}
ãã 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
HttpRequest
åå )
req
åå* -
,
åå- .
HttpResponse
åå/ ;
resp
åå< @
)
åå@ A
{
ææ 
GoodG2B1
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodG2B2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
êê 
(
êê 
req
êê 
,
êê 
resp
êê 
)
êê 
;
êê 
}
ëë 
}íí 
}îî ³+
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_16 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
while"" 
("" 
true"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
break11 
;11 
}22 	
while33 
(33 
true33 
)33 
{44 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 

HttpCookie77 

cookieSink77 %
=77& '
new77( +

HttpCookie77, 6
(776 7
$str777 =
,77= >
data77? C
)77C D
;77D E
resp99 
.99 
AppendCookie99 !
(99! "

cookieSink99" ,
)99, -
;99- .
}:: 
break;; 
;;; 
}<< 	
}== 
privateAA 
voidAA 
GoodG2BAA 
(AA 
HttpRequestAA $
reqAA% (
,AA( )
HttpResponseAA* 6
respAA7 ;
)AA; <
{BB 
stringCC 
dataCC 
;CC 
whileDD 
(DD 
trueDD 
)DD 
{EE 	
dataGG 
=GG 
$strGG 
;GG 
breakHH 
;HH 
}II 	
whileJJ 
(JJ 
trueJJ 
)JJ 
{KK 	
ifLL 
(LL 
dataLL 
!=LL 
nullLL 
)LL 
{MM 

HttpCookieNN 

cookieSinkNN %
=NN& '
newNN( +

HttpCookieNN, 6
(NN6 7
$strNN7 =
,NN= >
dataNN? C
)NNC D
;NND E
respPP 
.PP 
AppendCookiePP !
(PP! "

cookieSinkPP" ,
)PP, -
;PP- .
}QQ 
breakRR 
;RR 
}SS 	
}TT 
privateWW 
voidWW 
GoodB2GWW 
(WW 
HttpRequestWW $
reqWW% (
,WW( )
HttpResponseWW* 6
respWW7 ;
)WW; <
{XX 
stringYY 
dataYY 
;YY 
whileZZ 
(ZZ 
trueZZ 
)ZZ 
{[[ 	
data\\ 
=\\ 
$str\\ 
;\\ 
{]] 
try__ 
{`` 
databb 
=bb 
Consolebb "
.bb" #
ReadLinebb# +
(bb+ ,
)bb, -
;bb- .
}cc 
catchdd 
(dd 
IOExceptiondd "
exceptIOdd# +
)dd+ ,
{ee 
IOff 
.ff 
Loggerff 
.ff 
Logff !
(ff! "
NLogff" &
.ff& '
LogLevelff' /
.ff/ 0
Warnff0 4
,ff4 5
exceptIOff6 >
,ff> ?
$strff@ [
)ff[ \
;ff\ ]
}gg 
}hh 
breakii 
;ii 
}jj 	
whilekk 
(kk 
truekk 
)kk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 

HttpCookieoo 

cookieSinkoo %
=oo& '
newoo( +

HttpCookieoo, 6
(oo6 7
$stroo7 =
,oo= >
HttpUtilityoo? J
.ooJ K
	UrlEncodeooK T
(ooT U
dataooU Y
,ooY Z
Encodingoo[ c
.ooc d
UTF8ood h
)ooh i
)ooi j
;ooj k
respqq 
.qq 
AppendCookieqq !
(qq! "

cookieSinkqq" ,
)qq, -
;qq- .
}rr 
breakss 
;ss 
}tt 	
}uu 
publicww 

overrideww 
voidww 
Goodww 
(ww 
HttpRequestww )
reqww* -
,ww- .
HttpResponseww/ ;
respww< @
)ww@ A
{xx 
GoodG2Byy 
(yy 
reqyy 
,yy 
respyy 
)yy 
;yy 
GoodB2Gzz 
(zz 
reqzz 
,zz 
respzz 
)zz 
;zz 
}{{ 
}}} 
}~~ +
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_17 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data&& 
=&& 
$str&& 
;&& 
{'' 	
try)) 
{** 
data,, 
=,, 
Console,, 
.,, 
ReadLine,, '
(,,' (
),,( )
;,,) *
}-- 
catch.. 
(.. 
IOException.. 
exceptIO.. '
)..' (
{// 
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 "
.00" #
LogLevel00# +
.00+ ,
Warn00, 0
,000 1
exceptIO002 :
,00: ;
$str00< W
)00W X
;00X Y
}11 
}22 	
for33 
(33 
int33 
j33 
=33 
$num33 
;33 
j33 
<33 
$num33 
;33 
j33  
++33  "
)33" #
{44 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 

HttpCookie77 

cookieSink77 %
=77& '
new77( +

HttpCookie77, 6
(776 7
$str777 =
,77= >
data77? C
)77C D
;77D E
resp99 
.99 
AppendCookie99 !
(99! "

cookieSink99" ,
)99, -
;99- .
}:: 
};; 	
}<< 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataBB 
;BB 
dataDD 
=DD 
$strDD 
;DD 
forEE 
(EE 
intEE 
jEE 
=EE 
$numEE 
;EE 
jEE 
<EE 
$numEE 
;EE 
jEE  
++EE  "
)EE" #
{FF 	
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 

HttpCookieII 

cookieSinkII %
=II& '
newII( +

HttpCookieII, 6
(II6 7
$strII7 =
,II= >
dataII? C
)IIC D
;IID E
respKK 
.KK 
AppendCookieKK !
(KK! "

cookieSinkKK" ,
)KK, -
;KK- .
}LL 
}MM 	
}NN 
privateQQ 
voidQQ 
GoodB2GQQ 
(QQ 
HttpRequestQQ $
reqQQ% (
,QQ( )
HttpResponseQQ* 6
respQQ7 ;
)QQ; <
{RR 
stringSS 
dataSS 
;SS 
dataTT 
=TT 
$strTT 
;TT 
{UU 	
tryWW 
{XX 
dataZZ 
=ZZ 
ConsoleZZ 
.ZZ 
ReadLineZZ '
(ZZ' (
)ZZ( )
;ZZ) *
}[[ 
catch\\ 
(\\ 
IOException\\ 
exceptIO\\ '
)\\' (
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
exceptIO^^2 :
,^^: ;
$str^^< W
)^^W X
;^^X Y
}__ 
}`` 	
foraa 
(aa 
intaa 
kaa 
=aa 
$numaa 
;aa 
kaa 
<aa 
$numaa 
;aa 
kaa  
++aa  "
)aa" #
{bb 	
ifcc 
(cc 
datacc 
!=cc 
nullcc 
)cc 
{dd 

HttpCookieee 

cookieSinkee %
=ee& '
newee( +

HttpCookieee, 6
(ee6 7
$stree7 =
,ee= >
HttpUtilityee? J
.eeJ K
	UrlEncodeeeK T
(eeT U
dataeeU Y
,eeY Z
Encodingee[ c
.eec d
UTF8eed h
)eeh i
)eei j
;eej k
respgg 
.gg 
AppendCookiegg !
(gg! "

cookieSinkgg" ,
)gg, -
;gg- .
}hh 
}ii 	
}jj 
publicll 

overridell 
voidll 
Goodll 
(ll 
HttpRequestll )
reqll* -
,ll- .
HttpResponsell/ ;
respll< @
)ll@ A
{mm 
GoodG2Bnn 
(nn 
reqnn 
,nn 
respnn 
)nn 
;nn 
GoodB2Goo 
(oo 
reqoo 
,oo 
respoo 
)oo 
;oo 
}pp 
}rr 
}ss ³M
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_21 ?
:@ A
AbstractTestCaseWebB U
{ 
private   
bool   

badPrivate   
=   
false   #
;  # $
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 	
try(( 
{)) 
data++ 
=++ 
Console++ 
.++ 
ReadLine++ '
(++' (
)++( )
;++) *
},, 
catch-- 
(-- 
IOException-- 
exceptIO-- '
)--' (
{.. 
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// "
.//" #
LogLevel//# +
.//+ ,
Warn//, 0
,//0 1
exceptIO//2 :
,//: ;
$str//< W
)//W X
;//X Y
}00 
}11 	

badPrivate22 
=22 
true22 
;22 
BadSink33 
(33 
data33 
,33 
req33 
,33 
resp33  
)33  !
;33! "
}44 
private66 
void66 
BadSink66 
(66 
string66 
data66  $
,66% &
HttpRequest66' 2
req663 6
,666 7
HttpResponse668 D
resp66E I
)66I J
{77 
if88 

(88 

badPrivate88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 

HttpCookie<< 

cookieSink<< %
=<<& '
new<<( +

HttpCookie<<, 6
(<<6 7
$str<<7 =
,<<= >
data<<? C
)<<C D
;<<D E
resp>> 
.>> 
AppendCookie>> !
(>>! "

cookieSink>>" ,
)>>, -
;>>- .
}?? 
}@@ 	
}AA 
privateDD 
boolDD 
goodB2G1PrivateDD  
=DD! "
falseDD# (
;DD( )
privateEE 
boolEE 
goodB2G2PrivateEE  
=EE! "
falseEE# (
;EE( )
privateFF 
boolFF 
goodG2BPrivateFF 
=FF  !
falseFF" '
;FF' (
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
HttpRequestHH )
reqHH* -
,HH- .
HttpResponseHH/ ;
respHH< @
)HH@ A
{II 
GoodB2G1JJ 
(JJ 
reqJJ 
,JJ 
respJJ 
)JJ 
;JJ 
GoodB2G2KK 
(KK 
reqKK 
,KK 
respKK 
)KK 
;KK 
GoodG2BLL 
(LL 
reqLL 
,LL 
respLL 
)LL 
;LL 
}MM 
privatePP 
voidPP 
GoodB2G1PP 
(PP 
HttpRequestPP %
reqPP& )
,PP) *
HttpResponsePP+ 7
respPP8 <
)PP< =
{QQ 
stringRR 
dataRR 
;RR 
dataSS 
=SS 
$strSS 
;SS 
{TT 	
tryVV 
{WW 
dataYY 
=YY 
ConsoleYY 
.YY 
ReadLineYY '
(YY' (
)YY( )
;YY) *
}ZZ 
catch[[ 
([[ 
IOException[[ 
exceptIO[[ '
)[[' (
{\\ 
IO]] 
.]] 
Logger]] 
.]] 
Log]] 
(]] 
NLog]] "
.]]" #
LogLevel]]# +
.]]+ ,
Warn]], 0
,]]0 1
exceptIO]]2 :
,]]: ;
$str]]< W
)]]W X
;]]X Y
}^^ 
}__ 	
goodB2G1Private`` 
=`` 
false`` 
;``  
GoodB2G1Sinkaa 
(aa 
dataaa 
,aa 
reqaa 
,aa  
respaa! %
)aa% &
;aa& '
}bb 
privatedd 
voiddd 
GoodB2G1Sinkdd 
(dd 
stringdd $
datadd% )
,dd* +
HttpRequestdd, 7
reqdd8 ;
,dd; <
HttpResponsedd= I
respddJ N
)ddN O
{ee 
ifff 

(ff 
goodB2G1Privateff 
)ff 
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
$strii /
)ii/ 0
;ii0 1
}jj 	
elsekk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 

HttpCookieoo 

cookieSinkoo %
=oo& '
newoo( +

HttpCookieoo, 6
(oo6 7
$stroo7 =
,oo= >
HttpUtilityoo? J
.ooJ K
	UrlEncodeooK T
(ooT U
dataooU Y
,ooY Z
Encodingoo[ c
.ooc d
UTF8ood h
)ooh i
)ooi j
;ooj k
respqq 
.qq 
AppendCookieqq !
(qq! "

cookieSinkqq" ,
)qq, -
;qq- .
}rr 
}ss 	
}tt 
privateww 
voidww 
GoodB2G2ww 
(ww 
HttpRequestww %
reqww& )
,ww) *
HttpResponseww+ 7
respww8 <
)ww< =
{xx 
stringyy 
datayy 
;yy 
datazz 
=zz 
$strzz 
;zz 
{{{ 	
try}} 
{~~ 
data
 
=
 
Console
 
.
 
ReadLine
 '
(
' (
)
( )
;
) *
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
goodB2G2Private
 
=
 
true
 
;
 
GoodB2G2Sink
 
(
 
data
 
,
 
req
 
,
  
resp
! %
)
% &
;
& '
}
 
private
 
void
 
GoodB2G2Sink
 
(
 
string
 $
data
% )
,
* +
HttpRequest
, 7
req
8 ;
,
; <
HttpResponse
= I
resp
J N
)
N O
{
 
if
 

(
 
goodB2G2Private
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 

HttpCookie
 

cookieSink
 %
=
& '
new
( +

HttpCookie
, 6
(
6 7
$str
7 =
,
= >
HttpUtility
? J
.
J K
	UrlEncode
K T
(
T U
data
U Y
,
Y Z
Encoding
[ c
.
c d
UTF8
d h
)
h i
)
i j
;
j k
resp
 
.
 
AppendCookie
 !
(
! "

cookieSink
" ,
)
, -
;
- .
}
 
}
 	
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
goodG2BPrivate
 
=
 
true
 
;
 
GoodG2BSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
$ %
;
% &
}
   
private
¢¢ 
void
¢¢ 
GoodG2BSink
¢¢ 
(
¢¢ 
string
¢¢ #
data
¢¢$ (
,
¢¢) *
HttpRequest
¢¢+ 6
req
¢¢7 :
,
¢¢: ;
HttpResponse
¢¢< H
resp
¢¢I M
)
¢¢M N
{
££ 
if
¤¤ 

(
¤¤ 
goodG2BPrivate
¤¤ 
)
¤¤ 
{
¥¥ 	
if
¦¦ 
(
¦¦ 
data
¦¦ 
!=
¦¦ 
null
¦¦ 
)
¦¦ 
{
§§ 

HttpCookie
¨¨ 

cookieSink
¨¨ %
=
¨¨& '
new
¨¨( +

HttpCookie
¨¨, 6
(
¨¨6 7
$str
¨¨7 =
,
¨¨= >
data
¨¨? C
)
¨¨C D
;
¨¨D E
resp
ªª 
.
ªª 
AppendCookie
ªª !
(
ªª! "

cookieSink
ªª" ,
)
ªª, -
;
ªª- .
}
«« 
}
¬¬ 	
}
­­ 
}¯¯ 
}°° 1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22a @
:A B
AbstractTestCaseWebC V
{ 
public   

static   
bool   
badPublicStatic   &
=  ' (
false  ) .
;  . /
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
=$$ 
null$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 	
try(( 
{)) 
data++ 
=++ 
Console++ 
.++ 
ReadLine++ '
(++' (
)++( )
;++) *
},, 
catch-- 
(-- 
IOException-- 
exceptIO-- '
)--' (
{.. 
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// "
.//" #
LogLevel//# +
.//+ ,
Warn//, 0
,//0 1
exceptIO//2 :
,//: ;
$str//< W
)//W X
;//X Y
}00 
}11 	
badPublicStatic22 
=22 
true22 
;22 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22b33 B
.33B C
BadSink33C J
(33J K
data33K O
,33P Q
req33R U
,33U V
resp33W [
)33[ \
;33\ ]
}44 
public77 

static77 
bool77  
goodB2G1PublicStatic77 +
=77, -
false77. 3
;773 4
public88 

static88 
bool88  
goodB2G2PublicStatic88 +
=88, -
false88. 3
;883 4
public99 

static99 
bool99 
goodG2BPublicStatic99 *
=99+ ,
false99- 2
;992 3
public;; 

override;; 
void;; 
Good;; 
(;; 
HttpRequest;; )
req;;* -
,;;- .
HttpResponse;;/ ;
resp;;< @
);;@ A
{<< 
GoodB2G1== 
(== 
req== 
,== 
resp== 
)== 
;== 
GoodB2G2>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodB2G1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
=EE 
nullEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	 
goodB2G1PublicStaticSS 
=SS 
falseSS $
;SS$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22bTT B
.TTB C
GoodB2G1SinkTTC O
(TTO P
dataTTP T
,TTU V
reqTTW Z
,TTZ [
respTT\ `
)TT` a
;TTa b
}UU 
privateXX 
voidXX 
GoodB2G2XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
=ZZ 
nullZZ 
;ZZ 
data[[ 
=[[ 
$str[[ 
;[[ 
{\\ 	
try^^ 
{__ 
dataaa 
=aa 
Consoleaa 
.aa 
ReadLineaa '
(aa' (
)aa( )
;aa) *
}bb 
catchcc 
(cc 
IOExceptioncc 
exceptIOcc '
)cc' (
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee 
(ee 
NLogee "
.ee" #
LogLevelee# +
.ee+ ,
Warnee, 0
,ee0 1
exceptIOee2 :
,ee: ;
$stree< W
)eeW X
;eeX Y
}ff 
}gg 	 
goodB2G2PublicStatichh 
=hh 
truehh #
;hh# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22bii B
.iiB C
GoodB2G2SinkiiC O
(iiO P
dataiiP T
,iiU V
reqiiW Z
,iiZ [
respii\ `
)ii` a
;iia b
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
HttpRequestmm $
reqmm% (
,mm( )
HttpResponsemm* 6
respmm7 ;
)mm; <
{nn 
stringoo 
dataoo 
=oo 
nulloo 
;oo 
dataqq 
=qq 
$strqq 
;qq 
goodG2BPublicStaticrr 
=rr 
truerr "
;rr" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22bss B
.ssB C
GoodG2BSinkssC N
(ssN O
datassO S
,ssT U
reqssV Y
,ssY Z
respss[ _
)ss_ `
;ss` a
}tt 
}vv 
}ww '
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22a F
.F G
badPublicStaticG V
)V W
{   	
if!! 
(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 

HttpCookie## 

cookieSink## %
=##& '
new##( +

HttpCookie##, 6
(##6 7
$str##7 =
,##= >
data##? C
)##C D
;##D E
resp%% 
.%% 
AppendCookie%% !
(%%! "

cookieSink%%" ,
)%%, -
;%%- .
}&& 
}'' 	
else(( 
{)) 	
data,, 
=,, 
null,, 
;,, 
}-- 	
}.. 
public33 

static33 
void33 
GoodB2G1Sink33 #
(33# $
string33$ *
data33+ /
,330 1
HttpRequest332 =
req33> A
,33A B
HttpResponse33C O
resp33P T
)33T U
{44 
if55 

(55 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22a55 F
.55F G 
goodB2G1PublicStatic55G [
)55[ \
{66 	
data99 
=99 
null99 
;99 
}:: 	
else;; 
{<< 	
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 

HttpCookie?? 

cookieSink?? %
=??& '
new??( +

HttpCookie??, 6
(??6 7
$str??7 =
,??= >
HttpUtility??? J
.??J K
	UrlEncode??K T
(??T U
data??U Y
,??Y Z
Encoding??[ c
.??c d
UTF8??d h
)??h i
)??i j
;??j k
respAA 
.AA 
AppendCookieAA !
(AA! "

cookieSinkAA" ,
)AA, -
;AA- .
}BB 
}CC 	
}DD 
publicGG 

staticGG 
voidGG 
GoodB2G2SinkGG #
(GG# $
stringGG$ *
dataGG+ /
,GG0 1
HttpRequestGG2 =
reqGG> A
,GGA B
HttpResponseGGC O
respGGP T
)GGT U
{HH 
ifII 

(II F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22aII F
.IIF G 
goodB2G2PublicStaticIIG [
)II[ \
{JJ 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 

HttpCookieMM 

cookieSinkMM %
=MM& '
newMM( +

HttpCookieMM, 6
(MM6 7
$strMM7 =
,MM= >
HttpUtilityMM? J
.MMJ K
	UrlEncodeMMK T
(MMT U
dataMMU Y
,MMY Z
EncodingMM[ c
.MMc d
UTF8MMd h
)MMh i
)MMi j
;MMj k
respOO 
.OO 
AppendCookieOO !
(OO! "

cookieSinkOO" ,
)OO, -
;OO- .
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
nullVV 
;VV 
}WW 	
}XX 
public[[ 

static[[ 
void[[ 
GoodG2BSink[[ "
([[" #
string[[# )
data[[* .
,[[/ 0
HttpRequest[[1 <
req[[= @
,[[@ A
HttpResponse[[B N
resp[[O S
)[[S T
{\\ 
if]] 

(]] F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_22a]] F
.]]F G
goodG2BPublicStatic]]G Z
)]]Z [
{^^ 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 

HttpCookieaa 

cookieSinkaa %
=aa& '
newaa( +

HttpCookieaa, 6
(aa6 7
$straa7 =
,aa= >
dataaa? C
)aaC D
;aaD E
respcc 
.cc 
AppendCookiecc !
(cc! "

cookieSinkcc" ,
)cc, -
;cc- .
}dd 
}ee 	
elseff 
{gg 	
datajj 
=jj 
nulljj 
;jj 
}kk 	
}ll 
}nn 
}oo à+
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_31 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
dataCopy!! 
;!! 
{"" 	
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
dataCopy11 
=11 
data11 
;11 
}22 	
{33 	
string44 
data44 
=44 
dataCopy44 "
;44" #
if55 
(55 
data55 
!=55 
null55 
)55 
{66 

HttpCookie77 

cookieSink77 %
=77& '
new77( +

HttpCookie77, 6
(776 7
$str777 =
,77= >
data77? C
)77C D
;77D E
resp99 
.99 
AppendCookie99 !
(99! "

cookieSink99" ,
)99, -
;99- .
}:: 
};; 	
}<< 
public?? 

override?? 
void?? 
Good?? 
(?? 
HttpRequest?? )
req??* -
,??- .
HttpResponse??/ ;
resp??< @
)??@ A
{@@ 
GoodG2BAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
GoodB2GBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
}CC 
privateFF 
voidFF 
GoodG2BFF 
(FF 
HttpRequestFF $
reqFF% (
,FF( )
HttpResponseFF* 6
respFF7 ;
)FF; <
{GG 
stringHH 
dataCopyHH 
;HH 
{II 	
stringJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$strLL 
;LL 
dataCopyMM 
=MM 
dataMM 
;MM 
}NN 	
{OO 	
stringPP 
dataPP 
=PP 
dataCopyPP "
;PP" #
ifQQ 
(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 

HttpCookieSS 

cookieSinkSS %
=SS& '
newSS( +

HttpCookieSS, 6
(SS6 7
$strSS7 =
,SS= >
dataSS? C
)SSC D
;SSD E
respUU 
.UU 
AppendCookieUU !
(UU! "

cookieSinkUU" ,
)UU, -
;UU- .
}VV 
}WW 	
}XX 
private[[ 
void[[ 
GoodB2G[[ 
([[ 
HttpRequest[[ $
req[[% (
,[[( )
HttpResponse[[* 6
resp[[7 ;
)[[; <
{\\ 
string]] 
dataCopy]] 
;]] 
{^^ 	
string__ 
data__ 
;__ 
data`` 
=`` 
$str`` 
;`` 
{aa 
trycc 
{dd 
dataff 
=ff 
Consoleff "
.ff" #
ReadLineff# +
(ff+ ,
)ff, -
;ff- .
}gg 
catchhh 
(hh 
IOExceptionhh "
exceptIOhh# +
)hh+ ,
{ii 
IOjj 
.jj 
Loggerjj 
.jj 
Logjj !
(jj! "
NLogjj" &
.jj& '
LogLeveljj' /
.jj/ 0
Warnjj0 4
,jj4 5
exceptIOjj6 >
,jj> ?
$strjj@ [
)jj[ \
;jj\ ]
}kk 
}ll 
dataCopymm 
=mm 
datamm 
;mm 
}nn 	
{oo 	
stringpp 
datapp 
=pp 
dataCopypp "
;pp" #
ifqq 
(qq 
dataqq 
!=qq 
nullqq 
)qq 
{rr 

HttpCookiess 

cookieSinkss %
=ss& '
newss( +

HttpCookiess, 6
(ss6 7
$strss7 =
,ss= >
HttpUtilityss? J
.ssJ K
	UrlEncodessK T
(ssT U
datassU Y
,ssY Z
Encodingss[ c
.ssc d
UTF8ssd h
)ssh i
)ssi j
;ssj k
respuu 
.uu 
AppendCookieuu !
(uu! "

cookieSinkuu" ,
)uu, -
;uu- .
}vv 
}ww 	
}xx 
}zz 
}{{ 0
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_41 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{   
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public)) 

override)) 
void)) 
Bad)) 
()) 
HttpRequest)) (
req))) ,
,)), -
HttpResponse)). :
resp)); ?
)))? @
{** 
string++ 
data++ 
;++ 
data,, 
=,, 
$str,, 
;,, 
{-- 	
try// 
{00 
data22 
=22 
Console22 
.22 
ReadLine22 '
(22' (
)22( )
;22) *
}33 
catch44 
(44 
IOException44 
exceptIO44 '
)44' (
{55 
IO66 
.66 
Logger66 
.66 
Log66 
(66 
NLog66 "
.66" #
LogLevel66# +
.66+ ,
Warn66, 0
,660 1
exceptIO662 :
,66: ;
$str66< W
)66W X
;66X Y
}77 
}88 	
BadSink99 
(99 
data99 
,99 
req99 
,99 
resp99  
)99! "
;99" #
}:: 
public== 

override== 
void== 
Good== 
(== 
HttpRequest== )
req==* -
,==- .
HttpResponse==/ ;
resp==< @
)==@ A
{>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
GoodB2G@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
}AA 
privateCC 
staticCC 
voidCC 
GoodG2BSinkCC #
(CC# $
stringCC$ *
dataCC+ /
,CC0 1
HttpRequestCC2 =
reqCC> A
,CCA B
HttpResponseCCC O
respCCP T
)CCT U
{DD 
ifEE 

(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 	

HttpCookieGG 

cookieSinkGG !
=GG" #
newGG$ '

HttpCookieGG( 2
(GG2 3
$strGG3 9
,GG9 :
dataGG; ?
)GG? @
;GG@ A
respII 
.II 
AppendCookieII 
(II 

cookieSinkII (
)II( )
;II) *
}JJ 	
}KK 
privateNN 
staticNN 
voidNN 
GoodG2BNN 
(NN  
HttpRequestNN  +
reqNN, /
,NN/ 0
HttpResponseNN1 =
respNN> B
)NNB C
{OO 
stringPP 
dataPP 
;PP 
dataRR 
=RR 
$strRR 
;RR 
GoodG2BSinkSS 
(SS 
dataSS 
,SS 
reqSS 
,SS 
respSS  $
)SS% &
;SS& '
}TT 
privateVV 
staticVV 
voidVV 
GoodB2GSinkVV #
(VV# $
stringVV$ *
dataVV+ /
,VV0 1
HttpRequestVV2 =
reqVV> A
,VVA B
HttpResponseVVC O
respVVP T
)VVT U
{WW 
ifXX 

(XX 
dataXX 
!=XX 
nullXX 
)XX 
{YY 	

HttpCookieZZ 

cookieSinkZZ !
=ZZ" #
newZZ$ '

HttpCookieZZ( 2
(ZZ2 3
$strZZ3 9
,ZZ9 :
HttpUtilityZZ; F
.ZZF G
	UrlEncodeZZG P
(ZZP Q
dataZZQ U
,ZZU V
EncodingZZW _
.ZZ_ `
UTF8ZZ` d
)ZZd e
)ZZe f
;ZZf g
resp\\ 
.\\ 
AppendCookie\\ 
(\\ 

cookieSink\\ (
)\\( )
;\\) *
}]] 	
}^^ 
privateaa 
staticaa 
voidaa 
GoodB2Gaa 
(aa  
HttpRequestaa  +
reqaa, /
,aa/ 0
HttpResponseaa1 =
respaa> B
)aaB C
{bb 
stringcc 
datacc 
;cc 
datadd 
=dd 
$strdd 
;dd 
{ee 	
trygg 
{hh 
datajj 
=jj 
Consolejj 
.jj 
ReadLinejj '
(jj' (
)jj( )
;jj) *
}kk 
catchll 
(ll 
IOExceptionll 
exceptIOll '
)ll' (
{mm 
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn "
.nn" #
LogLevelnn# +
.nn+ ,
Warnnn, 0
,nn0 1
exceptIOnn2 :
,nn: ;
$strnn< W
)nnW X
;nnX Y
}oo 
}pp 	
GoodB2GSinkqq 
(qq 
dataqq 
,qq 
reqqq 
,qq 
respqq  $
)qq% &
;qq& '
}rr 
}tt 
}uu Ø0
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_42 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
return// 
data// 
;// 
}00 
public22 

override22 
void22 
Bad22 
(22 
HttpRequest22 (
req22) ,
,22, -
HttpResponse22. :
resp22; ?
)22? @
{33 
string44 
data44 
=44 
	BadSource44 
(44  
req44  #
,44# $
resp44% )
)44) *
;44* +
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	

HttpCookie77 

cookieSink77 !
=77" #
new77$ '

HttpCookie77( 2
(772 3
$str773 9
,779 :
data77; ?
)77? @
;77@ A
resp99 
.99 
AppendCookie99 
(99 

cookieSink99 (
)99( )
;99) *
}:: 	
};; 
private?? 
static?? 
string?? 
GoodG2BSource?? '
(??' (
HttpRequest??( 3
req??4 7
,??7 8
HttpResponse??9 E
resp??F J
)??J K
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 
returnDD 
dataDD 
;DD 
}EE 
privateGG 
staticGG 
voidGG 
GoodG2BGG 
(GG  
HttpRequestGG  +
reqGG, /
,GG/ 0
HttpResponseGG1 =
respGG> B
)GGB C
{HH 
stringII 
dataII 
=II 
GoodG2BSourceII #
(II# $
reqII$ '
,II' (
respII) -
)II- .
;II. /
ifJJ 

(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 	

HttpCookieLL 

cookieSinkLL !
=LL" #
newLL$ '

HttpCookieLL( 2
(LL2 3
$strLL3 9
,LL9 :
dataLL; ?
)LL? @
;LL@ A
respNN 
.NN 
AppendCookieNN 
(NN 

cookieSinkNN (
)NN( )
;NN) *
}OO 	
}PP 
privateSS 
staticSS 
stringSS 
GoodB2GSourceSS '
(SS' (
HttpRequestSS( 3
reqSS4 7
,SS7 8
HttpResponseSS9 E
respSSF J
)SSJ K
{TT 
stringUU 
dataUU 
;UU 
dataVV 
=VV 
$strVV 
;VV 
{WW 	
tryYY 
{ZZ 
data\\ 
=\\ 
Console\\ 
.\\ 
ReadLine\\ '
(\\' (
)\\( )
;\\) *
}]] 
catch^^ 
(^^ 
IOException^^ 
exceptIO^^ '
)^^' (
{__ 
IO`` 
.`` 
Logger`` 
.`` 
Log`` 
(`` 
NLog`` "
.``" #
LogLevel``# +
.``+ ,
Warn``, 0
,``0 1
exceptIO``2 :
,``: ;
$str``< W
)``W X
;``X Y
}aa 
}bb 	
returncc 
datacc 
;cc 
}dd 
privateff 
staticff 
voidff 
GoodB2Gff 
(ff  
HttpRequestff  +
reqff, /
,ff/ 0
HttpResponseff1 =
respff> B
)ffB C
{gg 
stringhh 
datahh 
=hh 
GoodB2GSourcehh #
(hh# $
reqhh$ '
,hh' (
resphh) -
)hh- .
;hh. /
ifii 

(ii 
dataii 
!=ii 
nullii 
)ii 
{jj 	

HttpCookiekk 

cookieSinkkk !
=kk" #
newkk$ '

HttpCookiekk( 2
(kk2 3
$strkk3 9
,kk9 :
HttpUtilitykk; F
.kkF G
	UrlEncodekkG P
(kkP Q
datakkQ U
,kkU V
EncodingkkW _
.kk_ `
UTF8kk` d
)kkd e
)kke f
;kkf g
respmm 
.mm 
AppendCookiemm 
(mm 

cookieSinkmm (
)mm( )
;mm) *
}nn 	
}oo 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
HttpRequestqq )
reqqq* -
,qq- .
HttpResponseqq/ ;
respqq< @
)qq@ A
{rr 
GoodG2Bss 
(ss 
reqss 
,ss 
respss 
)ss 
;ss 
GoodB2Gtt 
(tt 
reqtt 
,tt 
resptt 
)tt 
;tt 
}uu 
}ww 
}xx ý2
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_45 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
string 
dataBad 
; 
private   
string   
dataGoodG2B   
;   
private!! 
string!! 
dataGoodB2G!! 
;!! 
private## 
void## 
BadSink## 
(## 
HttpRequest## $
req##% (
,##( )
HttpResponse##* 6
resp##7 ;
)##; <
{$$ 
string%% 
data%% 
=%% 
dataBad%% 
;%% 
if&& 

(&& 
data&& 
!=&& 
null&& 
)&& 
{'' 	

HttpCookie(( 

cookieSink(( !
=((" #
new(($ '

HttpCookie((( 2
(((2 3
$str((3 9
,((9 :
data((; ?
)((? @
;((@ A
resp** 
.** 
AppendCookie** 
(** 

cookieSink** (
)**( )
;**) *
}++ 	
},, 
public.. 

override.. 
void.. 
Bad.. 
(.. 
HttpRequest.. (
req..) ,
,.., -
HttpResponse... :
resp..; ?
)..? @
{// 
string00 
data00 
;00 
data11 
=11 
$str11 
;11 
{22 	
try44 
{55 
data77 
=77 
Console77 
.77 
ReadLine77 '
(77' (
)77( )
;77) *
}88 
catch99 
(99 
IOException99 
exceptIO99 '
)99' (
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; 
(;; 
NLog;; "
.;;" #
LogLevel;;# +
.;;+ ,
Warn;;, 0
,;;0 1
exceptIO;;2 :
,;;: ;
$str;;< W
);;W X
;;;X Y
}<< 
}== 	
dataBad>> 
=>> 
data>> 
;>> 
BadSink?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
GoodG2BEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
GoodB2GFF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
privateII 
voidII 
GoodG2BSinkII 
(II 
HttpRequestII (
reqII) ,
,II, -
HttpResponseII. :
respII; ?
)II? @
{JJ 
stringKK 
dataKK 
=KK 
dataGoodG2BKK !
;KK! "
ifLL 

(LL 
dataLL 
!=LL 
nullLL 
)LL 
{MM 	

HttpCookieNN 

cookieSinkNN !
=NN" #
newNN$ '

HttpCookieNN( 2
(NN2 3
$strNN3 9
,NN9 :
dataNN; ?
)NN? @
;NN@ A
respPP 
.PP 
AppendCookiePP 
(PP 

cookieSinkPP (
)PP( )
;PP) *
}QQ 	
}RR 
privateUU 
voidUU 
GoodG2BUU 
(UU 
HttpRequestUU $
reqUU% (
,UU( )
HttpResponseUU* 6
respUU7 ;
)UU; <
{VV 
stringWW 
dataWW 
;WW 
dataYY 
=YY 
$strYY 
;YY 
dataGoodG2BZZ 
=ZZ 
dataZZ 
;ZZ 
GoodG2BSink[[ 
([[ 
req[[ 
,[[ 
resp[[ 
)[[ 
;[[ 
}\\ 
private^^ 
void^^ 
GoodB2GSink^^ 
(^^ 
HttpRequest^^ (
req^^) ,
,^^, -
HttpResponse^^. :
resp^^; ?
)^^? @
{__ 
string`` 
data`` 
=`` 
dataGoodB2G`` !
;``! "
ifaa 

(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 	

HttpCookiecc 

cookieSinkcc !
=cc" #
newcc$ '

HttpCookiecc( 2
(cc2 3
$strcc3 9
,cc9 :
HttpUtilitycc; F
.ccF G
	UrlEncodeccG P
(ccP Q
dataccQ U
,ccU V
EncodingccW _
.cc_ `
UTF8cc` d
)ccd e
)cce f
;ccf g
respee 
.ee 
AppendCookieee 
(ee 

cookieSinkee (
)ee( )
;ee) *
}ff 	
}gg 
privatejj 
voidjj 
GoodB2Gjj 
(jj 
HttpRequestjj $
reqjj% (
,jj( )
HttpResponsejj* 6
respjj7 ;
)jj; <
{kk 
stringll 
datall 
;ll 
datamm 
=mm 
$strmm 
;mm 
{nn 	
trypp 
{qq 
datass 
=ss 
Consoless 
.ss 
ReadLiness '
(ss' (
)ss( )
;ss) *
}tt 
catchuu 
(uu 
IOExceptionuu 
exceptIOuu '
)uu' (
{vv 
IOww 
.ww 
Loggerww 
.ww 
Logww 
(ww 
NLogww "
.ww" #
LogLevelww# +
.ww+ ,
Warnww, 0
,ww0 1
exceptIOww2 :
,ww: ;
$strww< W
)wwW X
;wwX Y
}xx 
}yy 	
dataGoodB2Gzz 
=zz 
datazz 
;zz 
GoodB2GSink{{ 
({{ 
req{{ 
,{{ 
resp{{ 
){{ 
;{{ 
}|| 
}~~ 
} ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_51a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_51b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//\ ]
;//] ^
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_51b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??` a
;??a b
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_51bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS` a
;SSa b
}TT 
}VV 
}WW ¤
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_51b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¤
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_52c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53d B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53d'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53d-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¤
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_53d @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54d B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54d'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54d-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54d @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54e B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54e'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54e-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¤
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_54e @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
data*** .
,**/ 0
HttpRequest**1 <
req**= @
,**@ A
HttpResponse**B N
resp**O S
)**S T
{++ 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	

HttpCookie.. 

cookieSink.. !
=.." #
new..$ '

HttpCookie..( 2
(..2 3
$str..3 9
,..9 :
data..; ?
)..? @
;..@ A
resp00 
.00 
AppendCookie00 
(00 

cookieSink00 (
)00( )
;00) *
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
data55* .
,55/ 0
HttpRequest551 <
req55= @
,55@ A
HttpResponse55B N
resp55O S
)55S T
{66 
if77 

(77 
data77 
!=77 
null77 
)77 
{88 	

HttpCookie99 

cookieSink99 !
=99" #
new99$ '

HttpCookie99( 2
(992 3
$str993 9
,999 :
HttpUtility99; F
.99F G
	UrlEncode99G P
(99P Q
data99Q U
,99U V
Encoding99W _
.99_ `
UTF899` d
)99d e
)99e f
;99f g
resp;; 
.;; 
AppendCookie;; 
(;; 

cookieSink;; (
);;( )
;;;) *
}<< 	
}== 
}?? 
}@@ 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_61a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_61b P
.P Q
	BadSourceQ Z
(Z [
req[ ^
,^ _
resp` d
)d e
;e f
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public)) 

override)) 
void)) 
Good)) 
()) 
HttpRequest)) )
req))* -
,))- .
HttpResponse))/ ;
resp))< @
)))@ A
{** 
GoodG2B++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
GoodB2G,, 
(,, 
req,, 
,,, 
resp,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
HttpRequest00  +
req00, /
,00/ 0
HttpResponse001 =
resp00> B
)00B C
{11 
string22 
data22 
=22 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_61b22 P
.22P Q
GoodG2BSource22Q ^
(22^ _
req22_ b
,22b c
resp22d h
)22h i
;22i j
if33 

(33 
data33 
!=33 
null33 
)33 
{44 	

HttpCookie55 

cookieSink55 !
=55" #
new55$ '

HttpCookie55( 2
(552 3
$str553 9
,559 :
data55; ?
)55? @
;55@ A
resp77 
.77 
AppendCookie77 
(77 

cookieSink77 (
)77( )
;77) *
}88 	
}99 
private<< 
static<< 
void<< 
GoodB2G<< 
(<<  
HttpRequest<<  +
req<<, /
,<</ 0
HttpResponse<<1 =
resp<<> B
)<<B C
{== 
string>> 
data>> 
=>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_61b>> P
.>>P Q
GoodB2GSource>>Q ^
(>>^ _
req>>_ b
,>>b c
resp>>d h
)>>h i
;>>i j
if?? 

(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 	

HttpCookieAA 

cookieSinkAA !
=AA" #
newAA$ '

HttpCookieAA( 2
(AA2 3
$strAA3 9
,AA9 :
HttpUtilityAA; F
.AAF G
	UrlEncodeAAG P
(AAP Q
dataAAQ U
,AAU V
EncodingAAW _
.AA_ `
UTF8AA` d
)AAd e
)AAe f
;AAf g
respCC 
.CC 
AppendCookieCC 
(CC 

cookieSinkCC (
)CC( )
;CC) *
}DD 	
}EE 
}GG 
}HH ü
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_61b @
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
return// 
data// 
;// 
}00 
public55 

static55 
string55 
GoodG2BSource55 &
(55& '
HttpRequest55' 2
req553 6
,556 7
HttpResponse558 D
resp55E I
)55I J
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 
return:: 
data:: 
;:: 
};; 
public>> 

static>> 
string>> 
GoodB2GSource>> &
(>>& '
HttpRequest>>' 2
req>>3 6
,>>6 7
HttpResponse>>8 D
resp>>E I
)>>I J
{?? 
string@@ 
data@@ 
;@@ 
dataAA 
=AA 
$strAA 
;AA 
{BB 	
tryDD 
{EE 
dataGG 
=GG 
ConsoleGG 
.GG 
ReadLineGG '
(GG' (
)GG( )
;GG) *
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR Ä&
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_66a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
string// 
[// 
]// 
	dataArray// 
=// 
new//  
string//! '
[//' (
$num//( )
]//) *
;//* +
	dataArray00 
[00 
$num00 
]00 
=00 
data00 
;00 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_66b11 B
.11B C
BadSink11C J
(11J K
	dataArray11K T
,11U V
req11W Z
,11Z [
resp11\ `
)11a b
;11b c
}22 
public55 

override55 
void55 
Good55 
(55 
HttpRequest55 )
req55* -
,55- .
HttpResponse55/ ;
resp55< @
)55@ A
{66 
GoodG2B77 
(77 
req77 
,77 
resp77 
)77 
;77 
GoodB2G88 
(88 
req88 
,88 
resp88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
HttpRequest<<  +
req<<, /
,<</ 0
HttpResponse<<1 =
resp<<> B
)<<B C
{== 
string>> 
data>> 
;>> 
data@@ 
=@@ 
$str@@ 
;@@ 
stringAA 
[AA 
]AA 
	dataArrayAA 
=AA 
newAA  
stringAA! '
[AA' (
$numAA( )
]AA) *
;AA* +
	dataArrayBB 
[BB 
$numBB 
]BB 
=BB 
dataBB 
;BB F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_66bCC B
.CCB C
GoodG2BSinkCCC N
(CCN O
	dataArrayCCO X
,CCY Z
reqCC[ ^
,CC^ _
respCC` d
)CCe f
;CCf g
}DD 
privateGG 
staticGG 
voidGG 
GoodB2GGG 
(GG  
HttpRequestGG  +
reqGG, /
,GG/ 0
HttpResponseGG1 =
respGG> B
)GGB C
{HH 
stringII 
dataII 
;II 
dataJJ 
=JJ 
$strJJ 
;JJ 
{KK 	
tryMM 
{NN 
dataPP 
=PP 
ConsolePP 
.PP 
ReadLinePP '
(PP' (
)PP( )
;PP) *
}QQ 
catchRR 
(RR 
IOExceptionRR 
exceptIORR '
)RR' (
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
exceptIOTT2 :
,TT: ;
$strTT< W
)TTW X
;TTX Y
}UU 
}VV 	
stringWW 
[WW 
]WW 
	dataArrayWW 
=WW 
newWW  
stringWW! '
[WW' (
$numWW( )
]WW) *
;WW* +
	dataArrayXX 
[XX 
$numXX 
]XX 
=XX 
dataXX 
;XX F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_66bYY B
.YYB C
GoodB2GSinkYYC N
(YYN O
	dataArrayYYO X
,YYY Z
reqYY[ ^
,YY^ _
respYY` d
)YYe f
;YYf g
}ZZ 
}\\ 
}]] ®
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_66b @
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
string++# )
[++) *
]++* +
	dataArray++, 5
,++6 7
HttpRequest++8 C
req++D G
,++G H
HttpResponse++I U
resp++V Z
)++Z [
{,, 
string-- 
data-- 
=-- 
	dataArray-- 
[--  
$num--  !
]--! "
;--" #
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #
string77# )
[77) *
]77* +
	dataArray77, 5
,776 7
HttpRequest778 C
req77D G
,77G H
HttpResponse77I U
resp77V Z
)77Z [
{88 
string99 
data99 
=99 
	dataArray99 
[99  
$num99  !
]99! "
;99" #
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC '
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67a @
:A B
AbstractTestCaseWebC V
{ 
public 

class 
	Container 
{   
public!! 
string!! 
containerOne!! "
;!!" #
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
data'' 
='' 
$str'' 
;'' 
{(( 	
try** 
{++ 
data-- 
=-- 
Console-- 
.-- 
ReadLine-- '
(--' (
)--( )
;--) *
}.. 
catch// 
(// 
IOException// 
exceptIO// '
)//' (
{00 
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 "
.11" #
LogLevel11# +
.11+ ,
Warn11, 0
,110 1
exceptIO112 :
,11: ;
$str11< W
)11W X
;11X Y
}22 
}33 	
	Container44 
dataContainer44 
=44  !
new44" %
	Container44& /
(44/ 0
)440 1
;441 2
dataContainer55 
.55 
containerOne55 "
=55# $
data55% )
;55) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67b66 B
.66B C
BadSink66C J
(66J K
dataContainer66K X
,66Y Z
req66[ ^
,66^ _
resp66` d
)66e f
;66f g
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
HttpRequest:: )
req::* -
,::- .
HttpResponse::/ ;
resp::< @
)::@ A
{;; 
GoodG2B<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
GoodB2G== 
(== 
req== 
,== 
resp== 
)== 
;== 
}>> 
privateAA 
staticAA 
voidAA 
GoodG2BAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
stringCC 
dataCC 
;CC 
dataEE 
=EE 
$strEE 
;EE 
	ContainerFF 
dataContainerFF 
=FF  !
newFF" %
	ContainerFF& /
(FF/ 0
)FF0 1
;FF1 2
dataContainerGG 
.GG 
containerOneGG "
=GG# $
dataGG% )
;GG) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataContainerHHO \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	
	Container\\ 
dataContainer\\ 
=\\  !
new\\" %
	Container\\& /
(\\/ 0
)\\0 1
;\\1 2
dataContainer]] 
.]] 
containerOne]] "
=]]# $
data]]% )
;]]) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67b^^ B
.^^B C
GoodB2GSink^^C N
(^^N O
dataContainer^^O \
,^^] ^
req^^_ b
,^^b c
resp^^d h
)^^i j
;^^j k
}__ 
}aa 
}bb 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67a Y
.Y Z
	ContainerZ c
dataContainerd q
,r s
HttpRequestt 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67a++# ]
.++] ^
	Container++^ g
dataContainer++h u
,++v w
HttpRequest	++x 
req
++ 
,
++ 
HttpResponse
++ 
resp
++ 
)
++ 
{,, 
string-- 
data-- 
=-- 
dataContainer-- #
.--# $
containerOne--$ 0
;--0 1
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_67a77# ]
.77] ^
	Container77^ g
dataContainer77h u
,77v w
HttpRequest	77x 
req
77 
,
77 
HttpResponse
77 
resp
77 
)
77 
{88 
string99 
data99 
=99 
dataContainer99 #
.99# $
containerOne99$ 0
;990 1
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC ÷
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68a @
:A B
AbstractTestCaseWebC V
{ 
public 

static 
string 
data 
; 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68b00 B
.00B C
BadSink00C J
(00J K
req00K N
,00N O
resp00P T
)00T U
;00U V
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68b?? B
.??B C
GoodG2BSink??C N
(??N O
req??O R
,??R S
resp??T X
)??X Y
;??Y Z
}@@ 
privateCC 
staticCC 
voidCC 
GoodB2GCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
dataEE 
=EE 
$strEE 
;EE 
{FF 	
tryHH 
{II 
dataKK 
=KK 
ConsoleKK 
.KK 
ReadLineKK '
(KK' (
)KK( )
;KK) *
}LL 
catchMM 
(MM 
IOExceptionMM 
exceptIOMM '
)MM' (
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
exceptIOOO2 :
,OO: ;
$strOO< W
)OOW X
;OOX Y
}PP 
}QQ 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68bRR B
.RRB C
GoodB2GSinkRRC N
(RRN O
reqRRO R
,RRR S
respRRT X
)RRX Y
;RRY Z
}SS 
}UU 
}VV 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68b @
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68a P
.P Q
dataQ U
;U V
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
HttpRequest++# .
req++/ 2
,++2 3
HttpResponse++4 @
resp++A E
)++E F
{,, 
string-- 
data-- 
=-- F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68a-- P
.--P Q
data--Q U
;--U V
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	

HttpCookie00 

cookieSink00 !
=00" #
new00$ '

HttpCookie00( 2
(002 3
$str003 9
,009 :
data00; ?
)00? @
;00@ A
resp22 
.22 
AppendCookie22 
(22 

cookieSink22 (
)22( )
;22) *
}33 	
}44 
public77 

static77 
void77 
GoodB2GSink77 "
(77" #
HttpRequest77# .
req77/ 2
,772 3
HttpResponse774 @
resp77A E
)77E F
{88 
string99 
data99 
=99 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_68a99 P
.99P Q
data99Q U
;99U V
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	

HttpCookie<< 

cookieSink<< !
=<<" #
new<<$ '

HttpCookie<<( 2
(<<2 3
$str<<3 9
,<<9 :
HttpUtility<<; F
.<<F G
	UrlEncode<<G P
(<<P Q
data<<Q U
,<<U V
Encoding<<W _
.<<_ `
UTF8<<` d
)<<d e
)<<e f
;<<f g
resp>> 
.>> 
AppendCookie>> 
(>> 

cookieSink>> (
)>>( )
;>>) *
}?? 	
}@@ 
}BB 
}CC ² 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_71a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_71b// B
.//B C
BadSink//C J
(//J K
(//K L
Object//L R
)//R S
data//S W
,//X Y
req//Z ]
,//] ^
resp//_ c
)//d e
;//e f
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_71b?? B
.??B C
GoodG2BSink??C N
(??N O
(??O P
Object??P V
)??V W
data??W [
,??\ ]
req??^ a
,??a b
resp??c g
)??h i
;??i j
}@@ 
privateCC 
staticCC 
voidCC 
GoodB2GCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_71bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
(SSO P
ObjectSSP V
)SSV W
dataSSW [
,SS\ ]
reqSS^ a
,SSa b
respSSc g
)SSh i
;SSi j
}TT 
}VV 
}WW à
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #
Object,,# )

dataObject,,* 4
,,,5 6
HttpRequest,,7 B
req,,C F
,,,F G
HttpResponse,,H T
resp,,U Y
),,Y Z
{-- 
string.. 
data.. 
=.. 
(.. 
string.. 
).. 

dataObject.. (
;..( )
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #
Object88# )

dataObject88* 4
,885 6
HttpRequest887 B
req88C F
,88F G
HttpResponse88H T
resp88U Y
)88Y Z
{99 
string:: 
data:: 
=:: 
(:: 
string:: 
):: 

dataObject:: (
;::( )
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD ¢.
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_72a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	
	Hashtable00 
dataHashtable00 
=00  !
new00" %
	Hashtable00& /
(00/ 0
$num000 1
)001 2
;002 3
dataHashtable11 
.11 
Add11 
(11 
$num11 
,11 
data11 !
)11! "
;11" #
dataHashtable22 
.22 
Add22 
(22 
$num22 
,22 
data22 !
)22! "
;22" #
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_72b44 B
.44B C
BadSink44C J
(44J K
dataHashtable44K X
,44Y Z
req44[ ^
,44^ _
resp44` d
)44e f
;44f g
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 
	HashtableDD 
dataHashtableDD 
=DD  !
newDD" %
	HashtableDD& /
(DD/ 0
$numDD0 1
)DD1 2
;DD2 3
dataHashtableEE 
.EE 
AddEE 
(EE 
$numEE 
,EE 
dataEE !
)EE! "
;EE" #
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_72bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataHashtableHHO \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	
	Hashtable\\ 
dataHashtable\\ 
=\\  !
new\\" %
	Hashtable\\& /
(\\/ 0
$num\\0 1
)\\1 2
;\\2 3
dataHashtable]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] !
)]]! "
;]]" #
dataHashtable^^ 
.^^ 
Add^^ 
(^^ 
$num^^ 
,^^ 
data^^ !
)^^! "
;^^" #
dataHashtable__ 
.__ 
Add__ 
(__ 
$num__ 
,__ 
data__ !
)__! "
;__" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_72b`` B
.``B C
GoodB2GSink``C N
(``N O
dataHashtable``O \
,``] ^
req``_ b
,``b c
resp``d h
)``i j
;``j k
}aa 
}cc 
}dd 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #
	Hashtable,,# ,
dataHashtable,,- :
,,,; <
HttpRequest,,= H
req,,I L
,,,L M
HttpResponse,,N Z
resp,,[ _
),,_ `
{-- 
string.. 
data.. 
=.. 
(.. 
string.. 
).. 
dataHashtable.. ,
[.., -
$num..- .
]... /
;../ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #
	Hashtable88# ,
dataHashtable88- :
,88; <
HttpRequest88= H
req88I L
,88L M
HttpResponse88N Z
resp88[ _
)88_ `
{99 
string:: 
data:: 
=:: 
(:: 
string:: 
):: 
dataHashtable:: ,
[::, -
$num::- .
]::. /
;::/ 0
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD ¨.
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_73a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	

LinkedList00 
<00 
string00 
>00 
dataLinkedList00 )
=00* +
new00, /

LinkedList000 :
<00: ;
string00; A
>00A B
(00B C
)00C D
;00D E
dataLinkedList11 
.11 
AddLast11 
(11 
data11 #
)11# $
;11$ %
dataLinkedList22 
.22 
AddLast22 
(22 
data22 #
)22# $
;22$ %
dataLinkedList33 
.33 
AddLast33 
(33 
data33 #
)33# $
;33$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_73b44 B
.44B C
BadSink44C J
(44J K
dataLinkedList44K Y
,44Z [
req44\ _
,44_ `
resp44a e
)44f g
;44g h
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 

LinkedListDD 
<DD 
stringDD 
>DD 
dataLinkedListDD )
=DD* +
newDD, /

LinkedListDD0 :
<DD: ;
stringDD; A
>DDA B
(DDB C
)DDC D
;DDD E
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %
dataLinkedListFF 
.FF 
AddLastFF 
(FF 
dataFF #
)FF# $
;FF$ %
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_73bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataLinkedListHHO ]
,HH^ _
reqHH` c
,HHc d
respHHe i
)HHj k
;HHk l
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	

LinkedList\\ 
<\\ 
string\\ 
>\\ 
dataLinkedList\\ )
=\\* +
new\\, /

LinkedList\\0 :
<\\: ;
string\\; A
>\\A B
(\\B C
)\\C D
;\\D E
dataLinkedList]] 
.]] 
AddLast]] 
(]] 
data]] #
)]]# $
;]]$ %
dataLinkedList^^ 
.^^ 
AddLast^^ 
(^^ 
data^^ #
)^^# $
;^^$ %
dataLinkedList__ 
.__ 
AddLast__ 
(__ 
data__ #
)__# $
;__$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_73b`` B
.``B C
GoodB2GSink``C N
(``N O
dataLinkedList``O ]
,``^ _
req``` c
,``c d
resp``e i
)``j k
;``k l
}aa 
}cc 
}dd Í
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, "
(,," #

LinkedList,,# -
<,,- .
string,,. 4
>,,4 5
dataLinkedList,,6 D
,,,E F
HttpRequest,,G R
req,,S V
,,,V W
HttpResponse,,X d
resp,,e i
),,i j
{-- 
string.. 
data.. 
=.. 
dataLinkedList.. $
...$ %
Last..% )
...) *
Value..* /
;../ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #

LinkedList88# -
<88- .
string88. 4
>884 5
dataLinkedList886 D
,88E F
HttpRequest88G R
req88S V
,88V W
HttpResponse88X d
resp88e i
)88i j
{99 
string:: 
data:: 
=:: 
dataLinkedList:: $
.::$ %
Last::% )
.::) *
Value::* /
;::/ 0
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD í1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_74a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	

Dictionary00 
<00 
int00 
,00 
string00 
>00 
dataDictionary00 -
=00. /
new000 3

Dictionary004 >
<00> ?
int00? B
,00B C
string00C I
>00I J
(00J K
)00K L
;00L M
dataDictionary11 
.11 
Add11 
(11 
$num11 
,11 
data11 "
)11" #
;11# $
dataDictionary22 
.22 
Add22 
(22 
$num22 
,22 
data22 "
)22" #
;22# $
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_74b44 B
.44B C
BadSink44C J
(44J K
dataDictionary44K Y
,44Z [
req44\ _
,44_ `
resp44a e
)44f g
;44g h
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 

DictionaryDD 
<DD 
intDD 
,DD 
stringDD 
>DD 
dataDictionaryDD -
=DD. /
newDD0 3

DictionaryDD4 >
<DD> ?
intDD? B
,DDB C
stringDDC I
>DDI J
(DDJ K
)DDK L
;DDL M
dataDictionaryEE 
.EE 
AddEE 
(EE 
$numEE 
,EE 
dataEE "
)EE" #
;EE# $
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_74bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataDictionaryHHO ]
,HH^ _
reqHH` c
,HHc d
respHHe i
)HHj k
;HHk l
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	

Dictionary\\ 
<\\ 
int\\ 
,\\ 
string\\ 
>\\ 
dataDictionary\\ -
=\\. /
new\\0 3

Dictionary\\4 >
<\\> ?
int\\? B
,\\B C
string\\C I
>\\I J
(\\J K
)\\K L
;\\L M
dataDictionary]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] "
)]]" #
;]]# $
dataDictionary^^ 
.^^ 
Add^^ 
(^^ 
$num^^ 
,^^ 
data^^ "
)^^" #
;^^# $
dataDictionary__ 
.__ 
Add__ 
(__ 
$num__ 
,__ 
data__ "
)__" #
;__# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_74b`` B
.``B C
GoodB2GSink``C N
(``N O
dataDictionary``O ]
,``^ _
req``` c
,``c d
resp``e i
)``j k
;``k l
}aa 
}cc 
}dd ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	

HttpCookie## 

cookieSink## !
=##" #
new##$ '

HttpCookie##( 2
(##2 3
$str##3 9
,##9 :
data##; ?
)##? @
;##@ A
resp%% 
.%% 
AppendCookie%% 
(%% 

cookieSink%% (
)%%( )
;%%) *
}&& 	
}'' 
public,, 

static,, 
void,, 
GoodG2BSink,, #
(,,# $

Dictionary,,$ .
<,,. /
int,,/ 2
,,,2 3
string,,3 9
>,,9 :
dataDictionary,,; I
,,,J K
HttpRequest,,L W
req,,X [
,,,[ \
HttpResponse,,] i
resp,,j n
),,n o
{-- 
string.. 
data.. 
=.. 
dataDictionary.. $
[..$ %
$num..% &
]..& '
;..' (
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	

HttpCookie11 

cookieSink11 !
=11" #
new11$ '

HttpCookie11( 2
(112 3
$str113 9
,119 :
data11; ?
)11? @
;11@ A
resp33 
.33 
AppendCookie33 
(33 

cookieSink33 (
)33( )
;33) *
}44 	
}55 
public88 

static88 
void88 
GoodB2GSink88 "
(88" #

Dictionary88# -
<88- .
int88. 1
,881 2
string882 8
>888 9
dataDictionary88: H
,88I J
HttpRequest88K V
req88W Z
,88Z [
HttpResponse88\ h
resp88i m
)88m n
{99 
string:: 
data:: 
=:: 
dataDictionary:: $
[::$ %
$num::% &
]::& '
;::' (
if;; 

(;; 
data;; 
!=;; 
null;; 
);; 
{<< 	

HttpCookie== 

cookieSink== !
===" #
new==$ '

HttpCookie==( 2
(==2 3
$str==3 9
,==9 :
HttpUtility==; F
.==F G
	UrlEncode==G P
(==P Q
data==Q U
,==U V
Encoding==W _
.==_ `
UTF8==` d
)==d e
)==e f
;==f g
resp?? 
.?? 
AppendCookie?? 
(?? 

cookieSink?? (
)??( )
;??) *
}@@ 	
}AA 
}CC 
}DD äB
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_75a @
:A B
AbstractTestCaseWebC V
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 	
try'' 
{(( 
data** 
=** 
Console** 
.** 
ReadLine** '
(**' (
)**( )
;**) *
}++ 
catch,, 
(,, 
IOException,, 
exceptIO,, '
),,' (
{-- 
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. "
..." #
LogLevel..# +
...+ ,
Warn.., 0
,..0 1
exceptIO..2 :
,..: ;
$str..< W
)..W X
;..X Y
}// 
}00 	
byte22 
[22 
]22 
dataSerialized22 
=22 
null22  $
;22$ %
try33 
{44 	
BinaryFormatter55 
bf55 
=55  
new55! $
BinaryFormatter55% 4
(554 5
)555 6
;556 7
using66 
(66 
var66 
ms66 
=66 
new66 
MemoryStream66  ,
(66, -
)66- .
)66. /
{77 
bf88 
.88 
	Serialize88 
(88 
ms88 
,88  
data88! %
)88% &
;88& '
dataSerialized99 
=99  
ms99! #
.99# $
ToArray99$ +
(99+ ,
)99, -
;99- .
}:: F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_75b;; F
.;;F G
BadSink;;G N
(;;N O
dataSerialized;;O ]
,;;^ _
req;;` c
,;;c d
resp;;e i
);;j k
;;;k l
}<< 	
catch== 
(== "
SerializationException== %
exceptSerialize==& 5
)==5 6
{>> 	
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? 
.?? 
LogLevel?? '
.??' (
Warn??( ,
,??, -
$str??. X
,??X Y
exceptSerialize??Z i
)??i j
;??j k
}@@ 	
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
HttpRequestDD )
reqDD* -
,DD- .
HttpResponseDD/ ;
respDD< @
)DD@ A
{EE 
GoodG2BFF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
GoodB2GGG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
HttpRequestKK  +
reqKK, /
,KK/ 0
HttpResponseKK1 =
respKK> B
)KKB C
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{OO 	
tryQQ 
{RR 
dataTT 
=TT 
ConsoleTT 
.TT 
ReadLineTT '
(TT' (
)TT( )
;TT) *
}UU 
catchVV 
(VV 
IOExceptionVV 
exceptIOVV '
)VV' (
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
exceptIOXX2 :
,XX: ;
$strXX< W
)XXW X
;XXX Y
}YY 
}ZZ 	
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_75bee F
.eeF G
GoodG2BSinkeeG R
(eeR S
dataSerializedeeS a
,eeb c
reqeed g
,eeg h
respeei m
)een o
;eeo p
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
privatenn 
staticnn 
voidnn 
GoodB2Gnn 
(nn  
HttpRequestnn  +
reqnn, /
,nn/ 0
HttpResponsenn1 =
respnn> B
)nnB C
{oo 
stringpp 
datapp 
;pp 
dataqq 
=qq 
$strqq 
;qq 
{rr 	
trytt 
{uu 
dataww 
=ww 
Consoleww 
.ww 
ReadLineww '
(ww' (
)ww( )
;ww) *
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
exceptIO{{2 :
,{{: ;
$str{{< W
){{W X
;{{X Y
}|| 
}}} 	
byte 
[ 
] 
dataSerialized 
= 
null  $
;$ %
try
 
{
 	
BinaryFormatter
 
bf
 
=
  
new
! $
BinaryFormatter
% 4
(
4 5
)
5 6
;
6 7
using
 
(
 
var
 
ms
 
=
 
new
 
MemoryStream
  ,
(
, -
)
- .
)
. /
{
 
bf
 
.
 
	Serialize
 
(
 
ms
 
,
  
data
! %
)
% &
;
& '
dataSerialized
 
=
  
ms
! #
.
# $
ToArray
$ +
(
+ ,
)
, -
;
- .
}
 H
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_75b
 F
.
F G
GoodB2GSink
G R
(
R S
dataSerialized
S a
,
b c
req
d g
,
g h
resp
i m
)
n o
;
o p
}
 	
catch
 
(
 $
SerializationException
 %
exceptSerialize
& 5
)
5 6
{
 	
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 
.
 
LogLevel
 '
.
' (
Warn
( ,
,
, -
$str
. X
,
X Y
exceptSerialize
Z i
)
i j
;
j k
}
 	
}
 
} 
} ;
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_75b @
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if,, 
(,, 
data,, 
!=,, 
null,, 
),, 
{-- 

HttpCookie.. 

cookieSink.. %
=..& '
new..( +

HttpCookie.., 6
(..6 7
$str..7 =
,..= >
data..? C
)..C D
;..D E
resp00 
.00 
AppendCookie00 !
(00! "

cookieSink00" ,
)00, -
;00- .
}11 
}22 	
catch33 
(33 "
SerializationException33 %
exceptSerialize33& 5
)335 6
{44 	
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 
.55 
LogLevel55 '
.55' (
Warn55( ,
,55, -
$str55. Y
,55Y Z
exceptSerialize55[ j
)55j k
;55k l
}66 	
}77 
public<< 

static<< 
void<< 
GoodG2BSink<< "
(<<" #
byte<<# '
[<<' (
]<<( )
dataSerialized<<* 8
,<<9 :
HttpRequest<<; F
req<<G J
,<<J K
HttpResponse<<L X
resp<<Y ]
)<<] ^
{== 
try>> 
{?? 	
string@@ 
data@@ 
;@@ 
varAA 
binFormAA 
=AA 
newAA 
BinaryFormatterAA -
(AA- .
)AA. /
;AA/ 0
usingBB 
(BB 
varBB 
	memStreamBB  
=BB! "
newBB# &
MemoryStreamBB' 3
(BB3 4
)BB4 5
)BB5 6
{CC 
	memStreamDD 
.DD 
WriteDD 
(DD  
dataSerializedDD  .
,DD. /
$numDD0 1
,DD1 2
dataSerializedDD3 A
.DDA B
LengthDDB H
)DDH I
;DDI J
	memStreamEE 
.EE 
SeekEE 
(EE 
$numEE  
,EE  !

SeekOriginEE" ,
.EE, -
BeginEE- 2
)EE2 3
;EE3 4
dataFF 
=FF 
(FF 
stringFF 
)FF 
binFormFF &
.FF& '
DeserializeFF' 2
(FF2 3
	memStreamFF3 <
)FF< =
;FF= >
}GG 
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 

HttpCookieJJ 

cookieSinkJJ %
=JJ& '
newJJ( +

HttpCookieJJ, 6
(JJ6 7
$strJJ7 =
,JJ= >
dataJJ? C
)JJC D
;JJD E
respLL 
.LL 
AppendCookieLL !
(LL! "

cookieSinkLL" ,
)LL, -
;LL- .
}MM 
}NN 	
catchOO 
(OO "
SerializationExceptionOO %
exceptSerializeOO& 5
)OO5 6
{PP 	
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ 
(QQ 
NLogQQ 
.QQ 
LogLevelQQ '
.QQ' (
WarnQQ( ,
,QQ, -
$strQQ. Y
,QQY Z
exceptSerializeQQ[ j
)QQj k
;QQk l
}RR 	
}SS 
publicVV 

staticVV 
voidVV 
GoodB2GSinkVV "
(VV" #
byteVV# '
[VV' (
]VV( )
dataSerializedVV* 8
,VV9 :
HttpRequestVV; F
reqVVG J
,VVJ K
HttpResponseVVL X
respVVY ]
)VV] ^
{WW 
tryXX 
{YY 	
stringZZ 
dataZZ 
;ZZ 
var[[ 
binForm[[ 
=[[ 
new[[ 
BinaryFormatter[[ -
([[- .
)[[. /
;[[/ 0
using\\ 
(\\ 
var\\ 
	memStream\\  
=\\! "
new\\# &
MemoryStream\\' 3
(\\3 4
)\\4 5
)\\5 6
{]] 
	memStream^^ 
.^^ 
Write^^ 
(^^  
dataSerialized^^  .
,^^. /
$num^^0 1
,^^1 2
dataSerialized^^3 A
.^^A B
Length^^B H
)^^H I
;^^I J
	memStream__ 
.__ 
Seek__ 
(__ 
$num__  
,__  !

SeekOrigin__" ,
.__, -
Begin__- 2
)__2 3
;__3 4
data`` 
=`` 
(`` 
string`` 
)`` 
binForm`` &
.``& '
Deserialize``' 2
(``2 3
	memStream``3 <
)``< =
;``= >
}aa 
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 

HttpCookiedd 

cookieSinkdd %
=dd& '
newdd( +

HttpCookiedd, 6
(dd6 7
$strdd7 =
,dd= >
HttpUtilitydd? J
.ddJ K
	UrlEncodeddK T
(ddT U
dataddU Y
,ddY Z
Encodingdd[ c
.ddc d
UTF8ddd h
)ddh i
)ddi j
;ddj k
respff 
.ff 
AppendCookieff !
(ff! "

cookieSinkff" ,
)ff, -
;ff- .
}gg 
}hh 	
catchii 
(ii "
SerializationExceptionii %
exceptSerializeii& 5
)ii5 6
{jj 	
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk 
.kk 
LogLevelkk '
.kk' (
Warnkk( ,
,kk, -
$strkk. Y
,kkY Z
exceptSerializekk[ j
)kkj k
;kkk l
}ll 	
}mm 
}oo 
}pp ê#
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_base// F

baseObject//G Q
=//R S
new//T WJ
=CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_bad	//X 
(
// 
)
// 
;
// 

baseObject00 
.00 
Action00 
(00 
data00 
,00  
req00! $
,00$ %
resp00& *
)00* +
;00+ ,
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
void;; 
GoodG2B;; 
(;; 
HttpRequest;; $
req;;% (
,;;( )
HttpResponse;;* 6
resp;;7 ;
);;; <
{<< 
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_base@@ F

baseObject@@G Q
=@@R S
new@@T WN
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_goodG2B	@@X 
(
@@ 
)
@@ 
;
@@ 

baseObjectAA 
.AA 
ActionAA 
(AA 
dataAA 
,AA  
reqAA! $
,AA$ %
respAA& *
)AA* +
;AA+ ,
}BB 
privateEE 
voidEE 
GoodB2GEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataGG 
;GG 
dataHH 
=HH 
$strHH 
;HH 
{II 	
tryKK 
{LL 
dataNN 
=NN 
ConsoleNN 
.NN 
ReadLineNN '
(NN' (
)NN( )
;NN) *
}OO 
catchPP 
(PP 
IOExceptionPP 
exceptIOPP '
)PP' (
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
exceptIORR2 :
,RR: ;
$strRR< W
)RRW X
;RRX Y
}SS 
}TT 	J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_baseUU F

baseObjectUUG Q
=UUR S
newUUT WN
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_goodB2G	UUX 
(
UU 
)
UU 
;
UU 

baseObjectVV 
.VV 
ActionVV 
(VV 
dataVV 
,VV  
reqVV! $
,VV$ %
respVV& *
)VV* +
;VV+ ,
}WW 
}YY 
}ZZ 

¾C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class I
=CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_bad C
:D EK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_base	F 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if 

( 
data 
!= 
null 
) 
{   	

HttpCookie!! 

cookieSink!! !
=!!" #
new!!$ '

HttpCookie!!( 2
(!!2 3
$str!!3 9
,!!9 :
data!!; ?
)!!? @
;!!@ A
resp## 
.## 
AppendCookie## 
(## 

cookieSink## (
)##( )
;##) *
}$$ 	
}%% 
}&& 
}'' ç
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_base M
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ­
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_goodB2G G
:H IK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_base	J 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
HttpUtility""; F
.""F G
	UrlEncode""G P
(""P Q
data""Q U
,""U V
Encoding""W _
.""_ `
UTF8""` d
)""d e
)""e f
;""f g
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
}'' 
}(( 

ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_goodG2B G
:H IK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addCookie_81_base	J 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	

HttpCookie"" 

cookieSink"" !
=""" #
new""$ '

HttpCookie""( 2
(""2 3
$str""3 9
,""9 :
data""; ?
)""? @
;""@ A
resp$$ 
.$$ 
AppendCookie$$ 
($$ 

cookieSink$$ (
)$$( )
;$$) *
}%% 	
}&& 
}'' 
}(( ¶"
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_01 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
if00 

(00 
data00 
!=00 
null00 
)00 
{11 	
resp22 
.22 
	AddHeader22 
(22 
$str22 %
,22% &
$str22' :
+22; <
data22= A
)22A B
;22B C
}33 	
}44 
public77 

override77 
void77 
Good77 
(77 
HttpRequest77 )
req77* -
,77- .
HttpResponse77/ ;
resp77< @
)77@ A
{88 
GoodG2B99 
(99 
req99 
,99 
resp99 
)99 
;99 
GoodB2G:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
};; 
private>> 
void>> 
GoodG2B>> 
(>> 
HttpRequest>> $
req>>% (
,>>( )
HttpResponse>>* 6
resp>>7 ;
)>>; <
{?? 
string@@ 
data@@ 
;@@ 
dataBB 
=BB 
$strBB 
;BB 
ifDD 

(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 	
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF %
,FF% &
$strFF' :
+FF; <
dataFF= A
)FFA B
;FFB C
}GG 	
}HH 
privateKK 
voidKK 
GoodB2GKK 
(KK 
HttpRequestKK $
reqKK% (
,KK( )
HttpResponseKK* 6
respKK7 ;
)KK; <
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{OO 	
tryQQ 
{RR 
dataTT 
=TT 
ConsoleTT 
.TT 
ReadLineTT '
(TT' (
)TT( )
;TT) *
}UU 
catchVV 
(VV 
IOExceptionVV 
exceptIOVV '
)VV' (
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
exceptIOXX2 :
,XX: ;
$strXX< W
)XXW X
;XXX Y
}YY 
}ZZ 	
if\\ 

(\\ 
data\\ 
!=\\ 
null\\ 
)\\ 
{]] 	
data^^ 
=^^ 
HttpUtility^^ 
.^^ 
	UrlEncode^^ (
(^^( )
$str^^) +
,^^+ ,
Encoding^^- 5
.^^5 6
UTF8^^6 :
)^^: ;
;^^; <
resp__ 
.__ 
	AddHeader__ 
(__ 
$str__ %
,__% &
$str__' :
+__; <
data__= A
)__A B
;__B C
}`` 	
}aa 
}cc 
}dd F
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_02 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
true"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
true88 
)88 
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
falseGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
trueRR 
)RR 
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
true`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
truekk 
)kk 
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
trueyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
false
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
true
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
true
¹¹ 
)
¹¹ 
{
ºº 	
if
¼¼ 
(
¼¼ 
data
¼¼ 
!=
¼¼ 
null
¼¼ 
)
¼¼ 
{
½½ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
$str
¾¾- /
,
¾¾/ 0
Encoding
¾¾1 9
.
¾¾9 :
UTF8
¾¾: >
)
¾¾> ?
;
¾¾? @
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ ãH
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_03 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
$num"" 
=="" 
$num"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
$num88 
==88 
$num88 
)88 
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
$numGG 
!=GG 
$numGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
$numRR 
==RR 
$numRR 
)RR 
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
$num`` 
==`` 
$num`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
$numkk 
==kk 
$numkk 
)kk 
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
$numyy 
==yy 
$numyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
$num
££ 
==
££ 
$num
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
$num
¹¹ 
==
¹¹ 
$num
¹¹ 
)
¹¹ 
{
ºº 	
if
¼¼ 
(
¼¼ 
data
¼¼ 
!=
¼¼ 
null
¼¼ 
)
¼¼ 
{
½½ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
$str
¾¾- /
,
¾¾/ 0
Encoding
¾¾1 9
.
¾¾9 :
UTF8
¾¾: >
)
¾¾> ?
;
¾¾? @
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ ¿I
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_04 ?
:@ A
AbstractTestCaseWebB U
{ 
private## 
const## 
bool## 
PRIVATE_CONST_TRUE## )
=##* +
true##, 0
;##0 1
private$$ 
const$$ 
bool$$ 
PRIVATE_CONST_FALSE$$ *
=$$+ ,
false$$- 2
;$$2 3
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
PRIVATE_CONST_TRUE)) 
))) 
{** 	
data++ 
=++ 
$str++ 
;++ 
{,, 
try.. 
{// 
data11 
=11 
Console11 "
.11" #
ReadLine11# +
(11+ ,
)11, -
;11- .
}22 
catch33 
(33 
IOException33 "
exceptIO33# +
)33+ ,
{44 
IO55 
.55 
Logger55 
.55 
Log55 !
(55! "
NLog55" &
.55& '
LogLevel55' /
.55/ 0
Warn550 4
,554 5
exceptIO556 >
,55> ?
$str55@ [
)55[ \
;55\ ]
}66 
}77 
}88 	
else99 
{:: 	
data== 
=== 
null== 
;== 
}>> 	
if?? 

(?? 
PRIVATE_CONST_TRUE?? 
)?? 
{@@ 	
ifBB 
(BB 
dataBB 
!=BB 
nullBB 
)BB 
{CC 
respDD 
.DD 
	AddHeaderDD 
(DD 
$strDD )
,DD) *
$strDD+ >
+DD? @
dataDDA E
)DDE F
;DDF G
}EE 
}FF 	
}GG 
privateKK 
voidKK 
GoodG2B1KK 
(KK 
HttpRequestKK %
reqKK& )
,KK) *
HttpResponseKK+ 7
respKK8 <
)KK< =
{LL 
stringMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FALSENN 
)NN  
{OO 	
dataRR 
=RR 
nullRR 
;RR 
}SS 	
elseTT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
ifYY 

(YY 
PRIVATE_CONST_TRUEYY 
)YY 
{ZZ 	
if\\ 
(\\ 
data\\ 
!=\\ 
null\\ 
)\\ 
{]] 
resp^^ 
.^^ 
	AddHeader^^ 
(^^ 
$str^^ )
,^^) *
$str^^+ >
+^^? @
data^^A E
)^^E F
;^^F G
}__ 
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
HttpRequestdd %
reqdd& )
,dd) *
HttpResponsedd+ 7
respdd8 <
)dd< =
{ee 
stringff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_TRUEgg 
)gg 
{hh 	
datajj 
=jj 
$strjj 
;jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
nullpp 
;pp 
}qq 	
ifrr 

(rr 
PRIVATE_CONST_TRUErr 
)rr 
{ss 	
ifuu 
(uu 
datauu 
!=uu 
nulluu 
)uu 
{vv 
respww 
.ww 
	AddHeaderww 
(ww 
$strww )
,ww) *
$strww+ >
+ww? @
datawwA E
)wwE F
;wwF G
}xx 
}yy 	
}zz 
private}} 
void}} 
GoodB2G1}} 
(}} 
HttpRequest}} %
req}}& )
,}}) *
HttpResponse}}+ 7
resp}}8 <
)}}< =
{~~ 
string 
data 
; 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PRIVATE_CONST_FALSE
 
)
  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
   
=
   
HttpUtility
   "
.
  " #
	UrlEncode
  # ,
(
  , -
$str
  - /
,
  / 0
Encoding
  1 9
.
  9 :
UTF8
  : >
)
  > ?
;
  ? @
resp
¡¡ 
.
¡¡ 
	AddHeader
¡¡ 
(
¡¡ 
$str
¡¡ )
,
¡¡) *
$str
¡¡+ >
+
¡¡? @
data
¡¡A E
)
¡¡E F
;
¡¡F G
}
¢¢ 
}
££ 	
}
¤¤ 
private
§§ 
void
§§ 
GoodB2G2
§§ 
(
§§ 
HttpRequest
§§ %
req
§§& )
,
§§) *
HttpResponse
§§+ 7
resp
§§8 <
)
§§< =
{
¨¨ 
string
©© 
data
©© 
;
©© 
if
ªª 

(
ªª  
PRIVATE_CONST_TRUE
ªª 
)
ªª 
{
«« 	
data
¬¬ 
=
¬¬ 
$str
¬¬ 
;
¬¬ 
{
­­ 
try
¯¯ 
{
°° 
data
²² 
=
²² 
Console
²² "
.
²²" #
ReadLine
²²# +
(
²²+ ,
)
²², -
;
²²- .
}
³³ 
catch
´´ 
(
´´ 
IOException
´´ "
exceptIO
´´# +
)
´´+ ,
{
µµ 
IO
¶¶ 
.
¶¶ 
Logger
¶¶ 
.
¶¶ 
Log
¶¶ !
(
¶¶! "
NLog
¶¶" &
.
¶¶& '
LogLevel
¶¶' /
.
¶¶/ 0
Warn
¶¶0 4
,
¶¶4 5
exceptIO
¶¶6 >
,
¶¶> ?
$str
¶¶@ [
)
¶¶[ \
;
¶¶\ ]
}
·· 
}
¸¸ 
}
¹¹ 	
else
ºº 
{
»» 	
data
¾¾ 
=
¾¾ 
null
¾¾ 
;
¾¾ 
}
¿¿ 	
if
ÀÀ 

(
ÀÀ  
PRIVATE_CONST_TRUE
ÀÀ 
)
ÀÀ 
{
ÁÁ 	
if
ÃÃ 
(
ÃÃ 
data
ÃÃ 
!=
ÃÃ 
null
ÃÃ 
)
ÃÃ 
{
ÄÄ 
data
ÅÅ 
=
ÅÅ 
HttpUtility
ÅÅ "
.
ÅÅ" #
	UrlEncode
ÅÅ# ,
(
ÅÅ, -
$str
ÅÅ- /
,
ÅÅ/ 0
Encoding
ÅÅ1 9
.
ÅÅ9 :
UTF8
ÅÅ: >
)
ÅÅ> ?
;
ÅÅ? @
resp
ÆÆ 
.
ÆÆ 
	AddHeader
ÆÆ 
(
ÆÆ 
$str
ÆÆ )
,
ÆÆ) *
$str
ÆÆ+ >
+
ÆÆ? @
data
ÆÆA E
)
ÆÆE F
;
ÆÆF G
}
ÇÇ 
}
ÈÈ 	
}
ÉÉ 
public
ËË 

override
ËË 
void
ËË 
Good
ËË 
(
ËË 
HttpRequest
ËË )
req
ËË* -
,
ËË- .
HttpResponse
ËË/ ;
resp
ËË< @
)
ËË@ A
{
ÌÌ 
GoodG2B1
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodG2B2
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodB2G1
ÏÏ 
(
ÏÏ 
req
ÏÏ 
,
ÏÏ 
resp
ÏÏ 
)
ÏÏ 
;
ÏÏ 
GoodB2G2
ÐÐ 
(
ÐÐ 
req
ÐÐ 
,
ÐÐ 
resp
ÐÐ 
)
ÐÐ 
;
ÐÐ 
}
ÑÑ 
}ÓÓ 
}ÔÔ ½H
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_05 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
bool"" 
privateTrue"" 
="" 
true"" #
;""# $
private## 
bool## 
privateFalse## 
=## 
false##  %
;##% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{++ 
try-- 
{.. 
data00 
=00 
Console00 "
.00" #
ReadLine00# +
(00+ ,
)00, -
;00- .
}11 
catch22 
(22 
IOException22 "
exceptIO22# +
)22+ ,
{33 
IO44 
.44 
Logger44 
.44 
Log44 !
(44! "
NLog44" &
.44& '
LogLevel44' /
.44/ 0
Warn440 4
,444 5
exceptIO446 >
,44> ?
$str44@ [
)44[ \
;44\ ]
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
privateTrue>> 
)>> 
{?? 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 
respCC 
.CC 
	AddHeaderCC 
(CC 
$strCC )
,CC) *
$strCC+ >
+CC? @
dataCCA E
)CCE F
;CCF G
}DD 
}EE 	
}FF 
privateJJ 
voidJJ 
GoodG2B1JJ 
(JJ 
HttpRequestJJ %
reqJJ& )
,JJ) *
HttpResponseJJ+ 7
respJJ8 <
)JJ< =
{KK 
stringLL 
dataLL 
;LL 
ifMM 

(MM 
privateFalseMM 
)MM 
{NN 	
dataQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataVV 
=VV 
$strVV 
;VV 
}WW 	
ifXX 

(XX 
privateTrueXX 
)XX 
{YY 	
if[[ 
([[ 
data[[ 
!=[[ 
null[[ 
)[[ 
{\\ 
resp]] 
.]] 
	AddHeader]] 
(]] 
$str]] )
,]]) *
$str]]+ >
+]]? @
data]]A E
)]]E F
;]]F G
}^^ 
}__ 	
}`` 
privatecc 
voidcc 
GoodG2B2cc 
(cc 
HttpRequestcc %
reqcc& )
,cc) *
HttpResponsecc+ 7
respcc8 <
)cc< =
{dd 
stringee 
dataee 
;ee 
ifff 

(ff 
privateTrueff 
)ff 
{gg 	
dataii 
=ii 
$strii 
;ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
nulloo 
;oo 
}pp 	
ifqq 

(qq 
privateTrueqq 
)qq 
{rr 	
iftt 
(tt 
datatt 
!=tt 
nulltt 
)tt 
{uu 
respvv 
.vv 
	AddHeadervv 
(vv 
$strvv )
,vv) *
$strvv+ >
+vv? @
datavvA E
)vvE F
;vvF G
}ww 
}xx 	
}yy 
private|| 
void|| 
GoodB2G1|| 
(|| 
HttpRequest|| %
req||& )
,||) *
HttpResponse||+ 7
resp||8 <
)||< =
{}} 
string~~ 
data~~ 
;~~ 
if 

( 
privateTrue 
) 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
   
.
   
	AddHeader
   
(
   
$str
   )
,
  ) *
$str
  + >
+
  ? @
data
  A E
)
  E F
;
  F G
}
¡¡ 
}
¢¢ 	
}
££ 
private
¦¦ 
void
¦¦ 
GoodB2G2
¦¦ 
(
¦¦ 
HttpRequest
¦¦ %
req
¦¦& )
,
¦¦) *
HttpResponse
¦¦+ 7
resp
¦¦8 <
)
¦¦< =
{
§§ 
string
¨¨ 
data
¨¨ 
;
¨¨ 
if
©© 

(
©© 
privateTrue
©© 
)
©© 
{
ªª 	
data
«« 
=
«« 
$str
«« 
;
«« 
{
¬¬ 
try
®® 
{
¯¯ 
data
±± 
=
±± 
Console
±± "
.
±±" #
ReadLine
±±# +
(
±±+ ,
)
±±, -
;
±±- .
}
²² 
catch
³³ 
(
³³ 
IOException
³³ "
exceptIO
³³# +
)
³³+ ,
{
´´ 
IO
µµ 
.
µµ 
Logger
µµ 
.
µµ 
Log
µµ !
(
µµ! "
NLog
µµ" &
.
µµ& '
LogLevel
µµ' /
.
µµ/ 0
Warn
µµ0 4
,
µµ4 5
exceptIO
µµ6 >
,
µµ> ?
$str
µµ@ [
)
µµ[ \
;
µµ\ ]
}
¶¶ 
}
·· 
}
¸¸ 	
else
¹¹ 
{
ºº 	
data
½½ 
=
½½ 
null
½½ 
;
½½ 
}
¾¾ 	
if
¿¿ 

(
¿¿ 
privateTrue
¿¿ 
)
¿¿ 
{
ÀÀ 	
if
ÂÂ 
(
ÂÂ 
data
ÂÂ 
!=
ÂÂ 
null
ÂÂ 
)
ÂÂ 
{
ÃÃ 
data
ÄÄ 
=
ÄÄ 
HttpUtility
ÄÄ "
.
ÄÄ" #
	UrlEncode
ÄÄ# ,
(
ÄÄ, -
$str
ÄÄ- /
,
ÄÄ/ 0
Encoding
ÄÄ1 9
.
ÄÄ9 :
UTF8
ÄÄ: >
)
ÄÄ> ?
;
ÄÄ? @
resp
ÅÅ 
.
ÅÅ 
	AddHeader
ÅÅ 
(
ÅÅ 
$str
ÅÅ )
,
ÅÅ) *
$str
ÅÅ+ >
+
ÅÅ? @
data
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÆÆ 
}
ÇÇ 	
}
ÈÈ 
public
ÊÊ 

override
ÊÊ 
void
ÊÊ 
Good
ÊÊ 
(
ÊÊ 
HttpRequest
ÊÊ )
req
ÊÊ* -
,
ÊÊ- .
HttpResponse
ÊÊ/ ;
resp
ÊÊ< @
)
ÊÊ@ A
{
ËË 
GoodG2B1
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
GoodG2B2
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G1
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodB2G2
ÏÏ 
(
ÏÏ 
req
ÏÏ 
,
ÏÏ 
resp
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÐÐ 
}ÒÒ 
}ÓÓ K
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_06 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
const"" 
int"" 
PRIVATE_CONST_FIVE"" (
="") *
$num""+ ,
;"", -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
==''  
$num''  !
)''! "
{(( 	
data)) 
=)) 
$str)) 
;)) 
{** 
try,, 
{-- 
data// 
=// 
Console// "
.//" #
ReadLine//# +
(//+ ,
)//, -
;//- .
}00 
catch11 
(11 
IOException11 "
exceptIO11# +
)11+ ,
{22 
IO33 
.33 
Logger33 
.33 
Log33 !
(33! "
NLog33" &
.33& '
LogLevel33' /
.33/ 0
Warn330 4
,334 5
exceptIO336 >
,33> ?
$str33@ [
)33[ \
;33\ ]
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
PRIVATE_CONST_FIVE== 
====  
$num==  !
)==! "
{>> 	
if@@ 
(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB )
,BB) *
$strBB+ >
+BB? @
dataBBA E
)BBE F
;BBF G
}CC 
}DD 	
}EE 
privateII 
voidII 
GoodG2B1II 
(II 
HttpRequestII %
reqII& )
,II) *
HttpResponseII+ 7
respII8 <
)II< =
{JJ 
stringKK 
dataKK 
;KK 
ifLL 

(LL 
PRIVATE_CONST_FIVELL 
!=LL  
$numLL  !
)LL! "
{MM 	
dataPP 
=PP 
nullPP 
;PP 
}QQ 	
elseRR 
{SS 	
dataUU 
=UU 
$strUU 
;UU 
}VV 	
ifWW 

(WW 
PRIVATE_CONST_FIVEWW 
==WW  
$numWW  !
)WW! "
{XX 	
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
HttpRequestbb %
reqbb& )
,bb) *
HttpResponsebb+ 7
respbb8 <
)bb< =
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee 
PRIVATE_CONST_FIVEee 
==ee  
$numee  !
)ee! "
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
nullnn 
;nn 
}oo 	
ifpp 

(pp 
PRIVATE_CONST_FIVEpp 
==pp  
$numpp  !
)pp! "
{qq 	
ifss 
(ss 
datass 
!=ss 
nullss 
)ss 
{tt 
respuu 
.uu 
	AddHeaderuu 
(uu 
$struu )
,uu) *
$struu+ >
+uu? @
datauuA E
)uuE F
;uuF G
}vv 
}ww 	
}xx 
private{{ 
void{{ 
GoodB2G1{{ 
({{ 
HttpRequest{{ %
req{{& )
,{{) *
HttpResponse{{+ 7
resp{{8 <
){{< =
{|| 
string}} 
data}} 
;}} 
if~~ 

(~~ 
PRIVATE_CONST_FIVE~~ 
==~~  
$num~~  !
)~~! "
{ 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
!=
  
$num
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
   
}
¡¡ 	
}
¢¢ 
private
¥¥ 
void
¥¥ 
GoodB2G2
¥¥ 
(
¥¥ 
HttpRequest
¥¥ %
req
¥¥& )
,
¥¥) *
HttpResponse
¥¥+ 7
resp
¥¥8 <
)
¥¥< =
{
¦¦ 
string
§§ 
data
§§ 
;
§§ 
if
¨¨ 

(
¨¨  
PRIVATE_CONST_FIVE
¨¨ 
==
¨¨  
$num
¨¨  !
)
¨¨! "
{
©© 	
data
ªª 
=
ªª 
$str
ªª 
;
ªª 
{
«« 
try
­­ 
{
®® 
data
°° 
=
°° 
Console
°° "
.
°°" #
ReadLine
°°# +
(
°°+ ,
)
°°, -
;
°°- .
}
±± 
catch
²² 
(
²² 
IOException
²² "
exceptIO
²²# +
)
²²+ ,
{
³³ 
IO
´´ 
.
´´ 
Logger
´´ 
.
´´ 
Log
´´ !
(
´´! "
NLog
´´" &
.
´´& '
LogLevel
´´' /
.
´´/ 0
Warn
´´0 4
,
´´4 5
exceptIO
´´6 >
,
´´> ?
$str
´´@ [
)
´´[ \
;
´´\ ]
}
µµ 
}
¶¶ 
}
·· 	
else
¸¸ 
{
¹¹ 	
data
¼¼ 
=
¼¼ 
null
¼¼ 
;
¼¼ 
}
½½ 	
if
¾¾ 

(
¾¾  
PRIVATE_CONST_FIVE
¾¾ 
==
¾¾  
$num
¾¾  !
)
¾¾! "
{
¿¿ 	
if
ÁÁ 
(
ÁÁ 
data
ÁÁ 
!=
ÁÁ 
null
ÁÁ 
)
ÁÁ 
{
ÂÂ 
data
ÃÃ 
=
ÃÃ 
HttpUtility
ÃÃ "
.
ÃÃ" #
	UrlEncode
ÃÃ# ,
(
ÃÃ, -
$str
ÃÃ- /
,
ÃÃ/ 0
Encoding
ÃÃ1 9
.
ÃÃ9 :
UTF8
ÃÃ: >
)
ÃÃ> ?
;
ÃÃ? @
resp
ÄÄ 
.
ÄÄ 
	AddHeader
ÄÄ 
(
ÄÄ 
$str
ÄÄ )
,
ÄÄ) *
$str
ÄÄ+ >
+
ÄÄ? @
data
ÄÄA E
)
ÄÄE F
;
ÄÄF G
}
ÅÅ 
}
ÆÆ 	
}
ÇÇ 
public
ÉÉ 

override
ÉÉ 
void
ÉÉ 
Good
ÉÉ 
(
ÉÉ 
HttpRequest
ÉÉ )
req
ÉÉ* -
,
ÉÉ- .
HttpResponse
ÉÉ/ ;
resp
ÉÉ< @
)
ÉÉ@ A
{
ÊÊ 
GoodG2B1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodG2B2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
GoodB2G1
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G2
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}ÑÑ 
}ÒÒ ¦J
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_07 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
int"" 
privateFive"" 
="" 
$num"" 
;""  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
$str)) 
;)) 
{** 
try,, 
{-- 
data// 
=// 
Console// "
.//" #
ReadLine//# +
(//+ ,
)//, -
;//- .
}00 
catch11 
(11 
IOException11 "
exceptIO11# +
)11+ ,
{22 
IO33 
.33 
Logger33 
.33 
Log33 !
(33! "
NLog33" &
.33& '
LogLevel33' /
.33/ 0
Warn330 4
,334 5
exceptIO336 >
,33> ?
$str33@ [
)33[ \
;33\ ]
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
privateFive== 
==== 
$num== 
)== 
{>> 	
if@@ 
(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB )
,BB) *
$strBB+ >
+BB? @
dataBBA E
)BBE F
;BBF G
}CC 
}DD 	
}EE 
privateII 
voidII 
GoodG2B1II 
(II 
HttpRequestII %
reqII& )
,II) *
HttpResponseII+ 7
respII8 <
)II< =
{JJ 
stringKK 
dataKK 
;KK 
ifLL 

(LL 
privateFiveLL 
!=LL 
$numLL 
)LL 
{MM 	
dataPP 
=PP 
nullPP 
;PP 
}QQ 	
elseRR 
{SS 	
dataUU 
=UU 
$strUU 
;UU 
}VV 	
ifWW 

(WW 
privateFiveWW 
==WW 
$numWW 
)WW 
{XX 	
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
HttpRequestbb %
reqbb& )
,bb) *
HttpResponsebb+ 7
respbb8 <
)bb< =
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee 
privateFiveee 
==ee 
$numee 
)ee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
nullnn 
;nn 
}oo 	
ifpp 

(pp 
privateFivepp 
==pp 
$numpp 
)pp 
{qq 	
ifss 
(ss 
datass 
!=ss 
nullss 
)ss 
{tt 
respuu 
.uu 
	AddHeaderuu 
(uu 
$struu )
,uu) *
$struu+ >
+uu? @
datauuA E
)uuE F
;uuF G
}vv 
}ww 	
}xx 
private{{ 
void{{ 
GoodB2G1{{ 
({{ 
HttpRequest{{ %
req{{& )
,{{) *
HttpResponse{{+ 7
resp{{8 <
){{< =
{|| 
string}} 
data}} 
;}} 
if~~ 

(~~ 
privateFive~~ 
==~~ 
$num~~ 
)~~ 
{ 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
   
}
¡¡ 	
}
¢¢ 
private
¥¥ 
void
¥¥ 
GoodB2G2
¥¥ 
(
¥¥ 
HttpRequest
¥¥ %
req
¥¥& )
,
¥¥) *
HttpResponse
¥¥+ 7
resp
¥¥8 <
)
¥¥< =
{
¦¦ 
string
§§ 
data
§§ 
;
§§ 
if
¨¨ 

(
¨¨ 
privateFive
¨¨ 
==
¨¨ 
$num
¨¨ 
)
¨¨ 
{
©© 	
data
ªª 
=
ªª 
$str
ªª 
;
ªª 
{
«« 
try
­­ 
{
®® 
data
°° 
=
°° 
Console
°° "
.
°°" #
ReadLine
°°# +
(
°°+ ,
)
°°, -
;
°°- .
}
±± 
catch
²² 
(
²² 
IOException
²² "
exceptIO
²²# +
)
²²+ ,
{
³³ 
IO
´´ 
.
´´ 
Logger
´´ 
.
´´ 
Log
´´ !
(
´´! "
NLog
´´" &
.
´´& '
LogLevel
´´' /
.
´´/ 0
Warn
´´0 4
,
´´4 5
exceptIO
´´6 >
,
´´> ?
$str
´´@ [
)
´´[ \
;
´´\ ]
}
µµ 
}
¶¶ 
}
·· 	
else
¸¸ 
{
¹¹ 	
data
¼¼ 
=
¼¼ 
null
¼¼ 
;
¼¼ 
}
½½ 	
if
¾¾ 

(
¾¾ 
privateFive
¾¾ 
==
¾¾ 
$num
¾¾ 
)
¾¾ 
{
¿¿ 	
if
ÁÁ 
(
ÁÁ 
data
ÁÁ 
!=
ÁÁ 
null
ÁÁ 
)
ÁÁ 
{
ÂÂ 
data
ÃÃ 
=
ÃÃ 
HttpUtility
ÃÃ "
.
ÃÃ" #
	UrlEncode
ÃÃ# ,
(
ÃÃ, -
$str
ÃÃ- /
,
ÃÃ/ 0
Encoding
ÃÃ1 9
.
ÃÃ9 :
UTF8
ÃÃ: >
)
ÃÃ> ?
;
ÃÃ? @
resp
ÄÄ 
.
ÄÄ 
	AddHeader
ÄÄ 
(
ÄÄ 
$str
ÄÄ )
,
ÄÄ) *
$str
ÄÄ+ >
+
ÄÄ? @
data
ÄÄA E
)
ÄÄE F
;
ÄÄF G
}
ÅÅ 
}
ÆÆ 	
}
ÇÇ 
public
ÉÉ 

override
ÉÉ 
void
ÉÉ 
Good
ÉÉ 
(
ÉÉ 
HttpRequest
ÉÉ )
req
ÉÉ* -
,
ÉÉ- .
HttpResponse
ÉÉ/ ;
resp
ÉÉ< @
)
ÉÉ@ A
{
ÊÊ 
GoodG2B1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodG2B2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
GoodB2G1
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G2
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}ÑÑ 
}ÒÒ M
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_08 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
static"" 
bool"" 
PrivateReturnsTrue"" *
(""* +
)""+ ,
{## 
return$$ 
true$$ 
;$$ 
}%% 
private'' 
static'' 
bool'' 
PrivateReturnsFalse'' +
(''+ ,
)'', -
{(( 
return)) 
false)) 
;)) 
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
$str11 
;11 
{22 
try44 
{55 
data77 
=77 
Console77 "
.77" #
ReadLine77# +
(77+ ,
)77, -
;77- .
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
nullCC 
;CC 
}DD 	
ifEE 

(EE 
PrivateReturnsTrueEE 
(EE 
)EE  
)EE  !
{FF 	
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
}MM 
privateQQ 
voidQQ 
GoodG2B1QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
PrivateReturnsFalseTT 
(TT  
)TT  !
)TT! "
{UU 	
dataXX 
=XX 
nullXX 
;XX 
}YY 	
elseZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
if__ 

(__ 
PrivateReturnsTrue__ 
(__ 
)__  
)__  !
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodG2B2jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
PrivateReturnsTruemm 
(mm 
)mm  
)mm  !
{nn 	
datapp 
=pp 
$strpp 
;pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
PrivateReturnsTruexx 
(xx 
)xx  
)xx  !
{yy 	
if{{ 
({{ 
data{{ 
!={{ 
null{{ 
){{ 
{|| 
resp}} 
.}} 
	AddHeader}} 
(}} 
$str}} )
,}}) *
$str}}+ >
+}}? @
data}}A E
)}}E F
;}}F G
}~~ 
} 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
   	
else
¡¡ 
{
¢¢ 	
if
¤¤ 
(
¤¤ 
data
¤¤ 
!=
¤¤ 
null
¤¤ 
)
¤¤ 
{
¥¥ 
data
¦¦ 
=
¦¦ 
HttpUtility
¦¦ "
.
¦¦" #
	UrlEncode
¦¦# ,
(
¦¦, -
$str
¦¦- /
,
¦¦/ 0
Encoding
¦¦1 9
.
¦¦9 :
UTF8
¦¦: >
)
¦¦> ?
;
¦¦? @
resp
§§ 
.
§§ 
	AddHeader
§§ 
(
§§ 
$str
§§ )
,
§§) *
$str
§§+ >
+
§§? @
data
§§A E
)
§§E F
;
§§F G
}
¨¨ 
}
©© 	
}
ªª 
private
­­ 
void
­­ 
GoodB2G2
­­ 
(
­­ 
HttpRequest
­­ %
req
­­& )
,
­­) *
HttpResponse
­­+ 7
resp
­­8 <
)
­­< =
{
®® 
string
¯¯ 
data
¯¯ 
;
¯¯ 
if
°° 

(
°°  
PrivateReturnsTrue
°° 
(
°° 
)
°°  
)
°°  !
{
±± 	
data
²² 
=
²² 
$str
²² 
;
²² 
{
³³ 
try
µµ 
{
¶¶ 
data
¸¸ 
=
¸¸ 
Console
¸¸ "
.
¸¸" #
ReadLine
¸¸# +
(
¸¸+ ,
)
¸¸, -
;
¸¸- .
}
¹¹ 
catch
ºº 
(
ºº 
IOException
ºº "
exceptIO
ºº# +
)
ºº+ ,
{
»» 
IO
¼¼ 
.
¼¼ 
Logger
¼¼ 
.
¼¼ 
Log
¼¼ !
(
¼¼! "
NLog
¼¼" &
.
¼¼& '
LogLevel
¼¼' /
.
¼¼/ 0
Warn
¼¼0 4
,
¼¼4 5
exceptIO
¼¼6 >
,
¼¼> ?
$str
¼¼@ [
)
¼¼[ \
;
¼¼\ ]
}
½½ 
}
¾¾ 
}
¿¿ 	
else
ÀÀ 
{
ÁÁ 	
data
ÄÄ 
=
ÄÄ 
null
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
if
ÆÆ 

(
ÆÆ  
PrivateReturnsTrue
ÆÆ 
(
ÆÆ 
)
ÆÆ  
)
ÆÆ  !
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
data
ÉÉ 
!=
ÉÉ 
null
ÉÉ 
)
ÉÉ 
{
ÊÊ 
data
ËË 
=
ËË 
HttpUtility
ËË "
.
ËË" #
	UrlEncode
ËË# ,
(
ËË, -
$str
ËË- /
,
ËË/ 0
Encoding
ËË1 9
.
ËË9 :
UTF8
ËË: >
)
ËË> ?
;
ËË? @
resp
ÌÌ 
.
ÌÌ 
	AddHeader
ÌÌ 
(
ÌÌ 
$str
ÌÌ )
,
ÌÌ) *
$str
ÌÌ+ >
+
ÌÌ? @
data
ÌÌA E
)
ÌÌE F
;
ÌÌF G
}
ÍÍ 
}
ÎÎ 	
}
ÏÏ 
public
ÑÑ 

override
ÑÑ 
void
ÑÑ 
Good
ÑÑ 
(
ÑÑ 
HttpRequest
ÑÑ )
req
ÑÑ* -
,
ÑÑ- .
HttpResponse
ÑÑ/ ;
resp
ÑÑ< @
)
ÑÑ@ A
{
ÒÒ 
GoodG2B1
ÓÓ 
(
ÓÓ 
req
ÓÓ 
,
ÓÓ 
resp
ÓÓ 
)
ÓÓ 
;
ÓÓ 
GoodG2B2
ÔÔ 
(
ÔÔ 
req
ÔÔ 
,
ÔÔ 
resp
ÔÔ 
)
ÔÔ 
;
ÔÔ 
GoodB2G1
ÕÕ 
(
ÕÕ 
req
ÕÕ 
,
ÕÕ 
resp
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ÖÖ 
(
ÖÖ 
req
ÖÖ 
,
ÖÖ 
resp
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
×× 
}ÙÙ 
}ÚÚ çI
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_09 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_TRUE"" #
)""# $
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_TRUE88 #
)88# $
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG !
STATIC_READONLY_FALSEGG $
)GG$ %
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR  
STATIC_READONLY_TRUERR #
)RR# $
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_TRUE`` #
)``# $
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk  
STATIC_READONLY_TRUEkk #
)kk# $
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy  
STATIC_READONLY_TRUEyy #
)yy# $
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 #
STATIC_READONLY_FALSE
 $
)
$ %
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ "
STATIC_READONLY_TRUE
££ #
)
££# $
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ "
STATIC_READONLY_TRUE
¹¹ #
)
¹¹# $
{
ºº 	
if
¼¼ 
(
¼¼ 
data
¼¼ 
!=
¼¼ 
null
¼¼ 
)
¼¼ 
{
½½ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
$str
¾¾- /
,
¾¾/ 0
Encoding
¾¾1 9
.
¾¾9 :
UTF8
¾¾: >
)
¾¾> ?
;
¾¾? @
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ I
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_10 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticTrue"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticTrue88 
)88 
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG 
staticFalseGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR 

staticTrueRR 
)RR 
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticTrue`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk 

staticTruekk 
)kk 
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy 

staticTrueyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
staticFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ 

staticTrue
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ 

staticTrue
¹¹ 
)
¹¹ 
{
ºº 	
if
¼¼ 
(
¼¼ 
data
¼¼ 
!=
¼¼ 
null
¼¼ 
)
¼¼ 
{
½½ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
$str
¾¾- /
,
¾¾/ 0
Encoding
¾¾1 9
.
¾¾9 :
UTF8
¾¾: >
)
¾¾> ?
;
¾¾? @
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ L
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_11 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 
StaticReturnsTrue""  
(""  !
)""! "
)""" #
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88
 
IO88 
.88 
StaticReturnsTrue88 
(88  
)88  !
)88! "
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG 
StaticReturnsFalseGG !
(GG! "
)GG" #
)GG# $
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR 
StaticReturnsTrueRR  
(RR  !
)RR! "
)RR" #
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
StaticReturnsTrue``  
(``  !
)``! "
)``" #
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk 
StaticReturnsTruekk  
(kk  !
)kk! "
)kk" #
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy 
StaticReturnsTrueyy  
(yy  !
)yy! "
)yy" #
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
  
StaticReturnsFalse
 !
(
! "
)
" #
)
# $
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ 
StaticReturnsTrue
££  
(
££  !
)
££! "
)
££" #
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ 
StaticReturnsTrue
¹¹  
(
¹¹  !
)
¹¹! "
)
¹¹" #
{
ºº 	
if
¼¼ 
(
¼¼ 
data
¼¼ 
!=
¼¼ 
null
¼¼ 
)
¼¼ 
{
½½ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
$str
¾¾- /
,
¾¾/ 0
Encoding
¾¾1 9
.
¾¾9 :
UTF8
¾¾: >
)
¾¾> ?
;
¾¾? @
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ Ì@
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_12 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

(""
 
IO"" 
."" $
StaticReturnsTrueOrFalse"" &
(""& '
)""' (
)""( )
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data55 
=55 
$str55 
;55 
}66 	
if77 

(77
 
IO77 
.77 $
StaticReturnsTrueOrFalse77 &
(77& '
)77' (
)77( )
{88 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< )
,<<) *
$str<<+ >
+<<? @
data<<A E
)<<E F
;<<F G
}== 
}>> 	
else?? 
{@@ 	
ifBB 
(BB 
dataBB 
!=BB 
nullBB 
)BB 
{CC 
dataDD 
=DD 
HttpUtilityDD "
.DD" #
	UrlEncodeDD# ,
(DD, -
$strDD- /
,DD/ 0
EncodingDD1 9
.DD9 :
UTF8DD: >
)DD> ?
;DD? @
respEE 
.EE 
	AddHeaderEE 
(EE 
$strEE )
,EE) *
$strEE+ >
+EE? @
dataEEA E
)EEE F
;EEF G
}FF 
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
HttpRequestMM $
reqMM% (
,MM( )
HttpResponseMM* 6
respMM7 ;
)MM; <
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP
 
IOPP 
.PP $
StaticReturnsTrueOrFalsePP &
(PP& '
)PP' (
)PP( )
{QQ 	
dataSS 
=SS 
$strSS 
;SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$strXX 
;XX 
}YY 	
ifZZ 

(ZZ
 
IOZZ 
.ZZ $
StaticReturnsTrueOrFalseZZ &
(ZZ& '
)ZZ' (
)ZZ( )
{[[ 	
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp__ 
.__ 
	AddHeader__ 
(__ 
$str__ )
,__) *
$str__+ >
+__? @
data__A E
)__E F
;__F G
}`` 
}aa 	
elsebb 
{cc 	
ifee 
(ee 
dataee 
!=ee 
nullee 
)ee 
{ff 
respgg 
.gg 
	AddHeadergg 
(gg 
$strgg )
,gg) *
$strgg+ >
+gg? @
dataggA E
)ggE F
;ggF G
}hh 
}ii 	
}jj 
privatenn 
voidnn 
GoodB2Gnn 
(nn 
HttpRequestnn $
reqnn% (
,nn( )
HttpResponsenn* 6
respnn7 ;
)nn; <
{oo 
stringpp 
datapp 
;pp 
ifqq 

(qq
 
IOqq 
.qq $
StaticReturnsTrueOrFalseqq &
(qq& '
)qq' (
)qq( )
{rr 	
datass 
=ss 
$strss 
;ss 
{tt 
tryvv 
{ww 
datayy 
=yy 
Consoleyy "
.yy" #
ReadLineyy# +
(yy+ ,
)yy, -
;yy- .
}zz 
catch{{ 
({{ 
IOException{{ "
exceptIO{{# +
){{+ ,
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} !
(}}! "
NLog}}" &
.}}& '
LogLevel}}' /
.}}/ 0
Warn}}0 4
,}}4 5
exceptIO}}6 >
,}}> ?
$str}}@ [
)}}[ \
;}}\ ]
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
if
 

(

 
IO
 
.
 &
StaticReturnsTrueOrFalse
 &
(
& '
)
' (
)
( )
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
   
.
   
	AddHeader
   
(
   
$str
   )
,
  ) *
$str
  + >
+
  ? @
data
  A E
)
  E F
;
  F G
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
§§ 
GoodG2B
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
}
ªª 
}¬¬ 
}­­ ÅL
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_13 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_FIVE"" #
==""# %
$num""% &
)""& '
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_FIVE88 #
==88# %
$num88% &
)88& '
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG  
STATIC_READONLY_FIVEGG #
!=GG# %
$numGG% &
)GG& '
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR  
STATIC_READONLY_FIVERR #
==RR# %
$numRR% &
)RR& '
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_FIVE`` #
==``# %
$num``% &
)``& '
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk  
STATIC_READONLY_FIVEkk #
==kk# %
$numkk% &
)kk& '
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy  
STATIC_READONLY_FIVEyy #
==yy# %
$numyy% &
)yy& '
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
!=
# %
$num
% &
)
& '
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ "
STATIC_READONLY_FIVE
££ #
==
££# %
$num
££% &
)
££& '
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ "
STATIC_READONLY_FIVE
¹¹ #
==
¹¹# %
$num
¹¹% &
)
¹¹& '
{
ºº 	
if
¼¼ 
(
¼¼ 
data
¼¼ 
!=
¼¼ 
null
¼¼ 
)
¼¼ 
{
½½ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
$str
¾¾- /
,
¾¾/ 0
Encoding
¾¾1 9
.
¾¾9 :
UTF8
¾¾: >
)
¾¾> ?
;
¾¾? @
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ áK
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_14 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticFive"" 
=="" 
$num"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticFive88 
==88 
$num88 
)88 
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG 

staticFiveGG 
!=GG 
$numGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR 

staticFiveRR 
==RR 
$numRR 
)RR 
{SS 	
ifUU 
(UU 
dataUU 
!=UU 
nullUU 
)UU 
{VV 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticFive`` 
==`` 
$num`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk 

staticFivekk 
==kk 
$numkk 
)kk 
{ll 	
ifnn 
(nn 
datann 
!=nn 
nullnn 
)nn 
{oo 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy 

staticFiveyy 
==yy 
$numyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ 

staticFive
££ 
==
££ 
$num
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ 

staticFive
¹¹ 
==
¹¹ 
$num
¹¹ 
)
¹¹ 
{
ºº 	
if
¼¼ 
(
¼¼ 
data
¼¼ 
!=
¼¼ 
null
¼¼ 
)
¼¼ 
{
½½ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
$str
¾¾- /
,
¾¾/ 0
Encoding
¾¾1 9
.
¾¾9 :
UTF8
¾¾: >
)
¾¾> ?
;
¾¾? @
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ U
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_15 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
switch"" 
("" 
$num"" 
)"" 
{## 	
case$$ 
$num$$ 
:$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 
try(( 
{)) 
data++ 
=++ 
Console++ "
.++" #
ReadLine++# +
(+++ ,
)++, -
;++- .
},, 
catch-- 
(-- 
IOException-- "
exceptIO--# +
)--+ ,
{.. 
IO// 
.// 
Logger// 
.// 
Log// !
(//! "
NLog//" &
.//& '
LogLevel//' /
./// 0
Warn//0 4
,//4 5
exceptIO//6 >
,//> ?
$str//@ [
)//[ \
;//\ ]
}00 
}11 
break22 
;22 
default33 
:33 
data66 
=66 
null66 
;66 
break77 
;77 
}88 	
switch99 
(99 
$num99 
)99 
{:: 	
case;; 
$num;; 
:;; 
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 
resp?? 
.?? 
	AddHeader?? 
(?? 
$str?? )
,??) *
$str??+ >
+??? @
data??A E
)??E F
;??F G
}@@ 
breakAA 
;AA 
defaultBB 
:BB 
IODD 
.DD 
	WriteLineDD 
(DD 
$strDD /
)DD/ 0
;DD0 1
breakEE 
;EE 
}FF 	
}GG 
privateKK 
voidKK 
GoodG2B1KK 
(KK 
HttpRequestKK %
reqKK& )
,KK) *
HttpResponseKK+ 7
respKK8 <
)KK< =
{LL 
stringMM 
dataMM 
;MM 
switchNN 
(NN 
$numNN 
)NN 
{OO 	
casePP 
$numPP 
:PP 
dataSS 
=SS 
nullSS 
;SS 
breakTT 
;TT 
defaultUU 
:UU 
dataWW 
=WW 
$strWW 
;WW 
breakXX 
;XX 
}YY 	
switchZZ 
(ZZ 
$numZZ 
)ZZ 
{[[ 	
case\\ 
$num\\ 
:\\ 
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
breakbb 
;bb 
defaultcc 
:cc 
IOee 
.ee 
	WriteLineee 
(ee 
$stree /
)ee/ 0
;ee0 1
breakff 
;ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
switchnn 
(nn 
$numnn 
)nn 
{oo 	
casepp 
$numpp 
:pp 
datarr 
=rr 
$strrr 
;rr 
breakss 
;ss 
defaulttt 
:tt 
dataww 
=ww 
nullww 
;ww 
breakxx 
;xx 
}yy 	
switchzz 
(zz 
$numzz 
)zz 
{{{ 	
case|| 
$num|| 
:|| 
if~~ 
(~~ 
data~~ 
!=~~ 
null~~ 
)~~ 
{ 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
default
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
break
 
;
 
default
 
:
 
data
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
break
££ 
;
££ 
}
¤¤ 	
switch
¥¥ 
(
¥¥ 
$num
¥¥ 
)
¥¥ 
{
¦¦ 	
case
§§ 
$num
§§ 
:
§§ 
IO
©© 
.
©© 
	WriteLine
©© 
(
©© 
$str
©© /
)
©©/ 0
;
©©0 1
break
ªª 
;
ªª 
default
«« 
:
«« 
if
­­ 
(
­­ 
data
­­ 
!=
­­ 
null
­­ 
)
­­ 
{
®® 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
$str
¯¯- /
,
¯¯/ 0
Encoding
¯¯1 9
.
¯¯9 :
UTF8
¯¯: >
)
¯¯> ?
;
¯¯? @
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
break
²² 
;
²² 
}
³³ 	
}
´´ 
private
·· 
void
·· 
GoodB2G2
·· 
(
·· 
HttpRequest
·· %
req
··& )
,
··) *
HttpResponse
··+ 7
resp
··8 <
)
··< =
{
¸¸ 
string
¹¹ 
data
¹¹ 
;
¹¹ 
switch
ºº 
(
ºº 
$num
ºº 
)
ºº 
{
»» 	
case
¼¼ 
$num
¼¼ 
:
¼¼ 
data
½½ 
=
½½ 
$str
½½ 
;
½½ 
{
¾¾ 
try
ÀÀ 
{
ÁÁ 
data
ÃÃ 
=
ÃÃ 
Console
ÃÃ "
.
ÃÃ" #
ReadLine
ÃÃ# +
(
ÃÃ+ ,
)
ÃÃ, -
;
ÃÃ- .
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
IOException
ÅÅ "
exceptIO
ÅÅ# +
)
ÅÅ+ ,
{
ÆÆ 
IO
ÇÇ 
.
ÇÇ 
Logger
ÇÇ 
.
ÇÇ 
Log
ÇÇ !
(
ÇÇ! "
NLog
ÇÇ" &
.
ÇÇ& '
LogLevel
ÇÇ' /
.
ÇÇ/ 0
Warn
ÇÇ0 4
,
ÇÇ4 5
exceptIO
ÇÇ6 >
,
ÇÇ> ?
$str
ÇÇ@ [
)
ÇÇ[ \
;
ÇÇ\ ]
}
ÈÈ 
}
ÉÉ 
break
ÊÊ 
;
ÊÊ 
default
ËË 
:
ËË 
data
ÎÎ 
=
ÎÎ 
null
ÎÎ 
;
ÎÎ 
break
ÏÏ 
;
ÏÏ 
}
ÐÐ 	
switch
ÑÑ 
(
ÑÑ 
$num
ÑÑ 
)
ÑÑ 
{
ÒÒ 	
case
ÓÓ 
$num
ÓÓ 
:
ÓÓ 
if
ÕÕ 
(
ÕÕ 
data
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
)
ÕÕ 
{
ÖÖ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
$str
××- /
,
××/ 0
Encoding
××1 9
.
××9 :
UTF8
××: >
)
××> ?
;
××? @
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
break
ÚÚ 
;
ÚÚ 
default
ÛÛ 
:
ÛÛ 
IO
ÝÝ 
.
ÝÝ 
	WriteLine
ÝÝ 
(
ÝÝ 
$str
ÝÝ /
)
ÝÝ/ 0
;
ÝÝ0 1
break
ÞÞ 
;
ÞÞ 
}
ßß 	
}
àà 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
HttpRequest
ââ )
req
ââ* -
,
ââ- .
HttpResponse
ââ/ ;
resp
ââ< @
)
ââ@ A
{
ãã 
GoodG2B1
ää 
(
ää 
req
ää 
,
ää 
resp
ää 
)
ää 
;
ää 
GoodG2B2
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodB2G1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
}
èè 
}êê 
}ëë È(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_16 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
while"" 
("" 
true"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
break11 
;11 
}22 	
while33 
(33 
true33 
)33 
{44 	
if66 
(66 
data66 
!=66 
null66 
)66 
{77 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
break:: 
;:: 
};; 	
}<< 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataBB 
;BB 
whileCC 
(CC 
trueCC 
)CC 
{DD 	
dataFF 
=FF 
$strFF 
;FF 
breakGG 
;GG 
}HH 	
whileII 
(II 
trueII 
)II 
{JJ 	
ifLL 
(LL 
dataLL 
!=LL 
nullLL 
)LL 
{MM 
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
breakPP 
;PP 
}QQ 	
}RR 
privateUU 
voidUU 
GoodB2GUU 
(UU 
HttpRequestUU $
reqUU% (
,UU( )
HttpResponseUU* 6
respUU7 ;
)UU; <
{VV 
stringWW 
dataWW 
;WW 
whileXX 
(XX 
trueXX 
)XX 
{YY 	
dataZZ 
=ZZ 
$strZZ 
;ZZ 
{[[ 
try]] 
{^^ 
data`` 
=`` 
Console`` "
.``" #
ReadLine``# +
(``+ ,
)``, -
;``- .
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
breakgg 
;gg 
}hh 	
whileii 
(ii 
trueii 
)ii 
{jj 	
ifll 
(ll 
datall 
!=ll 
nullll 
)ll 
{mm 
datann 
=nn 
HttpUtilitynn "
.nn" #
	UrlEncodenn# ,
(nn, -
$strnn- /
,nn/ 0
Encodingnn1 9
.nn9 :
UTF8nn: >
)nn> ?
;nn? @
respoo 
.oo 
	AddHeaderoo 
(oo 
$stroo )
,oo) *
$stroo+ >
+oo? @
dataooA E
)ooE F
;ooF G
}pp 
breakqq 
;qq 
}rr 	
}ss 
publicuu 

overrideuu 
voiduu 
Gooduu 
(uu 
HttpRequestuu )
requu* -
,uu- .
HttpResponseuu/ ;
respuu< @
)uu@ A
{vv 
GoodG2Bww 
(ww 
reqww 
,ww 
respww 
)ww 
;ww 
GoodB2Gxx 
(xx 
reqxx 
,xx 
respxx 
)xx 
;xx 
}yy 
}{{ 
}|| §(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_17 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data&& 
=&& 
$str&& 
;&& 
{'' 	
try)) 
{** 
data,, 
=,, 
Console,, 
.,, 
ReadLine,, '
(,,' (
),,( )
;,,) *
}-- 
catch.. 
(.. 
IOException.. 
exceptIO.. '
)..' (
{// 
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 "
.00" #
LogLevel00# +
.00+ ,
Warn00, 0
,000 1
exceptIO002 :
,00: ;
$str00< W
)00W X
;00X Y
}11 
}22 	
for33 
(33 
int33 
j33 
=33 
$num33 
;33 
j33 
<33 
$num33 
;33 
j33  
++33  "
)33" #
{44 	
if66 
(66 
data66 
!=66 
null66 
)66 
{77 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 
forDD 
(DD 
intDD 
jDD 
=DD 
$numDD 
;DD 
jDD 
<DD 
$numDD 
;DD 
jDD  
++DD  "
)DD" #
{EE 	
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 
respII 
.II 
	AddHeaderII 
(II 
$strII )
,II) *
$strII+ >
+II? @
dataIIA E
)IIE F
;IIF G
}JJ 
}KK 	
}LL 
privateOO 
voidOO 
GoodB2GOO 
(OO 
HttpRequestOO $
reqOO% (
,OO( )
HttpResponseOO* 6
respOO7 ;
)OO; <
{PP 
stringQQ 
dataQQ 
;QQ 
dataRR 
=RR 
$strRR 
;RR 
{SS 	
tryUU 
{VV 
dataXX 
=XX 
ConsoleXX 
.XX 
ReadLineXX '
(XX' (
)XX( )
;XX) *
}YY 
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ '
)ZZ' (
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
exceptIO\\2 :
,\\: ;
$str\\< W
)\\W X
;\\X Y
}]] 
}^^ 	
for__ 
(__ 
int__ 
k__ 
=__ 
$num__ 
;__ 
k__ 
<__ 
$num__ 
;__ 
k__  
++__  "
)__" #
{`` 	
ifbb 
(bb 
databb 
!=bb 
nullbb 
)bb 
{cc 
datadd 
=dd 
HttpUtilitydd "
.dd" #
	UrlEncodedd# ,
(dd, -
$strdd- /
,dd/ 0
Encodingdd1 9
.dd9 :
UTF8dd: >
)dd> ?
;dd? @
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
HttpRequestjj )
reqjj* -
,jj- .
HttpResponsejj/ ;
respjj< @
)jj@ A
{kk 
GoodG2Bll 
(ll 
reqll 
,ll 
respll 
)ll 
;ll 
GoodB2Gmm 
(mm 
reqmm 
,mm 
respmm 
)mm 
;mm 
}nn 
}pp 
}qq ×I
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_21 ?
:@ A
AbstractTestCaseWebB U
{ 
private   
bool   

badPrivate   
=   
false   #
;  # $
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 	
try(( 
{)) 
data++ 
=++ 
Console++ 
.++ 
ReadLine++ '
(++' (
)++( )
;++) *
},, 
catch-- 
(-- 
IOException-- 
exceptIO-- '
)--' (
{.. 
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// "
.//" #
LogLevel//# +
.//+ ,
Warn//, 0
,//0 1
exceptIO//2 :
,//: ;
$str//< W
)//W X
;//X Y
}00 
}11 	

badPrivate22 
=22 
true22 
;22 
BadSink33 
(33 
data33 
,33 
req33 
,33 
resp33  
)33  !
;33! "
}44 
private66 
void66 
BadSink66 
(66 
string66 
data66  $
,66% &
HttpRequest66' 2
req663 6
,666 7
HttpResponse668 D
resp66E I
)66I J
{77 
if88 

(88 

badPrivate88 
)88 
{99 	
if;; 
(;; 
data;; 
!=;; 
null;; 
);; 
{<< 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateCC 
boolCC 
goodB2G1PrivateCC  
=CC! "
falseCC# (
;CC( )
privateDD 
boolDD 
goodB2G2PrivateDD  
=DD! "
falseDD# (
;DD( )
privateEE 
boolEE 
goodG2BPrivateEE 
=EE  !
falseEE" '
;EE' (
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
HttpRequestGG )
reqGG* -
,GG- .
HttpResponseGG/ ;
respGG< @
)GG@ A
{HH 
GoodB2G1II 
(II 
reqII 
,II 
respII 
)II 
;II 
GoodB2G2JJ 
(JJ 
reqJJ 
,JJ 
respJJ 
)JJ 
;JJ 
GoodG2BKK 
(KK 
reqKK 
,KK 
respKK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodB2G1OO 
(OO 
HttpRequestOO %
reqOO& )
,OO) *
HttpResponseOO+ 7
respOO8 <
)OO< =
{PP 
stringQQ 
dataQQ 
;QQ 
dataRR 
=RR 
$strRR 
;RR 
{SS 	
tryUU 
{VV 
dataXX 
=XX 
ConsoleXX 
.XX 
ReadLineXX '
(XX' (
)XX( )
;XX) *
}YY 
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ '
)ZZ' (
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
exceptIO\\2 :
,\\: ;
$str\\< W
)\\W X
;\\X Y
}]] 
}^^ 	
goodB2G1Private__ 
=__ 
false__ 
;__  
GoodB2G1Sink`` 
(`` 
data`` 
,`` 
req`` 
,``  
resp``! %
)``% &
;``& '
}aa 
privatecc 
voidcc 
GoodB2G1Sinkcc 
(cc 
stringcc $
datacc% )
,cc* +
HttpRequestcc, 7
reqcc8 ;
,cc; <
HttpResponsecc= I
respccJ N
)ccN O
{dd 
ifee 

(ee 
goodB2G1Privateee 
)ee 
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
$strhh /
)hh/ 0
;hh0 1
}ii 	
elsejj 
{kk 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
dataoo 
=oo 
HttpUtilityoo "
.oo" #
	UrlEncodeoo# ,
(oo, -
$stroo- /
,oo/ 0
Encodingoo1 9
.oo9 :
UTF8oo: >
)oo> ?
;oo? @
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G2vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
datayy 
=yy 
$stryy 
;yy 
{zz 	
try|| 
{}} 
data 
= 
Console 
. 
ReadLine '
(' (
)( )
;) *
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
goodB2G2Private
 
=
 
true
 
;
 
GoodB2G2Sink
 
(
 
data
 
,
 
req
 
,
  
resp
! %
)
% &
;
& '
}
 
private
 
void
 
GoodB2G2Sink
 
(
 
string
 $
data
% )
,
* +
HttpRequest
, 7
req
8 ;
,
; <
HttpResponse
= I
resp
J N
)
N O
{
 
if
 

(
 
goodB2G2Private
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
$str
- /
,
/ 0
Encoding
1 9
.
9 :
UTF8
: >
)
> ?
;
? @
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
goodG2BPrivate
 
=
 
true
 
;
 
GoodG2BSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
$ %
;
% &
}
 
private
¡¡ 
void
¡¡ 
GoodG2BSink
¡¡ 
(
¡¡ 
string
¡¡ #
data
¡¡$ (
,
¡¡) *
HttpRequest
¡¡+ 6
req
¡¡7 :
,
¡¡: ;
HttpResponse
¡¡< H
resp
¡¡I M
)
¡¡M N
{
¢¢ 
if
££ 

(
££ 
goodG2BPrivate
££ 
)
££ 
{
¤¤ 	
if
¦¦ 
(
¦¦ 
data
¦¦ 
!=
¦¦ 
null
¦¦ 
)
¦¦ 
{
§§ 
resp
¨¨ 
.
¨¨ 
	AddHeader
¨¨ 
(
¨¨ 
$str
¨¨ )
,
¨¨) *
$str
¨¨+ >
+
¨¨? @
data
¨¨A E
)
¨¨E F
;
¨¨F G
}
©© 
}
ªª 	
}
«« 
}­­ 
}®® 1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22a @
:A B
AbstractTestCaseWebC V
{ 
public   

static   
bool   
badPublicStatic   &
=  ' (
false  ) .
;  . /
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
=$$ 
null$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 	
try(( 
{)) 
data++ 
=++ 
Console++ 
.++ 
ReadLine++ '
(++' (
)++( )
;++) *
},, 
catch-- 
(-- 
IOException-- 
exceptIO-- '
)--' (
{.. 
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// "
.//" #
LogLevel//# +
.//+ ,
Warn//, 0
,//0 1
exceptIO//2 :
,//: ;
$str//< W
)//W X
;//X Y
}00 
}11 	
badPublicStatic22 
=22 
true22 
;22 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22b33 B
.33B C
BadSink33C J
(33J K
data33K O
,33P Q
req33R U
,33U V
resp33W [
)33[ \
;33\ ]
}44 
public77 

static77 
bool77  
goodB2G1PublicStatic77 +
=77, -
false77. 3
;773 4
public88 

static88 
bool88  
goodB2G2PublicStatic88 +
=88, -
false88. 3
;883 4
public99 

static99 
bool99 
goodG2BPublicStatic99 *
=99+ ,
false99- 2
;992 3
public;; 

override;; 
void;; 
Good;; 
(;; 
HttpRequest;; )
req;;* -
,;;- .
HttpResponse;;/ ;
resp;;< @
);;@ A
{<< 
GoodB2G1== 
(== 
req== 
,== 
resp== 
)== 
;== 
GoodB2G2>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodB2G1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
=EE 
nullEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	 
goodB2G1PublicStaticSS 
=SS 
falseSS $
;SS$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22bTT B
.TTB C
GoodB2G1SinkTTC O
(TTO P
dataTTP T
,TTU V
reqTTW Z
,TTZ [
respTT\ `
)TT` a
;TTa b
}UU 
privateXX 
voidXX 
GoodB2G2XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
=ZZ 
nullZZ 
;ZZ 
data[[ 
=[[ 
$str[[ 
;[[ 
{\\ 	
try^^ 
{__ 
dataaa 
=aa 
Consoleaa 
.aa 
ReadLineaa '
(aa' (
)aa( )
;aa) *
}bb 
catchcc 
(cc 
IOExceptioncc 
exceptIOcc '
)cc' (
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee 
(ee 
NLogee "
.ee" #
LogLevelee# +
.ee+ ,
Warnee, 0
,ee0 1
exceptIOee2 :
,ee: ;
$stree< W
)eeW X
;eeX Y
}ff 
}gg 	 
goodB2G2PublicStatichh 
=hh 
truehh #
;hh# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22bii B
.iiB C
GoodB2G2SinkiiC O
(iiO P
dataiiP T
,iiU V
reqiiW Z
,iiZ [
respii\ `
)ii` a
;iia b
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
HttpRequestmm $
reqmm% (
,mm( )
HttpResponsemm* 6
respmm7 ;
)mm; <
{nn 
stringoo 
dataoo 
=oo 
nulloo 
;oo 
dataqq 
=qq 
$strqq 
;qq 
goodG2BPublicStaticrr 
=rr 
truerr "
;rr" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22bss B
.ssB C
GoodG2BSinkssC N
(ssN O
datassO S
,ssT U
reqssV Y
,ssY Z
respss[ _
)ss_ `
;ss` a
}tt 
}vv 
}ww Ø#
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22a F
.F G
badPublicStaticG V
)V W
{   	
if"" 
("" 
data"" 
!="" 
null"" 
)"" 
{## 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22a44 F
.44F G 
goodB2G1PublicStatic44G [
)44[ \
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if== 
(== 
data== 
!=== 
null== 
)== 
{>> 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
$str??- /
,??/ 0
Encoding??1 9
.??9 :
UTF8??: >
)??> ?
;??? @
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22aHH F
.HHF G 
goodB2G2PublicStaticHHG [
)HH[ \
{II 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
$strMM- /
,MM/ 0
EncodingMM1 9
.MM9 :
UTF8MM: >
)MM> ?
;MM? @
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_22a\\ F
.\\F G
goodG2BPublicStatic\\G Z
)\\Z [
{]] 	
if__ 
(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm õ(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_31 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
dataCopy!! 
;!! 
{"" 	
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
dataCopy11 
=11 
data11 
;11 
}22 	
{33 	
string44 
data44 
=44 
dataCopy44 "
;44" #
if66 
(66 
data66 
!=66 
null66 
)66 
{77 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
}:: 	
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
HttpRequest>> )
req>>* -
,>>- .
HttpResponse>>/ ;
resp>>< @
)>>@ A
{?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
}BB 
privateEE 
voidEE 
GoodG2BEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataCopyGG 
;GG 
{HH 	
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
dataCopyLL 
=LL 
dataLL 
;LL 
}MM 	
{NN 	
stringOO 
dataOO 
=OO 
dataCopyOO "
;OO" #
ifQQ 
(QQ 
dataQQ 
!=QQ 
nullQQ 
)QQ 
{RR 
respSS 
.SS 
	AddHeaderSS 
(SS 
$strSS )
,SS) *
$strSS+ >
+SS? @
dataSSA E
)SSE F
;SSF G
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodB2GYY 
(YY 
HttpRequestYY $
reqYY% (
,YY( )
HttpResponseYY* 6
respYY7 ;
)YY; <
{ZZ 
string[[ 
dataCopy[[ 
;[[ 
{\\ 	
string]] 
data]] 
;]] 
data^^ 
=^^ 
$str^^ 
;^^ 
{__ 
tryaa 
{bb 
datadd 
=dd 
Consoledd "
.dd" #
ReadLinedd# +
(dd+ ,
)dd, -
;dd- .
}ee 
catchff 
(ff 
IOExceptionff "
exceptIOff# +
)ff+ ,
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh !
(hh! "
NLoghh" &
.hh& '
LogLevelhh' /
.hh/ 0
Warnhh0 4
,hh4 5
exceptIOhh6 >
,hh> ?
$strhh@ [
)hh[ \
;hh\ ]
}ii 
}jj 
dataCopykk 
=kk 
datakk 
;kk 
}ll 	
{mm 	
stringnn 
datann 
=nn 
dataCopynn "
;nn" #
ifpp 
(pp 
datapp 
!=pp 
nullpp 
)pp 
{qq 
datarr 
=rr 
HttpUtilityrr "
.rr" #
	UrlEncoderr# ,
(rr, -
$strrr- /
,rr/ 0
Encodingrr1 9
.rr9 :
UTF8rr: >
)rr> ?
;rr? @
respss 
.ss 
	AddHeaderss 
(ss 
$strss )
,ss) *
$strss+ >
+ss? @
datassA E
)ssE F
;ssF G
}tt 
}uu 	
}vv 
}xx 
}yy -
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_41 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{   
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public(( 

override(( 
void(( 
Bad(( 
((( 
HttpRequest(( (
req(() ,
,((, -
HttpResponse((. :
resp((; ?
)((? @
{)) 
string** 
data** 
;** 
data++ 
=++ 
$str++ 
;++ 
{,, 	
try.. 
{// 
data11 
=11 
Console11 
.11 
ReadLine11 '
(11' (
)11( )
;11) *
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
BadSink88 
(88 
data88 
,88 
req88 
,88 
resp88  
)88! "
;88" #
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateBB 
staticBB 
voidBB 
GoodG2BSinkBB #
(BB# $
stringBB$ *
dataBB+ /
,BB0 1
HttpRequestBB2 =
reqBB> A
,BBA B
HttpResponseBBC O
respBBP T
)BBT U
{CC 
ifEE 

(EE 
dataEE 
!=EE 
nullEE 
)EE 
{FF 	
respGG 
.GG 
	AddHeaderGG 
(GG 
$strGG %
,GG% &
$strGG' :
+GG; <
dataGG= A
)GGA B
;GGB C
}HH 	
}II 
privateLL 
staticLL 
voidLL 
GoodG2BLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataPP 
=PP 
$strPP 
;PP 
GoodG2BSinkQQ 
(QQ 
dataQQ 
,QQ 
reqQQ 
,QQ 
respQQ  $
)QQ% &
;QQ& '
}RR 
privateTT 
staticTT 
voidTT 
GoodB2GSinkTT #
(TT# $
stringTT$ *
dataTT+ /
,TT0 1
HttpRequestTT2 =
reqTT> A
,TTA B
HttpResponseTTC O
respTTP T
)TTT U
{UU 
ifWW 

(WW 
dataWW 
!=WW 
nullWW 
)WW 
{XX 	
dataYY 
=YY 
HttpUtilityYY 
.YY 
	UrlEncodeYY (
(YY( )
$strYY) +
,YY+ ,
EncodingYY- 5
.YY5 6
UTF8YY6 :
)YY: ;
;YY; <
respZZ 
.ZZ 
	AddHeaderZZ 
(ZZ 
$strZZ %
,ZZ% &
$strZZ' :
+ZZ; <
dataZZ= A
)ZZA B
;ZZB C
}[[ 	
}\\ 
private__ 
static__ 
void__ 
GoodB2G__ 
(__  
HttpRequest__  +
req__, /
,__/ 0
HttpResponse__1 =
resp__> B
)__B C
{`` 
stringaa 
dataaa 
;aa 
databb 
=bb 
$strbb 
;bb 
{cc 	
tryee 
{ff 
datahh 
=hh 
Consolehh 
.hh 
ReadLinehh '
(hh' (
)hh( )
;hh) *
}ii 
catchjj 
(jj 
IOExceptionjj 
exceptIOjj '
)jj' (
{kk 
IOll 
.ll 
Loggerll 
.ll 
Logll 
(ll 
NLogll "
.ll" #
LogLevelll# +
.ll+ ,
Warnll, 0
,ll0 1
exceptIOll2 :
,ll: ;
$strll< W
)llW X
;llX Y
}mm 
}nn 	
GoodB2GSinkoo 
(oo 
dataoo 
,oo 
reqoo 
,oo 
respoo  $
)oo% &
;oo& '
}pp 
}rr 
}ss í-
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_42 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
return// 
data// 
;// 
}00 
public22 

override22 
void22 
Bad22 
(22 
HttpRequest22 (
req22) ,
,22, -
HttpResponse22. :
resp22; ?
)22? @
{33 
string44 
data44 
=44 
	BadSource44 
(44  
req44  #
,44# $
resp44% )
)44) *
;44* +
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
resp88 
.88 
	AddHeader88 
(88 
$str88 %
,88% &
$str88' :
+88; <
data88= A
)88A B
;88B C
}99 	
}:: 
private>> 
static>> 
string>> 
GoodG2BSource>> '
(>>' (
HttpRequest>>( 3
req>>4 7
,>>7 8
HttpResponse>>9 E
resp>>F J
)>>J K
{?? 
string@@ 
data@@ 
;@@ 
dataBB 
=BB 
$strBB 
;BB 
returnCC 
dataCC 
;CC 
}DD 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
=HH 
GoodG2BSourceHH #
(HH# $
reqHH$ '
,HH' (
respHH) -
)HH- .
;HH. /
ifJJ 

(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 	
respLL 
.LL 
	AddHeaderLL 
(LL 
$strLL %
,LL% &
$strLL' :
+LL; <
dataLL= A
)LLA B
;LLB C
}MM 	
}NN 
privateQQ 
staticQQ 
stringQQ 
GoodB2GSourceQQ '
(QQ' (
HttpRequestQQ( 3
reqQQ4 7
,QQ7 8
HttpResponseQQ9 E
respQQF J
)QQJ K
{RR 
stringSS 
dataSS 
;SS 
dataTT 
=TT 
$strTT 
;TT 
{UU 	
tryWW 
{XX 
dataZZ 
=ZZ 
ConsoleZZ 
.ZZ 
ReadLineZZ '
(ZZ' (
)ZZ( )
;ZZ) *
}[[ 
catch\\ 
(\\ 
IOException\\ 
exceptIO\\ '
)\\' (
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
exceptIO^^2 :
,^^: ;
$str^^< W
)^^W X
;^^X Y
}__ 
}`` 	
returnaa 
dataaa 
;aa 
}bb 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
HttpRequestdd  +
reqdd, /
,dd/ 0
HttpResponsedd1 =
respdd> B
)ddB C
{ee 
stringff 
dataff 
=ff 
GoodB2GSourceff #
(ff# $
reqff$ '
,ff' (
respff) -
)ff- .
;ff. /
ifhh 

(hh 
datahh 
!=hh 
nullhh 
)hh 
{ii 	
datajj 
=jj 
HttpUtilityjj 
.jj 
	UrlEncodejj (
(jj( )
$strjj) +
,jj+ ,
Encodingjj- 5
.jj5 6
UTF8jj6 :
)jj: ;
;jj; <
respkk 
.kk 
	AddHeaderkk 
(kk 
$strkk %
,kk% &
$strkk' :
+kk; <
datakk= A
)kkA B
;kkB C
}ll 	
}mm 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
HttpRequestoo )
reqoo* -
,oo- .
HttpResponseoo/ ;
respoo< @
)oo@ A
{pp 
GoodG2Bqq 
(qq 
reqqq 
,qq 
respqq 
)qq 
;qq 
GoodB2Grr 
(rr 
reqrr 
,rr 
resprr 
)rr 
;rr 
}ss 
}uu 
}vv 0
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_45 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
string 
dataBad 
; 
private   
string   
dataGoodG2B   
;   
private!! 
string!! 
dataGoodB2G!! 
;!! 
private## 
void## 
BadSink## 
(## 
HttpRequest## $
req##% (
,##( )
HttpResponse##* 6
resp##7 ;
)##; <
{$$ 
string%% 
data%% 
=%% 
dataBad%% 
;%% 
if'' 

('' 
data'' 
!='' 
null'' 
)'' 
{(( 	
resp)) 
.)) 
	AddHeader)) 
()) 
$str)) %
,))% &
$str))' :
+)); <
data))= A
)))A B
;))B C
}** 	
}++ 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
data00 
=00 
$str00 
;00 
{11 	
try33 
{44 
data66 
=66 
Console66 
.66 
ReadLine66 '
(66' (
)66( )
;66) *
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	
dataBad== 
=== 
data== 
;== 
BadSink>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
}?? 
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
HttpRequestBB )
reqBB* -
,BB- .
HttpResponseBB/ ;
respBB< @
)BB@ A
{CC 
GoodG2BDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
GoodB2GEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
}FF 
privateHH 
voidHH 
GoodG2BSinkHH 
(HH 
HttpRequestHH (
reqHH) ,
,HH, -
HttpResponseHH. :
respHH; ?
)HH? @
{II 
stringJJ 
dataJJ 
=JJ 
dataGoodG2BJJ !
;JJ! "
ifLL 

(LL 
dataLL 
!=LL 
nullLL 
)LL 
{MM 	
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN %
,NN% &
$strNN' :
+NN; <
dataNN= A
)NNA B
;NNB C
}OO 	
}PP 
privateSS 
voidSS 
GoodG2BSS 
(SS 
HttpRequestSS $
reqSS% (
,SS( )
HttpResponseSS* 6
respSS7 ;
)SS; <
{TT 
stringUU 
dataUU 
;UU 
dataWW 
=WW 
$strWW 
;WW 
dataGoodG2BXX 
=XX 
dataXX 
;XX 
GoodG2BSinkYY 
(YY 
reqYY 
,YY 
respYY 
)YY 
;YY 
}ZZ 
private\\ 
void\\ 
GoodB2GSink\\ 
(\\ 
HttpRequest\\ (
req\\) ,
,\\, -
HttpResponse\\. :
resp\\; ?
)\\? @
{]] 
string^^ 
data^^ 
=^^ 
dataGoodB2G^^ !
;^^! "
if`` 

(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 	
databb 
=bb 
HttpUtilitybb 
.bb 
	UrlEncodebb (
(bb( )
$strbb) +
,bb+ ,
Encodingbb- 5
.bb5 6
UTF8bb6 :
)bb: ;
;bb; <
respcc 
.cc 
	AddHeadercc 
(cc 
$strcc %
,cc% &
$strcc' :
+cc; <
datacc= A
)ccA B
;ccB C
}dd 	
}ee 
privatehh 
voidhh 
GoodB2Ghh 
(hh 
HttpRequesthh $
reqhh% (
,hh( )
HttpResponsehh* 6
resphh7 ;
)hh; <
{ii 
stringjj 
datajj 
;jj 
datakk 
=kk 
$strkk 
;kk 
{ll 	
trynn 
{oo 
dataqq 
=qq 
Consoleqq 
.qq 
ReadLineqq '
(qq' (
)qq( )
;qq) *
}rr 
catchss 
(ss 
IOExceptionss 
exceptIOss '
)ss' (
{tt 
IOuu 
.uu 
Loggeruu 
.uu 
Loguu 
(uu 
NLoguu "
.uu" #
LogLeveluu# +
.uu+ ,
Warnuu, 0
,uu0 1
exceptIOuu2 :
,uu: ;
$struu< W
)uuW X
;uuX Y
}vv 
}ww 	
dataGoodB2Gxx 
=xx 
dataxx 
;xx 
GoodB2GSinkyy 
(yy 
reqyy 
,yy 
respyy 
)yy 
;yy 
}zz 
}|| 
}}} ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_51a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_51b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//\ ]
;//] ^
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_51b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??` a
;??a b
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_51bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS` a
;SSa b
}TT 
}VV 
}WW ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_51b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_52c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53d B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53d'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53d-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_53d @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54d B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54d'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54d-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54d @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54e B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54e'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54e-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_54e @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if,, 

(,, 
data,, 
!=,, 
null,, 
),, 
{-- 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if66 

(66 
data66 
!=66 
null66 
)66 
{77 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
$str88) +
,88+ ,
Encoding88- 5
.885 6
UTF8886 :
)88: ;
;88; <
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> §
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_61a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_61b P
.P Q
	BadSourceQ Z
(Z [
req[ ^
,^ _
resp` d
)d e
;e f
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_61b11 P
.11P Q
GoodG2BSource11Q ^
(11^ _
req11_ b
,11b c
resp11d h
)11h i
;11i j
if33 

(33 
data33 
!=33 
null33 
)33 
{44 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_61b<< P
.<<P Q
GoodB2GSource<<Q ^
(<<^ _
req<<_ b
,<<b c
resp<<d h
)<<h i
;<<i j
if>> 

(>> 
data>> 
!=>> 
null>> 
)>> 
{?? 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
$str@@) +
,@@+ ,
Encoding@@- 5
.@@5 6
UTF8@@6 :
)@@: ;
;@@; <
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF ü
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_61b @
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
return// 
data// 
;// 
}00 
public55 

static55 
string55 
GoodG2BSource55 &
(55& '
HttpRequest55' 2
req553 6
,556 7
HttpResponse558 D
resp55E I
)55I J
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 
return:: 
data:: 
;:: 
};; 
public>> 

static>> 
string>> 
GoodB2GSource>> &
(>>& '
HttpRequest>>' 2
req>>3 6
,>>6 7
HttpResponse>>8 D
resp>>E I
)>>I J
{?? 
string@@ 
data@@ 
;@@ 
dataAA 
=AA 
$strAA 
;AA 
{BB 	
tryDD 
{EE 
dataGG 
=GG 
ConsoleGG 
.GG 
ReadLineGG '
(GG' (
)GG( )
;GG) *
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR Ä&
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_66a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
string// 
[// 
]// 
	dataArray// 
=// 
new//  
string//! '
[//' (
$num//( )
]//) *
;//* +
	dataArray00 
[00 
$num00 
]00 
=00 
data00 
;00 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_66b11 B
.11B C
BadSink11C J
(11J K
	dataArray11K T
,11U V
req11W Z
,11Z [
resp11\ `
)11a b
;11b c
}22 
public55 

override55 
void55 
Good55 
(55 
HttpRequest55 )
req55* -
,55- .
HttpResponse55/ ;
resp55< @
)55@ A
{66 
GoodG2B77 
(77 
req77 
,77 
resp77 
)77 
;77 
GoodB2G88 
(88 
req88 
,88 
resp88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
HttpRequest<<  +
req<<, /
,<</ 0
HttpResponse<<1 =
resp<<> B
)<<B C
{== 
string>> 
data>> 
;>> 
data@@ 
=@@ 
$str@@ 
;@@ 
stringAA 
[AA 
]AA 
	dataArrayAA 
=AA 
newAA  
stringAA! '
[AA' (
$numAA( )
]AA) *
;AA* +
	dataArrayBB 
[BB 
$numBB 
]BB 
=BB 
dataBB 
;BB F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_66bCC B
.CCB C
GoodG2BSinkCCC N
(CCN O
	dataArrayCCO X
,CCY Z
reqCC[ ^
,CC^ _
respCC` d
)CCe f
;CCf g
}DD 
privateGG 
staticGG 
voidGG 
GoodB2GGG 
(GG  
HttpRequestGG  +
reqGG, /
,GG/ 0
HttpResponseGG1 =
respGG> B
)GGB C
{HH 
stringII 
dataII 
;II 
dataJJ 
=JJ 
$strJJ 
;JJ 
{KK 	
tryMM 
{NN 
dataPP 
=PP 
ConsolePP 
.PP 
ReadLinePP '
(PP' (
)PP( )
;PP) *
}QQ 
catchRR 
(RR 
IOExceptionRR 
exceptIORR '
)RR' (
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
exceptIOTT2 :
,TT: ;
$strTT< W
)TTW X
;TTX Y
}UU 
}VV 	
stringWW 
[WW 
]WW 
	dataArrayWW 
=WW 
newWW  
stringWW! '
[WW' (
$numWW( )
]WW) *
;WW* +
	dataArrayXX 
[XX 
$numXX 
]XX 
=XX 
dataXX 
;XX F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_66bYY B
.YYB C
GoodB2GSinkYYC N
(YYN O
	dataArrayYYO X
,YYY Z
reqYY[ ^
,YY^ _
respYY` d
)YYe f
;YYf g
}ZZ 
}\\ 
}]] Ã
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_66b @
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA '
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67a @
:A B
AbstractTestCaseWebC V
{ 
public 

class 
	Container 
{   
public!! 
string!! 
containerOne!! "
;!!" #
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
data'' 
='' 
$str'' 
;'' 
{(( 	
try** 
{++ 
data-- 
=-- 
Console-- 
.-- 
ReadLine-- '
(--' (
)--( )
;--) *
}.. 
catch// 
(// 
IOException// 
exceptIO// '
)//' (
{00 
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 "
.11" #
LogLevel11# +
.11+ ,
Warn11, 0
,110 1
exceptIO112 :
,11: ;
$str11< W
)11W X
;11X Y
}22 
}33 	
	Container44 
dataContainer44 
=44  !
new44" %
	Container44& /
(44/ 0
)440 1
;441 2
dataContainer55 
.55 
containerOne55 "
=55# $
data55% )
;55) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67b66 B
.66B C
BadSink66C J
(66J K
dataContainer66K X
,66Y Z
req66[ ^
,66^ _
resp66` d
)66e f
;66f g
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
HttpRequest:: )
req::* -
,::- .
HttpResponse::/ ;
resp::< @
)::@ A
{;; 
GoodG2B<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
GoodB2G== 
(== 
req== 
,== 
resp== 
)== 
;== 
}>> 
privateAA 
staticAA 
voidAA 
GoodG2BAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
stringCC 
dataCC 
;CC 
dataEE 
=EE 
$strEE 
;EE 
	ContainerFF 
dataContainerFF 
=FF  !
newFF" %
	ContainerFF& /
(FF/ 0
)FF0 1
;FF1 2
dataContainerGG 
.GG 
containerOneGG "
=GG# $
dataGG% )
;GG) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataContainerHHO \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	
	Container\\ 
dataContainer\\ 
=\\  !
new\\" %
	Container\\& /
(\\/ 0
)\\0 1
;\\1 2
dataContainer]] 
.]] 
containerOne]] "
=]]# $
data]]% )
;]]) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67b^^ B
.^^B C
GoodB2GSink^^C N
(^^N O
dataContainer^^O \
,^^] ^
req^^_ b
,^^b c
resp^^d h
)^^i j
;^^j k
}__ 
}aa 
}bb 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67a Y
.Y Z
	ContainerZ c
dataContainerd q
,r s
HttpRequestt 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67a**# ]
.**] ^
	Container**^ g
dataContainer**h u
,**v w
HttpRequest	**x 
req
** 
,
** 
HttpResponse
** 
resp
** 
)
** 
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_67a55# ]
.55] ^
	Container55^ g
dataContainer55h u
,55v w
HttpRequest	55x 
req
55 
,
55 
HttpResponse
55 
resp
55 
)
55 
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ÷
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68a @
:A B
AbstractTestCaseWebC V
{ 
public 

static 
string 
data 
; 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68b00 B
.00B C
BadSink00C J
(00J K
req00K N
,00N O
resp00P T
)00T U
;00U V
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68b?? B
.??B C
GoodG2BSink??C N
(??N O
req??O R
,??R S
resp??T X
)??X Y
;??Y Z
}@@ 
privateCC 
staticCC 
voidCC 
GoodB2GCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
dataEE 
=EE 
$strEE 
;EE 
{FF 	
tryHH 
{II 
dataKK 
=KK 
ConsoleKK 
.KK 
ReadLineKK '
(KK' (
)KK( )
;KK) *
}LL 
catchMM 
(MM 
IOExceptionMM 
exceptIOMM '
)MM' (
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
exceptIOOO2 :
,OO: ;
$strOO< W
)OOW X
;OOX Y
}PP 
}QQ 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68bRR B
.RRB C
GoodB2GSinkRRC N
(RRN O
reqRRO R
,RRR S
respRRT X
)RRX Y
;RRY Z
}SS 
}UU 
}VV ¡
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68b @
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68a P
.P Q
dataQ U
;U V
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68a,, P
.,,P Q
data,,Q U
;,,U V
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_68a77 P
.77P Q
data77Q U
;77U V
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
$str;;) +
,;;+ ,
Encoding;;- 5
.;;5 6
UTF8;;6 :
);;: ;
;;;; <
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ² 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_71a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_71b// B
.//B C
BadSink//C J
(//J K
(//K L
Object//L R
)//R S
data//S W
,//X Y
req//Z ]
,//] ^
resp//_ c
)//d e
;//e f
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_71b?? B
.??B C
GoodG2BSink??C N
(??N O
(??O P
Object??P V
)??V W
data??W [
,??\ ]
req??^ a
,??a b
resp??c g
)??h i
;??i j
}@@ 
privateCC 
staticCC 
voidCC 
GoodB2GCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_71bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
(SSO P
ObjectSSP V
)SSV W
dataSSW [
,SS\ ]
reqSS^ a
,SSa b
respSSc g
)SSh i
;SSi j
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ¢.
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_72a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	
	Hashtable00 
dataHashtable00 
=00  !
new00" %
	Hashtable00& /
(00/ 0
$num000 1
)001 2
;002 3
dataHashtable11 
.11 
Add11 
(11 
$num11 
,11 
data11 !
)11! "
;11" #
dataHashtable22 
.22 
Add22 
(22 
$num22 
,22 
data22 !
)22! "
;22" #
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_72b44 B
.44B C
BadSink44C J
(44J K
dataHashtable44K X
,44Y Z
req44[ ^
,44^ _
resp44` d
)44e f
;44f g
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 
	HashtableDD 
dataHashtableDD 
=DD  !
newDD" %
	HashtableDD& /
(DD/ 0
$numDD0 1
)DD1 2
;DD2 3
dataHashtableEE 
.EE 
AddEE 
(EE 
$numEE 
,EE 
dataEE !
)EE! "
;EE" #
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_72bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataHashtableHHO \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	
	Hashtable\\ 
dataHashtable\\ 
=\\  !
new\\" %
	Hashtable\\& /
(\\/ 0
$num\\0 1
)\\1 2
;\\2 3
dataHashtable]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] !
)]]! "
;]]" #
dataHashtable^^ 
.^^ 
Add^^ 
(^^ 
$num^^ 
,^^ 
data^^ !
)^^! "
;^^" #
dataHashtable__ 
.__ 
Add__ 
(__ 
$num__ 
,__ 
data__ !
)__! "
;__" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_72b`` B
.``B C
GoodB2GSink``C N
(``N O
dataHashtable``O \
,``] ^
req``_ b
,``b c
resp``d h
)``i j
;``j k
}aa 
}cc 
}dd  
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ¨.
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_73a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	

LinkedList00 
<00 
string00 
>00 
dataLinkedList00 )
=00* +
new00, /

LinkedList000 :
<00: ;
string00; A
>00A B
(00B C
)00C D
;00D E
dataLinkedList11 
.11 
AddLast11 
(11 
data11 #
)11# $
;11$ %
dataLinkedList22 
.22 
AddLast22 
(22 
data22 #
)22# $
;22$ %
dataLinkedList33 
.33 
AddLast33 
(33 
data33 #
)33# $
;33$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_73b44 B
.44B C
BadSink44C J
(44J K
dataLinkedList44K Y
,44Z [
req44\ _
,44_ `
resp44a e
)44f g
;44g h
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 

LinkedListDD 
<DD 
stringDD 
>DD 
dataLinkedListDD )
=DD* +
newDD, /

LinkedListDD0 :
<DD: ;
stringDD; A
>DDA B
(DDB C
)DDC D
;DDD E
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %
dataLinkedListFF 
.FF 
AddLastFF 
(FF 
dataFF #
)FF# $
;FF$ %
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_73bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataLinkedListHHO ]
,HH^ _
reqHH` c
,HHc d
respHHe i
)HHj k
;HHk l
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	

LinkedList\\ 
<\\ 
string\\ 
>\\ 
dataLinkedList\\ )
=\\* +
new\\, /

LinkedList\\0 :
<\\: ;
string\\; A
>\\A B
(\\B C
)\\C D
;\\D E
dataLinkedList]] 
.]] 
AddLast]] 
(]] 
data]] #
)]]# $
;]]$ %
dataLinkedList^^ 
.^^ 
AddLast^^ 
(^^ 
data^^ #
)^^# $
;^^$ %
dataLinkedList__ 
.__ 
AddLast__ 
(__ 
data__ #
)__# $
;__$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_73b`` B
.``B C
GoodB2GSink``C N
(``N O
dataLinkedList``O ]
,``^ _
req``` c
,``c d
resp``e i
)``j k
;``k l
}aa 
}cc 
}dd â
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB í1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_74a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	

Dictionary00 
<00 
int00 
,00 
string00 
>00 
dataDictionary00 -
=00. /
new000 3

Dictionary004 >
<00> ?
int00? B
,00B C
string00C I
>00I J
(00J K
)00K L
;00L M
dataDictionary11 
.11 
Add11 
(11 
$num11 
,11 
data11 "
)11" #
;11# $
dataDictionary22 
.22 
Add22 
(22 
$num22 
,22 
data22 "
)22" #
;22# $
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_74b44 B
.44B C
BadSink44C J
(44J K
dataDictionary44K Y
,44Z [
req44\ _
,44_ `
resp44a e
)44f g
;44g h
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 

DictionaryDD 
<DD 
intDD 
,DD 
stringDD 
>DD 
dataDictionaryDD -
=DD. /
newDD0 3

DictionaryDD4 >
<DD> ?
intDD? B
,DDB C
stringDDC I
>DDI J
(DDJ K
)DDK L
;DDL M
dataDictionaryEE 
.EE 
AddEE 
(EE 
$numEE 
,EE 
dataEE "
)EE" #
;EE# $
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_74bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataDictionaryHHO ]
,HH^ _
reqHH` c
,HHc d
respHHe i
)HHj k
;HHk l
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	

Dictionary\\ 
<\\ 
int\\ 
,\\ 
string\\ 
>\\ 
dataDictionary\\ -
=\\. /
new\\0 3

Dictionary\\4 >
<\\> ?
int\\? B
,\\B C
string\\C I
>\\I J
(\\J K
)\\K L
;\\L M
dataDictionary]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] "
)]]" #
;]]# $
dataDictionary^^ 
.^^ 
Add^^ 
(^^ 
$num^^ 
,^^ 
data^^ "
)^^" #
;^^# $
dataDictionary__ 
.__ 
Add__ 
(__ 
$num__ 
,__ 
data__ "
)__" #
;__# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_74b`` B
.``B C
GoodB2GSink``C N
(``N O
dataDictionary``O ]
,``^ _
req``` c
,``c d
resp``e i
)``j k
;``k l
}aa 
}cc 
}dd 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if"" 

("" 
data"" 
!="" 
null"" 
)"" 
{## 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if:: 

(:: 
data:: 
!=:: 
null:: 
):: 
{;; 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
$str<<) +
,<<+ ,
Encoding<<- 5
.<<5 6
UTF8<<6 :
)<<: ;
;<<; <
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB äB
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_75a @
:A B
AbstractTestCaseWebC V
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 	
try'' 
{(( 
data** 
=** 
Console** 
.** 
ReadLine** '
(**' (
)**( )
;**) *
}++ 
catch,, 
(,, 
IOException,, 
exceptIO,, '
),,' (
{-- 
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. "
..." #
LogLevel..# +
...+ ,
Warn.., 0
,..0 1
exceptIO..2 :
,..: ;
$str..< W
)..W X
;..X Y
}// 
}00 	
byte22 
[22 
]22 
dataSerialized22 
=22 
null22  $
;22$ %
try33 
{44 	
BinaryFormatter55 
bf55 
=55  
new55! $
BinaryFormatter55% 4
(554 5
)555 6
;556 7
using66 
(66 
var66 
ms66 
=66 
new66 
MemoryStream66  ,
(66, -
)66- .
)66. /
{77 
bf88 
.88 
	Serialize88 
(88 
ms88 
,88  
data88! %
)88% &
;88& '
dataSerialized99 
=99  
ms99! #
.99# $
ToArray99$ +
(99+ ,
)99, -
;99- .
}:: F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_75b;; F
.;;F G
BadSink;;G N
(;;N O
dataSerialized;;O ]
,;;^ _
req;;` c
,;;c d
resp;;e i
);;j k
;;;k l
}<< 	
catch== 
(== "
SerializationException== %
exceptSerialize==& 5
)==5 6
{>> 	
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? 
.?? 
LogLevel?? '
.??' (
Warn??( ,
,??, -
$str??. X
,??X Y
exceptSerialize??Z i
)??i j
;??j k
}@@ 	
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
HttpRequestDD )
reqDD* -
,DD- .
HttpResponseDD/ ;
respDD< @
)DD@ A
{EE 
GoodG2BFF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
GoodB2GGG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
HttpRequestKK  +
reqKK, /
,KK/ 0
HttpResponseKK1 =
respKK> B
)KKB C
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{OO 	
tryQQ 
{RR 
dataTT 
=TT 
ConsoleTT 
.TT 
ReadLineTT '
(TT' (
)TT( )
;TT) *
}UU 
catchVV 
(VV 
IOExceptionVV 
exceptIOVV '
)VV' (
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
exceptIOXX2 :
,XX: ;
$strXX< W
)XXW X
;XXX Y
}YY 
}ZZ 	
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_75bee F
.eeF G
GoodG2BSinkeeG R
(eeR S
dataSerializedeeS a
,eeb c
reqeed g
,eeg h
respeei m
)een o
;eeo p
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
privatenn 
staticnn 
voidnn 
GoodB2Gnn 
(nn  
HttpRequestnn  +
reqnn, /
,nn/ 0
HttpResponsenn1 =
respnn> B
)nnB C
{oo 
stringpp 
datapp 
;pp 
dataqq 
=qq 
$strqq 
;qq 
{rr 	
trytt 
{uu 
dataww 
=ww 
Consoleww 
.ww 
ReadLineww '
(ww' (
)ww( )
;ww) *
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
exceptIO{{2 :
,{{: ;
$str{{< W
){{W X
;{{X Y
}|| 
}}} 	
byte 
[ 
] 
dataSerialized 
= 
null  $
;$ %
try
 
{
 	
BinaryFormatter
 
bf
 
=
  
new
! $
BinaryFormatter
% 4
(
4 5
)
5 6
;
6 7
using
 
(
 
var
 
ms
 
=
 
new
 
MemoryStream
  ,
(
, -
)
- .
)
. /
{
 
bf
 
.
 
	Serialize
 
(
 
ms
 
,
  
data
! %
)
% &
;
& '
dataSerialized
 
=
  
ms
! #
.
# $
ToArray
$ +
(
+ ,
)
, -
;
- .
}
 H
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_75b
 F
.
F G
GoodB2GSink
G R
(
R S
dataSerialized
S a
,
b c
req
d g
,
g h
resp
i m
)
n o
;
o p
}
 	
catch
 
(
 $
SerializationException
 %
exceptSerialize
& 5
)
5 6
{
 	
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 
.
 
LogLevel
 '
.
' (
Warn
( ,
,
, -
$str
. X
,
X Y
exceptSerialize
Z i
)
i j
;
j k
}
 	
}
 
} 
} ¢8
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_75b @
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if-- 
(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifHH 
(HH 
dataHH 
!=HH 
nullHH 
)HH 
{II 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
$strcc- /
,cc/ 0
Encodingcc1 9
.cc9 :
UTF8cc: >
)cc> ?
;cc? @
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn ê#
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_base// F

baseObject//G Q
=//R S
new//T WJ
=CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_bad	//X 
(
// 
)
// 
;
// 

baseObject00 
.00 
Action00 
(00 
data00 
,00  
req00! $
,00$ %
resp00& *
)00* +
;00+ ,
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
void;; 
GoodG2B;; 
(;; 
HttpRequest;; $
req;;% (
,;;( )
HttpResponse;;* 6
resp;;7 ;
);;; <
{<< 
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_base@@ F

baseObject@@G Q
=@@R S
new@@T WN
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_goodG2B	@@X 
(
@@ 
)
@@ 
;
@@ 

baseObjectAA 
.AA 
ActionAA 
(AA 
dataAA 
,AA  
reqAA! $
,AA$ %
respAA& *
)AA* +
;AA+ ,
}BB 
privateEE 
voidEE 
GoodB2GEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataGG 
;GG 
dataHH 
=HH 
$strHH 
;HH 
{II 	
tryKK 
{LL 
dataNN 
=NN 
ConsoleNN 
.NN 
ReadLineNN '
(NN' (
)NN( )
;NN) *
}OO 
catchPP 
(PP 
IOExceptionPP 
exceptIOPP '
)PP' (
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
exceptIORR2 :
,RR: ;
$strRR< W
)RRW X
;RRX Y
}SS 
}TT 	J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_baseUU F

baseObjectUUG Q
=UUR S
newUUT WN
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_goodB2G	UUX 
(
UU 
)
UU 
;
UU 

baseObjectVV 
.VV 
ActionVV 
(VV 
dataVV 
,VV  
reqVV! $
,VV$ %
respVV& *
)VV* +
;VV+ ,
}WW 
}YY 
}ZZ ó
¾C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class I
=CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_bad C
:D EK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_base	F 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& ç
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_base M
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} à

ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_goodB2G G
:H IK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_base	J 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
$str##) +
,##+ ,
Encoding##- 5
.##5 6
UTF8##6 :
)##: ;
;##; <
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( û
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_goodG2B G
:H IK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_addHeader_81_base	J 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' ¶"
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_01.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_01 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
if// 

(// 
data// 
!=// 
null// 
)// 
{00 	
resp22 
.22 
	AddHeader22 
(22 
$str22 %
,22% &
$str22' :
+22; <
data22= A
)22A B
;22B C
}33 	
}44 
public77 

override77 
void77 
Good77 
(77 
HttpRequest77 )
req77* -
,77- .
HttpResponse77/ ;
resp77< @
)77@ A
{88 
GoodG2B99 
(99 
req99 
,99 
resp99 
)99 
;99 
GoodB2G:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
};; 
private>> 
void>> 
GoodG2B>> 
(>> 
HttpRequest>> $
req>>% (
,>>( )
HttpResponse>>* 6
resp>>7 ;
)>>; <
{?? 
string@@ 
data@@ 
;@@ 
dataBB 
=BB 
$strBB 
;BB 
ifCC 

(CC 
dataCC 
!=CC 
nullCC 
)CC 
{DD 	
respFF 
.FF 
	AddHeaderFF 
(FF 
$strFF %
,FF% &
$strFF' :
+FF; <
dataFF= A
)FFA B
;FFB C
}GG 	
}HH 
privateKK 
voidKK 
GoodB2GKK 
(KK 
HttpRequestKK $
reqKK% (
,KK( )
HttpResponseKK* 6
respKK7 ;
)KK; <
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{OO 	
tryQQ 
{RR 
dataTT 
=TT 
ConsoleTT 
.TT 
ReadLineTT '
(TT' (
)TT( )
;TT) *
}UU 
catchVV 
(VV 
IOExceptionVV 
exceptIOVV '
)VV' (
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
exceptIOXX2 :
,XX: ;
$strXX< W
)XXW X
;XXX Y
}YY 
}ZZ 	
if[[ 

([[ 
data[[ 
!=[[ 
null[[ 
)[[ 
{\\ 	
data^^ 
=^^ 
HttpUtility^^ 
.^^ 
	UrlEncode^^ (
(^^( )
data^^) -
,^^- .
Encoding^^/ 7
.^^7 8
UTF8^^8 <
)^^< =
;^^= >
resp__ 
.__ 
	AddHeader__ 
(__ 
$str__ %
,__% &
$str__' :
+__; <
data__= A
)__A B
;__B C
}`` 	
}aa 
}cc 
}dd F
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_02.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_02 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
true"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
true88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
falseGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
trueRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
true`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
truekk 
)kk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
trueyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
false
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
true
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
true
¹¹ 
)
¹¹ 
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
data
¾¾- 1
,
¾¾1 2
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
)
¾¾@ A
;
¾¾A B
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ ãH
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_03.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_03 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
$num"" 
=="" 
$num"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
$num88 
==88 
$num88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
$numGG 
!=GG 
$numGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
$numRR 
==RR 
$numRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
$num`` 
==`` 
$num`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
$numkk 
==kk 
$numkk 
)kk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
$numyy 
==yy 
$numyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
$num
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
$num
££ 
==
££ 
$num
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
$num
¹¹ 
==
¹¹ 
$num
¹¹ 
)
¹¹ 
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
data
¾¾- 1
,
¾¾1 2
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
)
¾¾@ A
;
¾¾A B
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ ¿I
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_04.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_04 ?
:@ A
AbstractTestCaseWebB U
{ 
private## 
const## 
bool## 
PRIVATE_CONST_TRUE## )
=##* +
true##, 0
;##0 1
private$$ 
const$$ 
bool$$ 
PRIVATE_CONST_FALSE$$ *
=$$+ ,
false$$- 2
;$$2 3
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
PRIVATE_CONST_TRUE)) 
))) 
{** 	
data++ 
=++ 
$str++ 
;++ 
{,, 
try.. 
{// 
data11 
=11 
Console11 "
.11" #
ReadLine11# +
(11+ ,
)11, -
;11- .
}22 
catch33 
(33 
IOException33 "
exceptIO33# +
)33+ ,
{44 
IO55 
.55 
Logger55 
.55 
Log55 !
(55! "
NLog55" &
.55& '
LogLevel55' /
.55/ 0
Warn550 4
,554 5
exceptIO556 >
,55> ?
$str55@ [
)55[ \
;55\ ]
}66 
}77 
}88 	
else99 
{:: 	
data== 
=== 
null== 
;== 
}>> 	
if?? 

(?? 
PRIVATE_CONST_TRUE?? 
)?? 
{@@ 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 
respDD 
.DD 
	AddHeaderDD 
(DD 
$strDD )
,DD) *
$strDD+ >
+DD? @
dataDDA E
)DDE F
;DDF G
}EE 
}FF 	
}GG 
privateKK 
voidKK 
GoodG2B1KK 
(KK 
HttpRequestKK %
reqKK& )
,KK) *
HttpResponseKK+ 7
respKK8 <
)KK< =
{LL 
stringMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FALSENN 
)NN  
{OO 	
dataRR 
=RR 
nullRR 
;RR 
}SS 	
elseTT 
{UU 	
dataWW 
=WW 
$strWW 
;WW 
}XX 	
ifYY 

(YY 
PRIVATE_CONST_TRUEYY 
)YY 
{ZZ 	
if[[ 
([[ 
data[[ 
!=[[ 
null[[ 
)[[ 
{\\ 
resp^^ 
.^^ 
	AddHeader^^ 
(^^ 
$str^^ )
,^^) *
$str^^+ >
+^^? @
data^^A E
)^^E F
;^^F G
}__ 
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
HttpRequestdd %
reqdd& )
,dd) *
HttpResponsedd+ 7
respdd8 <
)dd< =
{ee 
stringff 
dataff 
;ff 
ifgg 

(gg 
PRIVATE_CONST_TRUEgg 
)gg 
{hh 	
datajj 
=jj 
$strjj 
;jj 
}kk 	
elsell 
{mm 	
datapp 
=pp 
nullpp 
;pp 
}qq 	
ifrr 

(rr 
PRIVATE_CONST_TRUErr 
)rr 
{ss 	
iftt 
(tt 
datatt 
!=tt 
nulltt 
)tt 
{uu 
respww 
.ww 
	AddHeaderww 
(ww 
$strww )
,ww) *
$strww+ >
+ww? @
datawwA E
)wwE F
;wwF G
}xx 
}yy 	
}zz 
private}} 
void}} 
GoodB2G1}} 
(}} 
HttpRequest}} %
req}}& )
,}}) *
HttpResponse}}+ 7
resp}}8 <
)}}< =
{~~ 
string 
data 
; 
if
 

(
  
PRIVATE_CONST_TRUE
 
)
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PRIVATE_CONST_FALSE
 
)
  
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
   
=
   
HttpUtility
   "
.
  " #
	UrlEncode
  # ,
(
  , -
data
  - 1
,
  1 2
Encoding
  3 ;
.
  ; <
UTF8
  < @
)
  @ A
;
  A B
resp
¡¡ 
.
¡¡ 
	AddHeader
¡¡ 
(
¡¡ 
$str
¡¡ )
,
¡¡) *
$str
¡¡+ >
+
¡¡? @
data
¡¡A E
)
¡¡E F
;
¡¡F G
}
¢¢ 
}
££ 	
}
¤¤ 
private
§§ 
void
§§ 
GoodB2G2
§§ 
(
§§ 
HttpRequest
§§ %
req
§§& )
,
§§) *
HttpResponse
§§+ 7
resp
§§8 <
)
§§< =
{
¨¨ 
string
©© 
data
©© 
;
©© 
if
ªª 

(
ªª  
PRIVATE_CONST_TRUE
ªª 
)
ªª 
{
«« 	
data
¬¬ 
=
¬¬ 
$str
¬¬ 
;
¬¬ 
{
­­ 
try
¯¯ 
{
°° 
data
²² 
=
²² 
Console
²² "
.
²²" #
ReadLine
²²# +
(
²²+ ,
)
²², -
;
²²- .
}
³³ 
catch
´´ 
(
´´ 
IOException
´´ "
exceptIO
´´# +
)
´´+ ,
{
µµ 
IO
¶¶ 
.
¶¶ 
Logger
¶¶ 
.
¶¶ 
Log
¶¶ !
(
¶¶! "
NLog
¶¶" &
.
¶¶& '
LogLevel
¶¶' /
.
¶¶/ 0
Warn
¶¶0 4
,
¶¶4 5
exceptIO
¶¶6 >
,
¶¶> ?
$str
¶¶@ [
)
¶¶[ \
;
¶¶\ ]
}
·· 
}
¸¸ 
}
¹¹ 	
else
ºº 
{
»» 	
data
¾¾ 
=
¾¾ 
null
¾¾ 
;
¾¾ 
}
¿¿ 	
if
ÀÀ 

(
ÀÀ  
PRIVATE_CONST_TRUE
ÀÀ 
)
ÀÀ 
{
ÁÁ 	
if
ÂÂ 
(
ÂÂ 
data
ÂÂ 
!=
ÂÂ 
null
ÂÂ 
)
ÂÂ 
{
ÃÃ 
data
ÅÅ 
=
ÅÅ 
HttpUtility
ÅÅ "
.
ÅÅ" #
	UrlEncode
ÅÅ# ,
(
ÅÅ, -
data
ÅÅ- 1
,
ÅÅ1 2
Encoding
ÅÅ3 ;
.
ÅÅ; <
UTF8
ÅÅ< @
)
ÅÅ@ A
;
ÅÅA B
resp
ÆÆ 
.
ÆÆ 
	AddHeader
ÆÆ 
(
ÆÆ 
$str
ÆÆ )
,
ÆÆ) *
$str
ÆÆ+ >
+
ÆÆ? @
data
ÆÆA E
)
ÆÆE F
;
ÆÆF G
}
ÇÇ 
}
ÈÈ 	
}
ÉÉ 
public
ËË 

override
ËË 
void
ËË 
Good
ËË 
(
ËË 
HttpRequest
ËË )
req
ËË* -
,
ËË- .
HttpResponse
ËË/ ;
resp
ËË< @
)
ËË@ A
{
ÌÌ 
GoodG2B1
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodG2B2
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodB2G1
ÏÏ 
(
ÏÏ 
req
ÏÏ 
,
ÏÏ 
resp
ÏÏ 
)
ÏÏ 
;
ÏÏ 
GoodB2G2
ÐÐ 
(
ÐÐ 
req
ÐÐ 
,
ÐÐ 
resp
ÐÐ 
)
ÐÐ 
;
ÐÐ 
}
ÑÑ 
}ÓÓ 
}ÔÔ ½H
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_05.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_05 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
bool"" 
privateTrue"" 
="" 
true"" #
;""# $
private## 
bool## 
privateFalse## 
=## 
false##  %
;##% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
$str** 
;** 
{++ 
try-- 
{.. 
data00 
=00 
Console00 "
.00" #
ReadLine00# +
(00+ ,
)00, -
;00- .
}11 
catch22 
(22 
IOException22 "
exceptIO22# +
)22+ ,
{33 
IO44 
.44 
Logger44 
.44 
Log44 !
(44! "
NLog44" &
.44& '
LogLevel44' /
.44/ 0
Warn440 4
,444 5
exceptIO446 >
,44> ?
$str44@ [
)44[ \
;44\ ]
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
privateTrue>> 
)>> 
{?? 	
if@@ 
(@@ 
data@@ 
!=@@ 
null@@ 
)@@ 
{AA 
respCC 
.CC 
	AddHeaderCC 
(CC 
$strCC )
,CC) *
$strCC+ >
+CC? @
dataCCA E
)CCE F
;CCF G
}DD 
}EE 	
}FF 
privateJJ 
voidJJ 
GoodG2B1JJ 
(JJ 
HttpRequestJJ %
reqJJ& )
,JJ) *
HttpResponseJJ+ 7
respJJ8 <
)JJ< =
{KK 
stringLL 
dataLL 
;LL 
ifMM 

(MM 
privateFalseMM 
)MM 
{NN 	
dataQQ 
=QQ 
nullQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataVV 
=VV 
$strVV 
;VV 
}WW 	
ifXX 

(XX 
privateTrueXX 
)XX 
{YY 	
ifZZ 
(ZZ 
dataZZ 
!=ZZ 
nullZZ 
)ZZ 
{[[ 
resp]] 
.]] 
	AddHeader]] 
(]] 
$str]] )
,]]) *
$str]]+ >
+]]? @
data]]A E
)]]E F
;]]F G
}^^ 
}__ 	
}`` 
privatecc 
voidcc 
GoodG2B2cc 
(cc 
HttpRequestcc %
reqcc& )
,cc) *
HttpResponsecc+ 7
respcc8 <
)cc< =
{dd 
stringee 
dataee 
;ee 
ifff 

(ff 
privateTrueff 
)ff 
{gg 	
dataii 
=ii 
$strii 
;ii 
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
nulloo 
;oo 
}pp 	
ifqq 

(qq 
privateTrueqq 
)qq 
{rr 	
ifss 
(ss 
datass 
!=ss 
nullss 
)ss 
{tt 
respvv 
.vv 
	AddHeadervv 
(vv 
$strvv )
,vv) *
$strvv+ >
+vv? @
datavvA E
)vvE F
;vvF G
}ww 
}xx 	
}yy 
private|| 
void|| 
GoodB2G1|| 
(|| 
HttpRequest|| %
req||& )
,||) *
HttpResponse||+ 7
resp||8 <
)||< =
{}} 
string~~ 
data~~ 
;~~ 
if 

( 
privateTrue 
) 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
   
.
   
	AddHeader
   
(
   
$str
   )
,
  ) *
$str
  + >
+
  ? @
data
  A E
)
  E F
;
  F G
}
¡¡ 
}
¢¢ 	
}
££ 
private
¦¦ 
void
¦¦ 
GoodB2G2
¦¦ 
(
¦¦ 
HttpRequest
¦¦ %
req
¦¦& )
,
¦¦) *
HttpResponse
¦¦+ 7
resp
¦¦8 <
)
¦¦< =
{
§§ 
string
¨¨ 
data
¨¨ 
;
¨¨ 
if
©© 

(
©© 
privateTrue
©© 
)
©© 
{
ªª 	
data
«« 
=
«« 
$str
«« 
;
«« 
{
¬¬ 
try
®® 
{
¯¯ 
data
±± 
=
±± 
Console
±± "
.
±±" #
ReadLine
±±# +
(
±±+ ,
)
±±, -
;
±±- .
}
²² 
catch
³³ 
(
³³ 
IOException
³³ "
exceptIO
³³# +
)
³³+ ,
{
´´ 
IO
µµ 
.
µµ 
Logger
µµ 
.
µµ 
Log
µµ !
(
µµ! "
NLog
µµ" &
.
µµ& '
LogLevel
µµ' /
.
µµ/ 0
Warn
µµ0 4
,
µµ4 5
exceptIO
µµ6 >
,
µµ> ?
$str
µµ@ [
)
µµ[ \
;
µµ\ ]
}
¶¶ 
}
·· 
}
¸¸ 	
else
¹¹ 
{
ºº 	
data
½½ 
=
½½ 
null
½½ 
;
½½ 
}
¾¾ 	
if
¿¿ 

(
¿¿ 
privateTrue
¿¿ 
)
¿¿ 
{
ÀÀ 	
if
ÁÁ 
(
ÁÁ 
data
ÁÁ 
!=
ÁÁ 
null
ÁÁ 
)
ÁÁ 
{
ÂÂ 
data
ÄÄ 
=
ÄÄ 
HttpUtility
ÄÄ "
.
ÄÄ" #
	UrlEncode
ÄÄ# ,
(
ÄÄ, -
data
ÄÄ- 1
,
ÄÄ1 2
Encoding
ÄÄ3 ;
.
ÄÄ; <
UTF8
ÄÄ< @
)
ÄÄ@ A
;
ÄÄA B
resp
ÅÅ 
.
ÅÅ 
	AddHeader
ÅÅ 
(
ÅÅ 
$str
ÅÅ )
,
ÅÅ) *
$str
ÅÅ+ >
+
ÅÅ? @
data
ÅÅA E
)
ÅÅE F
;
ÅÅF G
}
ÆÆ 
}
ÇÇ 	
}
ÈÈ 
public
ÊÊ 

override
ÊÊ 
void
ÊÊ 
Good
ÊÊ 
(
ÊÊ 
HttpRequest
ÊÊ )
req
ÊÊ* -
,
ÊÊ- .
HttpResponse
ÊÊ/ ;
resp
ÊÊ< @
)
ÊÊ@ A
{
ËË 
GoodG2B1
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
GoodG2B2
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G1
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
GoodB2G2
ÏÏ 
(
ÏÏ 
req
ÏÏ 
,
ÏÏ 
resp
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÐÐ 
}ÒÒ 
}ÓÓ K
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_06.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_06 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
const"" 
int"" 
PRIVATE_CONST_FIVE"" (
="") *
$num""+ ,
;"", -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
==''  
$num''  !
)''! "
{(( 	
data)) 
=)) 
$str)) 
;)) 
{** 
try,, 
{-- 
data// 
=// 
Console// "
.//" #
ReadLine//# +
(//+ ,
)//, -
;//- .
}00 
catch11 
(11 
IOException11 "
exceptIO11# +
)11+ ,
{22 
IO33 
.33 
Logger33 
.33 
Log33 !
(33! "
NLog33" &
.33& '
LogLevel33' /
.33/ 0
Warn330 4
,334 5
exceptIO336 >
,33> ?
$str33@ [
)33[ \
;33\ ]
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
PRIVATE_CONST_FIVE== 
====  
$num==  !
)==! "
{>> 	
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB )
,BB) *
$strBB+ >
+BB? @
dataBBA E
)BBE F
;BBF G
}CC 
}DD 	
}EE 
privateII 
voidII 
GoodG2B1II 
(II 
HttpRequestII %
reqII& )
,II) *
HttpResponseII+ 7
respII8 <
)II< =
{JJ 
stringKK 
dataKK 
;KK 
ifLL 

(LL 
PRIVATE_CONST_FIVELL 
!=LL  
$numLL  !
)LL! "
{MM 	
dataPP 
=PP 
nullPP 
;PP 
}QQ 	
elseRR 
{SS 	
dataUU 
=UU 
$strUU 
;UU 
}VV 	
ifWW 

(WW 
PRIVATE_CONST_FIVEWW 
==WW  
$numWW  !
)WW! "
{XX 	
ifYY 
(YY 
dataYY 
!=YY 
nullYY 
)YY 
{ZZ 
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
HttpRequestbb %
reqbb& )
,bb) *
HttpResponsebb+ 7
respbb8 <
)bb< =
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee 
PRIVATE_CONST_FIVEee 
==ee  
$numee  !
)ee! "
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
nullnn 
;nn 
}oo 	
ifpp 

(pp 
PRIVATE_CONST_FIVEpp 
==pp  
$numpp  !
)pp! "
{qq 	
ifrr 
(rr 
datarr 
!=rr 
nullrr 
)rr 
{ss 
respuu 
.uu 
	AddHeaderuu 
(uu 
$struu )
,uu) *
$struu+ >
+uu? @
datauuA E
)uuE F
;uuF G
}vv 
}ww 	
}xx 
private{{ 
void{{ 
GoodB2G1{{ 
({{ 
HttpRequest{{ %
req{{& )
,{{) *
HttpResponse{{+ 7
resp{{8 <
){{< =
{|| 
string}} 
data}} 
;}} 
if~~ 

(~~ 
PRIVATE_CONST_FIVE~~ 
==~~  
$num~~  !
)~~! "
{ 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
  
PRIVATE_CONST_FIVE
 
!=
  
$num
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
   
}
¡¡ 	
}
¢¢ 
private
¥¥ 
void
¥¥ 
GoodB2G2
¥¥ 
(
¥¥ 
HttpRequest
¥¥ %
req
¥¥& )
,
¥¥) *
HttpResponse
¥¥+ 7
resp
¥¥8 <
)
¥¥< =
{
¦¦ 
string
§§ 
data
§§ 
;
§§ 
if
¨¨ 

(
¨¨  
PRIVATE_CONST_FIVE
¨¨ 
==
¨¨  
$num
¨¨  !
)
¨¨! "
{
©© 	
data
ªª 
=
ªª 
$str
ªª 
;
ªª 
{
«« 
try
­­ 
{
®® 
data
°° 
=
°° 
Console
°° "
.
°°" #
ReadLine
°°# +
(
°°+ ,
)
°°, -
;
°°- .
}
±± 
catch
²² 
(
²² 
IOException
²² "
exceptIO
²²# +
)
²²+ ,
{
³³ 
IO
´´ 
.
´´ 
Logger
´´ 
.
´´ 
Log
´´ !
(
´´! "
NLog
´´" &
.
´´& '
LogLevel
´´' /
.
´´/ 0
Warn
´´0 4
,
´´4 5
exceptIO
´´6 >
,
´´> ?
$str
´´@ [
)
´´[ \
;
´´\ ]
}
µµ 
}
¶¶ 
}
·· 	
else
¸¸ 
{
¹¹ 	
data
¼¼ 
=
¼¼ 
null
¼¼ 
;
¼¼ 
}
½½ 	
if
¾¾ 

(
¾¾  
PRIVATE_CONST_FIVE
¾¾ 
==
¾¾  
$num
¾¾  !
)
¾¾! "
{
¿¿ 	
if
ÀÀ 
(
ÀÀ 
data
ÀÀ 
!=
ÀÀ 
null
ÀÀ 
)
ÀÀ 
{
ÁÁ 
data
ÃÃ 
=
ÃÃ 
HttpUtility
ÃÃ "
.
ÃÃ" #
	UrlEncode
ÃÃ# ,
(
ÃÃ, -
data
ÃÃ- 1
,
ÃÃ1 2
Encoding
ÃÃ3 ;
.
ÃÃ; <
UTF8
ÃÃ< @
)
ÃÃ@ A
;
ÃÃA B
resp
ÄÄ 
.
ÄÄ 
	AddHeader
ÄÄ 
(
ÄÄ 
$str
ÄÄ )
,
ÄÄ) *
$str
ÄÄ+ >
+
ÄÄ? @
data
ÄÄA E
)
ÄÄE F
;
ÄÄF G
}
ÅÅ 
}
ÆÆ 	
}
ÇÇ 
public
ÉÉ 

override
ÉÉ 
void
ÉÉ 
Good
ÉÉ 
(
ÉÉ 
HttpRequest
ÉÉ )
req
ÉÉ* -
,
ÉÉ- .
HttpResponse
ÉÉ/ ;
resp
ÉÉ< @
)
ÉÉ@ A
{
ÊÊ 
GoodG2B1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodG2B2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
GoodB2G1
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G2
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}ÑÑ 
}ÒÒ ¦J
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_07.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_07 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
int"" 
privateFive"" 
="" 
$num"" 
;""  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
$str)) 
;)) 
{** 
try,, 
{-- 
data// 
=// 
Console// "
.//" #
ReadLine//# +
(//+ ,
)//, -
;//- .
}00 
catch11 
(11 
IOException11 "
exceptIO11# +
)11+ ,
{22 
IO33 
.33 
Logger33 
.33 
Log33 !
(33! "
NLog33" &
.33& '
LogLevel33' /
.33/ 0
Warn330 4
,334 5
exceptIO336 >
,33> ?
$str33@ [
)33[ \
;33\ ]
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
null;; 
;;; 
}<< 	
if== 

(== 
privateFive== 
==== 
$num== 
)== 
{>> 	
if?? 
(?? 
data?? 
!=?? 
null?? 
)?? 
{@@ 
respBB 
.BB 
	AddHeaderBB 
(BB 
$strBB )
,BB) *
$strBB+ >
+BB? @
dataBBA E
)BBE F
;BBF G
}CC 
}DD 	
}EE 
privateII 
voidII 
GoodG2B1II 
(II 
HttpRequestII %
reqII& )
,II) *
HttpResponseII+ 7
respII8 <
)II< =
{JJ 
stringKK 
dataKK 
;KK 
ifLL 

(LL 
privateFiveLL 
!=LL 
$numLL 
)LL 
{MM 	
dataPP 
=PP 
nullPP 
;PP 
}QQ 	
elseRR 
{SS 	
dataUU 
=UU 
$strUU 
;UU 
}VV 	
ifWW 

(WW 
privateFiveWW 
==WW 
$numWW 
)WW 
{XX 	
ifYY 
(YY 
dataYY 
!=YY 
nullYY 
)YY 
{ZZ 
resp\\ 
.\\ 
	AddHeader\\ 
(\\ 
$str\\ )
,\\) *
$str\\+ >
+\\? @
data\\A E
)\\E F
;\\F G
}]] 
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
HttpRequestbb %
reqbb& )
,bb) *
HttpResponsebb+ 7
respbb8 <
)bb< =
{cc 
stringdd 
datadd 
;dd 
ifee 

(ee 
privateFiveee 
==ee 
$numee 
)ee 
{ff 	
datahh 
=hh 
$strhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
nullnn 
;nn 
}oo 	
ifpp 

(pp 
privateFivepp 
==pp 
$numpp 
)pp 
{qq 	
ifrr 
(rr 
datarr 
!=rr 
nullrr 
)rr 
{ss 
respuu 
.uu 
	AddHeaderuu 
(uu 
$struu )
,uu) *
$struu+ >
+uu? @
datauuA E
)uuE F
;uuF G
}vv 
}ww 	
}xx 
private{{ 
void{{ 
GoodB2G1{{ 
({{ 
HttpRequest{{ %
req{{& )
,{{) *
HttpResponse{{+ 7
resp{{8 <
){{< =
{|| 
string}} 
data}} 
;}} 
if~~ 

(~~ 
privateFive~~ 
==~~ 
$num~~ 
)~~ 
{ 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
privateFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
   
}
¡¡ 	
}
¢¢ 
private
¥¥ 
void
¥¥ 
GoodB2G2
¥¥ 
(
¥¥ 
HttpRequest
¥¥ %
req
¥¥& )
,
¥¥) *
HttpResponse
¥¥+ 7
resp
¥¥8 <
)
¥¥< =
{
¦¦ 
string
§§ 
data
§§ 
;
§§ 
if
¨¨ 

(
¨¨ 
privateFive
¨¨ 
==
¨¨ 
$num
¨¨ 
)
¨¨ 
{
©© 	
data
ªª 
=
ªª 
$str
ªª 
;
ªª 
{
«« 
try
­­ 
{
®® 
data
°° 
=
°° 
Console
°° "
.
°°" #
ReadLine
°°# +
(
°°+ ,
)
°°, -
;
°°- .
}
±± 
catch
²² 
(
²² 
IOException
²² "
exceptIO
²²# +
)
²²+ ,
{
³³ 
IO
´´ 
.
´´ 
Logger
´´ 
.
´´ 
Log
´´ !
(
´´! "
NLog
´´" &
.
´´& '
LogLevel
´´' /
.
´´/ 0
Warn
´´0 4
,
´´4 5
exceptIO
´´6 >
,
´´> ?
$str
´´@ [
)
´´[ \
;
´´\ ]
}
µµ 
}
¶¶ 
}
·· 	
else
¸¸ 
{
¹¹ 	
data
¼¼ 
=
¼¼ 
null
¼¼ 
;
¼¼ 
}
½½ 	
if
¾¾ 

(
¾¾ 
privateFive
¾¾ 
==
¾¾ 
$num
¾¾ 
)
¾¾ 
{
¿¿ 	
if
ÀÀ 
(
ÀÀ 
data
ÀÀ 
!=
ÀÀ 
null
ÀÀ 
)
ÀÀ 
{
ÁÁ 
data
ÃÃ 
=
ÃÃ 
HttpUtility
ÃÃ "
.
ÃÃ" #
	UrlEncode
ÃÃ# ,
(
ÃÃ, -
data
ÃÃ- 1
,
ÃÃ1 2
Encoding
ÃÃ3 ;
.
ÃÃ; <
UTF8
ÃÃ< @
)
ÃÃ@ A
;
ÃÃA B
resp
ÄÄ 
.
ÄÄ 
	AddHeader
ÄÄ 
(
ÄÄ 
$str
ÄÄ )
,
ÄÄ) *
$str
ÄÄ+ >
+
ÄÄ? @
data
ÄÄA E
)
ÄÄE F
;
ÄÄF G
}
ÅÅ 
}
ÆÆ 	
}
ÇÇ 
public
ÉÉ 

override
ÉÉ 
void
ÉÉ 
Good
ÉÉ 
(
ÉÉ 
HttpRequest
ÉÉ )
req
ÉÉ* -
,
ÉÉ- .
HttpResponse
ÉÉ/ ;
resp
ÉÉ< @
)
ÉÉ@ A
{
ÊÊ 
GoodG2B1
ËË 
(
ËË 
req
ËË 
,
ËË 
resp
ËË 
)
ËË 
;
ËË 
GoodG2B2
ÌÌ 
(
ÌÌ 
req
ÌÌ 
,
ÌÌ 
resp
ÌÌ 
)
ÌÌ 
;
ÌÌ 
GoodB2G1
ÍÍ 
(
ÍÍ 
req
ÍÍ 
,
ÍÍ 
resp
ÍÍ 
)
ÍÍ 
;
ÍÍ 
GoodB2G2
ÎÎ 
(
ÎÎ 
req
ÎÎ 
,
ÎÎ 
resp
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}ÑÑ 
}ÒÒ M
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_08.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_08 ?
:@ A
AbstractTestCaseWebB U
{ 
private"" 
static"" 
bool"" 
PrivateReturnsTrue"" *
(""* +
)""+ ,
{## 
return$$ 
true$$ 
;$$ 
}%% 
private'' 
static'' 
bool'' 
PrivateReturnsFalse'' +
(''+ ,
)'', -
{(( 
return)) 
false)) 
;)) 
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
$str11 
;11 
{22 
try44 
{55 
data77 
=77 
Console77 "
.77" #
ReadLine77# +
(77+ ,
)77, -
;77- .
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
nullCC 
;CC 
}DD 	
ifEE 

(EE 
PrivateReturnsTrueEE 
(EE 
)EE  
)EE  !
{FF 	
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
}MM 
privateQQ 
voidQQ 
GoodG2B1QQ 
(QQ 
HttpRequestQQ %
reqQQ& )
,QQ) *
HttpResponseQQ+ 7
respQQ8 <
)QQ< =
{RR 
stringSS 
dataSS 
;SS 
ifTT 

(TT 
PrivateReturnsFalseTT 
(TT  
)TT  !
)TT! "
{UU 	
dataXX 
=XX 
nullXX 
;XX 
}YY 	
elseZZ 
{[[ 	
data]] 
=]] 
$str]] 
;]] 
}^^ 	
if__ 

(__ 
PrivateReturnsTrue__ 
(__ 
)__  
)__  !
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
}gg 
privatejj 
voidjj 
GoodG2B2jj 
(jj 
HttpRequestjj %
reqjj& )
,jj) *
HttpResponsejj+ 7
respjj8 <
)jj< =
{kk 
stringll 
datall 
;ll 
ifmm 

(mm 
PrivateReturnsTruemm 
(mm 
)mm  
)mm  !
{nn 	
datapp 
=pp 
$strpp 
;pp 
}qq 	
elserr 
{ss 	
datavv 
=vv 
nullvv 
;vv 
}ww 	
ifxx 

(xx 
PrivateReturnsTruexx 
(xx 
)xx  
)xx  !
{yy 	
ifzz 
(zz 
datazz 
!=zz 
nullzz 
)zz 
{{{ 
resp}} 
.}} 
	AddHeader}} 
(}} 
$str}} )
,}}) *
$str}}+ >
+}}? @
data}}A E
)}}E F
;}}F G
}~~ 
} 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
if
 

(
  
PrivateReturnsTrue
 
(
 
)
  
)
  !
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 !
PrivateReturnsFalse
 
(
  
)
  !
)
! "
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
   	
else
¡¡ 
{
¢¢ 	
if
££ 
(
££ 
data
££ 
!=
££ 
null
££ 
)
££ 
{
¤¤ 
data
¦¦ 
=
¦¦ 
HttpUtility
¦¦ "
.
¦¦" #
	UrlEncode
¦¦# ,
(
¦¦, -
data
¦¦- 1
,
¦¦1 2
Encoding
¦¦3 ;
.
¦¦; <
UTF8
¦¦< @
)
¦¦@ A
;
¦¦A B
resp
§§ 
.
§§ 
	AddHeader
§§ 
(
§§ 
$str
§§ )
,
§§) *
$str
§§+ >
+
§§? @
data
§§A E
)
§§E F
;
§§F G
}
¨¨ 
}
©© 	
}
ªª 
private
­­ 
void
­­ 
GoodB2G2
­­ 
(
­­ 
HttpRequest
­­ %
req
­­& )
,
­­) *
HttpResponse
­­+ 7
resp
­­8 <
)
­­< =
{
®® 
string
¯¯ 
data
¯¯ 
;
¯¯ 
if
°° 

(
°°  
PrivateReturnsTrue
°° 
(
°° 
)
°°  
)
°°  !
{
±± 	
data
²² 
=
²² 
$str
²² 
;
²² 
{
³³ 
try
µµ 
{
¶¶ 
data
¸¸ 
=
¸¸ 
Console
¸¸ "
.
¸¸" #
ReadLine
¸¸# +
(
¸¸+ ,
)
¸¸, -
;
¸¸- .
}
¹¹ 
catch
ºº 
(
ºº 
IOException
ºº "
exceptIO
ºº# +
)
ºº+ ,
{
»» 
IO
¼¼ 
.
¼¼ 
Logger
¼¼ 
.
¼¼ 
Log
¼¼ !
(
¼¼! "
NLog
¼¼" &
.
¼¼& '
LogLevel
¼¼' /
.
¼¼/ 0
Warn
¼¼0 4
,
¼¼4 5
exceptIO
¼¼6 >
,
¼¼> ?
$str
¼¼@ [
)
¼¼[ \
;
¼¼\ ]
}
½½ 
}
¾¾ 
}
¿¿ 	
else
ÀÀ 
{
ÁÁ 	
data
ÄÄ 
=
ÄÄ 
null
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
if
ÆÆ 

(
ÆÆ  
PrivateReturnsTrue
ÆÆ 
(
ÆÆ 
)
ÆÆ  
)
ÆÆ  !
{
ÇÇ 	
if
ÈÈ 
(
ÈÈ 
data
ÈÈ 
!=
ÈÈ 
null
ÈÈ 
)
ÈÈ 
{
ÉÉ 
data
ËË 
=
ËË 
HttpUtility
ËË "
.
ËË" #
	UrlEncode
ËË# ,
(
ËË, -
data
ËË- 1
,
ËË1 2
Encoding
ËË3 ;
.
ËË; <
UTF8
ËË< @
)
ËË@ A
;
ËËA B
resp
ÌÌ 
.
ÌÌ 
	AddHeader
ÌÌ 
(
ÌÌ 
$str
ÌÌ )
,
ÌÌ) *
$str
ÌÌ+ >
+
ÌÌ? @
data
ÌÌA E
)
ÌÌE F
;
ÌÌF G
}
ÍÍ 
}
ÎÎ 	
}
ÏÏ 
public
ÑÑ 

override
ÑÑ 
void
ÑÑ 
Good
ÑÑ 
(
ÑÑ 
HttpRequest
ÑÑ )
req
ÑÑ* -
,
ÑÑ- .
HttpResponse
ÑÑ/ ;
resp
ÑÑ< @
)
ÑÑ@ A
{
ÒÒ 
GoodG2B1
ÓÓ 
(
ÓÓ 
req
ÓÓ 
,
ÓÓ 
resp
ÓÓ 
)
ÓÓ 
;
ÓÓ 
GoodG2B2
ÔÔ 
(
ÔÔ 
req
ÔÔ 
,
ÔÔ 
resp
ÔÔ 
)
ÔÔ 
;
ÔÔ 
GoodB2G1
ÕÕ 
(
ÕÕ 
req
ÕÕ 
,
ÕÕ 
resp
ÕÕ 
)
ÕÕ 
;
ÕÕ 
GoodB2G2
ÖÖ 
(
ÖÖ 
req
ÖÖ 
,
ÖÖ 
resp
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
×× 
}ÙÙ 
}ÚÚ çI
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_09.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_09 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_TRUE"" #
)""# $
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_TRUE88 #
)88# $
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG !
STATIC_READONLY_FALSEGG $
)GG$ %
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR  
STATIC_READONLY_TRUERR #
)RR# $
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_TRUE`` #
)``# $
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk  
STATIC_READONLY_TRUEkk #
)kk# $
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy  
STATIC_READONLY_TRUEyy #
)yy# $
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 #
STATIC_READONLY_FALSE
 $
)
$ %
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ "
STATIC_READONLY_TRUE
££ #
)
££# $
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ "
STATIC_READONLY_TRUE
¹¹ #
)
¹¹# $
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
data
¾¾- 1
,
¾¾1 2
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
)
¾¾@ A
;
¾¾A B
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ I
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_10.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_10 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticTrue"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticTrue88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG 
staticFalseGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR 

staticTrueRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticTrue`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk 

staticTruekk 
)kk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy 

staticTrueyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 
staticFalse
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ 

staticTrue
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ 

staticTrue
¹¹ 
)
¹¹ 
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
data
¾¾- 1
,
¾¾1 2
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
)
¾¾@ A
;
¾¾A B
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ L
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_11.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_11 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 
StaticReturnsTrue""  
(""  !
)""! "
)""" #
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88
 
IO88 
.88 
StaticReturnsTrue88 
(88  
)88  !
)88! "
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG 
StaticReturnsFalseGG !
(GG! "
)GG" #
)GG# $
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR 
StaticReturnsTrueRR  
(RR  !
)RR! "
)RR" #
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 
StaticReturnsTrue``  
(``  !
)``! "
)``" #
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk 
StaticReturnsTruekk  
(kk  !
)kk! "
)kk" #
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy 
StaticReturnsTrueyy  
(yy  !
)yy! "
)yy" #
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
  
StaticReturnsFalse
 !
(
! "
)
" #
)
# $
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ 
StaticReturnsTrue
££  
(
££  !
)
££! "
)
££" #
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ 
StaticReturnsTrue
¹¹  
(
¹¹  !
)
¹¹! "
)
¹¹" #
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
data
¾¾- 1
,
¾¾1 2
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
)
¾¾@ A
;
¾¾A B
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ Ì@
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_12.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_12 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

(""
 
IO"" 
."" $
StaticReturnsTrueOrFalse"" &
(""& '
)""' (
)""( )
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data55 
=55 
$str55 
;55 
}66 	
if77 

(77
 
IO77 
.77 $
StaticReturnsTrueOrFalse77 &
(77& '
)77' (
)77( )
{88 	
if99 
(99 
data99 
!=99 
null99 
)99 
{:: 
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< )
,<<) *
$str<<+ >
+<<? @
data<<A E
)<<E F
;<<F G
}== 
}>> 	
else?? 
{@@ 	
ifAA 
(AA 
dataAA 
!=AA 
nullAA 
)AA 
{BB 
dataDD 
=DD 
HttpUtilityDD "
.DD" #
	UrlEncodeDD# ,
(DD, -
dataDD- 1
,DD1 2
EncodingDD3 ;
.DD; <
UTF8DD< @
)DD@ A
;DDA B
respEE 
.EE 
	AddHeaderEE 
(EE 
$strEE )
,EE) *
$strEE+ >
+EE? @
dataEEA E
)EEE F
;EEF G
}FF 
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
HttpRequestMM $
reqMM% (
,MM( )
HttpResponseMM* 6
respMM7 ;
)MM; <
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP
 
IOPP 
.PP $
StaticReturnsTrueOrFalsePP &
(PP& '
)PP' (
)PP( )
{QQ 	
dataSS 
=SS 
$strSS 
;SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$strXX 
;XX 
}YY 	
ifZZ 

(ZZ
 
IOZZ 
.ZZ $
StaticReturnsTrueOrFalseZZ &
(ZZ& '
)ZZ' (
)ZZ( )
{[[ 	
if\\ 
(\\ 
data\\ 
!=\\ 
null\\ 
)\\ 
{]] 
resp__ 
.__ 
	AddHeader__ 
(__ 
$str__ )
,__) *
$str__+ >
+__? @
data__A E
)__E F
;__F G
}`` 
}aa 	
elsebb 
{cc 	
ifdd 
(dd 
datadd 
!=dd 
nulldd 
)dd 
{ee 
respgg 
.gg 
	AddHeadergg 
(gg 
$strgg )
,gg) *
$strgg+ >
+gg? @
dataggA E
)ggE F
;ggF G
}hh 
}ii 	
}jj 
privatenn 
voidnn 
GoodB2Gnn 
(nn 
HttpRequestnn $
reqnn% (
,nn( )
HttpResponsenn* 6
respnn7 ;
)nn; <
{oo 
stringpp 
datapp 
;pp 
ifqq 

(qq
 
IOqq 
.qq $
StaticReturnsTrueOrFalseqq &
(qq& '
)qq' (
)qq( )
{rr 	
datass 
=ss 
$strss 
;ss 
{tt 
tryvv 
{ww 
datayy 
=yy 
Consoleyy "
.yy" #
ReadLineyy# +
(yy+ ,
)yy, -
;yy- .
}zz 
catch{{ 
({{ 
IOException{{ "
exceptIO{{# +
){{+ ,
{|| 
IO}} 
.}} 
Logger}} 
.}} 
Log}} !
(}}! "
NLog}}" &
.}}& '
LogLevel}}' /
.}}/ 0
Warn}}0 4
,}}4 5
exceptIO}}6 >
,}}> ?
$str}}@ [
)}}[ \
;}}\ ]
}~~ 
} 
}
 	
else
 
{
 	
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
if
 

(

 
IO
 
.
 &
StaticReturnsTrueOrFalse
 &
(
& '
)
' (
)
( )
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
   
.
   
	AddHeader
   
(
   
$str
   )
,
  ) *
$str
  + >
+
  ? @
data
  A E
)
  E F
;
  F G
}
¡¡ 
}
¢¢ 	
}
££ 
public
¥¥ 

override
¥¥ 
void
¥¥ 
Good
¥¥ 
(
¥¥ 
HttpRequest
¥¥ )
req
¥¥* -
,
¥¥- .
HttpResponse
¥¥/ ;
resp
¥¥< @
)
¥¥@ A
{
§§ 
GoodG2B
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G
©© 
(
©© 
req
©© 
,
©© 
resp
©© 
)
©© 
;
©© 
}
ªª 
}¬¬ 
}­­ ÅL
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_13.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_13 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
.""  
STATIC_READONLY_FIVE"" #
==""# %
$num""% &
)""& '
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88  
STATIC_READONLY_FIVE88 #
==88# %
$num88% &
)88& '
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG  
STATIC_READONLY_FIVEGG #
!=GG# %
$numGG% &
)GG& '
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR  
STATIC_READONLY_FIVERR #
==RR# %
$numRR% &
)RR& '
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.``  
STATIC_READONLY_FIVE`` #
==``# %
$num``% &
)``& '
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk  
STATIC_READONLY_FIVEkk #
==kk# %
$numkk% &
)kk& '
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy  
STATIC_READONLY_FIVEyy #
==yy# %
$numyy% &
)yy& '
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 "
STATIC_READONLY_FIVE
 #
!=
# %
$num
% &
)
& '
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ "
STATIC_READONLY_FIVE
££ #
==
££# %
$num
££% &
)
££& '
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ "
STATIC_READONLY_FIVE
¹¹ #
==
¹¹# %
$num
¹¹% &
)
¹¹& '
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
data
¾¾- 1
,
¾¾1 2
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
)
¾¾@ A
;
¾¾A B
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ áK
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_14.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_14 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
if"" 

("" 
IO"" 
."" 

staticFive"" 
=="" 
$num"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
}11 	
else22 
{33 	
data66 
=66 
null66 
;66 
}77 	
if88 

(88 
IO88 
.88 

staticFive88 
==88 
$num88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
HttpRequestDD %
reqDD& )
,DD) *
HttpResponseDD+ 7
respDD8 <
)DD< =
{EE 
stringFF 
dataFF 
;FF 
ifGG 

(GG 
IOGG 
.GG 

staticFiveGG 
!=GG 
$numGG 
)GG 
{HH 	
dataKK 
=KK 
nullKK 
;KK 
}LL 	
elseMM 
{NN 	
dataPP 
=PP 
$strPP 
;PP 
}QQ 	
ifRR 

(RR 
IORR 
.RR 

staticFiveRR 
==RR 
$numRR 
)RR 
{SS 	
ifTT 
(TT 
dataTT 
!=TT 
nullTT 
)TT 
{UU 
respWW 
.WW 
	AddHeaderWW 
(WW 
$strWW )
,WW) *
$strWW+ >
+WW? @
dataWWA E
)WWE F
;WWF G
}XX 
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B2]] 
(]] 
HttpRequest]] %
req]]& )
,]]) *
HttpResponse]]+ 7
resp]]8 <
)]]< =
{^^ 
string__ 
data__ 
;__ 
if`` 

(`` 
IO`` 
.`` 

staticFive`` 
==`` 
$num`` 
)`` 
{aa 	
datacc 
=cc 
$strcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
nullii 
;ii 
}jj 	
ifkk 

(kk 
IOkk 
.kk 

staticFivekk 
==kk 
$numkk 
)kk 
{ll 	
ifmm 
(mm 
datamm 
!=mm 
nullmm 
)mm 
{nn 
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G1vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
ifyy 

(yy 
IOyy 
.yy 

staticFiveyy 
==yy 
$numyy 
)yy 
{zz 	
data{{ 
={{ 
$str{{ 
;{{ 
{|| 
try~~ 
{ 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
}
 	
else
 
{
 	
data
 
=
 
null
 
;
 
}
 	
if
 

(
 
IO
 
.
 

staticFive
 
!=
 
$num
 
)
 
{
 	
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
}
 	
else
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
   
void
   
GoodB2G2
   
(
   
HttpRequest
   %
req
  & )
,
  ) *
HttpResponse
  + 7
resp
  8 <
)
  < =
{
¡¡ 
string
¢¢ 
data
¢¢ 
;
¢¢ 
if
££ 

(
££ 
IO
££ 
.
££ 

staticFive
££ 
==
££ 
$num
££ 
)
££ 
{
¤¤ 	
data
¥¥ 
=
¥¥ 
$str
¥¥ 
;
¥¥ 
{
¦¦ 
try
¨¨ 
{
©© 
data
«« 
=
«« 
Console
«« "
.
««" #
ReadLine
««# +
(
««+ ,
)
««, -
;
««- .
}
¬¬ 
catch
­­ 
(
­­ 
IOException
­­ "
exceptIO
­­# +
)
­­+ ,
{
®® 
IO
¯¯ 
.
¯¯ 
Logger
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
NLog
¯¯" &
.
¯¯& '
LogLevel
¯¯' /
.
¯¯/ 0
Warn
¯¯0 4
,
¯¯4 5
exceptIO
¯¯6 >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
}
°° 
}
±± 
}
²² 	
else
³³ 
{
´´ 	
data
·· 
=
·· 
null
·· 
;
·· 
}
¸¸ 	
if
¹¹ 

(
¹¹ 
IO
¹¹ 
.
¹¹ 

staticFive
¹¹ 
==
¹¹ 
$num
¹¹ 
)
¹¹ 
{
ºº 	
if
»» 
(
»» 
data
»» 
!=
»» 
null
»» 
)
»» 
{
¼¼ 
data
¾¾ 
=
¾¾ 
HttpUtility
¾¾ "
.
¾¾" #
	UrlEncode
¾¾# ,
(
¾¾, -
data
¾¾- 1
,
¾¾1 2
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
)
¾¾@ A
;
¾¾A B
resp
¿¿ 
.
¿¿ 
	AddHeader
¿¿ 
(
¿¿ 
$str
¿¿ )
,
¿¿) *
$str
¿¿+ >
+
¿¿? @
data
¿¿A E
)
¿¿E F
;
¿¿F G
}
ÀÀ 
}
ÁÁ 	
}
ÂÂ 
public
ÄÄ 

override
ÄÄ 
void
ÄÄ 
Good
ÄÄ 
(
ÄÄ 
HttpRequest
ÄÄ )
req
ÄÄ* -
,
ÄÄ- .
HttpResponse
ÄÄ/ ;
resp
ÄÄ< @
)
ÄÄ@ A
{
ÅÅ 
GoodG2B1
ÆÆ 
(
ÆÆ 
req
ÆÆ 
,
ÆÆ 
resp
ÆÆ 
)
ÆÆ 
;
ÆÆ 
GoodG2B2
ÇÇ 
(
ÇÇ 
req
ÇÇ 
,
ÇÇ 
resp
ÇÇ 
)
ÇÇ 
;
ÇÇ 
GoodB2G1
ÈÈ 
(
ÈÈ 
req
ÈÈ 
,
ÈÈ 
resp
ÈÈ 
)
ÈÈ 
;
ÈÈ 
GoodB2G2
ÉÉ 
(
ÉÉ 
req
ÉÉ 
,
ÉÉ 
resp
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}ÌÌ 
}ÍÍ U
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_15.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_15 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
switch"" 
("" 
$num"" 
)"" 
{## 	
case$$ 
$num$$ 
:$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 
try(( 
{)) 
data++ 
=++ 
Console++ "
.++" #
ReadLine++# +
(+++ ,
)++, -
;++- .
},, 
catch-- 
(-- 
IOException-- "
exceptIO--# +
)--+ ,
{.. 
IO// 
.// 
Logger// 
.// 
Log// !
(//! "
NLog//" &
.//& '
LogLevel//' /
./// 0
Warn//0 4
,//4 5
exceptIO//6 >
,//> ?
$str//@ [
)//[ \
;//\ ]
}00 
}11 
break22 
;22 
default33 
:33 
data66 
=66 
null66 
;66 
break77 
;77 
}88 	
switch99 
(99 
$num99 
)99 
{:: 	
case;; 
$num;; 
:;; 
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
resp?? 
.?? 
	AddHeader?? 
(?? 
$str?? )
,??) *
$str??+ >
+??? @
data??A E
)??E F
;??F G
}@@ 
breakAA 
;AA 
defaultBB 
:BB 
IODD 
.DD 
	WriteLineDD 
(DD 
$strDD /
)DD/ 0
;DD0 1
breakEE 
;EE 
}FF 	
}GG 
privateKK 
voidKK 
GoodG2B1KK 
(KK 
HttpRequestKK %
reqKK& )
,KK) *
HttpResponseKK+ 7
respKK8 <
)KK< =
{LL 
stringMM 
dataMM 
;MM 
switchNN 
(NN 
$numNN 
)NN 
{OO 	
casePP 
$numPP 
:PP 
dataSS 
=SS 
nullSS 
;SS 
breakTT 
;TT 
defaultUU 
:UU 
dataWW 
=WW 
$strWW 
;WW 
breakXX 
;XX 
}YY 	
switchZZ 
(ZZ 
$numZZ 
)ZZ 
{[[ 	
case\\ 
$num\\ 
:\\ 
if]] 
(]] 
data]] 
!=]] 
null]] 
)]] 
{^^ 
resp`` 
.`` 
	AddHeader`` 
(`` 
$str`` )
,``) *
$str``+ >
+``? @
data``A E
)``E F
;``F G
}aa 
breakbb 
;bb 
defaultcc 
:cc 
IOee 
.ee 
	WriteLineee 
(ee 
$stree /
)ee/ 0
;ee0 1
breakff 
;ff 
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
HttpRequestkk %
reqkk& )
,kk) *
HttpResponsekk+ 7
respkk8 <
)kk< =
{ll 
stringmm 
datamm 
;mm 
switchnn 
(nn 
$numnn 
)nn 
{oo 	
casepp 
$numpp 
:pp 
datarr 
=rr 
$strrr 
;rr 
breakss 
;ss 
defaulttt 
:tt 
dataww 
=ww 
nullww 
;ww 
breakxx 
;xx 
}yy 	
switchzz 
(zz 
$numzz 
)zz 
{{{ 	
case|| 
$num|| 
:|| 
if}} 
(}} 
data}} 
!=}} 
null}} 
)}} 
{~~ 
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
break
 
;
 
default
 
:
 
IO
 
.
 
	WriteLine
 
(
 
$str
 /
)
/ 0
;
0 1
break
 
;
 
}
 	
}
 
private
 
void
 
GoodB2G1
 
(
 
HttpRequest
 %
req
& )
,
) *
HttpResponse
+ 7
resp
8 <
)
< =
{
 
string
 
data
 
;
 
switch
 
(
 
$num
 
)
 
{
 	
case
 
$num
 
:
 
data
 
=
 
$str
 
;
 
{
 
try
 
{
 
data
 
=
 
Console
 "
.
" #
ReadLine
# +
(
+ ,
)
, -
;
- .
}
 
catch
 
(
 
IOException
 "
exceptIO
# +
)
+ ,
{
 
IO
 
.
 
Logger
 
.
 
Log
 !
(
! "
NLog
" &
.
& '
LogLevel
' /
.
/ 0
Warn
0 4
,
4 5
exceptIO
6 >
,
> ?
$str
@ [
)
[ \
;
\ ]
}
 
}
 
break
 
;
 
default
 
:
 
data
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
break
££ 
;
££ 
}
¤¤ 	
switch
¥¥ 
(
¥¥ 
$num
¥¥ 
)
¥¥ 
{
¦¦ 	
case
§§ 
$num
§§ 
:
§§ 
IO
©© 
.
©© 
	WriteLine
©© 
(
©© 
$str
©© /
)
©©/ 0
;
©©0 1
break
ªª 
;
ªª 
default
«« 
:
«« 
if
¬¬ 
(
¬¬ 
data
¬¬ 
!=
¬¬ 
null
¬¬ 
)
¬¬ 
{
­­ 
data
¯¯ 
=
¯¯ 
HttpUtility
¯¯ "
.
¯¯" #
	UrlEncode
¯¯# ,
(
¯¯, -
data
¯¯- 1
,
¯¯1 2
Encoding
¯¯3 ;
.
¯¯; <
UTF8
¯¯< @
)
¯¯@ A
;
¯¯A B
resp
°° 
.
°° 
	AddHeader
°° 
(
°° 
$str
°° )
,
°°) *
$str
°°+ >
+
°°? @
data
°°A E
)
°°E F
;
°°F G
}
±± 
break
²² 
;
²² 
}
³³ 	
}
´´ 
private
·· 
void
·· 
GoodB2G2
·· 
(
·· 
HttpRequest
·· %
req
··& )
,
··) *
HttpResponse
··+ 7
resp
··8 <
)
··< =
{
¸¸ 
string
¹¹ 
data
¹¹ 
;
¹¹ 
switch
ºº 
(
ºº 
$num
ºº 
)
ºº 
{
»» 	
case
¼¼ 
$num
¼¼ 
:
¼¼ 
data
½½ 
=
½½ 
$str
½½ 
;
½½ 
{
¾¾ 
try
ÀÀ 
{
ÁÁ 
data
ÃÃ 
=
ÃÃ 
Console
ÃÃ "
.
ÃÃ" #
ReadLine
ÃÃ# +
(
ÃÃ+ ,
)
ÃÃ, -
;
ÃÃ- .
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
IOException
ÅÅ "
exceptIO
ÅÅ# +
)
ÅÅ+ ,
{
ÆÆ 
IO
ÇÇ 
.
ÇÇ 
Logger
ÇÇ 
.
ÇÇ 
Log
ÇÇ !
(
ÇÇ! "
NLog
ÇÇ" &
.
ÇÇ& '
LogLevel
ÇÇ' /
.
ÇÇ/ 0
Warn
ÇÇ0 4
,
ÇÇ4 5
exceptIO
ÇÇ6 >
,
ÇÇ> ?
$str
ÇÇ@ [
)
ÇÇ[ \
;
ÇÇ\ ]
}
ÈÈ 
}
ÉÉ 
break
ÊÊ 
;
ÊÊ 
default
ËË 
:
ËË 
data
ÎÎ 
=
ÎÎ 
null
ÎÎ 
;
ÎÎ 
break
ÏÏ 
;
ÏÏ 
}
ÐÐ 	
switch
ÑÑ 
(
ÑÑ 
$num
ÑÑ 
)
ÑÑ 
{
ÒÒ 	
case
ÓÓ 
$num
ÓÓ 
:
ÓÓ 
if
ÔÔ 
(
ÔÔ 
data
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
{
ÕÕ 
data
×× 
=
×× 
HttpUtility
×× "
.
××" #
	UrlEncode
××# ,
(
××, -
data
××- 1
,
××1 2
Encoding
××3 ;
.
××; <
UTF8
××< @
)
××@ A
;
××A B
resp
ØØ 
.
ØØ 
	AddHeader
ØØ 
(
ØØ 
$str
ØØ )
,
ØØ) *
$str
ØØ+ >
+
ØØ? @
data
ØØA E
)
ØØE F
;
ØØF G
}
ÙÙ 
break
ÚÚ 
;
ÚÚ 
default
ÛÛ 
:
ÛÛ 
IO
ÝÝ 
.
ÝÝ 
	WriteLine
ÝÝ 
(
ÝÝ 
$str
ÝÝ /
)
ÝÝ/ 0
;
ÝÝ0 1
break
ÞÞ 
;
ÞÞ 
}
ßß 	
}
àà 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
HttpRequest
ââ )
req
ââ* -
,
ââ- .
HttpResponse
ââ/ ;
resp
ââ< @
)
ââ@ A
{
ãã 
GoodG2B1
ää 
(
ää 
req
ää 
,
ää 
resp
ää 
)
ää 
;
ää 
GoodG2B2
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodB2G1
ææ 
(
ææ 
req
ææ 
,
ææ 
resp
ææ 
)
ææ 
;
ææ 
GoodB2G2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
}
èè 
}êê 
}ëë È(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_16.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_16 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
while"" 
("" 
true"" 
)"" 
{## 	
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
break11 
;11 
}22 	
while33 
(33 
true33 
)33 
{44 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
break:: 
;:: 
};; 	
}<< 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataBB 
;BB 
whileCC 
(CC 
trueCC 
)CC 
{DD 	
dataFF 
=FF 
$strFF 
;FF 
breakGG 
;GG 
}HH 	
whileII 
(II 
trueII 
)II 
{JJ 	
ifKK 
(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
breakPP 
;PP 
}QQ 	
}RR 
privateUU 
voidUU 
GoodB2GUU 
(UU 
HttpRequestUU $
reqUU% (
,UU( )
HttpResponseUU* 6
respUU7 ;
)UU; <
{VV 
stringWW 
dataWW 
;WW 
whileXX 
(XX 
trueXX 
)XX 
{YY 	
dataZZ 
=ZZ 
$strZZ 
;ZZ 
{[[ 
try]] 
{^^ 
data`` 
=`` 
Console`` "
.``" #
ReadLine``# +
(``+ ,
)``, -
;``- .
}aa 
catchbb 
(bb 
IOExceptionbb "
exceptIObb# +
)bb+ ,
{cc 
IOdd 
.dd 
Loggerdd 
.dd 
Logdd !
(dd! "
NLogdd" &
.dd& '
LogLeveldd' /
.dd/ 0
Warndd0 4
,dd4 5
exceptIOdd6 >
,dd> ?
$strdd@ [
)dd[ \
;dd\ ]
}ee 
}ff 
breakgg 
;gg 
}hh 	
whileii 
(ii 
trueii 
)ii 
{jj 	
ifkk 
(kk 
datakk 
!=kk 
nullkk 
)kk 
{ll 
datann 
=nn 
HttpUtilitynn "
.nn" #
	UrlEncodenn# ,
(nn, -
datann- 1
,nn1 2
Encodingnn3 ;
.nn; <
UTF8nn< @
)nn@ A
;nnA B
respoo 
.oo 
	AddHeaderoo 
(oo 
$stroo )
,oo) *
$stroo+ >
+oo? @
dataooA E
)ooE F
;ooF G
}pp 
breakqq 
;qq 
}rr 	
}ss 
publicuu 

overrideuu 
voiduu 
Gooduu 
(uu 
HttpRequestuu )
requu* -
,uu- .
HttpResponseuu/ ;
respuu< @
)uu@ A
{vv 
GoodG2Bww 
(ww 
reqww 
,ww 
respww 
)ww 
;ww 
GoodB2Gxx 
(xx 
reqxx 
,xx 
respxx 
)xx 
;xx 
}yy 
}{{ 
}|| §(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_17.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_17 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data&& 
=&& 
$str&& 
;&& 
{'' 	
try)) 
{** 
data,, 
=,, 
Console,, 
.,, 
ReadLine,, '
(,,' (
),,( )
;,,) *
}-- 
catch.. 
(.. 
IOException.. 
exceptIO.. '
)..' (
{// 
IO00 
.00 
Logger00 
.00 
Log00 
(00 
NLog00 "
.00" #
LogLevel00# +
.00+ ,
Warn00, 0
,000 1
exceptIO002 :
,00: ;
$str00< W
)00W X
;00X Y
}11 
}22 	
for33 
(33 
int33 
j33 
=33 
$num33 
;33 
j33 
<33 
$num33 
;33 
j33  
++33  "
)33" #
{44 	
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
}:: 	
};; 
private?? 
void?? 
GoodG2B?? 
(?? 
HttpRequest?? $
req??% (
,??( )
HttpResponse??* 6
resp??7 ;
)??; <
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 
forDD 
(DD 
intDD 
jDD 
=DD 
$numDD 
;DD 
jDD 
<DD 
$numDD 
;DD 
jDD  
++DD  "
)DD" #
{EE 	
ifFF 
(FF 
dataFF 
!=FF 
nullFF 
)FF 
{GG 
respII 
.II 
	AddHeaderII 
(II 
$strII )
,II) *
$strII+ >
+II? @
dataIIA E
)IIE F
;IIF G
}JJ 
}KK 	
}LL 
privateOO 
voidOO 
GoodB2GOO 
(OO 
HttpRequestOO $
reqOO% (
,OO( )
HttpResponseOO* 6
respOO7 ;
)OO; <
{PP 
stringQQ 
dataQQ 
;QQ 
dataRR 
=RR 
$strRR 
;RR 
{SS 	
tryUU 
{VV 
dataXX 
=XX 
ConsoleXX 
.XX 
ReadLineXX '
(XX' (
)XX( )
;XX) *
}YY 
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ '
)ZZ' (
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
exceptIO\\2 :
,\\: ;
$str\\< W
)\\W X
;\\X Y
}]] 
}^^ 	
for__ 
(__ 
int__ 
k__ 
=__ 
$num__ 
;__ 
k__ 
<__ 
$num__ 
;__ 
k__  
++__  "
)__" #
{`` 	
ifaa 
(aa 
dataaa 
!=aa 
nullaa 
)aa 
{bb 
datadd 
=dd 
HttpUtilitydd "
.dd" #
	UrlEncodedd# ,
(dd, -
datadd- 1
,dd1 2
Encodingdd3 ;
.dd; <
UTF8dd< @
)dd@ A
;ddA B
respee 
.ee 
	AddHeaderee 
(ee 
$stree )
,ee) *
$stree+ >
+ee? @
dataeeA E
)eeE F
;eeF G
}ff 
}gg 	
}hh 
publicjj 

overridejj 
voidjj 
Goodjj 
(jj 
HttpRequestjj )
reqjj* -
,jj- .
HttpResponsejj/ ;
respjj< @
)jj@ A
{kk 
GoodG2Bll 
(ll 
reqll 
,ll 
respll 
)ll 
;ll 
GoodB2Gmm 
(mm 
reqmm 
,mm 
respmm 
)mm 
;mm 
}nn 
}pp 
}qq ×I
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_21.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_21 ?
:@ A
AbstractTestCaseWebB U
{ 
private   
bool   

badPrivate   
=   
false   #
;  # $
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 	
try(( 
{)) 
data++ 
=++ 
Console++ 
.++ 
ReadLine++ '
(++' (
)++( )
;++) *
},, 
catch-- 
(-- 
IOException-- 
exceptIO-- '
)--' (
{.. 
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// "
.//" #
LogLevel//# +
.//+ ,
Warn//, 0
,//0 1
exceptIO//2 :
,//: ;
$str//< W
)//W X
;//X Y
}00 
}11 	

badPrivate22 
=22 
true22 
;22 
BadSink33 
(33 
data33 
,33 
req33 
,33 
resp33  
)33  !
;33! "
}44 
private66 
void66 
BadSink66 
(66 
string66 
data66  $
,66% &
HttpRequest66' 2
req663 6
,666 7
HttpResponse668 D
resp66E I
)66I J
{77 
if88 

(88 

badPrivate88 
)88 
{99 	
if:: 
(:: 
data:: 
!=:: 
null:: 
):: 
{;; 
resp== 
.== 
	AddHeader== 
(== 
$str== )
,==) *
$str==+ >
+==? @
data==A E
)==E F
;==F G
}>> 
}?? 	
}@@ 
privateCC 
boolCC 
goodB2G1PrivateCC  
=CC! "
falseCC# (
;CC( )
privateDD 
boolDD 
goodB2G2PrivateDD  
=DD! "
falseDD# (
;DD( )
privateEE 
boolEE 
goodG2BPrivateEE 
=EE  !
falseEE" '
;EE' (
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
HttpRequestGG )
reqGG* -
,GG- .
HttpResponseGG/ ;
respGG< @
)GG@ A
{HH 
GoodB2G1II 
(II 
reqII 
,II 
respII 
)II 
;II 
GoodB2G2JJ 
(JJ 
reqJJ 
,JJ 
respJJ 
)JJ 
;JJ 
GoodG2BKK 
(KK 
reqKK 
,KK 
respKK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodB2G1OO 
(OO 
HttpRequestOO %
reqOO& )
,OO) *
HttpResponseOO+ 7
respOO8 <
)OO< =
{PP 
stringQQ 
dataQQ 
;QQ 
dataRR 
=RR 
$strRR 
;RR 
{SS 	
tryUU 
{VV 
dataXX 
=XX 
ConsoleXX 
.XX 
ReadLineXX '
(XX' (
)XX( )
;XX) *
}YY 
catchZZ 
(ZZ 
IOExceptionZZ 
exceptIOZZ '
)ZZ' (
{[[ 
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ "
.\\" #
LogLevel\\# +
.\\+ ,
Warn\\, 0
,\\0 1
exceptIO\\2 :
,\\: ;
$str\\< W
)\\W X
;\\X Y
}]] 
}^^ 	
goodB2G1Private__ 
=__ 
false__ 
;__  
GoodB2G1Sink`` 
(`` 
data`` 
,`` 
req`` 
,``  
resp``! %
)``% &
;``& '
}aa 
privatecc 
voidcc 
GoodB2G1Sinkcc 
(cc 
stringcc $
datacc% )
,cc* +
HttpRequestcc, 7
reqcc8 ;
,cc; <
HttpResponsecc= I
respccJ N
)ccN O
{dd 
ifee 

(ee 
goodB2G1Privateee 
)ee 
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
$strhh /
)hh/ 0
;hh0 1
}ii 	
elsejj 
{kk 	
ifll 
(ll 
datall 
!=ll 
nullll 
)ll 
{mm 
dataoo 
=oo 
HttpUtilityoo "
.oo" #
	UrlEncodeoo# ,
(oo, -
dataoo- 1
,oo1 2
Encodingoo3 ;
.oo; <
UTF8oo< @
)oo@ A
;ooA B
resppp 
.pp 
	AddHeaderpp 
(pp 
$strpp )
,pp) *
$strpp+ >
+pp? @
datappA E
)ppE F
;ppF G
}qq 
}rr 	
}ss 
privatevv 
voidvv 
GoodB2G2vv 
(vv 
HttpRequestvv %
reqvv& )
,vv) *
HttpResponsevv+ 7
respvv8 <
)vv< =
{ww 
stringxx 
dataxx 
;xx 
datayy 
=yy 
$stryy 
;yy 
{zz 	
try|| 
{}} 
data 
= 
Console 
. 
ReadLine '
(' (
)( )
;) *
}
 
catch
 
(
 
IOException
 
exceptIO
 '
)
' (
{
 
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 "
.
" #
LogLevel
# +
.
+ ,
Warn
, 0
,
0 1
exceptIO
2 :
,
: ;
$str
< W
)
W X
;
X Y
}
 
}
 	
goodB2G2Private
 
=
 
true
 
;
 
GoodB2G2Sink
 
(
 
data
 
,
 
req
 
,
  
resp
! %
)
% &
;
& '
}
 
private
 
void
 
GoodB2G2Sink
 
(
 
string
 $
data
% )
,
* +
HttpRequest
, 7
req
8 ;
,
; <
HttpResponse
= I
resp
J N
)
N O
{
 
if
 

(
 
goodB2G2Private
 
)
 
{
 	
if
 
(
 
data
 
!=
 
null
 
)
 
{
 
data
 
=
 
HttpUtility
 "
.
" #
	UrlEncode
# ,
(
, -
data
- 1
,
1 2
Encoding
3 ;
.
; <
UTF8
< @
)
@ A
;
A B
resp
 
.
 
	AddHeader
 
(
 
$str
 )
,
) *
$str
+ >
+
? @
data
A E
)
E F
;
F G
}
 
}
 	
}
 
private
 
void
 
GoodG2B
 
(
 
HttpRequest
 $
req
% (
,
( )
HttpResponse
* 6
resp
7 ;
)
; <
{
 
string
 
data
 
;
 
data
 
=
 
$str
 
;
 
goodG2BPrivate
 
=
 
true
 
;
 
GoodG2BSink
 
(
 
data
 
,
 
req
 
,
 
resp
  $
)
$ %
;
% &
}
 
private
¡¡ 
void
¡¡ 
GoodG2BSink
¡¡ 
(
¡¡ 
string
¡¡ #
data
¡¡$ (
,
¡¡) *
HttpRequest
¡¡+ 6
req
¡¡7 :
,
¡¡: ;
HttpResponse
¡¡< H
resp
¡¡I M
)
¡¡M N
{
¢¢ 
if
££ 

(
££ 
goodG2BPrivate
££ 
)
££ 
{
¤¤ 	
if
¥¥ 
(
¥¥ 
data
¥¥ 
!=
¥¥ 
null
¥¥ 
)
¥¥ 
{
¦¦ 
resp
¨¨ 
.
¨¨ 
	AddHeader
¨¨ 
(
¨¨ 
$str
¨¨ )
,
¨¨) *
$str
¨¨+ >
+
¨¨? @
data
¨¨A E
)
¨¨E F
;
¨¨F G
}
©© 
}
ªª 	
}
«« 
}­­ 
}®® 1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22a @
:A B
AbstractTestCaseWebC V
{ 
public   

static   
bool   
badPublicStatic   &
=  ' (
false  ) .
;  . /
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
string$$ 
data$$ 
=$$ 
null$$ 
;$$ 
data%% 
=%% 
$str%% 
;%% 
{&& 	
try(( 
{)) 
data++ 
=++ 
Console++ 
.++ 
ReadLine++ '
(++' (
)++( )
;++) *
},, 
catch-- 
(-- 
IOException-- 
exceptIO-- '
)--' (
{.. 
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// "
.//" #
LogLevel//# +
.//+ ,
Warn//, 0
,//0 1
exceptIO//2 :
,//: ;
$str//< W
)//W X
;//X Y
}00 
}11 	
badPublicStatic22 
=22 
true22 
;22 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22b33 B
.33B C
BadSink33C J
(33J K
data33K O
,33P Q
req33R U
,33U V
resp33W [
)33[ \
;33\ ]
}44 
public77 

static77 
bool77  
goodB2G1PublicStatic77 +
=77, -
false77. 3
;773 4
public88 

static88 
bool88  
goodB2G2PublicStatic88 +
=88, -
false88. 3
;883 4
public99 

static99 
bool99 
goodG2BPublicStatic99 *
=99+ ,
false99- 2
;992 3
public;; 

override;; 
void;; 
Good;; 
(;; 
HttpRequest;; )
req;;* -
,;;- .
HttpResponse;;/ ;
resp;;< @
);;@ A
{<< 
GoodB2G1== 
(== 
req== 
,== 
resp== 
)== 
;== 
GoodB2G2>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodG2B?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodB2G1CC 
(CC 
HttpRequestCC %
reqCC& )
,CC) *
HttpResponseCC+ 7
respCC8 <
)CC< =
{DD 
stringEE 
dataEE 
=EE 
nullEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	 
goodB2G1PublicStaticSS 
=SS 
falseSS $
;SS$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22bTT B
.TTB C
GoodB2G1SinkTTC O
(TTO P
dataTTP T
,TTU V
reqTTW Z
,TTZ [
respTT\ `
)TT` a
;TTa b
}UU 
privateXX 
voidXX 
GoodB2G2XX 
(XX 
HttpRequestXX %
reqXX& )
,XX) *
HttpResponseXX+ 7
respXX8 <
)XX< =
{YY 
stringZZ 
dataZZ 
=ZZ 
nullZZ 
;ZZ 
data[[ 
=[[ 
$str[[ 
;[[ 
{\\ 	
try^^ 
{__ 
dataaa 
=aa 
Consoleaa 
.aa 
ReadLineaa '
(aa' (
)aa( )
;aa) *
}bb 
catchcc 
(cc 
IOExceptioncc 
exceptIOcc '
)cc' (
{dd 
IOee 
.ee 
Loggeree 
.ee 
Logee 
(ee 
NLogee "
.ee" #
LogLevelee# +
.ee+ ,
Warnee, 0
,ee0 1
exceptIOee2 :
,ee: ;
$stree< W
)eeW X
;eeX Y
}ff 
}gg 	 
goodB2G2PublicStatichh 
=hh 
truehh #
;hh# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22bii B
.iiB C
GoodB2G2SinkiiC O
(iiO P
dataiiP T
,iiU V
reqiiW Z
,iiZ [
respii\ `
)ii` a
;iia b
}jj 
privatemm 
voidmm 
GoodG2Bmm 
(mm 
HttpRequestmm $
reqmm% (
,mm( )
HttpResponsemm* 6
respmm7 ;
)mm; <
{nn 
stringoo 
dataoo 
=oo 
nulloo 
;oo 
dataqq 
=qq 
$strqq 
;qq 
goodG2BPublicStaticrr 
=rr 
truerr "
;rr" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22bss B
.ssB C
GoodG2BSinkssC N
(ssN O
datassO S
,ssT U
reqssV Y
,ssY Z
respss[ _
)ss_ `
;ss` a
}tt 
}vv 
}ww Ø#
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22a F
.F G
badPublicStaticG V
)V W
{   	
if!! 
(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ )
,$$) *
$str$$+ >
+$$? @
data$$A E
)$$E F
;$$F G
}%% 
}&& 	
else'' 
{(( 	
data++ 
=++ 
null++ 
;++ 
},, 	
}-- 
public22 

static22 
void22 
GoodB2G1Sink22 #
(22# $
string22$ *
data22+ /
,220 1
HttpRequest222 =
req22> A
,22A B
HttpResponse22C O
resp22P T
)22T U
{33 
if44 

(44 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22a44 F
.44F G 
goodB2G1PublicStatic44G [
)44[ \
{55 	
data88 
=88 
null88 
;88 
}99 	
else:: 
{;; 	
if<< 
(<< 
data<< 
!=<< 
null<< 
)<< 
{== 
data?? 
=?? 
HttpUtility?? "
.??" #
	UrlEncode??# ,
(??, -
data??- 1
,??1 2
Encoding??3 ;
.??; <
UTF8??< @
)??@ A
;??A B
resp@@ 
.@@ 
	AddHeader@@ 
(@@ 
$str@@ )
,@@) *
$str@@+ >
+@@? @
data@@A E
)@@E F
;@@F G
}AA 
}BB 	
}CC 
publicFF 

staticFF 
voidFF 
GoodB2G2SinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
ifHH 

(HH F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22aHH F
.HHF G 
goodB2G2PublicStaticHHG [
)HH[ \
{II 	
ifJJ 
(JJ 
dataJJ 
!=JJ 
nullJJ 
)JJ 
{KK 
dataMM 
=MM 
HttpUtilityMM "
.MM" #
	UrlEncodeMM# ,
(MM, -
dataMM- 1
,MM1 2
EncodingMM3 ;
.MM; <
UTF8MM< @
)MM@ A
;MMA B
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN )
,NN) *
$strNN+ >
+NN? @
dataNNA E
)NNE F
;NNF G
}OO 
}PP 	
elseQQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
}WW 
publicZZ 

staticZZ 
voidZZ 
GoodG2BSinkZZ "
(ZZ" #
stringZZ# )
dataZZ* .
,ZZ/ 0
HttpRequestZZ1 <
reqZZ= @
,ZZ@ A
HttpResponseZZB N
respZZO S
)ZZS T
{[[ 
if\\ 

(\\ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_22a\\ F
.\\F G
goodG2BPublicStatic\\G Z
)\\Z [
{]] 	
if^^ 
(^^ 
data^^ 
!=^^ 
null^^ 
)^^ 
{__ 
respaa 
.aa 
	AddHeaderaa 
(aa 
$straa )
,aa) *
$straa+ >
+aa? @
dataaaA E
)aaE F
;aaF G
}bb 
}cc 	
elsedd 
{ee 	
datahh 
=hh 
nullhh 
;hh 
}ii 	
}jj 
}ll 
}mm õ(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_31.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_31 ?
:@ A
AbstractTestCaseWebB U
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
dataCopy!! 
;!! 
{"" 	
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 
try'' 
{(( 
data** 
=** 
Console** "
.**" #
ReadLine**# +
(**+ ,
)**, -
;**- .
}++ 
catch,, 
(,, 
IOException,, "
exceptIO,,# +
),,+ ,
{-- 
IO.. 
... 
Logger.. 
... 
Log.. !
(..! "
NLog.." &
...& '
LogLevel..' /
.../ 0
Warn..0 4
,..4 5
exceptIO..6 >
,..> ?
$str..@ [
)..[ \
;..\ ]
}// 
}00 
dataCopy11 
=11 
data11 
;11 
}22 	
{33 	
string44 
data44 
=44 
dataCopy44 "
;44" #
if55 
(55 
data55 
!=55 
null55 
)55 
{66 
resp88 
.88 
	AddHeader88 
(88 
$str88 )
,88) *
$str88+ >
+88? @
data88A E
)88E F
;88F G
}99 
}:: 	
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
HttpRequest>> )
req>>* -
,>>- .
HttpResponse>>/ ;
resp>>< @
)>>@ A
{?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
}BB 
privateEE 
voidEE 
GoodG2BEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataCopyGG 
;GG 
{HH 	
stringII 
dataII 
;II 
dataKK 
=KK 
$strKK 
;KK 
dataCopyLL 
=LL 
dataLL 
;LL 
}MM 	
{NN 	
stringOO 
dataOO 
=OO 
dataCopyOO "
;OO" #
ifPP 
(PP 
dataPP 
!=PP 
nullPP 
)PP 
{QQ 
respSS 
.SS 
	AddHeaderSS 
(SS 
$strSS )
,SS) *
$strSS+ >
+SS? @
dataSSA E
)SSE F
;SSF G
}TT 
}UU 	
}VV 
privateYY 
voidYY 
GoodB2GYY 
(YY 
HttpRequestYY $
reqYY% (
,YY( )
HttpResponseYY* 6
respYY7 ;
)YY; <
{ZZ 
string[[ 
dataCopy[[ 
;[[ 
{\\ 	
string]] 
data]] 
;]] 
data^^ 
=^^ 
$str^^ 
;^^ 
{__ 
tryaa 
{bb 
datadd 
=dd 
Consoledd "
.dd" #
ReadLinedd# +
(dd+ ,
)dd, -
;dd- .
}ee 
catchff 
(ff 
IOExceptionff "
exceptIOff# +
)ff+ ,
{gg 
IOhh 
.hh 
Loggerhh 
.hh 
Loghh !
(hh! "
NLoghh" &
.hh& '
LogLevelhh' /
.hh/ 0
Warnhh0 4
,hh4 5
exceptIOhh6 >
,hh> ?
$strhh@ [
)hh[ \
;hh\ ]
}ii 
}jj 
dataCopykk 
=kk 
datakk 
;kk 
}ll 	
{mm 	
stringnn 
datann 
=nn 
dataCopynn "
;nn" #
ifoo 
(oo 
dataoo 
!=oo 
nulloo 
)oo 
{pp 
datarr 
=rr 
HttpUtilityrr "
.rr" #
	UrlEncoderr# ,
(rr, -
datarr- 1
,rr1 2
Encodingrr3 ;
.rr; <
UTF8rr< @
)rr@ A
;rrA B
respss 
.ss 
	AddHeaderss 
(ss 
$strss )
,ss) *
$strss+ >
+ss? @
datassA E
)ssE F
;ssF G
}tt 
}uu 	
}vv 
}xx 
}yy -
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_41.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_41 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
static 
void 
BadSink 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{   
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public(( 

override(( 
void(( 
Bad(( 
((( 
HttpRequest(( (
req(() ,
,((, -
HttpResponse((. :
resp((; ?
)((? @
{)) 
string** 
data** 
;** 
data++ 
=++ 
$str++ 
;++ 
{,, 	
try.. 
{// 
data11 
=11 
Console11 
.11 
ReadLine11 '
(11' (
)11( )
;11) *
}22 
catch33 
(33 
IOException33 
exceptIO33 '
)33' (
{44 
IO55 
.55 
Logger55 
.55 
Log55 
(55 
NLog55 "
.55" #
LogLevel55# +
.55+ ,
Warn55, 0
,550 1
exceptIO552 :
,55: ;
$str55< W
)55W X
;55X Y
}66 
}77 	
BadSink88 
(88 
data88 
,88 
req88 
,88 
resp88  
)88! "
;88" #
}99 
public<< 

override<< 
void<< 
Good<< 
(<< 
HttpRequest<< )
req<<* -
,<<- .
HttpResponse<</ ;
resp<<< @
)<<@ A
{== 
GoodG2B>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
GoodB2G?? 
(?? 
req?? 
,?? 
resp?? 
)?? 
;?? 
}@@ 
privateBB 
staticBB 
voidBB 
GoodG2BSinkBB #
(BB# $
stringBB$ *
dataBB+ /
,BB0 1
HttpRequestBB2 =
reqBB> A
,BBA B
HttpResponseBBC O
respBBP T
)BBT U
{CC 
ifDD 

(DD 
dataDD 
!=DD 
nullDD 
)DD 
{EE 	
respGG 
.GG 
	AddHeaderGG 
(GG 
$strGG %
,GG% &
$strGG' :
+GG; <
dataGG= A
)GGA B
;GGB C
}HH 	
}II 
privateLL 
staticLL 
voidLL 
GoodG2BLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataPP 
=PP 
$strPP 
;PP 
GoodG2BSinkQQ 
(QQ 
dataQQ 
,QQ 
reqQQ 
,QQ 
respQQ  $
)QQ% &
;QQ& '
}RR 
privateTT 
staticTT 
voidTT 
GoodB2GSinkTT #
(TT# $
stringTT$ *
dataTT+ /
,TT0 1
HttpRequestTT2 =
reqTT> A
,TTA B
HttpResponseTTC O
respTTP T
)TTT U
{UU 
ifVV 

(VV 
dataVV 
!=VV 
nullVV 
)VV 
{WW 	
dataYY 
=YY 
HttpUtilityYY 
.YY 
	UrlEncodeYY (
(YY( )
dataYY) -
,YY- .
EncodingYY/ 7
.YY7 8
UTF8YY8 <
)YY< =
;YY= >
respZZ 
.ZZ 
	AddHeaderZZ 
(ZZ 
$strZZ %
,ZZ% &
$strZZ' :
+ZZ; <
dataZZ= A
)ZZA B
;ZZB C
}[[ 	
}\\ 
private__ 
static__ 
void__ 
GoodB2G__ 
(__  
HttpRequest__  +
req__, /
,__/ 0
HttpResponse__1 =
resp__> B
)__B C
{`` 
stringaa 
dataaa 
;aa 
databb 
=bb 
$strbb 
;bb 
{cc 	
tryee 
{ff 
datahh 
=hh 
Consolehh 
.hh 
ReadLinehh '
(hh' (
)hh( )
;hh) *
}ii 
catchjj 
(jj 
IOExceptionjj 
exceptIOjj '
)jj' (
{kk 
IOll 
.ll 
Loggerll 
.ll 
Logll 
(ll 
NLogll "
.ll" #
LogLevelll# +
.ll+ ,
Warnll, 0
,ll0 1
exceptIOll2 :
,ll: ;
$strll< W
)llW X
;llX Y
}mm 
}nn 	
GoodB2GSinkoo 
(oo 
dataoo 
,oo 
reqoo 
,oo 
respoo  $
)oo% &
;oo& '
}pp 
}rr 
}ss í-
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_42.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_42 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
static 
string 
	BadSource #
(# $
HttpRequest$ /
req0 3
,3 4
HttpResponse5 A
respB F
)F G
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
return// 
data// 
;// 
}00 
public22 

override22 
void22 
Bad22 
(22 
HttpRequest22 (
req22) ,
,22, -
HttpResponse22. :
resp22; ?
)22? @
{33 
string44 
data44 
=44 
	BadSource44 
(44  
req44  #
,44# $
resp44% )
)44) *
;44* +
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
resp88 
.88 
	AddHeader88 
(88 
$str88 %
,88% &
$str88' :
+88; <
data88= A
)88A B
;88B C
}99 	
}:: 
private>> 
static>> 
string>> 
GoodG2BSource>> '
(>>' (
HttpRequest>>( 3
req>>4 7
,>>7 8
HttpResponse>>9 E
resp>>F J
)>>J K
{?? 
string@@ 
data@@ 
;@@ 
dataBB 
=BB 
$strBB 
;BB 
returnCC 
dataCC 
;CC 
}DD 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
HttpRequestFF  +
reqFF, /
,FF/ 0
HttpResponseFF1 =
respFF> B
)FFB C
{GG 
stringHH 
dataHH 
=HH 
GoodG2BSourceHH #
(HH# $
reqHH$ '
,HH' (
respHH) -
)HH- .
;HH. /
ifII 

(II 
dataII 
!=II 
nullII 
)II 
{JJ 	
respLL 
.LL 
	AddHeaderLL 
(LL 
$strLL %
,LL% &
$strLL' :
+LL; <
dataLL= A
)LLA B
;LLB C
}MM 	
}NN 
privateQQ 
staticQQ 
stringQQ 
GoodB2GSourceQQ '
(QQ' (
HttpRequestQQ( 3
reqQQ4 7
,QQ7 8
HttpResponseQQ9 E
respQQF J
)QQJ K
{RR 
stringSS 
dataSS 
;SS 
dataTT 
=TT 
$strTT 
;TT 
{UU 	
tryWW 
{XX 
dataZZ 
=ZZ 
ConsoleZZ 
.ZZ 
ReadLineZZ '
(ZZ' (
)ZZ( )
;ZZ) *
}[[ 
catch\\ 
(\\ 
IOException\\ 
exceptIO\\ '
)\\' (
{]] 
IO^^ 
.^^ 
Logger^^ 
.^^ 
Log^^ 
(^^ 
NLog^^ "
.^^" #
LogLevel^^# +
.^^+ ,
Warn^^, 0
,^^0 1
exceptIO^^2 :
,^^: ;
$str^^< W
)^^W X
;^^X Y
}__ 
}`` 	
returnaa 
dataaa 
;aa 
}bb 
privatedd 
staticdd 
voiddd 
GoodB2Gdd 
(dd  
HttpRequestdd  +
reqdd, /
,dd/ 0
HttpResponsedd1 =
respdd> B
)ddB C
{ee 
stringff 
dataff 
=ff 
GoodB2GSourceff #
(ff# $
reqff$ '
,ff' (
respff) -
)ff- .
;ff. /
ifgg 

(gg 
datagg 
!=gg 
nullgg 
)gg 
{hh 	
datajj 
=jj 
HttpUtilityjj 
.jj 
	UrlEncodejj (
(jj( )
datajj) -
,jj- .
Encodingjj/ 7
.jj7 8
UTF8jj8 <
)jj< =
;jj= >
respkk 
.kk 
	AddHeaderkk 
(kk 
$strkk %
,kk% &
$strkk' :
+kk; <
datakk= A
)kkA B
;kkB C
}ll 	
}mm 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
HttpRequestoo )
reqoo* -
,oo- .
HttpResponseoo/ ;
respoo< @
)oo@ A
{pp 
GoodG2Bqq 
(qq 
reqqq 
,qq 
respqq 
)qq 
;qq 
GoodB2Grr 
(rr 
reqrr 
,rr 
resprr 
)rr 
;rr 
}ss 
}uu 
}vv 0
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_45.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class E
9CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_45 ?
:@ A
AbstractTestCaseWebB U
{ 
private 
string 
dataBad 
; 
private   
string   
dataGoodG2B   
;   
private!! 
string!! 
dataGoodB2G!! 
;!! 
private## 
void## 
BadSink## 
(## 
HttpRequest## $
req##% (
,##( )
HttpResponse##* 6
resp##7 ;
)##; <
{$$ 
string%% 
data%% 
=%% 
dataBad%% 
;%% 
if&& 

(&& 
data&& 
!=&& 
null&& 
)&& 
{'' 	
resp)) 
.)) 
	AddHeader)) 
()) 
$str)) %
,))% &
$str))' :
+)); <
data))= A
)))A B
;))B C
}** 	
}++ 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
data00 
=00 
$str00 
;00 
{11 	
try33 
{44 
data66 
=66 
Console66 
.66 
ReadLine66 '
(66' (
)66( )
;66) *
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	
dataBad== 
=== 
data== 
;== 
BadSink>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
}?? 
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
HttpRequestBB )
reqBB* -
,BB- .
HttpResponseBB/ ;
respBB< @
)BB@ A
{CC 
GoodG2BDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
GoodB2GEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
}FF 
privateHH 
voidHH 
GoodG2BSinkHH 
(HH 
HttpRequestHH (
reqHH) ,
,HH, -
HttpResponseHH. :
respHH; ?
)HH? @
{II 
stringJJ 
dataJJ 
=JJ 
dataGoodG2BJJ !
;JJ! "
ifKK 

(KK 
dataKK 
!=KK 
nullKK 
)KK 
{LL 	
respNN 
.NN 
	AddHeaderNN 
(NN 
$strNN %
,NN% &
$strNN' :
+NN; <
dataNN= A
)NNA B
;NNB C
}OO 	
}PP 
privateSS 
voidSS 
GoodG2BSS 
(SS 
HttpRequestSS $
reqSS% (
,SS( )
HttpResponseSS* 6
respSS7 ;
)SS; <
{TT 
stringUU 
dataUU 
;UU 
dataWW 
=WW 
$strWW 
;WW 
dataGoodG2BXX 
=XX 
dataXX 
;XX 
GoodG2BSinkYY 
(YY 
reqYY 
,YY 
respYY 
)YY 
;YY 
}ZZ 
private\\ 
void\\ 
GoodB2GSink\\ 
(\\ 
HttpRequest\\ (
req\\) ,
,\\, -
HttpResponse\\. :
resp\\; ?
)\\? @
{]] 
string^^ 
data^^ 
=^^ 
dataGoodB2G^^ !
;^^! "
if__ 

(__ 
data__ 
!=__ 
null__ 
)__ 
{`` 	
databb 
=bb 
HttpUtilitybb 
.bb 
	UrlEncodebb (
(bb( )
databb) -
,bb- .
Encodingbb/ 7
.bb7 8
UTF8bb8 <
)bb< =
;bb= >
respcc 
.cc 
	AddHeadercc 
(cc 
$strcc %
,cc% &
$strcc' :
+cc; <
datacc= A
)ccA B
;ccB C
}dd 	
}ee 
privatehh 
voidhh 
GoodB2Ghh 
(hh 
HttpRequesthh $
reqhh% (
,hh( )
HttpResponsehh* 6
resphh7 ;
)hh; <
{ii 
stringjj 
datajj 
;jj 
datakk 
=kk 
$strkk 
;kk 
{ll 	
trynn 
{oo 
dataqq 
=qq 
Consoleqq 
.qq 
ReadLineqq '
(qq' (
)qq( )
;qq) *
}rr 
catchss 
(ss 
IOExceptionss 
exceptIOss '
)ss' (
{tt 
IOuu 
.uu 
Loggeruu 
.uu 
Loguu 
(uu 
NLoguu "
.uu" #
LogLeveluu# +
.uu+ ,
Warnuu, 0
,uu0 1
exceptIOuu2 :
,uu: ;
$struu< W
)uuW X
;uuX Y
}vv 
}ww 	
dataGoodB2Gxx 
=xx 
dataxx 
;xx 
GoodB2GSinkyy 
(yy 
reqyy 
,yy 
respyy 
)yy 
;yy 
}zz 
}|| 
}}} ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_51a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_51a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_51b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//\ ]
;//] ^
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_51b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??` a
;??a b
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_51bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS` a
;SSa b
}TT 
}VV 
}WW ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_51b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_51b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_52c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53d B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53d'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53d-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_53d @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> ô
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54b// B
.//B C
BadSink//C J
(//J K
data//K O
,//P Q
req//R U
,//U V
resp//W [
)//[ \
;//\ ]
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
void:: 
GoodG2B:: 
(:: 
HttpRequest:: $
req::% (
,::( )
HttpResponse::* 6
resp::7 ;
)::; <
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54b?? B
.??B C
GoodG2BSink??C N
(??N O
data??O S
,??T U
req??V Y
,??Y Z
resp??[ _
)??_ `
;??` a
}@@ 
privateCC 
voidCC 
GoodB2GCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
dataSSO S
,SST U
reqSSV Y
,SSY Z
respSS[ _
)SS_ `
;SS` a
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54b @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54c B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54c'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54c-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54c.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54c @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54d B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54d'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54d-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54d.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54d @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54e B
.B C
BadSinkC J
(J K
dataK O
,P Q
reqR U
,U V
respW [
)[ \
;\ ]
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
string%%# )
data%%* .
,%%/ 0
HttpRequest%%1 <
req%%= @
,%%@ A
HttpResponse%%B N
resp%%O S
)%%S T
{&& F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54e'' B
.''B C
GoodG2BSink''C N
(''N O
data''O S
,''T U
req''V Y
,''Y Z
resp''[ _
)''_ `
;''` a
}(( 
public++ 

static++ 
void++ 
GoodB2GSink++ "
(++" #
string++# )
data++* .
,++/ 0
HttpRequest++1 <
req++= @
,++@ A
HttpResponse++B N
resp++O S
)++S T
{,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54e-- B
.--B C
GoodB2GSink--C N
(--N O
data--O S
,--T U
req--V Y
,--Y Z
resp--[ _
)--_ `
;--` a
}.. 
}00 
}11 ¹
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54e.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_54e @
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
data))* .
,))/ 0
HttpRequest))1 <
req))= @
,))@ A
HttpResponse))B N
resp))O S
)))S T
{** 
if++ 

(++ 
data++ 
!=++ 
null++ 
)++ 
{,, 	
resp.. 
... 
	AddHeader.. 
(.. 
$str.. %
,..% &
$str..' :
+..; <
data..= A
)..A B
;..B C
}// 	
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
string33# )
data33* .
,33/ 0
HttpRequest331 <
req33= @
,33@ A
HttpResponse33B N
resp33O S
)33S T
{44 
if55 

(55 
data55 
!=55 
null55 
)55 
{66 	
data88 
=88 
HttpUtility88 
.88 
	UrlEncode88 (
(88( )
data88) -
,88- .
Encoding88/ 7
.887 8
UTF8888 <
)88< =
;88= >
resp99 
.99 
	AddHeader99 
(99 
$str99 %
,99% &
$str99' :
+99; <
data99= A
)99A B
;99B C
}:: 	
};; 
}== 
}>> §
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_61a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_61a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string 
data 
= F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_61b P
.P Q
	BadSourceQ Z
(Z [
req[ ^
,^ _
resp` d
)d e
;e f
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
HttpRequest(( )
req((* -
,((- .
HttpResponse((/ ;
resp((< @
)((@ A
{)) 
GoodG2B** 
(** 
req** 
,** 
resp** 
)** 
;** 
GoodB2G++ 
(++ 
req++ 
,++ 
resp++ 
)++ 
;++ 
},, 
private// 
static// 
void// 
GoodG2B// 
(//  
HttpRequest//  +
req//, /
,/// 0
HttpResponse//1 =
resp//> B
)//B C
{00 
string11 
data11 
=11 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_61b11 P
.11P Q
GoodG2BSource11Q ^
(11^ _
req11_ b
,11b c
resp11d h
)11h i
;11i j
if22 

(22 
data22 
!=22 
null22 
)22 
{33 	
resp55 
.55 
	AddHeader55 
(55 
$str55 %
,55% &
$str55' :
+55; <
data55= A
)55A B
;55B C
}66 	
}77 
private:: 
static:: 
void:: 
GoodB2G:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
=<< F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_61b<< P
.<<P Q
GoodB2GSource<<Q ^
(<<^ _
req<<_ b
,<<b c
resp<<d h
)<<h i
;<<i j
if== 

(== 
data== 
!=== 
null== 
)== 
{>> 	
data@@ 
=@@ 
HttpUtility@@ 
.@@ 
	UrlEncode@@ (
(@@( )
data@@) -
,@@- .
Encoding@@/ 7
.@@7 8
UTF8@@8 <
)@@< =
;@@= >
respAA 
.AA 
	AddHeaderAA 
(AA 
$strAA %
,AA% &
$strAA' :
+AA; <
dataAA= A
)AAA B
;AAB C
}BB 	
}CC 
}EE 
}FF ü
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_61b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_61b @
{ 
public 

static 
string 
	BadSource "
(" #
HttpRequest# .
req/ 2
,2 3
HttpResponse4 @
respA E
)E F
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
return// 
data// 
;// 
}00 
public55 

static55 
string55 
GoodG2BSource55 &
(55& '
HttpRequest55' 2
req553 6
,556 7
HttpResponse558 D
resp55E I
)55I J
{66 
string77 
data77 
;77 
data99 
=99 
$str99 
;99 
return:: 
data:: 
;:: 
};; 
public>> 

static>> 
string>> 
GoodB2GSource>> &
(>>& '
HttpRequest>>' 2
req>>3 6
,>>6 7
HttpResponse>>8 D
resp>>E I
)>>I J
{?? 
string@@ 
data@@ 
;@@ 
dataAA 
=AA 
$strAA 
;AA 
{BB 	
tryDD 
{EE 
dataGG 
=GG 
ConsoleGG 
.GG 
ReadLineGG '
(GG' (
)GG( )
;GG) *
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR Ä&
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_66a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_66a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	
string// 
[// 
]// 
	dataArray// 
=// 
new//  
string//! '
[//' (
$num//( )
]//) *
;//* +
	dataArray00 
[00 
$num00 
]00 
=00 
data00 
;00 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_66b11 B
.11B C
BadSink11C J
(11J K
	dataArray11K T
,11U V
req11W Z
,11Z [
resp11\ `
)11a b
;11b c
}22 
public55 

override55 
void55 
Good55 
(55 
HttpRequest55 )
req55* -
,55- .
HttpResponse55/ ;
resp55< @
)55@ A
{66 
GoodG2B77 
(77 
req77 
,77 
resp77 
)77 
;77 
GoodB2G88 
(88 
req88 
,88 
resp88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
HttpRequest<<  +
req<<, /
,<</ 0
HttpResponse<<1 =
resp<<> B
)<<B C
{== 
string>> 
data>> 
;>> 
data@@ 
=@@ 
$str@@ 
;@@ 
stringAA 
[AA 
]AA 
	dataArrayAA 
=AA 
newAA  
stringAA! '
[AA' (
$numAA( )
]AA) *
;AA* +
	dataArrayBB 
[BB 
$numBB 
]BB 
=BB 
dataBB 
;BB F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_66bCC B
.CCB C
GoodG2BSinkCCC N
(CCN O
	dataArrayCCO X
,CCY Z
reqCC[ ^
,CC^ _
respCC` d
)CCe f
;CCf g
}DD 
privateGG 
staticGG 
voidGG 
GoodB2GGG 
(GG  
HttpRequestGG  +
reqGG, /
,GG/ 0
HttpResponseGG1 =
respGG> B
)GGB C
{HH 
stringII 
dataII 
;II 
dataJJ 
=JJ 
$strJJ 
;JJ 
{KK 	
tryMM 
{NN 
dataPP 
=PP 
ConsolePP 
.PP 
ReadLinePP '
(PP' (
)PP( )
;PP) *
}QQ 
catchRR 
(RR 
IOExceptionRR 
exceptIORR '
)RR' (
{SS 
IOTT 
.TT 
LoggerTT 
.TT 
LogTT 
(TT 
NLogTT "
.TT" #
LogLevelTT# +
.TT+ ,
WarnTT, 0
,TT0 1
exceptIOTT2 :
,TT: ;
$strTT< W
)TTW X
;TTX Y
}UU 
}VV 	
stringWW 
[WW 
]WW 
	dataArrayWW 
=WW 
newWW  
stringWW! '
[WW' (
$numWW( )
]WW) *
;WW* +
	dataArrayXX 
[XX 
$numXX 
]XX 
=XX 
dataXX 
;XX F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_66bYY B
.YYB C
GoodB2GSinkYYC N
(YYN O
	dataArrayYYO X
,YYY Z
reqYY[ ^
,YY^ _
respYY` d
)YYe f
;YYf g
}ZZ 
}\\ 
}]] Ã
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_66b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_66b @
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string 
data 
= 
	dataArray 
[  
$num  !
]! "
;" #
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
string**# )
[**) *
]*** +
	dataArray**, 5
,**6 7
HttpRequest**8 C
req**D G
,**G H
HttpResponse**I U
resp**V Z
)**Z [
{++ 
string,, 
data,, 
=,, 
	dataArray,, 
[,,  
$num,,  !
],,! "
;,," #
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
string55# )
[55) *
]55* +
	dataArray55, 5
,556 7
HttpRequest558 C
req55D G
,55G H
HttpResponse55I U
resp55V Z
)55Z [
{66 
string77 
data77 
=77 
	dataArray77 
[77  
$num77  !
]77! "
;77" #
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA '
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67a @
:A B
AbstractTestCaseWebC V
{ 
public 

class 
	Container 
{   
public!! 
string!! 
containerOne!! "
;!!" #
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
HttpRequest$$ (
req$$) ,
,$$, -
HttpResponse$$. :
resp$$; ?
)$$? @
{%% 
string&& 
data&& 
;&& 
data'' 
='' 
$str'' 
;'' 
{(( 	
try** 
{++ 
data-- 
=-- 
Console-- 
.-- 
ReadLine-- '
(--' (
)--( )
;--) *
}.. 
catch// 
(// 
IOException// 
exceptIO// '
)//' (
{00 
IO11 
.11 
Logger11 
.11 
Log11 
(11 
NLog11 "
.11" #
LogLevel11# +
.11+ ,
Warn11, 0
,110 1
exceptIO112 :
,11: ;
$str11< W
)11W X
;11X Y
}22 
}33 	
	Container44 
dataContainer44 
=44  !
new44" %
	Container44& /
(44/ 0
)440 1
;441 2
dataContainer55 
.55 
containerOne55 "
=55# $
data55% )
;55) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67b66 B
.66B C
BadSink66C J
(66J K
dataContainer66K X
,66Y Z
req66[ ^
,66^ _
resp66` d
)66e f
;66f g
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
HttpRequest:: )
req::* -
,::- .
HttpResponse::/ ;
resp::< @
)::@ A
{;; 
GoodG2B<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
GoodB2G== 
(== 
req== 
,== 
resp== 
)== 
;== 
}>> 
privateAA 
staticAA 
voidAA 
GoodG2BAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
stringCC 
dataCC 
;CC 
dataEE 
=EE 
$strEE 
;EE 
	ContainerFF 
dataContainerFF 
=FF  !
newFF" %
	ContainerFF& /
(FF/ 0
)FF0 1
;FF1 2
dataContainerGG 
.GG 
containerOneGG "
=GG# $
dataGG% )
;GG) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataContainerHHO \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	
	Container\\ 
dataContainer\\ 
=\\  !
new\\" %
	Container\\& /
(\\/ 0
)\\0 1
;\\1 2
dataContainer]] 
.]] 
containerOne]] "
=]]# $
data]]% )
;]]) *F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67b^^ B
.^^B C
GoodB2GSink^^C N
(^^N O
dataContainer^^O \
,^^] ^
req^^_ b
,^^b c
resp^^d h
)^^i j
;^^j k
}__ 
}aa 
}bb 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67a Y
.Y Z
	ContainerZ c
dataContainerd q
,r s
HttpRequestt 
req
 
,
 
HttpResponse
 
resp
 
)
 
{ 
string 
data 
= 
dataContainer #
.# $
containerOne$ 0
;0 1
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67a**# ]
.**] ^
	Container**^ g
dataContainer**h u
,**v w
HttpRequest	**x 
req
** 
,
** 
HttpResponse
** 
resp
** 
)
** 
{++ 
string,, 
data,, 
=,, 
dataContainer,, #
.,,# $
containerOne,,$ 0
;,,0 1
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_67a55# ]
.55] ^
	Container55^ g
dataContainer55h u
,55v w
HttpRequest	55x 
req
55 
,
55 
HttpResponse
55 
resp
55 
)
55 
{66 
string77 
data77 
=77 
dataContainer77 #
.77# $
containerOne77$ 0
;770 1
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ÷
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68a @
:A B
AbstractTestCaseWebC V
{ 
public 

static 
string 
data 
; 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68b00 B
.00B C
BadSink00C J
(00J K
req00K N
,00N O
resp00P T
)00T U
;00U V
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
static;; 
void;; 
GoodG2B;; 
(;;  
HttpRequest;;  +
req;;, /
,;;/ 0
HttpResponse;;1 =
resp;;> B
);;B C
{<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68b?? B
.??B C
GoodG2BSink??C N
(??N O
req??O R
,??R S
resp??T X
)??X Y
;??Y Z
}@@ 
privateCC 
staticCC 
voidCC 
GoodB2GCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
dataEE 
=EE 
$strEE 
;EE 
{FF 	
tryHH 
{II 
dataKK 
=KK 
ConsoleKK 
.KK 
ReadLineKK '
(KK' (
)KK( )
;KK) *
}LL 
catchMM 
(MM 
IOExceptionMM 
exceptIOMM '
)MM' (
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
exceptIOOO2 :
,OO: ;
$strOO< W
)OOW X
;OOX Y
}PP 
}QQ 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68bRR B
.RRB C
GoodB2GSinkRRC N
(RRN O
reqRRO R
,RRR S
respRRT X
)RRX Y
;RRY Z
}SS 
}UU 
}VV ¡
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68b @
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string 
data 
= F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68a P
.P Q
dataQ U
;U V
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
HttpRequest**# .
req**/ 2
,**2 3
HttpResponse**4 @
resp**A E
)**E F
{++ 
string,, 
data,, 
=,, F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68a,, P
.,,P Q
data,,Q U
;,,U V
if-- 

(-- 
data-- 
!=-- 
null-- 
)-- 
{.. 	
resp00 
.00 
	AddHeader00 
(00 
$str00 %
,00% &
$str00' :
+00; <
data00= A
)00A B
;00B C
}11 	
}22 
public55 

static55 
void55 
GoodB2GSink55 "
(55" #
HttpRequest55# .
req55/ 2
,552 3
HttpResponse554 @
resp55A E
)55E F
{66 
string77 
data77 
=77 F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_68a77 P
.77P Q
data77Q U
;77U V
if88 

(88 
data88 
!=88 
null88 
)88 
{99 	
data;; 
=;; 
HttpUtility;; 
.;; 
	UrlEncode;; (
(;;( )
data;;) -
,;;- .
Encoding;;/ 7
.;;7 8
UTF8;;8 <
);;< =
;;;= >
resp<< 
.<< 
	AddHeader<< 
(<< 
$str<< %
,<<% &
$str<<' :
+<<; <
data<<= A
)<<A B
;<<B C
}== 	
}>> 
}@@ 
}AA ² 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_71a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_71a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_71b// B
.//B C
BadSink//C J
(//J K
(//K L
Object//L R
)//R S
data//S W
,//X Y
req//Z ]
,//] ^
resp//_ c
)//d e
;//e f
}00 
public33 

override33 
void33 
Good33 
(33 
HttpRequest33 )
req33* -
,33- .
HttpResponse33/ ;
resp33< @
)33@ A
{44 
GoodG2B55 
(55 
req55 
,55 
resp55 
)55 
;55 
GoodB2G66 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
HttpRequest::  +
req::, /
,::/ 0
HttpResponse::1 =
resp::> B
)::B C
{;; 
string<< 
data<< 
;<< 
data>> 
=>> 
$str>> 
;>> F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_71b?? B
.??B C
GoodG2BSink??C N
(??N O
(??O P
Object??P V
)??V W
data??W [
,??\ ]
req??^ a
,??a b
resp??c g
)??h i
;??i j
}@@ 
privateCC 
staticCC 
voidCC 
GoodB2GCC 
(CC  
HttpRequestCC  +
reqCC, /
,CC/ 0
HttpResponseCC1 =
respCC> B
)CCB C
{DD 
stringEE 
dataEE 
;EE 
dataFF 
=FF 
$strFF 
;FF 
{GG 	
tryII 
{JJ 
dataLL 
=LL 
ConsoleLL 
.LL 
ReadLineLL '
(LL' (
)LL( )
;LL) *
}MM 
catchNN 
(NN 
IOExceptionNN 
exceptIONN '
)NN' (
{OO 
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP "
.PP" #
LogLevelPP# +
.PP+ ,
WarnPP, 0
,PP0 1
exceptIOPP2 :
,PP: ;
$strPP< W
)PPW X
;PPX Y
}QQ 
}RR 	F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_71bSS B
.SSB C
GoodB2GSinkSSC N
(SSN O
(SSO P
ObjectSSP V
)SSV W
dataSSW [
,SS\ ]
reqSS^ a
,SSa b
respSSc g
)SSh i
;SSi j
}TT 
}VV 
}WW õ
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_71b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{ 
string   
data   
=   
(   
string   
)   

dataObject   (
;  ( )
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
Object++# )

dataObject++* 4
,++5 6
HttpRequest++7 B
req++C F
,++F G
HttpResponse++H T
resp++U Y
)++Y Z
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 

dataObject-- (
;--( )
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
Object66# )

dataObject66* 4
,665 6
HttpRequest667 B
req66C F
,66F G
HttpResponse66H T
resp66U Y
)66Y Z
{77 
string88 
data88 
=88 
(88 
string88 
)88 

dataObject88 (
;88( )
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ¢.
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_72a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_72a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	
	Hashtable00 
dataHashtable00 
=00  !
new00" %
	Hashtable00& /
(00/ 0
$num000 1
)001 2
;002 3
dataHashtable11 
.11 
Add11 
(11 
$num11 
,11 
data11 !
)11! "
;11" #
dataHashtable22 
.22 
Add22 
(22 
$num22 
,22 
data22 !
)22! "
;22" #
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_72b44 B
.44B C
BadSink44C J
(44J K
dataHashtable44K X
,44Y Z
req44[ ^
,44^ _
resp44` d
)44e f
;44f g
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 
	HashtableDD 
dataHashtableDD 
=DD  !
newDD" %
	HashtableDD& /
(DD/ 0
$numDD0 1
)DD1 2
;DD2 3
dataHashtableEE 
.EE 
AddEE 
(EE 
$numEE 
,EE 
dataEE !
)EE! "
;EE" #
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_72bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataHashtableHHO \
,HH] ^
reqHH_ b
,HHb c
respHHd h
)HHi j
;HHj k
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	
	Hashtable\\ 
dataHashtable\\ 
=\\  !
new\\" %
	Hashtable\\& /
(\\/ 0
$num\\0 1
)\\1 2
;\\2 3
dataHashtable]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] !
)]]! "
;]]" #
dataHashtable^^ 
.^^ 
Add^^ 
(^^ 
$num^^ 
,^^ 
data^^ !
)^^! "
;^^" #
dataHashtable__ 
.__ 
Add__ 
(__ 
$num__ 
,__ 
data__ !
)__! "
;__" #F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_72b`` B
.``B C
GoodB2GSink``C N
(``N O
dataHashtable``O \
,``] ^
req``_ b
,``b c
resp``d h
)``i j
;``j k
}aa 
}cc 
}dd  
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_72b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{ 
string   
data   
=   
(   
string   
)   
dataHashtable   ,
[  , -
$num  - .
]  . /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #
	Hashtable++# ,
dataHashtable++- :
,++; <
HttpRequest++= H
req++I L
,++L M
HttpResponse++N Z
resp++[ _
)++_ `
{,, 
string-- 
data-- 
=-- 
(-- 
string-- 
)-- 
dataHashtable-- ,
[--, -
$num--- .
]--. /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #
	Hashtable66# ,
dataHashtable66- :
,66; <
HttpRequest66= H
req66I L
,66L M
HttpResponse66N Z
resp66[ _
)66_ `
{77 
string88 
data88 
=88 
(88 
string88 
)88 
dataHashtable88 ,
[88, -
$num88- .
]88. /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB ¨.
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_73a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_73a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	

LinkedList00 
<00 
string00 
>00 
dataLinkedList00 )
=00* +
new00, /

LinkedList000 :
<00: ;
string00; A
>00A B
(00B C
)00C D
;00D E
dataLinkedList11 
.11 
AddLast11 
(11 
data11 #
)11# $
;11$ %
dataLinkedList22 
.22 
AddLast22 
(22 
data22 #
)22# $
;22$ %
dataLinkedList33 
.33 
AddLast33 
(33 
data33 #
)33# $
;33$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_73b44 B
.44B C
BadSink44C J
(44J K
dataLinkedList44K Y
,44Z [
req44\ _
,44_ `
resp44a e
)44f g
;44g h
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 

LinkedListDD 
<DD 
stringDD 
>DD 
dataLinkedListDD )
=DD* +
newDD, /

LinkedListDD0 :
<DD: ;
stringDD; A
>DDA B
(DDB C
)DDC D
;DDD E
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %
dataLinkedListFF 
.FF 
AddLastFF 
(FF 
dataFF #
)FF# $
;FF$ %
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_73bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataLinkedListHHO ]
,HH^ _
reqHH` c
,HHc d
respHHe i
)HHj k
;HHk l
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	

LinkedList\\ 
<\\ 
string\\ 
>\\ 
dataLinkedList\\ )
=\\* +
new\\, /

LinkedList\\0 :
<\\: ;
string\\; A
>\\A B
(\\B C
)\\C D
;\\D E
dataLinkedList]] 
.]] 
AddLast]] 
(]] 
data]] #
)]]# $
;]]$ %
dataLinkedList^^ 
.^^ 
AddLast^^ 
(^^ 
data^^ #
)^^# $
;^^$ %
dataLinkedList__ 
.__ 
AddLast__ 
(__ 
data__ #
)__# $
;__$ %F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_73b`` B
.``B C
GoodB2GSink``C N
(``N O
dataLinkedList``O ]
,``^ _
req``` c
,``c d
resp``e i
)``j k
;``k l
}aa 
}cc 
}dd â
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_73b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{ 
string   
data   
=   
dataLinkedList   $
.  $ %
Last  % )
.  ) *
Value  * /
;  / 0
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ "
(++" #

LinkedList++# -
<++- .
string++. 4
>++4 5
dataLinkedList++6 D
,++E F
HttpRequest++G R
req++S V
,++V W
HttpResponse++X d
resp++e i
)++i j
{,, 
string-- 
data-- 
=-- 
dataLinkedList-- $
.--$ %
Last--% )
.--) *
Value--* /
;--/ 0
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

LinkedList66# -
<66- .
string66. 4
>664 5
dataLinkedList666 D
,66E F
HttpRequest66G R
req66S V
,66V W
HttpResponse66X d
resp66e i
)66i j
{77 
string88 
data88 
=88 
dataLinkedList88 $
.88$ %
Last88% )
.88) *
Value88* /
;88/ 0
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB í1
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_74a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_74a @
:A B
AbstractTestCaseWebC V
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
data## 
=## 
$str## 
;## 
{$$ 	
try&& 
{'' 
data)) 
=)) 
Console)) 
.)) 
ReadLine)) '
())' (
)))( )
;))) *
}** 
catch++ 
(++ 
IOException++ 
exceptIO++ '
)++' (
{,, 
IO-- 
.-- 
Logger-- 
.-- 
Log-- 
(-- 
NLog-- "
.--" #
LogLevel--# +
.--+ ,
Warn--, 0
,--0 1
exceptIO--2 :
,--: ;
$str--< W
)--W X
;--X Y
}.. 
}// 	

Dictionary00 
<00 
int00 
,00 
string00 
>00 
dataDictionary00 -
=00. /
new000 3

Dictionary004 >
<00> ?
int00? B
,00B C
string00C I
>00I J
(00J K
)00K L
;00L M
dataDictionary11 
.11 
Add11 
(11 
$num11 
,11 
data11 "
)11" #
;11# $
dataDictionary22 
.22 
Add22 
(22 
$num22 
,22 
data22 "
)22" #
;22# $
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_74b44 B
.44B C
BadSink44C J
(44J K
dataDictionary44K Y
,44Z [
req44\ _
,44_ `
resp44a e
)44f g
;44g h
}55 
public88 

override88 
void88 
Good88 
(88 
HttpRequest88 )
req88* -
,88- .
HttpResponse88/ ;
resp88< @
)88@ A
{99 
GoodG2B:: 
(:: 
req:: 
,:: 
resp:: 
):: 
;:: 
GoodB2G;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
HttpRequest??  +
req??, /
,??/ 0
HttpResponse??1 =
resp??> B
)??B C
{@@ 
stringAA 
dataAA 
;AA 
dataCC 
=CC 
$strCC 
;CC 

DictionaryDD 
<DD 
intDD 
,DD 
stringDD 
>DD 
dataDictionaryDD -
=DD. /
newDD0 3

DictionaryDD4 >
<DD> ?
intDD? B
,DDB C
stringDDC I
>DDI J
(DDJ K
)DDK L
;DDL M
dataDictionaryEE 
.EE 
AddEE 
(EE 
$numEE 
,EE 
dataEE "
)EE" #
;EE# $
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_74bHH B
.HHB C
GoodG2BSinkHHC N
(HHN O
dataDictionaryHHO ]
,HH^ _
reqHH` c
,HHc d
respHHe i
)HHj k
;HHk l
}II 
privateLL 
staticLL 
voidLL 
GoodB2GLL 
(LL  
HttpRequestLL  +
reqLL, /
,LL/ 0
HttpResponseLL1 =
respLL> B
)LLB C
{MM 
stringNN 
dataNN 
;NN 
dataOO 
=OO 
$strOO 
;OO 
{PP 	
tryRR 
{SS 
dataUU 
=UU 
ConsoleUU 
.UU 
ReadLineUU '
(UU' (
)UU( )
;UU) *
}VV 
catchWW 
(WW 
IOExceptionWW 
exceptIOWW '
)WW' (
{XX 
IOYY 
.YY 
LoggerYY 
.YY 
LogYY 
(YY 
NLogYY "
.YY" #
LogLevelYY# +
.YY+ ,
WarnYY, 0
,YY0 1
exceptIOYY2 :
,YY: ;
$strYY< W
)YYW X
;YYX Y
}ZZ 
}[[ 	

Dictionary\\ 
<\\ 
int\\ 
,\\ 
string\\ 
>\\ 
dataDictionary\\ -
=\\. /
new\\0 3

Dictionary\\4 >
<\\> ?
int\\? B
,\\B C
string\\C I
>\\I J
(\\J K
)\\K L
;\\L M
dataDictionary]] 
.]] 
Add]] 
(]] 
$num]] 
,]] 
data]] "
)]]" #
;]]# $
dataDictionary^^ 
.^^ 
Add^^ 
(^^ 
$num^^ 
,^^ 
data^^ "
)^^" #
;^^# $
dataDictionary__ 
.__ 
Add__ 
(__ 
$num__ 
,__ 
data__ "
)__" #
;__# $F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_74b`` B
.``B C
GoodB2GSink``C N
(``N O
dataDictionary``O ]
,``^ _
req``` c
,``c d
resp``e i
)``j k
;``k l
}aa 
}cc 
}dd 
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_74b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{ 
string   
data   
=   
dataDictionary   $
[  $ %
$num  % &
]  & '
;  ' (
if!! 

(!! 
data!! 
!=!! 
null!! 
)!! 
{"" 	
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
public++ 

static++ 
void++ 
GoodG2BSink++ #
(++# $

Dictionary++$ .
<++. /
int++/ 2
,++2 3
string++3 9
>++9 :
dataDictionary++; I
,++J K
HttpRequest++L W
req++X [
,++[ \
HttpResponse++] i
resp++j n
)++n o
{,, 
string-- 
data-- 
=-- 
dataDictionary-- $
[--$ %
$num--% &
]--& '
;--' (
if.. 

(.. 
data.. 
!=.. 
null.. 
).. 
{// 	
resp11 
.11 
	AddHeader11 
(11 
$str11 %
,11% &
$str11' :
+11; <
data11= A
)11A B
;11B C
}22 	
}33 
public66 

static66 
void66 
GoodB2GSink66 "
(66" #

Dictionary66# -
<66- .
int66. 1
,661 2
string662 8
>668 9
dataDictionary66: H
,66I J
HttpRequest66K V
req66W Z
,66Z [
HttpResponse66\ h
resp66i m
)66m n
{77 
string88 
data88 
=88 
dataDictionary88 $
[88$ %
$num88% &
]88& '
;88' (
if99 

(99 
data99 
!=99 
null99 
)99 
{:: 	
data<< 
=<< 
HttpUtility<< 
.<< 
	UrlEncode<< (
(<<( )
data<<) -
,<<- .
Encoding<</ 7
.<<7 8
UTF8<<8 <
)<<< =
;<<= >
resp== 
.== 
	AddHeader== 
(== 
$str== %
,==% &
$str==' :
+==; <
data=== A
)==A B
;==B C
}>> 	
}?? 
}AA 
}BB äB
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_75a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_75a @
:A B
AbstractTestCaseWebC V
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
data$$ 
=$$ 
$str$$ 
;$$ 
{%% 	
try'' 
{(( 
data** 
=** 
Console** 
.** 
ReadLine** '
(**' (
)**( )
;**) *
}++ 
catch,, 
(,, 
IOException,, 
exceptIO,, '
),,' (
{-- 
IO.. 
... 
Logger.. 
... 
Log.. 
(.. 
NLog.. "
..." #
LogLevel..# +
...+ ,
Warn.., 0
,..0 1
exceptIO..2 :
,..: ;
$str..< W
)..W X
;..X Y
}// 
}00 	
byte22 
[22 
]22 
dataSerialized22 
=22 
null22  $
;22$ %
try33 
{44 	
BinaryFormatter55 
bf55 
=55  
new55! $
BinaryFormatter55% 4
(554 5
)555 6
;556 7
using66 
(66 
var66 
ms66 
=66 
new66 
MemoryStream66  ,
(66, -
)66- .
)66. /
{77 
bf88 
.88 
	Serialize88 
(88 
ms88 
,88  
data88! %
)88% &
;88& '
dataSerialized99 
=99  
ms99! #
.99# $
ToArray99$ +
(99+ ,
)99, -
;99- .
}:: F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_75b;; F
.;;F G
BadSink;;G N
(;;N O
dataSerialized;;O ]
,;;^ _
req;;` c
,;;c d
resp;;e i
);;j k
;;;k l
}<< 	
catch== 
(== "
SerializationException== %
exceptSerialize==& 5
)==5 6
{>> 	
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? 
.?? 
LogLevel?? '
.??' (
Warn??( ,
,??, -
$str??. X
,??X Y
exceptSerialize??Z i
)??i j
;??j k
}@@ 	
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
HttpRequestDD )
reqDD* -
,DD- .
HttpResponseDD/ ;
respDD< @
)DD@ A
{EE 
GoodG2BFF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
GoodB2GGG 
(GG 
reqGG 
,GG 
respGG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
HttpRequestKK  +
reqKK, /
,KK/ 0
HttpResponseKK1 =
respKK> B
)KKB C
{LL 
stringMM 
dataMM 
;MM 
dataNN 
=NN 
$strNN 
;NN 
{OO 	
tryQQ 
{RR 
dataTT 
=TT 
ConsoleTT 
.TT 
ReadLineTT '
(TT' (
)TT( )
;TT) *
}UU 
catchVV 
(VV 
IOExceptionVV 
exceptIOVV '
)VV' (
{WW 
IOXX 
.XX 
LoggerXX 
.XX 
LogXX 
(XX 
NLogXX "
.XX" #
LogLevelXX# +
.XX+ ,
WarnXX, 0
,XX0 1
exceptIOXX2 :
,XX: ;
$strXX< W
)XXW X
;XXX Y
}YY 
}ZZ 	
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_75bee F
.eeF G
GoodG2BSinkeeG R
(eeR S
dataSerializedeeS a
,eeb c
reqeed g
,eeg h
respeei m
)een o
;eeo p
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
privatenn 
staticnn 
voidnn 
GoodB2Gnn 
(nn  
HttpRequestnn  +
reqnn, /
,nn/ 0
HttpResponsenn1 =
respnn> B
)nnB C
{oo 
stringpp 
datapp 
;pp 
dataqq 
=qq 
$strqq 
;qq 
{rr 	
trytt 
{uu 
dataww 
=ww 
Consoleww 
.ww 
ReadLineww '
(ww' (
)ww( )
;ww) *
}xx 
catchyy 
(yy 
IOExceptionyy 
exceptIOyy '
)yy' (
{zz 
IO{{ 
.{{ 
Logger{{ 
.{{ 
Log{{ 
({{ 
NLog{{ "
.{{" #
LogLevel{{# +
.{{+ ,
Warn{{, 0
,{{0 1
exceptIO{{2 :
,{{: ;
$str{{< W
){{W X
;{{X Y
}|| 
}}} 	
byte 
[ 
] 
dataSerialized 
= 
null  $
;$ %
try
 
{
 	
BinaryFormatter
 
bf
 
=
  
new
! $
BinaryFormatter
% 4
(
4 5
)
5 6
;
6 7
using
 
(
 
var
 
ms
 
=
 
new
 
MemoryStream
  ,
(
, -
)
- .
)
. /
{
 
bf
 
.
 
	Serialize
 
(
 
ms
 
,
  
data
! %
)
% &
;
& '
dataSerialized
 
=
  
ms
! #
.
# $
ToArray
$ +
(
+ ,
)
, -
;
- .
}
 H
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_75b
 F
.
F G
GoodB2GSink
G R
(
R S
dataSerialized
S a
,
b c
req
d g
,
g h
resp
i m
)
n o
;
o p
}
 	
catch
 
(
 $
SerializationException
 %
exceptSerialize
& 5
)
5 6
{
 	
IO
 
.
 
Logger
 
.
 
Log
 
(
 
NLog
 
.
 
LogLevel
 '
.
' (
Warn
( ,
,
, -
$str
. X
,
X Y
exceptSerialize
Z i
)
i j
;
j k
}
 	
}
 
} 
} ¢8
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_75b.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_75b @
{ 
public   

static   
void   
BadSink   
(   
byte   #
[  # $
]  $ %
dataSerialized  & 4
,  5 6
HttpRequest  7 B
req  C F
,  F G
HttpResponse  H T
resp  U Y
)  Y Z
{!! 
try"" 
{## 	
string$$ 
data$$ 
;$$ 
var%% 
binForm%% 
=%% 
new%% 
BinaryFormatter%% -
(%%- .
)%%. /
;%%/ 0
using&& 
(&& 
var&& 
	memStream&&  
=&&! "
new&&# &
MemoryStream&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
	memStream(( 
.(( 
Write(( 
(((  
dataSerialized((  .
,((. /
$num((0 1
,((1 2
dataSerialized((3 A
.((A B
Length((B H
)((H I
;((I J
	memStream)) 
.)) 
Seek)) 
()) 
$num))  
,))  !

SeekOrigin))" ,
.)), -
Begin))- 2
)))2 3
;))3 4
data** 
=** 
(** 
string** 
)** 
binForm** &
.**& '
Deserialize**' 2
(**2 3
	memStream**3 <
)**< =
;**= >
}++ 
if,, 
(,, 
data,, 
!=,, 
null,, 
),, 
{-- 
resp// 
.// 
	AddHeader// 
(// 
$str// )
,//) *
$str//+ >
+//? @
data//A E
)//E F
;//F G
}00 
}11 	
catch22 
(22 "
SerializationException22 %
exceptSerialize22& 5
)225 6
{33 	
IO44 
.44 
Logger44 
.44 
Log44 
(44 
NLog44 
.44 
LogLevel44 '
.44' (
Warn44( ,
,44, -
$str44. Y
,44Y Z
exceptSerialize44[ j
)44j k
;44k l
}55 	
}66 
public;; 

static;; 
void;; 
GoodG2BSink;; "
(;;" #
byte;;# '
[;;' (
];;( )
dataSerialized;;* 8
,;;9 :
HttpRequest;;; F
req;;G J
,;;J K
HttpResponse;;L X
resp;;Y ]
);;] ^
{<< 
try== 
{>> 	
string?? 
data?? 
;?? 
var@@ 
binForm@@ 
=@@ 
new@@ 
BinaryFormatter@@ -
(@@- .
)@@. /
;@@/ 0
usingAA 
(AA 
varAA 
	memStreamAA  
=AA! "
newAA# &
MemoryStreamAA' 3
(AA3 4
)AA4 5
)AA5 6
{BB 
	memStreamCC 
.CC 
WriteCC 
(CC  
dataSerializedCC  .
,CC. /
$numCC0 1
,CC1 2
dataSerializedCC3 A
.CCA B
LengthCCB H
)CCH I
;CCI J
	memStreamDD 
.DD 
SeekDD 
(DD 
$numDD  
,DD  !

SeekOriginDD" ,
.DD, -
BeginDD- 2
)DD2 3
;DD3 4
dataEE 
=EE 
(EE 
stringEE 
)EE 
binFormEE &
.EE& '
DeserializeEE' 2
(EE2 3
	memStreamEE3 <
)EE< =
;EE= >
}FF 
ifGG 
(GG 
dataGG 
!=GG 
nullGG 
)GG 
{HH 
respJJ 
.JJ 
	AddHeaderJJ 
(JJ 
$strJJ )
,JJ) *
$strJJ+ >
+JJ? @
dataJJA E
)JJE F
;JJF G
}KK 
}LL 	
catchMM 
(MM "
SerializationExceptionMM %
exceptSerializeMM& 5
)MM5 6
{NN 	
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO 
.OO 
LogLevelOO '
.OO' (
WarnOO( ,
,OO, -
$strOO. Y
,OOY Z
exceptSerializeOO[ j
)OOj k
;OOk l
}PP 	
}QQ 
publicTT 

staticTT 
voidTT 
GoodB2GSinkTT "
(TT" #
byteTT# '
[TT' (
]TT( )
dataSerializedTT* 8
,TT9 :
HttpRequestTT; F
reqTTG J
,TTJ K
HttpResponseTTL X
respTTY ]
)TT] ^
{UU 
tryVV 
{WW 	
stringXX 
dataXX 
;XX 
varYY 
binFormYY 
=YY 
newYY 
BinaryFormatterYY -
(YY- .
)YY. /
;YY/ 0
usingZZ 
(ZZ 
varZZ 
	memStreamZZ  
=ZZ! "
newZZ# &
MemoryStreamZZ' 3
(ZZ3 4
)ZZ4 5
)ZZ5 6
{[[ 
	memStream\\ 
.\\ 
Write\\ 
(\\  
dataSerialized\\  .
,\\. /
$num\\0 1
,\\1 2
dataSerialized\\3 A
.\\A B
Length\\B H
)\\H I
;\\I J
	memStream]] 
.]] 
Seek]] 
(]] 
$num]]  
,]]  !

SeekOrigin]]" ,
.]], -
Begin]]- 2
)]]2 3
;]]3 4
data^^ 
=^^ 
(^^ 
string^^ 
)^^ 
binForm^^ &
.^^& '
Deserialize^^' 2
(^^2 3
	memStream^^3 <
)^^< =
;^^= >
}__ 
if`` 
(`` 
data`` 
!=`` 
null`` 
)`` 
{aa 
datacc 
=cc 
HttpUtilitycc "
.cc" #
	UrlEncodecc# ,
(cc, -
datacc- 1
,cc1 2
Encodingcc3 ;
.cc; <
UTF8cc< @
)cc@ A
;ccA B
respdd 
.dd 
	AddHeaderdd 
(dd 
$strdd )
,dd) *
$strdd+ >
+dd? @
dataddA E
)ddE F
;ddF G
}ee 
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. Y
,iiY Z
exceptSerializeii[ j
)iij k
;iik l
}jj 	
}kk 
}mm 
}nn ê#
»C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81a.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class F
:CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81a @
:A B
AbstractTestCaseWebC V
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
string!! 
data!! 
;!! 
data"" 
="" 
$str"" 
;"" 
{## 	
try%% 
{&& 
data(( 
=(( 
Console(( 
.(( 
ReadLine(( '
(((' (
)((( )
;(() *
})) 
catch** 
(** 
IOException** 
exceptIO** '
)**' (
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, 
(,, 
NLog,, "
.,," #
LogLevel,,# +
.,,+ ,
Warn,,, 0
,,,0 1
exceptIO,,2 :
,,,: ;
$str,,< W
),,W X
;,,X Y
}-- 
}.. 	J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_base// F

baseObject//G Q
=//R S
new//T WJ
=CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_bad	//X 
(
// 
)
// 
;
// 

baseObject00 
.00 
Action00 
(00 
data00 
,00  
req00! $
,00$ %
resp00& *
)00* +
;00+ ,
}11 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
GoodG2B66 
(66 
req66 
,66 
resp66 
)66 
;66 
GoodB2G77 
(77 
req77 
,77 
resp77 
)77 
;77 
}88 
private;; 
void;; 
GoodG2B;; 
(;; 
HttpRequest;; $
req;;% (
,;;( )
HttpResponse;;* 6
resp;;7 ;
);;; <
{<< 
string== 
data== 
;== 
data?? 
=?? 
$str?? 
;?? J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_base@@ F

baseObject@@G Q
=@@R S
new@@T WN
ACWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_goodG2B	@@X 
(
@@ 
)
@@ 
;
@@ 

baseObjectAA 
.AA 
ActionAA 
(AA 
dataAA 
,AA  
reqAA! $
,AA$ %
respAA& *
)AA* +
;AA+ ,
}BB 
privateEE 
voidEE 
GoodB2GEE 
(EE 
HttpRequestEE $
reqEE% (
,EE( )
HttpResponseEE* 6
respEE7 ;
)EE; <
{FF 
stringGG 
dataGG 
;GG 
dataHH 
=HH 
$strHH 
;HH 
{II 	
tryKK 
{LL 
dataNN 
=NN 
ConsoleNN 
.NN 
ReadLineNN '
(NN' (
)NN( )
;NN) *
}OO 
catchPP 
(PP 
IOExceptionPP 
exceptIOPP '
)PP' (
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR 
(RR 
NLogRR "
.RR" #
LogLevelRR# +
.RR+ ,
WarnRR, 0
,RR0 1
exceptIORR2 :
,RR: ;
$strRR< W
)RRW X
;RRX Y
}SS 
}TT 	J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_baseUU F

baseObjectUUG Q
=UUR S
newUUT WN
ACWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_goodB2G	UUX 
(
UU 
)
UU 
;
UU 

baseObjectVV 
.VV 
ActionVV 
(VV 
dataVV 
,VV  
reqVV! $
,VV$ %
respVV& *
)VV* +
;VV+ ,
}WW 
}YY 
}ZZ ó
¾C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_bad.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class I
=CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_bad C
:D EK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_base	F 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if 

( 
data 
!= 
null 
) 
{   	
resp"" 
."" 
	AddHeader"" 
("" 
$str"" %
,""% &
$str""' :
+""; <
data""= A
)""A B
;""B C
}## 	
}$$ 
}%% 
}&& ç
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_base.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
abstract 
class	 J
>CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_base M
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} à

ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_goodB2G.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_goodB2G G
:H IK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_base	J 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
data## 
=## 
HttpUtility## 
.## 
	UrlEncode## (
(##( )
data##) -
,##- .
Encoding##/ 7
.##7 8
UTF8##8 <
)##< =
;##= >
resp$$ 
.$$ 
	AddHeader$$ 
($$ 
$str$$ %
,$$% &
$str$$' :
+$$; <
data$$= A
)$$A B
;$$B C
}%% 	
}&& 
}'' 
}(( û
ÂC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_goodG2B.cs
	namespace 	
	testcases
 
. *
CWE113_HTTP_Response_Splitting 2
{ 
class M
ACWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_goodG2B G
:H IK
>CWE113_HTTP_Response_Splitting__Web_ReadLine_setHeader_81_base	J 
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
if   

(   
data   
!=   
null   
)   
{!! 	
resp## 
.## 
	AddHeader## 
(## 
$str## %
,##% &
$str##' :
+##; <
data##= A
)##A B
;##B C
}$$ 	
}%% 
}&& 
}'' ò(
C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\Program.cs
	namespace		 	
	testcases		
 
.		 *
CWE113_HTTP_Response_Splitting		 2
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
}__ 
privateaa 
staticaa	 
voidaa 
RunTestCWE4aa  
(aa  !
)aa! "
{aa# $
}ee 
privategg 
staticgg	 
voidgg 
RunTestCWE5gg  
(gg  !
)gg! "
{gg# $
}kk 
privatemm 
staticmm	 
voidmm 
RunTestCWE6mm  
(mm  !
)mm! "
{mm# $
}qq 
privatess 
staticss	 
voidss 
RunTestCWE7ss  
(ss  !
)ss! "
{ss# $
}ww 
privateyy 
staticyy	 
voidyy 
RunTestCWE8yy  
(yy  !
)yy! "
{yy# $
}}} 
private 
static	 
void 
RunTestCWE9  
(  !
)! "
{# $
}
 
} 
} Ä
C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE113_HTTP_Response_Splitting\s02\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str =
)= >
]> ?
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *