€
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_01.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_01 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
Trace 
. 
Assert 
( 
false 
) 
; 
} 
public!! 

override!! 
void!! 
Good!! 
(!! 
)!! 
{"" 
Good1## 
(## 
)## 
;## 
}$$ 
private&& 
void&& 
Good1&& 
(&& 
)&& 
{'' 
Trace** 
.** 
Assert** 
(** 
true** 
)** 
;** 
}++ 
}-- 
}.. ∆
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_02.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_02 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
true 
) 
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
false'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace00 
.00 
Assert00 
(00 
true00 
)00 
;00 
}11 	
}22 
private55 
void55 
Good255 
(55 
)55 
{66 
if77 

(77 
true77 
)77 
{88 	
Trace;; 
.;; 
Assert;; 
(;; 
true;; 
);; 
;;; 
}<< 	
}== 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
Good1AA 
(AA 
)AA 
;AA 
Good2BB 
(BB 
)BB 
;BB 
}CC 
}EE 
}FF ´
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_03.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_03 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
$num 
== 
$num 
) 
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
$num'' 
!='' 
$num'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace00 
.00 
Assert00 
(00 
true00 
)00 
;00 
}11 	
}22 
private55 
void55 
Good255 
(55 
)55 
{66 
if77 

(77 
$num77 
==77 
$num77 
)77 
{88 	
Trace;; 
.;; 
Assert;; 
(;; 
true;; 
);; 
;;; 
}<< 	
}== 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
Good1AA 
(AA 
)AA 
;AA 
Good2BB 
(BB 
)BB 
;BB 
}CC 
}EE 
}FF Ü
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_04.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_04 *
:+ ,
AbstractTestCase- =
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public   

override   
void   
Bad   
(   
)   
{!! 
if"" 

("" 
PRIVATE_CONST_TRUE"" 
)"" 
{## 	
Trace%% 
.%% 
Assert%% 
(%% 
false%% 
)%% 
;%%  
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
PRIVATE_CONST_FALSE-- 
)--  
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
Trace66 
.66 
Assert66 
(66 
true66 
)66 
;66 
}77 	
}88 
private;; 
void;; 
Good2;; 
(;; 
);; 
{<< 
if== 

(== 
PRIVATE_CONST_TRUE== 
)== 
{>> 	
TraceAA 
.AA 
AssertAA 
(AA 
trueAA 
)AA 
;AA 
}BB 	
}CC 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
Good1GG 
(GG 
)GG 
;GG 
Good2HH 
(HH 
)HH 
;HH 
}II 
}KK 
}LL Ω
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_05.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_05 *
:+ ,
AbstractTestCase- =
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public   

override   
void   
Bad   
(   
)   
{!! 
if"" 

("" 
privateTrue"" 
)"" 
{## 	
Trace%% 
.%% 
Assert%% 
(%% 
false%% 
)%% 
;%%  
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
privateFalse-- 
)-- 
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
Trace66 
.66 
Assert66 
(66 
true66 
)66 
;66 
}77 	
}88 
private;; 
void;; 
Good2;; 
(;; 
);; 
{<< 
if== 

(== 
privateTrue== 
)== 
{>> 	
TraceAA 
.AA 
AssertAA 
(AA 
trueAA 
)AA 
;AA 
}BB 	
}CC 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
Good1GG 
(GG 
)GG 
;GG 
Good2HH 
(HH 
)HH 
;HH 
}II 
}KK 
}LL ﬁ
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_06.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_06 *
:+ ,
AbstractTestCase- =
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public 

override 
void 
Bad 
( 
) 
{   
if!! 

(!! 
PRIVATE_CONST_FIVE!! 
==!! !
$num!!" #
)!!# $
{"" 	
Trace$$ 
.$$ 
Assert$$ 
($$ 
false$$ 
)$$ 
;$$  
}%% 	
}&& 
private** 
void** 
Good1** 
(** 
)** 
{++ 
if,, 

(,, 
PRIVATE_CONST_FIVE,, 
!=,, !
$num,," #
),,# $
{-- 	
IO// 
.// 
	WriteLine// 
(// 
$str// /
)/// 0
;//0 1
}00 	
else11 
{22 	
Trace55 
.55 
Assert55 
(55 
true55 
)55 
;55 
}66 	
}77 
private:: 
void:: 
Good2:: 
(:: 
):: 
{;; 
if<< 

(<< 
PRIVATE_CONST_FIVE<< 
==<< !
$num<<" #
)<<# $
{== 	
Trace@@ 
.@@ 
Assert@@ 
(@@ 
true@@ 
)@@ 
;@@ 
}AA 	
}BB 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
Good1FF 
(FF 
)FF 
;FF 
Good2GG 
(GG 
)GG 
;GG 
}HH 
}JJ 
}KK Ø
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_07.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_07 *
:+ ,
AbstractTestCase- =
{ 
private 
int 
privateFive 
= 
$num 
;  
public 

override 
void 
Bad 
( 
) 
{   
if!! 

(!! 
privateFive!! 
==!! 
$num!! 
)!! 
{"" 	
Trace$$ 
.$$ 
Assert$$ 
($$ 
false$$ 
)$$ 
;$$  
}%% 	
}&& 
private** 
void** 
Good1** 
(** 
)** 
{++ 
if,, 

(,, 
privateFive,, 
!=,, 
$num,, 
),, 
{-- 	
IO// 
.// 
	WriteLine// 
(// 
$str// /
)/// 0
;//0 1
}00 	
else11 
{22 	
Trace55 
.55 
Assert55 
(55 
true55 
)55 
;55 
}66 	
}77 
private:: 
void:: 
Good2:: 
(:: 
):: 
{;; 
if<< 

(<< 
privateFive<< 
==<< 
$num<< 
)<< 
{== 	
Trace@@ 
.@@ 
Assert@@ 
(@@ 
true@@ 
)@@ 
;@@ 
}AA 	
}BB 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
Good1FF 
(FF 
)FF 
;FF 
Good2GG 
(GG 
)GG 
;GG 
}HH 
}JJ 
}KK ‰
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_08.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_08 *
:+ ,
AbstractTestCase- =
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
if)) 

()) 
PrivateReturnsTrue)) 
()) 
)))  
)))  !
{** 	
Trace,, 
.,, 
Assert,, 
(,, 
false,, 
),, 
;,,  
}-- 	
}.. 
private22 
void22 
Good122 
(22 
)22 
{33 
if44 

(44 
PrivateReturnsFalse44 
(44  
)44  !
)44! "
{55 	
IO77 
.77 
	WriteLine77 
(77 
$str77 /
)77/ 0
;770 1
}88 	
else99 
{:: 	
Trace== 
.== 
Assert== 
(== 
true== 
)== 
;== 
}>> 	
}?? 
privateBB 
voidBB 
Good2BB 
(BB 
)BB 
{CC 
ifDD 

(DD 
PrivateReturnsTrueDD 
(DD 
)DD  
)DD  !
{EE 	
TraceHH 
.HH 
AssertHH 
(HH 
trueHH 
)HH 
;HH 
}II 	
}JJ 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
Good1NN 
(NN 
)NN 
;NN 
Good2OO 
(OO 
)OO 
;OO 
}PP 
}RR 
}SS ”
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_09.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_09 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' !
STATIC_READONLY_FALSE'' $
)''$ %
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace00 
.00 
Assert00 
(00 
true00 
)00 
;00 
}11 	
}22 
private55 
void55 
Good255 
(55 
)55 
{66 
if77 

(77 
IO77 
.77  
STATIC_READONLY_TRUE77 #
)77# $
{88 	
Trace;; 
.;; 
Assert;; 
(;; 
true;; 
);; 
;;; 
}<< 	
}== 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
Good1AA 
(AA 
)AA 
;AA 
Good2BB 
(BB 
)BB 
;BB 
}CC 
}EE 
}FF µ
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_10.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_10 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 
staticFalse'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace00 
.00 
Assert00 
(00 
true00 
)00 
;00 
}11 	
}22 
private55 
void55 
Good255 
(55 
)55 
{66 
if77 

(77 
IO77 
.77 

staticTrue77 
)77 
{88 	
Trace;; 
.;; 
Assert;; 
(;; 
true;; 
);; 
;;; 
}<< 	
}== 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
Good1AA 
(AA 
)AA 
;AA 
Good2BB 
(BB 
)BB 
;BB 
}CC 
}EE 
}FF §
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_11.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_11 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 
StaticReturnsFalse'' !
(''! "
)''" #
)''# $
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace00 
.00 
Assert00 
(00 
true00 
)00 
;00 
}11 	
}22 
private55 
void55 
Good255 
(55 
)55 
{66 
if77 

(77 
IO77 
.77 
StaticReturnsTrue77  
(77  !
)77! "
)77" #
{88 	
Trace;; 
.;; 
Assert;; 
(;; 
true;; 
);; 
;;; 
}<< 	
}== 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
Good1AA 
(AA 
)AA 
;AA 
Good2BB 
(BB 
)BB 
;BB 
}CC 
}EE 
}FF É
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_12.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_12 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
else!! 
{"" 	
Trace%% 
.%% 
Assert%% 
(%% 
true%% 
)%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
IO-- 
.-- $
StaticReturnsTrueOrFalse-- '
(--' (
)--( )
)--) *
{.. 	
Trace11 
.11 
Assert11 
(11 
true11 
)11 
;11 
}22 	
else33 
{44 	
Trace77 
.77 
Assert77 
(77 
true77 
)77 
;77 
}88 	
}99 
public;; 

override;; 
void;; 
Good;; 
(;; 
);; 
{<< 
Good1== 
(== 
)== 
;== 
}>> 
}@@ 
}AA ∏
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_13.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_13 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.''  
STATIC_READONLY_FIVE'' #
!=''$ &
$num''' (
)''( )
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace00 
.00 
Assert00 
(00 
true00 
)00 
;00 
}11 	
}22 
private55 
void55 
Good255 
(55 
)55 
{66 
if77 

(77 
IO77 
.77  
STATIC_READONLY_FIVE77 #
==77$ &
$num77' (
)77( )
{88 	
Trace;; 
.;; 
Assert;; 
(;; 
true;; 
);; 
;;; 
}<< 	
}== 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
Good1AA 
(AA 
)AA 
;AA 
Good2BB 
(BB 
)BB 
;BB 
}CC 
}EE 
}FF ö
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_14.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_14 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 

staticFive'' 
!='' 
$num'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace00 
.00 
Assert00 
(00 
true00 
)00 
;00 
}11 	
}22 
private55 
void55 
Good255 
(55 
)55 
{66 
if77 

(77 
IO77 
.77 

staticFive77 
==77 
$num77 
)77 
{88 	
Trace;; 
.;; 
Assert;; 
(;; 
true;; 
);; 
;;; 
}<< 	
}== 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
Good1AA 
(AA 
)AA 
;AA 
Good2BB 
(BB 
)BB 
;BB 
}CC 
}EE 
}FF ‹
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_15.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_15 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
Trace   
.   
Assert   
(   
false   
)   
;    
break!! 
;!! 
default"" 
:"" 
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
$str$$ /
)$$/ 0
;$$0 1
break%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
switch-- 
(-- 
$num-- 
)-- 
{.. 	
case// 
$num// 
:// 
IO11 
.11 
	WriteLine11 
(11 
$str11 /
)11/ 0
;110 1
break22 
;22 
default33 
:33 
Trace66 
.66 
Assert66 
(66 
true66 
)66 
;66 
break77 
;77 
}88 	
}99 
private<< 
void<< 
Good2<< 
(<< 
)<< 
{== 
switch>> 
(>> 
$num>> 
)>> 
{?? 	
case@@ 
$num@@ 
:@@ 
TraceCC 
.CC 
AssertCC 
(CC 
trueCC 
)CC 
;CC 
breakDD 
;DD 
defaultEE 
:EE 
IOGG 
.GG 
	WriteLineGG 
(GG 
$strGG /
)GG/ 0
;GG0 1
breakHH 
;HH 
}II 	
}JJ 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
Good1NN 
(NN 
)NN 
;NN 
Good2OO 
(OO 
)OO 
;OO 
}PP 
}RR 
}SS ·

ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_16.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_16 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
while 
( 
true 
) 
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
break   
;   
}!! 	
}"" 
private&& 
void&& 
Good1&& 
(&& 
)&& 
{'' 
while(( 
((( 
true(( 
)(( 
{)) 	
Trace,, 
.,, 
Assert,, 
(,, 
true,, 
),, 
;,, 
break-- 
;-- 
}.. 	
}// 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
Good133 
(33 
)33 
;33 
}44 
}66 
}77 —
ùC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__false_17.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 0
$CWE617_Reachable_Assertion__false_17 *
:+ ,
AbstractTestCase- =
{ 
public 

override 
void 
Bad 
( 
) 
{ 
for 
( 
int 
j 
= 
$num 
; 
j 
< 
$num 
; 
j 
++ !
)! "
{ 	
Trace 
. 
Assert 
( 
false 
) 
;  
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
for'' 
('' 
int'' 
k'' 
='' 
$num'' 
;'' 
k'' 
<'' 
$num'' 
;'' 
k'' 
++'' !
)''! "
{(( 	
Trace++ 
.++ 
Assert++ 
(++ 
true++ 
)++ 
;++ 
},, 	
}-- 
public// 

override// 
void// 
Good// 
(// 
)// 
{00 
Good111 
(11 
)11 
;11 
}22 
}44 
}55 ‰	
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_01.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_01 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
Trace 
. 
Assert 
( 
$str 
. 
Length 
>  
$num! "
)" #
;# $
} 
public!! 

override!! 
void!! 
Good!! 
(!! 
)!! 
{"" 
Good1## 
(## 
)## 
;## 
}$$ 
private&& 
void&& 
Good1&& 
(&& 
)&& 
{'' 
Trace)) 
.)) 
Assert)) 
()) 
$str)) 
.)) 
Length)) $
>))% &
$num))' (
)))( )
;))) *
}** 
},, 
}-- ì
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_02.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_02 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
true 
) 
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
false'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
}11 
private44 
void44 
Good244 
(44 
)44 
{55 
if66 

(66 
true66 
)66 
{77 	
Trace99 
.99 
Assert99 
(99 
$str99 !
.99! "
Length99" (
>99) *
$num99+ ,
)99, -
;99- .
}:: 	
};; 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
Good1?? 
(?? 
)?? 
;?? 
Good2@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD ¯
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_03.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_03 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
$num 
== 
$num 
) 
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
$num'' 
!='' 
$num'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
}11 
private44 
void44 
Good244 
(44 
)44 
{55 
if66 

(66 
$num66 
==66 
$num66 
)66 
{77 	
Trace99 
.99 
Assert99 
(99 
$str99 !
.99! "
Length99" (
>99) *
$num99+ ,
)99, -
;99- .
}:: 	
};; 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
Good1?? 
(?? 
)?? 
;?? 
Good2@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD ”
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_04.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_04 +
:, -
AbstractTestCase. >
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public   

override   
void   
Bad   
(   
)   
{!! 
if"" 

("" 
PRIVATE_CONST_TRUE"" 
)"" 
{## 	
Trace%% 
.%% 
Assert%% 
(%% 
$str%% 
.%% 
Length%% "
>%%# $
$num%%% &
)%%& '
;%%' (
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
PRIVATE_CONST_FALSE-- 
)--  
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
Trace55 
.55 
Assert55 
(55 
$str55 !
.55! "
Length55" (
>55) *
$num55+ ,
)55, -
;55- .
}66 	
}77 
private:: 
void:: 
Good2:: 
(:: 
):: 
{;; 
if<< 

(<< 
PRIVATE_CONST_TRUE<< 
)<< 
{== 	
Trace?? 
.?? 
Assert?? 
(?? 
$str?? !
.??! "
Length??" (
>??) *
$num??+ ,
)??, -
;??- .
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
Good1EE 
(EE 
)EE 
;EE 
Good2FF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ä
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_05.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_05 +
:, -
AbstractTestCase. >
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public   

override   
void   
Bad   
(   
)   
{!! 
if"" 

("" 
privateTrue"" 
)"" 
{## 	
Trace%% 
.%% 
Assert%% 
(%% 
$str%% 
.%% 
Length%% "
>%%# $
$num%%% &
)%%& '
;%%' (
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
if-- 

(-- 
privateFalse-- 
)-- 
{.. 	
IO00 
.00 
	WriteLine00 
(00 
$str00 /
)00/ 0
;000 1
}11 	
else22 
{33 	
Trace55 
.55 
Assert55 
(55 
$str55 !
.55! "
Length55" (
>55) *
$num55+ ,
)55, -
;55- .
}66 	
}77 
private:: 
void:: 
Good2:: 
(:: 
):: 
{;; 
if<< 

(<< 
privateTrue<< 
)<< 
{== 	
Trace?? 
.?? 
Assert?? 
(?? 
$str?? !
.??! "
Length??" (
>??) *
$num??+ ,
)??, -
;??- .
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
Good1EE 
(EE 
)EE 
;EE 
Good2FF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ´
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_06.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_06 +
:, -
AbstractTestCase. >
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public 

override 
void 
Bad 
( 
) 
{   
if!! 

(!! 
PRIVATE_CONST_FIVE!! 
==!! !
$num!!" #
)!!# $
{"" 	
Trace$$ 
.$$ 
Assert$$ 
($$ 
$str$$ 
.$$ 
Length$$ "
>$$# $
$num$$% &
)$$& '
;$$' (
}%% 	
}&& 
private** 
void** 
Good1** 
(** 
)** 
{++ 
if,, 

(,, 
PRIVATE_CONST_FIVE,, 
!=,, !
$num,," #
),,# $
{-- 	
IO// 
.// 
	WriteLine// 
(// 
$str// /
)/// 0
;//0 1
}00 	
else11 
{22 	
Trace44 
.44 
Assert44 
(44 
$str44 !
.44! "
Length44" (
>44) *
$num44+ ,
)44, -
;44- .
}55 	
}66 
private99 
void99 
Good299 
(99 
)99 
{:: 
if;; 

(;; 
PRIVATE_CONST_FIVE;; 
==;; !
$num;;" #
);;# $
{<< 	
Trace>> 
.>> 
Assert>> 
(>> 
$str>> !
.>>! "
Length>>" (
>>>) *
$num>>+ ,
)>>, -
;>>- .
}?? 	
}@@ 
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
)BB 
{CC 
Good1DD 
(DD 
)DD 
;DD 
Good2EE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ¸
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_07.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_07 +
:, -
AbstractTestCase. >
{ 
private 
int 
privateFive 
= 
$num 
;  
public 

override 
void 
Bad 
( 
) 
{   
if!! 

(!! 
privateFive!! 
==!! 
$num!! 
)!! 
{"" 	
Trace$$ 
.$$ 
Assert$$ 
($$ 
$str$$ 
.$$ 
Length$$ "
>$$# $
$num$$% &
)$$& '
;$$' (
}%% 	
}&& 
private** 
void** 
Good1** 
(** 
)** 
{++ 
if,, 

(,, 
privateFive,, 
!=,, 
$num,, 
),, 
{-- 	
IO// 
.// 
	WriteLine// 
(// 
$str// /
)/// 0
;//0 1
}00 	
else11 
{22 	
Trace44 
.44 
Assert44 
(44 
$str44 !
.44! "
Length44" (
>44) *
$num44+ ,
)44, -
;44- .
}55 	
}66 
private99 
void99 
Good299 
(99 
)99 
{:: 
if;; 

(;; 
privateFive;; 
==;; 
$num;; 
);; 
{<< 	
Trace>> 
.>> 
Assert>> 
(>> 
$str>> !
.>>! "
Length>>" (
>>>) *
$num>>+ ,
)>>, -
;>>- .
}?? 	
}@@ 
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
)BB 
{CC 
Good1DD 
(DD 
)DD 
;DD 
Good2EE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ±
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_08.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_08 +
:, -
AbstractTestCase. >
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
if)) 

()) 
PrivateReturnsTrue)) 
()) 
)))  
)))  !
{** 	
Trace,, 
.,, 
Assert,, 
(,, 
$str,, 
.,, 
Length,, "
>,,# $
$num,,% &
),,& '
;,,' (
}-- 	
}.. 
private22 
void22 
Good122 
(22 
)22 
{33 
if44 

(44 
PrivateReturnsFalse44 
(44  
)44  !
)44! "
{55 	
IO77 
.77 
	WriteLine77 
(77 
$str77 /
)77/ 0
;770 1
}88 	
else99 
{:: 	
Trace<< 
.<< 
Assert<< 
(<< 
$str<< !
.<<! "
Length<<" (
><<) *
$num<<+ ,
)<<, -
;<<- .
}== 	
}>> 
privateAA 
voidAA 
Good2AA 
(AA 
)AA 
{BB 
ifCC 

(CC 
PrivateReturnsTrueCC 
(CC 
)CC  
)CC  !
{DD 	
TraceFF 
.FF 
AssertFF 
(FF 
$strFF !
.FF! "
LengthFF" (
>FF) *
$numFF+ ,
)FF, -
;FF- .
}GG 	
}HH 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
Good1LL 
(LL 
)LL 
;LL 
Good2MM 
(MM 
)MM 
;MM 
}NN 
}PP 
}QQ †
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_09.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_09 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' !
STATIC_READONLY_FALSE'' $
)''$ %
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
}11 
private44 
void44 
Good244 
(44 
)44 
{55 
if66 

(66 
IO66 
.66  
STATIC_READONLY_TRUE66 #
)66# $
{77 	
Trace99 
.99 
Assert99 
(99 
$str99 !
.99! "
Length99" (
>99) *
$num99+ ,
)99, -
;99- .
}:: 	
};; 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
Good1?? 
(?? 
)?? 
;?? 
Good2@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD Ç
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_10.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_10 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 
staticFalse'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
}11 
private44 
void44 
Good244 
(44 
)44 
{55 
if66 

(66 
IO66 
.66 

staticTrue66 
)66 
{77 	
Trace99 
.99 
Assert99 
(99 
$str99 !
.99! "
Length99" (
>99) *
$num99+ ,
)99, -
;99- .
}:: 	
};; 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
Good1?? 
(?? 
)?? 
;?? 
Good2@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD Ò
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_11.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_11 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 
StaticReturnsFalse'' !
(''! "
)''" #
)''# $
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
}11 
private44 
void44 
Good244 
(44 
)44 
{55 
if66 

(66 
IO66 
.66 
StaticReturnsTrue66  
(66  !
)66! "
)66" #
{77 	
Trace99 
.99 
Assert99 
(99 
$str99 !
.99! "
Length99" (
>99) *
$num99+ ,
)99, -
;99- .
}:: 	
};; 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
Good1?? 
(?? 
)?? 
;?? 
Good2@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD î
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_12.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_12 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
else!! 
{"" 	
Trace$$ 
.$$ 
Assert$$ 
($$ 
$str$$ !
.$$! "
Length$$" (
>$$) *
$num$$+ ,
)$$, -
;$$- .
}%% 	
}&& 
private** 
void** 
Good1** 
(** 
)** 
{++ 
if,, 

(,, 
IO,, 
.,, $
StaticReturnsTrueOrFalse,, '
(,,' (
),,( )
),,) *
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
else11 
{22 	
Trace44 
.44 
Assert44 
(44 
$str44 !
.44! "
Length44" (
>44) *
$num44+ ,
)44, -
;44- .
}55 	
}66 
public88 

override88 
void88 
Good88 
(88 
)88 
{99 
Good1:: 
(:: 
):: 
;:: 
};; 
}== 
}>> Ö
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_13.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_13 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.''  
STATIC_READONLY_FIVE'' #
!=''$ &
$num''' (
)''( )
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
}11 
private44 
void44 
Good244 
(44 
)44 
{55 
if66 

(66 
IO66 
.66  
STATIC_READONLY_FIVE66 #
==66$ &
$num66' (
)66( )
{77 	
Trace99 
.99 
Assert99 
(99 
$str99 !
.99! "
Length99" (
>99) *
$num99+ ,
)99, -
;99- .
}:: 	
};; 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
Good1?? 
(?? 
)?? 
;?? 
Good2@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD Á
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_14.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_14 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
if'' 

('' 
IO'' 
.'' 

staticFive'' 
!='' 
$num'' 
)'' 
{(( 	
IO** 
.** 
	WriteLine** 
(** 
$str** /
)**/ 0
;**0 1
}++ 	
else,, 
{-- 	
Trace// 
.// 
Assert// 
(// 
$str// !
.//! "
Length//" (
>//) *
$num//+ ,
)//, -
;//- .
}00 	
}11 
private44 
void44 
Good244 
(44 
)44 
{55 
if66 

(66 
IO66 
.66 

staticFive66 
==66 
$num66 
)66 
{77 	
Trace99 
.99 
Assert99 
(99 
$str99 !
.99! "
Length99" (
>99) *
$num99+ ,
)99, -
;99- .
}:: 	
};; 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
Good1?? 
(?? 
)?? 
;?? 
Good2@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD ©
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_15.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_15 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
Trace   
.   
Assert   
(   
$str   
.   
Length   "
>  # $
$num  % &
)  & '
;  ' (
break!! 
;!! 
default"" 
:"" 
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
$str$$ /
)$$/ 0
;$$0 1
break%% 
;%% 
}&& 	
}'' 
private++ 
void++ 
Good1++ 
(++ 
)++ 
{,, 
switch-- 
(-- 
$num-- 
)-- 
{.. 	
case// 
$num// 
:// 
IO11 
.11 
	WriteLine11 
(11 
$str11 /
)11/ 0
;110 1
break22 
;22 
default33 
:33 
Trace55 
.55 
Assert55 
(55 
$str55 !
.55! "
Length55" (
>55) *
$num55+ ,
)55, -
;55- .
break66 
;66 
}77 	
}88 
private;; 
void;; 
Good2;; 
(;; 
);; 
{<< 
switch== 
(== 
$num== 
)== 
{>> 	
case?? 
$num?? 
:?? 
TraceAA 
.AA 
AssertAA 
(AA 
$strAA !
.AA! "
LengthAA" (
>AA) *
$numAA+ ,
)AA, -
;AA- .
breakBB 
;BB 
defaultCC 
:CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
$strEE /
)EE/ 0
;EE0 1
breakFF 
;FF 
}GG 	
}HH 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
Good1LL 
(LL 
)LL 
;LL 
Good2MM 
(MM 
)MM 
;MM 
}NN 
}PP 
}QQ Í
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_16.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_16 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
while 
( 
true 
) 
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
break   
;   
}!! 	
}"" 
private&& 
void&& 
Good1&& 
(&& 
)&& 
{'' 
while(( 
((( 
true(( 
)(( 
{)) 	
Trace++ 
.++ 
Assert++ 
(++ 
$str++ !
.++! "
Length++" (
>++) *
$num+++ ,
)++, -
;++- .
break,, 
;,, 
}-- 	
}.. 
public00 

override00 
void00 
Good00 
(00 
)00 
{11 
Good122 
(22 
)22 
;22 
}33 
}55 
}66 ⁄
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\CWE617_Reachable_Assertion__length_17.cs
	namespace 	
	testcases
 
. &
CWE617_Reachable_Assertion .
{ 
class 1
%CWE617_Reachable_Assertion__length_17 +
:, -
AbstractTestCase. >
{ 
public 

override 
void 
Bad 
( 
) 
{ 
for 
( 
int 
j 
= 
$num 
; 
j 
< 
$num 
; 
j 
++ !
)! "
{ 	
Trace 
. 
Assert 
( 
$str 
. 
Length "
># $
$num% &
)& '
;' (
}   	
}!! 
private%% 
void%% 
Good1%% 
(%% 
)%% 
{&& 
for'' 
('' 
int'' 
k'' 
='' 
$num'' 
;'' 
k'' 
<'' 
$num'' 
;'' 
k'' 
++'' !
)''! "
{(( 	
Trace** 
.** 
Assert** 
(** 
$str** !
.**! "
Length**" (
>**) *
$num**+ ,
)**, -
;**- .
}++ 	
},, 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
Good100 
(00 
)00 
;00 
}11 
}33 
}44 √h
ÄC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\Program.cs
	namespace		 	
	testcases		
 
.		 &
CWE617_Reachable_Assertion		 .
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
}__ 
privateaa 
staticaa	 
voidaa 
RunTestCWE4aa  
(aa  !
)aa! "
{aa# $
}ee 
privategg 
staticgg	 
voidgg 
RunTestCWE5gg  
(gg  !
)gg! "
{gg# $
}kk 
privatemm 
staticmm	 
voidmm 
RunTestCWE6mm  
(mm  !
)mm! "
{mm# $
(oo 
newoo 0
$CWE617_Reachable_Assertion__false_01oo ,
(oo, -
)oo- .
)oo. /
.oo/ 0
RunTestoo0 7
(oo7 8
$stroo8 ^
)oo^ _
;oo_ `
(pp 
newpp 0
$CWE617_Reachable_Assertion__false_02pp ,
(pp, -
)pp- .
)pp. /
.pp/ 0
RunTestpp0 7
(pp7 8
$strpp8 ^
)pp^ _
;pp_ `
(qq 
newqq 0
$CWE617_Reachable_Assertion__false_03qq ,
(qq, -
)qq- .
)qq. /
.qq/ 0
RunTestqq0 7
(qq7 8
$strqq8 ^
)qq^ _
;qq_ `
(rr 
newrr 0
$CWE617_Reachable_Assertion__false_04rr ,
(rr, -
)rr- .
)rr. /
.rr/ 0
RunTestrr0 7
(rr7 8
$strrr8 ^
)rr^ _
;rr_ `
(ss 
newss 0
$CWE617_Reachable_Assertion__false_05ss ,
(ss, -
)ss- .
)ss. /
.ss/ 0
RunTestss0 7
(ss7 8
$strss8 ^
)ss^ _
;ss_ `
(tt 
newtt 0
$CWE617_Reachable_Assertion__false_06tt ,
(tt, -
)tt- .
)tt. /
.tt/ 0
RunTesttt0 7
(tt7 8
$strtt8 ^
)tt^ _
;tt_ `
(uu 
newuu 0
$CWE617_Reachable_Assertion__false_07uu ,
(uu, -
)uu- .
)uu. /
.uu/ 0
RunTestuu0 7
(uu7 8
$struu8 ^
)uu^ _
;uu_ `
(vv 
newvv 0
$CWE617_Reachable_Assertion__false_08vv ,
(vv, -
)vv- .
)vv. /
.vv/ 0
RunTestvv0 7
(vv7 8
$strvv8 ^
)vv^ _
;vv_ `
(ww 
newww 0
$CWE617_Reachable_Assertion__false_09ww ,
(ww, -
)ww- .
)ww. /
.ww/ 0
RunTestww0 7
(ww7 8
$strww8 ^
)ww^ _
;ww_ `
(xx 
newxx 0
$CWE617_Reachable_Assertion__false_10xx ,
(xx, -
)xx- .
)xx. /
.xx/ 0
RunTestxx0 7
(xx7 8
$strxx8 ^
)xx^ _
;xx_ `
(yy 
newyy 0
$CWE617_Reachable_Assertion__false_11yy ,
(yy, -
)yy- .
)yy. /
.yy/ 0
RunTestyy0 7
(yy7 8
$stryy8 ^
)yy^ _
;yy_ `
(zz 
newzz 0
$CWE617_Reachable_Assertion__false_12zz ,
(zz, -
)zz- .
)zz. /
.zz/ 0
RunTestzz0 7
(zz7 8
$strzz8 ^
)zz^ _
;zz_ `
({{ 
new{{ 0
$CWE617_Reachable_Assertion__false_13{{ ,
({{, -
){{- .
){{. /
.{{/ 0
RunTest{{0 7
({{7 8
$str{{8 ^
){{^ _
;{{_ `
(|| 
new|| 0
$CWE617_Reachable_Assertion__false_14|| ,
(||, -
)||- .
)||. /
.||/ 0
RunTest||0 7
(||7 8
$str||8 ^
)||^ _
;||_ `
(}} 
new}} 0
$CWE617_Reachable_Assertion__false_15}} ,
(}}, -
)}}- .
)}}. /
.}}/ 0
RunTest}}0 7
(}}7 8
$str}}8 ^
)}}^ _
;}}_ `
(~~ 
new~~ 0
$CWE617_Reachable_Assertion__false_16~~ ,
(~~, -
)~~- .
)~~. /
.~~/ 0
RunTest~~0 7
(~~7 8
$str~~8 ^
)~~^ _
;~~_ `
( 
new 0
$CWE617_Reachable_Assertion__false_17 ,
(, -
)- .
). /
./ 0
RunTest0 7
(7 8
$str8 ^
)^ _
;_ `
(
ÄÄ 
new
ÄÄ 3
%CWE617_Reachable_Assertion__length_01
ÄÄ -
(
ÄÄ- .
)
ÄÄ. /
)
ÄÄ/ 0
.
ÄÄ0 1
RunTest
ÄÄ1 8
(
ÄÄ8 9
$str
ÄÄ9 `
)
ÄÄ` a
;
ÄÄa b
(
ÅÅ 
new
ÅÅ 3
%CWE617_Reachable_Assertion__length_02
ÅÅ -
(
ÅÅ- .
)
ÅÅ. /
)
ÅÅ/ 0
.
ÅÅ0 1
RunTest
ÅÅ1 8
(
ÅÅ8 9
$str
ÅÅ9 `
)
ÅÅ` a
;
ÅÅa b
(
ÇÇ 
new
ÇÇ 3
%CWE617_Reachable_Assertion__length_03
ÇÇ -
(
ÇÇ- .
)
ÇÇ. /
)
ÇÇ/ 0
.
ÇÇ0 1
RunTest
ÇÇ1 8
(
ÇÇ8 9
$str
ÇÇ9 `
)
ÇÇ` a
;
ÇÇa b
(
ÉÉ 
new
ÉÉ 3
%CWE617_Reachable_Assertion__length_04
ÉÉ -
(
ÉÉ- .
)
ÉÉ. /
)
ÉÉ/ 0
.
ÉÉ0 1
RunTest
ÉÉ1 8
(
ÉÉ8 9
$str
ÉÉ9 `
)
ÉÉ` a
;
ÉÉa b
(
ÑÑ 
new
ÑÑ 3
%CWE617_Reachable_Assertion__length_05
ÑÑ -
(
ÑÑ- .
)
ÑÑ. /
)
ÑÑ/ 0
.
ÑÑ0 1
RunTest
ÑÑ1 8
(
ÑÑ8 9
$str
ÑÑ9 `
)
ÑÑ` a
;
ÑÑa b
(
ÖÖ 
new
ÖÖ 3
%CWE617_Reachable_Assertion__length_06
ÖÖ -
(
ÖÖ- .
)
ÖÖ. /
)
ÖÖ/ 0
.
ÖÖ0 1
RunTest
ÖÖ1 8
(
ÖÖ8 9
$str
ÖÖ9 `
)
ÖÖ` a
;
ÖÖa b
(
ÜÜ 
new
ÜÜ 3
%CWE617_Reachable_Assertion__length_07
ÜÜ -
(
ÜÜ- .
)
ÜÜ. /
)
ÜÜ/ 0
.
ÜÜ0 1
RunTest
ÜÜ1 8
(
ÜÜ8 9
$str
ÜÜ9 `
)
ÜÜ` a
;
ÜÜa b
(
áá 
new
áá 3
%CWE617_Reachable_Assertion__length_08
áá -
(
áá- .
)
áá. /
)
áá/ 0
.
áá0 1
RunTest
áá1 8
(
áá8 9
$str
áá9 `
)
áá` a
;
ááa b
(
àà 
new
àà 3
%CWE617_Reachable_Assertion__length_09
àà -
(
àà- .
)
àà. /
)
àà/ 0
.
àà0 1
RunTest
àà1 8
(
àà8 9
$str
àà9 `
)
àà` a
;
ààa b
(
ââ 
new
ââ 3
%CWE617_Reachable_Assertion__length_10
ââ -
(
ââ- .
)
ââ. /
)
ââ/ 0
.
ââ0 1
RunTest
ââ1 8
(
ââ8 9
$str
ââ9 `
)
ââ` a
;
ââa b
(
ää 
new
ää 3
%CWE617_Reachable_Assertion__length_11
ää -
(
ää- .
)
ää. /
)
ää/ 0
.
ää0 1
RunTest
ää1 8
(
ää8 9
$str
ää9 `
)
ää` a
;
ääa b
(
ãã 
new
ãã 3
%CWE617_Reachable_Assertion__length_12
ãã -
(
ãã- .
)
ãã. /
)
ãã/ 0
.
ãã0 1
RunTest
ãã1 8
(
ãã8 9
$str
ãã9 `
)
ãã` a
;
ããa b
(
åå 
new
åå 3
%CWE617_Reachable_Assertion__length_13
åå -
(
åå- .
)
åå. /
)
åå/ 0
.
åå0 1
RunTest
åå1 8
(
åå8 9
$str
åå9 `
)
åå` a
;
ååa b
(
çç 
new
çç 3
%CWE617_Reachable_Assertion__length_14
çç -
(
çç- .
)
çç. /
)
çç/ 0
.
çç0 1
RunTest
çç1 8
(
çç8 9
$str
çç9 `
)
çç` a
;
çça b
(
éé 
new
éé 3
%CWE617_Reachable_Assertion__length_15
éé -
(
éé- .
)
éé. /
)
éé/ 0
.
éé0 1
RunTest
éé1 8
(
éé8 9
$str
éé9 `
)
éé` a
;
ééa b
(
èè 
new
èè 3
%CWE617_Reachable_Assertion__length_16
èè -
(
èè- .
)
èè. /
)
èè/ 0
.
èè0 1
RunTest
èè1 8
(
èè8 9
$str
èè9 `
)
èè` a
;
èèa b
(
êê 
new
êê 3
%CWE617_Reachable_Assertion__length_17
êê -
(
êê- .
)
êê. /
)
êê/ 0
.
êê0 1
RunTest
êê1 8
(
êê8 9
$str
êê9 `
)
êê` a
;
êêa b
}
íí 
private
îî 
static
îî	 
void
îî 
RunTestCWE7
îî  
(
îî  !
)
îî! "
{
îî# $
}
òò 
private
öö 
static
öö	 
void
öö 
RunTestCWE8
öö  
(
öö  !
)
öö! "
{
öö# $
}
ûû 
private
†† 
static
††	 
void
†† 
RunTestCWE9
††  
(
††  !
)
††! "
{
††# $
}
§§ 
}•• 
}¶¶ º
êC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE617_Reachable_Assertion\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 5
)5 6
]6 7
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 7
)7 8
]8 9
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *