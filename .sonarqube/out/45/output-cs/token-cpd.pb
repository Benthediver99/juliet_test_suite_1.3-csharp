¿K
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_01.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_01 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	
resp77 
.77 
AppendCookie77 
(77 
new77 

HttpCookie77 (
(77( )
$str77) /
,77/ 0
data771 5
)775 6
)776 7
;777 8
}88 
public;; 

override;; 
void;; 
Good;; 
(;; 
HttpRequest;; )
req;;* -
,;;- .
HttpResponse;;/ ;
resp;;< @
);;@ A
{<< 
GoodG2B== 
(== 
req== 
,== 
resp== 
)== 
;== 
GoodB2G>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
}?? 
privateBB 
voidBB 
GoodG2BBB 
(BB 
HttpRequestBB $
reqBB% (
,BB( )
HttpResponseBB* 6
respBB7 ;
)BB; <
{CC 
stringDD 
dataDD 
;DD 
usingEE 
(EE 
SecureStringEE 
	securePwdEE %
=EE& '
newEE( +
SecureStringEE, 8
(EE8 9
)EE9 :
)EE: ;
{FF 	
usingGG 
(GG 
SecureStringGG 

secureUserGG  *
=GG+ ,
newGG- 0
SecureStringGG1 =
(GG= >
)GG> ?
)GG? @
{HH 
forII 
(II 
intII 
iII 
=II 
$numII 
;II 
iII  !
<II" #
$strII$ /
.II/ 0
LengthII0 6
;II6 7
iII8 9
++II9 ;
)II; <
{JJ 
	securePwdLL 
.LL 

AppendCharLL (
(LL( )
$strLL) 4
[LL4 5
iLL5 6
]LL6 7
)LL7 8
;LL8 9
}MM 
forNN 
(NN 
intNN 
iNN 
=NN 
$numNN 
;NN 
iNN  !
<NN" #
$strNN$ *
.NN* +
LengthNN+ 1
;NN1 2
iNN3 4
++NN4 6
)NN6 7
{OO 
	securePwdQQ 
.QQ 

AppendCharQQ (
(QQ( )
$strQQ) /
[QQ/ 0
iQQ0 1
]QQ1 2
)QQ2 3
;QQ3 4
}RR 
{TT 
stringUU 
saltUU 
=UU  !
$strUU" 0
;UU0 1
usingVV 
(VV '
SHA512CryptoServiceProviderVV 6
sha512VV7 =
=VV> ?
newVV@ C'
SHA512CryptoServiceProviderVVD _
(VV_ `
)VV` a
)VVa b
{WW 
stringXX 
credentialsToHashXX 0
=XX1 2

secureUserXX3 =
.XX= >
ToStringXX> F
(XXF G
)XXG H
+XXI J
$strXXK N
+XXO P
	securePwdXXQ Z
.XXZ [
ToStringXX[ c
(XXc d
)XXd e
;XXe f
byteYY 
[YY 
]YY 
bufferYY %
=YY& '
EncodingYY( 0
.YY0 1
UTF8YY1 5
.YY5 6
GetBytesYY6 >
(YY> ?
stringYY? E
.YYE F
ConcatYYF L
(YYL M
saltYYM Q
,YYQ R
credentialsToHashYYS d
)YYd e
)YYe f
;YYf g
byteZZ 
[ZZ 
]ZZ 
hashedCredsAsBytesZZ 1
=ZZ2 3
sha512ZZ4 :
.ZZ: ;
ComputeHashZZ; F
(ZZF G
bufferZZG M
)ZZM N
;ZZN O
data[[ 
=[[ 
IO[[ !
.[[! "
ToHex[[" '
([[' (
hashedCredsAsBytes[[( :
)[[: ;
;[[; <
}\\ 
}]] 
}^^ 
}__ 	
respbb 
.bb 
AppendCookiebb 
(bb 
newbb 

HttpCookiebb (
(bb( )
$strbb) /
,bb/ 0
databb1 5
)bb5 6
)bb6 7
;bb7 8
}cc 
privateff 
voidff 
GoodB2Gff 
(ff 
HttpRequestff $
reqff% (
,ff( )
HttpResponseff* 6
respff7 ;
)ff; <
{gg 
stringhh 
datahh 
;hh 
usingii 
(ii 
SecureStringii 
	securePwdii %
=ii& '
newii( +
SecureStringii, 8
(ii8 9
)ii9 :
)ii: ;
{jj 	
usingkk 
(kk 
SecureStringkk 

secureUserkk  *
=kk+ ,
newkk- 0
SecureStringkk1 =
(kk= >
)kk> ?
)kk? @
{ll 
formm 
(mm 
intmm 
imm 
=mm 
$nummm 
;mm 
imm  !
<mm" #
$strmm$ /
.mm/ 0
Lengthmm0 6
;mm6 7
imm8 9
++mm9 ;
)mm; <
{nn 
	securePwdpp 
.pp 

AppendCharpp (
(pp( )
$strpp) 4
[pp4 5
ipp5 6
]pp6 7
)pp7 8
;pp8 9
}qq 
forrr 
(rr 
intrr 
irr 
=rr 
$numrr 
;rr 
irr  !
<rr" #
$strrr$ *
.rr* +
Lengthrr+ 1
;rr1 2
irr3 4
++rr4 6
)rr6 7
{ss 
	securePwduu 
.uu 

AppendCharuu (
(uu( )
$struu) /
[uu/ 0
iuu0 1
]uu1 2
)uu2 3
;uu3 4
}vv 
dataxx 
=xx 

secureUserxx !
.xx! "
ToStringxx" *
(xx* +
)xx+ ,
+xx- .
$strxx/ 2
+xx3 4
	securePwdxx5 >
.xx> ?
ToStringxx? G
(xxG H
)xxH I
;xxI J
}yy 
}zz 	
{|| 	
string}} 
salt}} 
=}} 
$str}} (
;}}( )
using~~ 
(~~ '
SHA512CryptoServiceProvider~~ .
sha512~~/ 5
=~~6 7
new~~8 ;'
SHA512CryptoServiceProvider~~< W
(~~W X
)~~X Y
)~~Y Z
{ 
byte
ÄÄ 
[
ÄÄ 
]
ÄÄ 
buffer
ÄÄ 
=
ÄÄ 
Encoding
ÄÄ  (
.
ÄÄ( )
UTF8
ÄÄ) -
.
ÄÄ- .
GetBytes
ÄÄ. 6
(
ÄÄ6 7
string
ÄÄ7 =
.
ÄÄ= >
Concat
ÄÄ> D
(
ÄÄD E
salt
ÄÄE I
,
ÄÄI J
data
ÄÄK O
)
ÄÄO P
)
ÄÄP Q
;
ÄÄQ R
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ  
hashedCredsAsBytes
ÅÅ )
=
ÅÅ* +
sha512
ÅÅ, 2
.
ÅÅ2 3
ComputeHash
ÅÅ3 >
(
ÅÅ> ?
buffer
ÅÅ? E
)
ÅÅE F
;
ÅÅF G
data
ÇÇ 
=
ÇÇ 
IO
ÇÇ 
.
ÇÇ 
ToHex
ÇÇ 
(
ÇÇ   
hashedCredsAsBytes
ÇÇ  2
)
ÇÇ2 3
;
ÇÇ3 4
}
ÉÉ 
}
ÑÑ 	
resp
ÖÖ 
.
ÖÖ 
AppendCookie
ÖÖ 
(
ÖÖ 
new
ÖÖ 

HttpCookie
ÖÖ (
(
ÖÖ( )
$str
ÖÖ) /
,
ÖÖ/ 0
data
ÖÖ1 5
)
ÖÖ5 6
)
ÖÖ6 7
;
ÖÖ7 8
}
ÜÜ 
}àà 
}ââ ˘ï
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_02.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_02 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
true## 
)## 
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
true>> 
)>> 
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateHH 
voidHH 
GoodG2B1HH 
(HH 
HttpRequestHH %
reqHH& )
,HH) *
HttpResponseHH+ 7
respHH8 <
)HH< =
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK 
falseKK 
)KK 
{LL 	
dataOO 
=OO 
nullOO 
;OO 
}PP 	
elseQQ 
{RR 	
usingSS 
(SS 
SecureStringSS 
	securePwdSS  )
=SS* +
newSS, /
SecureStringSS0 <
(SS< =
)SS= >
)SS> ?
{TT 
usingUU 
(UU 
SecureStringUU #

secureUserUU$ .
=UU/ 0
newUU1 4
SecureStringUU5 A
(UUA B
)UUB C
)UUC D
{VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( 3
.WW3 4
LengthWW4 :
;WW: ;
iWW< =
++WW= ?
)WW? @
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 8
[ZZ8 9
iZZ9 :
]ZZ: ;
)ZZ; <
;ZZ< =
}[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( .
.\\. /
Length\\/ 5
;\\5 6
i\\7 8
++\\8 :
)\\: ;
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 3
[__3 4
i__4 5
]__5 6
)__6 7
;__7 8
}`` 
{bb 
stringcc 
saltcc #
=cc$ %
$strcc& 4
;cc4 5
usingdd 
(dd '
SHA512CryptoServiceProviderdd :
sha512dd; A
=ddB C
newddD G'
SHA512CryptoServiceProviderddH c
(ddc d
)ddd e
)dde f
{ee 
stringff "
credentialsToHashff# 4
=ff5 6

secureUserff7 A
.ffA B
ToStringffB J
(ffJ K
)ffK L
+ffM N
$strffO R
+ffS T
	securePwdffU ^
.ff^ _
ToStringff_ g
(ffg h
)ffh i
;ffi j
bytegg  
[gg  !
]gg! "
buffergg# )
=gg* +
Encodinggg, 4
.gg4 5
UTF8gg5 9
.gg9 :
GetBytesgg: B
(ggB C
stringggC I
.ggI J
ConcatggJ P
(ggP Q
saltggQ U
,ggU V
credentialsToHashggW h
)ggh i
)ggi j
;ggj k
bytehh  
[hh  !
]hh! "
hashedCredsAsByteshh# 5
=hh6 7
sha512hh8 >
.hh> ?
ComputeHashhh? J
(hhJ K
bufferhhK Q
)hhQ R
;hhR S
dataii  
=ii! "
IOii# %
.ii% &
ToHexii& +
(ii+ ,
hashedCredsAsBytesii, >
)ii> ?
;ii? @
}jj 
}kk 
}ll 
}mm 
}nn 	
ifoo 

(oo 
trueoo 
)oo 
{pp 	
respss 
.ss 
AppendCookiess 
(ss 
newss !

HttpCookiess" ,
(ss, -
$strss- 3
,ss3 4
datass5 9
)ss9 :
)ss: ;
;ss; <
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
true{{ 
){{ 
{|| 	
using}} 
(}} 
SecureString}} 
	securePwd}}  )
=}}* +
new}}, /
SecureString}}0 <
(}}< =
)}}= >
)}}> ?
{~~ 
using 
( 
SecureString #

secureUser$ .
=/ 0
new1 4
SecureString5 A
(A B
)B C
)C D
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
i
ÅÅ$ %
<
ÅÅ& '
$str
ÅÅ( 3
.
ÅÅ3 4
Length
ÅÅ4 :
;
ÅÅ: ;
i
ÅÅ< =
++
ÅÅ= ?
)
ÅÅ? @
{
ÇÇ 
	securePwd
ÑÑ !
.
ÑÑ! "

AppendChar
ÑÑ" ,
(
ÑÑ, -
$str
ÑÑ- 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( .
.
ÜÜ. /
Length
ÜÜ/ 5
;
ÜÜ5 6
i
ÜÜ7 8
++
ÜÜ8 :
)
ÜÜ: ;
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 3
[
ââ3 4
i
ââ4 5
]
ââ5 6
)
ââ6 7
;
ââ7 8
}
ää 
{
åå 
string
çç 
salt
çç #
=
çç$ %
$str
çç& 4
;
çç4 5
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé :
sha512
éé; A
=
ééB C
new
ééD G)
SHA512CryptoServiceProvider
ééH c
(
ééc d
)
ééd e
)
éée f
{
èè 
string
êê "
credentialsToHash
êê# 4
=
êê5 6

secureUser
êê7 A
.
êêA B
ToString
êêB J
(
êêJ K
)
êêK L
+
êêM N
$str
êêO R
+
êêS T
	securePwd
êêU ^
.
êê^ _
ToString
êê_ g
(
êêg h
)
êêh i
;
êêi j
byte
ëë  
[
ëë  !
]
ëë! "
buffer
ëë# )
=
ëë* +
Encoding
ëë, 4
.
ëë4 5
UTF8
ëë5 9
.
ëë9 :
GetBytes
ëë: B
(
ëëB C
string
ëëC I
.
ëëI J
Concat
ëëJ P
(
ëëP Q
salt
ëëQ U
,
ëëU V
credentialsToHash
ëëW h
)
ëëh i
)
ëëi j
;
ëëj k
byte
íí  
[
íí  !
]
íí! " 
hashedCredsAsBytes
íí# 5
=
íí6 7
sha512
íí8 >
.
íí> ?
ComputeHash
íí? J
(
ííJ K
buffer
ííK Q
)
ííQ R
;
ííR S
data
ìì  
=
ìì! "
IO
ìì# %
.
ìì% &
ToHex
ìì& +
(
ìì+ , 
hashedCredsAsBytes
ìì, >
)
ìì> ?
;
ìì? @
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
data
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
true
üü 
)
üü 
{
†† 	
resp
££ 
.
££ 
AppendCookie
££ 
(
££ 
new
££ !

HttpCookie
££" ,
(
££, -
$str
££- 3
,
££3 4
data
££5 9
)
££9 :
)
££: ;
;
££; <
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
HttpRequest
®® %
req
®®& )
,
®®) *
HttpResponse
®®+ 7
resp
®®8 <
)
®®< =
{
©© 
string
™™ 
data
™™ 
;
™™ 
if
´´ 

(
´´ 
true
´´ 
)
´´ 
{
¨¨ 	
using
≠≠ 
(
≠≠ 
SecureString
≠≠ 
	securePwd
≠≠  )
=
≠≠* +
new
≠≠, /
SecureString
≠≠0 <
(
≠≠< =
)
≠≠= >
)
≠≠> ?
{
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ #

secureUser
ØØ$ .
=
ØØ/ 0
new
ØØ1 4
SecureString
ØØ5 A
(
ØØA B
)
ØØB C
)
ØØC D
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
$str
±±( 3
.
±±3 4
Length
±±4 :
;
±±: ;
i
±±< =
++
±±= ?
)
±±? @
{
≤≤ 
	securePwd
¥¥ !
.
¥¥! "

AppendChar
¥¥" ,
(
¥¥, -
$str
¥¥- 8
[
¥¥8 9
i
¥¥9 :
]
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( .
.
∂∂. /
Length
∂∂/ 5
;
∂∂5 6
i
∂∂7 8
++
∂∂8 :
)
∂∂: ;
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 3
[
ππ3 4
i
ππ4 5
]
ππ5 6
)
ππ6 7
;
ππ7 8
}
∫∫ 
data
ºº 
=
ºº 

secureUser
ºº %
.
ºº% &
ToString
ºº& .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
	securePwd
ºº9 B
.
ººB C
ToString
ººC K
(
ººK L
)
ººL M
;
ººM N
}
ΩΩ 
}
ææ 
}
øø 	
else
¿¿ 
{
¡¡ 	
data
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
if
∆∆ 

(
∆∆ 
false
∆∆ 
)
∆∆ 
{
«« 	
IO
…… 
.
…… 
	WriteLine
…… 
(
…… 
$str
…… /
)
……/ 0
;
……0 1
}
   	
else
ÀÀ 
{
ÃÃ 	
{
ŒŒ 
string
œœ 
salt
œœ 
=
œœ 
$str
œœ ,
;
œœ, -
using
–– 
(
–– )
SHA512CryptoServiceProvider
–– 2
sha512
––3 9
=
––: ;
new
––< ?)
SHA512CryptoServiceProvider
––@ [
(
––[ \
)
––\ ]
)
––] ^
{
—— 
byte
““ 
[
““ 
]
““ 
buffer
““ !
=
““" #
Encoding
““$ ,
.
““, -
UTF8
““- 1
.
““1 2
GetBytes
““2 :
(
““: ;
string
““; A
.
““A B
Concat
““B H
(
““H I
salt
““I M
,
““M N
data
““O S
)
““S T
)
““T U
;
““U V
byte
”” 
[
”” 
]
””  
hashedCredsAsBytes
”” -
=
””. /
sha512
””0 6
.
””6 7
ComputeHash
””7 B
(
””B C
buffer
””C I
)
””I J
;
””J K
data
‘‘ 
=
‘‘ 
IO
‘‘ 
.
‘‘ 
ToHex
‘‘ #
(
‘‘# $ 
hashedCredsAsBytes
‘‘$ 6
)
‘‘6 7
;
‘‘7 8
}
’’ 
}
÷÷ 
resp
◊◊ 
.
◊◊ 
AppendCookie
◊◊ 
(
◊◊ 
new
◊◊ !

HttpCookie
◊◊" ,
(
◊◊, -
$str
◊◊- 3
,
◊◊3 4
data
◊◊5 9
)
◊◊9 :
)
◊◊: ;
;
◊◊; <
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
HttpRequest
‹‹ %
req
‹‹& )
,
‹‹) *
HttpResponse
‹‹+ 7
resp
‹‹8 <
)
‹‹< =
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
if
ﬂﬂ 

(
ﬂﬂ 
true
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
using
·· 
(
·· 
SecureString
·· 
	securePwd
··  )
=
··* +
new
··, /
SecureString
··0 <
(
··< =
)
··= >
)
··> ?
{
‚‚ 
using
„„ 
(
„„ 
SecureString
„„ #

secureUser
„„$ .
=
„„/ 0
new
„„1 4
SecureString
„„5 A
(
„„A B
)
„„B C
)
„„C D
{
‰‰ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
;
ÂÂ" #
i
ÂÂ$ %
<
ÂÂ& '
$str
ÂÂ( 3
.
ÂÂ3 4
Length
ÂÂ4 :
;
ÂÂ: ;
i
ÂÂ< =
++
ÂÂ= ?
)
ÂÂ? @
{
ÊÊ 
	securePwd
ËË !
.
ËË! "

AppendChar
ËË" ,
(
ËË, -
$str
ËË- 8
[
ËË8 9
i
ËË9 :
]
ËË: ;
)
ËË; <
;
ËË< =
}
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( .
.
ÍÍ. /
Length
ÍÍ/ 5
;
ÍÍ5 6
i
ÍÍ7 8
++
ÍÍ8 :
)
ÍÍ: ;
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 3
[
ÌÌ3 4
i
ÌÌ4 5
]
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
data
 
=
 

secureUser
 %
.
% &
ToString
& .
(
. /
)
/ 0
+
1 2
$str
3 6
+
7 8
	securePwd
9 B
.
B C
ToString
C K
(
K L
)
L M
;
M N
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
else
ÙÙ 
{
ıı 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
˘˘ 	
if
˙˙ 

(
˙˙ 
true
˙˙ 
)
˙˙ 
{
˚˚ 	
{
˝˝ 
string
˛˛ 
salt
˛˛ 
=
˛˛ 
$str
˛˛ ,
;
˛˛, -
using
ˇˇ 
(
ˇˇ )
SHA512CryptoServiceProvider
ˇˇ 2
sha512
ˇˇ3 9
=
ˇˇ: ;
new
ˇˇ< ?)
SHA512CryptoServiceProvider
ˇˇ@ [
(
ˇˇ[ \
)
ˇˇ\ ]
)
ˇˇ] ^
{
ÄÄ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
buffer
ÅÅ !
=
ÅÅ" #
Encoding
ÅÅ$ ,
.
ÅÅ, -
UTF8
ÅÅ- 1
.
ÅÅ1 2
GetBytes
ÅÅ2 :
(
ÅÅ: ;
string
ÅÅ; A
.
ÅÅA B
Concat
ÅÅB H
(
ÅÅH I
salt
ÅÅI M
,
ÅÅM N
data
ÅÅO S
)
ÅÅS T
)
ÅÅT U
;
ÅÅU V
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ  
hashedCredsAsBytes
ÇÇ -
=
ÇÇ. /
sha512
ÇÇ0 6
.
ÇÇ6 7
ComputeHash
ÇÇ7 B
(
ÇÇB C
buffer
ÇÇC I
)
ÇÇI J
;
ÇÇJ K
data
ÉÉ 
=
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
ToHex
ÉÉ #
(
ÉÉ# $ 
hashedCredsAsBytes
ÉÉ$ 6
)
ÉÉ6 7
;
ÉÉ7 8
}
ÑÑ 
}
ÖÖ 
resp
ÜÜ 
.
ÜÜ 
AppendCookie
ÜÜ 
(
ÜÜ 
new
ÜÜ !

HttpCookie
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 3
,
ÜÜ3 4
data
ÜÜ5 9
)
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
ãã 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ﬂò
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_03.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_03 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
$num## 
==## 
$num## 
)## 
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
$num>> 
==>> 
$num>> 
)>> 
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateHH 
voidHH 
GoodG2B1HH 
(HH 
HttpRequestHH %
reqHH& )
,HH) *
HttpResponseHH+ 7
respHH8 <
)HH< =
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK 
$numKK 
!=KK 
$numKK 
)KK 
{LL 	
dataOO 
=OO 
nullOO 
;OO 
}PP 	
elseQQ 
{RR 	
usingSS 
(SS 
SecureStringSS 
	securePwdSS  )
=SS* +
newSS, /
SecureStringSS0 <
(SS< =
)SS= >
)SS> ?
{TT 
usingUU 
(UU 
SecureStringUU #

secureUserUU$ .
=UU/ 0
newUU1 4
SecureStringUU5 A
(UUA B
)UUB C
)UUC D
{VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( 3
.WW3 4
LengthWW4 :
;WW: ;
iWW< =
++WW= ?
)WW? @
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 8
[ZZ8 9
iZZ9 :
]ZZ: ;
)ZZ; <
;ZZ< =
}[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( .
.\\. /
Length\\/ 5
;\\5 6
i\\7 8
++\\8 :
)\\: ;
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 3
[__3 4
i__4 5
]__5 6
)__6 7
;__7 8
}`` 
{bb 
stringcc 
saltcc #
=cc$ %
$strcc& 4
;cc4 5
usingdd 
(dd '
SHA512CryptoServiceProviderdd :
sha512dd; A
=ddB C
newddD G'
SHA512CryptoServiceProviderddH c
(ddc d
)ddd e
)dde f
{ee 
stringff "
credentialsToHashff# 4
=ff5 6

secureUserff7 A
.ffA B
ToStringffB J
(ffJ K
)ffK L
+ffM N
$strffO R
+ffS T
	securePwdffU ^
.ff^ _
ToStringff_ g
(ffg h
)ffh i
;ffi j
bytegg  
[gg  !
]gg! "
buffergg# )
=gg* +
Encodinggg, 4
.gg4 5
UTF8gg5 9
.gg9 :
GetBytesgg: B
(ggB C
stringggC I
.ggI J
ConcatggJ P
(ggP Q
saltggQ U
,ggU V
credentialsToHashggW h
)ggh i
)ggi j
;ggj k
bytehh  
[hh  !
]hh! "
hashedCredsAsByteshh# 5
=hh6 7
sha512hh8 >
.hh> ?
ComputeHashhh? J
(hhJ K
bufferhhK Q
)hhQ R
;hhR S
dataii  
=ii! "
IOii# %
.ii% &
ToHexii& +
(ii+ ,
hashedCredsAsBytesii, >
)ii> ?
;ii? @
}jj 
}kk 
}ll 
}mm 
}nn 	
ifoo 

(oo 
$numoo 
==oo 
$numoo 
)oo 
{pp 	
respss 
.ss 
AppendCookiess 
(ss 
newss !

HttpCookiess" ,
(ss, -
$strss- 3
,ss3 4
datass5 9
)ss9 :
)ss: ;
;ss; <
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
$num{{ 
=={{ 
$num{{ 
){{ 
{|| 	
using}} 
(}} 
SecureString}} 
	securePwd}}  )
=}}* +
new}}, /
SecureString}}0 <
(}}< =
)}}= >
)}}> ?
{~~ 
using 
( 
SecureString #

secureUser$ .
=/ 0
new1 4
SecureString5 A
(A B
)B C
)C D
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
i
ÅÅ$ %
<
ÅÅ& '
$str
ÅÅ( 3
.
ÅÅ3 4
Length
ÅÅ4 :
;
ÅÅ: ;
i
ÅÅ< =
++
ÅÅ= ?
)
ÅÅ? @
{
ÇÇ 
	securePwd
ÑÑ !
.
ÑÑ! "

AppendChar
ÑÑ" ,
(
ÑÑ, -
$str
ÑÑ- 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( .
.
ÜÜ. /
Length
ÜÜ/ 5
;
ÜÜ5 6
i
ÜÜ7 8
++
ÜÜ8 :
)
ÜÜ: ;
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 3
[
ââ3 4
i
ââ4 5
]
ââ5 6
)
ââ6 7
;
ââ7 8
}
ää 
{
åå 
string
çç 
salt
çç #
=
çç$ %
$str
çç& 4
;
çç4 5
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé :
sha512
éé; A
=
ééB C
new
ééD G)
SHA512CryptoServiceProvider
ééH c
(
ééc d
)
ééd e
)
éée f
{
èè 
string
êê "
credentialsToHash
êê# 4
=
êê5 6

secureUser
êê7 A
.
êêA B
ToString
êêB J
(
êêJ K
)
êêK L
+
êêM N
$str
êêO R
+
êêS T
	securePwd
êêU ^
.
êê^ _
ToString
êê_ g
(
êêg h
)
êêh i
;
êêi j
byte
ëë  
[
ëë  !
]
ëë! "
buffer
ëë# )
=
ëë* +
Encoding
ëë, 4
.
ëë4 5
UTF8
ëë5 9
.
ëë9 :
GetBytes
ëë: B
(
ëëB C
string
ëëC I
.
ëëI J
Concat
ëëJ P
(
ëëP Q
salt
ëëQ U
,
ëëU V
credentialsToHash
ëëW h
)
ëëh i
)
ëëi j
;
ëëj k
byte
íí  
[
íí  !
]
íí! " 
hashedCredsAsBytes
íí# 5
=
íí6 7
sha512
íí8 >
.
íí> ?
ComputeHash
íí? J
(
ííJ K
buffer
ííK Q
)
ííQ R
;
ííR S
data
ìì  
=
ìì! "
IO
ìì# %
.
ìì% &
ToHex
ìì& +
(
ìì+ , 
hashedCredsAsBytes
ìì, >
)
ìì> ?
;
ìì? @
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
data
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
$num
üü 
==
üü 
$num
üü 
)
üü 
{
†† 	
resp
££ 
.
££ 
AppendCookie
££ 
(
££ 
new
££ !

HttpCookie
££" ,
(
££, -
$str
££- 3
,
££3 4
data
££5 9
)
££9 :
)
££: ;
;
££; <
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
HttpRequest
®® %
req
®®& )
,
®®) *
HttpResponse
®®+ 7
resp
®®8 <
)
®®< =
{
©© 
string
™™ 
data
™™ 
;
™™ 
if
´´ 

(
´´ 
$num
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
¨¨ 	
using
≠≠ 
(
≠≠ 
SecureString
≠≠ 
	securePwd
≠≠  )
=
≠≠* +
new
≠≠, /
SecureString
≠≠0 <
(
≠≠< =
)
≠≠= >
)
≠≠> ?
{
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ #

secureUser
ØØ$ .
=
ØØ/ 0
new
ØØ1 4
SecureString
ØØ5 A
(
ØØA B
)
ØØB C
)
ØØC D
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
$str
±±( 3
.
±±3 4
Length
±±4 :
;
±±: ;
i
±±< =
++
±±= ?
)
±±? @
{
≤≤ 
	securePwd
¥¥ !
.
¥¥! "

AppendChar
¥¥" ,
(
¥¥, -
$str
¥¥- 8
[
¥¥8 9
i
¥¥9 :
]
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( .
.
∂∂. /
Length
∂∂/ 5
;
∂∂5 6
i
∂∂7 8
++
∂∂8 :
)
∂∂: ;
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 3
[
ππ3 4
i
ππ4 5
]
ππ5 6
)
ππ6 7
;
ππ7 8
}
∫∫ 
data
ºº 
=
ºº 

secureUser
ºº %
.
ºº% &
ToString
ºº& .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
	securePwd
ºº9 B
.
ººB C
ToString
ººC K
(
ººK L
)
ººL M
;
ººM N
}
ΩΩ 
}
ææ 
}
øø 	
else
¿¿ 
{
¡¡ 	
data
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
if
∆∆ 

(
∆∆ 
$num
∆∆ 
!=
∆∆ 
$num
∆∆ 
)
∆∆ 
{
«« 	
IO
…… 
.
…… 
	WriteLine
…… 
(
…… 
$str
…… /
)
……/ 0
;
……0 1
}
   	
else
ÀÀ 
{
ÃÃ 	
{
ŒŒ 
string
œœ 
salt
œœ 
=
œœ 
$str
œœ ,
;
œœ, -
using
–– 
(
–– )
SHA512CryptoServiceProvider
–– 2
sha512
––3 9
=
––: ;
new
––< ?)
SHA512CryptoServiceProvider
––@ [
(
––[ \
)
––\ ]
)
––] ^
{
—— 
byte
““ 
[
““ 
]
““ 
buffer
““ !
=
““" #
Encoding
““$ ,
.
““, -
UTF8
““- 1
.
““1 2
GetBytes
““2 :
(
““: ;
string
““; A
.
““A B
Concat
““B H
(
““H I
salt
““I M
,
““M N
data
““O S
)
““S T
)
““T U
;
““U V
byte
”” 
[
”” 
]
””  
hashedCredsAsBytes
”” -
=
””. /
sha512
””0 6
.
””6 7
ComputeHash
””7 B
(
””B C
buffer
””C I
)
””I J
;
””J K
data
‘‘ 
=
‘‘ 
IO
‘‘ 
.
‘‘ 
ToHex
‘‘ #
(
‘‘# $ 
hashedCredsAsBytes
‘‘$ 6
)
‘‘6 7
;
‘‘7 8
}
’’ 
}
÷÷ 
resp
◊◊ 
.
◊◊ 
AppendCookie
◊◊ 
(
◊◊ 
new
◊◊ !

HttpCookie
◊◊" ,
(
◊◊, -
$str
◊◊- 3
,
◊◊3 4
data
◊◊5 9
)
◊◊9 :
)
◊◊: ;
;
◊◊; <
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
HttpRequest
‹‹ %
req
‹‹& )
,
‹‹) *
HttpResponse
‹‹+ 7
resp
‹‹8 <
)
‹‹< =
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
if
ﬂﬂ 

(
ﬂﬂ 
$num
ﬂﬂ 
==
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
using
·· 
(
·· 
SecureString
·· 
	securePwd
··  )
=
··* +
new
··, /
SecureString
··0 <
(
··< =
)
··= >
)
··> ?
{
‚‚ 
using
„„ 
(
„„ 
SecureString
„„ #

secureUser
„„$ .
=
„„/ 0
new
„„1 4
SecureString
„„5 A
(
„„A B
)
„„B C
)
„„C D
{
‰‰ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
;
ÂÂ" #
i
ÂÂ$ %
<
ÂÂ& '
$str
ÂÂ( 3
.
ÂÂ3 4
Length
ÂÂ4 :
;
ÂÂ: ;
i
ÂÂ< =
++
ÂÂ= ?
)
ÂÂ? @
{
ÊÊ 
	securePwd
ËË !
.
ËË! "

AppendChar
ËË" ,
(
ËË, -
$str
ËË- 8
[
ËË8 9
i
ËË9 :
]
ËË: ;
)
ËË; <
;
ËË< =
}
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( .
.
ÍÍ. /
Length
ÍÍ/ 5
;
ÍÍ5 6
i
ÍÍ7 8
++
ÍÍ8 :
)
ÍÍ: ;
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 3
[
ÌÌ3 4
i
ÌÌ4 5
]
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
data
 
=
 

secureUser
 %
.
% &
ToString
& .
(
. /
)
/ 0
+
1 2
$str
3 6
+
7 8
	securePwd
9 B
.
B C
ToString
C K
(
K L
)
L M
;
M N
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
else
ÙÙ 
{
ıı 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
˘˘ 	
if
˙˙ 

(
˙˙ 
$num
˙˙ 
==
˙˙ 
$num
˙˙ 
)
˙˙ 
{
˚˚ 	
{
˝˝ 
string
˛˛ 
salt
˛˛ 
=
˛˛ 
$str
˛˛ ,
;
˛˛, -
using
ˇˇ 
(
ˇˇ )
SHA512CryptoServiceProvider
ˇˇ 2
sha512
ˇˇ3 9
=
ˇˇ: ;
new
ˇˇ< ?)
SHA512CryptoServiceProvider
ˇˇ@ [
(
ˇˇ[ \
)
ˇˇ\ ]
)
ˇˇ] ^
{
ÄÄ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
buffer
ÅÅ !
=
ÅÅ" #
Encoding
ÅÅ$ ,
.
ÅÅ, -
UTF8
ÅÅ- 1
.
ÅÅ1 2
GetBytes
ÅÅ2 :
(
ÅÅ: ;
string
ÅÅ; A
.
ÅÅA B
Concat
ÅÅB H
(
ÅÅH I
salt
ÅÅI M
,
ÅÅM N
data
ÅÅO S
)
ÅÅS T
)
ÅÅT U
;
ÅÅU V
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ  
hashedCredsAsBytes
ÇÇ -
=
ÇÇ. /
sha512
ÇÇ0 6
.
ÇÇ6 7
ComputeHash
ÇÇ7 B
(
ÇÇB C
buffer
ÇÇC I
)
ÇÇI J
;
ÇÇJ K
data
ÉÉ 
=
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
ToHex
ÉÉ #
(
ÉÉ# $ 
hashedCredsAsBytes
ÉÉ$ 6
)
ÉÉ6 7
;
ÉÉ7 8
}
ÑÑ 
}
ÖÖ 
resp
ÜÜ 
.
ÜÜ 
AppendCookie
ÜÜ 
(
ÜÜ 
new
ÜÜ !

HttpCookie
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 3
,
ÜÜ3 4
data
ÜÜ5 9
)
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
ãã 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ◊ô
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_04.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_04 0
:1 2
AbstractTestCaseWeb3 F
{ 
private$$ 
const$$ 
bool$$ 
PRIVATE_CONST_TRUE$$ )
=$$* +
true$$, 0
;$$0 1
private%% 
const%% 
bool%% 
PRIVATE_CONST_FALSE%% *
=%%+ ,
false%%- 2
;%%2 3
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
if** 

(** 
PRIVATE_CONST_TRUE** 
)** 
{++ 	
using,, 
(,, 
SecureString,, 
	securePwd,,  )
=,,* +
new,,, /
SecureString,,0 <
(,,< =
),,= >
),,> ?
{-- 
using.. 
(.. 
SecureString.. #

secureUser..$ .
=../ 0
new..1 4
SecureString..5 A
(..A B
)..B C
)..C D
{// 
for00 
(00 
int00 
i00 
=00  
$num00! "
;00" #
i00$ %
<00& '
$str00( 3
.003 4
Length004 :
;00: ;
i00< =
++00= ?
)00? @
{11 
	securePwd33 !
.33! "

AppendChar33" ,
(33, -
$str33- 8
[338 9
i339 :
]33: ;
)33; <
;33< =
}44 
for55 
(55 
int55 
i55 
=55  
$num55! "
;55" #
i55$ %
<55& '
$str55( .
.55. /
Length55/ 5
;555 6
i557 8
++558 :
)55: ;
{66 
	securePwd88 !
.88! "

AppendChar88" ,
(88, -
$str88- 3
[883 4
i884 5
]885 6
)886 7
;887 8
}99 
data;; 
=;; 

secureUser;; %
.;;% &
ToString;;& .
(;;. /
);;/ 0
+;;1 2
$str;;3 6
+;;7 8
	securePwd;;9 B
.;;B C
ToString;;C K
(;;K L
);;L M
;;;M N
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
nullCC 
;CC 
}DD 	
ifEE 

(EE 
PRIVATE_CONST_TRUEEE 
)EE 
{FF 	
respII 
.II 
AppendCookieII 
(II 
newII !

HttpCookieII" ,
(II, -
$strII- 3
,II3 4
dataII5 9
)II9 :
)II: ;
;II; <
}JJ 	
}KK 
privateOO 
voidOO 
GoodG2B1OO 
(OO 
HttpRequestOO %
reqOO& )
,OO) *
HttpResponseOO+ 7
respOO8 <
)OO< =
{PP 
stringQQ 
dataQQ 
;QQ 
ifRR 

(RR 
PRIVATE_CONST_FALSERR 
)RR  
{SS 	
dataVV 
=VV 
nullVV 
;VV 
}WW 	
elseXX 
{YY 	
usingZZ 
(ZZ 
SecureStringZZ 
	securePwdZZ  )
=ZZ* +
newZZ, /
SecureStringZZ0 <
(ZZ< =
)ZZ= >
)ZZ> ?
{[[ 
using\\ 
(\\ 
SecureString\\ #

secureUser\\$ .
=\\/ 0
new\\1 4
SecureString\\5 A
(\\A B
)\\B C
)\\C D
{]] 
for^^ 
(^^ 
int^^ 
i^^ 
=^^  
$num^^! "
;^^" #
i^^$ %
<^^& '
$str^^( 3
.^^3 4
Length^^4 :
;^^: ;
i^^< =
++^^= ?
)^^? @
{__ 
	securePwdaa !
.aa! "

AppendCharaa" ,
(aa, -
$straa- 8
[aa8 9
iaa9 :
]aa: ;
)aa; <
;aa< =
}bb 
forcc 
(cc 
intcc 
icc 
=cc  
$numcc! "
;cc" #
icc$ %
<cc& '
$strcc( .
.cc. /
Lengthcc/ 5
;cc5 6
icc7 8
++cc8 :
)cc: ;
{dd 
	securePwdff !
.ff! "

AppendCharff" ,
(ff, -
$strff- 3
[ff3 4
iff4 5
]ff5 6
)ff6 7
;ff7 8
}gg 
{ii 
stringjj 
saltjj #
=jj$ %
$strjj& 4
;jj4 5
usingkk 
(kk '
SHA512CryptoServiceProviderkk :
sha512kk; A
=kkB C
newkkD G'
SHA512CryptoServiceProviderkkH c
(kkc d
)kkd e
)kke f
{ll 
stringmm "
credentialsToHashmm# 4
=mm5 6

secureUsermm7 A
.mmA B
ToStringmmB J
(mmJ K
)mmK L
+mmM N
$strmmO R
+mmS T
	securePwdmmU ^
.mm^ _
ToStringmm_ g
(mmg h
)mmh i
;mmi j
bytenn  
[nn  !
]nn! "
buffernn# )
=nn* +
Encodingnn, 4
.nn4 5
UTF8nn5 9
.nn9 :
GetBytesnn: B
(nnB C
stringnnC I
.nnI J
ConcatnnJ P
(nnP Q
saltnnQ U
,nnU V
credentialsToHashnnW h
)nnh i
)nni j
;nnj k
byteoo  
[oo  !
]oo! "
hashedCredsAsBytesoo# 5
=oo6 7
sha512oo8 >
.oo> ?
ComputeHashoo? J
(ooJ K
bufferooK Q
)ooQ R
;ooR S
datapp  
=pp! "
IOpp# %
.pp% &
ToHexpp& +
(pp+ ,
hashedCredsAsBytespp, >
)pp> ?
;pp? @
}qq 
}rr 
}ss 
}tt 
}uu 	
ifvv 

(vv 
PRIVATE_CONST_TRUEvv 
)vv 
{ww 	
respzz 
.zz 
AppendCookiezz 
(zz 
newzz !

HttpCookiezz" ,
(zz, -
$strzz- 3
,zz3 4
datazz5 9
)zz9 :
)zz: ;
;zz; <
}{{ 	
}|| 
private 
void 
GoodG2B2 
( 
HttpRequest %
req& )
,) *
HttpResponse+ 7
resp8 <
)< =
{
ÄÄ 
string
ÅÅ 
data
ÅÅ 
;
ÅÅ 
if
ÇÇ 

(
ÇÇ  
PRIVATE_CONST_TRUE
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
using
ÑÑ 
(
ÑÑ 
SecureString
ÑÑ 
	securePwd
ÑÑ  )
=
ÑÑ* +
new
ÑÑ, /
SecureString
ÑÑ0 <
(
ÑÑ< =
)
ÑÑ= >
)
ÑÑ> ?
{
ÖÖ 
using
ÜÜ 
(
ÜÜ 
SecureString
ÜÜ #

secureUser
ÜÜ$ .
=
ÜÜ/ 0
new
ÜÜ1 4
SecureString
ÜÜ5 A
(
ÜÜA B
)
ÜÜB C
)
ÜÜC D
{
áá 
for
àà 
(
àà 
int
àà 
i
àà 
=
àà  
$num
àà! "
;
àà" #
i
àà$ %
<
àà& '
$str
àà( 3
.
àà3 4
Length
àà4 :
;
àà: ;
i
àà< =
++
àà= ?
)
àà? @
{
ââ 
	securePwd
ãã !
.
ãã! "

AppendChar
ãã" ,
(
ãã, -
$str
ãã- 8
[
ãã8 9
i
ãã9 :
]
ãã: ;
)
ãã; <
;
ãã< =
}
åå 
for
çç 
(
çç 
int
çç 
i
çç 
=
çç  
$num
çç! "
;
çç" #
i
çç$ %
<
çç& '
$str
çç( .
.
çç. /
Length
çç/ 5
;
çç5 6
i
çç7 8
++
çç8 :
)
çç: ;
{
éé 
	securePwd
êê !
.
êê! "

AppendChar
êê" ,
(
êê, -
$str
êê- 3
[
êê3 4
i
êê4 5
]
êê5 6
)
êê6 7
;
êê7 8
}
ëë 
{
ìì 
string
îî 
salt
îî #
=
îî$ %
$str
îî& 4
;
îî4 5
using
ïï 
(
ïï )
SHA512CryptoServiceProvider
ïï :
sha512
ïï; A
=
ïïB C
new
ïïD G)
SHA512CryptoServiceProvider
ïïH c
(
ïïc d
)
ïïd e
)
ïïe f
{
ññ 
string
óó "
credentialsToHash
óó# 4
=
óó5 6

secureUser
óó7 A
.
óóA B
ToString
óóB J
(
óóJ K
)
óóK L
+
óóM N
$str
óóO R
+
óóS T
	securePwd
óóU ^
.
óó^ _
ToString
óó_ g
(
óóg h
)
óóh i
;
óói j
byte
òò  
[
òò  !
]
òò! "
buffer
òò# )
=
òò* +
Encoding
òò, 4
.
òò4 5
UTF8
òò5 9
.
òò9 :
GetBytes
òò: B
(
òòB C
string
òòC I
.
òòI J
Concat
òòJ P
(
òòP Q
salt
òòQ U
,
òòU V
credentialsToHash
òòW h
)
òòh i
)
òòi j
;
òòj k
byte
ôô  
[
ôô  !
]
ôô! " 
hashedCredsAsBytes
ôô# 5
=
ôô6 7
sha512
ôô8 >
.
ôô> ?
ComputeHash
ôô? J
(
ôôJ K
buffer
ôôK Q
)
ôôQ R
;
ôôR S
data
öö  
=
öö! "
IO
öö# %
.
öö% &
ToHex
öö& +
(
öö+ , 
hashedCredsAsBytes
öö, >
)
öö> ?
;
öö? @
}
õõ 
}
úú 
}
ùù 
}
ûû 
}
üü 	
else
†† 
{
°° 	
data
§§ 
=
§§ 
null
§§ 
;
§§ 
}
•• 	
if
¶¶ 

(
¶¶  
PRIVATE_CONST_TRUE
¶¶ 
)
¶¶ 
{
ßß 	
resp
™™ 
.
™™ 
AppendCookie
™™ 
(
™™ 
new
™™ !

HttpCookie
™™" ,
(
™™, -
$str
™™- 3
,
™™3 4
data
™™5 9
)
™™9 :
)
™™: ;
;
™™; <
}
´´ 	
}
¨¨ 
private
ØØ 
void
ØØ 
GoodB2G1
ØØ 
(
ØØ 
HttpRequest
ØØ %
req
ØØ& )
,
ØØ) *
HttpResponse
ØØ+ 7
resp
ØØ8 <
)
ØØ< =
{
∞∞ 
string
±± 
data
±± 
;
±± 
if
≤≤ 

(
≤≤  
PRIVATE_CONST_TRUE
≤≤ 
)
≤≤ 
{
≥≥ 	
using
¥¥ 
(
¥¥ 
SecureString
¥¥ 
	securePwd
¥¥  )
=
¥¥* +
new
¥¥, /
SecureString
¥¥0 <
(
¥¥< =
)
¥¥= >
)
¥¥> ?
{
µµ 
using
∂∂ 
(
∂∂ 
SecureString
∂∂ #

secureUser
∂∂$ .
=
∂∂/ 0
new
∂∂1 4
SecureString
∂∂5 A
(
∂∂A B
)
∂∂B C
)
∂∂C D
{
∑∑ 
for
∏∏ 
(
∏∏ 
int
∏∏ 
i
∏∏ 
=
∏∏  
$num
∏∏! "
;
∏∏" #
i
∏∏$ %
<
∏∏& '
$str
∏∏( 3
.
∏∏3 4
Length
∏∏4 :
;
∏∏: ;
i
∏∏< =
++
∏∏= ?
)
∏∏? @
{
ππ 
	securePwd
ªª !
.
ªª! "

AppendChar
ªª" ,
(
ªª, -
$str
ªª- 8
[
ªª8 9
i
ªª9 :
]
ªª: ;
)
ªª; <
;
ªª< =
}
ºº 
for
ΩΩ 
(
ΩΩ 
int
ΩΩ 
i
ΩΩ 
=
ΩΩ  
$num
ΩΩ! "
;
ΩΩ" #
i
ΩΩ$ %
<
ΩΩ& '
$str
ΩΩ( .
.
ΩΩ. /
Length
ΩΩ/ 5
;
ΩΩ5 6
i
ΩΩ7 8
++
ΩΩ8 :
)
ΩΩ: ;
{
ææ 
	securePwd
¿¿ !
.
¿¿! "

AppendChar
¿¿" ,
(
¿¿, -
$str
¿¿- 3
[
¿¿3 4
i
¿¿4 5
]
¿¿5 6
)
¿¿6 7
;
¿¿7 8
}
¡¡ 
data
√√ 
=
√√ 

secureUser
√√ %
.
√√% &
ToString
√√& .
(
√√. /
)
√√/ 0
+
√√1 2
$str
√√3 6
+
√√7 8
	securePwd
√√9 B
.
√√B C
ToString
√√C K
(
√√K L
)
√√L M
;
√√M N
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
else
«« 
{
»» 	
data
ÀÀ 
=
ÀÀ 
null
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
if
ÕÕ 

(
ÕÕ !
PRIVATE_CONST_FALSE
ÕÕ 
)
ÕÕ  
{
ŒŒ 	
IO
–– 
.
–– 
	WriteLine
–– 
(
–– 
$str
–– /
)
––/ 0
;
––0 1
}
—— 	
else
““ 
{
”” 	
{
’’ 
string
÷÷ 
salt
÷÷ 
=
÷÷ 
$str
÷÷ ,
;
÷÷, -
using
◊◊ 
(
◊◊ )
SHA512CryptoServiceProvider
◊◊ 2
sha512
◊◊3 9
=
◊◊: ;
new
◊◊< ?)
SHA512CryptoServiceProvider
◊◊@ [
(
◊◊[ \
)
◊◊\ ]
)
◊◊] ^
{
ÿÿ 
byte
ŸŸ 
[
ŸŸ 
]
ŸŸ 
buffer
ŸŸ !
=
ŸŸ" #
Encoding
ŸŸ$ ,
.
ŸŸ, -
UTF8
ŸŸ- 1
.
ŸŸ1 2
GetBytes
ŸŸ2 :
(
ŸŸ: ;
string
ŸŸ; A
.
ŸŸA B
Concat
ŸŸB H
(
ŸŸH I
salt
ŸŸI M
,
ŸŸM N
data
ŸŸO S
)
ŸŸS T
)
ŸŸT U
;
ŸŸU V
byte
⁄⁄ 
[
⁄⁄ 
]
⁄⁄  
hashedCredsAsBytes
⁄⁄ -
=
⁄⁄. /
sha512
⁄⁄0 6
.
⁄⁄6 7
ComputeHash
⁄⁄7 B
(
⁄⁄B C
buffer
⁄⁄C I
)
⁄⁄I J
;
⁄⁄J K
data
€€ 
=
€€ 
IO
€€ 
.
€€ 
ToHex
€€ #
(
€€# $ 
hashedCredsAsBytes
€€$ 6
)
€€6 7
;
€€7 8
}
‹‹ 
}
›› 
resp
ﬁﬁ 
.
ﬁﬁ 
AppendCookie
ﬁﬁ 
(
ﬁﬁ 
new
ﬁﬁ !

HttpCookie
ﬁﬁ" ,
(
ﬁﬁ, -
$str
ﬁﬁ- 3
,
ﬁﬁ3 4
data
ﬁﬁ5 9
)
ﬁﬁ9 :
)
ﬁﬁ: ;
;
ﬁﬁ; <
}
ﬂﬂ 	
}
‡‡ 
private
„„ 
void
„„ 
GoodB2G2
„„ 
(
„„ 
HttpRequest
„„ %
req
„„& )
,
„„) *
HttpResponse
„„+ 7
resp
„„8 <
)
„„< =
{
‰‰ 
string
ÂÂ 
data
ÂÂ 
;
ÂÂ 
if
ÊÊ 

(
ÊÊ  
PRIVATE_CONST_TRUE
ÊÊ 
)
ÊÊ 
{
ÁÁ 	
using
ËË 
(
ËË 
SecureString
ËË 
	securePwd
ËË  )
=
ËË* +
new
ËË, /
SecureString
ËË0 <
(
ËË< =
)
ËË= >
)
ËË> ?
{
ÈÈ 
using
ÍÍ 
(
ÍÍ 
SecureString
ÍÍ #

secureUser
ÍÍ$ .
=
ÍÍ/ 0
new
ÍÍ1 4
SecureString
ÍÍ5 A
(
ÍÍA B
)
ÍÍB C
)
ÍÍC D
{
ÎÎ 
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
i
ÏÏ 
=
ÏÏ  
$num
ÏÏ! "
;
ÏÏ" #
i
ÏÏ$ %
<
ÏÏ& '
$str
ÏÏ( 3
.
ÏÏ3 4
Length
ÏÏ4 :
;
ÏÏ: ;
i
ÏÏ< =
++
ÏÏ= ?
)
ÏÏ? @
{
ÌÌ 
	securePwd
ÔÔ !
.
ÔÔ! "

AppendChar
ÔÔ" ,
(
ÔÔ, -
$str
ÔÔ- 8
[
ÔÔ8 9
i
ÔÔ9 :
]
ÔÔ: ;
)
ÔÔ; <
;
ÔÔ< =
}
 
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ  
$num
ÒÒ! "
;
ÒÒ" #
i
ÒÒ$ %
<
ÒÒ& '
$str
ÒÒ( .
.
ÒÒ. /
Length
ÒÒ/ 5
;
ÒÒ5 6
i
ÒÒ7 8
++
ÒÒ8 :
)
ÒÒ: ;
{
ÚÚ 
	securePwd
ÙÙ !
.
ÙÙ! "

AppendChar
ÙÙ" ,
(
ÙÙ, -
$str
ÙÙ- 3
[
ÙÙ3 4
i
ÙÙ4 5
]
ÙÙ5 6
)
ÙÙ6 7
;
ÙÙ7 8
}
ıı 
data
˜˜ 
=
˜˜ 

secureUser
˜˜ %
.
˜˜% &
ToString
˜˜& .
(
˜˜. /
)
˜˜/ 0
+
˜˜1 2
$str
˜˜3 6
+
˜˜7 8
	securePwd
˜˜9 B
.
˜˜B C
ToString
˜˜C K
(
˜˜K L
)
˜˜L M
;
˜˜M N
}
¯¯ 
}
˘˘ 
}
˙˙ 	
else
˚˚ 
{
¸¸ 	
data
ˇˇ 
=
ˇˇ 
null
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
if
ÅÅ 

(
ÅÅ  
PRIVATE_CONST_TRUE
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
{
ÑÑ 
string
ÖÖ 
salt
ÖÖ 
=
ÖÖ 
$str
ÖÖ ,
;
ÖÖ, -
using
ÜÜ 
(
ÜÜ )
SHA512CryptoServiceProvider
ÜÜ 2
sha512
ÜÜ3 9
=
ÜÜ: ;
new
ÜÜ< ?)
SHA512CryptoServiceProvider
ÜÜ@ [
(
ÜÜ[ \
)
ÜÜ\ ]
)
ÜÜ] ^
{
áá 
byte
àà 
[
àà 
]
àà 
buffer
àà !
=
àà" #
Encoding
àà$ ,
.
àà, -
UTF8
àà- 1
.
àà1 2
GetBytes
àà2 :
(
àà: ;
string
àà; A
.
ààA B
Concat
ààB H
(
ààH I
salt
ààI M
,
ààM N
data
ààO S
)
ààS T
)
ààT U
;
ààU V
byte
ââ 
[
ââ 
]
ââ  
hashedCredsAsBytes
ââ -
=
ââ. /
sha512
ââ0 6
.
ââ6 7
ComputeHash
ââ7 B
(
ââB C
buffer
ââC I
)
ââI J
;
ââJ K
data
ää 
=
ää 
IO
ää 
.
ää 
ToHex
ää #
(
ää# $ 
hashedCredsAsBytes
ää$ 6
)
ää6 7
;
ää7 8
}
ãã 
}
åå 
resp
çç 
.
çç 
AppendCookie
çç 
(
çç 
new
çç !

HttpCookie
çç" ,
(
çç, -
$str
çç- 3
,
çç3 4
data
çç5 9
)
çç9 :
)
çç: ;
;
çç; <
}
éé 	
}
èè 
public
ëë 

override
ëë 
void
ëë 
Good
ëë 
(
ëë 
HttpRequest
ëë )
req
ëë* -
,
ëë- .
HttpResponse
ëë/ ;
resp
ëë< @
)
ëë@ A
{
íí 
GoodG2B1
ìì 
(
ìì 
req
ìì 
,
ìì 
resp
ìì 
)
ìì 
;
ìì 
GoodG2B2
îî 
(
îî 
req
îî 
,
îî 
resp
îî 
)
îî 
;
îî 
GoodB2G1
ïï 
(
ïï 
req
ïï 
,
ïï 
resp
ïï 
)
ïï 
;
ïï 
GoodB2G2
ññ 
(
ññ 
req
ññ 
,
ññ 
resp
ññ 
)
ññ 
;
ññ 
}
óó 
}ôô 
}öö €ò
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_05.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_05 0
:1 2
AbstractTestCaseWeb3 F
{ 
private## 
bool## 
privateTrue## 
=## 
true## #
;### $
private$$ 
bool$$ 
privateFalse$$ 
=$$ 
false$$  %
;$$% &
public&& 

override&& 
void&& 
Bad&& 
(&& 
HttpRequest&& (
req&&) ,
,&&, -
HttpResponse&&. :
resp&&; ?
)&&? @
{'' 
string(( 
data(( 
;(( 
if)) 

()) 
privateTrue)) 
))) 
{** 	
using++ 
(++ 
SecureString++ 
	securePwd++  )
=++* +
new++, /
SecureString++0 <
(++< =
)++= >
)++> ?
{,, 
using-- 
(-- 
SecureString-- #

secureUser--$ .
=--/ 0
new--1 4
SecureString--5 A
(--A B
)--B C
)--C D
{.. 
for// 
(// 
int// 
i// 
=//  
$num//! "
;//" #
i//$ %
<//& '
$str//( 3
.//3 4
Length//4 :
;//: ;
i//< =
++//= ?
)//? @
{00 
	securePwd22 !
.22! "

AppendChar22" ,
(22, -
$str22- 8
[228 9
i229 :
]22: ;
)22; <
;22< =
}33 
for44 
(44 
int44 
i44 
=44  
$num44! "
;44" #
i44$ %
<44& '
$str44( .
.44. /
Length44/ 5
;445 6
i447 8
++448 :
)44: ;
{55 
	securePwd77 !
.77! "

AppendChar77" ,
(77, -
$str77- 3
[773 4
i774 5
]775 6
)776 7
;777 8
}88 
data:: 
=:: 

secureUser:: %
.::% &
ToString::& .
(::. /
)::/ 0
+::1 2
$str::3 6
+::7 8
	securePwd::9 B
.::B C
ToString::C K
(::K L
)::L M
;::M N
};; 
}<< 
}== 	
else>> 
{?? 	
dataBB 
=BB 
nullBB 
;BB 
}CC 	
ifDD 

(DD 
privateTrueDD 
)DD 
{EE 	
respHH 
.HH 
AppendCookieHH 
(HH 
newHH !

HttpCookieHH" ,
(HH, -
$strHH- 3
,HH3 4
dataHH5 9
)HH9 :
)HH: ;
;HH; <
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
HttpRequestNN %
reqNN& )
,NN) *
HttpResponseNN+ 7
respNN8 <
)NN< =
{OO 
stringPP 
dataPP 
;PP 
ifQQ 

(QQ 
privateFalseQQ 
)QQ 
{RR 	
dataUU 
=UU 
nullUU 
;UU 
}VV 	
elseWW 
{XX 	
usingYY 
(YY 
SecureStringYY 
	securePwdYY  )
=YY* +
newYY, /
SecureStringYY0 <
(YY< =
)YY= >
)YY> ?
{ZZ 
using[[ 
([[ 
SecureString[[ #

secureUser[[$ .
=[[/ 0
new[[1 4
SecureString[[5 A
([[A B
)[[B C
)[[C D
{\\ 
for]] 
(]] 
int]] 
i]] 
=]]  
$num]]! "
;]]" #
i]]$ %
<]]& '
$str]]( 3
.]]3 4
Length]]4 :
;]]: ;
i]]< =
++]]= ?
)]]? @
{^^ 
	securePwd`` !
.``! "

AppendChar``" ,
(``, -
$str``- 8
[``8 9
i``9 :
]``: ;
)``; <
;``< =
}aa 
forbb 
(bb 
intbb 
ibb 
=bb  
$numbb! "
;bb" #
ibb$ %
<bb& '
$strbb( .
.bb. /
Lengthbb/ 5
;bb5 6
ibb7 8
++bb8 :
)bb: ;
{cc 
	securePwdee !
.ee! "

AppendCharee" ,
(ee, -
$stree- 3
[ee3 4
iee4 5
]ee5 6
)ee6 7
;ee7 8
}ff 
{hh 
stringii 
saltii #
=ii$ %
$strii& 4
;ii4 5
usingjj 
(jj '
SHA512CryptoServiceProviderjj :
sha512jj; A
=jjB C
newjjD G'
SHA512CryptoServiceProviderjjH c
(jjc d
)jjd e
)jje f
{kk 
stringll "
credentialsToHashll# 4
=ll5 6

secureUserll7 A
.llA B
ToStringllB J
(llJ K
)llK L
+llM N
$strllO R
+llS T
	securePwdllU ^
.ll^ _
ToStringll_ g
(llg h
)llh i
;lli j
bytemm  
[mm  !
]mm! "
buffermm# )
=mm* +
Encodingmm, 4
.mm4 5
UTF8mm5 9
.mm9 :
GetBytesmm: B
(mmB C
stringmmC I
.mmI J
ConcatmmJ P
(mmP Q
saltmmQ U
,mmU V
credentialsToHashmmW h
)mmh i
)mmi j
;mmj k
bytenn  
[nn  !
]nn! "
hashedCredsAsBytesnn# 5
=nn6 7
sha512nn8 >
.nn> ?
ComputeHashnn? J
(nnJ K
buffernnK Q
)nnQ R
;nnR S
dataoo  
=oo! "
IOoo# %
.oo% &
ToHexoo& +
(oo+ ,
hashedCredsAsBytesoo, >
)oo> ?
;oo? @
}pp 
}qq 
}rr 
}ss 
}tt 	
ifuu 

(uu 
privateTrueuu 
)uu 
{vv 	
respyy 
.yy 
AppendCookieyy 
(yy 
newyy !

HttpCookieyy" ,
(yy, -
$stryy- 3
,yy3 4
datayy5 9
)yy9 :
)yy: ;
;yy; <
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
HttpRequest~~ %
req~~& )
,~~) *
HttpResponse~~+ 7
resp~~8 <
)~~< =
{ 
string
ÄÄ 
data
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
privateTrue
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
using
ÉÉ 
(
ÉÉ 
SecureString
ÉÉ 
	securePwd
ÉÉ  )
=
ÉÉ* +
new
ÉÉ, /
SecureString
ÉÉ0 <
(
ÉÉ< =
)
ÉÉ= >
)
ÉÉ> ?
{
ÑÑ 
using
ÖÖ 
(
ÖÖ 
SecureString
ÖÖ #

secureUser
ÖÖ$ .
=
ÖÖ/ 0
new
ÖÖ1 4
SecureString
ÖÖ5 A
(
ÖÖA B
)
ÖÖB C
)
ÖÖC D
{
ÜÜ 
for
áá 
(
áá 
int
áá 
i
áá 
=
áá  
$num
áá! "
;
áá" #
i
áá$ %
<
áá& '
$str
áá( 3
.
áá3 4
Length
áá4 :
;
áá: ;
i
áá< =
++
áá= ?
)
áá? @
{
àà 
	securePwd
ää !
.
ää! "

AppendChar
ää" ,
(
ää, -
$str
ää- 8
[
ää8 9
i
ää9 :
]
ää: ;
)
ää; <
;
ää< =
}
ãã 
for
åå 
(
åå 
int
åå 
i
åå 
=
åå  
$num
åå! "
;
åå" #
i
åå$ %
<
åå& '
$str
åå( .
.
åå. /
Length
åå/ 5
;
åå5 6
i
åå7 8
++
åå8 :
)
åå: ;
{
çç 
	securePwd
èè !
.
èè! "

AppendChar
èè" ,
(
èè, -
$str
èè- 3
[
èè3 4
i
èè4 5
]
èè5 6
)
èè6 7
;
èè7 8
}
êê 
{
íí 
string
ìì 
salt
ìì #
=
ìì$ %
$str
ìì& 4
;
ìì4 5
using
îî 
(
îî )
SHA512CryptoServiceProvider
îî :
sha512
îî; A
=
îîB C
new
îîD G)
SHA512CryptoServiceProvider
îîH c
(
îîc d
)
îîd e
)
îîe f
{
ïï 
string
ññ "
credentialsToHash
ññ# 4
=
ññ5 6

secureUser
ññ7 A
.
ññA B
ToString
ññB J
(
ññJ K
)
ññK L
+
ññM N
$str
ññO R
+
ññS T
	securePwd
ññU ^
.
ññ^ _
ToString
ññ_ g
(
ññg h
)
ññh i
;
ññi j
byte
óó  
[
óó  !
]
óó! "
buffer
óó# )
=
óó* +
Encoding
óó, 4
.
óó4 5
UTF8
óó5 9
.
óó9 :
GetBytes
óó: B
(
óóB C
string
óóC I
.
óóI J
Concat
óóJ P
(
óóP Q
salt
óóQ U
,
óóU V
credentialsToHash
óóW h
)
óóh i
)
óói j
;
óój k
byte
òò  
[
òò  !
]
òò! " 
hashedCredsAsBytes
òò# 5
=
òò6 7
sha512
òò8 >
.
òò> ?
ComputeHash
òò? J
(
òòJ K
buffer
òòK Q
)
òòQ R
;
òòR S
data
ôô  
=
ôô! "
IO
ôô# %
.
ôô% &
ToHex
ôô& +
(
ôô+ , 
hashedCredsAsBytes
ôô, >
)
ôô> ?
;
ôô? @
}
öö 
}
õõ 
}
úú 
}
ùù 
}
ûû 	
else
üü 
{
†† 	
data
££ 
=
££ 
null
££ 
;
££ 
}
§§ 	
if
•• 

(
•• 
privateTrue
•• 
)
•• 
{
¶¶ 	
resp
©© 
.
©© 
AppendCookie
©© 
(
©© 
new
©© !

HttpCookie
©©" ,
(
©©, -
$str
©©- 3
,
©©3 4
data
©©5 9
)
©©9 :
)
©©: ;
;
©©; <
}
™™ 	
}
´´ 
private
ÆÆ 
void
ÆÆ 
GoodB2G1
ÆÆ 
(
ÆÆ 
HttpRequest
ÆÆ %
req
ÆÆ& )
,
ÆÆ) *
HttpResponse
ÆÆ+ 7
resp
ÆÆ8 <
)
ÆÆ< =
{
ØØ 
string
∞∞ 
data
∞∞ 
;
∞∞ 
if
±± 

(
±± 
privateTrue
±± 
)
±± 
{
≤≤ 	
using
≥≥ 
(
≥≥ 
SecureString
≥≥ 
	securePwd
≥≥  )
=
≥≥* +
new
≥≥, /
SecureString
≥≥0 <
(
≥≥< =
)
≥≥= >
)
≥≥> ?
{
¥¥ 
using
µµ 
(
µµ 
SecureString
µµ #

secureUser
µµ$ .
=
µµ/ 0
new
µµ1 4
SecureString
µµ5 A
(
µµA B
)
µµB C
)
µµC D
{
∂∂ 
for
∑∑ 
(
∑∑ 
int
∑∑ 
i
∑∑ 
=
∑∑  
$num
∑∑! "
;
∑∑" #
i
∑∑$ %
<
∑∑& '
$str
∑∑( 3
.
∑∑3 4
Length
∑∑4 :
;
∑∑: ;
i
∑∑< =
++
∑∑= ?
)
∑∑? @
{
∏∏ 
	securePwd
∫∫ !
.
∫∫! "

AppendChar
∫∫" ,
(
∫∫, -
$str
∫∫- 8
[
∫∫8 9
i
∫∫9 :
]
∫∫: ;
)
∫∫; <
;
∫∫< =
}
ªª 
for
ºº 
(
ºº 
int
ºº 
i
ºº 
=
ºº  
$num
ºº! "
;
ºº" #
i
ºº$ %
<
ºº& '
$str
ºº( .
.
ºº. /
Length
ºº/ 5
;
ºº5 6
i
ºº7 8
++
ºº8 :
)
ºº: ;
{
ΩΩ 
	securePwd
øø !
.
øø! "

AppendChar
øø" ,
(
øø, -
$str
øø- 3
[
øø3 4
i
øø4 5
]
øø5 6
)
øø6 7
;
øø7 8
}
¿¿ 
data
¬¬ 
=
¬¬ 

secureUser
¬¬ %
.
¬¬% &
ToString
¬¬& .
(
¬¬. /
)
¬¬/ 0
+
¬¬1 2
$str
¬¬3 6
+
¬¬7 8
	securePwd
¬¬9 B
.
¬¬B C
ToString
¬¬C K
(
¬¬K L
)
¬¬L M
;
¬¬M N
}
√√ 
}
ƒƒ 
}
≈≈ 	
else
∆∆ 
{
«« 	
data
   
=
   
null
   
;
   
}
ÀÀ 	
if
ÃÃ 

(
ÃÃ 
privateFalse
ÃÃ 
)
ÃÃ 
{
ÕÕ 	
IO
œœ 
.
œœ 
	WriteLine
œœ 
(
œœ 
$str
œœ /
)
œœ/ 0
;
œœ0 1
}
–– 	
else
—— 
{
““ 	
{
‘‘ 
string
’’ 
salt
’’ 
=
’’ 
$str
’’ ,
;
’’, -
using
÷÷ 
(
÷÷ )
SHA512CryptoServiceProvider
÷÷ 2
sha512
÷÷3 9
=
÷÷: ;
new
÷÷< ?)
SHA512CryptoServiceProvider
÷÷@ [
(
÷÷[ \
)
÷÷\ ]
)
÷÷] ^
{
◊◊ 
byte
ÿÿ 
[
ÿÿ 
]
ÿÿ 
buffer
ÿÿ !
=
ÿÿ" #
Encoding
ÿÿ$ ,
.
ÿÿ, -
UTF8
ÿÿ- 1
.
ÿÿ1 2
GetBytes
ÿÿ2 :
(
ÿÿ: ;
string
ÿÿ; A
.
ÿÿA B
Concat
ÿÿB H
(
ÿÿH I
salt
ÿÿI M
,
ÿÿM N
data
ÿÿO S
)
ÿÿS T
)
ÿÿT U
;
ÿÿU V
byte
ŸŸ 
[
ŸŸ 
]
ŸŸ  
hashedCredsAsBytes
ŸŸ -
=
ŸŸ. /
sha512
ŸŸ0 6
.
ŸŸ6 7
ComputeHash
ŸŸ7 B
(
ŸŸB C
buffer
ŸŸC I
)
ŸŸI J
;
ŸŸJ K
data
⁄⁄ 
=
⁄⁄ 
IO
⁄⁄ 
.
⁄⁄ 
ToHex
⁄⁄ #
(
⁄⁄# $ 
hashedCredsAsBytes
⁄⁄$ 6
)
⁄⁄6 7
;
⁄⁄7 8
}
€€ 
}
‹‹ 
resp
›› 
.
›› 
AppendCookie
›› 
(
›› 
new
›› !

HttpCookie
››" ,
(
››, -
$str
››- 3
,
››3 4
data
››5 9
)
››9 :
)
››: ;
;
››; <
}
ﬁﬁ 	
}
ﬂﬂ 
private
‚‚ 
void
‚‚ 
GoodB2G2
‚‚ 
(
‚‚ 
HttpRequest
‚‚ %
req
‚‚& )
,
‚‚) *
HttpResponse
‚‚+ 7
resp
‚‚8 <
)
‚‚< =
{
„„ 
string
‰‰ 
data
‰‰ 
;
‰‰ 
if
ÂÂ 

(
ÂÂ 
privateTrue
ÂÂ 
)
ÂÂ 
{
ÊÊ 	
using
ÁÁ 
(
ÁÁ 
SecureString
ÁÁ 
	securePwd
ÁÁ  )
=
ÁÁ* +
new
ÁÁ, /
SecureString
ÁÁ0 <
(
ÁÁ< =
)
ÁÁ= >
)
ÁÁ> ?
{
ËË 
using
ÈÈ 
(
ÈÈ 
SecureString
ÈÈ #

secureUser
ÈÈ$ .
=
ÈÈ/ 0
new
ÈÈ1 4
SecureString
ÈÈ5 A
(
ÈÈA B
)
ÈÈB C
)
ÈÈC D
{
ÍÍ 
for
ÎÎ 
(
ÎÎ 
int
ÎÎ 
i
ÎÎ 
=
ÎÎ  
$num
ÎÎ! "
;
ÎÎ" #
i
ÎÎ$ %
<
ÎÎ& '
$str
ÎÎ( 3
.
ÎÎ3 4
Length
ÎÎ4 :
;
ÎÎ: ;
i
ÎÎ< =
++
ÎÎ= ?
)
ÎÎ? @
{
ÏÏ 
	securePwd
ÓÓ !
.
ÓÓ! "

AppendChar
ÓÓ" ,
(
ÓÓ, -
$str
ÓÓ- 8
[
ÓÓ8 9
i
ÓÓ9 :
]
ÓÓ: ;
)
ÓÓ; <
;
ÓÓ< =
}
ÔÔ 
for
 
(
 
int
 
i
 
=
  
$num
! "
;
" #
i
$ %
<
& '
$str
( .
.
. /
Length
/ 5
;
5 6
i
7 8
++
8 :
)
: ;
{
ÒÒ 
	securePwd
ÛÛ !
.
ÛÛ! "

AppendChar
ÛÛ" ,
(
ÛÛ, -
$str
ÛÛ- 3
[
ÛÛ3 4
i
ÛÛ4 5
]
ÛÛ5 6
)
ÛÛ6 7
;
ÛÛ7 8
}
ÙÙ 
data
ˆˆ 
=
ˆˆ 

secureUser
ˆˆ %
.
ˆˆ% &
ToString
ˆˆ& .
(
ˆˆ. /
)
ˆˆ/ 0
+
ˆˆ1 2
$str
ˆˆ3 6
+
ˆˆ7 8
	securePwd
ˆˆ9 B
.
ˆˆB C
ToString
ˆˆC K
(
ˆˆK L
)
ˆˆL M
;
ˆˆM N
}
˜˜ 
}
¯¯ 
}
˘˘ 	
else
˙˙ 
{
˚˚ 	
data
˛˛ 
=
˛˛ 
null
˛˛ 
;
˛˛ 
}
ˇˇ 	
if
ÄÄ 

(
ÄÄ 
privateTrue
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
{
ÉÉ 
string
ÑÑ 
salt
ÑÑ 
=
ÑÑ 
$str
ÑÑ ,
;
ÑÑ, -
using
ÖÖ 
(
ÖÖ )
SHA512CryptoServiceProvider
ÖÖ 2
sha512
ÖÖ3 9
=
ÖÖ: ;
new
ÖÖ< ?)
SHA512CryptoServiceProvider
ÖÖ@ [
(
ÖÖ[ \
)
ÖÖ\ ]
)
ÖÖ] ^
{
ÜÜ 
byte
áá 
[
áá 
]
áá 
buffer
áá !
=
áá" #
Encoding
áá$ ,
.
áá, -
UTF8
áá- 1
.
áá1 2
GetBytes
áá2 :
(
áá: ;
string
áá; A
.
ááA B
Concat
ááB H
(
ááH I
salt
ááI M
,
ááM N
data
ááO S
)
ááS T
)
ááT U
;
ááU V
byte
àà 
[
àà 
]
àà  
hashedCredsAsBytes
àà -
=
àà. /
sha512
àà0 6
.
àà6 7
ComputeHash
àà7 B
(
ààB C
buffer
ààC I
)
ààI J
;
ààJ K
data
ââ 
=
ââ 
IO
ââ 
.
ââ 
ToHex
ââ #
(
ââ# $ 
hashedCredsAsBytes
ââ$ 6
)
ââ6 7
;
ââ7 8
}
ää 
}
ãã 
resp
åå 
.
åå 
AppendCookie
åå 
(
åå 
new
åå !

HttpCookie
åå" ,
(
åå, -
$str
åå- 3
,
åå3 4
data
åå5 9
)
åå9 :
)
åå: ;
;
åå; <
}
çç 	
}
éé 
public
êê 

override
êê 
void
êê 
Good
êê 
(
êê 
HttpRequest
êê )
req
êê* -
,
êê- .
HttpResponse
êê/ ;
resp
êê< @
)
êê@ A
{
ëë 
GoodG2B1
íí 
(
íí 
req
íí 
,
íí 
resp
íí 
)
íí 
;
íí 
GoodG2B2
ìì 
(
ìì 
req
ìì 
,
ìì 
resp
ìì 
)
ìì 
;
ìì 
GoodB2G1
îî 
(
îî 
req
îî 
,
îî 
resp
îî 
)
îî 
;
îî 
GoodB2G2
ïï 
(
ïï 
req
ïï 
,
ïï 
resp
ïï 
)
ïï 
;
ïï 
}
ññ 
}òò 
}ôô ¨õ
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_06.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_06 0
:1 2
AbstractTestCaseWeb3 F
{ 
private## 
const## 
int## 
PRIVATE_CONST_FIVE## (
=##) *
$num##+ ,
;##, -
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_FIVE(( 
==((  
$num((  !
)((! "
{)) 	
using** 
(** 
SecureString** 
	securePwd**  )
=*** +
new**, /
SecureString**0 <
(**< =
)**= >
)**> ?
{++ 
using,, 
(,, 
SecureString,, #

secureUser,,$ .
=,,/ 0
new,,1 4
SecureString,,5 A
(,,A B
),,B C
),,C D
{-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( 3
...3 4
Length..4 :
;..: ;
i..< =
++..= ?
)..? @
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 8
[118 9
i119 :
]11: ;
)11; <
;11< =
}22 
for33 
(33 
int33 
i33 
=33  
$num33! "
;33" #
i33$ %
<33& '
$str33( .
.33. /
Length33/ 5
;335 6
i337 8
++338 :
)33: ;
{44 
	securePwd66 !
.66! "

AppendChar66" ,
(66, -
$str66- 3
[663 4
i664 5
]665 6
)666 7
;667 8
}77 
data99 
=99 

secureUser99 %
.99% &
ToString99& .
(99. /
)99/ 0
+991 2
$str993 6
+997 8
	securePwd999 B
.99B C
ToString99C K
(99K L
)99L M
;99M N
}:: 
};; 
}<< 	
else== 
{>> 	
dataAA 
=AA 
nullAA 
;AA 
}BB 	
ifCC 

(CC 
PRIVATE_CONST_FIVECC 
==CC  
$numCC  !
)CC! "
{DD 	
respGG 
.GG 
AppendCookieGG 
(GG 
newGG !

HttpCookieGG" ,
(GG, -
$strGG- 3
,GG3 4
dataGG5 9
)GG9 :
)GG: ;
;GG; <
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
PRIVATE_CONST_FIVEPP 
!=PP  
$numPP  !
)PP! "
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
usingXX 
(XX 
SecureStringXX 
	securePwdXX  )
=XX* +
newXX, /
SecureStringXX0 <
(XX< =
)XX= >
)XX> ?
{YY 
usingZZ 
(ZZ 
SecureStringZZ #

secureUserZZ$ .
=ZZ/ 0
newZZ1 4
SecureStringZZ5 A
(ZZA B
)ZZB C
)ZZC D
{[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( 3
.\\3 4
Length\\4 :
;\\: ;
i\\< =
++\\= ?
)\\? @
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 8
[__8 9
i__9 :
]__: ;
)__; <
;__< =
}`` 
foraa 
(aa 
intaa 
iaa 
=aa  
$numaa! "
;aa" #
iaa$ %
<aa& '
$straa( .
.aa. /
Lengthaa/ 5
;aa5 6
iaa7 8
++aa8 :
)aa: ;
{bb 
	securePwddd !
.dd! "

AppendChardd" ,
(dd, -
$strdd- 3
[dd3 4
idd4 5
]dd5 6
)dd6 7
;dd7 8
}ee 
{gg 
stringhh 
salthh #
=hh$ %
$strhh& 4
;hh4 5
usingii 
(ii '
SHA512CryptoServiceProviderii :
sha512ii; A
=iiB C
newiiD G'
SHA512CryptoServiceProvideriiH c
(iic d
)iid e
)iie f
{jj 
stringkk "
credentialsToHashkk# 4
=kk5 6

secureUserkk7 A
.kkA B
ToStringkkB J
(kkJ K
)kkK L
+kkM N
$strkkO R
+kkS T
	securePwdkkU ^
.kk^ _
ToStringkk_ g
(kkg h
)kkh i
;kki j
bytell  
[ll  !
]ll! "
bufferll# )
=ll* +
Encodingll, 4
.ll4 5
UTF8ll5 9
.ll9 :
GetBytesll: B
(llB C
stringllC I
.llI J
ConcatllJ P
(llP Q
saltllQ U
,llU V
credentialsToHashllW h
)llh i
)lli j
;llj k
bytemm  
[mm  !
]mm! "
hashedCredsAsBytesmm# 5
=mm6 7
sha512mm8 >
.mm> ?
ComputeHashmm? J
(mmJ K
buffermmK Q
)mmQ R
;mmR S
datann  
=nn! "
IOnn# %
.nn% &
ToHexnn& +
(nn+ ,
hashedCredsAsBytesnn, >
)nn> ?
;nn? @
}oo 
}pp 
}qq 
}rr 
}ss 	
iftt 

(tt 
PRIVATE_CONST_FIVEtt 
==tt  
$numtt  !
)tt! "
{uu 	
respxx 
.xx 
AppendCookiexx 
(xx 
newxx !

HttpCookiexx" ,
(xx, -
$strxx- 3
,xx3 4
dataxx5 9
)xx9 :
)xx: ;
;xx; <
}yy 	
}zz 
private}} 
void}} 
GoodG2B2}} 
(}} 
HttpRequest}} %
req}}& )
,}}) *
HttpResponse}}+ 7
resp}}8 <
)}}< =
{~~ 
string 
data 
; 
if
ÄÄ 

(
ÄÄ  
PRIVATE_CONST_FIVE
ÄÄ 
==
ÄÄ  
$num
ÄÄ  !
)
ÄÄ! "
{
ÅÅ 	
using
ÇÇ 
(
ÇÇ 
SecureString
ÇÇ 
	securePwd
ÇÇ  )
=
ÇÇ* +
new
ÇÇ, /
SecureString
ÇÇ0 <
(
ÇÇ< =
)
ÇÇ= >
)
ÇÇ> ?
{
ÉÉ 
using
ÑÑ 
(
ÑÑ 
SecureString
ÑÑ #

secureUser
ÑÑ$ .
=
ÑÑ/ 0
new
ÑÑ1 4
SecureString
ÑÑ5 A
(
ÑÑA B
)
ÑÑB C
)
ÑÑC D
{
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( 3
.
ÜÜ3 4
Length
ÜÜ4 :
;
ÜÜ: ;
i
ÜÜ< =
++
ÜÜ= ?
)
ÜÜ? @
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 8
[
ââ8 9
i
ââ9 :
]
ââ: ;
)
ââ; <
;
ââ< =
}
ää 
for
ãã 
(
ãã 
int
ãã 
i
ãã 
=
ãã  
$num
ãã! "
;
ãã" #
i
ãã$ %
<
ãã& '
$str
ãã( .
.
ãã. /
Length
ãã/ 5
;
ãã5 6
i
ãã7 8
++
ãã8 :
)
ãã: ;
{
åå 
	securePwd
éé !
.
éé! "

AppendChar
éé" ,
(
éé, -
$str
éé- 3
[
éé3 4
i
éé4 5
]
éé5 6
)
éé6 7
;
éé7 8
}
èè 
{
ëë 
string
íí 
salt
íí #
=
íí$ %
$str
íí& 4
;
íí4 5
using
ìì 
(
ìì )
SHA512CryptoServiceProvider
ìì :
sha512
ìì; A
=
ììB C
new
ììD G)
SHA512CryptoServiceProvider
ììH c
(
ììc d
)
ììd e
)
ììe f
{
îî 
string
ïï "
credentialsToHash
ïï# 4
=
ïï5 6

secureUser
ïï7 A
.
ïïA B
ToString
ïïB J
(
ïïJ K
)
ïïK L
+
ïïM N
$str
ïïO R
+
ïïS T
	securePwd
ïïU ^
.
ïï^ _
ToString
ïï_ g
(
ïïg h
)
ïïh i
;
ïïi j
byte
ññ  
[
ññ  !
]
ññ! "
buffer
ññ# )
=
ññ* +
Encoding
ññ, 4
.
ññ4 5
UTF8
ññ5 9
.
ññ9 :
GetBytes
ññ: B
(
ññB C
string
ññC I
.
ññI J
Concat
ññJ P
(
ññP Q
salt
ññQ U
,
ññU V
credentialsToHash
ññW h
)
ññh i
)
ññi j
;
ññj k
byte
óó  
[
óó  !
]
óó! " 
hashedCredsAsBytes
óó# 5
=
óó6 7
sha512
óó8 >
.
óó> ?
ComputeHash
óó? J
(
óóJ K
buffer
óóK Q
)
óóQ R
;
óóR S
data
òò  
=
òò! "
IO
òò# %
.
òò% &
ToHex
òò& +
(
òò+ , 
hashedCredsAsBytes
òò, >
)
òò> ?
;
òò? @
}
ôô 
}
öö 
}
õõ 
}
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
}
££ 	
if
§§ 

(
§§  
PRIVATE_CONST_FIVE
§§ 
==
§§  
$num
§§  !
)
§§! "
{
•• 	
resp
®® 
.
®® 
AppendCookie
®® 
(
®® 
new
®® !

HttpCookie
®®" ,
(
®®, -
$str
®®- 3
,
®®3 4
data
®®5 9
)
®®9 :
)
®®: ;
;
®®; <
}
©© 	
}
™™ 
private
≠≠ 
void
≠≠ 
GoodB2G1
≠≠ 
(
≠≠ 
HttpRequest
≠≠ %
req
≠≠& )
,
≠≠) *
HttpResponse
≠≠+ 7
resp
≠≠8 <
)
≠≠< =
{
ÆÆ 
string
ØØ 
data
ØØ 
;
ØØ 
if
∞∞ 

(
∞∞  
PRIVATE_CONST_FIVE
∞∞ 
==
∞∞  
$num
∞∞  !
)
∞∞! "
{
±± 	
using
≤≤ 
(
≤≤ 
SecureString
≤≤ 
	securePwd
≤≤  )
=
≤≤* +
new
≤≤, /
SecureString
≤≤0 <
(
≤≤< =
)
≤≤= >
)
≤≤> ?
{
≥≥ 
using
¥¥ 
(
¥¥ 
SecureString
¥¥ #

secureUser
¥¥$ .
=
¥¥/ 0
new
¥¥1 4
SecureString
¥¥5 A
(
¥¥A B
)
¥¥B C
)
¥¥C D
{
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( 3
.
∂∂3 4
Length
∂∂4 :
;
∂∂: ;
i
∂∂< =
++
∂∂= ?
)
∂∂? @
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 8
[
ππ8 9
i
ππ9 :
]
ππ: ;
)
ππ; <
;
ππ< =
}
∫∫ 
for
ªª 
(
ªª 
int
ªª 
i
ªª 
=
ªª  
$num
ªª! "
;
ªª" #
i
ªª$ %
<
ªª& '
$str
ªª( .
.
ªª. /
Length
ªª/ 5
;
ªª5 6
i
ªª7 8
++
ªª8 :
)
ªª: ;
{
ºº 
	securePwd
ææ !
.
ææ! "

AppendChar
ææ" ,
(
ææ, -
$str
ææ- 3
[
ææ3 4
i
ææ4 5
]
ææ5 6
)
ææ6 7
;
ææ7 8
}
øø 
data
¡¡ 
=
¡¡ 

secureUser
¡¡ %
.
¡¡% &
ToString
¡¡& .
(
¡¡. /
)
¡¡/ 0
+
¡¡1 2
$str
¡¡3 6
+
¡¡7 8
	securePwd
¡¡9 B
.
¡¡B C
ToString
¡¡C K
(
¡¡K L
)
¡¡L M
;
¡¡M N
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
data
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ  
PRIVATE_CONST_FIVE
ÀÀ 
!=
ÀÀ  
$num
ÀÀ  !
)
ÀÀ! "
{
ÃÃ 	
IO
ŒŒ 
.
ŒŒ 
	WriteLine
ŒŒ 
(
ŒŒ 
$str
ŒŒ /
)
ŒŒ/ 0
;
ŒŒ0 1
}
œœ 	
else
–– 
{
—— 	
{
”” 
string
‘‘ 
salt
‘‘ 
=
‘‘ 
$str
‘‘ ,
;
‘‘, -
using
’’ 
(
’’ )
SHA512CryptoServiceProvider
’’ 2
sha512
’’3 9
=
’’: ;
new
’’< ?)
SHA512CryptoServiceProvider
’’@ [
(
’’[ \
)
’’\ ]
)
’’] ^
{
÷÷ 
byte
◊◊ 
[
◊◊ 
]
◊◊ 
buffer
◊◊ !
=
◊◊" #
Encoding
◊◊$ ,
.
◊◊, -
UTF8
◊◊- 1
.
◊◊1 2
GetBytes
◊◊2 :
(
◊◊: ;
string
◊◊; A
.
◊◊A B
Concat
◊◊B H
(
◊◊H I
salt
◊◊I M
,
◊◊M N
data
◊◊O S
)
◊◊S T
)
◊◊T U
;
◊◊U V
byte
ÿÿ 
[
ÿÿ 
]
ÿÿ  
hashedCredsAsBytes
ÿÿ -
=
ÿÿ. /
sha512
ÿÿ0 6
.
ÿÿ6 7
ComputeHash
ÿÿ7 B
(
ÿÿB C
buffer
ÿÿC I
)
ÿÿI J
;
ÿÿJ K
data
ŸŸ 
=
ŸŸ 
IO
ŸŸ 
.
ŸŸ 
ToHex
ŸŸ #
(
ŸŸ# $ 
hashedCredsAsBytes
ŸŸ$ 6
)
ŸŸ6 7
;
ŸŸ7 8
}
⁄⁄ 
}
€€ 
resp
‹‹ 
.
‹‹ 
AppendCookie
‹‹ 
(
‹‹ 
new
‹‹ !

HttpCookie
‹‹" ,
(
‹‹, -
$str
‹‹- 3
,
‹‹3 4
data
‹‹5 9
)
‹‹9 :
)
‹‹: ;
;
‹‹; <
}
›› 	
}
ﬁﬁ 
private
·· 
void
·· 
GoodB2G2
·· 
(
·· 
HttpRequest
·· %
req
··& )
,
··) *
HttpResponse
··+ 7
resp
··8 <
)
··< =
{
‚‚ 
string
„„ 
data
„„ 
;
„„ 
if
‰‰ 

(
‰‰  
PRIVATE_CONST_FIVE
‰‰ 
==
‰‰  
$num
‰‰  !
)
‰‰! "
{
ÂÂ 	
using
ÊÊ 
(
ÊÊ 
SecureString
ÊÊ 
	securePwd
ÊÊ  )
=
ÊÊ* +
new
ÊÊ, /
SecureString
ÊÊ0 <
(
ÊÊ< =
)
ÊÊ= >
)
ÊÊ> ?
{
ÁÁ 
using
ËË 
(
ËË 
SecureString
ËË #

secureUser
ËË$ .
=
ËË/ 0
new
ËË1 4
SecureString
ËË5 A
(
ËËA B
)
ËËB C
)
ËËC D
{
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( 3
.
ÍÍ3 4
Length
ÍÍ4 :
;
ÍÍ: ;
i
ÍÍ< =
++
ÍÍ= ?
)
ÍÍ? @
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 8
[
ÌÌ8 9
i
ÌÌ9 :
]
ÌÌ: ;
)
ÌÌ; <
;
ÌÌ< =
}
ÓÓ 
for
ÔÔ 
(
ÔÔ 
int
ÔÔ 
i
ÔÔ 
=
ÔÔ  
$num
ÔÔ! "
;
ÔÔ" #
i
ÔÔ$ %
<
ÔÔ& '
$str
ÔÔ( .
.
ÔÔ. /
Length
ÔÔ/ 5
;
ÔÔ5 6
i
ÔÔ7 8
++
ÔÔ8 :
)
ÔÔ: ;
{
 
	securePwd
ÚÚ !
.
ÚÚ! "

AppendChar
ÚÚ" ,
(
ÚÚ, -
$str
ÚÚ- 3
[
ÚÚ3 4
i
ÚÚ4 5
]
ÚÚ5 6
)
ÚÚ6 7
;
ÚÚ7 8
}
ÛÛ 
data
ıı 
=
ıı 

secureUser
ıı %
.
ıı% &
ToString
ıı& .
(
ıı. /
)
ıı/ 0
+
ıı1 2
$str
ıı3 6
+
ıı7 8
	securePwd
ıı9 B
.
ııB C
ToString
ııC K
(
ııK L
)
ııL M
;
ııM N
}
ˆˆ 
}
˜˜ 
}
¯¯ 	
else
˘˘ 
{
˙˙ 	
data
˝˝ 
=
˝˝ 
null
˝˝ 
;
˝˝ 
}
˛˛ 	
if
ˇˇ 

(
ˇˇ  
PRIVATE_CONST_FIVE
ˇˇ 
==
ˇˇ  
$num
ˇˇ  !
)
ˇˇ! "
{
ÄÄ 	
{
ÇÇ 
string
ÉÉ 
salt
ÉÉ 
=
ÉÉ 
$str
ÉÉ ,
;
ÉÉ, -
using
ÑÑ 
(
ÑÑ )
SHA512CryptoServiceProvider
ÑÑ 2
sha512
ÑÑ3 9
=
ÑÑ: ;
new
ÑÑ< ?)
SHA512CryptoServiceProvider
ÑÑ@ [
(
ÑÑ[ \
)
ÑÑ\ ]
)
ÑÑ] ^
{
ÖÖ 
byte
ÜÜ 
[
ÜÜ 
]
ÜÜ 
buffer
ÜÜ !
=
ÜÜ" #
Encoding
ÜÜ$ ,
.
ÜÜ, -
UTF8
ÜÜ- 1
.
ÜÜ1 2
GetBytes
ÜÜ2 :
(
ÜÜ: ;
string
ÜÜ; A
.
ÜÜA B
Concat
ÜÜB H
(
ÜÜH I
salt
ÜÜI M
,
ÜÜM N
data
ÜÜO S
)
ÜÜS T
)
ÜÜT U
;
ÜÜU V
byte
áá 
[
áá 
]
áá  
hashedCredsAsBytes
áá -
=
áá. /
sha512
áá0 6
.
áá6 7
ComputeHash
áá7 B
(
ááB C
buffer
ááC I
)
ááI J
;
ááJ K
data
àà 
=
àà 
IO
àà 
.
àà 
ToHex
àà #
(
àà# $ 
hashedCredsAsBytes
àà$ 6
)
àà6 7
;
àà7 8
}
ââ 
}
ää 
resp
ãã 
.
ãã 
AppendCookie
ãã 
(
ãã 
new
ãã !

HttpCookie
ãã" ,
(
ãã, -
$str
ãã- 3
,
ãã3 4
data
ãã5 9
)
ãã9 :
)
ãã: ;
;
ãã; <
}
åå 	
}
çç 
public
èè 

override
èè 
void
èè 
Good
èè 
(
èè 
HttpRequest
èè )
req
èè* -
,
èè- .
HttpResponse
èè/ ;
resp
èè< @
)
èè@ A
{
êê 
GoodG2B1
ëë 
(
ëë 
req
ëë 
,
ëë 
resp
ëë 
)
ëë 
;
ëë 
GoodG2B2
íí 
(
íí 
req
íí 
,
íí 
resp
íí 
)
íí 
;
íí 
GoodB2G1
ìì 
(
ìì 
req
ìì 
,
ìì 
resp
ìì 
)
ìì 
;
ìì 
GoodB2G2
îî 
(
îî 
req
îî 
,
îî 
resp
îî 
)
îî 
;
îî 
}
ïï 
}óó 
}òò Ãö
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_07.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_07 0
:1 2
AbstractTestCaseWeb3 F
{ 
private## 
int## 
privateFive## 
=## 
$num## 
;##  
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
if(( 

((( 
privateFive(( 
==(( 
$num(( 
)(( 
{)) 	
using** 
(** 
SecureString** 
	securePwd**  )
=*** +
new**, /
SecureString**0 <
(**< =
)**= >
)**> ?
{++ 
using,, 
(,, 
SecureString,, #

secureUser,,$ .
=,,/ 0
new,,1 4
SecureString,,5 A
(,,A B
),,B C
),,C D
{-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( 3
...3 4
Length..4 :
;..: ;
i..< =
++..= ?
)..? @
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 8
[118 9
i119 :
]11: ;
)11; <
;11< =
}22 
for33 
(33 
int33 
i33 
=33  
$num33! "
;33" #
i33$ %
<33& '
$str33( .
.33. /
Length33/ 5
;335 6
i337 8
++338 :
)33: ;
{44 
	securePwd66 !
.66! "

AppendChar66" ,
(66, -
$str66- 3
[663 4
i664 5
]665 6
)666 7
;667 8
}77 
data99 
=99 

secureUser99 %
.99% &
ToString99& .
(99. /
)99/ 0
+991 2
$str993 6
+997 8
	securePwd999 B
.99B C
ToString99C K
(99K L
)99L M
;99M N
}:: 
};; 
}<< 	
else== 
{>> 	
dataAA 
=AA 
nullAA 
;AA 
}BB 	
ifCC 

(CC 
privateFiveCC 
==CC 
$numCC 
)CC 
{DD 	
respGG 
.GG 
AppendCookieGG 
(GG 
newGG !

HttpCookieGG" ,
(GG, -
$strGG- 3
,GG3 4
dataGG5 9
)GG9 :
)GG: ;
;GG; <
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
HttpRequestMM %
reqMM& )
,MM) *
HttpResponseMM+ 7
respMM8 <
)MM< =
{NN 
stringOO 
dataOO 
;OO 
ifPP 

(PP 
privateFivePP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
nullTT 
;TT 
}UU 	
elseVV 
{WW 	
usingXX 
(XX 
SecureStringXX 
	securePwdXX  )
=XX* +
newXX, /
SecureStringXX0 <
(XX< =
)XX= >
)XX> ?
{YY 
usingZZ 
(ZZ 
SecureStringZZ #

secureUserZZ$ .
=ZZ/ 0
newZZ1 4
SecureStringZZ5 A
(ZZA B
)ZZB C
)ZZC D
{[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( 3
.\\3 4
Length\\4 :
;\\: ;
i\\< =
++\\= ?
)\\? @
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 8
[__8 9
i__9 :
]__: ;
)__; <
;__< =
}`` 
foraa 
(aa 
intaa 
iaa 
=aa  
$numaa! "
;aa" #
iaa$ %
<aa& '
$straa( .
.aa. /
Lengthaa/ 5
;aa5 6
iaa7 8
++aa8 :
)aa: ;
{bb 
	securePwddd !
.dd! "

AppendChardd" ,
(dd, -
$strdd- 3
[dd3 4
idd4 5
]dd5 6
)dd6 7
;dd7 8
}ee 
{gg 
stringhh 
salthh #
=hh$ %
$strhh& 4
;hh4 5
usingii 
(ii '
SHA512CryptoServiceProviderii :
sha512ii; A
=iiB C
newiiD G'
SHA512CryptoServiceProvideriiH c
(iic d
)iid e
)iie f
{jj 
stringkk "
credentialsToHashkk# 4
=kk5 6

secureUserkk7 A
.kkA B
ToStringkkB J
(kkJ K
)kkK L
+kkM N
$strkkO R
+kkS T
	securePwdkkU ^
.kk^ _
ToStringkk_ g
(kkg h
)kkh i
;kki j
bytell  
[ll  !
]ll! "
bufferll# )
=ll* +
Encodingll, 4
.ll4 5
UTF8ll5 9
.ll9 :
GetBytesll: B
(llB C
stringllC I
.llI J
ConcatllJ P
(llP Q
saltllQ U
,llU V
credentialsToHashllW h
)llh i
)lli j
;llj k
bytemm  
[mm  !
]mm! "
hashedCredsAsBytesmm# 5
=mm6 7
sha512mm8 >
.mm> ?
ComputeHashmm? J
(mmJ K
buffermmK Q
)mmQ R
;mmR S
datann  
=nn! "
IOnn# %
.nn% &
ToHexnn& +
(nn+ ,
hashedCredsAsBytesnn, >
)nn> ?
;nn? @
}oo 
}pp 
}qq 
}rr 
}ss 	
iftt 

(tt 
privateFivett 
==tt 
$numtt 
)tt 
{uu 	
respxx 
.xx 
AppendCookiexx 
(xx 
newxx !

HttpCookiexx" ,
(xx, -
$strxx- 3
,xx3 4
dataxx5 9
)xx9 :
)xx: ;
;xx; <
}yy 	
}zz 
private}} 
void}} 
GoodG2B2}} 
(}} 
HttpRequest}} %
req}}& )
,}}) *
HttpResponse}}+ 7
resp}}8 <
)}}< =
{~~ 
string 
data 
; 
if
ÄÄ 

(
ÄÄ 
privateFive
ÄÄ 
==
ÄÄ 
$num
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
using
ÇÇ 
(
ÇÇ 
SecureString
ÇÇ 
	securePwd
ÇÇ  )
=
ÇÇ* +
new
ÇÇ, /
SecureString
ÇÇ0 <
(
ÇÇ< =
)
ÇÇ= >
)
ÇÇ> ?
{
ÉÉ 
using
ÑÑ 
(
ÑÑ 
SecureString
ÑÑ #

secureUser
ÑÑ$ .
=
ÑÑ/ 0
new
ÑÑ1 4
SecureString
ÑÑ5 A
(
ÑÑA B
)
ÑÑB C
)
ÑÑC D
{
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( 3
.
ÜÜ3 4
Length
ÜÜ4 :
;
ÜÜ: ;
i
ÜÜ< =
++
ÜÜ= ?
)
ÜÜ? @
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 8
[
ââ8 9
i
ââ9 :
]
ââ: ;
)
ââ; <
;
ââ< =
}
ää 
for
ãã 
(
ãã 
int
ãã 
i
ãã 
=
ãã  
$num
ãã! "
;
ãã" #
i
ãã$ %
<
ãã& '
$str
ãã( .
.
ãã. /
Length
ãã/ 5
;
ãã5 6
i
ãã7 8
++
ãã8 :
)
ãã: ;
{
åå 
	securePwd
éé !
.
éé! "

AppendChar
éé" ,
(
éé, -
$str
éé- 3
[
éé3 4
i
éé4 5
]
éé5 6
)
éé6 7
;
éé7 8
}
èè 
{
ëë 
string
íí 
salt
íí #
=
íí$ %
$str
íí& 4
;
íí4 5
using
ìì 
(
ìì )
SHA512CryptoServiceProvider
ìì :
sha512
ìì; A
=
ììB C
new
ììD G)
SHA512CryptoServiceProvider
ììH c
(
ììc d
)
ììd e
)
ììe f
{
îî 
string
ïï "
credentialsToHash
ïï# 4
=
ïï5 6

secureUser
ïï7 A
.
ïïA B
ToString
ïïB J
(
ïïJ K
)
ïïK L
+
ïïM N
$str
ïïO R
+
ïïS T
	securePwd
ïïU ^
.
ïï^ _
ToString
ïï_ g
(
ïïg h
)
ïïh i
;
ïïi j
byte
ññ  
[
ññ  !
]
ññ! "
buffer
ññ# )
=
ññ* +
Encoding
ññ, 4
.
ññ4 5
UTF8
ññ5 9
.
ññ9 :
GetBytes
ññ: B
(
ññB C
string
ññC I
.
ññI J
Concat
ññJ P
(
ññP Q
salt
ññQ U
,
ññU V
credentialsToHash
ññW h
)
ññh i
)
ññi j
;
ññj k
byte
óó  
[
óó  !
]
óó! " 
hashedCredsAsBytes
óó# 5
=
óó6 7
sha512
óó8 >
.
óó> ?
ComputeHash
óó? J
(
óóJ K
buffer
óóK Q
)
óóQ R
;
óóR S
data
òò  
=
òò! "
IO
òò# %
.
òò% &
ToHex
òò& +
(
òò+ , 
hashedCredsAsBytes
òò, >
)
òò> ?
;
òò? @
}
ôô 
}
öö 
}
õõ 
}
úú 
}
ùù 	
else
ûû 
{
üü 	
data
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
}
££ 	
if
§§ 

(
§§ 
privateFive
§§ 
==
§§ 
$num
§§ 
)
§§ 
{
•• 	
resp
®® 
.
®® 
AppendCookie
®® 
(
®® 
new
®® !

HttpCookie
®®" ,
(
®®, -
$str
®®- 3
,
®®3 4
data
®®5 9
)
®®9 :
)
®®: ;
;
®®; <
}
©© 	
}
™™ 
private
≠≠ 
void
≠≠ 
GoodB2G1
≠≠ 
(
≠≠ 
HttpRequest
≠≠ %
req
≠≠& )
,
≠≠) *
HttpResponse
≠≠+ 7
resp
≠≠8 <
)
≠≠< =
{
ÆÆ 
string
ØØ 
data
ØØ 
;
ØØ 
if
∞∞ 

(
∞∞ 
privateFive
∞∞ 
==
∞∞ 
$num
∞∞ 
)
∞∞ 
{
±± 	
using
≤≤ 
(
≤≤ 
SecureString
≤≤ 
	securePwd
≤≤  )
=
≤≤* +
new
≤≤, /
SecureString
≤≤0 <
(
≤≤< =
)
≤≤= >
)
≤≤> ?
{
≥≥ 
using
¥¥ 
(
¥¥ 
SecureString
¥¥ #

secureUser
¥¥$ .
=
¥¥/ 0
new
¥¥1 4
SecureString
¥¥5 A
(
¥¥A B
)
¥¥B C
)
¥¥C D
{
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( 3
.
∂∂3 4
Length
∂∂4 :
;
∂∂: ;
i
∂∂< =
++
∂∂= ?
)
∂∂? @
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 8
[
ππ8 9
i
ππ9 :
]
ππ: ;
)
ππ; <
;
ππ< =
}
∫∫ 
for
ªª 
(
ªª 
int
ªª 
i
ªª 
=
ªª  
$num
ªª! "
;
ªª" #
i
ªª$ %
<
ªª& '
$str
ªª( .
.
ªª. /
Length
ªª/ 5
;
ªª5 6
i
ªª7 8
++
ªª8 :
)
ªª: ;
{
ºº 
	securePwd
ææ !
.
ææ! "

AppendChar
ææ" ,
(
ææ, -
$str
ææ- 3
[
ææ3 4
i
ææ4 5
]
ææ5 6
)
ææ6 7
;
ææ7 8
}
øø 
data
¡¡ 
=
¡¡ 

secureUser
¡¡ %
.
¡¡% &
ToString
¡¡& .
(
¡¡. /
)
¡¡/ 0
+
¡¡1 2
$str
¡¡3 6
+
¡¡7 8
	securePwd
¡¡9 B
.
¡¡B C
ToString
¡¡C K
(
¡¡K L
)
¡¡L M
;
¡¡M N
}
¬¬ 
}
√√ 
}
ƒƒ 	
else
≈≈ 
{
∆∆ 	
data
…… 
=
…… 
null
…… 
;
…… 
}
   	
if
ÀÀ 

(
ÀÀ 
privateFive
ÀÀ 
!=
ÀÀ 
$num
ÀÀ 
)
ÀÀ 
{
ÃÃ 	
IO
ŒŒ 
.
ŒŒ 
	WriteLine
ŒŒ 
(
ŒŒ 
$str
ŒŒ /
)
ŒŒ/ 0
;
ŒŒ0 1
}
œœ 	
else
–– 
{
—— 	
{
”” 
string
‘‘ 
salt
‘‘ 
=
‘‘ 
$str
‘‘ ,
;
‘‘, -
using
’’ 
(
’’ )
SHA512CryptoServiceProvider
’’ 2
sha512
’’3 9
=
’’: ;
new
’’< ?)
SHA512CryptoServiceProvider
’’@ [
(
’’[ \
)
’’\ ]
)
’’] ^
{
÷÷ 
byte
◊◊ 
[
◊◊ 
]
◊◊ 
buffer
◊◊ !
=
◊◊" #
Encoding
◊◊$ ,
.
◊◊, -
UTF8
◊◊- 1
.
◊◊1 2
GetBytes
◊◊2 :
(
◊◊: ;
string
◊◊; A
.
◊◊A B
Concat
◊◊B H
(
◊◊H I
salt
◊◊I M
,
◊◊M N
data
◊◊O S
)
◊◊S T
)
◊◊T U
;
◊◊U V
byte
ÿÿ 
[
ÿÿ 
]
ÿÿ  
hashedCredsAsBytes
ÿÿ -
=
ÿÿ. /
sha512
ÿÿ0 6
.
ÿÿ6 7
ComputeHash
ÿÿ7 B
(
ÿÿB C
buffer
ÿÿC I
)
ÿÿI J
;
ÿÿJ K
data
ŸŸ 
=
ŸŸ 
IO
ŸŸ 
.
ŸŸ 
ToHex
ŸŸ #
(
ŸŸ# $ 
hashedCredsAsBytes
ŸŸ$ 6
)
ŸŸ6 7
;
ŸŸ7 8
}
⁄⁄ 
}
€€ 
resp
‹‹ 
.
‹‹ 
AppendCookie
‹‹ 
(
‹‹ 
new
‹‹ !

HttpCookie
‹‹" ,
(
‹‹, -
$str
‹‹- 3
,
‹‹3 4
data
‹‹5 9
)
‹‹9 :
)
‹‹: ;
;
‹‹; <
}
›› 	
}
ﬁﬁ 
private
·· 
void
·· 
GoodB2G2
·· 
(
·· 
HttpRequest
·· %
req
··& )
,
··) *
HttpResponse
··+ 7
resp
··8 <
)
··< =
{
‚‚ 
string
„„ 
data
„„ 
;
„„ 
if
‰‰ 

(
‰‰ 
privateFive
‰‰ 
==
‰‰ 
$num
‰‰ 
)
‰‰ 
{
ÂÂ 	
using
ÊÊ 
(
ÊÊ 
SecureString
ÊÊ 
	securePwd
ÊÊ  )
=
ÊÊ* +
new
ÊÊ, /
SecureString
ÊÊ0 <
(
ÊÊ< =
)
ÊÊ= >
)
ÊÊ> ?
{
ÁÁ 
using
ËË 
(
ËË 
SecureString
ËË #

secureUser
ËË$ .
=
ËË/ 0
new
ËË1 4
SecureString
ËË5 A
(
ËËA B
)
ËËB C
)
ËËC D
{
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( 3
.
ÍÍ3 4
Length
ÍÍ4 :
;
ÍÍ: ;
i
ÍÍ< =
++
ÍÍ= ?
)
ÍÍ? @
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 8
[
ÌÌ8 9
i
ÌÌ9 :
]
ÌÌ: ;
)
ÌÌ; <
;
ÌÌ< =
}
ÓÓ 
for
ÔÔ 
(
ÔÔ 
int
ÔÔ 
i
ÔÔ 
=
ÔÔ  
$num
ÔÔ! "
;
ÔÔ" #
i
ÔÔ$ %
<
ÔÔ& '
$str
ÔÔ( .
.
ÔÔ. /
Length
ÔÔ/ 5
;
ÔÔ5 6
i
ÔÔ7 8
++
ÔÔ8 :
)
ÔÔ: ;
{
 
	securePwd
ÚÚ !
.
ÚÚ! "

AppendChar
ÚÚ" ,
(
ÚÚ, -
$str
ÚÚ- 3
[
ÚÚ3 4
i
ÚÚ4 5
]
ÚÚ5 6
)
ÚÚ6 7
;
ÚÚ7 8
}
ÛÛ 
data
ıı 
=
ıı 

secureUser
ıı %
.
ıı% &
ToString
ıı& .
(
ıı. /
)
ıı/ 0
+
ıı1 2
$str
ıı3 6
+
ıı7 8
	securePwd
ıı9 B
.
ııB C
ToString
ııC K
(
ııK L
)
ııL M
;
ııM N
}
ˆˆ 
}
˜˜ 
}
¯¯ 	
else
˘˘ 
{
˙˙ 	
data
˝˝ 
=
˝˝ 
null
˝˝ 
;
˝˝ 
}
˛˛ 	
if
ˇˇ 

(
ˇˇ 
privateFive
ˇˇ 
==
ˇˇ 
$num
ˇˇ 
)
ˇˇ 
{
ÄÄ 	
{
ÇÇ 
string
ÉÉ 
salt
ÉÉ 
=
ÉÉ 
$str
ÉÉ ,
;
ÉÉ, -
using
ÑÑ 
(
ÑÑ )
SHA512CryptoServiceProvider
ÑÑ 2
sha512
ÑÑ3 9
=
ÑÑ: ;
new
ÑÑ< ?)
SHA512CryptoServiceProvider
ÑÑ@ [
(
ÑÑ[ \
)
ÑÑ\ ]
)
ÑÑ] ^
{
ÖÖ 
byte
ÜÜ 
[
ÜÜ 
]
ÜÜ 
buffer
ÜÜ !
=
ÜÜ" #
Encoding
ÜÜ$ ,
.
ÜÜ, -
UTF8
ÜÜ- 1
.
ÜÜ1 2
GetBytes
ÜÜ2 :
(
ÜÜ: ;
string
ÜÜ; A
.
ÜÜA B
Concat
ÜÜB H
(
ÜÜH I
salt
ÜÜI M
,
ÜÜM N
data
ÜÜO S
)
ÜÜS T
)
ÜÜT U
;
ÜÜU V
byte
áá 
[
áá 
]
áá  
hashedCredsAsBytes
áá -
=
áá. /
sha512
áá0 6
.
áá6 7
ComputeHash
áá7 B
(
ááB C
buffer
ááC I
)
ááI J
;
ááJ K
data
àà 
=
àà 
IO
àà 
.
àà 
ToHex
àà #
(
àà# $ 
hashedCredsAsBytes
àà$ 6
)
àà6 7
;
àà7 8
}
ââ 
}
ää 
resp
ãã 
.
ãã 
AppendCookie
ãã 
(
ãã 
new
ãã !

HttpCookie
ãã" ,
(
ãã, -
$str
ãã- 3
,
ãã3 4
data
ãã5 9
)
ãã9 :
)
ãã: ;
;
ãã; <
}
åå 	
}
çç 
public
èè 

override
èè 
void
èè 
Good
èè 
(
èè 
HttpRequest
èè )
req
èè* -
,
èè- .
HttpResponse
èè/ ;
resp
èè< @
)
èè@ A
{
êê 
GoodG2B1
ëë 
(
ëë 
req
ëë 
,
ëë 
resp
ëë 
)
ëë 
;
ëë 
GoodG2B2
íí 
(
íí 
req
íí 
,
íí 
resp
íí 
)
íí 
;
íí 
GoodB2G1
ìì 
(
ìì 
req
ìì 
,
ìì 
resp
ìì 
)
ìì 
;
ìì 
GoodB2G2
îî 
(
îî 
req
îî 
,
îî 
resp
îî 
)
îî 
;
îî 
}
ïï 
}óó 
}òò —ù
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_08.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_08 0
:1 2
AbstractTestCaseWeb3 F
{ 
private## 
static## 
bool## 
PrivateReturnsTrue## *
(##* +
)##+ ,
{$$ 
return%% 
true%% 
;%% 
}&& 
private(( 
static(( 
bool(( 
PrivateReturnsFalse(( +
(((+ ,
)((, -
{)) 
return** 
false** 
;** 
}++ 
public-- 

override-- 
void-- 
Bad-- 
(-- 
HttpRequest-- (
req--) ,
,--, -
HttpResponse--. :
resp--; ?
)--? @
{.. 
string// 
data// 
;// 
if00 

(00 
PrivateReturnsTrue00 
(00 
)00  
)00  !
{11 	
using22 
(22 
SecureString22 
	securePwd22  )
=22* +
new22, /
SecureString220 <
(22< =
)22= >
)22> ?
{33 
using44 
(44 
SecureString44 #

secureUser44$ .
=44/ 0
new441 4
SecureString445 A
(44A B
)44B C
)44C D
{55 
for66 
(66 
int66 
i66 
=66  
$num66! "
;66" #
i66$ %
<66& '
$str66( 3
.663 4
Length664 :
;66: ;
i66< =
++66= ?
)66? @
{77 
	securePwd99 !
.99! "

AppendChar99" ,
(99, -
$str99- 8
[998 9
i999 :
]99: ;
)99; <
;99< =
}:: 
for;; 
(;; 
int;; 
i;; 
=;;  
$num;;! "
;;;" #
i;;$ %
<;;& '
$str;;( .
.;;. /
Length;;/ 5
;;;5 6
i;;7 8
++;;8 :
);;: ;
{<< 
	securePwd>> !
.>>! "

AppendChar>>" ,
(>>, -
$str>>- 3
[>>3 4
i>>4 5
]>>5 6
)>>6 7
;>>7 8
}?? 
dataAA 
=AA 

secureUserAA %
.AA% &
ToStringAA& .
(AA. /
)AA/ 0
+AA1 2
$strAA3 6
+AA7 8
	securePwdAA9 B
.AAB C
ToStringAAC K
(AAK L
)AAL M
;AAM N
}BB 
}CC 
}DD 	
elseEE 
{FF 	
dataII 
=II 
nullII 
;II 
}JJ 	
ifKK 

(KK 
PrivateReturnsTrueKK 
(KK 
)KK  
)KK  !
{LL 	
respOO 
.OO 
AppendCookieOO 
(OO 
newOO !

HttpCookieOO" ,
(OO, -
$strOO- 3
,OO3 4
dataOO5 9
)OO9 :
)OO: ;
;OO; <
}PP 	
}QQ 
privateUU 
voidUU 
GoodG2B1UU 
(UU 
HttpRequestUU %
reqUU& )
,UU) *
HttpResponseUU+ 7
respUU8 <
)UU< =
{VV 
stringWW 
dataWW 
;WW 
ifXX 

(XX 
PrivateReturnsFalseXX 
(XX  
)XX  !
)XX! "
{YY 	
data\\ 
=\\ 
null\\ 
;\\ 
}]] 	
else^^ 
{__ 	
using`` 
(`` 
SecureString`` 
	securePwd``  )
=``* +
new``, /
SecureString``0 <
(``< =
)``= >
)``> ?
{aa 
usingbb 
(bb 
SecureStringbb #

secureUserbb$ .
=bb/ 0
newbb1 4
SecureStringbb5 A
(bbA B
)bbB C
)bbC D
{cc 
fordd 
(dd 
intdd 
idd 
=dd  
$numdd! "
;dd" #
idd$ %
<dd& '
$strdd( 3
.dd3 4
Lengthdd4 :
;dd: ;
idd< =
++dd= ?
)dd? @
{ee 
	securePwdgg !
.gg! "

AppendChargg" ,
(gg, -
$strgg- 8
[gg8 9
igg9 :
]gg: ;
)gg; <
;gg< =
}hh 
forii 
(ii 
intii 
iii 
=ii  
$numii! "
;ii" #
iii$ %
<ii& '
$strii( .
.ii. /
Lengthii/ 5
;ii5 6
iii7 8
++ii8 :
)ii: ;
{jj 
	securePwdll !
.ll! "

AppendCharll" ,
(ll, -
$strll- 3
[ll3 4
ill4 5
]ll5 6
)ll6 7
;ll7 8
}mm 
{oo 
stringpp 
saltpp #
=pp$ %
$strpp& 4
;pp4 5
usingqq 
(qq '
SHA512CryptoServiceProviderqq :
sha512qq; A
=qqB C
newqqD G'
SHA512CryptoServiceProviderqqH c
(qqc d
)qqd e
)qqe f
{rr 
stringss "
credentialsToHashss# 4
=ss5 6

secureUserss7 A
.ssA B
ToStringssB J
(ssJ K
)ssK L
+ssM N
$strssO R
+ssS T
	securePwdssU ^
.ss^ _
ToStringss_ g
(ssg h
)ssh i
;ssi j
bytett  
[tt  !
]tt! "
buffertt# )
=tt* +
Encodingtt, 4
.tt4 5
UTF8tt5 9
.tt9 :
GetBytestt: B
(ttB C
stringttC I
.ttI J
ConcatttJ P
(ttP Q
saltttQ U
,ttU V
credentialsToHashttW h
)tth i
)tti j
;ttj k
byteuu  
[uu  !
]uu! "
hashedCredsAsBytesuu# 5
=uu6 7
sha512uu8 >
.uu> ?
ComputeHashuu? J
(uuJ K
bufferuuK Q
)uuQ R
;uuR S
datavv  
=vv! "
IOvv# %
.vv% &
ToHexvv& +
(vv+ ,
hashedCredsAsBytesvv, >
)vv> ?
;vv? @
}ww 
}xx 
}yy 
}zz 
}{{ 	
if|| 

(|| 
PrivateReturnsTrue|| 
(|| 
)||  
)||  !
{}} 	
resp
ÄÄ 
.
ÄÄ 
AppendCookie
ÄÄ 
(
ÄÄ 
new
ÄÄ !

HttpCookie
ÄÄ" ,
(
ÄÄ, -
$str
ÄÄ- 3
,
ÄÄ3 4
data
ÄÄ5 9
)
ÄÄ9 :
)
ÄÄ: ;
;
ÄÄ; <
}
ÅÅ 	
}
ÇÇ 
private
ÖÖ 
void
ÖÖ 
GoodG2B2
ÖÖ 
(
ÖÖ 
HttpRequest
ÖÖ %
req
ÖÖ& )
,
ÖÖ) *
HttpResponse
ÖÖ+ 7
resp
ÖÖ8 <
)
ÖÖ< =
{
ÜÜ 
string
áá 
data
áá 
;
áá 
if
àà 

(
àà  
PrivateReturnsTrue
àà 
(
àà 
)
àà  
)
àà  !
{
ââ 	
using
ää 
(
ää 
SecureString
ää 
	securePwd
ää  )
=
ää* +
new
ää, /
SecureString
ää0 <
(
ää< =
)
ää= >
)
ää> ?
{
ãã 
using
åå 
(
åå 
SecureString
åå #

secureUser
åå$ .
=
åå/ 0
new
åå1 4
SecureString
åå5 A
(
ååA B
)
ååB C
)
ååC D
{
çç 
for
éé 
(
éé 
int
éé 
i
éé 
=
éé  
$num
éé! "
;
éé" #
i
éé$ %
<
éé& '
$str
éé( 3
.
éé3 4
Length
éé4 :
;
éé: ;
i
éé< =
++
éé= ?
)
éé? @
{
èè 
	securePwd
ëë !
.
ëë! "

AppendChar
ëë" ,
(
ëë, -
$str
ëë- 8
[
ëë8 9
i
ëë9 :
]
ëë: ;
)
ëë; <
;
ëë< =
}
íí 
for
ìì 
(
ìì 
int
ìì 
i
ìì 
=
ìì  
$num
ìì! "
;
ìì" #
i
ìì$ %
<
ìì& '
$str
ìì( .
.
ìì. /
Length
ìì/ 5
;
ìì5 6
i
ìì7 8
++
ìì8 :
)
ìì: ;
{
îî 
	securePwd
ññ !
.
ññ! "

AppendChar
ññ" ,
(
ññ, -
$str
ññ- 3
[
ññ3 4
i
ññ4 5
]
ññ5 6
)
ññ6 7
;
ññ7 8
}
óó 
{
ôô 
string
öö 
salt
öö #
=
öö$ %
$str
öö& 4
;
öö4 5
using
õõ 
(
õõ )
SHA512CryptoServiceProvider
õõ :
sha512
õõ; A
=
õõB C
new
õõD G)
SHA512CryptoServiceProvider
õõH c
(
õõc d
)
õõd e
)
õõe f
{
úú 
string
ùù "
credentialsToHash
ùù# 4
=
ùù5 6

secureUser
ùù7 A
.
ùùA B
ToString
ùùB J
(
ùùJ K
)
ùùK L
+
ùùM N
$str
ùùO R
+
ùùS T
	securePwd
ùùU ^
.
ùù^ _
ToString
ùù_ g
(
ùùg h
)
ùùh i
;
ùùi j
byte
ûû  
[
ûû  !
]
ûû! "
buffer
ûû# )
=
ûû* +
Encoding
ûû, 4
.
ûû4 5
UTF8
ûû5 9
.
ûû9 :
GetBytes
ûû: B
(
ûûB C
string
ûûC I
.
ûûI J
Concat
ûûJ P
(
ûûP Q
salt
ûûQ U
,
ûûU V
credentialsToHash
ûûW h
)
ûûh i
)
ûûi j
;
ûûj k
byte
üü  
[
üü  !
]
üü! " 
hashedCredsAsBytes
üü# 5
=
üü6 7
sha512
üü8 >
.
üü> ?
ComputeHash
üü? J
(
üüJ K
buffer
üüK Q
)
üüQ R
;
üüR S
data
††  
=
††! "
IO
††# %
.
††% &
ToHex
††& +
(
††+ , 
hashedCredsAsBytes
††, >
)
††> ?
;
††? @
}
°° 
}
¢¢ 
}
££ 
}
§§ 
}
•• 	
else
¶¶ 
{
ßß 	
data
™™ 
=
™™ 
null
™™ 
;
™™ 
}
´´ 	
if
¨¨ 

(
¨¨  
PrivateReturnsTrue
¨¨ 
(
¨¨ 
)
¨¨  
)
¨¨  !
{
≠≠ 	
resp
∞∞ 
.
∞∞ 
AppendCookie
∞∞ 
(
∞∞ 
new
∞∞ !

HttpCookie
∞∞" ,
(
∞∞, -
$str
∞∞- 3
,
∞∞3 4
data
∞∞5 9
)
∞∞9 :
)
∞∞: ;
;
∞∞; <
}
±± 	
}
≤≤ 
private
µµ 
void
µµ 
GoodB2G1
µµ 
(
µµ 
HttpRequest
µµ %
req
µµ& )
,
µµ) *
HttpResponse
µµ+ 7
resp
µµ8 <
)
µµ< =
{
∂∂ 
string
∑∑ 
data
∑∑ 
;
∑∑ 
if
∏∏ 

(
∏∏  
PrivateReturnsTrue
∏∏ 
(
∏∏ 
)
∏∏  
)
∏∏  !
{
ππ 	
using
∫∫ 
(
∫∫ 
SecureString
∫∫ 
	securePwd
∫∫  )
=
∫∫* +
new
∫∫, /
SecureString
∫∫0 <
(
∫∫< =
)
∫∫= >
)
∫∫> ?
{
ªª 
using
ºº 
(
ºº 
SecureString
ºº #

secureUser
ºº$ .
=
ºº/ 0
new
ºº1 4
SecureString
ºº5 A
(
ººA B
)
ººB C
)
ººC D
{
ΩΩ 
for
ææ 
(
ææ 
int
ææ 
i
ææ 
=
ææ  
$num
ææ! "
;
ææ" #
i
ææ$ %
<
ææ& '
$str
ææ( 3
.
ææ3 4
Length
ææ4 :
;
ææ: ;
i
ææ< =
++
ææ= ?
)
ææ? @
{
øø 
	securePwd
¡¡ !
.
¡¡! "

AppendChar
¡¡" ,
(
¡¡, -
$str
¡¡- 8
[
¡¡8 9
i
¡¡9 :
]
¡¡: ;
)
¡¡; <
;
¡¡< =
}
¬¬ 
for
√√ 
(
√√ 
int
√√ 
i
√√ 
=
√√  
$num
√√! "
;
√√" #
i
√√$ %
<
√√& '
$str
√√( .
.
√√. /
Length
√√/ 5
;
√√5 6
i
√√7 8
++
√√8 :
)
√√: ;
{
ƒƒ 
	securePwd
∆∆ !
.
∆∆! "

AppendChar
∆∆" ,
(
∆∆, -
$str
∆∆- 3
[
∆∆3 4
i
∆∆4 5
]
∆∆5 6
)
∆∆6 7
;
∆∆7 8
}
«« 
data
…… 
=
…… 

secureUser
…… %
.
……% &
ToString
……& .
(
……. /
)
……/ 0
+
……1 2
$str
……3 6
+
……7 8
	securePwd
……9 B
.
……B C
ToString
……C K
(
……K L
)
……L M
;
……M N
}
   
}
ÀÀ 
}
ÃÃ 	
else
ÕÕ 
{
ŒŒ 	
data
—— 
=
—— 
null
—— 
;
—— 
}
““ 	
if
”” 

(
”” !
PrivateReturnsFalse
”” 
(
””  
)
””  !
)
””! "
{
‘‘ 	
IO
÷÷ 
.
÷÷ 
	WriteLine
÷÷ 
(
÷÷ 
$str
÷÷ /
)
÷÷/ 0
;
÷÷0 1
}
◊◊ 	
else
ÿÿ 
{
ŸŸ 	
{
€€ 
string
‹‹ 
salt
‹‹ 
=
‹‹ 
$str
‹‹ ,
;
‹‹, -
using
›› 
(
›› )
SHA512CryptoServiceProvider
›› 2
sha512
››3 9
=
››: ;
new
››< ?)
SHA512CryptoServiceProvider
››@ [
(
››[ \
)
››\ ]
)
››] ^
{
ﬁﬁ 
byte
ﬂﬂ 
[
ﬂﬂ 
]
ﬂﬂ 
buffer
ﬂﬂ !
=
ﬂﬂ" #
Encoding
ﬂﬂ$ ,
.
ﬂﬂ, -
UTF8
ﬂﬂ- 1
.
ﬂﬂ1 2
GetBytes
ﬂﬂ2 :
(
ﬂﬂ: ;
string
ﬂﬂ; A
.
ﬂﬂA B
Concat
ﬂﬂB H
(
ﬂﬂH I
salt
ﬂﬂI M
,
ﬂﬂM N
data
ﬂﬂO S
)
ﬂﬂS T
)
ﬂﬂT U
;
ﬂﬂU V
byte
‡‡ 
[
‡‡ 
]
‡‡  
hashedCredsAsBytes
‡‡ -
=
‡‡. /
sha512
‡‡0 6
.
‡‡6 7
ComputeHash
‡‡7 B
(
‡‡B C
buffer
‡‡C I
)
‡‡I J
;
‡‡J K
data
·· 
=
·· 
IO
·· 
.
·· 
ToHex
·· #
(
··# $ 
hashedCredsAsBytes
··$ 6
)
··6 7
;
··7 8
}
‚‚ 
}
„„ 
resp
‰‰ 
.
‰‰ 
AppendCookie
‰‰ 
(
‰‰ 
new
‰‰ !

HttpCookie
‰‰" ,
(
‰‰, -
$str
‰‰- 3
,
‰‰3 4
data
‰‰5 9
)
‰‰9 :
)
‰‰: ;
;
‰‰; <
}
ÂÂ 	
}
ÊÊ 
private
ÈÈ 
void
ÈÈ 
GoodB2G2
ÈÈ 
(
ÈÈ 
HttpRequest
ÈÈ %
req
ÈÈ& )
,
ÈÈ) *
HttpResponse
ÈÈ+ 7
resp
ÈÈ8 <
)
ÈÈ< =
{
ÍÍ 
string
ÎÎ 
data
ÎÎ 
;
ÎÎ 
if
ÏÏ 

(
ÏÏ  
PrivateReturnsTrue
ÏÏ 
(
ÏÏ 
)
ÏÏ  
)
ÏÏ  !
{
ÌÌ 	
using
ÓÓ 
(
ÓÓ 
SecureString
ÓÓ 
	securePwd
ÓÓ  )
=
ÓÓ* +
new
ÓÓ, /
SecureString
ÓÓ0 <
(
ÓÓ< =
)
ÓÓ= >
)
ÓÓ> ?
{
ÔÔ 
using
 
(
 
SecureString
 #

secureUser
$ .
=
/ 0
new
1 4
SecureString
5 A
(
A B
)
B C
)
C D
{
ÒÒ 
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
i
ÚÚ 
=
ÚÚ  
$num
ÚÚ! "
;
ÚÚ" #
i
ÚÚ$ %
<
ÚÚ& '
$str
ÚÚ( 3
.
ÚÚ3 4
Length
ÚÚ4 :
;
ÚÚ: ;
i
ÚÚ< =
++
ÚÚ= ?
)
ÚÚ? @
{
ÛÛ 
	securePwd
ıı !
.
ıı! "

AppendChar
ıı" ,
(
ıı, -
$str
ıı- 8
[
ıı8 9
i
ıı9 :
]
ıı: ;
)
ıı; <
;
ıı< =
}
ˆˆ 
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜  
$num
˜˜! "
;
˜˜" #
i
˜˜$ %
<
˜˜& '
$str
˜˜( .
.
˜˜. /
Length
˜˜/ 5
;
˜˜5 6
i
˜˜7 8
++
˜˜8 :
)
˜˜: ;
{
¯¯ 
	securePwd
˙˙ !
.
˙˙! "

AppendChar
˙˙" ,
(
˙˙, -
$str
˙˙- 3
[
˙˙3 4
i
˙˙4 5
]
˙˙5 6
)
˙˙6 7
;
˙˙7 8
}
˚˚ 
data
˝˝ 
=
˝˝ 

secureUser
˝˝ %
.
˝˝% &
ToString
˝˝& .
(
˝˝. /
)
˝˝/ 0
+
˝˝1 2
$str
˝˝3 6
+
˝˝7 8
	securePwd
˝˝9 B
.
˝˝B C
ToString
˝˝C K
(
˝˝K L
)
˝˝L M
;
˝˝M N
}
˛˛ 
}
ˇˇ 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
null
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
if
áá 

(
áá  
PrivateReturnsTrue
áá 
(
áá 
)
áá  
)
áá  !
{
àà 	
{
ää 
string
ãã 
salt
ãã 
=
ãã 
$str
ãã ,
;
ãã, -
using
åå 
(
åå )
SHA512CryptoServiceProvider
åå 2
sha512
åå3 9
=
åå: ;
new
åå< ?)
SHA512CryptoServiceProvider
åå@ [
(
åå[ \
)
åå\ ]
)
åå] ^
{
çç 
byte
éé 
[
éé 
]
éé 
buffer
éé !
=
éé" #
Encoding
éé$ ,
.
éé, -
UTF8
éé- 1
.
éé1 2
GetBytes
éé2 :
(
éé: ;
string
éé; A
.
ééA B
Concat
ééB H
(
ééH I
salt
ééI M
,
ééM N
data
ééO S
)
ééS T
)
ééT U
;
ééU V
byte
èè 
[
èè 
]
èè  
hashedCredsAsBytes
èè -
=
èè. /
sha512
èè0 6
.
èè6 7
ComputeHash
èè7 B
(
èèB C
buffer
èèC I
)
èèI J
;
èèJ K
data
êê 
=
êê 
IO
êê 
.
êê 
ToHex
êê #
(
êê# $ 
hashedCredsAsBytes
êê$ 6
)
êê6 7
;
êê7 8
}
ëë 
}
íí 
resp
ìì 
.
ìì 
AppendCookie
ìì 
(
ìì 
new
ìì !

HttpCookie
ìì" ,
(
ìì, -
$str
ìì- 3
,
ìì3 4
data
ìì5 9
)
ìì9 :
)
ìì: ;
;
ìì; <
}
îî 	
}
ïï 
public
óó 

override
óó 
void
óó 
Good
óó 
(
óó 
HttpRequest
óó )
req
óó* -
,
óó- .
HttpResponse
óó/ ;
resp
óó< @
)
óó@ A
{
òò 
GoodG2B1
ôô 
(
ôô 
req
ôô 
,
ôô 
resp
ôô 
)
ôô 
;
ôô 
GoodG2B2
öö 
(
öö 
req
öö 
,
öö 
resp
öö 
)
öö 
;
öö 
GoodB2G1
õõ 
(
õõ 
req
õõ 
,
õõ 
resp
õõ 
)
õõ 
;
õõ 
GoodB2G2
úú 
(
úú 
req
úú 
,
úú 
resp
úú 
)
úú 
;
úú 
}
ùù 
}üü 
}†† „ô
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_09.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_09 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.##  
STATIC_READONLY_TRUE## #
)### $
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
IO>> 
.>>  
STATIC_READONLY_TRUE>> #
)>># $
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateHH 
voidHH 
GoodG2B1HH 
(HH 
HttpRequestHH %
reqHH& )
,HH) *
HttpResponseHH+ 7
respHH8 <
)HH< =
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK 
IOKK 
.KK !
STATIC_READONLY_FALSEKK $
)KK$ %
{LL 	
dataOO 
=OO 
nullOO 
;OO 
}PP 	
elseQQ 
{RR 	
usingSS 
(SS 
SecureStringSS 
	securePwdSS  )
=SS* +
newSS, /
SecureStringSS0 <
(SS< =
)SS= >
)SS> ?
{TT 
usingUU 
(UU 
SecureStringUU #

secureUserUU$ .
=UU/ 0
newUU1 4
SecureStringUU5 A
(UUA B
)UUB C
)UUC D
{VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( 3
.WW3 4
LengthWW4 :
;WW: ;
iWW< =
++WW= ?
)WW? @
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 8
[ZZ8 9
iZZ9 :
]ZZ: ;
)ZZ; <
;ZZ< =
}[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( .
.\\. /
Length\\/ 5
;\\5 6
i\\7 8
++\\8 :
)\\: ;
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 3
[__3 4
i__4 5
]__5 6
)__6 7
;__7 8
}`` 
{bb 
stringcc 
saltcc #
=cc$ %
$strcc& 4
;cc4 5
usingdd 
(dd '
SHA512CryptoServiceProviderdd :
sha512dd; A
=ddB C
newddD G'
SHA512CryptoServiceProviderddH c
(ddc d
)ddd e
)dde f
{ee 
stringff "
credentialsToHashff# 4
=ff5 6

secureUserff7 A
.ffA B
ToStringffB J
(ffJ K
)ffK L
+ffM N
$strffO R
+ffS T
	securePwdffU ^
.ff^ _
ToStringff_ g
(ffg h
)ffh i
;ffi j
bytegg  
[gg  !
]gg! "
buffergg# )
=gg* +
Encodinggg, 4
.gg4 5
UTF8gg5 9
.gg9 :
GetBytesgg: B
(ggB C
stringggC I
.ggI J
ConcatggJ P
(ggP Q
saltggQ U
,ggU V
credentialsToHashggW h
)ggh i
)ggi j
;ggj k
bytehh  
[hh  !
]hh! "
hashedCredsAsByteshh# 5
=hh6 7
sha512hh8 >
.hh> ?
ComputeHashhh? J
(hhJ K
bufferhhK Q
)hhQ R
;hhR S
dataii  
=ii! "
IOii# %
.ii% &
ToHexii& +
(ii+ ,
hashedCredsAsBytesii, >
)ii> ?
;ii? @
}jj 
}kk 
}ll 
}mm 
}nn 	
ifoo 

(oo 
IOoo 
.oo  
STATIC_READONLY_TRUEoo #
)oo# $
{pp 	
respss 
.ss 
AppendCookiess 
(ss 
newss !

HttpCookiess" ,
(ss, -
$strss- 3
,ss3 4
datass5 9
)ss9 :
)ss: ;
;ss; <
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{  
STATIC_READONLY_TRUE{{ #
){{# $
{|| 	
using}} 
(}} 
SecureString}} 
	securePwd}}  )
=}}* +
new}}, /
SecureString}}0 <
(}}< =
)}}= >
)}}> ?
{~~ 
using 
( 
SecureString #

secureUser$ .
=/ 0
new1 4
SecureString5 A
(A B
)B C
)C D
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
i
ÅÅ$ %
<
ÅÅ& '
$str
ÅÅ( 3
.
ÅÅ3 4
Length
ÅÅ4 :
;
ÅÅ: ;
i
ÅÅ< =
++
ÅÅ= ?
)
ÅÅ? @
{
ÇÇ 
	securePwd
ÑÑ !
.
ÑÑ! "

AppendChar
ÑÑ" ,
(
ÑÑ, -
$str
ÑÑ- 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( .
.
ÜÜ. /
Length
ÜÜ/ 5
;
ÜÜ5 6
i
ÜÜ7 8
++
ÜÜ8 :
)
ÜÜ: ;
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 3
[
ââ3 4
i
ââ4 5
]
ââ5 6
)
ââ6 7
;
ââ7 8
}
ää 
{
åå 
string
çç 
salt
çç #
=
çç$ %
$str
çç& 4
;
çç4 5
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé :
sha512
éé; A
=
ééB C
new
ééD G)
SHA512CryptoServiceProvider
ééH c
(
ééc d
)
ééd e
)
éée f
{
èè 
string
êê "
credentialsToHash
êê# 4
=
êê5 6

secureUser
êê7 A
.
êêA B
ToString
êêB J
(
êêJ K
)
êêK L
+
êêM N
$str
êêO R
+
êêS T
	securePwd
êêU ^
.
êê^ _
ToString
êê_ g
(
êêg h
)
êêh i
;
êêi j
byte
ëë  
[
ëë  !
]
ëë! "
buffer
ëë# )
=
ëë* +
Encoding
ëë, 4
.
ëë4 5
UTF8
ëë5 9
.
ëë9 :
GetBytes
ëë: B
(
ëëB C
string
ëëC I
.
ëëI J
Concat
ëëJ P
(
ëëP Q
salt
ëëQ U
,
ëëU V
credentialsToHash
ëëW h
)
ëëh i
)
ëëi j
;
ëëj k
byte
íí  
[
íí  !
]
íí! " 
hashedCredsAsBytes
íí# 5
=
íí6 7
sha512
íí8 >
.
íí> ?
ComputeHash
íí? J
(
ííJ K
buffer
ííK Q
)
ííQ R
;
ííR S
data
ìì  
=
ìì! "
IO
ìì# %
.
ìì% &
ToHex
ìì& +
(
ìì+ , 
hashedCredsAsBytes
ìì, >
)
ìì> ?
;
ìì? @
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
data
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
IO
üü 
.
üü "
STATIC_READONLY_TRUE
üü #
)
üü# $
{
†† 	
resp
££ 
.
££ 
AppendCookie
££ 
(
££ 
new
££ !

HttpCookie
££" ,
(
££, -
$str
££- 3
,
££3 4
data
££5 9
)
££9 :
)
££: ;
;
££; <
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
HttpRequest
®® %
req
®®& )
,
®®) *
HttpResponse
®®+ 7
resp
®®8 <
)
®®< =
{
©© 
string
™™ 
data
™™ 
;
™™ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ "
STATIC_READONLY_TRUE
´´ #
)
´´# $
{
¨¨ 	
using
≠≠ 
(
≠≠ 
SecureString
≠≠ 
	securePwd
≠≠  )
=
≠≠* +
new
≠≠, /
SecureString
≠≠0 <
(
≠≠< =
)
≠≠= >
)
≠≠> ?
{
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ #

secureUser
ØØ$ .
=
ØØ/ 0
new
ØØ1 4
SecureString
ØØ5 A
(
ØØA B
)
ØØB C
)
ØØC D
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
$str
±±( 3
.
±±3 4
Length
±±4 :
;
±±: ;
i
±±< =
++
±±= ?
)
±±? @
{
≤≤ 
	securePwd
¥¥ !
.
¥¥! "

AppendChar
¥¥" ,
(
¥¥, -
$str
¥¥- 8
[
¥¥8 9
i
¥¥9 :
]
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( .
.
∂∂. /
Length
∂∂/ 5
;
∂∂5 6
i
∂∂7 8
++
∂∂8 :
)
∂∂: ;
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 3
[
ππ3 4
i
ππ4 5
]
ππ5 6
)
ππ6 7
;
ππ7 8
}
∫∫ 
data
ºº 
=
ºº 

secureUser
ºº %
.
ºº% &
ToString
ºº& .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
	securePwd
ºº9 B
.
ººB C
ToString
ººC K
(
ººK L
)
ººL M
;
ººM N
}
ΩΩ 
}
ææ 
}
øø 	
else
¿¿ 
{
¡¡ 	
data
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
if
∆∆ 

(
∆∆ 
IO
∆∆ 
.
∆∆ #
STATIC_READONLY_FALSE
∆∆ $
)
∆∆$ %
{
«« 	
IO
…… 
.
…… 
	WriteLine
…… 
(
…… 
$str
…… /
)
……/ 0
;
……0 1
}
   	
else
ÀÀ 
{
ÃÃ 	
{
ŒŒ 
string
œœ 
salt
œœ 
=
œœ 
$str
œœ ,
;
œœ, -
using
–– 
(
–– )
SHA512CryptoServiceProvider
–– 2
sha512
––3 9
=
––: ;
new
––< ?)
SHA512CryptoServiceProvider
––@ [
(
––[ \
)
––\ ]
)
––] ^
{
—— 
byte
““ 
[
““ 
]
““ 
buffer
““ !
=
““" #
Encoding
““$ ,
.
““, -
UTF8
““- 1
.
““1 2
GetBytes
““2 :
(
““: ;
string
““; A
.
““A B
Concat
““B H
(
““H I
salt
““I M
,
““M N
data
““O S
)
““S T
)
““T U
;
““U V
byte
”” 
[
”” 
]
””  
hashedCredsAsBytes
”” -
=
””. /
sha512
””0 6
.
””6 7
ComputeHash
””7 B
(
””B C
buffer
””C I
)
””I J
;
””J K
data
‘‘ 
=
‘‘ 
IO
‘‘ 
.
‘‘ 
ToHex
‘‘ #
(
‘‘# $ 
hashedCredsAsBytes
‘‘$ 6
)
‘‘6 7
;
‘‘7 8
}
’’ 
}
÷÷ 
resp
◊◊ 
.
◊◊ 
AppendCookie
◊◊ 
(
◊◊ 
new
◊◊ !

HttpCookie
◊◊" ,
(
◊◊, -
$str
◊◊- 3
,
◊◊3 4
data
◊◊5 9
)
◊◊9 :
)
◊◊: ;
;
◊◊; <
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
HttpRequest
‹‹ %
req
‹‹& )
,
‹‹) *
HttpResponse
‹‹+ 7
resp
‹‹8 <
)
‹‹< =
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
if
ﬂﬂ 

(
ﬂﬂ 
IO
ﬂﬂ 
.
ﬂﬂ "
STATIC_READONLY_TRUE
ﬂﬂ #
)
ﬂﬂ# $
{
‡‡ 	
using
·· 
(
·· 
SecureString
·· 
	securePwd
··  )
=
··* +
new
··, /
SecureString
··0 <
(
··< =
)
··= >
)
··> ?
{
‚‚ 
using
„„ 
(
„„ 
SecureString
„„ #

secureUser
„„$ .
=
„„/ 0
new
„„1 4
SecureString
„„5 A
(
„„A B
)
„„B C
)
„„C D
{
‰‰ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
;
ÂÂ" #
i
ÂÂ$ %
<
ÂÂ& '
$str
ÂÂ( 3
.
ÂÂ3 4
Length
ÂÂ4 :
;
ÂÂ: ;
i
ÂÂ< =
++
ÂÂ= ?
)
ÂÂ? @
{
ÊÊ 
	securePwd
ËË !
.
ËË! "

AppendChar
ËË" ,
(
ËË, -
$str
ËË- 8
[
ËË8 9
i
ËË9 :
]
ËË: ;
)
ËË; <
;
ËË< =
}
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( .
.
ÍÍ. /
Length
ÍÍ/ 5
;
ÍÍ5 6
i
ÍÍ7 8
++
ÍÍ8 :
)
ÍÍ: ;
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 3
[
ÌÌ3 4
i
ÌÌ4 5
]
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
data
 
=
 

secureUser
 %
.
% &
ToString
& .
(
. /
)
/ 0
+
1 2
$str
3 6
+
7 8
	securePwd
9 B
.
B C
ToString
C K
(
K L
)
L M
;
M N
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
else
ÙÙ 
{
ıı 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
˘˘ 	
if
˙˙ 

(
˙˙ 
IO
˙˙ 
.
˙˙ "
STATIC_READONLY_TRUE
˙˙ #
)
˙˙# $
{
˚˚ 	
{
˝˝ 
string
˛˛ 
salt
˛˛ 
=
˛˛ 
$str
˛˛ ,
;
˛˛, -
using
ˇˇ 
(
ˇˇ )
SHA512CryptoServiceProvider
ˇˇ 2
sha512
ˇˇ3 9
=
ˇˇ: ;
new
ˇˇ< ?)
SHA512CryptoServiceProvider
ˇˇ@ [
(
ˇˇ[ \
)
ˇˇ\ ]
)
ˇˇ] ^
{
ÄÄ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
buffer
ÅÅ !
=
ÅÅ" #
Encoding
ÅÅ$ ,
.
ÅÅ, -
UTF8
ÅÅ- 1
.
ÅÅ1 2
GetBytes
ÅÅ2 :
(
ÅÅ: ;
string
ÅÅ; A
.
ÅÅA B
Concat
ÅÅB H
(
ÅÅH I
salt
ÅÅI M
,
ÅÅM N
data
ÅÅO S
)
ÅÅS T
)
ÅÅT U
;
ÅÅU V
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ  
hashedCredsAsBytes
ÇÇ -
=
ÇÇ. /
sha512
ÇÇ0 6
.
ÇÇ6 7
ComputeHash
ÇÇ7 B
(
ÇÇB C
buffer
ÇÇC I
)
ÇÇI J
;
ÇÇJ K
data
ÉÉ 
=
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
ToHex
ÉÉ #
(
ÉÉ# $ 
hashedCredsAsBytes
ÉÉ$ 6
)
ÉÉ6 7
;
ÉÉ7 8
}
ÑÑ 
}
ÖÖ 
resp
ÜÜ 
.
ÜÜ 
AppendCookie
ÜÜ 
(
ÜÜ 
new
ÜÜ !

HttpCookie
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 3
,
ÜÜ3 4
data
ÜÜ5 9
)
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
ãã 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ˇò
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_10.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_10 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 

staticTrue## 
)## 
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
IO>> 
.>> 

staticTrue>> 
)>> 
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateHH 
voidHH 
GoodG2B1HH 
(HH 
HttpRequestHH %
reqHH& )
,HH) *
HttpResponseHH+ 7
respHH8 <
)HH< =
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK 
IOKK 
.KK 
staticFalseKK 
)KK 
{LL 	
dataOO 
=OO 
nullOO 
;OO 
}PP 	
elseQQ 
{RR 	
usingSS 
(SS 
SecureStringSS 
	securePwdSS  )
=SS* +
newSS, /
SecureStringSS0 <
(SS< =
)SS= >
)SS> ?
{TT 
usingUU 
(UU 
SecureStringUU #

secureUserUU$ .
=UU/ 0
newUU1 4
SecureStringUU5 A
(UUA B
)UUB C
)UUC D
{VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( 3
.WW3 4
LengthWW4 :
;WW: ;
iWW< =
++WW= ?
)WW? @
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 8
[ZZ8 9
iZZ9 :
]ZZ: ;
)ZZ; <
;ZZ< =
}[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( .
.\\. /
Length\\/ 5
;\\5 6
i\\7 8
++\\8 :
)\\: ;
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 3
[__3 4
i__4 5
]__5 6
)__6 7
;__7 8
}`` 
{bb 
stringcc 
saltcc #
=cc$ %
$strcc& 4
;cc4 5
usingdd 
(dd '
SHA512CryptoServiceProviderdd :
sha512dd; A
=ddB C
newddD G'
SHA512CryptoServiceProviderddH c
(ddc d
)ddd e
)dde f
{ee 
stringff "
credentialsToHashff# 4
=ff5 6

secureUserff7 A
.ffA B
ToStringffB J
(ffJ K
)ffK L
+ffM N
$strffO R
+ffS T
	securePwdffU ^
.ff^ _
ToStringff_ g
(ffg h
)ffh i
;ffi j
bytegg  
[gg  !
]gg! "
buffergg# )
=gg* +
Encodinggg, 4
.gg4 5
UTF8gg5 9
.gg9 :
GetBytesgg: B
(ggB C
stringggC I
.ggI J
ConcatggJ P
(ggP Q
saltggQ U
,ggU V
credentialsToHashggW h
)ggh i
)ggi j
;ggj k
bytehh  
[hh  !
]hh! "
hashedCredsAsByteshh# 5
=hh6 7
sha512hh8 >
.hh> ?
ComputeHashhh? J
(hhJ K
bufferhhK Q
)hhQ R
;hhR S
dataii  
=ii! "
IOii# %
.ii% &
ToHexii& +
(ii+ ,
hashedCredsAsBytesii, >
)ii> ?
;ii? @
}jj 
}kk 
}ll 
}mm 
}nn 	
ifoo 

(oo 
IOoo 
.oo 

staticTrueoo 
)oo 
{pp 	
respss 
.ss 
AppendCookiess 
(ss 
newss !

HttpCookiess" ,
(ss, -
$strss- 3
,ss3 4
datass5 9
)ss9 :
)ss: ;
;ss; <
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 

staticTrue{{ 
){{ 
{|| 	
using}} 
(}} 
SecureString}} 
	securePwd}}  )
=}}* +
new}}, /
SecureString}}0 <
(}}< =
)}}= >
)}}> ?
{~~ 
using 
( 
SecureString #

secureUser$ .
=/ 0
new1 4
SecureString5 A
(A B
)B C
)C D
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
i
ÅÅ$ %
<
ÅÅ& '
$str
ÅÅ( 3
.
ÅÅ3 4
Length
ÅÅ4 :
;
ÅÅ: ;
i
ÅÅ< =
++
ÅÅ= ?
)
ÅÅ? @
{
ÇÇ 
	securePwd
ÑÑ !
.
ÑÑ! "

AppendChar
ÑÑ" ,
(
ÑÑ, -
$str
ÑÑ- 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( .
.
ÜÜ. /
Length
ÜÜ/ 5
;
ÜÜ5 6
i
ÜÜ7 8
++
ÜÜ8 :
)
ÜÜ: ;
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 3
[
ââ3 4
i
ââ4 5
]
ââ5 6
)
ââ6 7
;
ââ7 8
}
ää 
{
åå 
string
çç 
salt
çç #
=
çç$ %
$str
çç& 4
;
çç4 5
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé :
sha512
éé; A
=
ééB C
new
ééD G)
SHA512CryptoServiceProvider
ééH c
(
ééc d
)
ééd e
)
éée f
{
èè 
string
êê "
credentialsToHash
êê# 4
=
êê5 6

secureUser
êê7 A
.
êêA B
ToString
êêB J
(
êêJ K
)
êêK L
+
êêM N
$str
êêO R
+
êêS T
	securePwd
êêU ^
.
êê^ _
ToString
êê_ g
(
êêg h
)
êêh i
;
êêi j
byte
ëë  
[
ëë  !
]
ëë! "
buffer
ëë# )
=
ëë* +
Encoding
ëë, 4
.
ëë4 5
UTF8
ëë5 9
.
ëë9 :
GetBytes
ëë: B
(
ëëB C
string
ëëC I
.
ëëI J
Concat
ëëJ P
(
ëëP Q
salt
ëëQ U
,
ëëU V
credentialsToHash
ëëW h
)
ëëh i
)
ëëi j
;
ëëj k
byte
íí  
[
íí  !
]
íí! " 
hashedCredsAsBytes
íí# 5
=
íí6 7
sha512
íí8 >
.
íí> ?
ComputeHash
íí? J
(
ííJ K
buffer
ííK Q
)
ííQ R
;
ííR S
data
ìì  
=
ìì! "
IO
ìì# %
.
ìì% &
ToHex
ìì& +
(
ìì+ , 
hashedCredsAsBytes
ìì, >
)
ìì> ?
;
ìì? @
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
data
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
IO
üü 
.
üü 

staticTrue
üü 
)
üü 
{
†† 	
resp
££ 
.
££ 
AppendCookie
££ 
(
££ 
new
££ !

HttpCookie
££" ,
(
££, -
$str
££- 3
,
££3 4
data
££5 9
)
££9 :
)
££: ;
;
££; <
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
HttpRequest
®® %
req
®®& )
,
®®) *
HttpResponse
®®+ 7
resp
®®8 <
)
®®< =
{
©© 
string
™™ 
data
™™ 
;
™™ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 

staticTrue
´´ 
)
´´ 
{
¨¨ 	
using
≠≠ 
(
≠≠ 
SecureString
≠≠ 
	securePwd
≠≠  )
=
≠≠* +
new
≠≠, /
SecureString
≠≠0 <
(
≠≠< =
)
≠≠= >
)
≠≠> ?
{
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ #

secureUser
ØØ$ .
=
ØØ/ 0
new
ØØ1 4
SecureString
ØØ5 A
(
ØØA B
)
ØØB C
)
ØØC D
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
$str
±±( 3
.
±±3 4
Length
±±4 :
;
±±: ;
i
±±< =
++
±±= ?
)
±±? @
{
≤≤ 
	securePwd
¥¥ !
.
¥¥! "

AppendChar
¥¥" ,
(
¥¥, -
$str
¥¥- 8
[
¥¥8 9
i
¥¥9 :
]
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( .
.
∂∂. /
Length
∂∂/ 5
;
∂∂5 6
i
∂∂7 8
++
∂∂8 :
)
∂∂: ;
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 3
[
ππ3 4
i
ππ4 5
]
ππ5 6
)
ππ6 7
;
ππ7 8
}
∫∫ 
data
ºº 
=
ºº 

secureUser
ºº %
.
ºº% &
ToString
ºº& .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
	securePwd
ºº9 B
.
ººB C
ToString
ººC K
(
ººK L
)
ººL M
;
ººM N
}
ΩΩ 
}
ææ 
}
øø 	
else
¿¿ 
{
¡¡ 	
data
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
if
∆∆ 

(
∆∆ 
IO
∆∆ 
.
∆∆ 
staticFalse
∆∆ 
)
∆∆ 
{
«« 	
IO
…… 
.
…… 
	WriteLine
…… 
(
…… 
$str
…… /
)
……/ 0
;
……0 1
}
   	
else
ÀÀ 
{
ÃÃ 	
{
ŒŒ 
string
œœ 
salt
œœ 
=
œœ 
$str
œœ ,
;
œœ, -
using
–– 
(
–– )
SHA512CryptoServiceProvider
–– 2
sha512
––3 9
=
––: ;
new
––< ?)
SHA512CryptoServiceProvider
––@ [
(
––[ \
)
––\ ]
)
––] ^
{
—— 
byte
““ 
[
““ 
]
““ 
buffer
““ !
=
““" #
Encoding
““$ ,
.
““, -
UTF8
““- 1
.
““1 2
GetBytes
““2 :
(
““: ;
string
““; A
.
““A B
Concat
““B H
(
““H I
salt
““I M
,
““M N
data
““O S
)
““S T
)
““T U
;
““U V
byte
”” 
[
”” 
]
””  
hashedCredsAsBytes
”” -
=
””. /
sha512
””0 6
.
””6 7
ComputeHash
””7 B
(
””B C
buffer
””C I
)
””I J
;
””J K
data
‘‘ 
=
‘‘ 
IO
‘‘ 
.
‘‘ 
ToHex
‘‘ #
(
‘‘# $ 
hashedCredsAsBytes
‘‘$ 6
)
‘‘6 7
;
‘‘7 8
}
’’ 
}
÷÷ 
resp
◊◊ 
.
◊◊ 
AppendCookie
◊◊ 
(
◊◊ 
new
◊◊ !

HttpCookie
◊◊" ,
(
◊◊, -
$str
◊◊- 3
,
◊◊3 4
data
◊◊5 9
)
◊◊9 :
)
◊◊: ;
;
◊◊; <
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
HttpRequest
‹‹ %
req
‹‹& )
,
‹‹) *
HttpResponse
‹‹+ 7
resp
‹‹8 <
)
‹‹< =
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
if
ﬂﬂ 

(
ﬂﬂ 
IO
ﬂﬂ 
.
ﬂﬂ 

staticTrue
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
using
·· 
(
·· 
SecureString
·· 
	securePwd
··  )
=
··* +
new
··, /
SecureString
··0 <
(
··< =
)
··= >
)
··> ?
{
‚‚ 
using
„„ 
(
„„ 
SecureString
„„ #

secureUser
„„$ .
=
„„/ 0
new
„„1 4
SecureString
„„5 A
(
„„A B
)
„„B C
)
„„C D
{
‰‰ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
;
ÂÂ" #
i
ÂÂ$ %
<
ÂÂ& '
$str
ÂÂ( 3
.
ÂÂ3 4
Length
ÂÂ4 :
;
ÂÂ: ;
i
ÂÂ< =
++
ÂÂ= ?
)
ÂÂ? @
{
ÊÊ 
	securePwd
ËË !
.
ËË! "

AppendChar
ËË" ,
(
ËË, -
$str
ËË- 8
[
ËË8 9
i
ËË9 :
]
ËË: ;
)
ËË; <
;
ËË< =
}
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( .
.
ÍÍ. /
Length
ÍÍ/ 5
;
ÍÍ5 6
i
ÍÍ7 8
++
ÍÍ8 :
)
ÍÍ: ;
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 3
[
ÌÌ3 4
i
ÌÌ4 5
]
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
data
 
=
 

secureUser
 %
.
% &
ToString
& .
(
. /
)
/ 0
+
1 2
$str
3 6
+
7 8
	securePwd
9 B
.
B C
ToString
C K
(
K L
)
L M
;
M N
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
else
ÙÙ 
{
ıı 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
˘˘ 	
if
˙˙ 

(
˙˙ 
IO
˙˙ 
.
˙˙ 

staticTrue
˙˙ 
)
˙˙ 
{
˚˚ 	
{
˝˝ 
string
˛˛ 
salt
˛˛ 
=
˛˛ 
$str
˛˛ ,
;
˛˛, -
using
ˇˇ 
(
ˇˇ )
SHA512CryptoServiceProvider
ˇˇ 2
sha512
ˇˇ3 9
=
ˇˇ: ;
new
ˇˇ< ?)
SHA512CryptoServiceProvider
ˇˇ@ [
(
ˇˇ[ \
)
ˇˇ\ ]
)
ˇˇ] ^
{
ÄÄ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
buffer
ÅÅ !
=
ÅÅ" #
Encoding
ÅÅ$ ,
.
ÅÅ, -
UTF8
ÅÅ- 1
.
ÅÅ1 2
GetBytes
ÅÅ2 :
(
ÅÅ: ;
string
ÅÅ; A
.
ÅÅA B
Concat
ÅÅB H
(
ÅÅH I
salt
ÅÅI M
,
ÅÅM N
data
ÅÅO S
)
ÅÅS T
)
ÅÅT U
;
ÅÅU V
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ  
hashedCredsAsBytes
ÇÇ -
=
ÇÇ. /
sha512
ÇÇ0 6
.
ÇÇ6 7
ComputeHash
ÇÇ7 B
(
ÇÇB C
buffer
ÇÇC I
)
ÇÇI J
;
ÇÇJ K
data
ÉÉ 
=
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
ToHex
ÉÉ #
(
ÉÉ# $ 
hashedCredsAsBytes
ÉÉ$ 6
)
ÉÉ6 7
;
ÉÉ7 8
}
ÑÑ 
}
ÖÖ 
resp
ÜÜ 
.
ÜÜ 
AppendCookie
ÜÜ 
(
ÜÜ 
new
ÜÜ !

HttpCookie
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 3
,
ÜÜ3 4
data
ÜÜ5 9
)
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
ãã 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Öú
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_11.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_11 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 
StaticReturnsTrue##  
(##  !
)##! "
)##" #
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>>
 
IO>> 
.>> 
StaticReturnsTrue>> 
(>>  
)>>  !
)>>! "
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateHH 
voidHH 
GoodG2B1HH 
(HH 
HttpRequestHH %
reqHH& )
,HH) *
HttpResponseHH+ 7
respHH8 <
)HH< =
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK 
IOKK 
.KK 
StaticReturnsFalseKK !
(KK! "
)KK" #
)KK# $
{LL 	
dataOO 
=OO 
nullOO 
;OO 
}PP 	
elseQQ 
{RR 	
usingSS 
(SS 
SecureStringSS 
	securePwdSS  )
=SS* +
newSS, /
SecureStringSS0 <
(SS< =
)SS= >
)SS> ?
{TT 
usingUU 
(UU 
SecureStringUU #

secureUserUU$ .
=UU/ 0
newUU1 4
SecureStringUU5 A
(UUA B
)UUB C
)UUC D
{VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( 3
.WW3 4
LengthWW4 :
;WW: ;
iWW< =
++WW= ?
)WW? @
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 8
[ZZ8 9
iZZ9 :
]ZZ: ;
)ZZ; <
;ZZ< =
}[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( .
.\\. /
Length\\/ 5
;\\5 6
i\\7 8
++\\8 :
)\\: ;
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 3
[__3 4
i__4 5
]__5 6
)__6 7
;__7 8
}`` 
{bb 
stringcc 
saltcc #
=cc$ %
$strcc& 4
;cc4 5
usingdd 
(dd '
SHA512CryptoServiceProviderdd :
sha512dd; A
=ddB C
newddD G'
SHA512CryptoServiceProviderddH c
(ddc d
)ddd e
)dde f
{ee 
stringff "
credentialsToHashff# 4
=ff5 6

secureUserff7 A
.ffA B
ToStringffB J
(ffJ K
)ffK L
+ffM N
$strffO R
+ffS T
	securePwdffU ^
.ff^ _
ToStringff_ g
(ffg h
)ffh i
;ffi j
bytegg  
[gg  !
]gg! "
buffergg# )
=gg* +
Encodinggg, 4
.gg4 5
UTF8gg5 9
.gg9 :
GetBytesgg: B
(ggB C
stringggC I
.ggI J
ConcatggJ P
(ggP Q
saltggQ U
,ggU V
credentialsToHashggW h
)ggh i
)ggi j
;ggj k
bytehh  
[hh  !
]hh! "
hashedCredsAsByteshh# 5
=hh6 7
sha512hh8 >
.hh> ?
ComputeHashhh? J
(hhJ K
bufferhhK Q
)hhQ R
;hhR S
dataii  
=ii! "
IOii# %
.ii% &
ToHexii& +
(ii+ ,
hashedCredsAsBytesii, >
)ii> ?
;ii? @
}jj 
}kk 
}ll 
}mm 
}nn 	
ifoo 

(oo 
IOoo 
.oo 
StaticReturnsTrueoo  
(oo  !
)oo! "
)oo" #
{pp 	
respss 
.ss 
AppendCookiess 
(ss 
newss !

HttpCookiess" ,
(ss, -
$strss- 3
,ss3 4
datass5 9
)ss9 :
)ss: ;
;ss; <
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 
StaticReturnsTrue{{  
({{  !
){{! "
){{" #
{|| 	
using}} 
(}} 
SecureString}} 
	securePwd}}  )
=}}* +
new}}, /
SecureString}}0 <
(}}< =
)}}= >
)}}> ?
{~~ 
using 
( 
SecureString #

secureUser$ .
=/ 0
new1 4
SecureString5 A
(A B
)B C
)C D
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
i
ÅÅ$ %
<
ÅÅ& '
$str
ÅÅ( 3
.
ÅÅ3 4
Length
ÅÅ4 :
;
ÅÅ: ;
i
ÅÅ< =
++
ÅÅ= ?
)
ÅÅ? @
{
ÇÇ 
	securePwd
ÑÑ !
.
ÑÑ! "

AppendChar
ÑÑ" ,
(
ÑÑ, -
$str
ÑÑ- 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( .
.
ÜÜ. /
Length
ÜÜ/ 5
;
ÜÜ5 6
i
ÜÜ7 8
++
ÜÜ8 :
)
ÜÜ: ;
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 3
[
ââ3 4
i
ââ4 5
]
ââ5 6
)
ââ6 7
;
ââ7 8
}
ää 
{
åå 
string
çç 
salt
çç #
=
çç$ %
$str
çç& 4
;
çç4 5
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé :
sha512
éé; A
=
ééB C
new
ééD G)
SHA512CryptoServiceProvider
ééH c
(
ééc d
)
ééd e
)
éée f
{
èè 
string
êê "
credentialsToHash
êê# 4
=
êê5 6

secureUser
êê7 A
.
êêA B
ToString
êêB J
(
êêJ K
)
êêK L
+
êêM N
$str
êêO R
+
êêS T
	securePwd
êêU ^
.
êê^ _
ToString
êê_ g
(
êêg h
)
êêh i
;
êêi j
byte
ëë  
[
ëë  !
]
ëë! "
buffer
ëë# )
=
ëë* +
Encoding
ëë, 4
.
ëë4 5
UTF8
ëë5 9
.
ëë9 :
GetBytes
ëë: B
(
ëëB C
string
ëëC I
.
ëëI J
Concat
ëëJ P
(
ëëP Q
salt
ëëQ U
,
ëëU V
credentialsToHash
ëëW h
)
ëëh i
)
ëëi j
;
ëëj k
byte
íí  
[
íí  !
]
íí! " 
hashedCredsAsBytes
íí# 5
=
íí6 7
sha512
íí8 >
.
íí> ?
ComputeHash
íí? J
(
ííJ K
buffer
ííK Q
)
ííQ R
;
ííR S
data
ìì  
=
ìì! "
IO
ìì# %
.
ìì% &
ToHex
ìì& +
(
ìì+ , 
hashedCredsAsBytes
ìì, >
)
ìì> ?
;
ìì? @
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
data
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
IO
üü 
.
üü 
StaticReturnsTrue
üü  
(
üü  !
)
üü! "
)
üü" #
{
†† 	
resp
££ 
.
££ 
AppendCookie
££ 
(
££ 
new
££ !

HttpCookie
££" ,
(
££, -
$str
££- 3
,
££3 4
data
££5 9
)
££9 :
)
££: ;
;
££; <
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
HttpRequest
®® %
req
®®& )
,
®®) *
HttpResponse
®®+ 7
resp
®®8 <
)
®®< =
{
©© 
string
™™ 
data
™™ 
;
™™ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 
StaticReturnsTrue
´´  
(
´´  !
)
´´! "
)
´´" #
{
¨¨ 	
using
≠≠ 
(
≠≠ 
SecureString
≠≠ 
	securePwd
≠≠  )
=
≠≠* +
new
≠≠, /
SecureString
≠≠0 <
(
≠≠< =
)
≠≠= >
)
≠≠> ?
{
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ #

secureUser
ØØ$ .
=
ØØ/ 0
new
ØØ1 4
SecureString
ØØ5 A
(
ØØA B
)
ØØB C
)
ØØC D
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
$str
±±( 3
.
±±3 4
Length
±±4 :
;
±±: ;
i
±±< =
++
±±= ?
)
±±? @
{
≤≤ 
	securePwd
¥¥ !
.
¥¥! "

AppendChar
¥¥" ,
(
¥¥, -
$str
¥¥- 8
[
¥¥8 9
i
¥¥9 :
]
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( .
.
∂∂. /
Length
∂∂/ 5
;
∂∂5 6
i
∂∂7 8
++
∂∂8 :
)
∂∂: ;
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 3
[
ππ3 4
i
ππ4 5
]
ππ5 6
)
ππ6 7
;
ππ7 8
}
∫∫ 
data
ºº 
=
ºº 

secureUser
ºº %
.
ºº% &
ToString
ºº& .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
	securePwd
ºº9 B
.
ººB C
ToString
ººC K
(
ººK L
)
ººL M
;
ººM N
}
ΩΩ 
}
ææ 
}
øø 	
else
¿¿ 
{
¡¡ 	
data
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
if
∆∆ 

(
∆∆ 
IO
∆∆ 
.
∆∆  
StaticReturnsFalse
∆∆ !
(
∆∆! "
)
∆∆" #
)
∆∆# $
{
«« 	
IO
…… 
.
…… 
	WriteLine
…… 
(
…… 
$str
…… /
)
……/ 0
;
……0 1
}
   	
else
ÀÀ 
{
ÃÃ 	
{
ŒŒ 
string
œœ 
salt
œœ 
=
œœ 
$str
œœ ,
;
œœ, -
using
–– 
(
–– )
SHA512CryptoServiceProvider
–– 2
sha512
––3 9
=
––: ;
new
––< ?)
SHA512CryptoServiceProvider
––@ [
(
––[ \
)
––\ ]
)
––] ^
{
—— 
byte
““ 
[
““ 
]
““ 
buffer
““ !
=
““" #
Encoding
““$ ,
.
““, -
UTF8
““- 1
.
““1 2
GetBytes
““2 :
(
““: ;
string
““; A
.
““A B
Concat
““B H
(
““H I
salt
““I M
,
““M N
data
““O S
)
““S T
)
““T U
;
““U V
byte
”” 
[
”” 
]
””  
hashedCredsAsBytes
”” -
=
””. /
sha512
””0 6
.
””6 7
ComputeHash
””7 B
(
””B C
buffer
””C I
)
””I J
;
””J K
data
‘‘ 
=
‘‘ 
IO
‘‘ 
.
‘‘ 
ToHex
‘‘ #
(
‘‘# $ 
hashedCredsAsBytes
‘‘$ 6
)
‘‘6 7
;
‘‘7 8
}
’’ 
}
÷÷ 
resp
◊◊ 
.
◊◊ 
AppendCookie
◊◊ 
(
◊◊ 
new
◊◊ !

HttpCookie
◊◊" ,
(
◊◊, -
$str
◊◊- 3
,
◊◊3 4
data
◊◊5 9
)
◊◊9 :
)
◊◊: ;
;
◊◊; <
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
HttpRequest
‹‹ %
req
‹‹& )
,
‹‹) *
HttpResponse
‹‹+ 7
resp
‹‹8 <
)
‹‹< =
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
if
ﬂﬂ 

(
ﬂﬂ 
IO
ﬂﬂ 
.
ﬂﬂ 
StaticReturnsTrue
ﬂﬂ  
(
ﬂﬂ  !
)
ﬂﬂ! "
)
ﬂﬂ" #
{
‡‡ 	
using
·· 
(
·· 
SecureString
·· 
	securePwd
··  )
=
··* +
new
··, /
SecureString
··0 <
(
··< =
)
··= >
)
··> ?
{
‚‚ 
using
„„ 
(
„„ 
SecureString
„„ #

secureUser
„„$ .
=
„„/ 0
new
„„1 4
SecureString
„„5 A
(
„„A B
)
„„B C
)
„„C D
{
‰‰ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
;
ÂÂ" #
i
ÂÂ$ %
<
ÂÂ& '
$str
ÂÂ( 3
.
ÂÂ3 4
Length
ÂÂ4 :
;
ÂÂ: ;
i
ÂÂ< =
++
ÂÂ= ?
)
ÂÂ? @
{
ÊÊ 
	securePwd
ËË !
.
ËË! "

AppendChar
ËË" ,
(
ËË, -
$str
ËË- 8
[
ËË8 9
i
ËË9 :
]
ËË: ;
)
ËË; <
;
ËË< =
}
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( .
.
ÍÍ. /
Length
ÍÍ/ 5
;
ÍÍ5 6
i
ÍÍ7 8
++
ÍÍ8 :
)
ÍÍ: ;
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 3
[
ÌÌ3 4
i
ÌÌ4 5
]
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
data
 
=
 

secureUser
 %
.
% &
ToString
& .
(
. /
)
/ 0
+
1 2
$str
3 6
+
7 8
	securePwd
9 B
.
B C
ToString
C K
(
K L
)
L M
;
M N
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
else
ÙÙ 
{
ıı 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
˘˘ 	
if
˙˙ 

(
˙˙ 
IO
˙˙ 
.
˙˙ 
StaticReturnsTrue
˙˙  
(
˙˙  !
)
˙˙! "
)
˙˙" #
{
˚˚ 	
{
˝˝ 
string
˛˛ 
salt
˛˛ 
=
˛˛ 
$str
˛˛ ,
;
˛˛, -
using
ˇˇ 
(
ˇˇ )
SHA512CryptoServiceProvider
ˇˇ 2
sha512
ˇˇ3 9
=
ˇˇ: ;
new
ˇˇ< ?)
SHA512CryptoServiceProvider
ˇˇ@ [
(
ˇˇ[ \
)
ˇˇ\ ]
)
ˇˇ] ^
{
ÄÄ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
buffer
ÅÅ !
=
ÅÅ" #
Encoding
ÅÅ$ ,
.
ÅÅ, -
UTF8
ÅÅ- 1
.
ÅÅ1 2
GetBytes
ÅÅ2 :
(
ÅÅ: ;
string
ÅÅ; A
.
ÅÅA B
Concat
ÅÅB H
(
ÅÅH I
salt
ÅÅI M
,
ÅÅM N
data
ÅÅO S
)
ÅÅS T
)
ÅÅT U
;
ÅÅU V
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ  
hashedCredsAsBytes
ÇÇ -
=
ÇÇ. /
sha512
ÇÇ0 6
.
ÇÇ6 7
ComputeHash
ÇÇ7 B
(
ÇÇB C
buffer
ÇÇC I
)
ÇÇI J
;
ÇÇJ K
data
ÉÉ 
=
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
ToHex
ÉÉ #
(
ÉÉ# $ 
hashedCredsAsBytes
ÉÉ$ 6
)
ÉÉ6 7
;
ÉÉ7 8
}
ÑÑ 
}
ÖÖ 
resp
ÜÜ 
.
ÜÜ 
AppendCookie
ÜÜ 
(
ÜÜ 
new
ÜÜ !

HttpCookie
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 3
,
ÜÜ3 4
data
ÜÜ5 9
)
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
ãã 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì †Æ
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_12.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_12 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(##
 
IO## 
.## $
StaticReturnsTrueOrFalse## &
(##& '
)##' (
)##( )
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
using:: 
(:: 
SecureString:: 
	securePwd::  )
=::* +
new::, /
SecureString::0 <
(::< =
)::= >
)::> ?
{;; 
using<< 
(<< 
SecureString<< #

secureUser<<$ .
=<</ 0
new<<1 4
SecureString<<5 A
(<<A B
)<<B C
)<<C D
{== 
for>> 
(>> 
int>> 
i>> 
=>>  
$num>>! "
;>>" #
i>>$ %
<>>& '
$str>>( 3
.>>3 4
Length>>4 :
;>>: ;
i>>< =
++>>= ?
)>>? @
{?? 
	securePwdAA !
.AA! "

AppendCharAA" ,
(AA, -
$strAA- 8
[AA8 9
iAA9 :
]AA: ;
)AA; <
;AA< =
}BB 
forCC 
(CC 
intCC 
iCC 
=CC  
$numCC! "
;CC" #
iCC$ %
<CC& '
$strCC( .
.CC. /
LengthCC/ 5
;CC5 6
iCC7 8
++CC8 :
)CC: ;
{DD 
	securePwdFF !
.FF! "

AppendCharFF" ,
(FF, -
$strFF- 3
[FF3 4
iFF4 5
]FF5 6
)FF6 7
;FF7 8
}GG 
{II 
stringJJ 
saltJJ #
=JJ$ %
$strJJ& 4
;JJ4 5
usingKK 
(KK '
SHA512CryptoServiceProviderKK :
sha512KK; A
=KKB C
newKKD G'
SHA512CryptoServiceProviderKKH c
(KKc d
)KKd e
)KKe f
{LL 
stringMM "
credentialsToHashMM# 4
=MM5 6

secureUserMM7 A
.MMA B
ToStringMMB J
(MMJ K
)MMK L
+MMM N
$strMMO R
+MMS T
	securePwdMMU ^
.MM^ _
ToStringMM_ g
(MMg h
)MMh i
;MMi j
byteNN  
[NN  !
]NN! "
bufferNN# )
=NN* +
EncodingNN, 4
.NN4 5
UTF8NN5 9
.NN9 :
GetBytesNN: B
(NNB C
stringNNC I
.NNI J
ConcatNNJ P
(NNP Q
saltNNQ U
,NNU V
credentialsToHashNNW h
)NNh i
)NNi j
;NNj k
byteOO  
[OO  !
]OO! "
hashedCredsAsBytesOO# 5
=OO6 7
sha512OO8 >
.OO> ?
ComputeHashOO? J
(OOJ K
bufferOOK Q
)OOQ R
;OOR S
dataPP  
=PP! "
IOPP# %
.PP% &
ToHexPP& +
(PP+ ,
hashedCredsAsBytesPP, >
)PP> ?
;PP? @
}QQ 
}RR 
}SS 
}TT 
}UU 	
ifVV 

(VV
 
IOVV 
.VV $
StaticReturnsTrueOrFalseVV &
(VV& '
)VV' (
)VV( )
{WW 	
respZZ 
.ZZ 
AppendCookieZZ 
(ZZ 
newZZ !

HttpCookieZZ" ,
(ZZ, -
$strZZ- 3
,ZZ3 4
dataZZ5 9
)ZZ9 :
)ZZ: ;
;ZZ; <
}[[ 	
else\\ 
{]] 	
{__ 
string`` 
salt`` 
=`` 
$str`` ,
;``, -
usingaa 
(aa '
SHA512CryptoServiceProvideraa 2
sha512aa3 9
=aa: ;
newaa< ?'
SHA512CryptoServiceProvideraa@ [
(aa[ \
)aa\ ]
)aa] ^
{bb 
bytecc 
[cc 
]cc 
buffercc !
=cc" #
Encodingcc$ ,
.cc, -
UTF8cc- 1
.cc1 2
GetBytescc2 :
(cc: ;
stringcc; A
.ccA B
ConcatccB H
(ccH I
saltccI M
,ccM N
dataccO S
)ccS T
)ccT U
;ccU V
bytedd 
[dd 
]dd 
hashedCredsAsBytesdd -
=dd. /
sha512dd0 6
.dd6 7
ComputeHashdd7 B
(ddB C
bufferddC I
)ddI J
;ddJ K
dataee 
=ee 
IOee 
.ee 
ToHexee #
(ee# $
hashedCredsAsBytesee$ 6
)ee6 7
;ee7 8
}ff 
}gg 
resphh 
.hh 
AppendCookiehh 
(hh 
newhh !

HttpCookiehh" ,
(hh, -
$strhh- 3
,hh3 4
datahh5 9
)hh9 :
)hh: ;
;hh; <
}ii 	
}jj 
privateoo 
voidoo 
GoodG2Boo 
(oo 
HttpRequestoo $
reqoo% (
,oo( )
HttpResponseoo* 6
respoo7 ;
)oo; <
{pp 
stringqq 
dataqq 
;qq 
ifrr 

(rr
 
IOrr 
.rr $
StaticReturnsTrueOrFalserr &
(rr& '
)rr' (
)rr( )
{ss 	
usingtt 
(tt 
SecureStringtt 
	securePwdtt  )
=tt* +
newtt, /
SecureStringtt0 <
(tt< =
)tt= >
)tt> ?
{uu 
usingvv 
(vv 
SecureStringvv #

secureUservv$ .
=vv/ 0
newvv1 4
SecureStringvv5 A
(vvA B
)vvB C
)vvC D
{ww 
forxx 
(xx 
intxx 
ixx 
=xx  
$numxx! "
;xx" #
ixx$ %
<xx& '
$strxx( 3
.xx3 4
Lengthxx4 :
;xx: ;
ixx< =
++xx= ?
)xx? @
{yy 
	securePwd{{ !
.{{! "

AppendChar{{" ,
({{, -
$str{{- 8
[{{8 9
i{{9 :
]{{: ;
){{; <
;{{< =
}|| 
for}} 
(}} 
int}} 
i}} 
=}}  
$num}}! "
;}}" #
i}}$ %
<}}& '
$str}}( .
.}}. /
Length}}/ 5
;}}5 6
i}}7 8
++}}8 :
)}}: ;
{~~ 
	securePwd
ÄÄ !
.
ÄÄ! "

AppendChar
ÄÄ" ,
(
ÄÄ, -
$str
ÄÄ- 3
[
ÄÄ3 4
i
ÄÄ4 5
]
ÄÄ5 6
)
ÄÄ6 7
;
ÄÄ7 8
}
ÅÅ 
{
ÉÉ 
string
ÑÑ 
salt
ÑÑ #
=
ÑÑ$ %
$str
ÑÑ& 4
;
ÑÑ4 5
using
ÖÖ 
(
ÖÖ )
SHA512CryptoServiceProvider
ÖÖ :
sha512
ÖÖ; A
=
ÖÖB C
new
ÖÖD G)
SHA512CryptoServiceProvider
ÖÖH c
(
ÖÖc d
)
ÖÖd e
)
ÖÖe f
{
ÜÜ 
string
áá "
credentialsToHash
áá# 4
=
áá5 6

secureUser
áá7 A
.
ááA B
ToString
ááB J
(
ááJ K
)
ááK L
+
ááM N
$str
ááO R
+
ááS T
	securePwd
ááU ^
.
áá^ _
ToString
áá_ g
(
áág h
)
ááh i
;
áái j
byte
àà  
[
àà  !
]
àà! "
buffer
àà# )
=
àà* +
Encoding
àà, 4
.
àà4 5
UTF8
àà5 9
.
àà9 :
GetBytes
àà: B
(
ààB C
string
ààC I
.
ààI J
Concat
ààJ P
(
ààP Q
salt
ààQ U
,
ààU V
credentialsToHash
ààW h
)
ààh i
)
àài j
;
ààj k
byte
ââ  
[
ââ  !
]
ââ! " 
hashedCredsAsBytes
ââ# 5
=
ââ6 7
sha512
ââ8 >
.
ââ> ?
ComputeHash
ââ? J
(
ââJ K
buffer
ââK Q
)
ââQ R
;
ââR S
data
ää  
=
ää! "
IO
ää# %
.
ää% &
ToHex
ää& +
(
ää+ , 
hashedCredsAsBytes
ää, >
)
ää> ?
;
ää? @
}
ãã 
}
åå 
}
çç 
}
éé 
}
èè 	
else
êê 
{
ëë 	
using
íí 
(
íí 
SecureString
íí 
	securePwd
íí  )
=
íí* +
new
íí, /
SecureString
íí0 <
(
íí< =
)
íí= >
)
íí> ?
{
ìì 
using
îî 
(
îî 
SecureString
îî #

secureUser
îî$ .
=
îî/ 0
new
îî1 4
SecureString
îî5 A
(
îîA B
)
îîB C
)
îîC D
{
ïï 
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ  
$num
ññ! "
;
ññ" #
i
ññ$ %
<
ññ& '
$str
ññ( 3
.
ññ3 4
Length
ññ4 :
;
ññ: ;
i
ññ< =
++
ññ= ?
)
ññ? @
{
óó 
	securePwd
ôô !
.
ôô! "

AppendChar
ôô" ,
(
ôô, -
$str
ôô- 8
[
ôô8 9
i
ôô9 :
]
ôô: ;
)
ôô; <
;
ôô< =
}
öö 
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ  
$num
õõ! "
;
õõ" #
i
õõ$ %
<
õõ& '
$str
õõ( .
.
õõ. /
Length
õõ/ 5
;
õõ5 6
i
õõ7 8
++
õõ8 :
)
õõ: ;
{
úú 
	securePwd
ûû !
.
ûû! "

AppendChar
ûû" ,
(
ûû, -
$str
ûû- 3
[
ûû3 4
i
ûû4 5
]
ûû5 6
)
ûû6 7
;
ûû7 8
}
üü 
{
°° 
string
¢¢ 
salt
¢¢ #
=
¢¢$ %
$str
¢¢& 4
;
¢¢4 5
using
££ 
(
££ )
SHA512CryptoServiceProvider
££ :
sha512
££; A
=
££B C
new
££D G)
SHA512CryptoServiceProvider
££H c
(
££c d
)
££d e
)
££e f
{
§§ 
string
•• "
credentialsToHash
••# 4
=
••5 6

secureUser
••7 A
.
••A B
ToString
••B J
(
••J K
)
••K L
+
••M N
$str
••O R
+
••S T
	securePwd
••U ^
.
••^ _
ToString
••_ g
(
••g h
)
••h i
;
••i j
byte
¶¶  
[
¶¶  !
]
¶¶! "
buffer
¶¶# )
=
¶¶* +
Encoding
¶¶, 4
.
¶¶4 5
UTF8
¶¶5 9
.
¶¶9 :
GetBytes
¶¶: B
(
¶¶B C
string
¶¶C I
.
¶¶I J
Concat
¶¶J P
(
¶¶P Q
salt
¶¶Q U
,
¶¶U V
credentialsToHash
¶¶W h
)
¶¶h i
)
¶¶i j
;
¶¶j k
byte
ßß  
[
ßß  !
]
ßß! " 
hashedCredsAsBytes
ßß# 5
=
ßß6 7
sha512
ßß8 >
.
ßß> ?
ComputeHash
ßß? J
(
ßßJ K
buffer
ßßK Q
)
ßßQ R
;
ßßR S
data
®®  
=
®®! "
IO
®®# %
.
®®% &
ToHex
®®& +
(
®®+ , 
hashedCredsAsBytes
®®, >
)
®®> ?
;
®®? @
}
©© 
}
™™ 
}
´´ 
}
¨¨ 
}
≠≠ 	
if
ÆÆ 

(
ÆÆ
 
IO
ÆÆ 
.
ÆÆ &
StaticReturnsTrueOrFalse
ÆÆ &
(
ÆÆ& '
)
ÆÆ' (
)
ÆÆ( )
{
ØØ 	
resp
≤≤ 
.
≤≤ 
AppendCookie
≤≤ 
(
≤≤ 
new
≤≤ !

HttpCookie
≤≤" ,
(
≤≤, -
$str
≤≤- 3
,
≤≤3 4
data
≤≤5 9
)
≤≤9 :
)
≤≤: ;
;
≤≤; <
}
≥≥ 	
else
¥¥ 
{
µµ 	
resp
∏∏ 
.
∏∏ 
AppendCookie
∏∏ 
(
∏∏ 
new
∏∏ !

HttpCookie
∏∏" ,
(
∏∏, -
$str
∏∏- 3
,
∏∏3 4
data
∏∏5 9
)
∏∏9 :
)
∏∏: ;
;
∏∏; <
}
ππ 	
}
∫∫ 
private
ææ 
void
ææ 
GoodB2G
ææ 
(
ææ 
HttpRequest
ææ $
req
ææ% (
,
ææ( )
HttpResponse
ææ* 6
resp
ææ7 ;
)
ææ; <
{
øø 
string
¿¿ 
data
¿¿ 
;
¿¿ 
if
¡¡ 

(
¡¡
 
IO
¡¡ 
.
¡¡ &
StaticReturnsTrueOrFalse
¡¡ &
(
¡¡& '
)
¡¡' (
)
¡¡( )
{
¬¬ 	
using
√√ 
(
√√ 
SecureString
√√ 
	securePwd
√√  )
=
√√* +
new
√√, /
SecureString
√√0 <
(
√√< =
)
√√= >
)
√√> ?
{
ƒƒ 
using
≈≈ 
(
≈≈ 
SecureString
≈≈ #

secureUser
≈≈$ .
=
≈≈/ 0
new
≈≈1 4
SecureString
≈≈5 A
(
≈≈A B
)
≈≈B C
)
≈≈C D
{
∆∆ 
for
«« 
(
«« 
int
«« 
i
«« 
=
««  
$num
««! "
;
««" #
i
««$ %
<
««& '
$str
««( 3
.
««3 4
Length
««4 :
;
««: ;
i
««< =
++
««= ?
)
««? @
{
»» 
	securePwd
   !
.
  ! "

AppendChar
  " ,
(
  , -
$str
  - 8
[
  8 9
i
  9 :
]
  : ;
)
  ; <
;
  < =
}
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ  
$num
ÃÃ! "
;
ÃÃ" #
i
ÃÃ$ %
<
ÃÃ& '
$str
ÃÃ( .
.
ÃÃ. /
Length
ÃÃ/ 5
;
ÃÃ5 6
i
ÃÃ7 8
++
ÃÃ8 :
)
ÃÃ: ;
{
ÕÕ 
	securePwd
œœ !
.
œœ! "

AppendChar
œœ" ,
(
œœ, -
$str
œœ- 3
[
œœ3 4
i
œœ4 5
]
œœ5 6
)
œœ6 7
;
œœ7 8
}
–– 
data
““ 
=
““ 

secureUser
““ %
.
““% &
ToString
““& .
(
““. /
)
““/ 0
+
““1 2
$str
““3 6
+
““7 8
	securePwd
““9 B
.
““B C
ToString
““C K
(
““K L
)
““L M
;
““M N
}
”” 
}
‘‘ 
}
’’ 	
else
÷÷ 
{
◊◊ 	
using
ÿÿ 
(
ÿÿ 
SecureString
ÿÿ 
	securePwd
ÿÿ  )
=
ÿÿ* +
new
ÿÿ, /
SecureString
ÿÿ0 <
(
ÿÿ< =
)
ÿÿ= >
)
ÿÿ> ?
{
ŸŸ 
using
⁄⁄ 
(
⁄⁄ 
SecureString
⁄⁄ #

secureUser
⁄⁄$ .
=
⁄⁄/ 0
new
⁄⁄1 4
SecureString
⁄⁄5 A
(
⁄⁄A B
)
⁄⁄B C
)
⁄⁄C D
{
€€ 
for
‹‹ 
(
‹‹ 
int
‹‹ 
i
‹‹ 
=
‹‹  
$num
‹‹! "
;
‹‹" #
i
‹‹$ %
<
‹‹& '
$str
‹‹( 3
.
‹‹3 4
Length
‹‹4 :
;
‹‹: ;
i
‹‹< =
++
‹‹= ?
)
‹‹? @
{
›› 
	securePwd
ﬂﬂ !
.
ﬂﬂ! "

AppendChar
ﬂﬂ" ,
(
ﬂﬂ, -
$str
ﬂﬂ- 8
[
ﬂﬂ8 9
i
ﬂﬂ9 :
]
ﬂﬂ: ;
)
ﬂﬂ; <
;
ﬂﬂ< =
}
‡‡ 
for
·· 
(
·· 
int
·· 
i
·· 
=
··  
$num
··! "
;
··" #
i
··$ %
<
··& '
$str
··( .
.
··. /
Length
··/ 5
;
··5 6
i
··7 8
++
··8 :
)
··: ;
{
‚‚ 
	securePwd
‰‰ !
.
‰‰! "

AppendChar
‰‰" ,
(
‰‰, -
$str
‰‰- 3
[
‰‰3 4
i
‰‰4 5
]
‰‰5 6
)
‰‰6 7
;
‰‰7 8
}
ÂÂ 
data
ÁÁ 
=
ÁÁ 

secureUser
ÁÁ %
.
ÁÁ% &
ToString
ÁÁ& .
(
ÁÁ. /
)
ÁÁ/ 0
+
ÁÁ1 2
$str
ÁÁ3 6
+
ÁÁ7 8
	securePwd
ÁÁ9 B
.
ÁÁB C
ToString
ÁÁC K
(
ÁÁK L
)
ÁÁL M
;
ÁÁM N
}
ËË 
}
ÈÈ 
}
ÍÍ 	
if
ÎÎ 

(
ÎÎ
 
IO
ÎÎ 
.
ÎÎ &
StaticReturnsTrueOrFalse
ÎÎ &
(
ÎÎ& '
)
ÎÎ' (
)
ÎÎ( )
{
ÏÏ 	
{
ÓÓ 
string
ÔÔ 
salt
ÔÔ 
=
ÔÔ 
$str
ÔÔ ,
;
ÔÔ, -
using
 
(
 )
SHA512CryptoServiceProvider
 2
sha512
3 9
=
: ;
new
< ?)
SHA512CryptoServiceProvider
@ [
(
[ \
)
\ ]
)
] ^
{
ÒÒ 
byte
ÚÚ 
[
ÚÚ 
]
ÚÚ 
buffer
ÚÚ !
=
ÚÚ" #
Encoding
ÚÚ$ ,
.
ÚÚ, -
UTF8
ÚÚ- 1
.
ÚÚ1 2
GetBytes
ÚÚ2 :
(
ÚÚ: ;
string
ÚÚ; A
.
ÚÚA B
Concat
ÚÚB H
(
ÚÚH I
salt
ÚÚI M
,
ÚÚM N
data
ÚÚO S
)
ÚÚS T
)
ÚÚT U
;
ÚÚU V
byte
ÛÛ 
[
ÛÛ 
]
ÛÛ  
hashedCredsAsBytes
ÛÛ -
=
ÛÛ. /
sha512
ÛÛ0 6
.
ÛÛ6 7
ComputeHash
ÛÛ7 B
(
ÛÛB C
buffer
ÛÛC I
)
ÛÛI J
;
ÛÛJ K
data
ÙÙ 
=
ÙÙ 
IO
ÙÙ 
.
ÙÙ 
ToHex
ÙÙ #
(
ÙÙ# $ 
hashedCredsAsBytes
ÙÙ$ 6
)
ÙÙ6 7
;
ÙÙ7 8
}
ıı 
}
ˆˆ 
resp
˜˜ 
.
˜˜ 
AppendCookie
˜˜ 
(
˜˜ 
new
˜˜ !

HttpCookie
˜˜" ,
(
˜˜, -
$str
˜˜- 3
,
˜˜3 4
data
˜˜5 9
)
˜˜9 :
)
˜˜: ;
;
˜˜; <
}
¯¯ 	
else
˘˘ 
{
˙˙ 	
{
¸¸ 
string
˝˝ 
salt
˝˝ 
=
˝˝ 
$str
˝˝ ,
;
˝˝, -
using
˛˛ 
(
˛˛ )
SHA512CryptoServiceProvider
˛˛ 2
sha512
˛˛3 9
=
˛˛: ;
new
˛˛< ?)
SHA512CryptoServiceProvider
˛˛@ [
(
˛˛[ \
)
˛˛\ ]
)
˛˛] ^
{
ˇˇ 
byte
ÄÄ 
[
ÄÄ 
]
ÄÄ 
buffer
ÄÄ !
=
ÄÄ" #
Encoding
ÄÄ$ ,
.
ÄÄ, -
UTF8
ÄÄ- 1
.
ÄÄ1 2
GetBytes
ÄÄ2 :
(
ÄÄ: ;
string
ÄÄ; A
.
ÄÄA B
Concat
ÄÄB H
(
ÄÄH I
salt
ÄÄI M
,
ÄÄM N
data
ÄÄO S
)
ÄÄS T
)
ÄÄT U
;
ÄÄU V
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ  
hashedCredsAsBytes
ÅÅ -
=
ÅÅ. /
sha512
ÅÅ0 6
.
ÅÅ6 7
ComputeHash
ÅÅ7 B
(
ÅÅB C
buffer
ÅÅC I
)
ÅÅI J
;
ÅÅJ K
data
ÇÇ 
=
ÇÇ 
IO
ÇÇ 
.
ÇÇ 
ToHex
ÇÇ #
(
ÇÇ# $ 
hashedCredsAsBytes
ÇÇ$ 6
)
ÇÇ6 7
;
ÇÇ7 8
}
ÉÉ 
}
ÑÑ 
resp
ÖÖ 
.
ÖÖ 
AppendCookie
ÖÖ 
(
ÖÖ 
new
ÖÖ !

HttpCookie
ÖÖ" ,
(
ÖÖ, -
$str
ÖÖ- 3
,
ÖÖ3 4
data
ÖÖ5 9
)
ÖÖ9 :
)
ÖÖ: ;
;
ÖÖ; <
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
HttpRequest
ââ )
req
ââ* -
,
ââ- .
HttpResponse
ââ/ ;
resp
ââ< @
)
ââ@ A
{
ãã 
GoodG2B
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodB2G
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
}
éé 
}êê 
}ëë …ú
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_13.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_13 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.##  
STATIC_READONLY_FIVE## #
==### %
$num##% &
)##& '
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
IO>> 
.>>  
STATIC_READONLY_FIVE>> #
==>># %
$num>>% &
)>>& '
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateHH 
voidHH 
GoodG2B1HH 
(HH 
HttpRequestHH %
reqHH& )
,HH) *
HttpResponseHH+ 7
respHH8 <
)HH< =
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK 
IOKK 
.KK  
STATIC_READONLY_FIVEKK #
!=KK# %
$numKK% &
)KK& '
{LL 	
dataOO 
=OO 
nullOO 
;OO 
}PP 	
elseQQ 
{RR 	
usingSS 
(SS 
SecureStringSS 
	securePwdSS  )
=SS* +
newSS, /
SecureStringSS0 <
(SS< =
)SS= >
)SS> ?
{TT 
usingUU 
(UU 
SecureStringUU #

secureUserUU$ .
=UU/ 0
newUU1 4
SecureStringUU5 A
(UUA B
)UUB C
)UUC D
{VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( 3
.WW3 4
LengthWW4 :
;WW: ;
iWW< =
++WW= ?
)WW? @
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 8
[ZZ8 9
iZZ9 :
]ZZ: ;
)ZZ; <
;ZZ< =
}[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( .
.\\. /
Length\\/ 5
;\\5 6
i\\7 8
++\\8 :
)\\: ;
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 3
[__3 4
i__4 5
]__5 6
)__6 7
;__7 8
}`` 
{bb 
stringcc 
saltcc #
=cc$ %
$strcc& 4
;cc4 5
usingdd 
(dd '
SHA512CryptoServiceProviderdd :
sha512dd; A
=ddB C
newddD G'
SHA512CryptoServiceProviderddH c
(ddc d
)ddd e
)dde f
{ee 
stringff "
credentialsToHashff# 4
=ff5 6

secureUserff7 A
.ffA B
ToStringffB J
(ffJ K
)ffK L
+ffM N
$strffO R
+ffS T
	securePwdffU ^
.ff^ _
ToStringff_ g
(ffg h
)ffh i
;ffi j
bytegg  
[gg  !
]gg! "
buffergg# )
=gg* +
Encodinggg, 4
.gg4 5
UTF8gg5 9
.gg9 :
GetBytesgg: B
(ggB C
stringggC I
.ggI J
ConcatggJ P
(ggP Q
saltggQ U
,ggU V
credentialsToHashggW h
)ggh i
)ggi j
;ggj k
bytehh  
[hh  !
]hh! "
hashedCredsAsByteshh# 5
=hh6 7
sha512hh8 >
.hh> ?
ComputeHashhh? J
(hhJ K
bufferhhK Q
)hhQ R
;hhR S
dataii  
=ii! "
IOii# %
.ii% &
ToHexii& +
(ii+ ,
hashedCredsAsBytesii, >
)ii> ?
;ii? @
}jj 
}kk 
}ll 
}mm 
}nn 	
ifoo 

(oo 
IOoo 
.oo  
STATIC_READONLY_FIVEoo #
==oo# %
$numoo% &
)oo& '
{pp 	
respss 
.ss 
AppendCookiess 
(ss 
newss !

HttpCookiess" ,
(ss, -
$strss- 3
,ss3 4
datass5 9
)ss9 :
)ss: ;
;ss; <
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{  
STATIC_READONLY_FIVE{{ #
=={{# %
$num{{% &
){{& '
{|| 	
using}} 
(}} 
SecureString}} 
	securePwd}}  )
=}}* +
new}}, /
SecureString}}0 <
(}}< =
)}}= >
)}}> ?
{~~ 
using 
( 
SecureString #

secureUser$ .
=/ 0
new1 4
SecureString5 A
(A B
)B C
)C D
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
i
ÅÅ$ %
<
ÅÅ& '
$str
ÅÅ( 3
.
ÅÅ3 4
Length
ÅÅ4 :
;
ÅÅ: ;
i
ÅÅ< =
++
ÅÅ= ?
)
ÅÅ? @
{
ÇÇ 
	securePwd
ÑÑ !
.
ÑÑ! "

AppendChar
ÑÑ" ,
(
ÑÑ, -
$str
ÑÑ- 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( .
.
ÜÜ. /
Length
ÜÜ/ 5
;
ÜÜ5 6
i
ÜÜ7 8
++
ÜÜ8 :
)
ÜÜ: ;
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 3
[
ââ3 4
i
ââ4 5
]
ââ5 6
)
ââ6 7
;
ââ7 8
}
ää 
{
åå 
string
çç 
salt
çç #
=
çç$ %
$str
çç& 4
;
çç4 5
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé :
sha512
éé; A
=
ééB C
new
ééD G)
SHA512CryptoServiceProvider
ééH c
(
ééc d
)
ééd e
)
éée f
{
èè 
string
êê "
credentialsToHash
êê# 4
=
êê5 6

secureUser
êê7 A
.
êêA B
ToString
êêB J
(
êêJ K
)
êêK L
+
êêM N
$str
êêO R
+
êêS T
	securePwd
êêU ^
.
êê^ _
ToString
êê_ g
(
êêg h
)
êêh i
;
êêi j
byte
ëë  
[
ëë  !
]
ëë! "
buffer
ëë# )
=
ëë* +
Encoding
ëë, 4
.
ëë4 5
UTF8
ëë5 9
.
ëë9 :
GetBytes
ëë: B
(
ëëB C
string
ëëC I
.
ëëI J
Concat
ëëJ P
(
ëëP Q
salt
ëëQ U
,
ëëU V
credentialsToHash
ëëW h
)
ëëh i
)
ëëi j
;
ëëj k
byte
íí  
[
íí  !
]
íí! " 
hashedCredsAsBytes
íí# 5
=
íí6 7
sha512
íí8 >
.
íí> ?
ComputeHash
íí? J
(
ííJ K
buffer
ííK Q
)
ííQ R
;
ííR S
data
ìì  
=
ìì! "
IO
ìì# %
.
ìì% &
ToHex
ìì& +
(
ìì+ , 
hashedCredsAsBytes
ìì, >
)
ìì> ?
;
ìì? @
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
data
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
IO
üü 
.
üü "
STATIC_READONLY_FIVE
üü #
==
üü# %
$num
üü% &
)
üü& '
{
†† 	
resp
££ 
.
££ 
AppendCookie
££ 
(
££ 
new
££ !

HttpCookie
££" ,
(
££, -
$str
££- 3
,
££3 4
data
££5 9
)
££9 :
)
££: ;
;
££; <
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
HttpRequest
®® %
req
®®& )
,
®®) *
HttpResponse
®®+ 7
resp
®®8 <
)
®®< =
{
©© 
string
™™ 
data
™™ 
;
™™ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ "
STATIC_READONLY_FIVE
´´ #
==
´´# %
$num
´´% &
)
´´& '
{
¨¨ 	
using
≠≠ 
(
≠≠ 
SecureString
≠≠ 
	securePwd
≠≠  )
=
≠≠* +
new
≠≠, /
SecureString
≠≠0 <
(
≠≠< =
)
≠≠= >
)
≠≠> ?
{
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ #

secureUser
ØØ$ .
=
ØØ/ 0
new
ØØ1 4
SecureString
ØØ5 A
(
ØØA B
)
ØØB C
)
ØØC D
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
$str
±±( 3
.
±±3 4
Length
±±4 :
;
±±: ;
i
±±< =
++
±±= ?
)
±±? @
{
≤≤ 
	securePwd
¥¥ !
.
¥¥! "

AppendChar
¥¥" ,
(
¥¥, -
$str
¥¥- 8
[
¥¥8 9
i
¥¥9 :
]
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( .
.
∂∂. /
Length
∂∂/ 5
;
∂∂5 6
i
∂∂7 8
++
∂∂8 :
)
∂∂: ;
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 3
[
ππ3 4
i
ππ4 5
]
ππ5 6
)
ππ6 7
;
ππ7 8
}
∫∫ 
data
ºº 
=
ºº 

secureUser
ºº %
.
ºº% &
ToString
ºº& .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
	securePwd
ºº9 B
.
ººB C
ToString
ººC K
(
ººK L
)
ººL M
;
ººM N
}
ΩΩ 
}
ææ 
}
øø 	
else
¿¿ 
{
¡¡ 	
data
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
if
∆∆ 

(
∆∆ 
IO
∆∆ 
.
∆∆ "
STATIC_READONLY_FIVE
∆∆ #
!=
∆∆# %
$num
∆∆% &
)
∆∆& '
{
«« 	
IO
…… 
.
…… 
	WriteLine
…… 
(
…… 
$str
…… /
)
……/ 0
;
……0 1
}
   	
else
ÀÀ 
{
ÃÃ 	
{
ŒŒ 
string
œœ 
salt
œœ 
=
œœ 
$str
œœ ,
;
œœ, -
using
–– 
(
–– )
SHA512CryptoServiceProvider
–– 2
sha512
––3 9
=
––: ;
new
––< ?)
SHA512CryptoServiceProvider
––@ [
(
––[ \
)
––\ ]
)
––] ^
{
—— 
byte
““ 
[
““ 
]
““ 
buffer
““ !
=
““" #
Encoding
““$ ,
.
““, -
UTF8
““- 1
.
““1 2
GetBytes
““2 :
(
““: ;
string
““; A
.
““A B
Concat
““B H
(
““H I
salt
““I M
,
““M N
data
““O S
)
““S T
)
““T U
;
““U V
byte
”” 
[
”” 
]
””  
hashedCredsAsBytes
”” -
=
””. /
sha512
””0 6
.
””6 7
ComputeHash
””7 B
(
””B C
buffer
””C I
)
””I J
;
””J K
data
‘‘ 
=
‘‘ 
IO
‘‘ 
.
‘‘ 
ToHex
‘‘ #
(
‘‘# $ 
hashedCredsAsBytes
‘‘$ 6
)
‘‘6 7
;
‘‘7 8
}
’’ 
}
÷÷ 
resp
◊◊ 
.
◊◊ 
AppendCookie
◊◊ 
(
◊◊ 
new
◊◊ !

HttpCookie
◊◊" ,
(
◊◊, -
$str
◊◊- 3
,
◊◊3 4
data
◊◊5 9
)
◊◊9 :
)
◊◊: ;
;
◊◊; <
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
HttpRequest
‹‹ %
req
‹‹& )
,
‹‹) *
HttpResponse
‹‹+ 7
resp
‹‹8 <
)
‹‹< =
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
if
ﬂﬂ 

(
ﬂﬂ 
IO
ﬂﬂ 
.
ﬂﬂ "
STATIC_READONLY_FIVE
ﬂﬂ #
==
ﬂﬂ# %
$num
ﬂﬂ% &
)
ﬂﬂ& '
{
‡‡ 	
using
·· 
(
·· 
SecureString
·· 
	securePwd
··  )
=
··* +
new
··, /
SecureString
··0 <
(
··< =
)
··= >
)
··> ?
{
‚‚ 
using
„„ 
(
„„ 
SecureString
„„ #

secureUser
„„$ .
=
„„/ 0
new
„„1 4
SecureString
„„5 A
(
„„A B
)
„„B C
)
„„C D
{
‰‰ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
;
ÂÂ" #
i
ÂÂ$ %
<
ÂÂ& '
$str
ÂÂ( 3
.
ÂÂ3 4
Length
ÂÂ4 :
;
ÂÂ: ;
i
ÂÂ< =
++
ÂÂ= ?
)
ÂÂ? @
{
ÊÊ 
	securePwd
ËË !
.
ËË! "

AppendChar
ËË" ,
(
ËË, -
$str
ËË- 8
[
ËË8 9
i
ËË9 :
]
ËË: ;
)
ËË; <
;
ËË< =
}
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( .
.
ÍÍ. /
Length
ÍÍ/ 5
;
ÍÍ5 6
i
ÍÍ7 8
++
ÍÍ8 :
)
ÍÍ: ;
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 3
[
ÌÌ3 4
i
ÌÌ4 5
]
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
data
 
=
 

secureUser
 %
.
% &
ToString
& .
(
. /
)
/ 0
+
1 2
$str
3 6
+
7 8
	securePwd
9 B
.
B C
ToString
C K
(
K L
)
L M
;
M N
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
else
ÙÙ 
{
ıı 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
˘˘ 	
if
˙˙ 

(
˙˙ 
IO
˙˙ 
.
˙˙ "
STATIC_READONLY_FIVE
˙˙ #
==
˙˙# %
$num
˙˙% &
)
˙˙& '
{
˚˚ 	
{
˝˝ 
string
˛˛ 
salt
˛˛ 
=
˛˛ 
$str
˛˛ ,
;
˛˛, -
using
ˇˇ 
(
ˇˇ )
SHA512CryptoServiceProvider
ˇˇ 2
sha512
ˇˇ3 9
=
ˇˇ: ;
new
ˇˇ< ?)
SHA512CryptoServiceProvider
ˇˇ@ [
(
ˇˇ[ \
)
ˇˇ\ ]
)
ˇˇ] ^
{
ÄÄ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
buffer
ÅÅ !
=
ÅÅ" #
Encoding
ÅÅ$ ,
.
ÅÅ, -
UTF8
ÅÅ- 1
.
ÅÅ1 2
GetBytes
ÅÅ2 :
(
ÅÅ: ;
string
ÅÅ; A
.
ÅÅA B
Concat
ÅÅB H
(
ÅÅH I
salt
ÅÅI M
,
ÅÅM N
data
ÅÅO S
)
ÅÅS T
)
ÅÅT U
;
ÅÅU V
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ  
hashedCredsAsBytes
ÇÇ -
=
ÇÇ. /
sha512
ÇÇ0 6
.
ÇÇ6 7
ComputeHash
ÇÇ7 B
(
ÇÇB C
buffer
ÇÇC I
)
ÇÇI J
;
ÇÇJ K
data
ÉÉ 
=
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
ToHex
ÉÉ #
(
ÉÉ# $ 
hashedCredsAsBytes
ÉÉ$ 6
)
ÉÉ6 7
;
ÉÉ7 8
}
ÑÑ 
}
ÖÖ 
resp
ÜÜ 
.
ÜÜ 
AppendCookie
ÜÜ 
(
ÜÜ 
new
ÜÜ !

HttpCookie
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 3
,
ÜÜ3 4
data
ÜÜ5 9
)
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
ãã 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Âõ
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_14.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_14 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
if## 

(## 
IO## 
.## 

staticFive## 
==## 
$num## 
)## 
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
null<< 
;<< 
}== 	
if>> 

(>> 
IO>> 
.>> 

staticFive>> 
==>> 
$num>> 
)>> 
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateHH 
voidHH 
GoodG2B1HH 
(HH 
HttpRequestHH %
reqHH& )
,HH) *
HttpResponseHH+ 7
respHH8 <
)HH< =
{II 
stringJJ 
dataJJ 
;JJ 
ifKK 

(KK 
IOKK 
.KK 

staticFiveKK 
!=KK 
$numKK 
)KK 
{LL 	
dataOO 
=OO 
nullOO 
;OO 
}PP 	
elseQQ 
{RR 	
usingSS 
(SS 
SecureStringSS 
	securePwdSS  )
=SS* +
newSS, /
SecureStringSS0 <
(SS< =
)SS= >
)SS> ?
{TT 
usingUU 
(UU 
SecureStringUU #

secureUserUU$ .
=UU/ 0
newUU1 4
SecureStringUU5 A
(UUA B
)UUB C
)UUC D
{VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( 3
.WW3 4
LengthWW4 :
;WW: ;
iWW< =
++WW= ?
)WW? @
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 8
[ZZ8 9
iZZ9 :
]ZZ: ;
)ZZ; <
;ZZ< =
}[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\  
$num\\! "
;\\" #
i\\$ %
<\\& '
$str\\( .
.\\. /
Length\\/ 5
;\\5 6
i\\7 8
++\\8 :
)\\: ;
{]] 
	securePwd__ !
.__! "

AppendChar__" ,
(__, -
$str__- 3
[__3 4
i__4 5
]__5 6
)__6 7
;__7 8
}`` 
{bb 
stringcc 
saltcc #
=cc$ %
$strcc& 4
;cc4 5
usingdd 
(dd '
SHA512CryptoServiceProviderdd :
sha512dd; A
=ddB C
newddD G'
SHA512CryptoServiceProviderddH c
(ddc d
)ddd e
)dde f
{ee 
stringff "
credentialsToHashff# 4
=ff5 6

secureUserff7 A
.ffA B
ToStringffB J
(ffJ K
)ffK L
+ffM N
$strffO R
+ffS T
	securePwdffU ^
.ff^ _
ToStringff_ g
(ffg h
)ffh i
;ffi j
bytegg  
[gg  !
]gg! "
buffergg# )
=gg* +
Encodinggg, 4
.gg4 5
UTF8gg5 9
.gg9 :
GetBytesgg: B
(ggB C
stringggC I
.ggI J
ConcatggJ P
(ggP Q
saltggQ U
,ggU V
credentialsToHashggW h
)ggh i
)ggi j
;ggj k
bytehh  
[hh  !
]hh! "
hashedCredsAsByteshh# 5
=hh6 7
sha512hh8 >
.hh> ?
ComputeHashhh? J
(hhJ K
bufferhhK Q
)hhQ R
;hhR S
dataii  
=ii! "
IOii# %
.ii% &
ToHexii& +
(ii+ ,
hashedCredsAsBytesii, >
)ii> ?
;ii? @
}jj 
}kk 
}ll 
}mm 
}nn 	
ifoo 

(oo 
IOoo 
.oo 

staticFiveoo 
==oo 
$numoo 
)oo 
{pp 	
respss 
.ss 
AppendCookiess 
(ss 
newss !

HttpCookiess" ,
(ss, -
$strss- 3
,ss3 4
datass5 9
)ss9 :
)ss: ;
;ss; <
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
HttpRequestxx %
reqxx& )
,xx) *
HttpResponsexx+ 7
respxx8 <
)xx< =
{yy 
stringzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 

staticFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
using}} 
(}} 
SecureString}} 
	securePwd}}  )
=}}* +
new}}, /
SecureString}}0 <
(}}< =
)}}= >
)}}> ?
{~~ 
using 
( 
SecureString #

secureUser$ .
=/ 0
new1 4
SecureString5 A
(A B
)B C
)C D
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ  
$num
ÅÅ! "
;
ÅÅ" #
i
ÅÅ$ %
<
ÅÅ& '
$str
ÅÅ( 3
.
ÅÅ3 4
Length
ÅÅ4 :
;
ÅÅ: ;
i
ÅÅ< =
++
ÅÅ= ?
)
ÅÅ? @
{
ÇÇ 
	securePwd
ÑÑ !
.
ÑÑ! "

AppendChar
ÑÑ" ,
(
ÑÑ, -
$str
ÑÑ- 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #
i
ÜÜ$ %
<
ÜÜ& '
$str
ÜÜ( .
.
ÜÜ. /
Length
ÜÜ/ 5
;
ÜÜ5 6
i
ÜÜ7 8
++
ÜÜ8 :
)
ÜÜ: ;
{
áá 
	securePwd
ââ !
.
ââ! "

AppendChar
ââ" ,
(
ââ, -
$str
ââ- 3
[
ââ3 4
i
ââ4 5
]
ââ5 6
)
ââ6 7
;
ââ7 8
}
ää 
{
åå 
string
çç 
salt
çç #
=
çç$ %
$str
çç& 4
;
çç4 5
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé :
sha512
éé; A
=
ééB C
new
ééD G)
SHA512CryptoServiceProvider
ééH c
(
ééc d
)
ééd e
)
éée f
{
èè 
string
êê "
credentialsToHash
êê# 4
=
êê5 6

secureUser
êê7 A
.
êêA B
ToString
êêB J
(
êêJ K
)
êêK L
+
êêM N
$str
êêO R
+
êêS T
	securePwd
êêU ^
.
êê^ _
ToString
êê_ g
(
êêg h
)
êêh i
;
êêi j
byte
ëë  
[
ëë  !
]
ëë! "
buffer
ëë# )
=
ëë* +
Encoding
ëë, 4
.
ëë4 5
UTF8
ëë5 9
.
ëë9 :
GetBytes
ëë: B
(
ëëB C
string
ëëC I
.
ëëI J
Concat
ëëJ P
(
ëëP Q
salt
ëëQ U
,
ëëU V
credentialsToHash
ëëW h
)
ëëh i
)
ëëi j
;
ëëj k
byte
íí  
[
íí  !
]
íí! " 
hashedCredsAsBytes
íí# 5
=
íí6 7
sha512
íí8 >
.
íí> ?
ComputeHash
íí? J
(
ííJ K
buffer
ííK Q
)
ííQ R
;
ííR S
data
ìì  
=
ìì! "
IO
ìì# %
.
ìì% &
ToHex
ìì& +
(
ìì+ , 
hashedCredsAsBytes
ìì, >
)
ìì> ?
;
ìì? @
}
îî 
}
ïï 
}
ññ 
}
óó 
}
òò 	
else
ôô 
{
öö 	
data
ùù 
=
ùù 
null
ùù 
;
ùù 
}
ûû 	
if
üü 

(
üü 
IO
üü 
.
üü 

staticFive
üü 
==
üü 
$num
üü 
)
üü 
{
†† 	
resp
££ 
.
££ 
AppendCookie
££ 
(
££ 
new
££ !

HttpCookie
££" ,
(
££, -
$str
££- 3
,
££3 4
data
££5 9
)
££9 :
)
££: ;
;
££; <
}
§§ 	
}
•• 
private
®® 
void
®® 
GoodB2G1
®® 
(
®® 
HttpRequest
®® %
req
®®& )
,
®®) *
HttpResponse
®®+ 7
resp
®®8 <
)
®®< =
{
©© 
string
™™ 
data
™™ 
;
™™ 
if
´´ 

(
´´ 
IO
´´ 
.
´´ 

staticFive
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
¨¨ 	
using
≠≠ 
(
≠≠ 
SecureString
≠≠ 
	securePwd
≠≠  )
=
≠≠* +
new
≠≠, /
SecureString
≠≠0 <
(
≠≠< =
)
≠≠= >
)
≠≠> ?
{
ÆÆ 
using
ØØ 
(
ØØ 
SecureString
ØØ #

secureUser
ØØ$ .
=
ØØ/ 0
new
ØØ1 4
SecureString
ØØ5 A
(
ØØA B
)
ØØB C
)
ØØC D
{
∞∞ 
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
$str
±±( 3
.
±±3 4
Length
±±4 :
;
±±: ;
i
±±< =
++
±±= ?
)
±±? @
{
≤≤ 
	securePwd
¥¥ !
.
¥¥! "

AppendChar
¥¥" ,
(
¥¥, -
$str
¥¥- 8
[
¥¥8 9
i
¥¥9 :
]
¥¥: ;
)
¥¥; <
;
¥¥< =
}
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
$str
∂∂( .
.
∂∂. /
Length
∂∂/ 5
;
∂∂5 6
i
∂∂7 8
++
∂∂8 :
)
∂∂: ;
{
∑∑ 
	securePwd
ππ !
.
ππ! "

AppendChar
ππ" ,
(
ππ, -
$str
ππ- 3
[
ππ3 4
i
ππ4 5
]
ππ5 6
)
ππ6 7
;
ππ7 8
}
∫∫ 
data
ºº 
=
ºº 

secureUser
ºº %
.
ºº% &
ToString
ºº& .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
	securePwd
ºº9 B
.
ººB C
ToString
ººC K
(
ººK L
)
ººL M
;
ººM N
}
ΩΩ 
}
ææ 
}
øø 	
else
¿¿ 
{
¡¡ 	
data
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
if
∆∆ 

(
∆∆ 
IO
∆∆ 
.
∆∆ 

staticFive
∆∆ 
!=
∆∆ 
$num
∆∆ 
)
∆∆ 
{
«« 	
IO
…… 
.
…… 
	WriteLine
…… 
(
…… 
$str
…… /
)
……/ 0
;
……0 1
}
   	
else
ÀÀ 
{
ÃÃ 	
{
ŒŒ 
string
œœ 
salt
œœ 
=
œœ 
$str
œœ ,
;
œœ, -
using
–– 
(
–– )
SHA512CryptoServiceProvider
–– 2
sha512
––3 9
=
––: ;
new
––< ?)
SHA512CryptoServiceProvider
––@ [
(
––[ \
)
––\ ]
)
––] ^
{
—— 
byte
““ 
[
““ 
]
““ 
buffer
““ !
=
““" #
Encoding
““$ ,
.
““, -
UTF8
““- 1
.
““1 2
GetBytes
““2 :
(
““: ;
string
““; A
.
““A B
Concat
““B H
(
““H I
salt
““I M
,
““M N
data
““O S
)
““S T
)
““T U
;
““U V
byte
”” 
[
”” 
]
””  
hashedCredsAsBytes
”” -
=
””. /
sha512
””0 6
.
””6 7
ComputeHash
””7 B
(
””B C
buffer
””C I
)
””I J
;
””J K
data
‘‘ 
=
‘‘ 
IO
‘‘ 
.
‘‘ 
ToHex
‘‘ #
(
‘‘# $ 
hashedCredsAsBytes
‘‘$ 6
)
‘‘6 7
;
‘‘7 8
}
’’ 
}
÷÷ 
resp
◊◊ 
.
◊◊ 
AppendCookie
◊◊ 
(
◊◊ 
new
◊◊ !

HttpCookie
◊◊" ,
(
◊◊, -
$str
◊◊- 3
,
◊◊3 4
data
◊◊5 9
)
◊◊9 :
)
◊◊: ;
;
◊◊; <
}
ÿÿ 	
}
ŸŸ 
private
‹‹ 
void
‹‹ 
GoodB2G2
‹‹ 
(
‹‹ 
HttpRequest
‹‹ %
req
‹‹& )
,
‹‹) *
HttpResponse
‹‹+ 7
resp
‹‹8 <
)
‹‹< =
{
›› 
string
ﬁﬁ 
data
ﬁﬁ 
;
ﬁﬁ 
if
ﬂﬂ 

(
ﬂﬂ 
IO
ﬂﬂ 
.
ﬂﬂ 

staticFive
ﬂﬂ 
==
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
using
·· 
(
·· 
SecureString
·· 
	securePwd
··  )
=
··* +
new
··, /
SecureString
··0 <
(
··< =
)
··= >
)
··> ?
{
‚‚ 
using
„„ 
(
„„ 
SecureString
„„ #

secureUser
„„$ .
=
„„/ 0
new
„„1 4
SecureString
„„5 A
(
„„A B
)
„„B C
)
„„C D
{
‰‰ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ  
$num
ÂÂ! "
;
ÂÂ" #
i
ÂÂ$ %
<
ÂÂ& '
$str
ÂÂ( 3
.
ÂÂ3 4
Length
ÂÂ4 :
;
ÂÂ: ;
i
ÂÂ< =
++
ÂÂ= ?
)
ÂÂ? @
{
ÊÊ 
	securePwd
ËË !
.
ËË! "

AppendChar
ËË" ,
(
ËË, -
$str
ËË- 8
[
ËË8 9
i
ËË9 :
]
ËË: ;
)
ËË; <
;
ËË< =
}
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
$str
ÍÍ( .
.
ÍÍ. /
Length
ÍÍ/ 5
;
ÍÍ5 6
i
ÍÍ7 8
++
ÍÍ8 :
)
ÍÍ: ;
{
ÎÎ 
	securePwd
ÌÌ !
.
ÌÌ! "

AppendChar
ÌÌ" ,
(
ÌÌ, -
$str
ÌÌ- 3
[
ÌÌ3 4
i
ÌÌ4 5
]
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
data
 
=
 

secureUser
 %
.
% &
ToString
& .
(
. /
)
/ 0
+
1 2
$str
3 6
+
7 8
	securePwd
9 B
.
B C
ToString
C K
(
K L
)
L M
;
M N
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
else
ÙÙ 
{
ıı 	
data
¯¯ 
=
¯¯ 
null
¯¯ 
;
¯¯ 
}
˘˘ 	
if
˙˙ 

(
˙˙ 
IO
˙˙ 
.
˙˙ 

staticFive
˙˙ 
==
˙˙ 
$num
˙˙ 
)
˙˙ 
{
˚˚ 	
{
˝˝ 
string
˛˛ 
salt
˛˛ 
=
˛˛ 
$str
˛˛ ,
;
˛˛, -
using
ˇˇ 
(
ˇˇ )
SHA512CryptoServiceProvider
ˇˇ 2
sha512
ˇˇ3 9
=
ˇˇ: ;
new
ˇˇ< ?)
SHA512CryptoServiceProvider
ˇˇ@ [
(
ˇˇ[ \
)
ˇˇ\ ]
)
ˇˇ] ^
{
ÄÄ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
buffer
ÅÅ !
=
ÅÅ" #
Encoding
ÅÅ$ ,
.
ÅÅ, -
UTF8
ÅÅ- 1
.
ÅÅ1 2
GetBytes
ÅÅ2 :
(
ÅÅ: ;
string
ÅÅ; A
.
ÅÅA B
Concat
ÅÅB H
(
ÅÅH I
salt
ÅÅI M
,
ÅÅM N
data
ÅÅO S
)
ÅÅS T
)
ÅÅT U
;
ÅÅU V
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ  
hashedCredsAsBytes
ÇÇ -
=
ÇÇ. /
sha512
ÇÇ0 6
.
ÇÇ6 7
ComputeHash
ÇÇ7 B
(
ÇÇB C
buffer
ÇÇC I
)
ÇÇI J
;
ÇÇJ K
data
ÉÉ 
=
ÉÉ 
IO
ÉÉ 
.
ÉÉ 
ToHex
ÉÉ #
(
ÉÉ# $ 
hashedCredsAsBytes
ÉÉ$ 6
)
ÉÉ6 7
;
ÉÉ7 8
}
ÑÑ 
}
ÖÖ 
resp
ÜÜ 
.
ÜÜ 
AppendCookie
ÜÜ 
(
ÜÜ 
new
ÜÜ !

HttpCookie
ÜÜ" ,
(
ÜÜ, -
$str
ÜÜ- 3
,
ÜÜ3 4
data
ÜÜ5 9
)
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
}
àà 
public
ää 

override
ää 
void
ää 
Good
ää 
(
ää 
HttpRequest
ää )
req
ää* -
,
ää- .
HttpResponse
ää/ ;
resp
ää< @
)
ää@ A
{
ãã 
GoodG2B1
åå 
(
åå 
req
åå 
,
åå 
resp
åå 
)
åå 
;
åå 
GoodG2B2
çç 
(
çç 
req
çç 
,
çç 
resp
çç 
)
çç 
;
çç 
GoodB2G1
éé 
(
éé 
req
éé 
,
éé 
resp
éé 
)
éé 
;
éé 
GoodB2G2
èè 
(
èè 
req
èè 
,
èè 
resp
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ∑•
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_15.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_15 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
switch## 
(## 
$num## 
)## 
{$$ 	
case%% 
$num%% 
:%% 
using&& 
(&& 
SecureString&& 
	securePwd&&  )
=&&* +
new&&, /
SecureString&&0 <
(&&< =
)&&= >
)&&> ?
{'' 
using(( 
((( 
SecureString(( #

secureUser(($ .
=((/ 0
new((1 4
SecureString((5 A
(((A B
)((B C
)((C D
{)) 
for** 
(** 
int** 
i** 
=**  
$num**! "
;**" #
i**$ %
<**& '
$str**( 3
.**3 4
Length**4 :
;**: ;
i**< =
++**= ?
)**? @
{++ 
	securePwd-- !
.--! "

AppendChar--" ,
(--, -
$str--- 8
[--8 9
i--9 :
]--: ;
)--; <
;--< =
}.. 
for// 
(// 
int// 
i// 
=//  
$num//! "
;//" #
i//$ %
<//& '
$str//( .
.//. /
Length/// 5
;//5 6
i//7 8
++//8 :
)//: ;
{00 
	securePwd22 !
.22! "

AppendChar22" ,
(22, -
$str22- 3
[223 4
i224 5
]225 6
)226 7
;227 8
}33 
data55 
=55 

secureUser55 %
.55% &
ToString55& .
(55. /
)55/ 0
+551 2
$str553 6
+557 8
	securePwd559 B
.55B C
ToString55C K
(55K L
)55L M
;55M N
}66 
}77 
break88 
;88 
default99 
:99 
data<< 
=<< 
null<< 
;<< 
break== 
;== 
}>> 	
switch?? 
(?? 
$num?? 
)?? 
{@@ 	
caseAA 
$numAA 
:AA 
respDD 
.DD 
AppendCookieDD 
(DD 
newDD !

HttpCookieDD" ,
(DD, -
$strDD- 3
,DD3 4
dataDD5 9
)DD9 :
)DD: ;
;DD; <
breakEE 
;EE 
defaultFF 
:FF 
IOHH 
.HH 
	WriteLineHH 
(HH 
$strHH /
)HH/ 0
;HH0 1
breakII 
;II 
}JJ 	
}KK 
privateOO 
voidOO 
GoodG2B1OO 
(OO 
HttpRequestOO %
reqOO& )
,OO) *
HttpResponseOO+ 7
respOO8 <
)OO< =
{PP 
stringQQ 
dataQQ 
;QQ 
switchRR 
(RR 
$numRR 
)RR 
{SS 	
caseTT 
$numTT 
:TT 
dataWW 
=WW 
nullWW 
;WW 
breakXX 
;XX 
defaultYY 
:YY 
usingZZ 
(ZZ 
SecureStringZZ 
	securePwdZZ  )
=ZZ* +
newZZ, /
SecureStringZZ0 <
(ZZ< =
)ZZ= >
)ZZ> ?
{[[ 
using\\ 
(\\ 
SecureString\\ #

secureUser\\$ .
=\\/ 0
new\\1 4
SecureString\\5 A
(\\A B
)\\B C
)\\C D
{]] 
for^^ 
(^^ 
int^^ 
i^^ 
=^^  
$num^^! "
;^^" #
i^^$ %
<^^& '
$str^^( 3
.^^3 4
Length^^4 :
;^^: ;
i^^< =
++^^= ?
)^^? @
{__ 
	securePwdaa !
.aa! "

AppendCharaa" ,
(aa, -
$straa- 8
[aa8 9
iaa9 :
]aa: ;
)aa; <
;aa< =
}bb 
forcc 
(cc 
intcc 
icc 
=cc  
$numcc! "
;cc" #
icc$ %
<cc& '
$strcc( .
.cc. /
Lengthcc/ 5
;cc5 6
icc7 8
++cc8 :
)cc: ;
{dd 
	securePwdff !
.ff! "

AppendCharff" ,
(ff, -
$strff- 3
[ff3 4
iff4 5
]ff5 6
)ff6 7
;ff7 8
}gg 
{ii 
stringjj 
saltjj #
=jj$ %
$strjj& 4
;jj4 5
usingkk 
(kk '
SHA512CryptoServiceProviderkk :
sha512kk; A
=kkB C
newkkD G'
SHA512CryptoServiceProviderkkH c
(kkc d
)kkd e
)kke f
{ll 
stringmm "
credentialsToHashmm# 4
=mm5 6

secureUsermm7 A
.mmA B
ToStringmmB J
(mmJ K
)mmK L
+mmM N
$strmmO R
+mmS T
	securePwdmmU ^
.mm^ _
ToStringmm_ g
(mmg h
)mmh i
;mmi j
bytenn  
[nn  !
]nn! "
buffernn# )
=nn* +
Encodingnn, 4
.nn4 5
UTF8nn5 9
.nn9 :
GetBytesnn: B
(nnB C
stringnnC I
.nnI J
ConcatnnJ P
(nnP Q
saltnnQ U
,nnU V
credentialsToHashnnW h
)nnh i
)nni j
;nnj k
byteoo  
[oo  !
]oo! "
hashedCredsAsBytesoo# 5
=oo6 7
sha512oo8 >
.oo> ?
ComputeHashoo? J
(ooJ K
bufferooK Q
)ooQ R
;ooR S
datapp  
=pp! "
IOpp# %
.pp% &
ToHexpp& +
(pp+ ,
hashedCredsAsBytespp, >
)pp> ?
;pp? @
}qq 
}rr 
}ss 
}tt 
breakuu 
;uu 
}vv 	
switchww 
(ww 
$numww 
)ww 
{xx 	
caseyy 
$numyy 
:yy 
resp|| 
.|| 
AppendCookie|| 
(|| 
new|| !

HttpCookie||" ,
(||, -
$str||- 3
,||3 4
data||5 9
)||9 :
)||: ;
;||; <
break}} 
;}} 
default~~ 
:~~ 
IO
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ 
(
ÄÄ 
$str
ÄÄ /
)
ÄÄ/ 0
;
ÄÄ0 1
break
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
HttpRequest
ÜÜ %
req
ÜÜ& )
,
ÜÜ) *
HttpResponse
ÜÜ+ 7
resp
ÜÜ8 <
)
ÜÜ< =
{
áá 
string
àà 
data
àà 
;
àà 
switch
ââ 
(
ââ 
$num
ââ 
)
ââ 
{
ää 	
case
ãã 
$num
ãã 
:
ãã 
using
åå 
(
åå 
SecureString
åå 
	securePwd
åå  )
=
åå* +
new
åå, /
SecureString
åå0 <
(
åå< =
)
åå= >
)
åå> ?
{
çç 
using
éé 
(
éé 
SecureString
éé #

secureUser
éé$ .
=
éé/ 0
new
éé1 4
SecureString
éé5 A
(
ééA B
)
ééB C
)
ééC D
{
èè 
for
êê 
(
êê 
int
êê 
i
êê 
=
êê  
$num
êê! "
;
êê" #
i
êê$ %
<
êê& '
$str
êê( 3
.
êê3 4
Length
êê4 :
;
êê: ;
i
êê< =
++
êê= ?
)
êê? @
{
ëë 
	securePwd
ìì !
.
ìì! "

AppendChar
ìì" ,
(
ìì, -
$str
ìì- 8
[
ìì8 9
i
ìì9 :
]
ìì: ;
)
ìì; <
;
ìì< =
}
îî 
for
ïï 
(
ïï 
int
ïï 
i
ïï 
=
ïï  
$num
ïï! "
;
ïï" #
i
ïï$ %
<
ïï& '
$str
ïï( .
.
ïï. /
Length
ïï/ 5
;
ïï5 6
i
ïï7 8
++
ïï8 :
)
ïï: ;
{
ññ 
	securePwd
òò !
.
òò! "

AppendChar
òò" ,
(
òò, -
$str
òò- 3
[
òò3 4
i
òò4 5
]
òò5 6
)
òò6 7
;
òò7 8
}
ôô 
{
õõ 
string
úú 
salt
úú #
=
úú$ %
$str
úú& 4
;
úú4 5
using
ùù 
(
ùù )
SHA512CryptoServiceProvider
ùù :
sha512
ùù; A
=
ùùB C
new
ùùD G)
SHA512CryptoServiceProvider
ùùH c
(
ùùc d
)
ùùd e
)
ùùe f
{
ûû 
string
üü "
credentialsToHash
üü# 4
=
üü5 6

secureUser
üü7 A
.
üüA B
ToString
üüB J
(
üüJ K
)
üüK L
+
üüM N
$str
üüO R
+
üüS T
	securePwd
üüU ^
.
üü^ _
ToString
üü_ g
(
üüg h
)
üüh i
;
üüi j
byte
††  
[
††  !
]
††! "
buffer
††# )
=
††* +
Encoding
††, 4
.
††4 5
UTF8
††5 9
.
††9 :
GetBytes
††: B
(
††B C
string
††C I
.
††I J
Concat
††J P
(
††P Q
salt
††Q U
,
††U V
credentialsToHash
††W h
)
††h i
)
††i j
;
††j k
byte
°°  
[
°°  !
]
°°! " 
hashedCredsAsBytes
°°# 5
=
°°6 7
sha512
°°8 >
.
°°> ?
ComputeHash
°°? J
(
°°J K
buffer
°°K Q
)
°°Q R
;
°°R S
data
¢¢  
=
¢¢! "
IO
¢¢# %
.
¢¢% &
ToHex
¢¢& +
(
¢¢+ , 
hashedCredsAsBytes
¢¢, >
)
¢¢> ?
;
¢¢? @
}
££ 
}
§§ 
}
•• 
}
¶¶ 
break
ßß 
;
ßß 
default
®® 
:
®® 
data
´´ 
=
´´ 
null
´´ 
;
´´ 
break
¨¨ 
;
¨¨ 
}
≠≠ 	
switch
ÆÆ 
(
ÆÆ 
$num
ÆÆ 
)
ÆÆ 
{
ØØ 	
case
∞∞ 
$num
∞∞ 
:
∞∞ 
resp
≥≥ 
.
≥≥ 
AppendCookie
≥≥ 
(
≥≥ 
new
≥≥ !

HttpCookie
≥≥" ,
(
≥≥, -
$str
≥≥- 3
,
≥≥3 4
data
≥≥5 9
)
≥≥9 :
)
≥≥: ;
;
≥≥; <
break
¥¥ 
;
¥¥ 
default
µµ 
:
µµ 
IO
∑∑ 
.
∑∑ 
	WriteLine
∑∑ 
(
∑∑ 
$str
∑∑ /
)
∑∑/ 0
;
∑∑0 1
break
∏∏ 
;
∏∏ 
}
ππ 	
}
∫∫ 
private
ΩΩ 
void
ΩΩ 
GoodB2G1
ΩΩ 
(
ΩΩ 
HttpRequest
ΩΩ %
req
ΩΩ& )
,
ΩΩ) *
HttpResponse
ΩΩ+ 7
resp
ΩΩ8 <
)
ΩΩ< =
{
ææ 
string
øø 
data
øø 
;
øø 
switch
¿¿ 
(
¿¿ 
$num
¿¿ 
)
¿¿ 
{
¡¡ 	
case
¬¬ 
$num
¬¬ 
:
¬¬ 
using
√√ 
(
√√ 
SecureString
√√ 
	securePwd
√√  )
=
√√* +
new
√√, /
SecureString
√√0 <
(
√√< =
)
√√= >
)
√√> ?
{
ƒƒ 
using
≈≈ 
(
≈≈ 
SecureString
≈≈ #

secureUser
≈≈$ .
=
≈≈/ 0
new
≈≈1 4
SecureString
≈≈5 A
(
≈≈A B
)
≈≈B C
)
≈≈C D
{
∆∆ 
for
«« 
(
«« 
int
«« 
i
«« 
=
««  
$num
««! "
;
««" #
i
««$ %
<
««& '
$str
««( 3
.
««3 4
Length
««4 :
;
««: ;
i
««< =
++
««= ?
)
««? @
{
»» 
	securePwd
   !
.
  ! "

AppendChar
  " ,
(
  , -
$str
  - 8
[
  8 9
i
  9 :
]
  : ;
)
  ; <
;
  < =
}
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ  
$num
ÃÃ! "
;
ÃÃ" #
i
ÃÃ$ %
<
ÃÃ& '
$str
ÃÃ( .
.
ÃÃ. /
Length
ÃÃ/ 5
;
ÃÃ5 6
i
ÃÃ7 8
++
ÃÃ8 :
)
ÃÃ: ;
{
ÕÕ 
	securePwd
œœ !
.
œœ! "

AppendChar
œœ" ,
(
œœ, -
$str
œœ- 3
[
œœ3 4
i
œœ4 5
]
œœ5 6
)
œœ6 7
;
œœ7 8
}
–– 
data
““ 
=
““ 

secureUser
““ %
.
““% &
ToString
““& .
(
““. /
)
““/ 0
+
““1 2
$str
““3 6
+
““7 8
	securePwd
““9 B
.
““B C
ToString
““C K
(
““K L
)
““L M
;
““M N
}
”” 
}
‘‘ 
break
’’ 
;
’’ 
default
÷÷ 
:
÷÷ 
data
ŸŸ 
=
ŸŸ 
null
ŸŸ 
;
ŸŸ 
break
⁄⁄ 
;
⁄⁄ 
}
€€ 	
switch
‹‹ 
(
‹‹ 
$num
‹‹ 
)
‹‹ 
{
›› 	
case
ﬁﬁ 
$num
ﬁﬁ 
:
ﬁﬁ 
IO
‡‡ 
.
‡‡ 
	WriteLine
‡‡ 
(
‡‡ 
$str
‡‡ /
)
‡‡/ 0
;
‡‡0 1
break
·· 
;
·· 
default
‚‚ 
:
‚‚ 
{
‰‰ 	
string
ÂÂ 
salt
ÂÂ 
=
ÂÂ 
$str
ÂÂ (
;
ÂÂ( )
using
ÊÊ 
(
ÊÊ )
SHA512CryptoServiceProvider
ÊÊ .
sha512
ÊÊ/ 5
=
ÊÊ6 7
new
ÊÊ8 ;)
SHA512CryptoServiceProvider
ÊÊ< W
(
ÊÊW X
)
ÊÊX Y
)
ÊÊY Z
{
ÁÁ 
byte
ËË 
[
ËË 
]
ËË 
buffer
ËË 
=
ËË 
Encoding
ËË  (
.
ËË( )
UTF8
ËË) -
.
ËË- .
GetBytes
ËË. 6
(
ËË6 7
string
ËË7 =
.
ËË= >
Concat
ËË> D
(
ËËD E
salt
ËËE I
,
ËËI J
data
ËËK O
)
ËËO P
)
ËËP Q
;
ËËQ R
byte
ÈÈ 
[
ÈÈ 
]
ÈÈ  
hashedCredsAsBytes
ÈÈ )
=
ÈÈ* +
sha512
ÈÈ, 2
.
ÈÈ2 3
ComputeHash
ÈÈ3 >
(
ÈÈ> ?
buffer
ÈÈ? E
)
ÈÈE F
;
ÈÈF G
data
ÍÍ 
=
ÍÍ 
IO
ÍÍ 
.
ÍÍ 
ToHex
ÍÍ 
(
ÍÍ   
hashedCredsAsBytes
ÍÍ  2
)
ÍÍ2 3
;
ÍÍ3 4
}
ÎÎ 
}
ÏÏ 	
resp
ÌÌ 
.
ÌÌ 
AppendCookie
ÌÌ 
(
ÌÌ 
new
ÌÌ 

HttpCookie
ÌÌ (
(
ÌÌ( )
$str
ÌÌ) /
,
ÌÌ/ 0
data
ÌÌ1 5
)
ÌÌ5 6
)
ÌÌ6 7
;
ÌÌ7 8
break
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
}
 
private
ÛÛ 
void
ÛÛ 
GoodB2G2
ÛÛ 
(
ÛÛ 
HttpRequest
ÛÛ %
req
ÛÛ& )
,
ÛÛ) *
HttpResponse
ÛÛ+ 7
resp
ÛÛ8 <
)
ÛÛ< =
{
ÙÙ 
string
ıı 
data
ıı 
;
ıı 
switch
ˆˆ 
(
ˆˆ 
$num
ˆˆ 
)
ˆˆ 
{
˜˜ 	
case
¯¯ 
$num
¯¯ 
:
¯¯ 
using
˘˘ 
(
˘˘ 
SecureString
˘˘ 
	securePwd
˘˘  )
=
˘˘* +
new
˘˘, /
SecureString
˘˘0 <
(
˘˘< =
)
˘˘= >
)
˘˘> ?
{
˙˙ 
using
˚˚ 
(
˚˚ 
SecureString
˚˚ #

secureUser
˚˚$ .
=
˚˚/ 0
new
˚˚1 4
SecureString
˚˚5 A
(
˚˚A B
)
˚˚B C
)
˚˚C D
{
¸¸ 
for
˝˝ 
(
˝˝ 
int
˝˝ 
i
˝˝ 
=
˝˝  
$num
˝˝! "
;
˝˝" #
i
˝˝$ %
<
˝˝& '
$str
˝˝( 3
.
˝˝3 4
Length
˝˝4 :
;
˝˝: ;
i
˝˝< =
++
˝˝= ?
)
˝˝? @
{
˛˛ 
	securePwd
ÄÄ !
.
ÄÄ! "

AppendChar
ÄÄ" ,
(
ÄÄ, -
$str
ÄÄ- 8
[
ÄÄ8 9
i
ÄÄ9 :
]
ÄÄ: ;
)
ÄÄ; <
;
ÄÄ< =
}
ÅÅ 
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ  
$num
ÇÇ! "
;
ÇÇ" #
i
ÇÇ$ %
<
ÇÇ& '
$str
ÇÇ( .
.
ÇÇ. /
Length
ÇÇ/ 5
;
ÇÇ5 6
i
ÇÇ7 8
++
ÇÇ8 :
)
ÇÇ: ;
{
ÉÉ 
	securePwd
ÖÖ !
.
ÖÖ! "

AppendChar
ÖÖ" ,
(
ÖÖ, -
$str
ÖÖ- 3
[
ÖÖ3 4
i
ÖÖ4 5
]
ÖÖ5 6
)
ÖÖ6 7
;
ÖÖ7 8
}
ÜÜ 
data
àà 
=
àà 

secureUser
àà %
.
àà% &
ToString
àà& .
(
àà. /
)
àà/ 0
+
àà1 2
$str
àà3 6
+
àà7 8
	securePwd
àà9 B
.
ààB C
ToString
ààC K
(
ààK L
)
ààL M
;
ààM N
}
ââ 
}
ää 
break
ãã 
;
ãã 
default
åå 
:
åå 
data
èè 
=
èè 
null
èè 
;
èè 
break
êê 
;
êê 
}
ëë 	
switch
íí 
(
íí 
$num
íí 
)
íí 
{
ìì 	
case
îî 
$num
îî 
:
îî 
{
ññ 	
string
óó 
salt
óó 
=
óó 
$str
óó (
;
óó( )
using
òò 
(
òò )
SHA512CryptoServiceProvider
òò .
sha512
òò/ 5
=
òò6 7
new
òò8 ;)
SHA512CryptoServiceProvider
òò< W
(
òòW X
)
òòX Y
)
òòY Z
{
ôô 
byte
öö 
[
öö 
]
öö 
buffer
öö 
=
öö 
Encoding
öö  (
.
öö( )
UTF8
öö) -
.
öö- .
GetBytes
öö. 6
(
öö6 7
string
öö7 =
.
öö= >
Concat
öö> D
(
ööD E
salt
ööE I
,
ööI J
data
ööK O
)
ööO P
)
ööP Q
;
ööQ R
byte
õõ 
[
õõ 
]
õõ  
hashedCredsAsBytes
õõ )
=
õõ* +
sha512
õõ, 2
.
õõ2 3
ComputeHash
õõ3 >
(
õõ> ?
buffer
õõ? E
)
õõE F
;
õõF G
data
úú 
=
úú 
IO
úú 
.
úú 
ToHex
úú 
(
úú   
hashedCredsAsBytes
úú  2
)
úú2 3
;
úú3 4
}
ùù 
}
ûû 	
resp
üü 
.
üü 
AppendCookie
üü 
(
üü 
new
üü 

HttpCookie
üü (
(
üü( )
$str
üü) /
,
üü/ 0
data
üü1 5
)
üü5 6
)
üü6 7
;
üü7 8
break
†† 
;
†† 
default
°° 
:
°° 
IO
££ 
.
££ 
	WriteLine
££ 
(
££ 
$str
££ /
)
££/ 0
;
££0 1
break
§§ 
;
§§ 
}
•• 	
}
¶¶ 
public
®® 

override
®® 
void
®® 
Good
®® 
(
®® 
HttpRequest
®® )
req
®®* -
,
®®- .
HttpResponse
®®/ ;
resp
®®< @
)
®®@ A
{
©© 
GoodG2B1
™™ 
(
™™ 
req
™™ 
,
™™ 
resp
™™ 
)
™™ 
;
™™ 
GoodG2B2
´´ 
(
´´ 
req
´´ 
,
´´ 
resp
´´ 
)
´´ 
;
´´ 
GoodB2G1
¨¨ 
(
¨¨ 
req
¨¨ 
,
¨¨ 
resp
¨¨ 
)
¨¨ 
;
¨¨ 
GoodB2G2
≠≠ 
(
≠≠ 
req
≠≠ 
,
≠≠ 
resp
≠≠ 
)
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± ˙R
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_16.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_16 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
while## 
(## 
true## 
)## 
{$$ 	
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
break77 
;77 
}88 	
while99 
(99 
true99 
)99 
{:: 	
resp== 
.== 
AppendCookie== 
(== 
new== !

HttpCookie==" ,
(==, -
$str==- 3
,==3 4
data==5 9
)==9 :
)==: ;
;==; <
break>> 
;>> 
}?? 	
}@@ 
privateDD 
voidDD 
GoodG2BDD 
(DD 
HttpRequestDD $
reqDD% (
,DD( )
HttpResponseDD* 6
respDD7 ;
)DD; <
{EE 
stringFF 
dataFF 
;FF 
whileGG 
(GG 
trueGG 
)GG 
{HH 	
usingII 
(II 
SecureStringII 
	securePwdII  )
=II* +
newII, /
SecureStringII0 <
(II< =
)II= >
)II> ?
{JJ 
usingKK 
(KK 
SecureStringKK #

secureUserKK$ .
=KK/ 0
newKK1 4
SecureStringKK5 A
(KKA B
)KKB C
)KKC D
{LL 
forMM 
(MM 
intMM 
iMM 
=MM  
$numMM! "
;MM" #
iMM$ %
<MM& '
$strMM( 3
.MM3 4
LengthMM4 :
;MM: ;
iMM< =
++MM= ?
)MM? @
{NN 
	securePwdPP !
.PP! "

AppendCharPP" ,
(PP, -
$strPP- 8
[PP8 9
iPP9 :
]PP: ;
)PP; <
;PP< =
}QQ 
forRR 
(RR 
intRR 
iRR 
=RR  
$numRR! "
;RR" #
iRR$ %
<RR& '
$strRR( .
.RR. /
LengthRR/ 5
;RR5 6
iRR7 8
++RR8 :
)RR: ;
{SS 
	securePwdUU !
.UU! "

AppendCharUU" ,
(UU, -
$strUU- 3
[UU3 4
iUU4 5
]UU5 6
)UU6 7
;UU7 8
}VV 
{XX 
stringYY 
saltYY #
=YY$ %
$strYY& 4
;YY4 5
usingZZ 
(ZZ '
SHA512CryptoServiceProviderZZ :
sha512ZZ; A
=ZZB C
newZZD G'
SHA512CryptoServiceProviderZZH c
(ZZc d
)ZZd e
)ZZe f
{[[ 
string\\ "
credentialsToHash\\# 4
=\\5 6

secureUser\\7 A
.\\A B
ToString\\B J
(\\J K
)\\K L
+\\M N
$str\\O R
+\\S T
	securePwd\\U ^
.\\^ _
ToString\\_ g
(\\g h
)\\h i
;\\i j
byte]]  
[]]  !
]]]! "
buffer]]# )
=]]* +
Encoding]], 4
.]]4 5
UTF8]]5 9
.]]9 :
GetBytes]]: B
(]]B C
string]]C I
.]]I J
Concat]]J P
(]]P Q
salt]]Q U
,]]U V
credentialsToHash]]W h
)]]h i
)]]i j
;]]j k
byte^^  
[^^  !
]^^! "
hashedCredsAsBytes^^# 5
=^^6 7
sha512^^8 >
.^^> ?
ComputeHash^^? J
(^^J K
buffer^^K Q
)^^Q R
;^^R S
data__  
=__! "
IO__# %
.__% &
ToHex__& +
(__+ ,
hashedCredsAsBytes__, >
)__> ?
;__? @
}`` 
}aa 
}bb 
}cc 
breakdd 
;dd 
}ee 	
whileff 
(ff 
trueff 
)ff 
{gg 	
respjj 
.jj 
AppendCookiejj 
(jj 
newjj !

HttpCookiejj" ,
(jj, -
$strjj- 3
,jj3 4
datajj5 9
)jj9 :
)jj: ;
;jj; <
breakkk 
;kk 
}ll 	
}mm 
privatepp 
voidpp 
GoodB2Gpp 
(pp 
HttpRequestpp $
reqpp% (
,pp( )
HttpResponsepp* 6
resppp7 ;
)pp; <
{qq 
stringrr 
datarr 
;rr 
whiless 
(ss 
truess 
)ss 
{tt 	
usinguu 
(uu 
SecureStringuu 
	securePwduu  )
=uu* +
newuu, /
SecureStringuu0 <
(uu< =
)uu= >
)uu> ?
{vv 
usingww 
(ww 
SecureStringww #

secureUserww$ .
=ww/ 0
newww1 4
SecureStringww5 A
(wwA B
)wwB C
)wwC D
{xx 
foryy 
(yy 
intyy 
iyy 
=yy  
$numyy! "
;yy" #
iyy$ %
<yy& '
$stryy( 3
.yy3 4
Lengthyy4 :
;yy: ;
iyy< =
++yy= ?
)yy? @
{zz 
	securePwd|| !
.||! "

AppendChar||" ,
(||, -
$str||- 8
[||8 9
i||9 :
]||: ;
)||; <
;||< =
}}} 
for~~ 
(~~ 
int~~ 
i~~ 
=~~  
$num~~! "
;~~" #
i~~$ %
<~~& '
$str~~( .
.~~. /
Length~~/ 5
;~~5 6
i~~7 8
++~~8 :
)~~: ;
{ 
	securePwd
ÅÅ !
.
ÅÅ! "

AppendChar
ÅÅ" ,
(
ÅÅ, -
$str
ÅÅ- 3
[
ÅÅ3 4
i
ÅÅ4 5
]
ÅÅ5 6
)
ÅÅ6 7
;
ÅÅ7 8
}
ÇÇ 
data
ÑÑ 
=
ÑÑ 

secureUser
ÑÑ %
.
ÑÑ% &
ToString
ÑÑ& .
(
ÑÑ. /
)
ÑÑ/ 0
+
ÑÑ1 2
$str
ÑÑ3 6
+
ÑÑ7 8
	securePwd
ÑÑ9 B
.
ÑÑB C
ToString
ÑÑC K
(
ÑÑK L
)
ÑÑL M
;
ÑÑM N
}
ÖÖ 
}
ÜÜ 
break
áá 
;
áá 
}
àà 	
while
ââ 
(
ââ 
true
ââ 
)
ââ 
{
ää 	
{
åå 
string
çç 
salt
çç 
=
çç 
$str
çç ,
;
çç, -
using
éé 
(
éé )
SHA512CryptoServiceProvider
éé 2
sha512
éé3 9
=
éé: ;
new
éé< ?)
SHA512CryptoServiceProvider
éé@ [
(
éé[ \
)
éé\ ]
)
éé] ^
{
èè 
byte
êê 
[
êê 
]
êê 
buffer
êê !
=
êê" #
Encoding
êê$ ,
.
êê, -
UTF8
êê- 1
.
êê1 2
GetBytes
êê2 :
(
êê: ;
string
êê; A
.
êêA B
Concat
êêB H
(
êêH I
salt
êêI M
,
êêM N
data
êêO S
)
êêS T
)
êêT U
;
êêU V
byte
ëë 
[
ëë 
]
ëë  
hashedCredsAsBytes
ëë -
=
ëë. /
sha512
ëë0 6
.
ëë6 7
ComputeHash
ëë7 B
(
ëëB C
buffer
ëëC I
)
ëëI J
;
ëëJ K
data
íí 
=
íí 
IO
íí 
.
íí 
ToHex
íí #
(
íí# $ 
hashedCredsAsBytes
íí$ 6
)
íí6 7
;
íí7 8
}
ìì 
}
îî 
resp
ïï 
.
ïï 
AppendCookie
ïï 
(
ïï 
new
ïï !

HttpCookie
ïï" ,
(
ïï, -
$str
ïï- 3
,
ïï3 4
data
ïï5 9
)
ïï9 :
)
ïï: ;
;
ïï; <
break
ññ 
;
ññ 
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
HttpRequest
öö )
req
öö* -
,
öö- .
HttpResponse
öö/ ;
resp
öö< @
)
öö@ A
{
õõ 
GoodG2B
úú 
(
úú 
req
úú 
,
úú 
resp
úú 
)
úú 
;
úú 
GoodB2G
ùù 
(
ùù 
req
ùù 
,
ùù 
resp
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° çR
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_17.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_17 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using'' 
('' 
SecureString'' 
	securePwd'' %
=''& '
new''( +
SecureString'', 8
(''8 9
)''9 :
)'': ;
{(( 	
using)) 
()) 
SecureString)) 

secureUser))  *
=))+ ,
new))- 0
SecureString))1 =
())= >
)))> ?
)))? @
{** 
for++ 
(++ 
int++ 
i++ 
=++ 
$num++ 
;++ 
i++  !
<++" #
$str++$ /
.++/ 0
Length++0 6
;++6 7
i++8 9
++++9 ;
)++; <
{,, 
	securePwd.. 
... 

AppendChar.. (
(..( )
$str..) 4
[..4 5
i..5 6
]..6 7
)..7 8
;..8 9
}// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00  !
<00" #
$str00$ *
.00* +
Length00+ 1
;001 2
i003 4
++004 6
)006 7
{11 
	securePwd33 
.33 

AppendChar33 (
(33( )
$str33) /
[33/ 0
i330 1
]331 2
)332 3
;333 4
}44 
data66 
=66 

secureUser66 !
.66! "
ToString66" *
(66* +
)66+ ,
+66- .
$str66/ 2
+663 4
	securePwd665 >
.66> ?
ToString66? G
(66G H
)66H I
;66I J
}77 
}88 	
for99 
(99 
int99 
j99 
=99 
$num99 
;99 
j99 
<99 
$num99 
;99 
j99  
++99  "
)99" #
{:: 	
resp== 
.== 
AppendCookie== 
(== 
new== !

HttpCookie==" ,
(==, -
$str==- 3
,==3 4
data==5 9
)==9 :
)==: ;
;==; <
}>> 	
}?? 
privateCC 
voidCC 
GoodG2BCC 
(CC 
HttpRequestCC $
reqCC% (
,CC( )
HttpResponseCC* 6
respCC7 ;
)CC; <
{DD 
stringEE 
dataEE 
;EE 
usingFF 
(FF 
SecureStringFF 
	securePwdFF %
=FF& '
newFF( +
SecureStringFF, 8
(FF8 9
)FF9 :
)FF: ;
{GG 	
usingHH 
(HH 
SecureStringHH 

secureUserHH  *
=HH+ ,
newHH- 0
SecureStringHH1 =
(HH= >
)HH> ?
)HH? @
{II 
forJJ 
(JJ 
intJJ 
iJJ 
=JJ 
$numJJ 
;JJ 
iJJ  !
<JJ" #
$strJJ$ /
.JJ/ 0
LengthJJ0 6
;JJ6 7
iJJ8 9
++JJ9 ;
)JJ; <
{KK 
	securePwdMM 
.MM 

AppendCharMM (
(MM( )
$strMM) 4
[MM4 5
iMM5 6
]MM6 7
)MM7 8
;MM8 9
}NN 
forOO 
(OO 
intOO 
iOO 
=OO 
$numOO 
;OO 
iOO  !
<OO" #
$strOO$ *
.OO* +
LengthOO+ 1
;OO1 2
iOO3 4
++OO4 6
)OO6 7
{PP 
	securePwdRR 
.RR 

AppendCharRR (
(RR( )
$strRR) /
[RR/ 0
iRR0 1
]RR1 2
)RR2 3
;RR3 4
}SS 
{UU 
stringVV 
saltVV 
=VV  !
$strVV" 0
;VV0 1
usingWW 
(WW '
SHA512CryptoServiceProviderWW 6
sha512WW7 =
=WW> ?
newWW@ C'
SHA512CryptoServiceProviderWWD _
(WW_ `
)WW` a
)WWa b
{XX 
stringYY 
credentialsToHashYY 0
=YY1 2

secureUserYY3 =
.YY= >
ToStringYY> F
(YYF G
)YYG H
+YYI J
$strYYK N
+YYO P
	securePwdYYQ Z
.YYZ [
ToStringYY[ c
(YYc d
)YYd e
;YYe f
byteZZ 
[ZZ 
]ZZ 
bufferZZ %
=ZZ& '
EncodingZZ( 0
.ZZ0 1
UTF8ZZ1 5
.ZZ5 6
GetBytesZZ6 >
(ZZ> ?
stringZZ? E
.ZZE F
ConcatZZF L
(ZZL M
saltZZM Q
,ZZQ R
credentialsToHashZZS d
)ZZd e
)ZZe f
;ZZf g
byte[[ 
[[[ 
][[ 
hashedCredsAsBytes[[ 1
=[[2 3
sha512[[4 :
.[[: ;
ComputeHash[[; F
([[F G
buffer[[G M
)[[M N
;[[N O
data\\ 
=\\ 
IO\\ !
.\\! "
ToHex\\" '
(\\' (
hashedCredsAsBytes\\( :
)\\: ;
;\\; <
}]] 
}^^ 
}__ 
}`` 	
foraa 
(aa 
intaa 
jaa 
=aa 
$numaa 
;aa 
jaa 
<aa 
$numaa 
;aa 
jaa  
++aa  "
)aa" #
{bb 	
respee 
.ee 
AppendCookieee 
(ee 
newee !

HttpCookieee" ,
(ee, -
$stree- 3
,ee3 4
dataee5 9
)ee9 :
)ee: ;
;ee; <
}ff 	
}gg 
privatejj 
voidjj 
GoodB2Gjj 
(jj 
HttpRequestjj $
reqjj% (
,jj( )
HttpResponsejj* 6
respjj7 ;
)jj; <
{kk 
stringll 
datall 
;ll 
usingmm 
(mm 
SecureStringmm 
	securePwdmm %
=mm& '
newmm( +
SecureStringmm, 8
(mm8 9
)mm9 :
)mm: ;
{nn 	
usingoo 
(oo 
SecureStringoo 

secureUseroo  *
=oo+ ,
newoo- 0
SecureStringoo1 =
(oo= >
)oo> ?
)oo? @
{pp 
forqq 
(qq 
intqq 
iqq 
=qq 
$numqq 
;qq 
iqq  !
<qq" #
$strqq$ /
.qq/ 0
Lengthqq0 6
;qq6 7
iqq8 9
++qq9 ;
)qq; <
{rr 
	securePwdtt 
.tt 

AppendChartt (
(tt( )
$strtt) 4
[tt4 5
itt5 6
]tt6 7
)tt7 8
;tt8 9
}uu 
forvv 
(vv 
intvv 
ivv 
=vv 
$numvv 
;vv 
ivv  !
<vv" #
$strvv$ *
.vv* +
Lengthvv+ 1
;vv1 2
ivv3 4
++vv4 6
)vv6 7
{ww 
	securePwdyy 
.yy 

AppendCharyy (
(yy( )
$stryy) /
[yy/ 0
iyy0 1
]yy1 2
)yy2 3
;yy3 4
}zz 
data|| 
=|| 

secureUser|| !
.||! "
ToString||" *
(||* +
)||+ ,
+||- .
$str||/ 2
+||3 4
	securePwd||5 >
.||> ?
ToString||? G
(||G H
)||H I
;||I J
}}} 
}~~ 	
for 
( 
int 
k 
= 
$num 
; 
k 
< 
$num 
; 
k  
++  "
)" #
{
ÄÄ 	
{
ÇÇ 
string
ÉÉ 
salt
ÉÉ 
=
ÉÉ 
$str
ÉÉ ,
;
ÉÉ, -
using
ÑÑ 
(
ÑÑ )
SHA512CryptoServiceProvider
ÑÑ 2
sha512
ÑÑ3 9
=
ÑÑ: ;
new
ÑÑ< ?)
SHA512CryptoServiceProvider
ÑÑ@ [
(
ÑÑ[ \
)
ÑÑ\ ]
)
ÑÑ] ^
{
ÖÖ 
byte
ÜÜ 
[
ÜÜ 
]
ÜÜ 
buffer
ÜÜ !
=
ÜÜ" #
Encoding
ÜÜ$ ,
.
ÜÜ, -
UTF8
ÜÜ- 1
.
ÜÜ1 2
GetBytes
ÜÜ2 :
(
ÜÜ: ;
string
ÜÜ; A
.
ÜÜA B
Concat
ÜÜB H
(
ÜÜH I
salt
ÜÜI M
,
ÜÜM N
data
ÜÜO S
)
ÜÜS T
)
ÜÜT U
;
ÜÜU V
byte
áá 
[
áá 
]
áá  
hashedCredsAsBytes
áá -
=
áá. /
sha512
áá0 6
.
áá6 7
ComputeHash
áá7 B
(
ááB C
buffer
ááC I
)
ááI J
;
ááJ K
data
àà 
=
àà 
IO
àà 
.
àà 
ToHex
àà #
(
àà# $ 
hashedCredsAsBytes
àà$ 6
)
àà6 7
;
àà7 8
}
ââ 
}
ää 
resp
ãã 
.
ãã 
AppendCookie
ãã 
(
ãã 
new
ãã !

HttpCookie
ãã" ,
(
ãã, -
$str
ãã- 3
,
ãã3 4
data
ãã5 9
)
ãã9 :
)
ãã: ;
;
ãã; <
}
åå 	
}
çç 
public
èè 

override
èè 
void
èè 
Good
èè 
(
èè 
HttpRequest
èè )
req
èè* -
,
èè- .
HttpResponse
èè/ ;
resp
èè< @
)
èè@ A
{
êê 
GoodG2B
ëë 
(
ëë 
req
ëë 
,
ëë 
resp
ëë 
)
ëë 
;
ëë 
GoodB2G
íí 
(
íí 
req
íí 
,
íí 
resp
íí 
)
íí 
;
íí 
}
ìì 
}ïï 
}ññ øÉ
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_21.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_21 0
:1 2
AbstractTestCaseWeb3 F
{ 
private!! 
bool!! 

badPrivate!! 
=!! 
false!! #
;!!# $
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
using&& 
(&& 
SecureString&& 
	securePwd&& %
=&&& '
new&&( +
SecureString&&, 8
(&&8 9
)&&9 :
)&&: ;
{'' 	
using(( 
((( 
SecureString(( 

secureUser((  *
=((+ ,
new((- 0
SecureString((1 =
(((= >
)((> ?
)((? @
{)) 
for** 
(** 
int** 
i** 
=** 
$num** 
;** 
i**  !
<**" #
$str**$ /
.**/ 0
Length**0 6
;**6 7
i**8 9
++**9 ;
)**; <
{++ 
	securePwd-- 
.-- 

AppendChar-- (
(--( )
$str--) 4
[--4 5
i--5 6
]--6 7
)--7 8
;--8 9
}.. 
for// 
(// 
int// 
i// 
=// 
$num// 
;// 
i//  !
<//" #
$str//$ *
.//* +
Length//+ 1
;//1 2
i//3 4
++//4 6
)//6 7
{00 
	securePwd22 
.22 

AppendChar22 (
(22( )
$str22) /
[22/ 0
i220 1
]221 2
)222 3
;223 4
}33 
data55 
=55 

secureUser55 !
.55! "
ToString55" *
(55* +
)55+ ,
+55- .
$str55/ 2
+553 4
	securePwd555 >
.55> ?
ToString55? G
(55G H
)55H I
;55I J
}66 
}77 	

badPrivate88 
=88 
true88 
;88 
BadSink99 
(99 
data99 
,99 
req99 
,99 
resp99  
)99  !
;99! "
}:: 
private<< 
void<< 
BadSink<< 
(<< 
string<< 
data<<  $
,<<% &
HttpRequest<<' 2
req<<3 6
,<<6 7
HttpResponse<<8 D
resp<<E I
)<<I J
{== 
if>> 

(>> 

badPrivate>> 
)>> 
{?? 	
respBB 
.BB 
AppendCookieBB 
(BB 
newBB !

HttpCookieBB" ,
(BB, -
$strBB- 3
,BB3 4
dataBB5 9
)BB9 :
)BB: ;
;BB; <
}CC 	
}DD 
privateGG 
boolGG 
goodB2G1PrivateGG  
=GG! "
falseGG# (
;GG( )
privateHH 
boolHH 
goodB2G2PrivateHH  
=HH! "
falseHH# (
;HH( )
privateII 
boolII 
goodG2BPrivateII 
=II  !
falseII" '
;II' (
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
HttpRequestKK )
reqKK* -
,KK- .
HttpResponseKK/ ;
respKK< @
)KK@ A
{LL 
GoodB2G1MM 
(MM 
reqMM 
,MM 
respMM 
)MM 
;MM 
GoodB2G2NN 
(NN 
reqNN 
,NN 
respNN 
)NN 
;NN 
GoodG2BOO 
(OO 
reqOO 
,OO 
respOO 
)OO 
;OO 
}PP 
privateSS 
voidSS 
GoodB2G1SS 
(SS 
HttpRequestSS %
reqSS& )
,SS) *
HttpResponseSS+ 7
respSS8 <
)SS< =
{TT 
stringUU 
dataUU 
;UU 
usingVV 
(VV 
SecureStringVV 
	securePwdVV %
=VV& '
newVV( +
SecureStringVV, 8
(VV8 9
)VV9 :
)VV: ;
{WW 	
usingXX 
(XX 
SecureStringXX 

secureUserXX  *
=XX+ ,
newXX- 0
SecureStringXX1 =
(XX= >
)XX> ?
)XX? @
{YY 
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ  !
<ZZ" #
$strZZ$ /
.ZZ/ 0
LengthZZ0 6
;ZZ6 7
iZZ8 9
++ZZ9 ;
)ZZ; <
{[[ 
	securePwd]] 
.]] 

AppendChar]] (
(]]( )
$str]]) 4
[]]4 5
i]]5 6
]]]6 7
)]]7 8
;]]8 9
}^^ 
for__ 
(__ 
int__ 
i__ 
=__ 
$num__ 
;__ 
i__  !
<__" #
$str__$ *
.__* +
Length__+ 1
;__1 2
i__3 4
++__4 6
)__6 7
{`` 
	securePwdbb 
.bb 

AppendCharbb (
(bb( )
$strbb) /
[bb/ 0
ibb0 1
]bb1 2
)bb2 3
;bb3 4
}cc 
dataee 
=ee 

secureUseree !
.ee! "
ToStringee" *
(ee* +
)ee+ ,
+ee- .
$stree/ 2
+ee3 4
	securePwdee5 >
.ee> ?
ToStringee? G
(eeG H
)eeH I
;eeI J
}ff 
}gg 	
goodB2G1Privatehh 
=hh 
falsehh 
;hh  
GoodB2G1Sinkii 
(ii 
dataii 
,ii 
reqii 
,ii  
respii! %
)ii% &
;ii& '
}jj 
privatell 
voidll 
GoodB2G1Sinkll 
(ll 
stringll $
datall% )
,ll* +
HttpRequestll, 7
reqll8 ;
,ll; <
HttpResponsell= I
respllJ N
)llN O
{mm 
ifnn 

(nn 
goodB2G1Privatenn 
)nn 
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
$strqq /
)qq/ 0
;qq0 1
}rr 	
elsess 
{tt 	
{vv 
stringww 
saltww 
=ww 
$strww ,
;ww, -
usingxx 
(xx '
SHA512CryptoServiceProviderxx 2
sha512xx3 9
=xx: ;
newxx< ?'
SHA512CryptoServiceProviderxx@ [
(xx[ \
)xx\ ]
)xx] ^
{yy 
bytezz 
[zz 
]zz 
bufferzz !
=zz" #
Encodingzz$ ,
.zz, -
UTF8zz- 1
.zz1 2
GetByteszz2 :
(zz: ;
stringzz; A
.zzA B
ConcatzzB H
(zzH I
saltzzI M
,zzM N
datazzO S
)zzS T
)zzT U
;zzU V
byte{{ 
[{{ 
]{{ 
hashedCredsAsBytes{{ -
={{. /
sha512{{0 6
.{{6 7
ComputeHash{{7 B
({{B C
buffer{{C I
){{I J
;{{J K
data|| 
=|| 
IO|| 
.|| 
ToHex|| #
(||# $
hashedCredsAsBytes||$ 6
)||6 7
;||7 8
}}} 
}~~ 
resp 
. 
AppendCookie 
( 
new !

HttpCookie" ,
(, -
$str- 3
,3 4
data5 9
)9 :
): ;
;; <
}
ÄÄ 	
}
ÅÅ 
private
ÑÑ 
void
ÑÑ 
GoodB2G2
ÑÑ 
(
ÑÑ 
HttpRequest
ÑÑ %
req
ÑÑ& )
,
ÑÑ) *
HttpResponse
ÑÑ+ 7
resp
ÑÑ8 <
)
ÑÑ< =
{
ÖÖ 
string
ÜÜ 
data
ÜÜ 
;
ÜÜ 
using
áá 
(
áá 
SecureString
áá 
	securePwd
áá %
=
áá& '
new
áá( +
SecureString
áá, 8
(
áá8 9
)
áá9 :
)
áá: ;
{
àà 	
using
ââ 
(
ââ 
SecureString
ââ 

secureUser
ââ  *
=
ââ+ ,
new
ââ- 0
SecureString
ââ1 =
(
ââ= >
)
ââ> ?
)
ââ? @
{
ää 
for
ãã 
(
ãã 
int
ãã 
i
ãã 
=
ãã 
$num
ãã 
;
ãã 
i
ãã  !
<
ãã" #
$str
ãã$ /
.
ãã/ 0
Length
ãã0 6
;
ãã6 7
i
ãã8 9
++
ãã9 ;
)
ãã; <
{
åå 
	securePwd
éé 
.
éé 

AppendChar
éé (
(
éé( )
$str
éé) 4
[
éé4 5
i
éé5 6
]
éé6 7
)
éé7 8
;
éé8 9
}
èè 
for
êê 
(
êê 
int
êê 
i
êê 
=
êê 
$num
êê 
;
êê 
i
êê  !
<
êê" #
$str
êê$ *
.
êê* +
Length
êê+ 1
;
êê1 2
i
êê3 4
++
êê4 6
)
êê6 7
{
ëë 
	securePwd
ìì 
.
ìì 

AppendChar
ìì (
(
ìì( )
$str
ìì) /
[
ìì/ 0
i
ìì0 1
]
ìì1 2
)
ìì2 3
;
ìì3 4
}
îî 
data
ññ 
=
ññ 

secureUser
ññ !
.
ññ! "
ToString
ññ" *
(
ññ* +
)
ññ+ ,
+
ññ- .
$str
ññ/ 2
+
ññ3 4
	securePwd
ññ5 >
.
ññ> ?
ToString
ññ? G
(
ññG H
)
ññH I
;
ññI J
}
óó 
}
òò 	
goodB2G2Private
ôô 
=
ôô 
true
ôô 
;
ôô 
GoodB2G2Sink
öö 
(
öö 
data
öö 
,
öö 
req
öö 
,
öö  
resp
öö! %
)
öö% &
;
öö& '
}
õõ 
private
ùù 
void
ùù 
GoodB2G2Sink
ùù 
(
ùù 
string
ùù $
data
ùù% )
,
ùù* +
HttpRequest
ùù, 7
req
ùù8 ;
,
ùù; <
HttpResponse
ùù= I
resp
ùùJ N
)
ùùN O
{
ûû 
if
üü 

(
üü 
goodB2G2Private
üü 
)
üü 
{
†† 	
{
¢¢ 
string
££ 
salt
££ 
=
££ 
$str
££ ,
;
££, -
using
§§ 
(
§§ )
SHA512CryptoServiceProvider
§§ 2
sha512
§§3 9
=
§§: ;
new
§§< ?)
SHA512CryptoServiceProvider
§§@ [
(
§§[ \
)
§§\ ]
)
§§] ^
{
•• 
byte
¶¶ 
[
¶¶ 
]
¶¶ 
buffer
¶¶ !
=
¶¶" #
Encoding
¶¶$ ,
.
¶¶, -
UTF8
¶¶- 1
.
¶¶1 2
GetBytes
¶¶2 :
(
¶¶: ;
string
¶¶; A
.
¶¶A B
Concat
¶¶B H
(
¶¶H I
salt
¶¶I M
,
¶¶M N
data
¶¶O S
)
¶¶S T
)
¶¶T U
;
¶¶U V
byte
ßß 
[
ßß 
]
ßß  
hashedCredsAsBytes
ßß -
=
ßß. /
sha512
ßß0 6
.
ßß6 7
ComputeHash
ßß7 B
(
ßßB C
buffer
ßßC I
)
ßßI J
;
ßßJ K
data
®® 
=
®® 
IO
®® 
.
®® 
ToHex
®® #
(
®®# $ 
hashedCredsAsBytes
®®$ 6
)
®®6 7
;
®®7 8
}
©© 
}
™™ 
resp
´´ 
.
´´ 
AppendCookie
´´ 
(
´´ 
new
´´ !

HttpCookie
´´" ,
(
´´, -
$str
´´- 3
,
´´3 4
data
´´5 9
)
´´9 :
)
´´: ;
;
´´; <
}
¨¨ 	
}
≠≠ 
private
∞∞ 
void
∞∞ 
GoodG2B
∞∞ 
(
∞∞ 
HttpRequest
∞∞ $
req
∞∞% (
,
∞∞( )
HttpResponse
∞∞* 6
resp
∞∞7 ;
)
∞∞; <
{
±± 
string
≤≤ 
data
≤≤ 
;
≤≤ 
using
≥≥ 
(
≥≥ 
SecureString
≥≥ 
	securePwd
≥≥ %
=
≥≥& '
new
≥≥( +
SecureString
≥≥, 8
(
≥≥8 9
)
≥≥9 :
)
≥≥: ;
{
¥¥ 	
using
µµ 
(
µµ 
SecureString
µµ 

secureUser
µµ  *
=
µµ+ ,
new
µµ- 0
SecureString
µµ1 =
(
µµ= >
)
µµ> ?
)
µµ? @
{
∂∂ 
for
∑∑ 
(
∑∑ 
int
∑∑ 
i
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
i
∑∑  !
<
∑∑" #
$str
∑∑$ /
.
∑∑/ 0
Length
∑∑0 6
;
∑∑6 7
i
∑∑8 9
++
∑∑9 ;
)
∑∑; <
{
∏∏ 
	securePwd
∫∫ 
.
∫∫ 

AppendChar
∫∫ (
(
∫∫( )
$str
∫∫) 4
[
∫∫4 5
i
∫∫5 6
]
∫∫6 7
)
∫∫7 8
;
∫∫8 9
}
ªª 
for
ºº 
(
ºº 
int
ºº 
i
ºº 
=
ºº 
$num
ºº 
;
ºº 
i
ºº  !
<
ºº" #
$str
ºº$ *
.
ºº* +
Length
ºº+ 1
;
ºº1 2
i
ºº3 4
++
ºº4 6
)
ºº6 7
{
ΩΩ 
	securePwd
øø 
.
øø 

AppendChar
øø (
(
øø( )
$str
øø) /
[
øø/ 0
i
øø0 1
]
øø1 2
)
øø2 3
;
øø3 4
}
¿¿ 
{
¬¬ 
string
√√ 
salt
√√ 
=
√√  !
$str
√√" 0
;
√√0 1
using
ƒƒ 
(
ƒƒ )
SHA512CryptoServiceProvider
ƒƒ 6
sha512
ƒƒ7 =
=
ƒƒ> ?
new
ƒƒ@ C)
SHA512CryptoServiceProvider
ƒƒD _
(
ƒƒ_ `
)
ƒƒ` a
)
ƒƒa b
{
≈≈ 
string
∆∆ 
credentialsToHash
∆∆ 0
=
∆∆1 2

secureUser
∆∆3 =
.
∆∆= >
ToString
∆∆> F
(
∆∆F G
)
∆∆G H
+
∆∆I J
$str
∆∆K N
+
∆∆O P
	securePwd
∆∆Q Z
.
∆∆Z [
ToString
∆∆[ c
(
∆∆c d
)
∆∆d e
;
∆∆e f
byte
«« 
[
«« 
]
«« 
buffer
«« %
=
««& '
Encoding
««( 0
.
««0 1
UTF8
««1 5
.
««5 6
GetBytes
««6 >
(
««> ?
string
««? E
.
««E F
Concat
««F L
(
««L M
salt
««M Q
,
««Q R
credentialsToHash
««S d
)
««d e
)
««e f
;
««f g
byte
»» 
[
»» 
]
»»  
hashedCredsAsBytes
»» 1
=
»»2 3
sha512
»»4 :
.
»»: ;
ComputeHash
»»; F
(
»»F G
buffer
»»G M
)
»»M N
;
»»N O
data
…… 
=
…… 
IO
…… !
.
……! "
ToHex
……" '
(
……' ( 
hashedCredsAsBytes
……( :
)
……: ;
;
……; <
}
   
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 	
goodG2BPrivate
ŒŒ 
=
ŒŒ 
true
ŒŒ 
;
ŒŒ 
GoodG2BSink
œœ 
(
œœ 
data
œœ 
,
œœ 
req
œœ 
,
œœ 
resp
œœ  $
)
œœ$ %
;
œœ% &
}
–– 
private
““ 
void
““ 
GoodG2BSink
““ 
(
““ 
string
““ #
data
““$ (
,
““) *
HttpRequest
““+ 6
req
““7 :
,
““: ;
HttpResponse
““< H
resp
““I M
)
““M N
{
”” 
if
‘‘ 

(
‘‘ 
goodG2BPrivate
‘‘ 
)
‘‘ 
{
’’ 	
resp
ÿÿ 
.
ÿÿ 
AppendCookie
ÿÿ 
(
ÿÿ 
new
ÿÿ !

HttpCookie
ÿÿ" ,
(
ÿÿ, -
$str
ÿÿ- 3
,
ÿÿ3 4
data
ÿÿ5 9
)
ÿÿ9 :
)
ÿÿ: ;
;
ÿÿ; <
}
ŸŸ 	
}
⁄⁄ 
}‹‹ 
}›› î^
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_22a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_22a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public!! 

static!! 
bool!! 
badPublicStatic!! &
=!!' (
false!!) .
;!!. /
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
=%% 
null%% 
;%% 
using&& 
(&& 
SecureString&& 
	securePwd&& %
=&&& '
new&&( +
SecureString&&, 8
(&&8 9
)&&9 :
)&&: ;
{'' 	
using(( 
((( 
SecureString(( 

secureUser((  *
=((+ ,
new((- 0
SecureString((1 =
(((= >
)((> ?
)((? @
{)) 
for** 
(** 
int** 
i** 
=** 
$num** 
;** 
i**  !
<**" #
$str**$ /
.**/ 0
Length**0 6
;**6 7
i**8 9
++**9 ;
)**; <
{++ 
	securePwd-- 
.-- 

AppendChar-- (
(--( )
$str--) 4
[--4 5
i--5 6
]--6 7
)--7 8
;--8 9
}.. 
for// 
(// 
int// 
i// 
=// 
$num// 
;// 
i//  !
<//" #
$str//$ *
.//* +
Length//+ 1
;//1 2
i//3 4
++//4 6
)//6 7
{00 
	securePwd22 
.22 

AppendChar22 (
(22( )
$str22) /
[22/ 0
i220 1
]221 2
)222 3
;223 4
}33 
data55 
=55 

secureUser55 !
.55! "
ToString55" *
(55* +
)55+ ,
+55- .
$str55/ 2
+553 4
	securePwd555 >
.55> ?
ToString55? G
(55G H
)55H I
;55I J
}66 
}77 	
badPublicStatic88 
=88 
true88 
;88 7
+CWE315_Cleartext_Storage_in_Cookie__Web_22b99 3
.993 4
BadSink994 ;
(99; <
data99< @
,99A B
req99C F
,99F G
resp99H L
)99L M
;99M N
}:: 
public== 

static== 
bool==  
goodB2G1PublicStatic== +
===, -
false==. 3
;==3 4
public>> 

static>> 
bool>>  
goodB2G2PublicStatic>> +
=>>, -
false>>. 3
;>>3 4
public?? 

static?? 
bool?? 
goodG2BPublicStatic?? *
=??+ ,
false??- 2
;??2 3
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
HttpRequestAA )
reqAA* -
,AA- .
HttpResponseAA/ ;
respAA< @
)AA@ A
{BB 
GoodB2G1CC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
GoodB2G2DD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
GoodG2BEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodB2G1II 
(II 
HttpRequestII %
reqII& )
,II) *
HttpResponseII+ 7
respII8 <
)II< =
{JJ 
stringKK 
dataKK 
=KK 
nullKK 
;KK 
usingLL 
(LL 
SecureStringLL 
	securePwdLL %
=LL& '
newLL( +
SecureStringLL, 8
(LL8 9
)LL9 :
)LL: ;
{MM 	
usingNN 
(NN 
SecureStringNN 

secureUserNN  *
=NN+ ,
newNN- 0
SecureStringNN1 =
(NN= >
)NN> ?
)NN? @
{OO 
forPP 
(PP 
intPP 
iPP 
=PP 
$numPP 
;PP 
iPP  !
<PP" #
$strPP$ /
.PP/ 0
LengthPP0 6
;PP6 7
iPP8 9
++PP9 ;
)PP; <
{QQ 
	securePwdSS 
.SS 

AppendCharSS (
(SS( )
$strSS) 4
[SS4 5
iSS5 6
]SS6 7
)SS7 8
;SS8 9
}TT 
forUU 
(UU 
intUU 
iUU 
=UU 
$numUU 
;UU 
iUU  !
<UU" #
$strUU$ *
.UU* +
LengthUU+ 1
;UU1 2
iUU3 4
++UU4 6
)UU6 7
{VV 
	securePwdXX 
.XX 

AppendCharXX (
(XX( )
$strXX) /
[XX/ 0
iXX0 1
]XX1 2
)XX2 3
;XX3 4
}YY 
data[[ 
=[[ 

secureUser[[ !
.[[! "
ToString[[" *
([[* +
)[[+ ,
+[[- .
$str[[/ 2
+[[3 4
	securePwd[[5 >
.[[> ?
ToString[[? G
([[G H
)[[H I
;[[I J
}\\ 
}]] 	 
goodB2G1PublicStatic^^ 
=^^ 
false^^ $
;^^$ %7
+CWE315_Cleartext_Storage_in_Cookie__Web_22b__ 3
.__3 4
GoodB2G1Sink__4 @
(__@ A
data__A E
,__F G
req__H K
,__K L
resp__M Q
)__Q R
;__R S
}`` 
privatecc 
voidcc 
GoodB2G2cc 
(cc 
HttpRequestcc %
reqcc& )
,cc) *
HttpResponsecc+ 7
respcc8 <
)cc< =
{dd 
stringee 
dataee 
=ee 
nullee 
;ee 
usingff 
(ff 
SecureStringff 
	securePwdff %
=ff& '
newff( +
SecureStringff, 8
(ff8 9
)ff9 :
)ff: ;
{gg 	
usinghh 
(hh 
SecureStringhh 

secureUserhh  *
=hh+ ,
newhh- 0
SecureStringhh1 =
(hh= >
)hh> ?
)hh? @
{ii 
forjj 
(jj 
intjj 
ijj 
=jj 
$numjj 
;jj 
ijj  !
<jj" #
$strjj$ /
.jj/ 0
Lengthjj0 6
;jj6 7
ijj8 9
++jj9 ;
)jj; <
{kk 
	securePwdmm 
.mm 

AppendCharmm (
(mm( )
$strmm) 4
[mm4 5
imm5 6
]mm6 7
)mm7 8
;mm8 9
}nn 
foroo 
(oo 
intoo 
ioo 
=oo 
$numoo 
;oo 
ioo  !
<oo" #
$stroo$ *
.oo* +
Lengthoo+ 1
;oo1 2
ioo3 4
++oo4 6
)oo6 7
{pp 
	securePwdrr 
.rr 

AppendCharrr (
(rr( )
$strrr) /
[rr/ 0
irr0 1
]rr1 2
)rr2 3
;rr3 4
}ss 
datauu 
=uu 

secureUseruu !
.uu! "
ToStringuu" *
(uu* +
)uu+ ,
+uu- .
$struu/ 2
+uu3 4
	securePwduu5 >
.uu> ?
ToStringuu? G
(uuG H
)uuH I
;uuI J
}vv 
}ww 	 
goodB2G2PublicStaticxx 
=xx 
truexx #
;xx# $7
+CWE315_Cleartext_Storage_in_Cookie__Web_22byy 3
.yy3 4
GoodB2G2Sinkyy4 @
(yy@ A
datayyA E
,yyF G
reqyyH K
,yyK L
respyyM Q
)yyQ R
;yyR S
}zz 
private}} 
void}} 
GoodG2B}} 
(}} 
HttpRequest}} $
req}}% (
,}}( )
HttpResponse}}* 6
resp}}7 ;
)}}; <
{~~ 
string 
data 
= 
null 
; 
using
ÄÄ 
(
ÄÄ 
SecureString
ÄÄ 
	securePwd
ÄÄ %
=
ÄÄ& '
new
ÄÄ( +
SecureString
ÄÄ, 8
(
ÄÄ8 9
)
ÄÄ9 :
)
ÄÄ: ;
{
ÅÅ 	
using
ÇÇ 
(
ÇÇ 
SecureString
ÇÇ 

secureUser
ÇÇ  *
=
ÇÇ+ ,
new
ÇÇ- 0
SecureString
ÇÇ1 =
(
ÇÇ= >
)
ÇÇ> ?
)
ÇÇ? @
{
ÉÉ 
for
ÑÑ 
(
ÑÑ 
int
ÑÑ 
i
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
i
ÑÑ  !
<
ÑÑ" #
$str
ÑÑ$ /
.
ÑÑ/ 0
Length
ÑÑ0 6
;
ÑÑ6 7
i
ÑÑ8 9
++
ÑÑ9 ;
)
ÑÑ; <
{
ÖÖ 
	securePwd
áá 
.
áá 

AppendChar
áá (
(
áá( )
$str
áá) 4
[
áá4 5
i
áá5 6
]
áá6 7
)
áá7 8
;
áá8 9
}
àà 
for
ââ 
(
ââ 
int
ââ 
i
ââ 
=
ââ 
$num
ââ 
;
ââ 
i
ââ  !
<
ââ" #
$str
ââ$ *
.
ââ* +
Length
ââ+ 1
;
ââ1 2
i
ââ3 4
++
ââ4 6
)
ââ6 7
{
ää 
	securePwd
åå 
.
åå 

AppendChar
åå (
(
åå( )
$str
åå) /
[
åå/ 0
i
åå0 1
]
åå1 2
)
åå2 3
;
åå3 4
}
çç 
{
èè 
string
êê 
salt
êê 
=
êê  !
$str
êê" 0
;
êê0 1
using
ëë 
(
ëë )
SHA512CryptoServiceProvider
ëë 6
sha512
ëë7 =
=
ëë> ?
new
ëë@ C)
SHA512CryptoServiceProvider
ëëD _
(
ëë_ `
)
ëë` a
)
ëëa b
{
íí 
string
ìì 
credentialsToHash
ìì 0
=
ìì1 2

secureUser
ìì3 =
.
ìì= >
ToString
ìì> F
(
ììF G
)
ììG H
+
ììI J
$str
ììK N
+
ììO P
	securePwd
ììQ Z
.
ììZ [
ToString
ìì[ c
(
ììc d
)
ììd e
;
ììe f
byte
îî 
[
îî 
]
îî 
buffer
îî %
=
îî& '
Encoding
îî( 0
.
îî0 1
UTF8
îî1 5
.
îî5 6
GetBytes
îî6 >
(
îî> ?
string
îî? E
.
îîE F
Concat
îîF L
(
îîL M
salt
îîM Q
,
îîQ R
credentialsToHash
îîS d
)
îîd e
)
îîe f
;
îîf g
byte
ïï 
[
ïï 
]
ïï  
hashedCredsAsBytes
ïï 1
=
ïï2 3
sha512
ïï4 :
.
ïï: ;
ComputeHash
ïï; F
(
ïïF G
buffer
ïïG M
)
ïïM N
;
ïïN O
data
ññ 
=
ññ 
IO
ññ !
.
ññ! "
ToHex
ññ" '
(
ññ' ( 
hashedCredsAsBytes
ññ( :
)
ññ: ;
;
ññ; <
}
óó 
}
òò 
}
ôô 
}
öö 	!
goodG2BPublicStatic
õõ 
=
õõ 
true
õõ "
;
õõ" #9
+CWE315_Cleartext_Storage_in_Cookie__Web_22b
úú 3
.
úú3 4
GoodG2BSink
úú4 ?
(
úú? @
data
úú@ D
,
úúE F
req
úúG J
,
úúJ K
resp
úúL P
)
úúP Q
;
úúQ R
}
ùù 
}üü 
}†† Í-
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_22b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_22b 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
if   

(   7
+CWE315_Cleartext_Storage_in_Cookie__Web_22a   7
.  7 8
badPublicStatic  8 G
)  G H
{!! 	
resp$$ 
.$$ 
AppendCookie$$ 
($$ 
new$$ !

HttpCookie$$" ,
($$, -
$str$$- 3
,$$3 4
data$$5 9
)$$9 :
)$$: ;
;$$; <
}%% 	
else&& 
{'' 	
data** 
=** 
null** 
;** 
}++ 	
},, 
public11 

static11 
void11 
GoodB2G1Sink11 #
(11# $
string11$ *
data11+ /
,110 1
HttpRequest112 =
req11> A
,11A B
HttpResponse11C O
resp11P T
)11T U
{22 
if33 

(33 7
+CWE315_Cleartext_Storage_in_Cookie__Web_22a33 7
.337 8 
goodB2G1PublicStatic338 L
)33L M
{44 	
data77 
=77 
null77 
;77 
}88 	
else99 
{:: 	
{<< 
string== 
salt== 
=== 
$str== ,
;==, -
using>> 
(>> '
SHA512CryptoServiceProvider>> 2
sha512>>3 9
=>>: ;
new>>< ?'
SHA512CryptoServiceProvider>>@ [
(>>[ \
)>>\ ]
)>>] ^
{?? 
byte@@ 
[@@ 
]@@ 
buffer@@ !
=@@" #
Encoding@@$ ,
.@@, -
UTF8@@- 1
.@@1 2
GetBytes@@2 :
(@@: ;
string@@; A
.@@A B
Concat@@B H
(@@H I
salt@@I M
,@@M N
data@@O S
)@@S T
)@@T U
;@@U V
byteAA 
[AA 
]AA 
hashedCredsAsBytesAA -
=AA. /
sha512AA0 6
.AA6 7
ComputeHashAA7 B
(AAB C
bufferAAC I
)AAI J
;AAJ K
dataBB 
=BB 
IOBB 
.BB 
ToHexBB #
(BB# $
hashedCredsAsBytesBB$ 6
)BB6 7
;BB7 8
}CC 
}DD 
respEE 
.EE 
AppendCookieEE 
(EE 
newEE !

HttpCookieEE" ,
(EE, -
$strEE- 3
,EE3 4
dataEE5 9
)EE9 :
)EE: ;
;EE; <
}FF 	
}GG 
publicJJ 

staticJJ 
voidJJ 
GoodB2G2SinkJJ #
(JJ# $
stringJJ$ *
dataJJ+ /
,JJ0 1
HttpRequestJJ2 =
reqJJ> A
,JJA B
HttpResponseJJC O
respJJP T
)JJT U
{KK 
ifLL 

(LL 7
+CWE315_Cleartext_Storage_in_Cookie__Web_22aLL 7
.LL7 8 
goodB2G2PublicStaticLL8 L
)LLL M
{MM 	
{OO 
stringPP 
saltPP 
=PP 
$strPP ,
;PP, -
usingQQ 
(QQ '
SHA512CryptoServiceProviderQQ 2
sha512QQ3 9
=QQ: ;
newQQ< ?'
SHA512CryptoServiceProviderQQ@ [
(QQ[ \
)QQ\ ]
)QQ] ^
{RR 
byteSS 
[SS 
]SS 
bufferSS !
=SS" #
EncodingSS$ ,
.SS, -
UTF8SS- 1
.SS1 2
GetBytesSS2 :
(SS: ;
stringSS; A
.SSA B
ConcatSSB H
(SSH I
saltSSI M
,SSM N
dataSSO S
)SSS T
)SST U
;SSU V
byteTT 
[TT 
]TT 
hashedCredsAsBytesTT -
=TT. /
sha512TT0 6
.TT6 7
ComputeHashTT7 B
(TTB C
bufferTTC I
)TTI J
;TTJ K
dataUU 
=UU 
IOUU 
.UU 
ToHexUU #
(UU# $
hashedCredsAsBytesUU$ 6
)UU6 7
;UU7 8
}VV 
}WW 
respXX 
.XX 
AppendCookieXX 
(XX 
newXX !

HttpCookieXX" ,
(XX, -
$strXX- 3
,XX3 4
dataXX5 9
)XX9 :
)XX: ;
;XX; <
}YY 	
elseZZ 
{[[ 	
data^^ 
=^^ 
null^^ 
;^^ 
}__ 	
}`` 
publiccc 

staticcc 
voidcc 
GoodG2BSinkcc "
(cc" #
stringcc# )
datacc* .
,cc/ 0
HttpRequestcc1 <
reqcc= @
,cc@ A
HttpResponseccB N
respccO S
)ccS T
{dd 
ifee 

(ee 7
+CWE315_Cleartext_Storage_in_Cookie__Web_22aee 7
.ee7 8
goodG2BPublicStaticee8 K
)eeK L
{ff 	
respii 
.ii 
AppendCookieii 
(ii 
newii !

HttpCookieii" ,
(ii, -
$strii- 3
,ii3 4
dataii5 9
)ii9 :
)ii: ;
;ii; <
}jj 	
elsekk 
{ll 	
dataoo 
=oo 
nulloo 
;oo 
}pp 	
}qq 
}ss 
}tt ´S
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_31.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_31 0
:1 2
AbstractTestCaseWeb3 F
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
dataCopy"" 
;"" 
{## 	
string$$ 
data$$ 
;$$ 
using%% 
(%% 
SecureString%% 
	securePwd%%  )
=%%* +
new%%, /
SecureString%%0 <
(%%< =
)%%= >
)%%> ?
{&& 
using'' 
('' 
SecureString'' #

secureUser''$ .
=''/ 0
new''1 4
SecureString''5 A
(''A B
)''B C
)''C D
{(( 
for)) 
()) 
int)) 
i)) 
=))  
$num))! "
;))" #
i))$ %
<))& '
$str))( 3
.))3 4
Length))4 :
;)): ;
i))< =
++))= ?
)))? @
{** 
	securePwd,, !
.,,! "

AppendChar,," ,
(,,, -
$str,,- 8
[,,8 9
i,,9 :
],,: ;
),,; <
;,,< =
}-- 
for.. 
(.. 
int.. 
i.. 
=..  
$num..! "
;.." #
i..$ %
<..& '
$str..( .
.... /
Length../ 5
;..5 6
i..7 8
++..8 :
)..: ;
{// 
	securePwd11 !
.11! "

AppendChar11" ,
(11, -
$str11- 3
[113 4
i114 5
]115 6
)116 7
;117 8
}22 
data44 
=44 

secureUser44 %
.44% &
ToString44& .
(44. /
)44/ 0
+441 2
$str443 6
+447 8
	securePwd449 B
.44B C
ToString44C K
(44K L
)44L M
;44M N
}55 
}66 
dataCopy77 
=77 
data77 
;77 
}88 	
{99 	
string:: 
data:: 
=:: 
dataCopy:: "
;::" #
resp== 
.== 
AppendCookie== 
(== 
new== !

HttpCookie==" ,
(==, -
$str==- 3
,==3 4
data==5 9
)==9 :
)==: ;
;==; <
}>> 	
}?? 
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
HttpRequestBB )
reqBB* -
,BB- .
HttpResponseBB/ ;
respBB< @
)BB@ A
{CC 
GoodG2BDD 
(DD 
reqDD 
,DD 
respDD 
)DD 
;DD 
GoodB2GEE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodG2BII 
(II 
HttpRequestII $
reqII% (
,II( )
HttpResponseII* 6
respII7 ;
)II; <
{JJ 
stringKK 
dataCopyKK 
;KK 
{LL 	
stringMM 
dataMM 
;MM 
usingNN 
(NN 
SecureStringNN 
	securePwdNN  )
=NN* +
newNN, /
SecureStringNN0 <
(NN< =
)NN= >
)NN> ?
{OO 
usingPP 
(PP 
SecureStringPP #

secureUserPP$ .
=PP/ 0
newPP1 4
SecureStringPP5 A
(PPA B
)PPB C
)PPC D
{QQ 
forRR 
(RR 
intRR 
iRR 
=RR  
$numRR! "
;RR" #
iRR$ %
<RR& '
$strRR( 3
.RR3 4
LengthRR4 :
;RR: ;
iRR< =
++RR= ?
)RR? @
{SS 
	securePwdUU !
.UU! "

AppendCharUU" ,
(UU, -
$strUU- 8
[UU8 9
iUU9 :
]UU: ;
)UU; <
;UU< =
}VV 
forWW 
(WW 
intWW 
iWW 
=WW  
$numWW! "
;WW" #
iWW$ %
<WW& '
$strWW( .
.WW. /
LengthWW/ 5
;WW5 6
iWW7 8
++WW8 :
)WW: ;
{XX 
	securePwdZZ !
.ZZ! "

AppendCharZZ" ,
(ZZ, -
$strZZ- 3
[ZZ3 4
iZZ4 5
]ZZ5 6
)ZZ6 7
;ZZ7 8
}[[ 
{]] 
string^^ 
salt^^ #
=^^$ %
$str^^& 4
;^^4 5
using__ 
(__ '
SHA512CryptoServiceProvider__ :
sha512__; A
=__B C
new__D G'
SHA512CryptoServiceProvider__H c
(__c d
)__d e
)__e f
{`` 
stringaa "
credentialsToHashaa# 4
=aa5 6

secureUseraa7 A
.aaA B
ToStringaaB J
(aaJ K
)aaK L
+aaM N
$straaO R
+aaS T
	securePwdaaU ^
.aa^ _
ToStringaa_ g
(aag h
)aah i
;aai j
bytebb  
[bb  !
]bb! "
bufferbb# )
=bb* +
Encodingbb, 4
.bb4 5
UTF8bb5 9
.bb9 :
GetBytesbb: B
(bbB C
stringbbC I
.bbI J
ConcatbbJ P
(bbP Q
saltbbQ U
,bbU V
credentialsToHashbbW h
)bbh i
)bbi j
;bbj k
bytecc  
[cc  !
]cc! "
hashedCredsAsBytescc# 5
=cc6 7
sha512cc8 >
.cc> ?
ComputeHashcc? J
(ccJ K
bufferccK Q
)ccQ R
;ccR S
datadd  
=dd! "
IOdd# %
.dd% &
ToHexdd& +
(dd+ ,
hashedCredsAsBytesdd, >
)dd> ?
;dd? @
}ee 
}ff 
}gg 
}hh 
dataCopyii 
=ii 
dataii 
;ii 
}jj 	
{kk 	
stringll 
datall 
=ll 
dataCopyll "
;ll" #
respoo 
.oo 
AppendCookieoo 
(oo 
newoo !

HttpCookieoo" ,
(oo, -
$stroo- 3
,oo3 4
dataoo5 9
)oo9 :
)oo: ;
;oo; <
}pp 	
}qq 
privatett 
voidtt 
GoodB2Gtt 
(tt 
HttpRequesttt $
reqtt% (
,tt( )
HttpResponsett* 6
resptt7 ;
)tt; <
{uu 
stringvv 
dataCopyvv 
;vv 
{ww 	
stringxx 
dataxx 
;xx 
usingyy 
(yy 
SecureStringyy 
	securePwdyy  )
=yy* +
newyy, /
SecureStringyy0 <
(yy< =
)yy= >
)yy> ?
{zz 
using{{ 
({{ 
SecureString{{ #

secureUser{{$ .
={{/ 0
new{{1 4
SecureString{{5 A
({{A B
){{B C
){{C D
{|| 
for}} 
(}} 
int}} 
i}} 
=}}  
$num}}! "
;}}" #
i}}$ %
<}}& '
$str}}( 3
.}}3 4
Length}}4 :
;}}: ;
i}}< =
++}}= ?
)}}? @
{~~ 
	securePwd
ÄÄ !
.
ÄÄ! "

AppendChar
ÄÄ" ,
(
ÄÄ, -
$str
ÄÄ- 8
[
ÄÄ8 9
i
ÄÄ9 :
]
ÄÄ: ;
)
ÄÄ; <
;
ÄÄ< =
}
ÅÅ 
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ  
$num
ÇÇ! "
;
ÇÇ" #
i
ÇÇ$ %
<
ÇÇ& '
$str
ÇÇ( .
.
ÇÇ. /
Length
ÇÇ/ 5
;
ÇÇ5 6
i
ÇÇ7 8
++
ÇÇ8 :
)
ÇÇ: ;
{
ÉÉ 
	securePwd
ÖÖ !
.
ÖÖ! "

AppendChar
ÖÖ" ,
(
ÖÖ, -
$str
ÖÖ- 3
[
ÖÖ3 4
i
ÖÖ4 5
]
ÖÖ5 6
)
ÖÖ6 7
;
ÖÖ7 8
}
ÜÜ 
data
àà 
=
àà 

secureUser
àà %
.
àà% &
ToString
àà& .
(
àà. /
)
àà/ 0
+
àà1 2
$str
àà3 6
+
àà7 8
	securePwd
àà9 B
.
ààB C
ToString
ààC K
(
ààK L
)
ààL M
;
ààM N
}
ââ 
}
ää 
dataCopy
ãã 
=
ãã 
data
ãã 
;
ãã 
}
åå 	
{
çç 	
string
éé 
data
éé 
=
éé 
dataCopy
éé "
;
éé" #
{
êê 
string
ëë 
salt
ëë 
=
ëë 
$str
ëë ,
;
ëë, -
using
íí 
(
íí )
SHA512CryptoServiceProvider
íí 2
sha512
íí3 9
=
íí: ;
new
íí< ?)
SHA512CryptoServiceProvider
íí@ [
(
íí[ \
)
íí\ ]
)
íí] ^
{
ìì 
byte
îî 
[
îî 
]
îî 
buffer
îî !
=
îî" #
Encoding
îî$ ,
.
îî, -
UTF8
îî- 1
.
îî1 2
GetBytes
îî2 :
(
îî: ;
string
îî; A
.
îîA B
Concat
îîB H
(
îîH I
salt
îîI M
,
îîM N
data
îîO S
)
îîS T
)
îîT U
;
îîU V
byte
ïï 
[
ïï 
]
ïï  
hashedCredsAsBytes
ïï -
=
ïï. /
sha512
ïï0 6
.
ïï6 7
ComputeHash
ïï7 B
(
ïïB C
buffer
ïïC I
)
ïïI J
;
ïïJ K
data
ññ 
=
ññ 
IO
ññ 
.
ññ 
ToHex
ññ #
(
ññ# $ 
hashedCredsAsBytes
ññ$ 6
)
ññ6 7
;
ññ7 8
}
óó 
}
òò 
resp
ôô 
.
ôô 
AppendCookie
ôô 
(
ôô 
new
ôô !

HttpCookie
ôô" ,
(
ôô, -
$str
ôô- 3
,
ôô3 4
data
ôô5 9
)
ôô9 :
)
ôô: ;
;
ôô; <
}
öö 	
}
õõ 
}ùù 
}ûû ëW
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_41.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_41 0
:1 2
AbstractTestCaseWeb3 F
{ 
private   
static   
void   
BadSink   
(    
string    &
data  ' +
,  , -
HttpRequest  . 9
req  : =
,  = >
HttpResponse  ? K
resp  L P
)  P Q
{!! 
resp$$ 
.$$ 
AppendCookie$$ 
($$ 
new$$ 

HttpCookie$$ (
($$( )
$str$$) /
,$$/ 0
data$$1 5
)$$5 6
)$$6 7
;$$7 8
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
string)) 
data)) 
;)) 
using** 
(** 
SecureString** 
	securePwd** %
=**& '
new**( +
SecureString**, 8
(**8 9
)**9 :
)**: ;
{++ 	
using,, 
(,, 
SecureString,, 

secureUser,,  *
=,,+ ,
new,,- 0
SecureString,,1 =
(,,= >
),,> ?
),,? @
{-- 
for.. 
(.. 
int.. 
i.. 
=.. 
$num.. 
;.. 
i..  !
<.." #
$str..$ /
.../ 0
Length..0 6
;..6 7
i..8 9
++..9 ;
)..; <
{// 
	securePwd11 
.11 

AppendChar11 (
(11( )
$str11) 4
[114 5
i115 6
]116 7
)117 8
;118 9
}22 
for33 
(33 
int33 
i33 
=33 
$num33 
;33 
i33  !
<33" #
$str33$ *
.33* +
Length33+ 1
;331 2
i333 4
++334 6
)336 7
{44 
	securePwd66 
.66 

AppendChar66 (
(66( )
$str66) /
[66/ 0
i660 1
]661 2
)662 3
;663 4
}77 
data99 
=99 

secureUser99 !
.99! "
ToString99" *
(99* +
)99+ ,
+99- .
$str99/ 2
+993 4
	securePwd995 >
.99> ?
ToString99? G
(99G H
)99H I
;99I J
}:: 
};; 	
BadSink<< 
(<< 
data<< 
,<< 
req<< 
,<< 
resp<<  
)<<! "
;<<" #
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
HttpRequest@@ )
req@@* -
,@@- .
HttpResponse@@/ ;
resp@@< @
)@@@ A
{AA 
GoodG2BBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
GoodB2GCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
}DD 
privateFF 
staticFF 
voidFF 
GoodG2BSinkFF #
(FF# $
stringFF$ *
dataFF+ /
,FF0 1
HttpRequestFF2 =
reqFF> A
,FFA B
HttpResponseFFC O
respFFP T
)FFT U
{GG 
respJJ 
.JJ 
AppendCookieJJ 
(JJ 
newJJ 

HttpCookieJJ (
(JJ( )
$strJJ) /
,JJ/ 0
dataJJ1 5
)JJ5 6
)JJ6 7
;JJ7 8
}KK 
privateNN 
staticNN 
voidNN 
GoodG2BNN 
(NN  
HttpRequestNN  +
reqNN, /
,NN/ 0
HttpResponseNN1 =
respNN> B
)NNB C
{OO 
stringPP 
dataPP 
;PP 
usingQQ 
(QQ 
SecureStringQQ 
	securePwdQQ %
=QQ& '
newQQ( +
SecureStringQQ, 8
(QQ8 9
)QQ9 :
)QQ: ;
{RR 	
usingSS 
(SS 
SecureStringSS 

secureUserSS  *
=SS+ ,
newSS- 0
SecureStringSS1 =
(SS= >
)SS> ?
)SS? @
{TT 
forUU 
(UU 
intUU 
iUU 
=UU 
$numUU 
;UU 
iUU  !
<UU" #
$strUU$ /
.UU/ 0
LengthUU0 6
;UU6 7
iUU8 9
++UU9 ;
)UU; <
{VV 
	securePwdXX 
.XX 

AppendCharXX (
(XX( )
$strXX) 4
[XX4 5
iXX5 6
]XX6 7
)XX7 8
;XX8 9
}YY 
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ  !
<ZZ" #
$strZZ$ *
.ZZ* +
LengthZZ+ 1
;ZZ1 2
iZZ3 4
++ZZ4 6
)ZZ6 7
{[[ 
	securePwd]] 
.]] 

AppendChar]] (
(]]( )
$str]]) /
[]]/ 0
i]]0 1
]]]1 2
)]]2 3
;]]3 4
}^^ 
{`` 
stringaa 
saltaa 
=aa  !
$straa" 0
;aa0 1
usingbb 
(bb '
SHA512CryptoServiceProviderbb 6
sha512bb7 =
=bb> ?
newbb@ C'
SHA512CryptoServiceProviderbbD _
(bb_ `
)bb` a
)bba b
{cc 
stringdd 
credentialsToHashdd 0
=dd1 2

secureUserdd3 =
.dd= >
ToStringdd> F
(ddF G
)ddG H
+ddI J
$strddK N
+ddO P
	securePwdddQ Z
.ddZ [
ToStringdd[ c
(ddc d
)ddd e
;dde f
byteee 
[ee 
]ee 
bufferee %
=ee& '
Encodingee( 0
.ee0 1
UTF8ee1 5
.ee5 6
GetBytesee6 >
(ee> ?
stringee? E
.eeE F
ConcateeF L
(eeL M
salteeM Q
,eeQ R
credentialsToHasheeS d
)eed e
)eee f
;eef g
byteff 
[ff 
]ff 
hashedCredsAsBytesff 1
=ff2 3
sha512ff4 :
.ff: ;
ComputeHashff; F
(ffF G
bufferffG M
)ffM N
;ffN O
datagg 
=gg 
IOgg !
.gg! "
ToHexgg" '
(gg' (
hashedCredsAsBytesgg( :
)gg: ;
;gg; <
}hh 
}ii 
}jj 
}kk 	
GoodG2BSinkll 
(ll 
datall 
,ll 
reqll 
,ll 
respll  $
)ll% &
;ll& '
}mm 
privateoo 
staticoo 
voidoo 
GoodB2GSinkoo #
(oo# $
stringoo$ *
dataoo+ /
,oo0 1
HttpRequestoo2 =
reqoo> A
,ooA B
HttpResponseooC O
respooP T
)ooT U
{pp 
{rr 	
stringss 
saltss 
=ss 
$strss (
;ss( )
usingtt 
(tt '
SHA512CryptoServiceProvidertt .
sha512tt/ 5
=tt6 7
newtt8 ;'
SHA512CryptoServiceProvidertt< W
(ttW X
)ttX Y
)ttY Z
{uu 
bytevv 
[vv 
]vv 
buffervv 
=vv 
Encodingvv  (
.vv( )
UTF8vv) -
.vv- .
GetBytesvv. 6
(vv6 7
stringvv7 =
.vv= >
Concatvv> D
(vvD E
saltvvE I
,vvI J
datavvK O
)vvO P
)vvP Q
;vvQ R
byteww 
[ww 
]ww 
hashedCredsAsBytesww )
=ww* +
sha512ww, 2
.ww2 3
ComputeHashww3 >
(ww> ?
bufferww? E
)wwE F
;wwF G
dataxx 
=xx 
IOxx 
.xx 
ToHexxx 
(xx  
hashedCredsAsBytesxx  2
)xx2 3
;xx3 4
}yy 
}zz 	
resp{{ 
.{{ 
AppendCookie{{ 
({{ 
new{{ 

HttpCookie{{ (
({{( )
$str{{) /
,{{/ 0
data{{1 5
){{5 6
){{6 7
;{{7 8
}|| 
private 
static 
void 
GoodB2G 
(  
HttpRequest  +
req, /
,/ 0
HttpResponse1 =
resp> B
)B C
{
ÄÄ 
string
ÅÅ 
data
ÅÅ 
;
ÅÅ 
using
ÇÇ 
(
ÇÇ 
SecureString
ÇÇ 
	securePwd
ÇÇ %
=
ÇÇ& '
new
ÇÇ( +
SecureString
ÇÇ, 8
(
ÇÇ8 9
)
ÇÇ9 :
)
ÇÇ: ;
{
ÉÉ 	
using
ÑÑ 
(
ÑÑ 
SecureString
ÑÑ 

secureUser
ÑÑ  *
=
ÑÑ+ ,
new
ÑÑ- 0
SecureString
ÑÑ1 =
(
ÑÑ= >
)
ÑÑ> ?
)
ÑÑ? @
{
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
i
ÜÜ  !
<
ÜÜ" #
$str
ÜÜ$ /
.
ÜÜ/ 0
Length
ÜÜ0 6
;
ÜÜ6 7
i
ÜÜ8 9
++
ÜÜ9 ;
)
ÜÜ; <
{
áá 
	securePwd
ââ 
.
ââ 

AppendChar
ââ (
(
ââ( )
$str
ââ) 4
[
ââ4 5
i
ââ5 6
]
ââ6 7
)
ââ7 8
;
ââ8 9
}
ää 
for
ãã 
(
ãã 
int
ãã 
i
ãã 
=
ãã 
$num
ãã 
;
ãã 
i
ãã  !
<
ãã" #
$str
ãã$ *
.
ãã* +
Length
ãã+ 1
;
ãã1 2
i
ãã3 4
++
ãã4 6
)
ãã6 7
{
åå 
	securePwd
éé 
.
éé 

AppendChar
éé (
(
éé( )
$str
éé) /
[
éé/ 0
i
éé0 1
]
éé1 2
)
éé2 3
;
éé3 4
}
èè 
data
ëë 
=
ëë 

secureUser
ëë !
.
ëë! "
ToString
ëë" *
(
ëë* +
)
ëë+ ,
+
ëë- .
$str
ëë/ 2
+
ëë3 4
	securePwd
ëë5 >
.
ëë> ?
ToString
ëë? G
(
ëëG H
)
ëëH I
;
ëëI J
}
íí 
}
ìì 	
GoodB2GSink
îî 
(
îî 
data
îî 
,
îî 
req
îî 
,
îî 
resp
îî  $
)
îî% &
;
îî& '
}
ïï 
}óó 
}òò ÖX
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_42.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_42 0
:1 2
AbstractTestCaseWeb3 F
{ 
private   
static   
string   
	BadSource   #
(  # $
HttpRequest  $ /
req  0 3
,  3 4
HttpResponse  5 A
resp  B F
)  F G
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	
return55 
data55 
;55 
}66 
public88 

override88 
void88 
Bad88 
(88 
HttpRequest88 (
req88) ,
,88, -
HttpResponse88. :
resp88; ?
)88? @
{99 
string:: 
data:: 
=:: 
	BadSource:: 
(::  
req::  #
,::# $
resp::% )
)::) *
;::* +
resp== 
.== 
AppendCookie== 
(== 
new== 

HttpCookie== (
(==( )
$str==) /
,==/ 0
data==1 5
)==5 6
)==6 7
;==7 8
}>> 
privateBB 
staticBB 
stringBB 
GoodG2BSourceBB '
(BB' (
HttpRequestBB( 3
reqBB4 7
,BB7 8
HttpResponseBB9 E
respBBF J
)BBJ K
{CC 
stringDD 
dataDD 
;DD 
usingEE 
(EE 
SecureStringEE 
	securePwdEE %
=EE& '
newEE( +
SecureStringEE, 8
(EE8 9
)EE9 :
)EE: ;
{FF 	
usingGG 
(GG 
SecureStringGG 

secureUserGG  *
=GG+ ,
newGG- 0
SecureStringGG1 =
(GG= >
)GG> ?
)GG? @
{HH 
forII 
(II 
intII 
iII 
=II 
$numII 
;II 
iII  !
<II" #
$strII$ /
.II/ 0
LengthII0 6
;II6 7
iII8 9
++II9 ;
)II; <
{JJ 
	securePwdLL 
.LL 

AppendCharLL (
(LL( )
$strLL) 4
[LL4 5
iLL5 6
]LL6 7
)LL7 8
;LL8 9
}MM 
forNN 
(NN 
intNN 
iNN 
=NN 
$numNN 
;NN 
iNN  !
<NN" #
$strNN$ *
.NN* +
LengthNN+ 1
;NN1 2
iNN3 4
++NN4 6
)NN6 7
{OO 
	securePwdQQ 
.QQ 

AppendCharQQ (
(QQ( )
$strQQ) /
[QQ/ 0
iQQ0 1
]QQ1 2
)QQ2 3
;QQ3 4
}RR 
{TT 
stringUU 
saltUU 
=UU  !
$strUU" 0
;UU0 1
usingVV 
(VV '
SHA512CryptoServiceProviderVV 6
sha512VV7 =
=VV> ?
newVV@ C'
SHA512CryptoServiceProviderVVD _
(VV_ `
)VV` a
)VVa b
{WW 
stringXX 
credentialsToHashXX 0
=XX1 2

secureUserXX3 =
.XX= >
ToStringXX> F
(XXF G
)XXG H
+XXI J
$strXXK N
+XXO P
	securePwdXXQ Z
.XXZ [
ToStringXX[ c
(XXc d
)XXd e
;XXe f
byteYY 
[YY 
]YY 
bufferYY %
=YY& '
EncodingYY( 0
.YY0 1
UTF8YY1 5
.YY5 6
GetBytesYY6 >
(YY> ?
stringYY? E
.YYE F
ConcatYYF L
(YYL M
saltYYM Q
,YYQ R
credentialsToHashYYS d
)YYd e
)YYe f
;YYf g
byteZZ 
[ZZ 
]ZZ 
hashedCredsAsBytesZZ 1
=ZZ2 3
sha512ZZ4 :
.ZZ: ;
ComputeHashZZ; F
(ZZF G
bufferZZG M
)ZZM N
;ZZN O
data[[ 
=[[ 
IO[[ !
.[[! "
ToHex[[" '
([[' (
hashedCredsAsBytes[[( :
)[[: ;
;[[; <
}\\ 
}]] 
}^^ 
}__ 	
return`` 
data`` 
;`` 
}aa 
privatecc 
staticcc 
voidcc 
GoodG2Bcc 
(cc  
HttpRequestcc  +
reqcc, /
,cc/ 0
HttpResponsecc1 =
respcc> B
)ccB C
{dd 
stringee 
dataee 
=ee 
GoodG2BSourceee #
(ee# $
reqee$ '
,ee' (
respee) -
)ee- .
;ee. /
resphh 
.hh 
AppendCookiehh 
(hh 
newhh 

HttpCookiehh (
(hh( )
$strhh) /
,hh/ 0
datahh1 5
)hh5 6
)hh6 7
;hh7 8
}ii 
privatell 
staticll 
stringll 
GoodB2GSourcell '
(ll' (
HttpRequestll( 3
reqll4 7
,ll7 8
HttpResponsell9 E
respllF J
)llJ K
{mm 
stringnn 
datann 
;nn 
usingoo 
(oo 
SecureStringoo 
	securePwdoo %
=oo& '
newoo( +
SecureStringoo, 8
(oo8 9
)oo9 :
)oo: ;
{pp 	
usingqq 
(qq 
SecureStringqq 

secureUserqq  *
=qq+ ,
newqq- 0
SecureStringqq1 =
(qq= >
)qq> ?
)qq? @
{rr 
forss 
(ss 
intss 
iss 
=ss 
$numss 
;ss 
iss  !
<ss" #
$strss$ /
.ss/ 0
Lengthss0 6
;ss6 7
iss8 9
++ss9 ;
)ss; <
{tt 
	securePwdvv 
.vv 

AppendCharvv (
(vv( )
$strvv) 4
[vv4 5
ivv5 6
]vv6 7
)vv7 8
;vv8 9
}ww 
forxx 
(xx 
intxx 
ixx 
=xx 
$numxx 
;xx 
ixx  !
<xx" #
$strxx$ *
.xx* +
Lengthxx+ 1
;xx1 2
ixx3 4
++xx4 6
)xx6 7
{yy 
	securePwd{{ 
.{{ 

AppendChar{{ (
({{( )
$str{{) /
[{{/ 0
i{{0 1
]{{1 2
){{2 3
;{{3 4
}|| 
data~~ 
=~~ 

secureUser~~ !
.~~! "
ToString~~" *
(~~* +
)~~+ ,
+~~- .
$str~~/ 2
+~~3 4
	securePwd~~5 >
.~~> ?
ToString~~? G
(~~G H
)~~H I
;~~I J
} 
}
ÄÄ 	
return
ÅÅ 
data
ÅÅ 
;
ÅÅ 
}
ÇÇ 
private
ÑÑ 
static
ÑÑ 
void
ÑÑ 
GoodB2G
ÑÑ 
(
ÑÑ  
HttpRequest
ÑÑ  +
req
ÑÑ, /
,
ÑÑ/ 0
HttpResponse
ÑÑ1 =
resp
ÑÑ> B
)
ÑÑB C
{
ÖÖ 
string
ÜÜ 
data
ÜÜ 
=
ÜÜ 
GoodB2GSource
ÜÜ #
(
ÜÜ# $
req
ÜÜ$ '
,
ÜÜ' (
resp
ÜÜ) -
)
ÜÜ- .
;
ÜÜ. /
{
àà 	
string
ââ 
salt
ââ 
=
ââ 
$str
ââ (
;
ââ( )
using
ää 
(
ää )
SHA512CryptoServiceProvider
ää .
sha512
ää/ 5
=
ää6 7
new
ää8 ;)
SHA512CryptoServiceProvider
ää< W
(
ääW X
)
ääX Y
)
ääY Z
{
ãã 
byte
åå 
[
åå 
]
åå 
buffer
åå 
=
åå 
Encoding
åå  (
.
åå( )
UTF8
åå) -
.
åå- .
GetBytes
åå. 6
(
åå6 7
string
åå7 =
.
åå= >
Concat
åå> D
(
ååD E
salt
ååE I
,
ååI J
data
ååK O
)
ååO P
)
ååP Q
;
ååQ R
byte
çç 
[
çç 
]
çç  
hashedCredsAsBytes
çç )
=
çç* +
sha512
çç, 2
.
çç2 3
ComputeHash
çç3 >
(
çç> ?
buffer
çç? E
)
ççE F
;
ççF G
data
éé 
=
éé 
IO
éé 
.
éé 
ToHex
éé 
(
éé   
hashedCredsAsBytes
éé  2
)
éé2 3
;
éé3 4
}
èè 
}
êê 	
resp
ëë 
.
ëë 
AppendCookie
ëë 
(
ëë 
new
ëë 

HttpCookie
ëë (
(
ëë( )
$str
ëë) /
,
ëë/ 0
data
ëë1 5
)
ëë5 6
)
ëë6 7
;
ëë7 8
}
íí 
public
îî 

override
îî 
void
îî 
Good
îî 
(
îî 
HttpRequest
îî )
req
îî* -
,
îî- .
HttpResponse
îî/ ;
resp
îî< @
)
îî@ A
{
ïï 
GoodG2B
ññ 
(
ññ 
req
ññ 
,
ññ 
resp
ññ 
)
ññ 
;
ññ 
GoodB2G
óó 
(
óó 
req
óó 
,
óó 
resp
óó 
)
óó 
;
óó 
}
òò 
}öö 
}õõ ÊZ
´C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_45.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 6
*CWE315_Cleartext_Storage_in_Cookie__Web_45 0
:1 2
AbstractTestCaseWeb3 F
{ 
private   
string   
dataBad   
;   
private!! 
string!! 
dataGoodG2B!! 
;!! 
private"" 
string"" 
dataGoodB2G"" 
;"" 
private$$ 
void$$ 
BadSink$$ 
($$ 
HttpRequest$$ $
req$$% (
,$$( )
HttpResponse$$* 6
resp$$7 ;
)$$; <
{%% 
string&& 
data&& 
=&& 
dataBad&& 
;&& 
resp)) 
.)) 
AppendCookie)) 
()) 
new)) 

HttpCookie)) (
())( )
$str))) /
,))/ 0
data))1 5
)))5 6
)))6 7
;))7 8
}** 
public,, 

override,, 
void,, 
Bad,, 
(,, 
HttpRequest,, (
req,,) ,
,,,, -
HttpResponse,,. :
resp,,; ?
),,? @
{-- 
string.. 
data.. 
;.. 
using// 
(// 
SecureString// 
	securePwd// %
=//& '
new//( +
SecureString//, 8
(//8 9
)//9 :
)//: ;
{00 	
using11 
(11 
SecureString11 

secureUser11  *
=11+ ,
new11- 0
SecureString111 =
(11= >
)11> ?
)11? @
{22 
for33 
(33 
int33 
i33 
=33 
$num33 
;33 
i33  !
<33" #
$str33$ /
.33/ 0
Length330 6
;336 7
i338 9
++339 ;
)33; <
{44 
	securePwd66 
.66 

AppendChar66 (
(66( )
$str66) 4
[664 5
i665 6
]666 7
)667 8
;668 9
}77 
for88 
(88 
int88 
i88 
=88 
$num88 
;88 
i88  !
<88" #
$str88$ *
.88* +
Length88+ 1
;881 2
i883 4
++884 6
)886 7
{99 
	securePwd;; 
.;; 

AppendChar;; (
(;;( )
$str;;) /
[;;/ 0
i;;0 1
];;1 2
);;2 3
;;;3 4
}<< 
data>> 
=>> 

secureUser>> !
.>>! "
ToString>>" *
(>>* +
)>>+ ,
+>>- .
$str>>/ 2
+>>3 4
	securePwd>>5 >
.>>> ?
ToString>>? G
(>>G H
)>>H I
;>>I J
}?? 
}@@ 	
dataBadAA 
=AA 
dataAA 
;AA 
BadSinkBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
}CC 
publicFF 

overrideFF 
voidFF 
GoodFF 
(FF 
HttpRequestFF )
reqFF* -
,FF- .
HttpResponseFF/ ;
respFF< @
)FF@ A
{GG 
GoodG2BHH 
(HH 
reqHH 
,HH 
respHH 
)HH 
;HH 
GoodB2GII 
(II 
reqII 
,II 
respII 
)II 
;II 
}JJ 
privateLL 
voidLL 
GoodG2BSinkLL 
(LL 
HttpRequestLL (
reqLL) ,
,LL, -
HttpResponseLL. :
respLL; ?
)LL? @
{MM 
stringNN 
dataNN 
=NN 
dataGoodG2BNN !
;NN! "
respQQ 
.QQ 
AppendCookieQQ 
(QQ 
newQQ 

HttpCookieQQ (
(QQ( )
$strQQ) /
,QQ/ 0
dataQQ1 5
)QQ5 6
)QQ6 7
;QQ7 8
}RR 
privateUU 
voidUU 
GoodG2BUU 
(UU 
HttpRequestUU $
reqUU% (
,UU( )
HttpResponseUU* 6
respUU7 ;
)UU; <
{VV 
stringWW 
dataWW 
;WW 
usingXX 
(XX 
SecureStringXX 
	securePwdXX %
=XX& '
newXX( +
SecureStringXX, 8
(XX8 9
)XX9 :
)XX: ;
{YY 	
usingZZ 
(ZZ 
SecureStringZZ 

secureUserZZ  *
=ZZ+ ,
newZZ- 0
SecureStringZZ1 =
(ZZ= >
)ZZ> ?
)ZZ? @
{[[ 
for\\ 
(\\ 
int\\ 
i\\ 
=\\ 
$num\\ 
;\\ 
i\\  !
<\\" #
$str\\$ /
.\\/ 0
Length\\0 6
;\\6 7
i\\8 9
++\\9 ;
)\\; <
{]] 
	securePwd__ 
.__ 

AppendChar__ (
(__( )
$str__) 4
[__4 5
i__5 6
]__6 7
)__7 8
;__8 9
}`` 
foraa 
(aa 
intaa 
iaa 
=aa 
$numaa 
;aa 
iaa  !
<aa" #
$straa$ *
.aa* +
Lengthaa+ 1
;aa1 2
iaa3 4
++aa4 6
)aa6 7
{bb 
	securePwddd 
.dd 

AppendChardd (
(dd( )
$strdd) /
[dd/ 0
idd0 1
]dd1 2
)dd2 3
;dd3 4
}ee 
{gg 
stringhh 
salthh 
=hh  !
$strhh" 0
;hh0 1
usingii 
(ii '
SHA512CryptoServiceProviderii 6
sha512ii7 =
=ii> ?
newii@ C'
SHA512CryptoServiceProvideriiD _
(ii_ `
)ii` a
)iia b
{jj 
stringkk 
credentialsToHashkk 0
=kk1 2

secureUserkk3 =
.kk= >
ToStringkk> F
(kkF G
)kkG H
+kkI J
$strkkK N
+kkO P
	securePwdkkQ Z
.kkZ [
ToStringkk[ c
(kkc d
)kkd e
;kke f
bytell 
[ll 
]ll 
bufferll %
=ll& '
Encodingll( 0
.ll0 1
UTF8ll1 5
.ll5 6
GetBytesll6 >
(ll> ?
stringll? E
.llE F
ConcatllF L
(llL M
saltllM Q
,llQ R
credentialsToHashllS d
)lld e
)lle f
;llf g
bytemm 
[mm 
]mm 
hashedCredsAsBytesmm 1
=mm2 3
sha512mm4 :
.mm: ;
ComputeHashmm; F
(mmF G
buffermmG M
)mmM N
;mmN O
datann 
=nn 
IOnn !
.nn! "
ToHexnn" '
(nn' (
hashedCredsAsBytesnn( :
)nn: ;
;nn; <
}oo 
}pp 
}qq 
}rr 	
dataGoodG2Bss 
=ss 
datass 
;ss 
GoodG2BSinktt 
(tt 
reqtt 
,tt 
resptt 
)tt 
;tt 
}uu 
privateww 
voidww 
GoodB2GSinkww 
(ww 
HttpRequestww (
reqww) ,
,ww, -
HttpResponseww. :
respww; ?
)ww? @
{xx 
stringyy 
datayy 
=yy 
dataGoodB2Gyy !
;yy! "
{{{ 	
string|| 
salt|| 
=|| 
$str|| (
;||( )
using}} 
(}} '
SHA512CryptoServiceProvider}} .
sha512}}/ 5
=}}6 7
new}}8 ;'
SHA512CryptoServiceProvider}}< W
(}}W X
)}}X Y
)}}Y Z
{~~ 
byte 
[ 
] 
buffer 
= 
Encoding  (
.( )
UTF8) -
.- .
GetBytes. 6
(6 7
string7 =
.= >
Concat> D
(D E
saltE I
,I J
dataK O
)O P
)P Q
;Q R
byte
ÄÄ 
[
ÄÄ 
]
ÄÄ  
hashedCredsAsBytes
ÄÄ )
=
ÄÄ* +
sha512
ÄÄ, 2
.
ÄÄ2 3
ComputeHash
ÄÄ3 >
(
ÄÄ> ?
buffer
ÄÄ? E
)
ÄÄE F
;
ÄÄF G
data
ÅÅ 
=
ÅÅ 
IO
ÅÅ 
.
ÅÅ 
ToHex
ÅÅ 
(
ÅÅ   
hashedCredsAsBytes
ÅÅ  2
)
ÅÅ2 3
;
ÅÅ3 4
}
ÇÇ 
}
ÉÉ 	
resp
ÑÑ 
.
ÑÑ 
AppendCookie
ÑÑ 
(
ÑÑ 
new
ÑÑ 

HttpCookie
ÑÑ (
(
ÑÑ( )
$str
ÑÑ) /
,
ÑÑ/ 0
data
ÑÑ1 5
)
ÑÑ5 6
)
ÑÑ6 7
;
ÑÑ7 8
}
ÖÖ 
private
àà 
void
àà 
GoodB2G
àà 
(
àà 
HttpRequest
àà $
req
àà% (
,
àà( )
HttpResponse
àà* 6
resp
àà7 ;
)
àà; <
{
ââ 
string
ää 
data
ää 
;
ää 
using
ãã 
(
ãã 
SecureString
ãã 
	securePwd
ãã %
=
ãã& '
new
ãã( +
SecureString
ãã, 8
(
ãã8 9
)
ãã9 :
)
ãã: ;
{
åå 	
using
çç 
(
çç 
SecureString
çç 

secureUser
çç  *
=
çç+ ,
new
çç- 0
SecureString
çç1 =
(
çç= >
)
çç> ?
)
çç? @
{
éé 
for
èè 
(
èè 
int
èè 
i
èè 
=
èè 
$num
èè 
;
èè 
i
èè  !
<
èè" #
$str
èè$ /
.
èè/ 0
Length
èè0 6
;
èè6 7
i
èè8 9
++
èè9 ;
)
èè; <
{
êê 
	securePwd
íí 
.
íí 

AppendChar
íí (
(
íí( )
$str
íí) 4
[
íí4 5
i
íí5 6
]
íí6 7
)
íí7 8
;
íí8 9
}
ìì 
for
îî 
(
îî 
int
îî 
i
îî 
=
îî 
$num
îî 
;
îî 
i
îî  !
<
îî" #
$str
îî$ *
.
îî* +
Length
îî+ 1
;
îî1 2
i
îî3 4
++
îî4 6
)
îî6 7
{
ïï 
	securePwd
óó 
.
óó 

AppendChar
óó (
(
óó( )
$str
óó) /
[
óó/ 0
i
óó0 1
]
óó1 2
)
óó2 3
;
óó3 4
}
òò 
data
öö 
=
öö 

secureUser
öö !
.
öö! "
ToString
öö" *
(
öö* +
)
öö+ ,
+
öö- .
$str
öö/ 2
+
öö3 4
	securePwd
öö5 >
.
öö> ?
ToString
öö? G
(
ööG H
)
ööH I
;
ööI J
}
õõ 
}
úú 	
dataGoodB2G
ùù 
=
ùù 
data
ùù 
;
ùù 
GoodB2GSink
ûû 
(
ûû 
req
ûû 
,
ûû 
resp
ûû 
)
ûû 
;
ûû 
}
üü 
}°° 
}¢¢ ¸A
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_51a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_51a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_51b55 3
.553 4
BadSink554 ;
(55; <
data55< @
,55A B
req55C F
,55F G
resp55H L
)55M N
;55N O
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataBB 
;BB 
usingCC 
(CC 
SecureStringCC 
	securePwdCC %
=CC& '
newCC( +
SecureStringCC, 8
(CC8 9
)CC9 :
)CC: ;
{DD 	
usingEE 
(EE 
SecureStringEE 

secureUserEE  *
=EE+ ,
newEE- 0
SecureStringEE1 =
(EE= >
)EE> ?
)EE? @
{FF 
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG  !
<GG" #
$strGG$ /
.GG/ 0
LengthGG0 6
;GG6 7
iGG8 9
++GG9 ;
)GG; <
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ (
(JJ( )
$strJJ) 4
[JJ4 5
iJJ5 6
]JJ6 7
)JJ7 8
;JJ8 9
}KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ *
.LL* +
LengthLL+ 1
;LL1 2
iLL3 4
++LL4 6
)LL6 7
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) /
[OO/ 0
iOO0 1
]OO1 2
)OO2 3
;OO3 4
}PP 
{RR 
stringSS 
saltSS 
=SS  !
$strSS" 0
;SS0 1
usingTT 
(TT '
SHA512CryptoServiceProviderTT 6
sha512TT7 =
=TT> ?
newTT@ C'
SHA512CryptoServiceProviderTTD _
(TT_ `
)TT` a
)TTa b
{UU 
stringVV 
credentialsToHashVV 0
=VV1 2

secureUserVV3 =
.VV= >
ToStringVV> F
(VVF G
)VVG H
+VVI J
$strVVK N
+VVO P
	securePwdVVQ Z
.VVZ [
ToStringVV[ c
(VVc d
)VVd e
;VVe f
byteWW 
[WW 
]WW 
bufferWW %
=WW& '
EncodingWW( 0
.WW0 1
UTF8WW1 5
.WW5 6
GetBytesWW6 >
(WW> ?
stringWW? E
.WWE F
ConcatWWF L
(WWL M
saltWWM Q
,WWQ R
credentialsToHashWWS d
)WWd e
)WWe f
;WWf g
byteXX 
[XX 
]XX 
hashedCredsAsBytesXX 1
=XX2 3
sha512XX4 :
.XX: ;
ComputeHashXX; F
(XXF G
bufferXXG M
)XXM N
;XXN O
dataYY 
=YY 
IOYY !
.YY! "
ToHexYY" '
(YY' (
hashedCredsAsBytesYY( :
)YY: ;
;YY; <
}ZZ 
}[[ 
}\\ 
}]] 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_51b^^ 3
.^^3 4
GoodG2BSink^^4 ?
(^^? @
data^^@ D
,^^E F
req^^G J
,^^J K
resp^^L P
)^^Q R
;^^R S
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
usingee 
(ee 
SecureStringee 
	securePwdee %
=ee& '
newee( +
SecureStringee, 8
(ee8 9
)ee9 :
)ee: ;
{ff 	
usinggg 
(gg 
SecureStringgg 

secureUsergg  *
=gg+ ,
newgg- 0
SecureStringgg1 =
(gg= >
)gg> ?
)gg? @
{hh 
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii  !
<ii" #
$strii$ /
.ii/ 0
Lengthii0 6
;ii6 7
iii8 9
++ii9 ;
)ii; <
{jj 
	securePwdll 
.ll 

AppendCharll (
(ll( )
$strll) 4
[ll4 5
ill5 6
]ll6 7
)ll7 8
;ll8 9
}mm 
fornn 
(nn 
intnn 
inn 
=nn 
$numnn 
;nn 
inn  !
<nn" #
$strnn$ *
.nn* +
Lengthnn+ 1
;nn1 2
inn3 4
++nn4 6
)nn6 7
{oo 
	securePwdqq 
.qq 

AppendCharqq (
(qq( )
$strqq) /
[qq/ 0
iqq0 1
]qq1 2
)qq2 3
;qq3 4
}rr 
datatt 
=tt 

secureUsertt !
.tt! "
ToStringtt" *
(tt* +
)tt+ ,
+tt- .
$strtt/ 2
+tt3 4
	securePwdtt5 >
.tt> ?
ToStringtt? G
(ttG H
)ttH I
;ttI J
}uu 
}vv 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_51bww 3
.ww3 4
GoodB2GSinkww4 ?
(ww? @
dataww@ D
,wwE F
reqwwG J
,wwJ K
respwwL P
)wwQ R
;wwR S
}xx 
}zz 
}{{ ¸
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_51b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_51b 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
resp"" 
."" 
AppendCookie"" 
("" 
new"" 

HttpCookie"" (
(""( )
$str"") /
,""/ 0
data""1 5
)""5 6
)""6 7
;""7 8
}## 
public(( 

static(( 
void(( 
GoodG2BSink(( "
(((" #
string((# )
data((* .
,((/ 0
HttpRequest((1 <
req((= @
,((@ A
HttpResponse((B N
resp((O S
)((S T
{)) 
resp,, 
.,, 
AppendCookie,, 
(,, 
new,, 

HttpCookie,, (
(,,( )
$str,,) /
,,,/ 0
data,,1 5
),,5 6
),,6 7
;,,7 8
}-- 
public00 

static00 
void00 
GoodB2GSink00 "
(00" #
string00# )
data00* .
,00/ 0
HttpRequest001 <
req00= @
,00@ A
HttpResponse00B N
resp00O S
)00S T
{11 
{33 	
string44 
salt44 
=44 
$str44 (
;44( )
using55 
(55 '
SHA512CryptoServiceProvider55 .
sha51255/ 5
=556 7
new558 ;'
SHA512CryptoServiceProvider55< W
(55W X
)55X Y
)55Y Z
{66 
byte77 
[77 
]77 
buffer77 
=77 
Encoding77  (
.77( )
UTF877) -
.77- .
GetBytes77. 6
(776 7
string777 =
.77= >
Concat77> D
(77D E
salt77E I
,77I J
data77K O
)77O P
)77P Q
;77Q R
byte88 
[88 
]88 
hashedCredsAsBytes88 )
=88* +
sha51288, 2
.882 3
ComputeHash883 >
(88> ?
buffer88? E
)88E F
;88F G
data99 
=99 
IO99 
.99 
ToHex99 
(99  
hashedCredsAsBytes99  2
)992 3
;993 4
}:: 
};; 	
resp<< 
.<< 
AppendCookie<< 
(<< 
new<< 

HttpCookie<< (
(<<( )
$str<<) /
,<</ 0
data<<1 5
)<<5 6
)<<6 7
;<<7 8
}== 
}?? 
}@@ ¸A
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_52a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_52a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_52b55 3
.553 4
BadSink554 ;
(55; <
data55< @
,55A B
req55C F
,55F G
resp55H L
)55L M
;55M N
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataBB 
;BB 
usingCC 
(CC 
SecureStringCC 
	securePwdCC %
=CC& '
newCC( +
SecureStringCC, 8
(CC8 9
)CC9 :
)CC: ;
{DD 	
usingEE 
(EE 
SecureStringEE 

secureUserEE  *
=EE+ ,
newEE- 0
SecureStringEE1 =
(EE= >
)EE> ?
)EE? @
{FF 
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG  !
<GG" #
$strGG$ /
.GG/ 0
LengthGG0 6
;GG6 7
iGG8 9
++GG9 ;
)GG; <
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ (
(JJ( )
$strJJ) 4
[JJ4 5
iJJ5 6
]JJ6 7
)JJ7 8
;JJ8 9
}KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ *
.LL* +
LengthLL+ 1
;LL1 2
iLL3 4
++LL4 6
)LL6 7
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) /
[OO/ 0
iOO0 1
]OO1 2
)OO2 3
;OO3 4
}PP 
{RR 
stringSS 
saltSS 
=SS  !
$strSS" 0
;SS0 1
usingTT 
(TT '
SHA512CryptoServiceProviderTT 6
sha512TT7 =
=TT> ?
newTT@ C'
SHA512CryptoServiceProviderTTD _
(TT_ `
)TT` a
)TTa b
{UU 
stringVV 
credentialsToHashVV 0
=VV1 2

secureUserVV3 =
.VV= >
ToStringVV> F
(VVF G
)VVG H
+VVI J
$strVVK N
+VVO P
	securePwdVVQ Z
.VVZ [
ToStringVV[ c
(VVc d
)VVd e
;VVe f
byteWW 
[WW 
]WW 
bufferWW %
=WW& '
EncodingWW( 0
.WW0 1
UTF8WW1 5
.WW5 6
GetBytesWW6 >
(WW> ?
stringWW? E
.WWE F
ConcatWWF L
(WWL M
saltWWM Q
,WWQ R
credentialsToHashWWS d
)WWd e
)WWe f
;WWf g
byteXX 
[XX 
]XX 
hashedCredsAsBytesXX 1
=XX2 3
sha512XX4 :
.XX: ;
ComputeHashXX; F
(XXF G
bufferXXG M
)XXM N
;XXN O
dataYY 
=YY 
IOYY !
.YY! "
ToHexYY" '
(YY' (
hashedCredsAsBytesYY( :
)YY: ;
;YY; <
}ZZ 
}[[ 
}\\ 
}]] 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_52b^^ 3
.^^3 4
GoodG2BSink^^4 ?
(^^? @
data^^@ D
,^^E F
req^^G J
,^^J K
resp^^L P
)^^P Q
;^^Q R
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
usingee 
(ee 
SecureStringee 
	securePwdee %
=ee& '
newee( +
SecureStringee, 8
(ee8 9
)ee9 :
)ee: ;
{ff 	
usinggg 
(gg 
SecureStringgg 

secureUsergg  *
=gg+ ,
newgg- 0
SecureStringgg1 =
(gg= >
)gg> ?
)gg? @
{hh 
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii  !
<ii" #
$strii$ /
.ii/ 0
Lengthii0 6
;ii6 7
iii8 9
++ii9 ;
)ii; <
{jj 
	securePwdll 
.ll 

AppendCharll (
(ll( )
$strll) 4
[ll4 5
ill5 6
]ll6 7
)ll7 8
;ll8 9
}mm 
fornn 
(nn 
intnn 
inn 
=nn 
$numnn 
;nn 
inn  !
<nn" #
$strnn$ *
.nn* +
Lengthnn+ 1
;nn1 2
inn3 4
++nn4 6
)nn6 7
{oo 
	securePwdqq 
.qq 

AppendCharqq (
(qq( )
$strqq) /
[qq/ 0
iqq0 1
]qq1 2
)qq2 3
;qq3 4
}rr 
datatt 
=tt 

secureUsertt !
.tt! "
ToStringtt" *
(tt* +
)tt+ ,
+tt- .
$strtt/ 2
+tt3 4
	securePwdtt5 >
.tt> ?
ToStringtt? G
(ttG H
)ttH I
;ttI J
}uu 
}vv 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_52bww 3
.ww3 4
GoodB2GSinkww4 ?
(ww? @
dataww@ D
,wwE F
reqwwG J
,wwJ K
respwwL P
)wwP Q
;wwQ R
}xx 
}zz 
}{{ Æ
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_52b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_52b 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 7
+CWE315_Cleartext_Storage_in_Cookie__Web_52c   3
.  3 4
BadSink  4 ;
(  ; <
data  < @
,  A B
req  C F
,  F G
resp  H L
)  L M
;  M N
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
string&&# )
data&&* .
,&&/ 0
HttpRequest&&1 <
req&&= @
,&&@ A
HttpResponse&&B N
resp&&O S
)&&S T
{'' 7
+CWE315_Cleartext_Storage_in_Cookie__Web_52c(( 3
.((3 4
GoodG2BSink((4 ?
(((? @
data((@ D
,((E F
req((G J
,((J K
resp((L P
)((P Q
;((Q R
})) 
public,, 

static,, 
void,, 
GoodB2GSink,, "
(,," #
string,,# )
data,,* .
,,,/ 0
HttpRequest,,1 <
req,,= @
,,,@ A
HttpResponse,,B N
resp,,O S
),,S T
{-- 7
+CWE315_Cleartext_Storage_in_Cookie__Web_52c.. 3
...3 4
GoodB2GSink..4 ?
(..? @
data..@ D
,..E F
req..G J
,..J K
resp..L P
)..P Q
;..Q R
}// 
}11 
}22 ¸
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_52c.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_52c 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
resp"" 
."" 
AppendCookie"" 
("" 
new"" 

HttpCookie"" (
(""( )
$str"") /
,""/ 0
data""1 5
)""5 6
)""6 7
;""7 8
}## 
public(( 

static(( 
void(( 
GoodG2BSink(( "
(((" #
string((# )
data((* .
,((/ 0
HttpRequest((1 <
req((= @
,((@ A
HttpResponse((B N
resp((O S
)((S T
{)) 
resp,, 
.,, 
AppendCookie,, 
(,, 
new,, 

HttpCookie,, (
(,,( )
$str,,) /
,,,/ 0
data,,1 5
),,5 6
),,6 7
;,,7 8
}-- 
public00 

static00 
void00 
GoodB2GSink00 "
(00" #
string00# )
data00* .
,00/ 0
HttpRequest001 <
req00= @
,00@ A
HttpResponse00B N
resp00O S
)00S T
{11 
{33 	
string44 
salt44 
=44 
$str44 (
;44( )
using55 
(55 '
SHA512CryptoServiceProvider55 .
sha51255/ 5
=556 7
new558 ;'
SHA512CryptoServiceProvider55< W
(55W X
)55X Y
)55Y Z
{66 
byte77 
[77 
]77 
buffer77 
=77 
Encoding77  (
.77( )
UTF877) -
.77- .
GetBytes77. 6
(776 7
string777 =
.77= >
Concat77> D
(77D E
salt77E I
,77I J
data77K O
)77O P
)77P Q
;77Q R
byte88 
[88 
]88 
hashedCredsAsBytes88 )
=88* +
sha51288, 2
.882 3
ComputeHash883 >
(88> ?
buffer88? E
)88E F
;88F G
data99 
=99 
IO99 
.99 
ToHex99 
(99  
hashedCredsAsBytes99  2
)992 3
;993 4
}:: 
};; 	
resp<< 
.<< 
AppendCookie<< 
(<< 
new<< 

HttpCookie<< (
(<<( )
$str<<) /
,<</ 0
data<<1 5
)<<5 6
)<<6 7
;<<7 8
}== 
}?? 
}@@ ¸A
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_53a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_53b55 3
.553 4
BadSink554 ;
(55; <
data55< @
,55A B
req55C F
,55F G
resp55H L
)55L M
;55M N
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataBB 
;BB 
usingCC 
(CC 
SecureStringCC 
	securePwdCC %
=CC& '
newCC( +
SecureStringCC, 8
(CC8 9
)CC9 :
)CC: ;
{DD 	
usingEE 
(EE 
SecureStringEE 

secureUserEE  *
=EE+ ,
newEE- 0
SecureStringEE1 =
(EE= >
)EE> ?
)EE? @
{FF 
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG  !
<GG" #
$strGG$ /
.GG/ 0
LengthGG0 6
;GG6 7
iGG8 9
++GG9 ;
)GG; <
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ (
(JJ( )
$strJJ) 4
[JJ4 5
iJJ5 6
]JJ6 7
)JJ7 8
;JJ8 9
}KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ *
.LL* +
LengthLL+ 1
;LL1 2
iLL3 4
++LL4 6
)LL6 7
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) /
[OO/ 0
iOO0 1
]OO1 2
)OO2 3
;OO3 4
}PP 
{RR 
stringSS 
saltSS 
=SS  !
$strSS" 0
;SS0 1
usingTT 
(TT '
SHA512CryptoServiceProviderTT 6
sha512TT7 =
=TT> ?
newTT@ C'
SHA512CryptoServiceProviderTTD _
(TT_ `
)TT` a
)TTa b
{UU 
stringVV 
credentialsToHashVV 0
=VV1 2

secureUserVV3 =
.VV= >
ToStringVV> F
(VVF G
)VVG H
+VVI J
$strVVK N
+VVO P
	securePwdVVQ Z
.VVZ [
ToStringVV[ c
(VVc d
)VVd e
;VVe f
byteWW 
[WW 
]WW 
bufferWW %
=WW& '
EncodingWW( 0
.WW0 1
UTF8WW1 5
.WW5 6
GetBytesWW6 >
(WW> ?
stringWW? E
.WWE F
ConcatWWF L
(WWL M
saltWWM Q
,WWQ R
credentialsToHashWWS d
)WWd e
)WWe f
;WWf g
byteXX 
[XX 
]XX 
hashedCredsAsBytesXX 1
=XX2 3
sha512XX4 :
.XX: ;
ComputeHashXX; F
(XXF G
bufferXXG M
)XXM N
;XXN O
dataYY 
=YY 
IOYY !
.YY! "
ToHexYY" '
(YY' (
hashedCredsAsBytesYY( :
)YY: ;
;YY; <
}ZZ 
}[[ 
}\\ 
}]] 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_53b^^ 3
.^^3 4
GoodG2BSink^^4 ?
(^^? @
data^^@ D
,^^E F
req^^G J
,^^J K
resp^^L P
)^^P Q
;^^Q R
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
usingee 
(ee 
SecureStringee 
	securePwdee %
=ee& '
newee( +
SecureStringee, 8
(ee8 9
)ee9 :
)ee: ;
{ff 	
usinggg 
(gg 
SecureStringgg 

secureUsergg  *
=gg+ ,
newgg- 0
SecureStringgg1 =
(gg= >
)gg> ?
)gg? @
{hh 
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii  !
<ii" #
$strii$ /
.ii/ 0
Lengthii0 6
;ii6 7
iii8 9
++ii9 ;
)ii; <
{jj 
	securePwdll 
.ll 

AppendCharll (
(ll( )
$strll) 4
[ll4 5
ill5 6
]ll6 7
)ll7 8
;ll8 9
}mm 
fornn 
(nn 
intnn 
inn 
=nn 
$numnn 
;nn 
inn  !
<nn" #
$strnn$ *
.nn* +
Lengthnn+ 1
;nn1 2
inn3 4
++nn4 6
)nn6 7
{oo 
	securePwdqq 
.qq 

AppendCharqq (
(qq( )
$strqq) /
[qq/ 0
iqq0 1
]qq1 2
)qq2 3
;qq3 4
}rr 
datatt 
=tt 

secureUsertt !
.tt! "
ToStringtt" *
(tt* +
)tt+ ,
+tt- .
$strtt/ 2
+tt3 4
	securePwdtt5 >
.tt> ?
ToStringtt? G
(ttG H
)ttH I
;ttI J
}uu 
}vv 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_53bww 3
.ww3 4
GoodB2GSinkww4 ?
(ww? @
dataww@ D
,wwE F
reqwwG J
,wwJ K
respwwL P
)wwP Q
;wwQ R
}xx 
}zz 
}{{ Æ
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_53b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53b 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53c   3
.  3 4
BadSink  4 ;
(  ; <
data  < @
,  A B
req  C F
,  F G
resp  H L
)  L M
;  M N
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
string&&# )
data&&* .
,&&/ 0
HttpRequest&&1 <
req&&= @
,&&@ A
HttpResponse&&B N
resp&&O S
)&&S T
{'' 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53c(( 3
.((3 4
GoodG2BSink((4 ?
(((? @
data((@ D
,((E F
req((G J
,((J K
resp((L P
)((P Q
;((Q R
})) 
public,, 

static,, 
void,, 
GoodB2GSink,, "
(,," #
string,,# )
data,,* .
,,,/ 0
HttpRequest,,1 <
req,,= @
,,,@ A
HttpResponse,,B N
resp,,O S
),,S T
{-- 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53c.. 3
...3 4
GoodB2GSink..4 ?
(..? @
data..@ D
,..E F
req..G J
,..J K
resp..L P
)..P Q
;..Q R
}// 
}11 
}22 Æ
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_53c.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53c 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53d   3
.  3 4
BadSink  4 ;
(  ; <
data  < @
,  A B
req  C F
,  F G
resp  H L
)  L M
;  M N
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
string&&# )
data&&* .
,&&/ 0
HttpRequest&&1 <
req&&= @
,&&@ A
HttpResponse&&B N
resp&&O S
)&&S T
{'' 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53d(( 3
.((3 4
GoodG2BSink((4 ?
(((? @
data((@ D
,((E F
req((G J
,((J K
resp((L P
)((P Q
;((Q R
})) 
public,, 

static,, 
void,, 
GoodB2GSink,, "
(,," #
string,,# )
data,,* .
,,,/ 0
HttpRequest,,1 <
req,,= @
,,,@ A
HttpResponse,,B N
resp,,O S
),,S T
{-- 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53d.. 3
...3 4
GoodB2GSink..4 ?
(..? @
data..@ D
,..E F
req..G J
,..J K
resp..L P
)..P Q
;..Q R
}// 
}11 
}22 ¸
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_53d.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_53d 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
resp"" 
."" 
AppendCookie"" 
("" 
new"" 

HttpCookie"" (
(""( )
$str"") /
,""/ 0
data""1 5
)""5 6
)""6 7
;""7 8
}## 
public(( 

static(( 
void(( 
GoodG2BSink(( "
(((" #
string((# )
data((* .
,((/ 0
HttpRequest((1 <
req((= @
,((@ A
HttpResponse((B N
resp((O S
)((S T
{)) 
resp,, 
.,, 
AppendCookie,, 
(,, 
new,, 

HttpCookie,, (
(,,( )
$str,,) /
,,,/ 0
data,,1 5
),,5 6
),,6 7
;,,7 8
}-- 
public00 

static00 
void00 
GoodB2GSink00 "
(00" #
string00# )
data00* .
,00/ 0
HttpRequest001 <
req00= @
,00@ A
HttpResponse00B N
resp00O S
)00S T
{11 
{33 	
string44 
salt44 
=44 
$str44 (
;44( )
using55 
(55 '
SHA512CryptoServiceProvider55 .
sha51255/ 5
=556 7
new558 ;'
SHA512CryptoServiceProvider55< W
(55W X
)55X Y
)55Y Z
{66 
byte77 
[77 
]77 
buffer77 
=77 
Encoding77  (
.77( )
UTF877) -
.77- .
GetBytes77. 6
(776 7
string777 =
.77= >
Concat77> D
(77D E
salt77E I
,77I J
data77K O
)77O P
)77P Q
;77Q R
byte88 
[88 
]88 
hashedCredsAsBytes88 )
=88* +
sha51288, 2
.882 3
ComputeHash883 >
(88> ?
buffer88? E
)88E F
;88F G
data99 
=99 
IO99 
.99 
ToHex99 
(99  
hashedCredsAsBytes99  2
)992 3
;993 4
}:: 
};; 	
resp<< 
.<< 
AppendCookie<< 
(<< 
new<< 

HttpCookie<< (
(<<( )
$str<<) /
,<</ 0
data<<1 5
)<<5 6
)<<6 7
;<<7 8
}== 
}?? 
}@@ ¸A
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_54a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_54b55 3
.553 4
BadSink554 ;
(55; <
data55< @
,55A B
req55C F
,55F G
resp55H L
)55L M
;55M N
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
HttpRequest@@ $
req@@% (
,@@( )
HttpResponse@@* 6
resp@@7 ;
)@@; <
{AA 
stringBB 
dataBB 
;BB 
usingCC 
(CC 
SecureStringCC 
	securePwdCC %
=CC& '
newCC( +
SecureStringCC, 8
(CC8 9
)CC9 :
)CC: ;
{DD 	
usingEE 
(EE 
SecureStringEE 

secureUserEE  *
=EE+ ,
newEE- 0
SecureStringEE1 =
(EE= >
)EE> ?
)EE? @
{FF 
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG  !
<GG" #
$strGG$ /
.GG/ 0
LengthGG0 6
;GG6 7
iGG8 9
++GG9 ;
)GG; <
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ (
(JJ( )
$strJJ) 4
[JJ4 5
iJJ5 6
]JJ6 7
)JJ7 8
;JJ8 9
}KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ *
.LL* +
LengthLL+ 1
;LL1 2
iLL3 4
++LL4 6
)LL6 7
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) /
[OO/ 0
iOO0 1
]OO1 2
)OO2 3
;OO3 4
}PP 
{RR 
stringSS 
saltSS 
=SS  !
$strSS" 0
;SS0 1
usingTT 
(TT '
SHA512CryptoServiceProviderTT 6
sha512TT7 =
=TT> ?
newTT@ C'
SHA512CryptoServiceProviderTTD _
(TT_ `
)TT` a
)TTa b
{UU 
stringVV 
credentialsToHashVV 0
=VV1 2

secureUserVV3 =
.VV= >
ToStringVV> F
(VVF G
)VVG H
+VVI J
$strVVK N
+VVO P
	securePwdVVQ Z
.VVZ [
ToStringVV[ c
(VVc d
)VVd e
;VVe f
byteWW 
[WW 
]WW 
bufferWW %
=WW& '
EncodingWW( 0
.WW0 1
UTF8WW1 5
.WW5 6
GetBytesWW6 >
(WW> ?
stringWW? E
.WWE F
ConcatWWF L
(WWL M
saltWWM Q
,WWQ R
credentialsToHashWWS d
)WWd e
)WWe f
;WWf g
byteXX 
[XX 
]XX 
hashedCredsAsBytesXX 1
=XX2 3
sha512XX4 :
.XX: ;
ComputeHashXX; F
(XXF G
bufferXXG M
)XXM N
;XXN O
dataYY 
=YY 
IOYY !
.YY! "
ToHexYY" '
(YY' (
hashedCredsAsBytesYY( :
)YY: ;
;YY; <
}ZZ 
}[[ 
}\\ 
}]] 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_54b^^ 3
.^^3 4
GoodG2BSink^^4 ?
(^^? @
data^^@ D
,^^E F
req^^G J
,^^J K
resp^^L P
)^^P Q
;^^Q R
}__ 
privatebb 
voidbb 
GoodB2Gbb 
(bb 
HttpRequestbb $
reqbb% (
,bb( )
HttpResponsebb* 6
respbb7 ;
)bb; <
{cc 
stringdd 
datadd 
;dd 
usingee 
(ee 
SecureStringee 
	securePwdee %
=ee& '
newee( +
SecureStringee, 8
(ee8 9
)ee9 :
)ee: ;
{ff 	
usinggg 
(gg 
SecureStringgg 

secureUsergg  *
=gg+ ,
newgg- 0
SecureStringgg1 =
(gg= >
)gg> ?
)gg? @
{hh 
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii  !
<ii" #
$strii$ /
.ii/ 0
Lengthii0 6
;ii6 7
iii8 9
++ii9 ;
)ii; <
{jj 
	securePwdll 
.ll 

AppendCharll (
(ll( )
$strll) 4
[ll4 5
ill5 6
]ll6 7
)ll7 8
;ll8 9
}mm 
fornn 
(nn 
intnn 
inn 
=nn 
$numnn 
;nn 
inn  !
<nn" #
$strnn$ *
.nn* +
Lengthnn+ 1
;nn1 2
inn3 4
++nn4 6
)nn6 7
{oo 
	securePwdqq 
.qq 

AppendCharqq (
(qq( )
$strqq) /
[qq/ 0
iqq0 1
]qq1 2
)qq2 3
;qq3 4
}rr 
datatt 
=tt 

secureUsertt !
.tt! "
ToStringtt" *
(tt* +
)tt+ ,
+tt- .
$strtt/ 2
+tt3 4
	securePwdtt5 >
.tt> ?
ToStringtt? G
(ttG H
)ttH I
;ttI J
}uu 
}vv 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_54bww 3
.ww3 4
GoodB2GSinkww4 ?
(ww? @
dataww@ D
,wwE F
reqwwG J
,wwJ K
respwwL P
)wwP Q
;wwQ R
}xx 
}zz 
}{{ Æ
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_54b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54b 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54c   3
.  3 4
BadSink  4 ;
(  ; <
data  < @
,  A B
req  C F
,  F G
resp  H L
)  L M
;  M N
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
string&&# )
data&&* .
,&&/ 0
HttpRequest&&1 <
req&&= @
,&&@ A
HttpResponse&&B N
resp&&O S
)&&S T
{'' 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54c(( 3
.((3 4
GoodG2BSink((4 ?
(((? @
data((@ D
,((E F
req((G J
,((J K
resp((L P
)((P Q
;((Q R
})) 
public,, 

static,, 
void,, 
GoodB2GSink,, "
(,," #
string,,# )
data,,* .
,,,/ 0
HttpRequest,,1 <
req,,= @
,,,@ A
HttpResponse,,B N
resp,,O S
),,S T
{-- 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54c.. 3
...3 4
GoodB2GSink..4 ?
(..? @
data..@ D
,..E F
req..G J
,..J K
resp..L P
)..P Q
;..Q R
}// 
}11 
}22 Æ
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_54c.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54c 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54d   3
.  3 4
BadSink  4 ;
(  ; <
data  < @
,  A B
req  C F
,  F G
resp  H L
)  L M
;  M N
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
string&&# )
data&&* .
,&&/ 0
HttpRequest&&1 <
req&&= @
,&&@ A
HttpResponse&&B N
resp&&O S
)&&S T
{'' 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54d(( 3
.((3 4
GoodG2BSink((4 ?
(((? @
data((@ D
,((E F
req((G J
,((J K
resp((L P
)((P Q
;((Q R
})) 
public,, 

static,, 
void,, 
GoodB2GSink,, "
(,," #
string,,# )
data,,* .
,,,/ 0
HttpRequest,,1 <
req,,= @
,,,@ A
HttpResponse,,B N
resp,,O S
),,S T
{-- 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54d.. 3
...3 4
GoodB2GSink..4 ?
(..? @
data..@ D
,..E F
req..G J
,..J K
resp..L P
)..P Q
;..Q R
}// 
}11 
}22 Æ
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_54d.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54d 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54e   3
.  3 4
BadSink  4 ;
(  ; <
data  < @
,  A B
req  C F
,  F G
resp  H L
)  L M
;  M N
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
string&&# )
data&&* .
,&&/ 0
HttpRequest&&1 <
req&&= @
,&&@ A
HttpResponse&&B N
resp&&O S
)&&S T
{'' 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54e(( 3
.((3 4
GoodG2BSink((4 ?
(((? @
data((@ D
,((E F
req((G J
,((J K
resp((L P
)((P Q
;((Q R
})) 
public,, 

static,, 
void,, 
GoodB2GSink,, "
(,," #
string,,# )
data,,* .
,,,/ 0
HttpRequest,,1 <
req,,= @
,,,@ A
HttpResponse,,B N
resp,,O S
),,S T
{-- 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54e.. 3
...3 4
GoodB2GSink..4 ?
(..? @
data..@ D
,..E F
req..G J
,..J K
resp..L P
)..P Q
;..Q R
}// 
}11 
}22 ¸
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_54e.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_54e 1
{ 
public 

static 
void 
BadSink 
( 
string %
data& *
,+ ,
HttpRequest- 8
req9 <
,< =
HttpResponse> J
respK O
)O P
{ 
resp"" 
."" 
AppendCookie"" 
("" 
new"" 

HttpCookie"" (
(""( )
$str"") /
,""/ 0
data""1 5
)""5 6
)""6 7
;""7 8
}## 
public(( 

static(( 
void(( 
GoodG2BSink(( "
(((" #
string((# )
data((* .
,((/ 0
HttpRequest((1 <
req((= @
,((@ A
HttpResponse((B N
resp((O S
)((S T
{)) 
resp,, 
.,, 
AppendCookie,, 
(,, 
new,, 

HttpCookie,, (
(,,( )
$str,,) /
,,,/ 0
data,,1 5
),,5 6
),,6 7
;,,7 8
}-- 
public00 

static00 
void00 
GoodB2GSink00 "
(00" #
string00# )
data00* .
,00/ 0
HttpRequest001 <
req00= @
,00@ A
HttpResponse00B N
resp00O S
)00S T
{11 
{33 	
string44 
salt44 
=44 
$str44 (
;44( )
using55 
(55 '
SHA512CryptoServiceProvider55 .
sha51255/ 5
=556 7
new558 ;'
SHA512CryptoServiceProvider55< W
(55W X
)55X Y
)55Y Z
{66 
byte77 
[77 
]77 
buffer77 
=77 
Encoding77  (
.77( )
UTF877) -
.77- .
GetBytes77. 6
(776 7
string777 =
.77= >
Concat77> D
(77D E
salt77E I
,77I J
data77K O
)77O P
)77P Q
;77Q R
byte88 
[88 
]88 
hashedCredsAsBytes88 )
=88* +
sha51288, 2
.882 3
ComputeHash883 >
(88> ?
buffer88? E
)88E F
;88F G
data99 
=99 
IO99 
.99 
ToHex99 
(99  
hashedCredsAsBytes99  2
)992 3
;993 4
}:: 
};; 	
resp<< 
.<< 
AppendCookie<< 
(<< 
new<< 

HttpCookie<< (
(<<( )
$str<<) /
,<</ 0
data<<1 5
)<<5 6
)<<6 7
;<<7 8
}== 
}?? 
}@@ Ω 
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_61a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_61a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
string   
data   
=   7
+CWE315_Cleartext_Storage_in_Cookie__Web_61b   A
.  A B
	BadSource  B K
(  K L
req  L O
,  O P
resp  Q U
)  U V
;  V W
resp## 
.## 
AppendCookie## 
(## 
new## 

HttpCookie## (
(##( )
$str##) /
,##/ 0
data##1 5
)##5 6
)##6 7
;##7 8
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
HttpRequest'' )
req''* -
,''- .
HttpResponse''/ ;
resp''< @
)''@ A
{(( 
GoodG2B)) 
()) 
req)) 
,)) 
resp)) 
))) 
;)) 
GoodB2G** 
(** 
req** 
,** 
resp** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
HttpRequest..  +
req.., /
,../ 0
HttpResponse..1 =
resp..> B
)..B C
{// 
string00 
data00 
=00 7
+CWE315_Cleartext_Storage_in_Cookie__Web_61b00 A
.00A B
GoodG2BSource00B O
(00O P
req00P S
,00S T
resp00U Y
)00Y Z
;00Z [
resp33 
.33 
AppendCookie33 
(33 
new33 

HttpCookie33 (
(33( )
$str33) /
,33/ 0
data331 5
)335 6
)336 7
;337 8
}44 
private77 
static77 
void77 
GoodB2G77 
(77  
HttpRequest77  +
req77, /
,77/ 0
HttpResponse771 =
resp77> B
)77B C
{88 
string99 
data99 
=99 7
+CWE315_Cleartext_Storage_in_Cookie__Web_61b99 A
.99A B
GoodB2GSource99B O
(99O P
req99P S
,99S T
resp99U Y
)99Y Z
;99Z [
{;; 	
string<< 
salt<< 
=<< 
$str<< (
;<<( )
using== 
(== '
SHA512CryptoServiceProvider== .
sha512==/ 5
===6 7
new==8 ;'
SHA512CryptoServiceProvider==< W
(==W X
)==X Y
)==Y Z
{>> 
byte?? 
[?? 
]?? 
buffer?? 
=?? 
Encoding??  (
.??( )
UTF8??) -
.??- .
GetBytes??. 6
(??6 7
string??7 =
.??= >
Concat??> D
(??D E
salt??E I
,??I J
data??K O
)??O P
)??P Q
;??Q R
byte@@ 
[@@ 
]@@ 
hashedCredsAsBytes@@ )
=@@* +
sha512@@, 2
.@@2 3
ComputeHash@@3 >
(@@> ?
buffer@@? E
)@@E F
;@@F G
dataAA 
=AA 
IOAA 
.AA 
ToHexAA 
(AA  
hashedCredsAsBytesAA  2
)AA2 3
;AA3 4
}BB 
}CC 	
respDD 
.DD 
AppendCookieDD 
(DD 
newDD 

HttpCookieDD (
(DD( )
$strDD) /
,DD/ 0
dataDD1 5
)DD5 6
)DD6 7
;DD7 8
}EE 
}GG 
}HH ±:
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_61b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_61b 1
{ 
public   

static   
string   
	BadSource   "
(  " #
HttpRequest  # .
req  / 2
,  2 3
HttpResponse  4 @
resp  A E
)  E F
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	
return55 
data55 
;55 
}66 
public;; 

static;; 
string;; 
GoodG2BSource;; &
(;;& '
HttpRequest;;' 2
req;;3 6
,;;6 7
HttpResponse;;8 D
resp;;E I
);;I J
{<< 
string== 
data== 
;== 
using>> 
(>> 
SecureString>> 
	securePwd>> %
=>>& '
new>>( +
SecureString>>, 8
(>>8 9
)>>9 :
)>>: ;
{?? 	
using@@ 
(@@ 
SecureString@@ 

secureUser@@  *
=@@+ ,
new@@- 0
SecureString@@1 =
(@@= >
)@@> ?
)@@? @
{AA 
forBB 
(BB 
intBB 
iBB 
=BB 
$numBB 
;BB 
iBB  !
<BB" #
$strBB$ /
.BB/ 0
LengthBB0 6
;BB6 7
iBB8 9
++BB9 ;
)BB; <
{CC 
	securePwdEE 
.EE 

AppendCharEE (
(EE( )
$strEE) 4
[EE4 5
iEE5 6
]EE6 7
)EE7 8
;EE8 9
}FF 
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG  !
<GG" #
$strGG$ *
.GG* +
LengthGG+ 1
;GG1 2
iGG3 4
++GG4 6
)GG6 7
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ (
(JJ( )
$strJJ) /
[JJ/ 0
iJJ0 1
]JJ1 2
)JJ2 3
;JJ3 4
}KK 
{MM 
stringNN 
saltNN 
=NN  !
$strNN" 0
;NN0 1
usingOO 
(OO '
SHA512CryptoServiceProviderOO 6
sha512OO7 =
=OO> ?
newOO@ C'
SHA512CryptoServiceProviderOOD _
(OO_ `
)OO` a
)OOa b
{PP 
stringQQ 
credentialsToHashQQ 0
=QQ1 2

secureUserQQ3 =
.QQ= >
ToStringQQ> F
(QQF G
)QQG H
+QQI J
$strQQK N
+QQO P
	securePwdQQQ Z
.QQZ [
ToStringQQ[ c
(QQc d
)QQd e
;QQe f
byteRR 
[RR 
]RR 
bufferRR %
=RR& '
EncodingRR( 0
.RR0 1
UTF8RR1 5
.RR5 6
GetBytesRR6 >
(RR> ?
stringRR? E
.RRE F
ConcatRRF L
(RRL M
saltRRM Q
,RRQ R
credentialsToHashRRS d
)RRd e
)RRe f
;RRf g
byteSS 
[SS 
]SS 
hashedCredsAsBytesSS 1
=SS2 3
sha512SS4 :
.SS: ;
ComputeHashSS; F
(SSF G
bufferSSG M
)SSM N
;SSN O
dataTT 
=TT 
IOTT !
.TT! "
ToHexTT" '
(TT' (
hashedCredsAsBytesTT( :
)TT: ;
;TT; <
}UU 
}VV 
}WW 
}XX 	
returnYY 
dataYY 
;YY 
}ZZ 
public]] 

static]] 
string]] 
GoodB2GSource]] &
(]]& '
HttpRequest]]' 2
req]]3 6
,]]6 7
HttpResponse]]8 D
resp]]E I
)]]I J
{^^ 
string__ 
data__ 
;__ 
using`` 
(`` 
SecureString`` 
	securePwd`` %
=``& '
new``( +
SecureString``, 8
(``8 9
)``9 :
)``: ;
{aa 	
usingbb 
(bb 
SecureStringbb 

secureUserbb  *
=bb+ ,
newbb- 0
SecureStringbb1 =
(bb= >
)bb> ?
)bb? @
{cc 
fordd 
(dd 
intdd 
idd 
=dd 
$numdd 
;dd 
idd  !
<dd" #
$strdd$ /
.dd/ 0
Lengthdd0 6
;dd6 7
idd8 9
++dd9 ;
)dd; <
{ee 
	securePwdgg 
.gg 

AppendChargg (
(gg( )
$strgg) 4
[gg4 5
igg5 6
]gg6 7
)gg7 8
;gg8 9
}hh 
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii  !
<ii" #
$strii$ *
.ii* +
Lengthii+ 1
;ii1 2
iii3 4
++ii4 6
)ii6 7
{jj 
	securePwdll 
.ll 

AppendCharll (
(ll( )
$strll) /
[ll/ 0
ill0 1
]ll1 2
)ll2 3
;ll3 4
}mm 
dataoo 
=oo 

secureUseroo !
.oo! "
ToStringoo" *
(oo* +
)oo+ ,
+oo- .
$stroo/ 2
+oo3 4
	securePwdoo5 >
.oo> ?
ToStringoo? G
(ooG H
)ooH I
;ooI J
}pp 
}qq 	
returnrr 
datarr 
;rr 
}ss 
}uu 
}vv –I
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_66a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_66a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	
string55 
[55 
]55 
	dataArray55 
=55 
new55  
string55! '
[55' (
$num55( )
]55) *
;55* +
	dataArray66 
[66 
$num66 
]66 
=66 
data66 
;66 7
+CWE315_Cleartext_Storage_in_Cookie__Web_66b77 3
.773 4
BadSink774 ;
(77; <
	dataArray77< E
,77F G
req77H K
,77K L
resp77M Q
)77R S
;77S T
}88 
public;; 

override;; 
void;; 
Good;; 
(;; 
HttpRequest;; )
req;;* -
,;;- .
HttpResponse;;/ ;
resp;;< @
);;@ A
{<< 
GoodG2B== 
(== 
req== 
,== 
resp== 
)== 
;== 
GoodB2G>> 
(>> 
req>> 
,>> 
resp>> 
)>> 
;>> 
}?? 
privateBB 
staticBB 
voidBB 
GoodG2BBB 
(BB  
HttpRequestBB  +
reqBB, /
,BB/ 0
HttpResponseBB1 =
respBB> B
)BBB C
{CC 
stringDD 
dataDD 
;DD 
usingEE 
(EE 
SecureStringEE 
	securePwdEE %
=EE& '
newEE( +
SecureStringEE, 8
(EE8 9
)EE9 :
)EE: ;
{FF 	
usingGG 
(GG 
SecureStringGG 

secureUserGG  *
=GG+ ,
newGG- 0
SecureStringGG1 =
(GG= >
)GG> ?
)GG? @
{HH 
forII 
(II 
intII 
iII 
=II 
$numII 
;II 
iII  !
<II" #
$strII$ /
.II/ 0
LengthII0 6
;II6 7
iII8 9
++II9 ;
)II; <
{JJ 
	securePwdLL 
.LL 

AppendCharLL (
(LL( )
$strLL) 4
[LL4 5
iLL5 6
]LL6 7
)LL7 8
;LL8 9
}MM 
forNN 
(NN 
intNN 
iNN 
=NN 
$numNN 
;NN 
iNN  !
<NN" #
$strNN$ *
.NN* +
LengthNN+ 1
;NN1 2
iNN3 4
++NN4 6
)NN6 7
{OO 
	securePwdQQ 
.QQ 

AppendCharQQ (
(QQ( )
$strQQ) /
[QQ/ 0
iQQ0 1
]QQ1 2
)QQ2 3
;QQ3 4
}RR 
{TT 
stringUU 
saltUU 
=UU  !
$strUU" 0
;UU0 1
usingVV 
(VV '
SHA512CryptoServiceProviderVV 6
sha512VV7 =
=VV> ?
newVV@ C'
SHA512CryptoServiceProviderVVD _
(VV_ `
)VV` a
)VVa b
{WW 
stringXX 
credentialsToHashXX 0
=XX1 2

secureUserXX3 =
.XX= >
ToStringXX> F
(XXF G
)XXG H
+XXI J
$strXXK N
+XXO P
	securePwdXXQ Z
.XXZ [
ToStringXX[ c
(XXc d
)XXd e
;XXe f
byteYY 
[YY 
]YY 
bufferYY %
=YY& '
EncodingYY( 0
.YY0 1
UTF8YY1 5
.YY5 6
GetBytesYY6 >
(YY> ?
stringYY? E
.YYE F
ConcatYYF L
(YYL M
saltYYM Q
,YYQ R
credentialsToHashYYS d
)YYd e
)YYe f
;YYf g
byteZZ 
[ZZ 
]ZZ 
hashedCredsAsBytesZZ 1
=ZZ2 3
sha512ZZ4 :
.ZZ: ;
ComputeHashZZ; F
(ZZF G
bufferZZG M
)ZZM N
;ZZN O
data[[ 
=[[ 
IO[[ !
.[[! "
ToHex[[" '
([[' (
hashedCredsAsBytes[[( :
)[[: ;
;[[; <
}\\ 
}]] 
}^^ 
}__ 	
string`` 
[`` 
]`` 
	dataArray`` 
=`` 
new``  
string``! '
[``' (
$num``( )
]``) *
;``* +
	dataArrayaa 
[aa 
$numaa 
]aa 
=aa 
dataaa 
;aa 7
+CWE315_Cleartext_Storage_in_Cookie__Web_66bbb 3
.bb3 4
GoodG2BSinkbb4 ?
(bb? @
	dataArraybb@ I
,bbJ K
reqbbL O
,bbO P
respbbQ U
)bbV W
;bbW X
}cc 
privateff 
staticff 
voidff 
GoodB2Gff 
(ff  
HttpRequestff  +
reqff, /
,ff/ 0
HttpResponseff1 =
respff> B
)ffB C
{gg 
stringhh 
datahh 
;hh 
usingii 
(ii 
SecureStringii 
	securePwdii %
=ii& '
newii( +
SecureStringii, 8
(ii8 9
)ii9 :
)ii: ;
{jj 	
usingkk 
(kk 
SecureStringkk 

secureUserkk  *
=kk+ ,
newkk- 0
SecureStringkk1 =
(kk= >
)kk> ?
)kk? @
{ll 
formm 
(mm 
intmm 
imm 
=mm 
$nummm 
;mm 
imm  !
<mm" #
$strmm$ /
.mm/ 0
Lengthmm0 6
;mm6 7
imm8 9
++mm9 ;
)mm; <
{nn 
	securePwdpp 
.pp 

AppendCharpp (
(pp( )
$strpp) 4
[pp4 5
ipp5 6
]pp6 7
)pp7 8
;pp8 9
}qq 
forrr 
(rr 
intrr 
irr 
=rr 
$numrr 
;rr 
irr  !
<rr" #
$strrr$ *
.rr* +
Lengthrr+ 1
;rr1 2
irr3 4
++rr4 6
)rr6 7
{ss 
	securePwduu 
.uu 

AppendCharuu (
(uu( )
$struu) /
[uu/ 0
iuu0 1
]uu1 2
)uu2 3
;uu3 4
}vv 
dataxx 
=xx 

secureUserxx !
.xx! "
ToStringxx" *
(xx* +
)xx+ ,
+xx- .
$strxx/ 2
+xx3 4
	securePwdxx5 >
.xx> ?
ToStringxx? G
(xxG H
)xxH I
;xxI J
}yy 
}zz 	
string{{ 
[{{ 
]{{ 
	dataArray{{ 
={{ 
new{{  
string{{! '
[{{' (
$num{{( )
]{{) *
;{{* +
	dataArray|| 
[|| 
$num|| 
]|| 
=|| 
data|| 
;|| 7
+CWE315_Cleartext_Storage_in_Cookie__Web_66b}} 3
.}}3 4
GoodB2GSink}}4 ?
(}}? @
	dataArray}}@ I
,}}J K
req}}L O
,}}O P
resp}}Q U
)}}V W
;}}W X
}~~ 
}ÄÄ 
}ÅÅ Ü
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_66b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_66b 1
{ 
public 

static 
void 
BadSink 
( 
string %
[% &
]& '
	dataArray( 1
,2 3
HttpRequest4 ?
req@ C
,C D
HttpResponseE Q
respR V
)V W
{ 
string   
data   
=   
	dataArray   
[    
$num    !
]  ! "
;  " #
resp## 
.## 
AppendCookie## 
(## 
new## 

HttpCookie## (
(##( )
$str##) /
,##/ 0
data##1 5
)##5 6
)##6 7
;##7 8
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
string))# )
[))) *
]))* +
	dataArray)), 5
,))6 7
HttpRequest))8 C
req))D G
,))G H
HttpResponse))I U
resp))V Z
)))Z [
{** 
string++ 
data++ 
=++ 
	dataArray++ 
[++  
$num++  !
]++! "
;++" #
resp.. 
... 
AppendCookie.. 
(.. 
new.. 

HttpCookie.. (
(..( )
$str..) /
,../ 0
data..1 5
)..5 6
)..6 7
;..7 8
}// 
public22 

static22 
void22 
GoodB2GSink22 "
(22" #
string22# )
[22) *
]22* +
	dataArray22, 5
,226 7
HttpRequest228 C
req22D G
,22G H
HttpResponse22I U
resp22V Z
)22Z [
{33 
string44 
data44 
=44 
	dataArray44 
[44  
$num44  !
]44! "
;44" #
{66 	
string77 
salt77 
=77 
$str77 (
;77( )
using88 
(88 '
SHA512CryptoServiceProvider88 .
sha51288/ 5
=886 7
new888 ;'
SHA512CryptoServiceProvider88< W
(88W X
)88X Y
)88Y Z
{99 
byte:: 
[:: 
]:: 
buffer:: 
=:: 
Encoding::  (
.::( )
UTF8::) -
.::- .
GetBytes::. 6
(::6 7
string::7 =
.::= >
Concat::> D
(::D E
salt::E I
,::I J
data::K O
)::O P
)::P Q
;::Q R
byte;; 
[;; 
];; 
hashedCredsAsBytes;; )
=;;* +
sha512;;, 2
.;;2 3
ComputeHash;;3 >
(;;> ?
buffer;;? E
);;E F
;;;F G
data<< 
=<< 
IO<< 
.<< 
ToHex<< 
(<<  
hashedCredsAsBytes<<  2
)<<2 3
;<<3 4
}== 
}>> 	
resp?? 
.?? 
AppendCookie?? 
(?? 
new?? 

HttpCookie?? (
(??( )
$str??) /
,??/ 0
data??1 5
)??5 6
)??6 7
;??7 8
}@@ 
}BB 
}CC ¬J
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_67a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_67a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

class   
	Container   
{!! 
public"" 
string"" 
containerOne"" "
;""" #
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
HttpRequest%% (
req%%) ,
,%%, -
HttpResponse%%. :
resp%%; ?
)%%? @
{&& 
string'' 
data'' 
;'' 
using(( 
((( 
SecureString(( 
	securePwd(( %
=((& '
new((( +
SecureString((, 8
(((8 9
)((9 :
)((: ;
{)) 	
using** 
(** 
SecureString** 

secureUser**  *
=**+ ,
new**- 0
SecureString**1 =
(**= >
)**> ?
)**? @
{++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ /
.,,/ 0
Length,,0 6
;,,6 7
i,,8 9
++,,9 ;
),,; <
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) 4
[//4 5
i//5 6
]//6 7
)//7 8
;//8 9
}00 
for11 
(11 
int11 
i11 
=11 
$num11 
;11 
i11  !
<11" #
$str11$ *
.11* +
Length11+ 1
;111 2
i113 4
++114 6
)116 7
{22 
	securePwd44 
.44 

AppendChar44 (
(44( )
$str44) /
[44/ 0
i440 1
]441 2
)442 3
;443 4
}55 
data77 
=77 

secureUser77 !
.77! "
ToString77" *
(77* +
)77+ ,
+77- .
$str77/ 2
+773 4
	securePwd775 >
.77> ?
ToString77? G
(77G H
)77H I
;77I J
}88 
}99 	
	Container:: 
dataContainer:: 
=::  !
new::" %
	Container::& /
(::/ 0
)::0 1
;::1 2
dataContainer;; 
.;; 
containerOne;; "
=;;# $
data;;% )
;;;) *7
+CWE315_Cleartext_Storage_in_Cookie__Web_67b<< 3
.<<3 4
BadSink<<4 ;
(<<; <
dataContainer<<< I
,<<J K
req<<L O
,<<O P
resp<<Q U
)<<V W
;<<W X
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
HttpRequest@@ )
req@@* -
,@@- .
HttpResponse@@/ ;
resp@@< @
)@@@ A
{AA 
GoodG2BBB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
GoodB2GCC 
(CC 
reqCC 
,CC 
respCC 
)CC 
;CC 
}DD 
privateGG 
staticGG 
voidGG 
GoodG2BGG 
(GG  
HttpRequestGG  +
reqGG, /
,GG/ 0
HttpResponseGG1 =
respGG> B
)GGB C
{HH 
stringII 
dataII 
;II 
usingJJ 
(JJ 
SecureStringJJ 
	securePwdJJ %
=JJ& '
newJJ( +
SecureStringJJ, 8
(JJ8 9
)JJ9 :
)JJ: ;
{KK 	
usingLL 
(LL 
SecureStringLL 

secureUserLL  *
=LL+ ,
newLL- 0
SecureStringLL1 =
(LL= >
)LL> ?
)LL? @
{MM 
forNN 
(NN 
intNN 
iNN 
=NN 
$numNN 
;NN 
iNN  !
<NN" #
$strNN$ /
.NN/ 0
LengthNN0 6
;NN6 7
iNN8 9
++NN9 ;
)NN; <
{OO 
	securePwdQQ 
.QQ 

AppendCharQQ (
(QQ( )
$strQQ) 4
[QQ4 5
iQQ5 6
]QQ6 7
)QQ7 8
;QQ8 9
}RR 
forSS 
(SS 
intSS 
iSS 
=SS 
$numSS 
;SS 
iSS  !
<SS" #
$strSS$ *
.SS* +
LengthSS+ 1
;SS1 2
iSS3 4
++SS4 6
)SS6 7
{TT 
	securePwdVV 
.VV 

AppendCharVV (
(VV( )
$strVV) /
[VV/ 0
iVV0 1
]VV1 2
)VV2 3
;VV3 4
}WW 
{YY 
stringZZ 
saltZZ 
=ZZ  !
$strZZ" 0
;ZZ0 1
using[[ 
([[ '
SHA512CryptoServiceProvider[[ 6
sha512[[7 =
=[[> ?
new[[@ C'
SHA512CryptoServiceProvider[[D _
([[_ `
)[[` a
)[[a b
{\\ 
string]] 
credentialsToHash]] 0
=]]1 2

secureUser]]3 =
.]]= >
ToString]]> F
(]]F G
)]]G H
+]]I J
$str]]K N
+]]O P
	securePwd]]Q Z
.]]Z [
ToString]][ c
(]]c d
)]]d e
;]]e f
byte^^ 
[^^ 
]^^ 
buffer^^ %
=^^& '
Encoding^^( 0
.^^0 1
UTF8^^1 5
.^^5 6
GetBytes^^6 >
(^^> ?
string^^? E
.^^E F
Concat^^F L
(^^L M
salt^^M Q
,^^Q R
credentialsToHash^^S d
)^^d e
)^^e f
;^^f g
byte__ 
[__ 
]__ 
hashedCredsAsBytes__ 1
=__2 3
sha512__4 :
.__: ;
ComputeHash__; F
(__F G
buffer__G M
)__M N
;__N O
data`` 
=`` 
IO`` !
.``! "
ToHex``" '
(``' (
hashedCredsAsBytes``( :
)``: ;
;``; <
}aa 
}bb 
}cc 
}dd 	
	Containeree 
dataContaineree 
=ee  !
newee" %
	Containeree& /
(ee/ 0
)ee0 1
;ee1 2
dataContainerff 
.ff 
containerOneff "
=ff# $
dataff% )
;ff) *7
+CWE315_Cleartext_Storage_in_Cookie__Web_67bgg 3
.gg3 4
GoodG2BSinkgg4 ?
(gg? @
dataContainergg@ M
,ggN O
reqggP S
,ggS T
respggU Y
)ggZ [
;gg[ \
}hh 
privatekk 
statickk 
voidkk 
GoodB2Gkk 
(kk  
HttpRequestkk  +
reqkk, /
,kk/ 0
HttpResponsekk1 =
respkk> B
)kkB C
{ll 
stringmm 
datamm 
;mm 
usingnn 
(nn 
SecureStringnn 
	securePwdnn %
=nn& '
newnn( +
SecureStringnn, 8
(nn8 9
)nn9 :
)nn: ;
{oo 	
usingpp 
(pp 
SecureStringpp 

secureUserpp  *
=pp+ ,
newpp- 0
SecureStringpp1 =
(pp= >
)pp> ?
)pp? @
{qq 
forrr 
(rr 
intrr 
irr 
=rr 
$numrr 
;rr 
irr  !
<rr" #
$strrr$ /
.rr/ 0
Lengthrr0 6
;rr6 7
irr8 9
++rr9 ;
)rr; <
{ss 
	securePwduu 
.uu 

AppendCharuu (
(uu( )
$struu) 4
[uu4 5
iuu5 6
]uu6 7
)uu7 8
;uu8 9
}vv 
forww 
(ww 
intww 
iww 
=ww 
$numww 
;ww 
iww  !
<ww" #
$strww$ *
.ww* +
Lengthww+ 1
;ww1 2
iww3 4
++ww4 6
)ww6 7
{xx 
	securePwdzz 
.zz 

AppendCharzz (
(zz( )
$strzz) /
[zz/ 0
izz0 1
]zz1 2
)zz2 3
;zz3 4
}{{ 
data}} 
=}} 

secureUser}} !
.}}! "
ToString}}" *
(}}* +
)}}+ ,
+}}- .
$str}}/ 2
+}}3 4
	securePwd}}5 >
.}}> ?
ToString}}? G
(}}G H
)}}H I
;}}I J
}~~ 
} 	
	Container
ÄÄ 
dataContainer
ÄÄ 
=
ÄÄ  !
new
ÄÄ" %
	Container
ÄÄ& /
(
ÄÄ/ 0
)
ÄÄ0 1
;
ÄÄ1 2
dataContainer
ÅÅ 
.
ÅÅ 
containerOne
ÅÅ "
=
ÅÅ# $
data
ÅÅ% )
;
ÅÅ) *9
+CWE315_Cleartext_Storage_in_Cookie__Web_67b
ÇÇ 3
.
ÇÇ3 4
GoodB2GSink
ÇÇ4 ?
(
ÇÇ? @
dataContainer
ÇÇ@ M
,
ÇÇN O
req
ÇÇP S
,
ÇÇS T
resp
ÇÇU Y
)
ÇÇZ [
;
ÇÇ[ \
}
ÉÉ 
}ÖÖ 
}ÜÜ ü
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_67b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_67b 1
{ 
public 

static 
void 
BadSink 
( 7
+CWE315_Cleartext_Storage_in_Cookie__Web_67a J
.J K
	ContainerK T
dataContainerU b
,c d
HttpRequeste p
reqq t
,t u
HttpResponse	v Ç
resp
É á
)
á à
{ 
string   
data   
=   
dataContainer   #
.  # $
containerOne  $ 0
;  0 1
resp## 
.## 
AppendCookie## 
(## 
new## 

HttpCookie## (
(##( )
$str##) /
,##/ 0
data##1 5
)##5 6
)##6 7
;##7 8
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #7
+CWE315_Cleartext_Storage_in_Cookie__Web_67a))# N
.))N O
	Container))O X
dataContainer))Y f
,))g h
HttpRequest))i t
req))u x
,))x y
HttpResponse	))z Ü
resp
))á ã
)
))ã å
{** 
string++ 
data++ 
=++ 
dataContainer++ #
.++# $
containerOne++$ 0
;++0 1
resp.. 
... 
AppendCookie.. 
(.. 
new.. 

HttpCookie.. (
(..( )
$str..) /
,../ 0
data..1 5
)..5 6
)..6 7
;..7 8
}// 
public22 

static22 
void22 
GoodB2GSink22 "
(22" #7
+CWE315_Cleartext_Storage_in_Cookie__Web_67a22# N
.22N O
	Container22O X
dataContainer22Y f
,22g h
HttpRequest22i t
req22u x
,22x y
HttpResponse	22z Ü
resp
22á ã
)
22ã å
{33 
string44 
data44 
=44 
dataContainer44 #
.44# $
containerOne44$ 0
;440 1
{66 	
string77 
salt77 
=77 
$str77 (
;77( )
using88 
(88 '
SHA512CryptoServiceProvider88 .
sha51288/ 5
=886 7
new888 ;'
SHA512CryptoServiceProvider88< W
(88W X
)88X Y
)88Y Z
{99 
byte:: 
[:: 
]:: 
buffer:: 
=:: 
Encoding::  (
.::( )
UTF8::) -
.::- .
GetBytes::. 6
(::6 7
string::7 =
.::= >
Concat::> D
(::D E
salt::E I
,::I J
data::K O
)::O P
)::P Q
;::Q R
byte;; 
[;; 
];; 
hashedCredsAsBytes;; )
=;;* +
sha512;;, 2
.;;2 3
ComputeHash;;3 >
(;;> ?
buffer;;? E
);;E F
;;;F G
data<< 
=<< 
IO<< 
.<< 
ToHex<< 
(<<  
hashedCredsAsBytes<<  2
)<<2 3
;<<3 4
}== 
}>> 	
resp?? 
.?? 
AppendCookie?? 
(?? 
new?? 

HttpCookie?? (
(??( )
$str??) /
,??/ 0
data??1 5
)??5 6
)??6 7
;??7 8
}@@ 
}BB 
}CC ˇ@
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_68a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_68a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

static   
string   
data   
;   
public"" 

override"" 
void"" 
Bad"" 
("" 
HttpRequest"" (
req"") ,
,"", -
HttpResponse"". :
resp""; ?
)""? @
{## 
using$$ 
($$ 
SecureString$$ 
	securePwd$$ %
=$$& '
new$$( +
SecureString$$, 8
($$8 9
)$$9 :
)$$: ;
{%% 	
using&& 
(&& 
SecureString&& 

secureUser&&  *
=&&+ ,
new&&- 0
SecureString&&1 =
(&&= >
)&&> ?
)&&? @
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
for-- 
(-- 
int-- 
i-- 
=-- 
$num-- 
;-- 
i--  !
<--" #
$str--$ *
.--* +
Length--+ 1
;--1 2
i--3 4
++--4 6
)--6 7
{.. 
	securePwd00 
.00 

AppendChar00 (
(00( )
$str00) /
[00/ 0
i000 1
]001 2
)002 3
;003 4
}11 
data33 
=33 

secureUser33 !
.33! "
ToString33" *
(33* +
)33+ ,
+33- .
$str33/ 2
+333 4
	securePwd335 >
.33> ?
ToString33? G
(33G H
)33H I
;33I J
}44 
}55 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_68b66 3
.663 4
BadSink664 ;
(66; <
req66< ?
,66? @
resp66A E
)66E F
;66F G
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
HttpRequest:: )
req::* -
,::- .
HttpResponse::/ ;
resp::< @
)::@ A
{;; 
GoodG2B<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
GoodB2G== 
(== 
req== 
,== 
resp== 
)== 
;== 
}>> 
privateAA 
staticAA 
voidAA 
GoodG2BAA 
(AA  
HttpRequestAA  +
reqAA, /
,AA/ 0
HttpResponseAA1 =
respAA> B
)AAB C
{BB 
usingCC 
(CC 
SecureStringCC 
	securePwdCC %
=CC& '
newCC( +
SecureStringCC, 8
(CC8 9
)CC9 :
)CC: ;
{DD 	
usingEE 
(EE 
SecureStringEE 

secureUserEE  *
=EE+ ,
newEE- 0
SecureStringEE1 =
(EE= >
)EE> ?
)EE? @
{FF 
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG  !
<GG" #
$strGG$ /
.GG/ 0
LengthGG0 6
;GG6 7
iGG8 9
++GG9 ;
)GG; <
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ (
(JJ( )
$strJJ) 4
[JJ4 5
iJJ5 6
]JJ6 7
)JJ7 8
;JJ8 9
}KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ *
.LL* +
LengthLL+ 1
;LL1 2
iLL3 4
++LL4 6
)LL6 7
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) /
[OO/ 0
iOO0 1
]OO1 2
)OO2 3
;OO3 4
}PP 
{RR 
stringSS 
saltSS 
=SS  !
$strSS" 0
;SS0 1
usingTT 
(TT '
SHA512CryptoServiceProviderTT 6
sha512TT7 =
=TT> ?
newTT@ C'
SHA512CryptoServiceProviderTTD _
(TT_ `
)TT` a
)TTa b
{UU 
stringVV 
credentialsToHashVV 0
=VV1 2

secureUserVV3 =
.VV= >
ToStringVV> F
(VVF G
)VVG H
+VVI J
$strVVK N
+VVO P
	securePwdVVQ Z
.VVZ [
ToStringVV[ c
(VVc d
)VVd e
;VVe f
byteWW 
[WW 
]WW 
bufferWW %
=WW& '
EncodingWW( 0
.WW0 1
UTF8WW1 5
.WW5 6
GetBytesWW6 >
(WW> ?
stringWW? E
.WWE F
ConcatWWF L
(WWL M
saltWWM Q
,WWQ R
credentialsToHashWWS d
)WWd e
)WWe f
;WWf g
byteXX 
[XX 
]XX 
hashedCredsAsBytesXX 1
=XX2 3
sha512XX4 :
.XX: ;
ComputeHashXX; F
(XXF G
bufferXXG M
)XXM N
;XXN O
dataYY 
=YY 
IOYY !
.YY! "
ToHexYY" '
(YY' (
hashedCredsAsBytesYY( :
)YY: ;
;YY; <
}ZZ 
}[[ 
}\\ 
}]] 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_68b^^ 3
.^^3 4
GoodG2BSink^^4 ?
(^^? @
req^^@ C
,^^C D
resp^^E I
)^^I J
;^^J K
}__ 
privatebb 
staticbb 
voidbb 
GoodB2Gbb 
(bb  
HttpRequestbb  +
reqbb, /
,bb/ 0
HttpResponsebb1 =
respbb> B
)bbB C
{cc 
usingdd 
(dd 
SecureStringdd 
	securePwddd %
=dd& '
newdd( +
SecureStringdd, 8
(dd8 9
)dd9 :
)dd: ;
{ee 	
usingff 
(ff 
SecureStringff 

secureUserff  *
=ff+ ,
newff- 0
SecureStringff1 =
(ff= >
)ff> ?
)ff? @
{gg 
forhh 
(hh 
inthh 
ihh 
=hh 
$numhh 
;hh 
ihh  !
<hh" #
$strhh$ /
.hh/ 0
Lengthhh0 6
;hh6 7
ihh8 9
++hh9 ;
)hh; <
{ii 
	securePwdkk 
.kk 

AppendCharkk (
(kk( )
$strkk) 4
[kk4 5
ikk5 6
]kk6 7
)kk7 8
;kk8 9
}ll 
formm 
(mm 
intmm 
imm 
=mm 
$nummm 
;mm 
imm  !
<mm" #
$strmm$ *
.mm* +
Lengthmm+ 1
;mm1 2
imm3 4
++mm4 6
)mm6 7
{nn 
	securePwdpp 
.pp 

AppendCharpp (
(pp( )
$strpp) /
[pp/ 0
ipp0 1
]pp1 2
)pp2 3
;pp3 4
}qq 
datass 
=ss 

secureUserss !
.ss! "
ToStringss" *
(ss* +
)ss+ ,
+ss- .
$strss/ 2
+ss3 4
	securePwdss5 >
.ss> ?
ToStringss? G
(ssG H
)ssH I
;ssI J
}tt 
}uu 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_68bvv 3
.vv3 4
GoodB2GSinkvv4 ?
(vv? @
reqvv@ C
,vvC D
respvvE I
)vvI J
;vvJ K
}ww 
}yy 
}zz ∑
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_68b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_68b 1
{ 
public 

static 
void 
BadSink 
( 
HttpRequest *
req+ .
,. /
HttpResponse0 <
resp= A
)A B
{ 
string   
data   
=   7
+CWE315_Cleartext_Storage_in_Cookie__Web_68a   A
.  A B
data  B F
;  F G
resp## 
.## 
AppendCookie## 
(## 
new## 

HttpCookie## (
(##( )
$str##) /
,##/ 0
data##1 5
)##5 6
)##6 7
;##7 8
}$$ 
public)) 

static)) 
void)) 
GoodG2BSink)) "
())" #
HttpRequest))# .
req))/ 2
,))2 3
HttpResponse))4 @
resp))A E
)))E F
{** 
string++ 
data++ 
=++ 7
+CWE315_Cleartext_Storage_in_Cookie__Web_68a++ A
.++A B
data++B F
;++F G
resp.. 
... 
AppendCookie.. 
(.. 
new.. 

HttpCookie.. (
(..( )
$str..) /
,../ 0
data..1 5
)..5 6
)..6 7
;..7 8
}// 
public22 

static22 
void22 
GoodB2GSink22 "
(22" #
HttpRequest22# .
req22/ 2
,222 3
HttpResponse224 @
resp22A E
)22E F
{33 
string44 
data44 
=44 7
+CWE315_Cleartext_Storage_in_Cookie__Web_68a44 A
.44A B
data44B F
;44F G
{66 	
string77 
salt77 
=77 
$str77 (
;77( )
using88 
(88 '
SHA512CryptoServiceProvider88 .
sha51288/ 5
=886 7
new888 ;'
SHA512CryptoServiceProvider88< W
(88W X
)88X Y
)88Y Z
{99 
byte:: 
[:: 
]:: 
buffer:: 
=:: 
Encoding::  (
.::( )
UTF8::) -
.::- .
GetBytes::. 6
(::6 7
string::7 =
.::= >
Concat::> D
(::D E
salt::E I
,::I J
data::K O
)::O P
)::P Q
;::Q R
byte;; 
[;; 
];; 
hashedCredsAsBytes;; )
=;;* +
sha512;;, 2
.;;2 3
ComputeHash;;3 >
(;;> ?
buffer;;? E
);;E F
;;;F G
data<< 
=<< 
IO<< 
.<< 
ToHex<< 
(<<  
hashedCredsAsBytes<<  2
)<<2 3
;<<3 4
}== 
}>> 	
resp?? 
.?? 
AppendCookie?? 
(?? 
new?? 

HttpCookie?? (
(??( )
$str??) /
,??/ 0
data??1 5
)??5 6
)??6 7
;??7 8
}@@ 
}BB 
}CC ∫C
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_71a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_71a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_71b55 3
.553 4
BadSink554 ;
(55; <
(55< =
Object55= C
)55C D
data55D H
,55I J
req55K N
,55N O
resp55P T
)55U V
;55V W
}66 
public99 

override99 
void99 
Good99 
(99 
HttpRequest99 )
req99* -
,99- .
HttpResponse99/ ;
resp99< @
)99@ A
{:: 
GoodG2B;; 
(;; 
req;; 
,;; 
resp;; 
);; 
;;; 
GoodB2G<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
}== 
private@@ 
static@@ 
void@@ 
GoodG2B@@ 
(@@  
HttpRequest@@  +
req@@, /
,@@/ 0
HttpResponse@@1 =
resp@@> B
)@@B C
{AA 
stringBB 
dataBB 
;BB 
usingCC 
(CC 
SecureStringCC 
	securePwdCC %
=CC& '
newCC( +
SecureStringCC, 8
(CC8 9
)CC9 :
)CC: ;
{DD 	
usingEE 
(EE 
SecureStringEE 

secureUserEE  *
=EE+ ,
newEE- 0
SecureStringEE1 =
(EE= >
)EE> ?
)EE? @
{FF 
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG  !
<GG" #
$strGG$ /
.GG/ 0
LengthGG0 6
;GG6 7
iGG8 9
++GG9 ;
)GG; <
{HH 
	securePwdJJ 
.JJ 

AppendCharJJ (
(JJ( )
$strJJ) 4
[JJ4 5
iJJ5 6
]JJ6 7
)JJ7 8
;JJ8 9
}KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ *
.LL* +
LengthLL+ 1
;LL1 2
iLL3 4
++LL4 6
)LL6 7
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) /
[OO/ 0
iOO0 1
]OO1 2
)OO2 3
;OO3 4
}PP 
{RR 
stringSS 
saltSS 
=SS  !
$strSS" 0
;SS0 1
usingTT 
(TT '
SHA512CryptoServiceProviderTT 6
sha512TT7 =
=TT> ?
newTT@ C'
SHA512CryptoServiceProviderTTD _
(TT_ `
)TT` a
)TTa b
{UU 
stringVV 
credentialsToHashVV 0
=VV1 2

secureUserVV3 =
.VV= >
ToStringVV> F
(VVF G
)VVG H
+VVI J
$strVVK N
+VVO P
	securePwdVVQ Z
.VVZ [
ToStringVV[ c
(VVc d
)VVd e
;VVe f
byteWW 
[WW 
]WW 
bufferWW %
=WW& '
EncodingWW( 0
.WW0 1
UTF8WW1 5
.WW5 6
GetBytesWW6 >
(WW> ?
stringWW? E
.WWE F
ConcatWWF L
(WWL M
saltWWM Q
,WWQ R
credentialsToHashWWS d
)WWd e
)WWe f
;WWf g
byteXX 
[XX 
]XX 
hashedCredsAsBytesXX 1
=XX2 3
sha512XX4 :
.XX: ;
ComputeHashXX; F
(XXF G
bufferXXG M
)XXM N
;XXN O
dataYY 
=YY 
IOYY !
.YY! "
ToHexYY" '
(YY' (
hashedCredsAsBytesYY( :
)YY: ;
;YY; <
}ZZ 
}[[ 
}\\ 
}]] 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_71b^^ 3
.^^3 4
GoodG2BSink^^4 ?
(^^? @
(^^@ A
Object^^A G
)^^G H
data^^H L
,^^M N
req^^O R
,^^R S
resp^^T X
)^^Y Z
;^^Z [
}__ 
privatebb 
staticbb 
voidbb 
GoodB2Gbb 
(bb  
HttpRequestbb  +
reqbb, /
,bb/ 0
HttpResponsebb1 =
respbb> B
)bbB C
{cc 
stringdd 
datadd 
;dd 
usingee 
(ee 
SecureStringee 
	securePwdee %
=ee& '
newee( +
SecureStringee, 8
(ee8 9
)ee9 :
)ee: ;
{ff 	
usinggg 
(gg 
SecureStringgg 

secureUsergg  *
=gg+ ,
newgg- 0
SecureStringgg1 =
(gg= >
)gg> ?
)gg? @
{hh 
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii  !
<ii" #
$strii$ /
.ii/ 0
Lengthii0 6
;ii6 7
iii8 9
++ii9 ;
)ii; <
{jj 
	securePwdll 
.ll 

AppendCharll (
(ll( )
$strll) 4
[ll4 5
ill5 6
]ll6 7
)ll7 8
;ll8 9
}mm 
fornn 
(nn 
intnn 
inn 
=nn 
$numnn 
;nn 
inn  !
<nn" #
$strnn$ *
.nn* +
Lengthnn+ 1
;nn1 2
inn3 4
++nn4 6
)nn6 7
{oo 
	securePwdqq 
.qq 

AppendCharqq (
(qq( )
$strqq) /
[qq/ 0
iqq0 1
]qq1 2
)qq2 3
;qq3 4
}rr 
datatt 
=tt 

secureUsertt !
.tt! "
ToStringtt" *
(tt* +
)tt+ ,
+tt- .
$strtt/ 2
+tt3 4
	securePwdtt5 >
.tt> ?
ToStringtt? G
(ttG H
)ttH I
;ttI J
}uu 
}vv 	7
+CWE315_Cleartext_Storage_in_Cookie__Web_71bww 3
.ww3 4
GoodB2GSinkww4 ?
(ww? @
(ww@ A
ObjectwwA G
)wwG H
datawwH L
,wwM N
reqwwO R
,wwR S
respwwT X
)wwY Z
;wwZ [
}xx 
}zz 
}{{ ∏
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_71b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_71b 1
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
,1 2
HttpRequest3 >
req? B
,B C
HttpResponseD P
respQ U
)U V
{   
string!! 
data!! 
=!! 
(!! 
string!! 
)!! 

dataObject!! (
;!!( )
resp$$ 
.$$ 
AppendCookie$$ 
($$ 
new$$ 

HttpCookie$$ (
($$( )
$str$$) /
,$$/ 0
data$$1 5
)$$5 6
)$$6 7
;$$7 8
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
Object**# )

dataObject*** 4
,**5 6
HttpRequest**7 B
req**C F
,**F G
HttpResponse**H T
resp**U Y
)**Y Z
{++ 
string,, 
data,, 
=,, 
(,, 
string,, 
),, 

dataObject,, (
;,,( )
resp// 
.// 
AppendCookie// 
(// 
new// 

HttpCookie// (
(//( )
$str//) /
,/// 0
data//1 5
)//5 6
)//6 7
;//7 8
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
Object33# )

dataObject33* 4
,335 6
HttpRequest337 B
req33C F
,33F G
HttpResponse33H T
resp33U Y
)33Y Z
{44 
string55 
data55 
=55 
(55 
string55 
)55 

dataObject55 (
;55( )
{77 	
string88 
salt88 
=88 
$str88 (
;88( )
using99 
(99 '
SHA512CryptoServiceProvider99 .
sha51299/ 5
=996 7
new998 ;'
SHA512CryptoServiceProvider99< W
(99W X
)99X Y
)99Y Z
{:: 
byte;; 
[;; 
];; 
buffer;; 
=;; 
Encoding;;  (
.;;( )
UTF8;;) -
.;;- .
GetBytes;;. 6
(;;6 7
string;;7 =
.;;= >
Concat;;> D
(;;D E
salt;;E I
,;;I J
data;;K O
);;O P
);;P Q
;;;Q R
byte<< 
[<< 
]<< 
hashedCredsAsBytes<< )
=<<* +
sha512<<, 2
.<<2 3
ComputeHash<<3 >
(<<> ?
buffer<<? E
)<<E F
;<<F G
data== 
=== 
IO== 
.== 
ToHex== 
(==  
hashedCredsAsBytes==  2
)==2 3
;==3 4
}>> 
}?? 	
resp@@ 
.@@ 
AppendCookie@@ 
(@@ 
new@@ 

HttpCookie@@ (
(@@( )
$str@@) /
,@@/ 0
data@@1 5
)@@5 6
)@@6 7
;@@7 8
}AA 
}CC 
}DD éR
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_72a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_72a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
using$$ 
($$ 
SecureString$$ 
	securePwd$$ %
=$$& '
new$$( +
SecureString$$, 8
($$8 9
)$$9 :
)$$: ;
{%% 	
using&& 
(&& 
SecureString&& 

secureUser&&  *
=&&+ ,
new&&- 0
SecureString&&1 =
(&&= >
)&&> ?
)&&? @
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
for-- 
(-- 
int-- 
i-- 
=-- 
$num-- 
;-- 
i--  !
<--" #
$str--$ *
.--* +
Length--+ 1
;--1 2
i--3 4
++--4 6
)--6 7
{.. 
	securePwd00 
.00 

AppendChar00 (
(00( )
$str00) /
[00/ 0
i000 1
]001 2
)002 3
;003 4
}11 
data33 
=33 

secureUser33 !
.33! "
ToString33" *
(33* +
)33+ ,
+33- .
$str33/ 2
+333 4
	securePwd335 >
.33> ?
ToString33? G
(33G H
)33H I
;33I J
}44 
}55 	
	Hashtable66 
dataHashtable66 
=66  !
new66" %
	Hashtable66& /
(66/ 0
$num660 1
)661 2
;662 3
dataHashtable77 
.77 
Add77 
(77 
$num77 
,77 
data77 !
)77! "
;77" #
dataHashtable88 
.88 
Add88 
(88 
$num88 
,88 
data88 !
)88! "
;88" #
dataHashtable99 
.99 
Add99 
(99 
$num99 
,99 
data99 !
)99! "
;99" #7
+CWE315_Cleartext_Storage_in_Cookie__Web_72b:: 3
.::3 4
BadSink::4 ;
(::; <
dataHashtable::< I
,::J K
req::L O
,::O P
resp::Q U
)::V W
;::W X
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
HttpRequest>> )
req>>* -
,>>- .
HttpResponse>>/ ;
resp>>< @
)>>@ A
{?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
HttpRequestEE  +
reqEE, /
,EE/ 0
HttpResponseEE1 =
respEE> B
)EEB C
{FF 
stringGG 
dataGG 
;GG 
usingHH 
(HH 
SecureStringHH 
	securePwdHH %
=HH& '
newHH( +
SecureStringHH, 8
(HH8 9
)HH9 :
)HH: ;
{II 	
usingJJ 
(JJ 
SecureStringJJ 

secureUserJJ  *
=JJ+ ,
newJJ- 0
SecureStringJJ1 =
(JJ= >
)JJ> ?
)JJ? @
{KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ /
.LL/ 0
LengthLL0 6
;LL6 7
iLL8 9
++LL9 ;
)LL; <
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) 4
[OO4 5
iOO5 6
]OO6 7
)OO7 8
;OO8 9
}PP 
forQQ 
(QQ 
intQQ 
iQQ 
=QQ 
$numQQ 
;QQ 
iQQ  !
<QQ" #
$strQQ$ *
.QQ* +
LengthQQ+ 1
;QQ1 2
iQQ3 4
++QQ4 6
)QQ6 7
{RR 
	securePwdTT 
.TT 

AppendCharTT (
(TT( )
$strTT) /
[TT/ 0
iTT0 1
]TT1 2
)TT2 3
;TT3 4
}UU 
{WW 
stringXX 
saltXX 
=XX  !
$strXX" 0
;XX0 1
usingYY 
(YY '
SHA512CryptoServiceProviderYY 6
sha512YY7 =
=YY> ?
newYY@ C'
SHA512CryptoServiceProviderYYD _
(YY_ `
)YY` a
)YYa b
{ZZ 
string[[ 
credentialsToHash[[ 0
=[[1 2

secureUser[[3 =
.[[= >
ToString[[> F
([[F G
)[[G H
+[[I J
$str[[K N
+[[O P
	securePwd[[Q Z
.[[Z [
ToString[[[ c
([[c d
)[[d e
;[[e f
byte\\ 
[\\ 
]\\ 
buffer\\ %
=\\& '
Encoding\\( 0
.\\0 1
UTF8\\1 5
.\\5 6
GetBytes\\6 >
(\\> ?
string\\? E
.\\E F
Concat\\F L
(\\L M
salt\\M Q
,\\Q R
credentialsToHash\\S d
)\\d e
)\\e f
;\\f g
byte]] 
[]] 
]]] 
hashedCredsAsBytes]] 1
=]]2 3
sha512]]4 :
.]]: ;
ComputeHash]]; F
(]]F G
buffer]]G M
)]]M N
;]]N O
data^^ 
=^^ 
IO^^ !
.^^! "
ToHex^^" '
(^^' (
hashedCredsAsBytes^^( :
)^^: ;
;^^; <
}__ 
}`` 
}aa 
}bb 	
	Hashtablecc 
dataHashtablecc 
=cc  !
newcc" %
	Hashtablecc& /
(cc/ 0
$numcc0 1
)cc1 2
;cc2 3
dataHashtabledd 
.dd 
Adddd 
(dd 
$numdd 
,dd 
datadd !
)dd! "
;dd" #
dataHashtableee 
.ee 
Addee 
(ee 
$numee 
,ee 
dataee !
)ee! "
;ee" #
dataHashtableff 
.ff 
Addff 
(ff 
$numff 
,ff 
dataff !
)ff! "
;ff" #7
+CWE315_Cleartext_Storage_in_Cookie__Web_72bgg 3
.gg3 4
GoodG2BSinkgg4 ?
(gg? @
dataHashtablegg@ M
,ggN O
reqggP S
,ggS T
respggU Y
)ggZ [
;gg[ \
}hh 
privatekk 
statickk 
voidkk 
GoodB2Gkk 
(kk  
HttpRequestkk  +
reqkk, /
,kk/ 0
HttpResponsekk1 =
respkk> B
)kkB C
{ll 
stringmm 
datamm 
;mm 
usingnn 
(nn 
SecureStringnn 
	securePwdnn %
=nn& '
newnn( +
SecureStringnn, 8
(nn8 9
)nn9 :
)nn: ;
{oo 	
usingpp 
(pp 
SecureStringpp 

secureUserpp  *
=pp+ ,
newpp- 0
SecureStringpp1 =
(pp= >
)pp> ?
)pp? @
{qq 
forrr 
(rr 
intrr 
irr 
=rr 
$numrr 
;rr 
irr  !
<rr" #
$strrr$ /
.rr/ 0
Lengthrr0 6
;rr6 7
irr8 9
++rr9 ;
)rr; <
{ss 
	securePwduu 
.uu 

AppendCharuu (
(uu( )
$struu) 4
[uu4 5
iuu5 6
]uu6 7
)uu7 8
;uu8 9
}vv 
forww 
(ww 
intww 
iww 
=ww 
$numww 
;ww 
iww  !
<ww" #
$strww$ *
.ww* +
Lengthww+ 1
;ww1 2
iww3 4
++ww4 6
)ww6 7
{xx 
	securePwdzz 
.zz 

AppendCharzz (
(zz( )
$strzz) /
[zz/ 0
izz0 1
]zz1 2
)zz2 3
;zz3 4
}{{ 
data}} 
=}} 

secureUser}} !
.}}! "
ToString}}" *
(}}* +
)}}+ ,
+}}- .
$str}}/ 2
+}}3 4
	securePwd}}5 >
.}}> ?
ToString}}? G
(}}G H
)}}H I
;}}I J
}~~ 
} 	
	Hashtable
ÄÄ 
dataHashtable
ÄÄ 
=
ÄÄ  !
new
ÄÄ" %
	Hashtable
ÄÄ& /
(
ÄÄ/ 0
$num
ÄÄ0 1
)
ÄÄ1 2
;
ÄÄ2 3
dataHashtable
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
data
ÅÅ !
)
ÅÅ! "
;
ÅÅ" #
dataHashtable
ÇÇ 
.
ÇÇ 
Add
ÇÇ 
(
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
data
ÇÇ !
)
ÇÇ! "
;
ÇÇ" #
dataHashtable
ÉÉ 
.
ÉÉ 
Add
ÉÉ 
(
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
data
ÉÉ !
)
ÉÉ! "
;
ÉÉ" #9
+CWE315_Cleartext_Storage_in_Cookie__Web_72b
ÑÑ 3
.
ÑÑ3 4
GoodB2GSink
ÑÑ4 ?
(
ÑÑ? @
dataHashtable
ÑÑ@ M
,
ÑÑN O
req
ÑÑP S
,
ÑÑS T
resp
ÑÑU Y
)
ÑÑZ [
;
ÑÑ[ \
}
ÖÖ 
}áá 
}àà „
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_72b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_72b 1
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
,7 8
HttpRequest9 D
reqE H
,H I
HttpResponseJ V
respW [
)[ \
{   
string!! 
data!! 
=!! 
(!! 
string!! 
)!! 
dataHashtable!! ,
[!!, -
$num!!- .
]!!. /
;!!/ 0
resp$$ 
.$$ 
AppendCookie$$ 
($$ 
new$$ 

HttpCookie$$ (
($$( )
$str$$) /
,$$/ 0
data$$1 5
)$$5 6
)$$6 7
;$$7 8
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #
	Hashtable**# ,
dataHashtable**- :
,**; <
HttpRequest**= H
req**I L
,**L M
HttpResponse**N Z
resp**[ _
)**_ `
{++ 
string,, 
data,, 
=,, 
(,, 
string,, 
),, 
dataHashtable,, ,
[,,, -
$num,,- .
],,. /
;,,/ 0
resp// 
.// 
AppendCookie// 
(// 
new// 

HttpCookie// (
(//( )
$str//) /
,/// 0
data//1 5
)//5 6
)//6 7
;//7 8
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #
	Hashtable33# ,
dataHashtable33- :
,33; <
HttpRequest33= H
req33I L
,33L M
HttpResponse33N Z
resp33[ _
)33_ `
{44 
string55 
data55 
=55 
(55 
string55 
)55 
dataHashtable55 ,
[55, -
$num55- .
]55. /
;55/ 0
{77 	
string88 
salt88 
=88 
$str88 (
;88( )
using99 
(99 '
SHA512CryptoServiceProvider99 .
sha51299/ 5
=996 7
new998 ;'
SHA512CryptoServiceProvider99< W
(99W X
)99X Y
)99Y Z
{:: 
byte;; 
[;; 
];; 
buffer;; 
=;; 
Encoding;;  (
.;;( )
UTF8;;) -
.;;- .
GetBytes;;. 6
(;;6 7
string;;7 =
.;;= >
Concat;;> D
(;;D E
salt;;E I
,;;I J
data;;K O
);;O P
);;P Q
;;;Q R
byte<< 
[<< 
]<< 
hashedCredsAsBytes<< )
=<<* +
sha512<<, 2
.<<2 3
ComputeHash<<3 >
(<<> ?
buffer<<? E
)<<E F
;<<F G
data== 
=== 
IO== 
.== 
ToHex== 
(==  
hashedCredsAsBytes==  2
)==2 3
;==3 4
}>> 
}?? 	
resp@@ 
.@@ 
AppendCookie@@ 
(@@ 
new@@ 

HttpCookie@@ (
(@@( )
$str@@) /
,@@/ 0
data@@1 5
)@@5 6
)@@6 7
;@@7 8
}AA 
}CC 
}DD íR
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_73a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_73a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
using$$ 
($$ 
SecureString$$ 
	securePwd$$ %
=$$& '
new$$( +
SecureString$$, 8
($$8 9
)$$9 :
)$$: ;
{%% 	
using&& 
(&& 
SecureString&& 

secureUser&&  *
=&&+ ,
new&&- 0
SecureString&&1 =
(&&= >
)&&> ?
)&&? @
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
for-- 
(-- 
int-- 
i-- 
=-- 
$num-- 
;-- 
i--  !
<--" #
$str--$ *
.--* +
Length--+ 1
;--1 2
i--3 4
++--4 6
)--6 7
{.. 
	securePwd00 
.00 

AppendChar00 (
(00( )
$str00) /
[00/ 0
i000 1
]001 2
)002 3
;003 4
}11 
data33 
=33 

secureUser33 !
.33! "
ToString33" *
(33* +
)33+ ,
+33- .
$str33/ 2
+333 4
	securePwd335 >
.33> ?
ToString33? G
(33G H
)33H I
;33I J
}44 
}55 	

LinkedList66 
<66 
string66 
>66 
dataLinkedList66 )
=66* +
new66, /

LinkedList660 :
<66: ;
string66; A
>66A B
(66B C
)66C D
;66D E
dataLinkedList77 
.77 
AddLast77 
(77 
data77 #
)77# $
;77$ %
dataLinkedList88 
.88 
AddLast88 
(88 
data88 #
)88# $
;88$ %
dataLinkedList99 
.99 
AddLast99 
(99 
data99 #
)99# $
;99$ %7
+CWE315_Cleartext_Storage_in_Cookie__Web_73b:: 3
.::3 4
BadSink::4 ;
(::; <
dataLinkedList::< J
,::K L
req::M P
,::P Q
resp::R V
)::W X
;::X Y
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
HttpRequest>> )
req>>* -
,>>- .
HttpResponse>>/ ;
resp>>< @
)>>@ A
{?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
HttpRequestEE  +
reqEE, /
,EE/ 0
HttpResponseEE1 =
respEE> B
)EEB C
{FF 
stringGG 
dataGG 
;GG 
usingHH 
(HH 
SecureStringHH 
	securePwdHH %
=HH& '
newHH( +
SecureStringHH, 8
(HH8 9
)HH9 :
)HH: ;
{II 	
usingJJ 
(JJ 
SecureStringJJ 

secureUserJJ  *
=JJ+ ,
newJJ- 0
SecureStringJJ1 =
(JJ= >
)JJ> ?
)JJ? @
{KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ /
.LL/ 0
LengthLL0 6
;LL6 7
iLL8 9
++LL9 ;
)LL; <
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) 4
[OO4 5
iOO5 6
]OO6 7
)OO7 8
;OO8 9
}PP 
forQQ 
(QQ 
intQQ 
iQQ 
=QQ 
$numQQ 
;QQ 
iQQ  !
<QQ" #
$strQQ$ *
.QQ* +
LengthQQ+ 1
;QQ1 2
iQQ3 4
++QQ4 6
)QQ6 7
{RR 
	securePwdTT 
.TT 

AppendCharTT (
(TT( )
$strTT) /
[TT/ 0
iTT0 1
]TT1 2
)TT2 3
;TT3 4
}UU 
{WW 
stringXX 
saltXX 
=XX  !
$strXX" 0
;XX0 1
usingYY 
(YY '
SHA512CryptoServiceProviderYY 6
sha512YY7 =
=YY> ?
newYY@ C'
SHA512CryptoServiceProviderYYD _
(YY_ `
)YY` a
)YYa b
{ZZ 
string[[ 
credentialsToHash[[ 0
=[[1 2

secureUser[[3 =
.[[= >
ToString[[> F
([[F G
)[[G H
+[[I J
$str[[K N
+[[O P
	securePwd[[Q Z
.[[Z [
ToString[[[ c
([[c d
)[[d e
;[[e f
byte\\ 
[\\ 
]\\ 
buffer\\ %
=\\& '
Encoding\\( 0
.\\0 1
UTF8\\1 5
.\\5 6
GetBytes\\6 >
(\\> ?
string\\? E
.\\E F
Concat\\F L
(\\L M
salt\\M Q
,\\Q R
credentialsToHash\\S d
)\\d e
)\\e f
;\\f g
byte]] 
[]] 
]]] 
hashedCredsAsBytes]] 1
=]]2 3
sha512]]4 :
.]]: ;
ComputeHash]]; F
(]]F G
buffer]]G M
)]]M N
;]]N O
data^^ 
=^^ 
IO^^ !
.^^! "
ToHex^^" '
(^^' (
hashedCredsAsBytes^^( :
)^^: ;
;^^; <
}__ 
}`` 
}aa 
}bb 	

LinkedListcc 
<cc 
stringcc 
>cc 
dataLinkedListcc )
=cc* +
newcc, /

LinkedListcc0 :
<cc: ;
stringcc; A
>ccA B
(ccB C
)ccC D
;ccD E
dataLinkedListdd 
.dd 
AddLastdd 
(dd 
datadd #
)dd# $
;dd$ %
dataLinkedListee 
.ee 
AddLastee 
(ee 
dataee #
)ee# $
;ee$ %
dataLinkedListff 
.ff 
AddLastff 
(ff 
dataff #
)ff# $
;ff$ %7
+CWE315_Cleartext_Storage_in_Cookie__Web_73bgg 3
.gg3 4
GoodG2BSinkgg4 ?
(gg? @
dataLinkedListgg@ N
,ggO P
reqggQ T
,ggT U
respggV Z
)gg[ \
;gg\ ]
}hh 
privatekk 
statickk 
voidkk 
GoodB2Gkk 
(kk  
HttpRequestkk  +
reqkk, /
,kk/ 0
HttpResponsekk1 =
respkk> B
)kkB C
{ll 
stringmm 
datamm 
;mm 
usingnn 
(nn 
SecureStringnn 
	securePwdnn %
=nn& '
newnn( +
SecureStringnn, 8
(nn8 9
)nn9 :
)nn: ;
{oo 	
usingpp 
(pp 
SecureStringpp 

secureUserpp  *
=pp+ ,
newpp- 0
SecureStringpp1 =
(pp= >
)pp> ?
)pp? @
{qq 
forrr 
(rr 
intrr 
irr 
=rr 
$numrr 
;rr 
irr  !
<rr" #
$strrr$ /
.rr/ 0
Lengthrr0 6
;rr6 7
irr8 9
++rr9 ;
)rr; <
{ss 
	securePwduu 
.uu 

AppendCharuu (
(uu( )
$struu) 4
[uu4 5
iuu5 6
]uu6 7
)uu7 8
;uu8 9
}vv 
forww 
(ww 
intww 
iww 
=ww 
$numww 
;ww 
iww  !
<ww" #
$strww$ *
.ww* +
Lengthww+ 1
;ww1 2
iww3 4
++ww4 6
)ww6 7
{xx 
	securePwdzz 
.zz 

AppendCharzz (
(zz( )
$strzz) /
[zz/ 0
izz0 1
]zz1 2
)zz2 3
;zz3 4
}{{ 
data}} 
=}} 

secureUser}} !
.}}! "
ToString}}" *
(}}* +
)}}+ ,
+}}- .
$str}}/ 2
+}}3 4
	securePwd}}5 >
.}}> ?
ToString}}? G
(}}G H
)}}H I
;}}I J
}~~ 
} 	

LinkedList
ÄÄ 
<
ÄÄ 
string
ÄÄ 
>
ÄÄ 
dataLinkedList
ÄÄ )
=
ÄÄ* +
new
ÄÄ, /

LinkedList
ÄÄ0 :
<
ÄÄ: ;
string
ÄÄ; A
>
ÄÄA B
(
ÄÄB C
)
ÄÄC D
;
ÄÄD E
dataLinkedList
ÅÅ 
.
ÅÅ 
AddLast
ÅÅ 
(
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
dataLinkedList
ÇÇ 
.
ÇÇ 
AddLast
ÇÇ 
(
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
dataLinkedList
ÉÉ 
.
ÉÉ 
AddLast
ÉÉ 
(
ÉÉ 
data
ÉÉ #
)
ÉÉ# $
;
ÉÉ$ %9
+CWE315_Cleartext_Storage_in_Cookie__Web_73b
ÑÑ 3
.
ÑÑ3 4
GoodB2GSink
ÑÑ4 ?
(
ÑÑ? @
dataLinkedList
ÑÑ@ N
,
ÑÑO P
req
ÑÑQ T
,
ÑÑT U
resp
ÑÑV Z
)
ÑÑ[ \
;
ÑÑ\ ]
}
ÖÖ 
}áá 
}àà •
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_73b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_73b 1
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
string* 0
>0 1
dataLinkedList2 @
,A B
HttpRequestC N
reqO R
,R S
HttpResponseT `
respa e
)e f
{   
string!! 
data!! 
=!! 
dataLinkedList!! $
.!!$ %
Last!!% )
.!!) *
Value!!* /
;!!/ 0
resp$$ 
.$$ 
AppendCookie$$ 
($$ 
new$$ 

HttpCookie$$ (
($$( )
$str$$) /
,$$/ 0
data$$1 5
)$$5 6
)$$6 7
;$$7 8
}%% 
public** 

static** 
void** 
GoodG2BSink** "
(**" #

LinkedList**# -
<**- .
string**. 4
>**4 5
dataLinkedList**6 D
,**E F
HttpRequest**G R
req**S V
,**V W
HttpResponse**X d
resp**e i
)**i j
{++ 
string,, 
data,, 
=,, 
dataLinkedList,, $
.,,$ %
Last,,% )
.,,) *
Value,,* /
;,,/ 0
resp// 
.// 
AppendCookie// 
(// 
new// 

HttpCookie// (
(//( )
$str//) /
,/// 0
data//1 5
)//5 6
)//6 7
;//7 8
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #

LinkedList33# -
<33- .
string33. 4
>334 5
dataLinkedList336 D
,33E F
HttpRequest33G R
req33S V
,33V W
HttpResponse33X d
resp33e i
)33i j
{44 
string55 
data55 
=55 
dataLinkedList55 $
.55$ %
Last55% )
.55) *
Value55* /
;55/ 0
{77 	
string88 
salt88 
=88 
$str88 (
;88( )
using99 
(99 '
SHA512CryptoServiceProvider99 .
sha51299/ 5
=996 7
new998 ;'
SHA512CryptoServiceProvider99< W
(99W X
)99X Y
)99Y Z
{:: 
byte;; 
[;; 
];; 
buffer;; 
=;; 
Encoding;;  (
.;;( )
UTF8;;) -
.;;- .
GetBytes;;. 6
(;;6 7
string;;7 =
.;;= >
Concat;;> D
(;;D E
salt;;E I
,;;I J
data;;K O
);;O P
);;P Q
;;;Q R
byte<< 
[<< 
]<< 
hashedCredsAsBytes<< )
=<<* +
sha512<<, 2
.<<2 3
ComputeHash<<3 >
(<<> ?
buffer<<? E
)<<E F
;<<F G
data== 
=== 
IO== 
.== 
ToHex== 
(==  
hashedCredsAsBytes==  2
)==2 3
;==3 4
}>> 
}?? 	
resp@@ 
.@@ 
AppendCookie@@ 
(@@ 
new@@ 

HttpCookie@@ (
(@@( )
$str@@) /
,@@/ 0
data@@1 5
)@@5 6
)@@6 7
;@@7 8
}AA 
}CC 
}DD ÎU
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_74a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_74a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public!! 

override!! 
void!! 
Bad!! 
(!! 
HttpRequest!! (
req!!) ,
,!!, -
HttpResponse!!. :
resp!!; ?
)!!? @
{"" 
string## 
data## 
;## 
using$$ 
($$ 
SecureString$$ 
	securePwd$$ %
=$$& '
new$$( +
SecureString$$, 8
($$8 9
)$$9 :
)$$: ;
{%% 	
using&& 
(&& 
SecureString&& 

secureUser&&  *
=&&+ ,
new&&- 0
SecureString&&1 =
(&&= >
)&&> ?
)&&? @
{'' 
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i((  !
<((" #
$str(($ /
.((/ 0
Length((0 6
;((6 7
i((8 9
++((9 ;
)((; <
{)) 
	securePwd++ 
.++ 

AppendChar++ (
(++( )
$str++) 4
[++4 5
i++5 6
]++6 7
)++7 8
;++8 9
},, 
for-- 
(-- 
int-- 
i-- 
=-- 
$num-- 
;-- 
i--  !
<--" #
$str--$ *
.--* +
Length--+ 1
;--1 2
i--3 4
++--4 6
)--6 7
{.. 
	securePwd00 
.00 

AppendChar00 (
(00( )
$str00) /
[00/ 0
i000 1
]001 2
)002 3
;003 4
}11 
data33 
=33 

secureUser33 !
.33! "
ToString33" *
(33* +
)33+ ,
+33- .
$str33/ 2
+333 4
	securePwd335 >
.33> ?
ToString33? G
(33G H
)33H I
;33I J
}44 
}55 	

Dictionary66 
<66 
int66 
,66 
string66 
>66 
dataDictionary66 -
=66. /
new660 3

Dictionary664 >
<66> ?
int66? B
,66B C
string66C I
>66I J
(66J K
)66K L
;66L M
dataDictionary77 
.77 
Add77 
(77 
$num77 
,77 
data77 "
)77" #
;77# $
dataDictionary88 
.88 
Add88 
(88 
$num88 
,88 
data88 "
)88" #
;88# $
dataDictionary99 
.99 
Add99 
(99 
$num99 
,99 
data99 "
)99" #
;99# $7
+CWE315_Cleartext_Storage_in_Cookie__Web_74b:: 3
.::3 4
BadSink::4 ;
(::; <
dataDictionary::< J
,::K L
req::M P
,::P Q
resp::R V
)::W X
;::X Y
};; 
public>> 

override>> 
void>> 
Good>> 
(>> 
HttpRequest>> )
req>>* -
,>>- .
HttpResponse>>/ ;
resp>>< @
)>>@ A
{?? 
GoodG2B@@ 
(@@ 
req@@ 
,@@ 
resp@@ 
)@@ 
;@@ 
GoodB2GAA 
(AA 
reqAA 
,AA 
respAA 
)AA 
;AA 
}BB 
privateEE 
staticEE 
voidEE 
GoodG2BEE 
(EE  
HttpRequestEE  +
reqEE, /
,EE/ 0
HttpResponseEE1 =
respEE> B
)EEB C
{FF 
stringGG 
dataGG 
;GG 
usingHH 
(HH 
SecureStringHH 
	securePwdHH %
=HH& '
newHH( +
SecureStringHH, 8
(HH8 9
)HH9 :
)HH: ;
{II 	
usingJJ 
(JJ 
SecureStringJJ 

secureUserJJ  *
=JJ+ ,
newJJ- 0
SecureStringJJ1 =
(JJ= >
)JJ> ?
)JJ? @
{KK 
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL  !
<LL" #
$strLL$ /
.LL/ 0
LengthLL0 6
;LL6 7
iLL8 9
++LL9 ;
)LL; <
{MM 
	securePwdOO 
.OO 

AppendCharOO (
(OO( )
$strOO) 4
[OO4 5
iOO5 6
]OO6 7
)OO7 8
;OO8 9
}PP 
forQQ 
(QQ 
intQQ 
iQQ 
=QQ 
$numQQ 
;QQ 
iQQ  !
<QQ" #
$strQQ$ *
.QQ* +
LengthQQ+ 1
;QQ1 2
iQQ3 4
++QQ4 6
)QQ6 7
{RR 
	securePwdTT 
.TT 

AppendCharTT (
(TT( )
$strTT) /
[TT/ 0
iTT0 1
]TT1 2
)TT2 3
;TT3 4
}UU 
{WW 
stringXX 
saltXX 
=XX  !
$strXX" 0
;XX0 1
usingYY 
(YY '
SHA512CryptoServiceProviderYY 6
sha512YY7 =
=YY> ?
newYY@ C'
SHA512CryptoServiceProviderYYD _
(YY_ `
)YY` a
)YYa b
{ZZ 
string[[ 
credentialsToHash[[ 0
=[[1 2

secureUser[[3 =
.[[= >
ToString[[> F
([[F G
)[[G H
+[[I J
$str[[K N
+[[O P
	securePwd[[Q Z
.[[Z [
ToString[[[ c
([[c d
)[[d e
;[[e f
byte\\ 
[\\ 
]\\ 
buffer\\ %
=\\& '
Encoding\\( 0
.\\0 1
UTF8\\1 5
.\\5 6
GetBytes\\6 >
(\\> ?
string\\? E
.\\E F
Concat\\F L
(\\L M
salt\\M Q
,\\Q R
credentialsToHash\\S d
)\\d e
)\\e f
;\\f g
byte]] 
[]] 
]]] 
hashedCredsAsBytes]] 1
=]]2 3
sha512]]4 :
.]]: ;
ComputeHash]]; F
(]]F G
buffer]]G M
)]]M N
;]]N O
data^^ 
=^^ 
IO^^ !
.^^! "
ToHex^^" '
(^^' (
hashedCredsAsBytes^^( :
)^^: ;
;^^; <
}__ 
}`` 
}aa 
}bb 	

Dictionarycc 
<cc 
intcc 
,cc 
stringcc 
>cc 
dataDictionarycc -
=cc. /
newcc0 3

Dictionarycc4 >
<cc> ?
intcc? B
,ccB C
stringccC I
>ccI J
(ccJ K
)ccK L
;ccL M
dataDictionarydd 
.dd 
Adddd 
(dd 
$numdd 
,dd 
datadd "
)dd" #
;dd# $
dataDictionaryee 
.ee 
Addee 
(ee 
$numee 
,ee 
dataee "
)ee" #
;ee# $
dataDictionaryff 
.ff 
Addff 
(ff 
$numff 
,ff 
dataff "
)ff" #
;ff# $7
+CWE315_Cleartext_Storage_in_Cookie__Web_74bgg 3
.gg3 4
GoodG2BSinkgg4 ?
(gg? @
dataDictionarygg@ N
,ggO P
reqggQ T
,ggT U
respggV Z
)gg[ \
;gg\ ]
}hh 
privatekk 
statickk 
voidkk 
GoodB2Gkk 
(kk  
HttpRequestkk  +
reqkk, /
,kk/ 0
HttpResponsekk1 =
respkk> B
)kkB C
{ll 
stringmm 
datamm 
;mm 
usingnn 
(nn 
SecureStringnn 
	securePwdnn %
=nn& '
newnn( +
SecureStringnn, 8
(nn8 9
)nn9 :
)nn: ;
{oo 	
usingpp 
(pp 
SecureStringpp 

secureUserpp  *
=pp+ ,
newpp- 0
SecureStringpp1 =
(pp= >
)pp> ?
)pp? @
{qq 
forrr 
(rr 
intrr 
irr 
=rr 
$numrr 
;rr 
irr  !
<rr" #
$strrr$ /
.rr/ 0
Lengthrr0 6
;rr6 7
irr8 9
++rr9 ;
)rr; <
{ss 
	securePwduu 
.uu 

AppendCharuu (
(uu( )
$struu) 4
[uu4 5
iuu5 6
]uu6 7
)uu7 8
;uu8 9
}vv 
forww 
(ww 
intww 
iww 
=ww 
$numww 
;ww 
iww  !
<ww" #
$strww$ *
.ww* +
Lengthww+ 1
;ww1 2
iww3 4
++ww4 6
)ww6 7
{xx 
	securePwdzz 
.zz 

AppendCharzz (
(zz( )
$strzz) /
[zz/ 0
izz0 1
]zz1 2
)zz2 3
;zz3 4
}{{ 
data}} 
=}} 

secureUser}} !
.}}! "
ToString}}" *
(}}* +
)}}+ ,
+}}- .
$str}}/ 2
+}}3 4
	securePwd}}5 >
.}}> ?
ToString}}? G
(}}G H
)}}H I
;}}I J
}~~ 
} 	

Dictionary
ÄÄ 
<
ÄÄ 
int
ÄÄ 
,
ÄÄ 
string
ÄÄ 
>
ÄÄ 
dataDictionary
ÄÄ -
=
ÄÄ. /
new
ÄÄ0 3

Dictionary
ÄÄ4 >
<
ÄÄ> ?
int
ÄÄ? B
,
ÄÄB C
string
ÄÄC I
>
ÄÄI J
(
ÄÄJ K
)
ÄÄK L
;
ÄÄL M
dataDictionary
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
data
ÅÅ "
)
ÅÅ" #
;
ÅÅ# $
dataDictionary
ÇÇ 
.
ÇÇ 
Add
ÇÇ 
(
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
data
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
dataDictionary
ÉÉ 
.
ÉÉ 
Add
ÉÉ 
(
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
data
ÉÉ "
)
ÉÉ" #
;
ÉÉ# $9
+CWE315_Cleartext_Storage_in_Cookie__Web_74b
ÑÑ 3
.
ÑÑ3 4
GoodB2GSink
ÑÑ4 ?
(
ÑÑ? @
dataDictionary
ÑÑ@ N
,
ÑÑO P
req
ÑÑQ T
,
ÑÑT U
resp
ÑÑV Z
)
ÑÑ[ \
;
ÑÑ\ ]
}
ÖÖ 
}áá 
}àà Ã
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_74b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_74b 1
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
string. 4
>4 5
dataDictionary6 D
,E F
HttpRequestG R
reqS V
,V W
HttpResponseX d
respe i
)i j
{   
string!! 
data!! 
=!! 
dataDictionary!! $
[!!$ %
$num!!% &
]!!& '
;!!' (
resp$$ 
.$$ 
AppendCookie$$ 
($$ 
new$$ 

HttpCookie$$ (
($$( )
$str$$) /
,$$/ 0
data$$1 5
)$$5 6
)$$6 7
;$$7 8
}%% 
public** 

static** 
void** 
GoodG2BSink** #
(**# $

Dictionary**$ .
<**. /
int**/ 2
,**2 3
string**3 9
>**9 :
dataDictionary**; I
,**J K
HttpRequest**L W
req**X [
,**[ \
HttpResponse**] i
resp**j n
)**n o
{++ 
string,, 
data,, 
=,, 
dataDictionary,, $
[,,$ %
$num,,% &
],,& '
;,,' (
resp// 
.// 
AppendCookie// 
(// 
new// 

HttpCookie// (
(//( )
$str//) /
,/// 0
data//1 5
)//5 6
)//6 7
;//7 8
}00 
public33 

static33 
void33 
GoodB2GSink33 "
(33" #

Dictionary33# -
<33- .
int33. 1
,331 2
string332 8
>338 9
dataDictionary33: H
,33I J
HttpRequest33K V
req33W Z
,33Z [
HttpResponse33\ h
resp33i m
)33m n
{44 
string55 
data55 
=55 
dataDictionary55 $
[55$ %
$num55% &
]55& '
;55' (
{77 	
string88 
salt88 
=88 
$str88 (
;88( )
using99 
(99 '
SHA512CryptoServiceProvider99 .
sha51299/ 5
=996 7
new998 ;'
SHA512CryptoServiceProvider99< W
(99W X
)99X Y
)99Y Z
{:: 
byte;; 
[;; 
];; 
buffer;; 
=;; 
Encoding;;  (
.;;( )
UTF8;;) -
.;;- .
GetBytes;;. 6
(;;6 7
string;;7 =
.;;= >
Concat;;> D
(;;D E
salt;;E I
,;;I J
data;;K O
);;O P
);;P Q
;;;Q R
byte<< 
[<< 
]<< 
hashedCredsAsBytes<< )
=<<* +
sha512<<, 2
.<<2 3
ComputeHash<<3 >
(<<> ?
buffer<<? E
)<<E F
;<<F G
data== 
=== 
IO== 
.== 
ToHex== 
(==  
hashedCredsAsBytes==  2
)==2 3
;==3 4
}>> 
}?? 	
resp@@ 
.@@ 
AppendCookie@@ 
(@@ 
new@@ 

HttpCookie@@ (
(@@( )
$str@@) /
,@@/ 0
data@@1 5
)@@5 6
)@@6 7
;@@7 8
}AA 
}CC 
}DD ™Y
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_75a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class   7
+CWE315_Cleartext_Storage_in_Cookie__Web_75a   1
:  2 3
AbstractTestCaseWeb  4 G
{!! 
public## 

override## 
void## 
Bad## 
(## 
HttpRequest## (
req##) ,
,##, -
HttpResponse##. :
resp##; ?
)##? @
{$$ 
string%% 
data%% 
;%% 
using&& 
(&& 
SecureString&& 
	securePwd&& %
=&&& '
new&&( +
SecureString&&, 8
(&&8 9
)&&9 :
)&&: ;
{'' 	
using(( 
((( 
SecureString(( 

secureUser((  *
=((+ ,
new((- 0
SecureString((1 =
(((= >
)((> ?
)((? @
{)) 
for** 
(** 
int** 
i** 
=** 
$num** 
;** 
i**  !
<**" #
$str**$ /
.**/ 0
Length**0 6
;**6 7
i**8 9
++**9 ;
)**; <
{++ 
	securePwd-- 
.-- 

AppendChar-- (
(--( )
$str--) 4
[--4 5
i--5 6
]--6 7
)--7 8
;--8 9
}.. 
for// 
(// 
int// 
i// 
=// 
$num// 
;// 
i//  !
<//" #
$str//$ *
.//* +
Length//+ 1
;//1 2
i//3 4
++//4 6
)//6 7
{00 
	securePwd22 
.22 

AppendChar22 (
(22( )
$str22) /
[22/ 0
i220 1
]221 2
)222 3
;223 4
}33 
data55 
=55 

secureUser55 !
.55! "
ToString55" *
(55* +
)55+ ,
+55- .
$str55/ 2
+553 4
	securePwd555 >
.55> ?
ToString55? G
(55G H
)55H I
;55I J
}66 
}77 	
byte99 
[99 
]99 
dataSerialized99 
=99 
null99  $
;99$ %
try:: 
{;; 	
BinaryFormatter<< 
bf<< 
=<<  
new<<! $
BinaryFormatter<<% 4
(<<4 5
)<<5 6
;<<6 7
using== 
(== 
var== 
ms== 
=== 
new== 
MemoryStream==  ,
(==, -
)==- .
)==. /
{>> 
bf?? 
.?? 
	Serialize?? 
(?? 
ms?? 
,??  
data??! %
)??% &
;??& '
dataSerialized@@ 
=@@  
ms@@! #
.@@# $
ToArray@@$ +
(@@+ ,
)@@, -
;@@- .
}AA 7
+CWE315_Cleartext_Storage_in_Cookie__Web_75bBB 7
.BB7 8
BadSinkBB8 ?
(BB? @
dataSerializedBB@ N
,BBO P
reqBBQ T
,BBT U
respBBV Z
)BB[ \
;BB\ ]
}CC 	
catchDD 
(DD "
SerializationExceptionDD %
exceptSerializeDD& 5
)DD5 6
{EE 	
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF 
.FF 
LogLevelFF '
.FF' (
WarnFF( ,
,FF, -
$strFF. X
,FFX Y
exceptSerializeFFZ i
)FFi j
;FFj k
}GG 	
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
HttpRequestKK )
reqKK* -
,KK- .
HttpResponseKK/ ;
respKK< @
)KK@ A
{LL 
GoodG2BMM 
(MM 
reqMM 
,MM 
respMM 
)MM 
;MM 
GoodB2GNN 
(NN 
reqNN 
,NN 
respNN 
)NN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
HttpRequestRR  +
reqRR, /
,RR/ 0
HttpResponseRR1 =
respRR> B
)RRB C
{SS 
stringTT 
dataTT 
;TT 
usingUU 
(UU 
SecureStringUU 
	securePwdUU %
=UU& '
newUU( +
SecureStringUU, 8
(UU8 9
)UU9 :
)UU: ;
{VV 	
usingWW 
(WW 
SecureStringWW 

secureUserWW  *
=WW+ ,
newWW- 0
SecureStringWW1 =
(WW= >
)WW> ?
)WW? @
{XX 
forYY 
(YY 
intYY 
iYY 
=YY 
$numYY 
;YY 
iYY  !
<YY" #
$strYY$ /
.YY/ 0
LengthYY0 6
;YY6 7
iYY8 9
++YY9 ;
)YY; <
{ZZ 
	securePwd\\ 
.\\ 

AppendChar\\ (
(\\( )
$str\\) 4
[\\4 5
i\\5 6
]\\6 7
)\\7 8
;\\8 9
}]] 
for^^ 
(^^ 
int^^ 
i^^ 
=^^ 
$num^^ 
;^^ 
i^^  !
<^^" #
$str^^$ *
.^^* +
Length^^+ 1
;^^1 2
i^^3 4
++^^4 6
)^^6 7
{__ 
	securePwdaa 
.aa 

AppendCharaa (
(aa( )
$straa) /
[aa/ 0
iaa0 1
]aa1 2
)aa2 3
;aa3 4
}bb 
datadd 
=dd 

secureUserdd !
.dd! "
ToStringdd" *
(dd* +
)dd+ ,
+dd- .
$strdd/ 2
+dd3 4
	securePwddd5 >
.dd> ?
ToStringdd? G
(ddG H
)ddH I
;ddI J
}ee 
}ff 	
bytehh 
[hh 
]hh 
dataSerializedhh 
=hh 
nullhh  $
;hh$ %
tryii 
{jj 	
BinaryFormatterkk 
bfkk 
=kk  
newkk! $
BinaryFormatterkk% 4
(kk4 5
)kk5 6
;kk6 7
usingll 
(ll 
varll 
msll 
=ll 
newll 
MemoryStreamll  ,
(ll, -
)ll- .
)ll. /
{mm 
bfnn 
.nn 
	Serializenn 
(nn 
msnn 
,nn  
datann! %
)nn% &
;nn& '
dataSerializedoo 
=oo  
msoo! #
.oo# $
ToArrayoo$ +
(oo+ ,
)oo, -
;oo- .
}pp 7
+CWE315_Cleartext_Storage_in_Cookie__Web_75bqq 7
.qq7 8
GoodG2BSinkqq8 C
(qqC D
dataSerializedqqD R
,qqS T
reqqqU X
,qqX Y
respqqZ ^
)qq_ `
;qq` a
}rr 	
catchss 
(ss "
SerializationExceptionss %
exceptSerializess& 5
)ss5 6
{tt 	
IOuu 
.uu 
Loggeruu 
.uu 
Loguu 
(uu 
NLoguu 
.uu 
LogLeveluu '
.uu' (
Warnuu( ,
,uu, -
$struu. X
,uuX Y
exceptSerializeuuZ i
)uui j
;uuj k
}vv 	
}ww 
privatezz 
staticzz 
voidzz 
GoodB2Gzz 
(zz  
HttpRequestzz  +
reqzz, /
,zz/ 0
HttpResponsezz1 =
respzz> B
)zzB C
{{{ 
string|| 
data|| 
;|| 
using}} 
(}} 
SecureString}} 
	securePwd}} %
=}}& '
new}}( +
SecureString}}, 8
(}}8 9
)}}9 :
)}}: ;
{~~ 	
using 
( 
SecureString 

secureUser  *
=+ ,
new- 0
SecureString1 =
(= >
)> ?
)? @
{
ÄÄ 
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
i
ÅÅ  !
<
ÅÅ" #
$str
ÅÅ$ /
.
ÅÅ/ 0
Length
ÅÅ0 6
;
ÅÅ6 7
i
ÅÅ8 9
++
ÅÅ9 ;
)
ÅÅ; <
{
ÇÇ 
	securePwd
ÑÑ 
.
ÑÑ 

AppendChar
ÑÑ (
(
ÑÑ( )
$str
ÑÑ) 4
[
ÑÑ4 5
i
ÑÑ5 6
]
ÑÑ6 7
)
ÑÑ7 8
;
ÑÑ8 9
}
ÖÖ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
i
ÜÜ  !
<
ÜÜ" #
$str
ÜÜ$ *
.
ÜÜ* +
Length
ÜÜ+ 1
;
ÜÜ1 2
i
ÜÜ3 4
++
ÜÜ4 6
)
ÜÜ6 7
{
áá 
	securePwd
ââ 
.
ââ 

AppendChar
ââ (
(
ââ( )
$str
ââ) /
[
ââ/ 0
i
ââ0 1
]
ââ1 2
)
ââ2 3
;
ââ3 4
}
ää 
data
åå 
=
åå 

secureUser
åå !
.
åå! "
ToString
åå" *
(
åå* +
)
åå+ ,
+
åå- .
$str
åå/ 2
+
åå3 4
	securePwd
åå5 >
.
åå> ?
ToString
åå? G
(
ååG H
)
ååH I
;
ååI J
}
çç 
}
éé 	
byte
êê 
[
êê 
]
êê 
dataSerialized
êê 
=
êê 
null
êê  $
;
êê$ %
try
ëë 
{
íí 	
BinaryFormatter
ìì 
bf
ìì 
=
ìì  
new
ìì! $
BinaryFormatter
ìì% 4
(
ìì4 5
)
ìì5 6
;
ìì6 7
using
îî 
(
îî 
var
îî 
ms
îî 
=
îî 
new
îî 
MemoryStream
îî  ,
(
îî, -
)
îî- .
)
îî. /
{
ïï 
bf
ññ 
.
ññ 
	Serialize
ññ 
(
ññ 
ms
ññ 
,
ññ  
data
ññ! %
)
ññ% &
;
ññ& '
dataSerialized
óó 
=
óó  
ms
óó! #
.
óó# $
ToArray
óó$ +
(
óó+ ,
)
óó, -
;
óó- .
}
òò 9
+CWE315_Cleartext_Storage_in_Cookie__Web_75b
ôô 7
.
ôô7 8
GoodB2GSink
ôô8 C
(
ôôC D
dataSerialized
ôôD R
,
ôôS T
req
ôôU X
,
ôôX Y
resp
ôôZ ^
)
ôô_ `
;
ôô` a
}
öö 	
catch
õõ 
(
õõ $
SerializationException
õõ %
exceptSerialize
õõ& 5
)
õõ5 6
{
úú 	
IO
ùù 
.
ùù 
Logger
ùù 
.
ùù 
Log
ùù 
(
ùù 
NLog
ùù 
.
ùù 
LogLevel
ùù '
.
ùù' (
Warn
ùù( ,
,
ùù, -
$str
ùù. X
,
ùùX Y
exceptSerialize
ùùZ i
)
ùùi j
;
ùùj k
}
ûû 	
}
üü 
}°° 
}¢¢ Â<
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_75b.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_75b 1
{ 
public!! 

static!! 
void!! 
BadSink!! 
(!! 
byte!! #
[!!# $
]!!$ %
dataSerialized!!& 4
,!!5 6
HttpRequest!!7 B
req!!C F
,!!F G
HttpResponse!!H T
resp!!U Y
)!!Y Z
{"" 
try## 
{$$ 	
string%% 
data%% 
;%% 
var&& 
binForm&& 
=&& 
new&& 
BinaryFormatter&& -
(&&- .
)&&. /
;&&/ 0
using'' 
('' 
var'' 
	memStream''  
=''! "
new''# &
MemoryStream''' 3
(''3 4
)''4 5
)''5 6
{(( 
	memStream)) 
.)) 
Write)) 
())  
dataSerialized))  .
,)). /
$num))0 1
,))1 2
dataSerialized))3 A
.))A B
Length))B H
)))H I
;))I J
	memStream** 
.** 
Seek** 
(** 
$num**  
,**  !

SeekOrigin**" ,
.**, -
Begin**- 2
)**2 3
;**3 4
data++ 
=++ 
(++ 
string++ 
)++ 
binForm++ &
.++& '
Deserialize++' 2
(++2 3
	memStream++3 <
)++< =
;++= >
},, 
resp// 
.// 
AppendCookie// 
(// 
new// !

HttpCookie//" ,
(//, -
$str//- 3
,//3 4
data//5 9
)//9 :
)//: ;
;//; <
}00 	
catch11 
(11 "
SerializationException11 %
exceptSerialize11& 5
)115 6
{22 	
IO33 
.33 
Logger33 
.33 
Log33 
(33 
NLog33 
.33 
LogLevel33 '
.33' (
Warn33( ,
,33, -
$str33. Y
,33Y Z
exceptSerialize33[ j
)33j k
;33k l
}44 	
}55 
public:: 

static:: 
void:: 
GoodG2BSink:: "
(::" #
byte::# '
[::' (
]::( )
dataSerialized::* 8
,::9 :
HttpRequest::; F
req::G J
,::J K
HttpResponse::L X
resp::Y ]
)::] ^
{;; 
try<< 
{== 	
string>> 
data>> 
;>> 
var?? 
binForm?? 
=?? 
new?? 
BinaryFormatter?? -
(??- .
)??. /
;??/ 0
using@@ 
(@@ 
var@@ 
	memStream@@  
=@@! "
new@@# &
MemoryStream@@' 3
(@@3 4
)@@4 5
)@@5 6
{AA 
	memStreamBB 
.BB 
WriteBB 
(BB  
dataSerializedBB  .
,BB. /
$numBB0 1
,BB1 2
dataSerializedBB3 A
.BBA B
LengthBBB H
)BBH I
;BBI J
	memStreamCC 
.CC 
SeekCC 
(CC 
$numCC  
,CC  !

SeekOriginCC" ,
.CC, -
BeginCC- 2
)CC2 3
;CC3 4
dataDD 
=DD 
(DD 
stringDD 
)DD 
binFormDD &
.DD& '
DeserializeDD' 2
(DD2 3
	memStreamDD3 <
)DD< =
;DD= >
}EE 
respHH 
.HH 
AppendCookieHH 
(HH 
newHH !

HttpCookieHH" ,
(HH, -
$strHH- 3
,HH3 4
dataHH5 9
)HH9 :
)HH: ;
;HH; <
}II 	
catchJJ 
(JJ "
SerializationExceptionJJ %
exceptSerializeJJ& 5
)JJ5 6
{KK 	
IOLL 
.LL 
LoggerLL 
.LL 
LogLL 
(LL 
NLogLL 
.LL 
LogLevelLL '
.LL' (
WarnLL( ,
,LL, -
$strLL. Y
,LLY Z
exceptSerializeLL[ j
)LLj k
;LLk l
}MM 	
}NN 
publicQQ 

staticQQ 
voidQQ 
GoodB2GSinkQQ "
(QQ" #
byteQQ# '
[QQ' (
]QQ( )
dataSerializedQQ* 8
,QQ9 :
HttpRequestQQ; F
reqQQG J
,QQJ K
HttpResponseQQL X
respQQY ]
)QQ] ^
{RR 
trySS 
{TT 	
stringUU 
dataUU 
;UU 
varVV 
binFormVV 
=VV 
newVV 
BinaryFormatterVV -
(VV- .
)VV. /
;VV/ 0
usingWW 
(WW 
varWW 
	memStreamWW  
=WW! "
newWW# &
MemoryStreamWW' 3
(WW3 4
)WW4 5
)WW5 6
{XX 
	memStreamYY 
.YY 
WriteYY 
(YY  
dataSerializedYY  .
,YY. /
$numYY0 1
,YY1 2
dataSerializedYY3 A
.YYA B
LengthYYB H
)YYH I
;YYI J
	memStreamZZ 
.ZZ 
SeekZZ 
(ZZ 
$numZZ  
,ZZ  !

SeekOriginZZ" ,
.ZZ, -
BeginZZ- 2
)ZZ2 3
;ZZ3 4
data[[ 
=[[ 
([[ 
string[[ 
)[[ 
binForm[[ &
.[[& '
Deserialize[[' 2
([[2 3
	memStream[[3 <
)[[< =
;[[= >
}\\ 
{^^ 
string__ 
salt__ 
=__ 
$str__ ,
;__, -
using`` 
(`` '
SHA512CryptoServiceProvider`` 2
sha512``3 9
=``: ;
new``< ?'
SHA512CryptoServiceProvider``@ [
(``[ \
)``\ ]
)``] ^
{aa 
bytebb 
[bb 
]bb 
bufferbb !
=bb" #
Encodingbb$ ,
.bb, -
UTF8bb- 1
.bb1 2
GetBytesbb2 :
(bb: ;
stringbb; A
.bbA B
ConcatbbB H
(bbH I
saltbbI M
,bbM N
databbO S
)bbS T
)bbT U
;bbU V
bytecc 
[cc 
]cc 
hashedCredsAsBytescc -
=cc. /
sha512cc0 6
.cc6 7
ComputeHashcc7 B
(ccB C
bufferccC I
)ccI J
;ccJ K
datadd 
=dd 
IOdd 
.dd 
ToHexdd #
(dd# $
hashedCredsAsBytesdd$ 6
)dd6 7
;dd7 8
}ee 
}ff 
respgg 
.gg 
AppendCookiegg 
(gg 
newgg !

HttpCookiegg" ,
(gg, -
$strgg- 3
,gg3 4
datagg5 9
)gg9 :
)gg: ;
;gg; <
}hh 	
catchii 
(ii "
SerializationExceptionii %
exceptSerializeii& 5
)ii5 6
{jj 	
IOkk 
.kk 
Loggerkk 
.kk 
Logkk 
(kk 
NLogkk 
.kk 
LogLevelkk '
.kk' (
Warnkk( ,
,kk, -
$strkk. Y
,kkY Z
exceptSerializekk[ j
)kkj k
;kkk l
}ll 	
}mm 
}oo 
}pp ∞F
¨C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_81a.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class 7
+CWE315_Cleartext_Storage_in_Cookie__Web_81a 1
:2 3
AbstractTestCaseWeb4 G
{ 
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
string"" 
data"" 
;"" 
using## 
(## 
SecureString## 
	securePwd## %
=##& '
new##( +
SecureString##, 8
(##8 9
)##9 :
)##: ;
{$$ 	
using%% 
(%% 
SecureString%% 

secureUser%%  *
=%%+ ,
new%%- 0
SecureString%%1 =
(%%= >
)%%> ?
)%%? @
{&& 
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i''  !
<''" #
$str''$ /
.''/ 0
Length''0 6
;''6 7
i''8 9
++''9 ;
)''; <
{(( 
	securePwd** 
.** 

AppendChar** (
(**( )
$str**) 4
[**4 5
i**5 6
]**6 7
)**7 8
;**8 9
}++ 
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
;,, 
i,,  !
<,," #
$str,,$ *
.,,* +
Length,,+ 1
;,,1 2
i,,3 4
++,,4 6
),,6 7
{-- 
	securePwd// 
.// 

AppendChar// (
(//( )
$str//) /
[/// 0
i//0 1
]//1 2
)//2 3
;//3 4
}00 
data22 
=22 

secureUser22 !
.22! "
ToString22" *
(22* +
)22+ ,
+22- .
$str22/ 2
+223 4
	securePwd225 >
.22> ?
ToString22? G
(22G H
)22H I
;22I J
}33 
}44 	;
/CWE315_Cleartext_Storage_in_Cookie__Web_81_base55 7

baseObject558 B
=55C D
new55E H:
.CWE315_Cleartext_Storage_in_Cookie__Web_81_bad55I w
(55w x
)55x y
;55y z

baseObject66 
.66 
Action66 
(66 
data66 
,66  
req66! $
,66$ %
resp66& *
)66* +
;66+ ,
}77 
public:: 

override:: 
void:: 
Good:: 
(:: 
HttpRequest:: )
req::* -
,::- .
HttpResponse::/ ;
resp::< @
)::@ A
{;; 
GoodG2B<< 
(<< 
req<< 
,<< 
resp<< 
)<< 
;<< 
GoodB2G== 
(== 
req== 
,== 
resp== 
)== 
;== 
}>> 
privateAA 
voidAA 
GoodG2BAA 
(AA 
HttpRequestAA $
reqAA% (
,AA( )
HttpResponseAA* 6
respAA7 ;
)AA; <
{BB 
stringCC 
dataCC 
;CC 
usingDD 
(DD 
SecureStringDD 
	securePwdDD %
=DD& '
newDD( +
SecureStringDD, 8
(DD8 9
)DD9 :
)DD: ;
{EE 	
usingFF 
(FF 
SecureStringFF 

secureUserFF  *
=FF+ ,
newFF- 0
SecureStringFF1 =
(FF= >
)FF> ?
)FF? @
{GG 
forHH 
(HH 
intHH 
iHH 
=HH 
$numHH 
;HH 
iHH  !
<HH" #
$strHH$ /
.HH/ 0
LengthHH0 6
;HH6 7
iHH8 9
++HH9 ;
)HH; <
{II 
	securePwdKK 
.KK 

AppendCharKK (
(KK( )
$strKK) 4
[KK4 5
iKK5 6
]KK6 7
)KK7 8
;KK8 9
}LL 
forMM 
(MM 
intMM 
iMM 
=MM 
$numMM 
;MM 
iMM  !
<MM" #
$strMM$ *
.MM* +
LengthMM+ 1
;MM1 2
iMM3 4
++MM4 6
)MM6 7
{NN 
	securePwdPP 
.PP 

AppendCharPP (
(PP( )
$strPP) /
[PP/ 0
iPP0 1
]PP1 2
)PP2 3
;PP3 4
}QQ 
{SS 
stringTT 
saltTT 
=TT  !
$strTT" 0
;TT0 1
usingUU 
(UU '
SHA512CryptoServiceProviderUU 6
sha512UU7 =
=UU> ?
newUU@ C'
SHA512CryptoServiceProviderUUD _
(UU_ `
)UU` a
)UUa b
{VV 
stringWW 
credentialsToHashWW 0
=WW1 2

secureUserWW3 =
.WW= >
ToStringWW> F
(WWF G
)WWG H
+WWI J
$strWWK N
+WWO P
	securePwdWWQ Z
.WWZ [
ToStringWW[ c
(WWc d
)WWd e
;WWe f
byteXX 
[XX 
]XX 
bufferXX %
=XX& '
EncodingXX( 0
.XX0 1
UTF8XX1 5
.XX5 6
GetBytesXX6 >
(XX> ?
stringXX? E
.XXE F
ConcatXXF L
(XXL M
saltXXM Q
,XXQ R
credentialsToHashXXS d
)XXd e
)XXe f
;XXf g
byteYY 
[YY 
]YY 
hashedCredsAsBytesYY 1
=YY2 3
sha512YY4 :
.YY: ;
ComputeHashYY; F
(YYF G
bufferYYG M
)YYM N
;YYN O
dataZZ 
=ZZ 
IOZZ !
.ZZ! "
ToHexZZ" '
(ZZ' (
hashedCredsAsBytesZZ( :
)ZZ: ;
;ZZ; <
}[[ 
}\\ 
}]] 
}^^ 	;
/CWE315_Cleartext_Storage_in_Cookie__Web_81_base__ 7

baseObject__8 B
=__C D
new__E H>
2CWE315_Cleartext_Storage_in_Cookie__Web_81_goodG2B__I {
(__{ |
)__| }
;__} ~

baseObject`` 
.`` 
Action`` 
(`` 
data`` 
,``  
req``! $
,``$ %
resp``& *
)``* +
;``+ ,
}aa 
privatedd 
voiddd 
GoodB2Gdd 
(dd 
HttpRequestdd $
reqdd% (
,dd( )
HttpResponsedd* 6
respdd7 ;
)dd; <
{ee 
stringff 
dataff 
;ff 
usinggg 
(gg 
SecureStringgg 
	securePwdgg %
=gg& '
newgg( +
SecureStringgg, 8
(gg8 9
)gg9 :
)gg: ;
{hh 	
usingii 
(ii 
SecureStringii 

secureUserii  *
=ii+ ,
newii- 0
SecureStringii1 =
(ii= >
)ii> ?
)ii? @
{jj 
forkk 
(kk 
intkk 
ikk 
=kk 
$numkk 
;kk 
ikk  !
<kk" #
$strkk$ /
.kk/ 0
Lengthkk0 6
;kk6 7
ikk8 9
++kk9 ;
)kk; <
{ll 
	securePwdnn 
.nn 

AppendCharnn (
(nn( )
$strnn) 4
[nn4 5
inn5 6
]nn6 7
)nn7 8
;nn8 9
}oo 
forpp 
(pp 
intpp 
ipp 
=pp 
$numpp 
;pp 
ipp  !
<pp" #
$strpp$ *
.pp* +
Lengthpp+ 1
;pp1 2
ipp3 4
++pp4 6
)pp6 7
{qq 
	securePwdss 
.ss 

AppendCharss (
(ss( )
$strss) /
[ss/ 0
iss0 1
]ss1 2
)ss2 3
;ss3 4
}tt 
datavv 
=vv 

secureUservv !
.vv! "
ToStringvv" *
(vv* +
)vv+ ,
+vv- .
$strvv/ 2
+vv3 4
	securePwdvv5 >
.vv> ?
ToStringvv? G
(vvG H
)vvH I
;vvI J
}ww 
}xx 	;
/CWE315_Cleartext_Storage_in_Cookie__Web_81_baseyy 7

baseObjectyy8 B
=yyC D
newyyE H>
2CWE315_Cleartext_Storage_in_Cookie__Web_81_goodB2GyyI {
(yy{ |
)yy| }
;yy} ~

baseObjectzz 
.zz 
Actionzz 
(zz 
datazz 
,zz  
reqzz! $
,zz$ %
respzz& *
)zz* +
;zz+ ,
}{{ 
}}} 
}~~ Ú
ØC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_81_bad.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class :
.CWE315_Cleartext_Storage_in_Cookie__Web_81_bad 4
:5 6;
/CWE315_Cleartext_Storage_in_Cookie__Web_81_base7 f
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{ 
resp"" 
."" 
AppendCookie"" 
("" 
new"" 

HttpCookie"" (
(""( )
$str"") /
,""/ 0
data""1 5
)""5 6
)""6 7
;""7 8
}## 
}$$ 
}%% Õ
∞C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_81_base.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
abstract 
class	 ;
/CWE315_Cleartext_Storage_in_Cookie__Web_81_base >
{ 
public 

abstract 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
;Q R
} 
} ¡
≥C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_81_goodB2G.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class >
2CWE315_Cleartext_Storage_in_Cookie__Web_81_goodB2G 8
:9 :;
/CWE315_Cleartext_Storage_in_Cookie__Web_81_base; j
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{   
{"" 	
string## 
salt## 
=## 
$str## (
;##( )
using$$ 
($$ '
SHA512CryptoServiceProvider$$ .
sha512$$/ 5
=$$6 7
new$$8 ;'
SHA512CryptoServiceProvider$$< W
($$W X
)$$X Y
)$$Y Z
{%% 
byte&& 
[&& 
]&& 
buffer&& 
=&& 
Encoding&&  (
.&&( )
UTF8&&) -
.&&- .
GetBytes&&. 6
(&&6 7
string&&7 =
.&&= >
Concat&&> D
(&&D E
salt&&E I
,&&I J
data&&K O
)&&O P
)&&P Q
;&&Q R
byte'' 
['' 
]'' 
hashedCredsAsBytes'' )
=''* +
sha512'', 2
.''2 3
ComputeHash''3 >
(''> ?
buffer''? E
)''E F
;''F G
data(( 
=(( 
IO(( 
.(( 
ToHex(( 
(((  
hashedCredsAsBytes((  2
)((2 3
;((3 4
})) 
}** 	
resp++ 
.++ 
AppendCookie++ 
(++ 
new++ 

HttpCookie++ (
(++( )
$str++) /
,++/ 0
data++1 5
)++5 6
)++6 7
;++7 8
},, 
}-- 
}.. ˙
≥C:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\CWE315_Cleartext_Storage_in_Cookie__Web_81_goodG2B.cs
	namespace 	
	testcases
 
. .
"CWE315_Cleartext_Storage_in_Cookie 6
{ 
class >
2CWE315_Cleartext_Storage_in_Cookie__Web_81_goodG2B 8
:9 :;
/CWE315_Cleartext_Storage_in_Cookie__Web_81_base; j
{ 
public 

override 
void 
Action 
(  
string  &
data' +
,, -
HttpRequest. 9
req: =
,= >
HttpResponse? K
respL P
)P Q
{   
resp## 
.## 
AppendCookie## 
(## 
new## 

HttpCookie## (
(##( )
$str##) /
,##/ 0
data##1 5
)##5 6
)##6 7
;##7 8
}$$ 
}%% 
}&& ˆ(
àC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\Program.cs
	namespace		 	
	testcases		
 
.		 .
"CWE315_Cleartext_Storage_in_Cookie		 6
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
}__ 
privateaa 
staticaa	 
voidaa 
RunTestCWE4aa  
(aa  !
)aa! "
{aa# $
}ee 
privategg 
staticgg	 
voidgg 
RunTestCWE5gg  
(gg  !
)gg! "
{gg# $
}kk 
privatemm 
staticmm	 
voidmm 
RunTestCWE6mm  
(mm  !
)mm! "
{mm# $
}qq 
privatess 
staticss	 
voidss 
RunTestCWE7ss  
(ss  !
)ss! "
{ss# $
}ww 
privateyy 
staticyy	 
voidyy 
RunTestCWE8yy  
(yy  !
)yy! "
{yy# $
}}} 
private 
static	 
void 
RunTestCWE9  
(  !
)! "
{# $
}
ÉÉ 
}ÑÑ 
}ÖÖ ƒ
òC:\Users\CyberDiver\Documents\SAST Benchmarking\juliet_test_suite_1.3-csharp\src\testcases\CWE315_Cleartext_Storage_in_Cookie\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str =
)= >
]> ?
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *