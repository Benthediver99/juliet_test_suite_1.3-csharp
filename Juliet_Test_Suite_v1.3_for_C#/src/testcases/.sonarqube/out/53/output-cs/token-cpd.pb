ç
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_01 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
short!! 
)!!  
data!!  $
)!!$ %
;!!% &
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
float.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
short33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
}77 
}88 ˆ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_02 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
floatGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` €
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_03 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
floatGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∂
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_04 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
float## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
('' 
float'' 
)'' 
('' 
float''  
.''  !
MaxValue''! )
*''* +
$num'', /
*''0 1
(''2 3
new''3 6
Random''7 =
(''= >
)''> ?
.''? @

NextDouble''@ J
(''J K
)''K L
-''L M
$num''M P
)''P Q
)''Q R
;''R S
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
short11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
float99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
floatNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Ì
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_05 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
float## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
('' 
float'' 
)'' 
('' 
float''  
.''  !
MaxValue''! )
*''* +
$num'', /
*''0 1
(''2 3
new''3 6
Random''7 =
(''= >
)''> ?
.''? @

NextDouble''@ J
(''J K
)''K L
-''L M
$num''M P
)''P Q
)''Q R
;''R S
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
short11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
float99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
floatNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg é
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_06 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
float"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
(&& 
float&& 
)&& 
(&& 
float&&  
.&&  !
MaxValue&&! )
*&&* +
$num&&, /
*&&0 1
(&&2 3
new&&3 6
Random&&7 =
(&&= >
)&&> ?
.&&? @

NextDouble&&@ J
(&&J K
)&&K L
-&&L M
$num&&M P
)&&P Q
)&&Q R
;&&R S
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
short00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
float88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
shortFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
floatMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
short[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ﬂ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_07 ?
:@ A
AbstractTestCaseB R
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
float"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
(&& 
float&& 
)&& 
(&& 
float&&  
.&&  !
MaxValue&&! )
*&&* +
$num&&, /
*&&0 1
(&&2 3
new&&3 6
Random&&7 =
(&&= >
)&&> ?
.&&? @

NextDouble&&@ J
(&&J K
)&&K L
-&&L M
$num&&M P
)&&P Q
)&&Q R
;&&R S
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
short00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
float88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
shortFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
floatMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
short[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff î
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_08 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
float** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
(.. 
float.. 
).. 
(.. 
float..  
...  !
MaxValue..! )
*..* +
$num.., /
*..0 1
(..2 3
new..3 6
Random..7 =
(..= >
)..> ?
...? @

NextDouble..@ J
(..J K
)..K L
-..L M
$num..M P
)..P Q
)..Q R
;..R S
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
short88 
)88  
data88  $
)88$ %
;88% &
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
float@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
floatUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn É
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_09 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
floatGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Â
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_10 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
floatGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ‘
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_11 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
floatGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` œ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_12 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
short?? 
)??  
data??  $
)??$ %
;??% &
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II Ë
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_13 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
floatGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}``  
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_14 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
float22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
floatGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` •
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_15 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
(!! 
float!! 
)!! 
(!! 
float!!  
.!!  !
MaxValue!!! )
*!!* +
$num!!, /
*!!0 1
(!!2 3
new!!3 6
Random!!7 =
(!!= >
)!!> ?
.!!? @

NextDouble!!@ J
(!!J K
)!!K L
-!!L M
$num!!M P
)!!P Q
)!!Q R
;!!R S
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
float33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
shortBB 
)BB  
dataBB  $
)BB$ %
;BB% &
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
floatII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc ì
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_16 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
short%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
short66 
)66  
data66  $
)66$ %
;66% &
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ É
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_17 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
short## #
)### $
data##$ (
)##( )
;##) *
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
float-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
short44 #
)44# $
data44$ (
)44( )
;44) *
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? ã%
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_21 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
private(( 
float(( 

Bad_source(( 
((( 
)(( 
{)) 
float** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
(.. 
float.. 
).. 
(.. 
float..  
...  !
MaxValue..! )
*..* +
$num.., /
*..0 1
(..2 3
new..3 6
Random..7 =
(..= >
)..> ?
...? @

NextDouble..@ J
(..J K
)..K L
-..L M
$num..M P
)..P Q
)..Q R
;..R S
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
floatFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
shortKK 
)KK  
dataKK  $
)KK$ %
;KK% &
}LL 	
}MM 
privateOO 
floatOO 
GoodG2B1_sourceOO !
(OO! "
)OO" #
{PP 
floatQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
floatcc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatell 
floatll 
GoodG2B2_sourcell !
(ll! "
)ll" #
{mm 
floatnn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ ß
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22a @
:A B
AbstractTestCaseC S
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22b!! I
.!!I J
	BadSource!!J S
(!!S T
)!!T U
;!!U V
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
float66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22b88 I
.88I J
GoodG2B1Source88J X
(88X Y
)88Y Z
;88Z [
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
floatBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22bDD I
.DDI J
GoodG2B2SourceDDJ X
(DDX Y
)DDY Z
;DDZ [
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ˆ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22b @
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
if 

( F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22a F
.F G
badPublicStaticG V
)V W
{ 	
data   
=   
(   
float   
)   
(   
float    
.    !
MaxValue  ! )
*  * +
$num  , /
*  0 1
(  2 3
new  3 6
Random  7 =
(  = >
)  > ?
.  ? @

NextDouble  @ J
(  J K
)  K L
-  L M
$num  M P
)  P Q
)  Q R
;  R S
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
float.. 
GoodG2B1Source.. &
(..& '
)..' (
{// 
float00 
data00 
;00 
if11 

(11 F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22a11 F
.11F G 
goodG2B1PublicStatic11G [
)11[ \
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
float@@ 
GoodG2B2Source@@ &
(@@& '
)@@' (
{AA 
floatBB 
dataBB 
;BB 
ifCC 

(CC F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22aCC F
.CCF G 
GoodG2B2PublicStaticCCG [
)CC[ \
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ≥
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_31 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
dataCopy 
; 
{ 	
float 
data 
; 
data!! 
=!! 
(!! 
float!! 
)!! 
(!! 
float!!  
.!!  !
MaxValue!!! )
*!!* +
$num!!, /
*!!0 1
(!!2 3
new!!3 6
Random!!7 =
(!!= >
)!!> ?
.!!? @

NextDouble!!@ J
(!!J K
)!!K L
-!!L M
$num!!M P
)!!P Q
)!!Q R
;!!R S
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
float%% 
data%% 
=%% 
dataCopy%% !
;%%! "
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( #
)((# $
data(($ (
)((( )
;(() *
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
float66 
dataCopy66 
;66 
{77 	
float88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
float>> 
data>> 
=>> 
dataCopy>> !
;>>! "
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
shortAA #
)AA# $
dataAA$ (
)AA( )
;AA) *
}BB 
}CC 	
}DD 
}FF 
}GG ≥
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_41 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
void 
BadSink 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
float## 
data## 
;## 
data%% 
=%% 
(%% 
float%% 
)%% 
(%% 
float%% 
.%% 
MaxValue%% %
*%%& '
$num%%( +
*%%, -
(%%. /
new%%/ 2
Random%%3 9
(%%9 :
)%%: ;
.%%; <

NextDouble%%< F
(%%F G
)%%G H
-%%H I
$num%%I L
)%%L M
)%%M N
;%%N O
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
float//$ )
data//* .
)/// 0
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
short33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
float:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA °
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_42 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
float 
	BadSource "
(" #
)# $
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
float$$ 
data$$ 
=$$ 
	BadSource$$ 
($$ 
)$$  
;$$  !
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private,, 
static,, 
float,, 
GoodG2BSource,, &
(,,& '
),,' (
{-- 
float.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
float77 
data77 
=77 
GoodG2BSource77 "
(77" #
)77# $
;77$ %
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
short:: 
)::  
data::  $
)::$ %
;::% &
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD Á
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__float_random_to_short_45 ?
:@ A
AbstractTestCaseB R
{ 
private 
float 
dataBad 
; 
private 
float 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
float 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
short"" 
)""  
data""  $
)""$ %
;""% &
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
float)) 
data)) 
;)) 
data++ 
=++ 
(++ 
float++ 
)++ 
(++ 
float++ 
.++ 
MaxValue++ %
*++& '
$num++( +
*++, -
(++. /
new++/ 2
Random++3 9
(++9 :
)++: ;
.++; <

NextDouble++< F
(++F G
)++G H
-++H I
$num++I L
)++L M
)++M N
;++N O
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
float88 
data88 
=88 
dataGoodG2B88  
;88  !
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
floatBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ·
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_51a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N OF
:CWE197_Numeric_Truncation_Error__float_random_to_short_51b B
.B C
BadSinkC J
(J K
dataK O
)Q R
;R S
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
float** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, F
:CWE197_Numeric_Truncation_Error__float_random_to_short_51b-- B
.--B C
GoodG2BSink--C N
(--N O
data--O S
)--U V
;--V W
}.. 
}00 
}11 °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_51b @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
float### (
data##) -
)##. /
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, ·
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_52a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N OF
:CWE197_Numeric_Truncation_Error__float_random_to_short_52b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
float++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__float_random_to_short_52b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_52b @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ F
:CWE197_Numeric_Truncation_Error__float_random_to_short_52c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" F
:CWE197_Numeric_Truncation_Error__float_random_to_short_52c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_52c @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ·
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N OF
:CWE197_Numeric_Truncation_Error__float_random_to_short_53b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
float++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53b @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53c @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53d @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ·
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N OF
:CWE197_Numeric_Truncation_Error__float_random_to_short_54b B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
float++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54b.. B
...B C
GoodG2BSink..C N
(..N O
data..O S
)..T U
;..U V
}// 
}11 
}22 Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54b @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54c @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54d @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54e B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
float!!# (
data!!) -
)!!. /
{"" F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54e## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' °	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54e @
{ 
public 

static 
void 
BadSink 
( 
float $
data% )
)* +
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
float$$# (
data$$) -
)$$. /
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Ì
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_61a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
= F
:CWE197_Numeric_Truncation_Error__float_random_to_short_61b O
.O P
	BadSourceP Y
(Y Z
)Z [
;[ \
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
float++ 
data++ 
=++ F
:CWE197_Numeric_Truncation_Error__float_random_to_short_61b++ O
.++O P
GoodG2BSource++P ]
(++] ^
)++^ _
;++_ `
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ó
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_61b @
{ 
public 

static 
float 
	BadSource !
(! "
)" #
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O
return 
data 
; 
}   
public%% 

static%% 
float%% 
GoodG2BSource%% %
(%%% &
)%%& '
{&& 
float'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. ·
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_66a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O
float 
[ 
] 
	dataArray 
= 
new 
float  %
[% &
$num& '
]' (
;( )
	dataArray   
[   
$num   
]   
=   
data   
;   F
:CWE197_Numeric_Truncation_Error__float_random_to_short_66b!! B
.!!B C
BadSink!!C J
(!!J K
	dataArray!!K T
)!!V W
;!!W X
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
float-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
float00 
[00 
]00 
	dataArray00 
=00 
new00 
float00  %
[00% &
$num00& '
]00' (
;00( )
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 F
:CWE197_Numeric_Truncation_Error__float_random_to_short_66b22 B
.22B C
GoodG2BSink22C N
(22N O
	dataArray22O X
)22Z [
;22[ \
}33 
}55 
}66 ˚
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_66b @
{ 
public 

static 
void 
BadSink 
( 
float $
[$ %
]% &
	dataArray' 0
)1 2
{ 
float 
data 
= 
	dataArray 
[ 
$num  
]  !
;! "
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
float%%# (
[%%( )
]%%) *
	dataArray%%+ 4
)%%5 6
{&& 
float'' 
data'' 
='' 
	dataArray'' 
['' 
$num''  
]''  !
;''! "
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// «
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_67a @
:A B
AbstractTestCaseC S
{ 
public 

class 
	Container 
{ 
public 
float 
containerOne !
;! "
} 
public 

override 
void 
Bad 
( 
) 
{   
float!! 
data!! 
;!! 
data## 
=## 
(## 
float## 
)## 
(## 
float## 
.## 
MaxValue## %
*##& '
$num##( +
*##, -
(##. /
new##/ 2
Random##3 9
(##9 :
)##: ;
.##; <

NextDouble##< F
(##F G
)##G H
-##H I
$num##I L
)##L M
)##M N
;##N O
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *F
:CWE197_Numeric_Truncation_Error__float_random_to_short_67b&& B
.&&B C
BadSink&&C J
(&&J K
dataContainer&&K X
)&&Z [
;&&[ \
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
float22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *F
:CWE197_Numeric_Truncation_Error__float_random_to_short_67b77 B
.77B C
GoodG2BSink77C N
(77N O
dataContainer77O \
)77^ _
;77_ `
}88 
}:: 
};; ˜
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE197_Numeric_Truncation_Error__float_random_to_short_67a Y
.Y Z
	ContainerZ c
dataContainerd q
)r s
{ 
float 
data 
= 
dataContainer "
." #
containerOne# /
;/ 0
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #F
:CWE197_Numeric_Truncation_Error__float_random_to_short_67a%%# ]
.%%] ^
	Container%%^ g
dataContainer%%h u
)%%v w
{&& 
float'' 
data'' 
='' 
dataContainer'' "
.''" #
containerOne''# /
;''/ 0
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ≈
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_68a @
:A B
AbstractTestCaseC S
{ 
public 

static 
float 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N OF
:CWE197_Numeric_Truncation_Error__float_random_to_short_68b B
.B C
BadSinkC J
(J K
)K L
;L M
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, F
:CWE197_Numeric_Truncation_Error__float_random_to_short_68b-- B
.--B C
GoodG2BSink--C N
(--N O
)--O P
;--P Q
}.. 
}00 
}11 Ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_68b @
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
float 
data 
= F
:CWE197_Numeric_Truncation_Error__float_random_to_short_68a O
.O P
dataP T
;T U
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
float&& 
data&& 
=&& F
:CWE197_Numeric_Truncation_Error__float_random_to_short_68a&& O
.&&O P
data&&P T
;&&T U
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. Ÿ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_71a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N OF
:CWE197_Numeric_Truncation_Error__float_random_to_short_71b B
.B C
BadSinkC J
(J K
(K L
ObjectL R
)R S
dataS W
)Y Z
;Z [
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
float++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- F
:CWE197_Numeric_Truncation_Error__float_random_to_short_71b.. B
...B C
GoodG2BSink..C N
(..N O
(..O P
Object..P V
)..V W
data..W [
)..] ^
;..^ _
}// 
}11 
}22 «
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
float 
data 
= 
( 
float 
) 

dataObject &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 

dataObject(( &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ˘
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_72a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #F
:CWE197_Numeric_Truncation_Error__float_random_to_short_72b## B
.##B C
BadSink##C J
(##J K
dataHashtable##K X
)##Z [
;##[ \
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
float// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #F
:CWE197_Numeric_Truncation_Error__float_random_to_short_72b66 B
.66B C
GoodG2BSink66C N
(66N O
dataHashtable66O \
)66^ _
;66_ `
}77 
}99 
}:: π
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
float 
data 
= 
( 
float 
) 
dataHashtable *
[* +
$num+ ,
], -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
float(( 
data(( 
=(( 
((( 
float(( 
)(( 
dataHashtable(( *
[((* +
$num((+ ,
]((, -
;((- .
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ˘
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_73a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O

LinkedList   
<   
float   
>   
dataLinkedList   (
=  ) *
new  + .

LinkedList  / 9
<  9 :
float  : ?
>  ? @
(  @ A
)  A B
;  B C
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %F
:CWE197_Numeric_Truncation_Error__float_random_to_short_73b$$ B
.$$B C
BadSink$$C J
($$J K
dataLinkedList$$K Y
)$$[ \
;$$\ ]
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
float00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
float33 
>33 
dataLinkedList33 (
=33) *
new33+ .

LinkedList33/ 9
<339 :
float33: ?
>33? @
(33@ A
)33A B
;33B C
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %F
:CWE197_Numeric_Truncation_Error__float_random_to_short_73b77 B
.77B C
GoodG2BSink77C N
(77N O
dataLinkedList77O ]
)77_ `
;77` a
}88 
}:: 
};; Â
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
float* /
>/ 0
dataLinkedList1 ?
)@ A
{ 
float 
data 
= 
dataLinkedList #
.# $
Last$ (
.( )
Value) .
;. /
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
float&&. 3
>&&3 4
dataLinkedList&&5 C
)&&D E
{'' 
float(( 
data(( 
=(( 
dataLinkedList(( #
.((# $
Last(($ (
.((( )
Value(() .
;((. /
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ß
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_74a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N O

Dictionary 
< 
int 
, 
float 
> 
dataDictionary ,
=- .
new/ 2

Dictionary3 =
<= >
int> A
,A B
floatB G
>G H
(H I
)I J
;J K
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $F
:CWE197_Numeric_Truncation_Error__float_random_to_short_74b## B
.##B C
BadSink##C J
(##J K
dataDictionary##K Y
)##[ \
;##\ ]
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
float// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
float22 
>22 
dataDictionary22 ,
=22- .
new22/ 2

Dictionary223 =
<22= >
int22> A
,22A B
float22B G
>22G H
(22H I
)22I J
;22J K
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $F
:CWE197_Numeric_Truncation_Error__float_random_to_short_74b66 B
.66B C
GoodG2BSink66C N
(66N O
dataDictionary66O ]
)66_ `
;66` a
}77 
}99 
}:: ˇ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
float. 3
>3 4
dataDictionary5 C
)D E
{ 
float 
data 
= 
dataDictionary #
[# $
$num$ %
]% &
;& '
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
float&&2 7
>&&7 8
dataDictionary&&9 G
)&&H I
{'' 
float(( 
data(( 
=(( 
dataDictionary(( #
[((# $
$num(($ %
]((% &
;((& '
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 «"
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_75a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data   
=   
(   
float   
)   
(   
float   
.   
MaxValue   %
*  & '
$num  ( +
*  , -
(  . /
new  / 2
Random  3 9
(  9 :
)  : ;
.  ; <

NextDouble  < F
(  F G
)  G H
-  H I
$num  I L
)  L M
)  M N
;  N O
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** F
:CWE197_Numeric_Truncation_Error__float_random_to_short_75b++ F
.++F G
BadSink++G N
(++N O
dataSerialized++O ]
)++_ `
;++` a
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
float<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH F
:CWE197_Numeric_Truncation_Error__float_random_to_short_75bII F
.IIF G
GoodG2BSinkIIG R
(IIR S
dataSerializedIIS a
)IIc d
;IId e
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR Â!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_75b @
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
float   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
float&& 
)&& 
binForm&& %
.&&% &
Deserialize&&& 1
(&&1 2
	memStream&&2 ;
)&&; <
;&&< =
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
float:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
float@@ 
)@@ 
binForm@@ %
.@@% &
Deserialize@@& 1
(@@1 2
	memStream@@2 ;
)@@; <
;@@< =
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Ö
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__float_random_to_short_81a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
float 
data 
; 
data 
= 
( 
float 
) 
( 
float 
. 
MaxValue %
*& '
$num( +
*, -
(. /
new/ 2
Random3 9
(9 :
): ;
.; <

NextDouble< F
(F G
)G H
-H I
$numI L
)L M
)M N
;N OJ
>CWE197_Numeric_Truncation_Error__float_random_to_short_81_base F

baseObjectG Q
=R S
newT WJ
=CWE197_Numeric_Truncation_Error__float_random_to_short_81_bad	X ï
(
ï ñ
)
ñ ó
;
ó ò

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
float,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. J
>CWE197_Numeric_Truncation_Error__float_random_to_short_81_base// F

baseObject//G Q
=//R S
new//T WN
ACWE197_Numeric_Truncation_Error__float_random_to_short_81_goodG2B	//X ô
(
//ô ö
)
//ö õ
;
//õ ú

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 å
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__float_random_to_short_81_bad C
:D EK
>CWE197_Numeric_Truncation_Error__float_random_to_short_81_base	F Ñ
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ı
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 J
>CWE197_Numeric_Truncation_Error__float_random_to_short_81_base M
{ 
public 

abstract 
void 
Action 
(  
float  %
data& *
)+ ,
;, -
} 
} î
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__float_random_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__float_random_to_short_81_goodG2B G
:H IK
>CWE197_Numeric_Truncation_Error__float_random_to_short_81_base	J à
{ 
public 

override 
void 
Action 
(  
float  %
data& *
)+ ,
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" å
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_01 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
{AA 	
IOCC 
.CC 
	WriteLineCC 
(CC 
(CC 
byteCC 
)CC 
dataCC #
)CC# $
;CC$ %
}DD 	
}EE 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
)NN 
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
}YY 
}ZZ ˆ%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_02 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
falseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
truejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ €&
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_03 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
$numUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
$numjj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ÿ(
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_04 A
:B C
AbstractTestCaseD T
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
String.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
new00/ 2
	TcpClient003 <
(00< =
$str00= O
,00O P
$num00Q V
)00V W
)00W X
{11 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
tcpConn33B I
.33I J
	GetStream33J S
(33S T
)33T U
)33U V
)33V W
{44 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
byteSS 
)SS 
dataSS #
)SS# $
;SS$ %
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
PRIVATE_CONST_FALSE\\ 
)\\  
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
byteii 
)ii 
dataii #
)ii# $
;ii$ %
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
PRIVATE_CONST_TRUEqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
byte~~ 
)~~ 
data~~ #
)~~# $
;~~$ %
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ è(
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_05 A
:B C
AbstractTestCaseD T
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
String.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
new00/ 2
	TcpClient003 <
(00< =
$str00= O
,00O P
$num00Q V
)00V W
)00W X
{11 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
tcpConn33B I
.33I J
	GetStream33J S
(33S T
)33T U
)33U V
)33V W
{44 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
byteSS 
)SS 
dataSS #
)SS# $
;SS$ %
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
privateFalse\\ 
)\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
byteii 
)ii 
dataii #
)ii# $
;ii$ %
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
privateTrueqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
byte~~ 
)~~ 
data~~ #
)~~# $
;~~$ %
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ Æ(
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_06 A
:B C
AbstractTestCaseD T
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
String-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using// 
(// 
	TcpClient// $
tcpConn//% ,
=//- .
new/// 2
	TcpClient//3 <
(//< =
$str//= O
,//O P
$num//Q V
)//V W
)//W X
{00 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
tcpConn22B I
.22I J
	GetStream22J S
(22S T
)22T U
)22U V
)22V W
{33 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
byteRR 
)RR 
dataRR #
)RR# $
;RR$ %
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
PRIVATE_CONST_FIVE[[ 
!=[[ !
$num[[" #
)[[# $
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
PRIVATE_CONST_FIVEpp 
==pp !
$numpp" #
)pp# $
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
byte}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ˇ'
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_07 A
:B C
AbstractTestCaseD T
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
String-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using// 
(// 
	TcpClient// $
tcpConn//% ,
=//- .
new/// 2
	TcpClient//3 <
(//< =
$str//= O
,//O P
$num//Q V
)//V W
)//W X
{00 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
tcpConn22B I
.22I J
	GetStream22J S
(22S T
)22T U
)22U V
)22V W
{33 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
byteRR 
)RR 
dataRR #
)RR# $
;RR$ %
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
privateFive[[ 
!=[[ 
$num[[ 
)[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
privateFivepp 
==pp 
$numpp 
)pp 
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
byte}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ÿ*
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_08 A
:B C
AbstractTestCaseD T
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
String55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using77 
(77 
	TcpClient77 $
tcpConn77% ,
=77- .
new77/ 2
	TcpClient773 <
(77< =
$str77= O
,77O P
$num77Q V
)77V W
)77W X
{88 
using:: 
(:: 
StreamReader:: +
sr::, .
=::/ 0
new::1 4
StreamReader::5 A
(::A B
tcpConn::B I
.::I J
	GetStream::J S
(::S T
)::T U
)::U V
)::V W
{;; 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
byteZZ 
)ZZ 
dataZZ #
)ZZ# $
;ZZ$ %
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
intbb 
databb 
;bb 
ifcc 

(cc 
PrivateReturnsFalsecc 
(cc  
)cc  !
)cc! "
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
elseii 
{jj 	
datall 
=ll 
$numll 
;ll 
}mm 	
{nn 	
IOpp 
.pp 
	WriteLinepp 
(pp 
(pp 
bytepp 
)pp 
datapp #
)pp# $
;pp$ %
}qq 	
}rr 
privateuu 
voiduu 
GoodG2B2uu 
(uu 
)uu 
{vv 
intww 
dataww 
;ww 
ifxx 

(xx 
PrivateReturnsTruexx 
(xx 
)xx  
)xx  !
{yy 	
data{{ 
={{ 
$num{{ 
;{{ 
}|| 	
else}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
byte
ÖÖ 
)
ÖÖ 
data
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê É'
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_09 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU !
STATIC_READONLY_FALSEUU $
)UU$ %
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_TRUEjj #
)jj# $
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ Â&
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_10 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
staticFalseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticTruejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ‘'
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_11 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
StaticReturnsFalseUU !
(UU! "
)UU" #
)UU# $
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 
StaticReturnsTruejj  
(jj  !
)jj! "
)jj" #
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ Œ!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_12 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataGG 
=GG 
$numGG 
;GG 
}HH 	
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
byteKK 
)KK 
dataKK #
)KK# $
;KK$ %
}LL 	
}MM 
privateRR 
voidRR 
GoodG2BRR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU $
StaticReturnsTrueOrFalseUU '
(UU' (
)UU( )
)UU) *
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
elseZZ 
{[[ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
{__ 	
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
byteaa 
)aa 
dataaa #
)aa# $
;aa$ %
}bb 	
}cc 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
}jj 
}kk Ë'
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_13 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU  
STATIC_READONLY_FIVEUU #
!=UU$ &
$numUU' (
)UU( )
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_FIVEjj #
==jj$ &
$numjj' (
)jj( )
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ  '
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_14 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 

staticFiveUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticFivejj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ∑)
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_15 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
String(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using** 
(** 
	TcpClient** $
tcpConn**% ,
=**- .
new**/ 2
	TcpClient**3 <
(**< =
$str**= O
,**O P
$num**Q V
)**V W
)**W X
{++ 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
tcpConn--B I
.--I J
	GetStream--J S
(--S T
)--T U
)--U V
)--V W
{.. 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
breakDD 
;DD 
defaultEE 
:EE 
dataHH 
=HH 
$numHH 
;HH 
breakII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
byteMM 
)MM 
dataMM #
)MM# $
;MM$ %
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
=UU 
$numUU 
;UU 
switchVV 
(VV 
$numVV 
)VV 
{WW 	
caseXX 
$numXX 
:XX 
data[[ 
=[[ 
$num[[ 
;[[ 
break\\ 
;\\ 
default]] 
:]] 
data__ 
=__ 
$num__ 
;__ 
break`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
=kk 
$numkk 
;kk 
switchll 
(ll 
$numll 
)ll 
{mm 	
casenn 
$numnn 
:nn 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
defaultrr 
:rr 
datauu 
=uu 
$numuu 
;uu 
breakvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
bytezz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
public~~ 

override~~ 
void~~ 
Good~~ 
(~~ 
)~~ 
{ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodG2B2
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ í
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_16 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
breakCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
whilePP 
(PP 
truePP 
)PP 
{QQ 	
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B^^ 
(^^ 
)^^ 
;^^ 
}__ 
}aa 
}bb Ç!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_17 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
forAA 
(AA 
intAA 
iAA 
=AA 
$numAA 
;AA 
iAA 
<AA 
$numAA 
;AA 
iAA  
++AA  "
)AA" #
{BB 	
{CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
byteEE "
)EE" #
dataEE# '
)EE' (
;EE( )
}FF 
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
forRR 
(RR 
intRR 
iRR 
=RR 
$numRR 
;RR 
iRR 
<RR 
$numRR 
;RR 
iRR  
++RR  "
)RR" #
{SS 	
{TT 
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV "
)VV" #
dataVV# '
)VV' (
;VV( )
}WW 
}XX 	
}YY 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
}`` 
}aa Å4
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_21 A
:B C
AbstractTestCaseD T
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private++ 
int++ 

Bad_source++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
String55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using77 
(77 
	TcpClient77 $
tcpConn77% ,
=77- .
new77/ 2
	TcpClient773 <
(77< =
$str77= O
,77O P
$num77Q V
)77V W
)77W X
{88 
using:: 
(:: 
StreamReader:: +
sr::, .
=::/ 0
new::1 4
StreamReader::5 A
(::A B
tcpConn::B I
.::I J
	GetStream::J S
(::S T
)::T U
)::U V
)::V W
{;; 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
returnXX 
dataXX 
;XX 
}YY 
private\\ 
bool\\ 
goodG2B1_private\\ !
=\\" #
false\\$ )
;\\) *
private]] 
bool]] 
GoodG2B2_private]] !
=]]" #
false]]$ )
;]]) *
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
privateff 
voidff 
GoodG2B1ff 
(ff 
)ff 
{gg 
inthh 
datahh 
;hh 
goodG2B1_privateii 
=ii 
falseii  
;ii  !
datajj 
=jj 
GoodG2B1_sourcejj 
(jj 
)jj  
;jj  !
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privateqq 
intqq 
GoodG2B1_sourceqq 
(qq  
)qq  !
{rr 
intss 
datass 
=ss 
$numss 
;ss 
iftt 

(tt 
goodG2B1_privatett 
)tt 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
return 
data 
; 
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
int
ÖÖ 
data
ÖÖ 
;
ÖÖ 
GoodG2B2_private
ÜÜ 
=
ÜÜ 
true
ÜÜ 
;
ÜÜ  
data
áá 
=
áá 
GoodG2B2_source
áá 
(
áá 
)
áá  
;
áá  !
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
byte
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
éé 
int
éé 
GoodG2B2_source
éé 
(
éé  
)
éé  !
{
èè 
int
êê 
data
êê 
=
êê 
$num
êê 
;
êê 
if
ëë 

(
ëë 
GoodG2B2_private
ëë 
)
ëë 
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
else
ññ 
{
óó 	
data
öö 
=
öö 
$num
öö 
;
öö 
}
õõ 	
return
úú 
data
úú 
;
úú 
}
ùù 
}üü 
}†† ®
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22a B
:C D
AbstractTestCaseE U
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22b!! K
.!!K L
	BadSource!!L U
(!!U V
)!!V W
;!!W X
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22b88 K
.88K L
GoodG2B1Source88L Z
(88Z [
)88[ \
;88\ ]
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22bDD K
.DDK L
GoodG2B2SourceDDL Z
(DDZ [
)DD[ \
;DD\ ]
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ı"
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22b B
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if   

(   H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22a   H
.  H I
badPublicStatic  I X
)  X Y
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
returnJJ 
dataJJ 
;JJ 
}KK 
publicPP 

staticPP 
intPP 
GoodG2B1SourcePP $
(PP$ %
)PP% &
{QQ 
intRR 
dataRR 
;RR 
ifSS 

(SS H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22aSS H
.SSH I 
goodG2B1PublicStaticSSI ]
)SS] ^
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data\\ 
=\\ 
$num\\ 
;\\ 
}]] 	
return^^ 
data^^ 
;^^ 
}__ 
publicbb 

staticbb 
intbb 
GoodG2B2Sourcebb $
(bb$ %
)bb% &
{cc 
intdd 
datadd 
;dd 
ifee 

(ee H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22aee H
.eeH I 
GoodG2B2PublicStaticeeI ]
)ee] ^
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
returnpp 
datapp 
;pp 
}qq 
}ss 
}tt ™!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_31 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
dataCopy   
;   
{!! 	
int"" 
data"" 
;"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
String(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using** 
(** 
	TcpClient** $
tcpConn**% ,
=**- .
new**/ 2
	TcpClient**3 <
(**< =
$str**= O
,**O P
$num**Q V
)**V W
)**W X
{++ 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
tcpConn--B I
.--I J
	GetStream--J S
(--S T
)--T U
)--U V
)--V W
{.. 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
dataCopyDD 
=DD 
dataDD 
;DD 
}EE 	
{FF 	
intGG 
dataGG 
=GG 
dataCopyGG 
;GG  
{HH 
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
(JJ 
byteJJ "
)JJ" #
dataJJ# '
)JJ' (
;JJ( )
}KK 
}LL 	
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
intXX 
dataCopyXX 
;XX 
{YY 	
intZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
dataCopy]] 
=]] 
data]] 
;]] 
}^^ 	
{__ 	
int`` 
data`` 
=`` 
dataCopy`` 
;``  
{aa 
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc "
)cc" #
datacc# '
)cc' (
;cc( )
}dd 
}ee 	
}ff 
}hh 
}ii Æ!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_41 A
:B C
AbstractTestCaseD T
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
byte   
)   
data   #
)  # $
;  $ %
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
data'' 
='' 
int'' 
.'' 
MinValue'' 
;'' 
{)) 	
try** 
{++ 
String,, 
stringNumber,, #
=,,$ %
$str,,& (
;,,( )
using.. 
(.. 
	TcpClient..  
tcpConn..! (
=..) *
new..+ .
	TcpClient../ 8
(..8 9
$str..9 K
,..K L
$num..M R
)..R S
)..S T
{// 
using11 
(11 
StreamReader11 '
sr11( *
=11+ ,
new11- 0
StreamReader111 =
(11= >
tcpConn11> E
.11E F
	GetStream11F O
(11O P
)11P Q
)11Q R
)11R S
{22 
stringNumber44 $
=44% &
sr44' )
.44) *
ReadLine44* 2
(442 3
)443 4
;444 5
}55 
}66 
if77 
(77 
stringNumber77  
!=77! #
null77$ (
)77( )
{88 
try99 
{:: 
data;; 
=;; 
int;; "
.;;" #
Parse;;# (
(;;( )
stringNumber;;) 5
.;;5 6
Trim;;6 :
(;;: ;
);;; <
);;< =
;;;= >
}<< 
catch== 
(== 
FormatException== )
exceptNumberFormat==* <
)==< =
{>> 
IO?? 
.?? 
Logger?? !
.??! "
Log??" %
(??% &
NLog??& *
.??* +
LogLevel??+ 3
.??3 4
Warn??4 8
,??8 9
exceptNumberFormat??: L
,??L M
$str	??N Ä
)
??Ä Å
;
??Å Ç
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC 
exceptIOCC '
)CC' (
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
exceptIOEE2 :
,EE: ;
$strEE< W
)EEW X
;EEX Y
}FF 
}GG 	
BadSinkHH 
(HH 
dataHH 
)HH 
;HH 
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateQQ 
staticQQ 
voidQQ 
GoodG2BSinkQQ #
(QQ# $
intQQ$ '
dataQQ( ,
)QQ- .
{RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
int\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
GoodG2BSink__ 
(__ 
data__ 
)__ 
;__ 
}`` 
}bb 
}cc ò"
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_42 A
:B C
AbstractTestCaseD T
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
String$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	
return@@ 
data@@ 
;@@ 
}AA 
publicDD 

overrideDD 
voidDD 
BadDD 
(DD 
)DD 
{EE 
intFF 
dataFF 
=FF 
	BadSourceFF 
(FF 
)FF 
;FF 
{GG 	
IOII 
.II 
	WriteLineII 
(II 
(II 
byteII 
)II 
dataII #
)II# $
;II$ %
}JJ 	
}KK 
privateNN 
staticNN 
intNN 
GoodG2BSourceNN $
(NN$ %
)NN% &
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
returnSS 
dataSS 
;SS 
}TT 
privateWW 
staticWW 
voidWW 
GoodG2BWW 
(WW  
)WW  !
{XX 
intYY 
dataYY 
=YY 
GoodG2BSourceYY  
(YY  !
)YY! "
;YY" #
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ﬁ#
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_45 A
:B C
AbstractTestCaseD T
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
int"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
byte%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;-- 
{// 	
try00 
{11 
String22 
stringNumber22 #
=22$ %
$str22& (
;22( )
using44 
(44 
	TcpClient44  
tcpConn44! (
=44) *
new44+ .
	TcpClient44/ 8
(448 9
$str449 K
,44K L
$num44M R
)44R S
)44S T
{55 
using77 
(77 
StreamReader77 '
sr77( *
=77+ ,
new77- 0
StreamReader771 =
(77= >
tcpConn77> E
.77E F
	GetStream77F O
(77O P
)77P Q
)77Q R
)77R S
{88 
stringNumber:: $
=::% &
sr::' )
.::) *
ReadLine::* 2
(::2 3
)::3 4
;::4 5
};; 
}<< 
if== 
(== 
stringNumber==  
!===! #
null==$ (
)==( )
{>> 
try?? 
{@@ 
dataAA 
=AA 
intAA "
.AA" #
ParseAA# (
(AA( )
stringNumberAA) 5
.AA5 6
TrimAA6 :
(AA: ;
)AA; <
)AA< =
;AA= >
}BB 
catchCC 
(CC 
FormatExceptionCC )
exceptNumberFormatCC* <
)CC< =
{DD 
IOEE 
.EE 
LoggerEE !
.EE! "
LogEE" %
(EE% &
NLogEE& *
.EE* +
LogLevelEE+ 3
.EE3 4
WarnEE4 8
,EE8 9
exceptNumberFormatEE: L
,EEL M
$str	EEN Ä
)
EEÄ Å
;
EEÅ Ç
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
}MM 	
dataBadNN 
=NN 
dataNN 
;NN 
BadSinkOO 
(OO 
)OO 
;OO 
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateXX 
voidXX 
GoodG2BSinkXX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
=ZZ 
dataGoodG2BZZ 
;ZZ 
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2Bbb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
dataff 
=ff 
$numff 
;ff 
dataGoodG2Bgg 
=gg 
datagg 
;gg 
GoodG2BSinkhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll Ê
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_51a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
String$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_51b@@ D
.@@D E
BadSink@@E L
(@@L M
data@@M Q
)@@S T
;@@T U
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
voidJJ 
GoodG2BJJ 
(JJ 
)JJ 
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_51bOO D
.OOD E
GoodG2BSinkOOE P
(OOP Q
dataOOQ U
)OOW X
;OOX Y
}PP 
}RR 
}SS ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_51b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, Ê
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52bAA D
.AAD E
BadSinkAAE L
(AAL M
dataAAM Q
)AAR S
;AAS T
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52bPP D
.PPD E
GoodG2BSinkPPE P
(PPP Q
dataPPQ U
)PPV W
;PPW X
}QQ 
}SS 
}TT ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Ê
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53bAA D
.AAD E
BadSinkAAE L
(AAL M
dataAAM Q
)AAR S
;AAS T
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53bPP D
.PPD E
GoodG2BSinkPPE P
(PPP Q
dataPPQ U
)PPV W
;PPW X
}QQ 
}SS 
}TT ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53d B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Ê
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54bAA D
.AAD E
BadSinkAAE L
(AAL M
dataAAM Q
)AAR S
;AAS T
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54bPP D
.PPD E
GoodG2BSinkPPE P
(PPP Q
dataPPQ U
)PPV W
;PPW X
}QQ 
}SS 
}TT ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54d B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54e D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54e## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54e B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Ô
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_61a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_61b O
.O P
	BadSourceP Y
(Y Z
)Z [
;[ \
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_61b++ O
.++O P
GoodG2BSource++P ]
(++] ^
)++^ _
;++_ `
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 î
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_61b B
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
returnAA 
dataAA 
;AA 
}BB 
publicGG 

staticGG 
intGG 
GoodG2BSourceGG #
(GG# $
)GG$ %
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK 
returnLL 
dataLL 
;LL 
}MM 
}OO 
}PP ﬁ!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_66a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
intAA 
[AA 
]AA 
	dataArrayAA 
=AA 
newAA 
intAA !
[AA! "
$numAA" #
]AA# $
;AA$ %
	dataArrayBB 
[BB 
$numBB 
]BB 
=BB 
dataBB 
;BB H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_66bCC D
.CCD E
BadSinkCCE L
(CCL M
	dataArrayCCM V
)CCX Y
;CCY Z
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateMM 
staticMM 
voidMM 
GoodG2BMM 
(MM  
)MM  !
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
intRR 
[RR 
]RR 
	dataArrayRR 
=RR 
newRR 
intRR !
[RR! "
$numRR" #
]RR# $
;RR$ %
	dataArraySS 
[SS 
$numSS 
]SS 
=SS 
dataSS 
;SS H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_66bTT D
.TTD E
GoodG2BSinkTTE P
(TTP Q
	dataArrayTTQ Z
)TT\ ]
;TT] ^
}UU 
}WW 
}XX ı
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_66b B
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}//  "
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67a B
:C D
AbstractTestCaseE U
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%% 
{'' 	
try(( 
{)) 
String** 
stringNumber** #
=**$ %
$str**& (
;**( )
using,, 
(,, 
	TcpClient,,  
tcpConn,,! (
=,,) *
new,,+ .
	TcpClient,,/ 8
(,,8 9
$str,,9 K
,,,K L
$num,,M R
),,R S
),,S T
{-- 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
tcpConn//> E
.//E F
	GetStream//F O
(//O P
)//P Q
)//Q R
)//R S
{00 
stringNumber22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
if55 
(55 
stringNumber55  
!=55! #
null55$ (
)55( )
{66 
try77 
{88 
data99 
=99 
int99 "
.99" #
Parse99# (
(99( )
stringNumber99) 5
.995 6
Trim996 :
(99: ;
)99; <
)99< =
;99= >
}:: 
catch;; 
(;; 
FormatException;; )
exceptNumberFormat;;* <
);;< =
{<< 
IO== 
.== 
Logger== !
.==! "
Log==" %
(==% &
NLog==& *
.==* +
LogLevel==+ 3
.==3 4
Warn==4 8
,==8 9
exceptNumberFormat==: L
,==L M
$str	==N Ä
)
==Ä Å
;
==Å Ç
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
}EE 	
	ContainerFF 
dataContainerFF 
=FF  !
newFF" %
	ContainerFF& /
(FF/ 0
)FF0 1
;FF1 2
dataContainerGG 
.GG 
containerOneGG "
=GG# $
dataGG% )
;GG) *H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67bHH D
.HHD E
BadSinkHHE L
(HHL M
dataContainerHHM Z
)HH\ ]
;HH] ^
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
)RR  !
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
	ContainerWW 
dataContainerWW 
=WW  !
newWW" %
	ContainerWW& /
(WW/ 0
)WW0 1
;WW1 2
dataContainerXX 
.XX 
containerOneXX "
=XX# $
dataXX% )
;XX) *H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67bYY D
.YYD E
GoodG2BSinkYYE P
(YYP Q
dataContainerYYQ ^
)YY` a
;YYa b
}ZZ 
}\\ 
}]] ˘
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67b B
{ 
public 

static 
void 
BadSink 
( H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67a [
.[ \
	Container\ e
dataContainerf s
)t u
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67a%%# _
.%%_ `
	Container%%` i
dataContainer%%j w
)%%x y
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// Ã
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68a B
:C D
AbstractTestCaseE U
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68bAA D
.AAD E
BadSinkAAE L
(AAL M
)AAM N
;AAN O
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
dataNN 
=NN 
$numNN 
;NN H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68bOO D
.OOD E
GoodG2BSinkOOE P
(OOP Q
)OOQ R
;OOR S
}PP 
}RR 
}SS ±
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68b B
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68a O
.O P
dataP T
;T U
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68a&& O
.&&O P
data&&P T
;&&T U
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ﬁ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_71a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_71bAA D
.AAD E
BadSinkAAE L
(AAL M
(AAM N
ObjectAAN T
)AAT U
dataAAU Y
)AA[ \
;AA\ ]
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_71bPP D
.PPD E
GoodG2BSinkPPE P
(PPP Q
(PPQ R
ObjectPPR X
)PPX Y
dataPPY ]
)PP_ `
;PP` a
}QQ 
}SS 
}TT ¡
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_71b B
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ˛&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_72a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
	HashtableAA 
dataHashtableAA 
=AA  !
newAA" %
	HashtableAA& /
(AA/ 0
$numAA0 1
)AA1 2
;AA2 3
dataHashtableBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB !
)BB! "
;BB" #
dataHashtableCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC !
)CC! "
;CC" #
dataHashtableDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD !
)DD! "
;DD" #H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_72bEE D
.EED E
BadSinkEEE L
(EEL M
dataHashtableEEM Z
)EE\ ]
;EE] ^
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 
	HashtableTT 
dataHashtableTT 
=TT  !
newTT" %
	HashtableTT& /
(TT/ 0
$numTT0 1
)TT1 2
;TT2 3
dataHashtableUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU !
)UU! "
;UU" #
dataHashtableVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV !
)VV! "
;VV" #
dataHashtableWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW !
)WW! "
;WW" #H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_72bXX D
.XXD E
GoodG2BSinkXXE P
(XXP Q
dataHashtableXXQ ^
)XX` a
;XXa b
}YY 
}[[ 
}\\ ≥
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_72b B
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ˆ&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_73a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
String&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using(( 
((( 
	TcpClient((  
tcpConn((! (
=(() *
new((+ .
	TcpClient((/ 8
(((8 9
$str((9 K
,((K L
$num((M R
)((R S
)((S T
{)) 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
tcpConn++> E
.++E F
	GetStream++F O
(++O P
)++P Q
)++Q R
)++R S
{,, 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	

LinkedListBB 
<BB 
intBB 
>BB 
dataLinkedListBB &
=BB' (
newBB) ,

LinkedListBB- 7
<BB7 8
intBB8 ;
>BB; <
(BB< =
)BB= >
;BB> ?
dataLinkedListCC 
.CC 
AddLastCC 
(CC 
dataCC #
)CC# $
;CC$ %
dataLinkedListDD 
.DD 
AddLastDD 
(DD 
dataDD #
)DD# $
;DD$ %
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_73bFF D
.FFD E
BadSinkFFE L
(FFL M
dataLinkedListFFM [
)FF] ^
;FF^ _
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
}MM 
privatePP 
staticPP 
voidPP 
GoodG2BPP 
(PP  
)PP  !
{QQ 
intRR 
dataRR 
;RR 
dataTT 
=TT 
$numTT 
;TT 

LinkedListUU 
<UU 
intUU 
>UU 
dataLinkedListUU &
=UU' (
newUU) ,

LinkedListUU- 7
<UU7 8
intUU8 ;
>UU; <
(UU< =
)UU= >
;UU> ?
dataLinkedListVV 
.VV 
AddLastVV 
(VV 
dataVV #
)VV# $
;VV$ %
dataLinkedListWW 
.WW 
AddLastWW 
(WW 
dataWW #
)WW# $
;WW$ %
dataLinkedListXX 
.XX 
AddLastXX 
(XX 
dataXX #
)XX# $
;XX$ %H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_73bYY D
.YYD E
GoodG2BSinkYYE P
(YYP Q
dataLinkedListYYQ _
)YYa b
;YYb c
}ZZ 
}\\ 
}]] ﬂ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_73b B
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 §)
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_74a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	

DictionaryAA 
<AA 
intAA 
,AA 
intAA 
>AA 
dataDictionaryAA *
=AA+ ,
newAA- 0

DictionaryAA1 ;
<AA; <
intAA< ?
,AA? @
intAA@ C
>AAC D
(AAD E
)AAE F
;AAF G
dataDictionaryBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB "
)BB" #
;BB# $
dataDictionaryCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC "
)CC" #
;CC# $
dataDictionaryDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD "
)DD" #
;DD# $H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_74bEE D
.EED E
BadSinkEEE L
(EEL M
dataDictionaryEEM [
)EE] ^
;EE^ _
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 

DictionaryTT 
<TT 
intTT 
,TT 
intTT 
>TT 
dataDictionaryTT *
=TT+ ,
newTT- 0

DictionaryTT1 ;
<TT; <
intTT< ?
,TT? @
intTT@ C
>TTC D
(TTD E
)TTE F
;TTF G
dataDictionaryUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU "
)UU" #
;UU# $
dataDictionaryVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV "
)VV" #
;VV# $
dataDictionaryWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW "
)WW" #
;WW# $H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_74bXX D
.XXD E
GoodG2BSinkXXE P
(XXP Q
dataDictionaryXXQ _
)XXa b
;XXb c
}YY 
}[[ 
}\\ ˘
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_74b B
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ã0
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_75a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
String&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using(( 
((( 
	TcpClient((  
tcpConn((! (
=(() *
new((+ .
	TcpClient((/ 8
(((8 9
$str((9 K
,((K L
$num((M R
)((R S
)((S T
{)) 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
tcpConn++> E
.++E F
	GetStream++F O
(++O P
)++P Q
)++Q R
)++R S
{,, 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	
byteCC 
[CC 
]CC 
dataSerializedCC 
=CC 
nullCC  $
;CC$ %
tryDD 
{EE 	
BinaryFormatterFF 
bfFF 
=FF  
newFF! $
BinaryFormatterFF% 4
(FF4 5
)FF5 6
;FF6 7
usingGG 
(GG 
varGG 
msGG 
=GG 
newGG 
MemoryStreamGG  ,
(GG, -
)GG- .
)GG. /
{HH 
bfII 
.II 
	SerializeII 
(II 
msII 
,II  
dataII! %
)II% &
;II& '
dataSerializedJJ 
=JJ  
msJJ! #
.JJ# $
ToArrayJJ$ +
(JJ+ ,
)JJ, -
;JJ- .
}KK H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_75bLL H
.LLH I
BadSinkLLI P
(LLP Q
dataSerializedLLQ _
)LLa b
;LLb c
}MM 	
catchNN 
(NN "
SerializationExceptionNN %
exceptSerializeNN& 5
)NN5 6
{OO 	
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP 
.PP 
LogLevelPP '
.PP' (
WarnPP( ,
,PP, -
$strPP. X
,PPX Y
exceptSerializePPZ i
)PPi j
;PPj k
}QQ 	
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
int]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 
byteaa 
[aa 
]aa 
dataSerializedaa 
=aa 
nullaa  $
;aa$ %
trybb 
{cc 	
BinaryFormatterdd 
bfdd 
=dd  
newdd! $
BinaryFormatterdd% 4
(dd4 5
)dd5 6
;dd6 7
usingee 
(ee 
varee 
msee 
=ee 
newee 
MemoryStreamee  ,
(ee, -
)ee- .
)ee. /
{ff 
bfgg 
.gg 
	Serializegg 
(gg 
msgg 
,gg  
datagg! %
)gg% &
;gg& '
dataSerializedhh 
=hh  
mshh! #
.hh# $
ToArrayhh$ +
(hh+ ,
)hh, -
;hh- .
}ii H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_75bjj H
.jjH I
GoodG2BSinkjjI T
(jjT U
dataSerializedjjU c
)jje f
;jjf g
}kk 	
catchll 
(ll "
SerializationExceptionll %
exceptSerializell& 5
)ll5 6
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
$strnn. X
,nnX Y
exceptSerializennZ i
)nni j
;nnj k
}oo 	
}pp 
}rr 
}ss ﬂ!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_75b B
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN é 
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	L
@CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_baseAA H

baseObjectAAI S
=AAT U
newAAV YL
?CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_bad	AAZ ô
(
AAô ö
)
AAö õ
;
AAõ ú

baseObjectBB 
.BB 
ActionBB 
(BB 
dataBB 
)BB  
;BB  !
}CC 
publicFF 

overrideFF 
voidFF 
GoodFF 
(FF 
)FF 
{GG 
GoodG2BHH 
(HH 
)HH 
;HH 
}II 
privateLL 
voidLL 
GoodG2BLL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
dataPP 
=PP 
$numPP 
;PP L
@CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_baseQQ H

baseObjectQQI S
=QQT U
newQQV YP
CCWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_goodG2B	QQZ ù
(
QQù û
)
QQû ü
;
QQü †

baseObjectRR 
.RR 
ActionRR 
(RR 
dataRR 
)RR  
;RR  !
}SS 
}UU 
}VV è
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_bad E
:F GM
@CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_base	H à
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ˜
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 L
@CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_base O
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} ó
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class O
CCWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_goodG2B I
:J KM
@CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81_base	L å
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ê
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_01 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
{AA 	
IOCC 
.CC 
	WriteLineCC 
(CC 
(CC 
shortCC 
)CC  
dataCC  $
)CC$ %
;CC% &
}DD 	
}EE 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
)NN 
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
}YY 
}ZZ ˚%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_02 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
falseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
truejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ‡&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_03 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
$numUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
$numjj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ›(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_04 B
:C D
AbstractTestCaseE U
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
String.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
new00/ 2
	TcpClient003 <
(00< =
$str00= O
,00O P
$num00Q V
)00V W
)00W X
{11 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
tcpConn33B I
.33I J
	GetStream33J S
(33S T
)33T U
)33U V
)33V W
{44 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
shortSS 
)SS  
dataSS  $
)SS$ %
;SS% &
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
PRIVATE_CONST_FALSE\\ 
)\\  
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
shortii 
)ii  
dataii  $
)ii$ %
;ii% &
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
PRIVATE_CONST_TRUEqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
short~~ 
)~~  
data~~  $
)~~$ %
;~~% &
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ î(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_05 B
:C D
AbstractTestCaseE U
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
String.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using00 
(00 
	TcpClient00 $
tcpConn00% ,
=00- .
new00/ 2
	TcpClient003 <
(00< =
$str00= O
,00O P
$num00Q V
)00V W
)00W X
{11 
using33 
(33 
StreamReader33 +
sr33, .
=33/ 0
new331 4
StreamReader335 A
(33A B
tcpConn33B I
.33I J
	GetStream33J S
(33S T
)33T U
)33U V
)33V W
{44 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? -
exceptNumberFormat??. @
)??@ A
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
shortSS 
)SS  
dataSS  $
)SS$ %
;SS% &
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
privateFalse\\ 
)\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
shortii 
)ii  
dataii  $
)ii$ %
;ii% &
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
privateTrueqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
short~~ 
)~~  
data~~  $
)~~$ %
;~~% &
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ ≥(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_06 B
:C D
AbstractTestCaseE U
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
String-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using// 
(// 
	TcpClient// $
tcpConn//% ,
=//- .
new/// 2
	TcpClient//3 <
(//< =
$str//= O
,//O P
$num//Q V
)//V W
)//W X
{00 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
tcpConn22B I
.22I J
	GetStream22J S
(22S T
)22T U
)22U V
)22V W
{33 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
shortRR 
)RR  
dataRR  $
)RR$ %
;RR% &
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
PRIVATE_CONST_FIVE[[ 
!=[[ !
$num[[" #
)[[# $
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
PRIVATE_CONST_FIVEpp 
==pp !
$numpp" #
)pp# $
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
short}} 
)}}  
data}}  $
)}}$ %
;}}% &
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà Ñ(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_07 B
:C D
AbstractTestCaseE U
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
String-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using// 
(// 
	TcpClient// $
tcpConn//% ,
=//- .
new/// 2
	TcpClient//3 <
(//< =
$str//= O
,//O P
$num//Q V
)//V W
)//W X
{00 
using22 
(22 
StreamReader22 +
sr22, .
=22/ 0
new221 4
StreamReader225 A
(22A B
tcpConn22B I
.22I J
	GetStream22J S
(22S T
)22T U
)22U V
)22V W
{33 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> -
exceptNumberFormat>>. @
)>>@ A
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
shortRR 
)RR  
dataRR  $
)RR$ %
;RR% &
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
privateFive[[ 
!=[[ 
$num[[ 
)[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
privateFivepp 
==pp 
$numpp 
)pp 
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
short}} 
)}}  
data}}  $
)}}$ %
;}}% &
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ›*
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_08 B
:C D
AbstractTestCaseE U
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
String55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using77 
(77 
	TcpClient77 $
tcpConn77% ,
=77- .
new77/ 2
	TcpClient773 <
(77< =
$str77= O
,77O P
$num77Q V
)77V W
)77W X
{88 
using:: 
(:: 
StreamReader:: +
sr::, .
=::/ 0
new::1 4
StreamReader::5 A
(::A B
tcpConn::B I
.::I J
	GetStream::J S
(::S T
)::T U
)::U V
)::V W
{;; 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
shortZZ 
)ZZ  
dataZZ  $
)ZZ$ %
;ZZ% &
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
intbb 
databb 
;bb 
ifcc 

(cc 
PrivateReturnsFalsecc 
(cc  
)cc  !
)cc! "
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
elseii 
{jj 	
datall 
=ll 
$numll 
;ll 
}mm 	
{nn 	
IOpp 
.pp 
	WriteLinepp 
(pp 
(pp 
shortpp 
)pp  
datapp  $
)pp$ %
;pp% &
}qq 	
}rr 
privateuu 
voiduu 
GoodG2B2uu 
(uu 
)uu 
{vv 
intww 
dataww 
;ww 
ifxx 

(xx 
PrivateReturnsTruexx 
(xx 
)xx  
)xx  !
{yy 	
data{{ 
={{ 
$num{{ 
;{{ 
}|| 	
else}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
short
ÖÖ 
)
ÖÖ  
data
ÖÖ  $
)
ÖÖ$ %
;
ÖÖ% &
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê à'
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_09 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU !
STATIC_READONLY_FALSEUU $
)UU$ %
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_TRUEjj #
)jj# $
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ Í&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_10 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
staticFalseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticTruejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ Ÿ'
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_11 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
StaticReturnsFalseUU !
(UU! "
)UU" #
)UU# $
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 
StaticReturnsTruejj  
(jj  !
)jj! "
)jj" #
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ “!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_12 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataGG 
=GG 
$numGG 
;GG 
}HH 	
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
shortKK 
)KK  
dataKK  $
)KK$ %
;KK% &
}LL 	
}MM 
privateRR 
voidRR 
GoodG2BRR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU $
StaticReturnsTrueOrFalseUU '
(UU' (
)UU( )
)UU) *
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
elseZZ 
{[[ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
{__ 	
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
shortaa 
)aa  
dataaa  $
)aa$ %
;aa% &
}bb 	
}cc 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
}jj 
}kk Ì'
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_13 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU  
STATIC_READONLY_FIVEUU #
!=UU$ &
$numUU' (
)UU( )
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_FIVEjj #
==jj$ &
$numjj' (
)jj( )
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ œ'
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_14 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 

staticFiveUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticFivejj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ º)
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_15 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
String(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using** 
(** 
	TcpClient** $
tcpConn**% ,
=**- .
new**/ 2
	TcpClient**3 <
(**< =
$str**= O
,**O P
$num**Q V
)**V W
)**W X
{++ 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
tcpConn--B I
.--I J
	GetStream--J S
(--S T
)--T U
)--U V
)--V W
{.. 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
breakDD 
;DD 
defaultEE 
:EE 
dataHH 
=HH 
$numHH 
;HH 
breakII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
shortMM 
)MM  
dataMM  $
)MM$ %
;MM% &
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
=UU 
$numUU 
;UU 
switchVV 
(VV 
$numVV 
)VV 
{WW 	
caseXX 
$numXX 
:XX 
data[[ 
=[[ 
$num[[ 
;[[ 
break\\ 
;\\ 
default]] 
:]] 
data__ 
=__ 
$num__ 
;__ 
break`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
=kk 
$numkk 
;kk 
switchll 
(ll 
$numll 
)ll 
{mm 	
casenn 
$numnn 
:nn 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
defaultrr 
:rr 
datauu 
=uu 
$numuu 
;uu 
breakvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
shortzz 
)zz  
datazz  $
)zz$ %
;zz% &
}{{ 	
}|| 
public~~ 

override~~ 
void~~ 
Good~~ 
(~~ 
)~~ 
{ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodG2B2
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ ñ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_16 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
breakCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
whilePP 
(PP 
truePP 
)PP 
{QQ 	
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B^^ 
(^^ 
)^^ 
;^^ 
}__ 
}aa 
}bb Ü!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_17 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
forAA 
(AA 
intAA 
iAA 
=AA 
$numAA 
;AA 
iAA 
<AA 
$numAA 
;AA 
iAA  
++AA  "
)AA" #
{BB 	
{CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
shortEE #
)EE# $
dataEE$ (
)EE( )
;EE) *
}FF 
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
forRR 
(RR 
intRR 
iRR 
=RR 
$numRR 
;RR 
iRR 
<RR 
$numRR 
;RR 
iRR  
++RR  "
)RR" #
{SS 	
{TT 
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV #
)VV# $
dataVV$ (
)VV( )
;VV) *
}WW 
}XX 	
}YY 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
}`` 
}aa Ü4
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_21 B
:C D
AbstractTestCaseE U
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private++ 
int++ 

Bad_source++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
String55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using77 
(77 
	TcpClient77 $
tcpConn77% ,
=77- .
new77/ 2
	TcpClient773 <
(77< =
$str77= O
,77O P
$num77Q V
)77V W
)77W X
{88 
using:: 
(:: 
StreamReader:: +
sr::, .
=::/ 0
new::1 4
StreamReader::5 A
(::A B
tcpConn::B I
.::I J
	GetStream::J S
(::S T
)::T U
)::U V
)::V W
{;; 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF -
exceptNumberFormatFF. @
)FF@ A
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
returnXX 
dataXX 
;XX 
}YY 
private\\ 
bool\\ 
goodG2B1_private\\ !
=\\" #
false\\$ )
;\\) *
private]] 
bool]] 
GoodG2B2_private]] !
=]]" #
false]]$ )
;]]) *
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
privateff 
voidff 
GoodG2B1ff 
(ff 
)ff 
{gg 
inthh 
datahh 
;hh 
goodG2B1_privateii 
=ii 
falseii  
;ii  !
datajj 
=jj 
GoodG2B1_sourcejj 
(jj 
)jj  
;jj  !
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privateqq 
intqq 
GoodG2B1_sourceqq 
(qq  
)qq  !
{rr 
intss 
datass 
=ss 
$numss 
;ss 
iftt 

(tt 
goodG2B1_privatett 
)tt 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
return 
data 
; 
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
int
ÖÖ 
data
ÖÖ 
;
ÖÖ 
GoodG2B2_private
ÜÜ 
=
ÜÜ 
true
ÜÜ 
;
ÜÜ  
data
áá 
=
áá 
GoodG2B2_source
áá 
(
áá 
)
áá  
;
áá  !
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
éé 
int
éé 
GoodG2B2_source
éé 
(
éé  
)
éé  !
{
èè 
int
êê 
data
êê 
=
êê 
$num
êê 
;
êê 
if
ëë 

(
ëë 
GoodG2B2_private
ëë 
)
ëë 
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
else
ññ 
{
óó 	
data
öö 
=
öö 
$num
öö 
;
öö 
}
õõ 	
return
úú 
data
úú 
;
úú 
}
ùù 
}üü 
}†† ∞
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22a C
:D E
AbstractTestCaseF V
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22b!! L
.!!L M
	BadSource!!M V
(!!V W
)!!W X
;!!X Y
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22b88 L
.88L M
GoodG2B1Source88M [
(88[ \
)88\ ]
;88] ^
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22bDD L
.DDL M
GoodG2B2SourceDDM [
(DD[ \
)DD\ ]
;DD] ^
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ˙"
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22b C
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if   

(   I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22a   I
.  I J
badPublicStatic  J Y
)  Y Z
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
String'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using)) 
()) 
	TcpClient)) $
tcpConn))% ,
=))- .
new))/ 2
	TcpClient))3 <
())< =
$str))= O
,))O P
$num))Q V
)))V W
)))W X
{** 
using,, 
(,, 
StreamReader,, +
sr,,, .
=,,/ 0
new,,1 4
StreamReader,,5 A
(,,A B
tcpConn,,B I
.,,I J
	GetStream,,J S
(,,S T
),,T U
),,U V
),,V W
{-- 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 -
exceptNumberFormat88. @
)88@ A
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
returnJJ 
dataJJ 
;JJ 
}KK 
publicPP 

staticPP 
intPP 
GoodG2B1SourcePP $
(PP$ %
)PP% &
{QQ 
intRR 
dataRR 
;RR 
ifSS 

(SS I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22aSS I
.SSI J 
goodG2B1PublicStaticSSJ ^
)SS^ _
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data\\ 
=\\ 
$num\\ 
;\\ 
}]] 	
return^^ 
data^^ 
;^^ 
}__ 
publicbb 

staticbb 
intbb 
GoodG2B2Sourcebb $
(bb$ %
)bb% &
{cc 
intdd 
datadd 
;dd 
ifee 

(ee I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22aee I
.eeI J 
GoodG2B2PublicStaticeeJ ^
)ee^ _
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
returnpp 
datapp 
;pp 
}qq 
}ss 
}tt Æ!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_31 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
dataCopy   
;   
{!! 	
int"" 
data"" 
;"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
String(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using** 
(** 
	TcpClient** $
tcpConn**% ,
=**- .
new**/ 2
	TcpClient**3 <
(**< =
$str**= O
,**O P
$num**Q V
)**V W
)**W X
{++ 
using-- 
(-- 
StreamReader-- +
sr--, .
=--/ 0
new--1 4
StreamReader--5 A
(--A B
tcpConn--B I
.--I J
	GetStream--J S
(--S T
)--T U
)--U V
)--V W
{.. 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 -
exceptNumberFormat99. @
)99@ A
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
dataCopyDD 
=DD 
dataDD 
;DD 
}EE 	
{FF 	
intGG 
dataGG 
=GG 
dataCopyGG 
;GG  
{HH 
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
(JJ 
shortJJ #
)JJ# $
dataJJ$ (
)JJ( )
;JJ) *
}KK 
}LL 	
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
intXX 
dataCopyXX 
;XX 
{YY 	
intZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
dataCopy]] 
=]] 
data]] 
;]] 
}^^ 	
{__ 	
int`` 
data`` 
=`` 
dataCopy`` 
;``  
{aa 
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc #
)cc# $
datacc$ (
)cc( )
;cc) *
}dd 
}ee 	
}ff 
}hh 
}ii ≤!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_41 B
:C D
AbstractTestCaseE U
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
short   
)    
data    $
)  $ %
;  % &
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
data'' 
='' 
int'' 
.'' 
MinValue'' 
;'' 
{)) 	
try** 
{++ 
String,, 
stringNumber,, #
=,,$ %
$str,,& (
;,,( )
using.. 
(.. 
	TcpClient..  
tcpConn..! (
=..) *
new..+ .
	TcpClient../ 8
(..8 9
$str..9 K
,..K L
$num..M R
)..R S
)..S T
{// 
using11 
(11 
StreamReader11 '
sr11( *
=11+ ,
new11- 0
StreamReader111 =
(11= >
tcpConn11> E
.11E F
	GetStream11F O
(11O P
)11P Q
)11Q R
)11R S
{22 
stringNumber44 $
=44% &
sr44' )
.44) *
ReadLine44* 2
(442 3
)443 4
;444 5
}55 
}66 
if77 
(77 
stringNumber77  
!=77! #
null77$ (
)77( )
{88 
try99 
{:: 
data;; 
=;; 
int;; "
.;;" #
Parse;;# (
(;;( )
stringNumber;;) 5
.;;5 6
Trim;;6 :
(;;: ;
);;; <
);;< =
;;;= >
}<< 
catch== 
(== 
FormatException== )
exceptNumberFormat==* <
)==< =
{>> 
IO?? 
.?? 
Logger?? !
.??! "
Log??" %
(??% &
NLog??& *
.??* +
LogLevel??+ 3
.??3 4
Warn??4 8
,??8 9
exceptNumberFormat??: L
,??L M
$str	??N Ä
)
??Ä Å
;
??Å Ç
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC 
exceptIOCC '
)CC' (
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
exceptIOEE2 :
,EE: ;
$strEE< W
)EEW X
;EEX Y
}FF 
}GG 	
BadSinkHH 
(HH 
dataHH 
)HH 
;HH 
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateQQ 
staticQQ 
voidQQ 
GoodG2BSinkQQ #
(QQ# $
intQQ$ '
dataQQ( ,
)QQ- .
{RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
int\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
GoodG2BSink__ 
(__ 
data__ 
)__ 
;__ 
}`` 
}bb 
}cc ú"
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_42 B
:C D
AbstractTestCaseE U
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
String$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	
return@@ 
data@@ 
;@@ 
}AA 
publicDD 

overrideDD 
voidDD 
BadDD 
(DD 
)DD 
{EE 
intFF 
dataFF 
=FF 
	BadSourceFF 
(FF 
)FF 
;FF 
{GG 	
IOII 
.II 
	WriteLineII 
(II 
(II 
shortII 
)II  
dataII  $
)II$ %
;II% &
}JJ 	
}KK 
privateNN 
staticNN 
intNN 
GoodG2BSourceNN $
(NN$ %
)NN% &
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
returnSS 
dataSS 
;SS 
}TT 
privateWW 
staticWW 
voidWW 
GoodG2BWW 
(WW  
)WW  !
{XX 
intYY 
dataYY 
=YY 
GoodG2BSourceYY  
(YY  !
)YY! "
;YY" #
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ‚#
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_45 B
:C D
AbstractTestCaseE U
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
int"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
short%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;-- 
{// 	
try00 
{11 
String22 
stringNumber22 #
=22$ %
$str22& (
;22( )
using44 
(44 
	TcpClient44  
tcpConn44! (
=44) *
new44+ .
	TcpClient44/ 8
(448 9
$str449 K
,44K L
$num44M R
)44R S
)44S T
{55 
using77 
(77 
StreamReader77 '
sr77( *
=77+ ,
new77- 0
StreamReader771 =
(77= >
tcpConn77> E
.77E F
	GetStream77F O
(77O P
)77P Q
)77Q R
)77R S
{88 
stringNumber:: $
=::% &
sr::' )
.::) *
ReadLine::* 2
(::2 3
)::3 4
;::4 5
};; 
}<< 
if== 
(== 
stringNumber==  
!===! #
null==$ (
)==( )
{>> 
try?? 
{@@ 
dataAA 
=AA 
intAA "
.AA" #
ParseAA# (
(AA( )
stringNumberAA) 5
.AA5 6
TrimAA6 :
(AA: ;
)AA; <
)AA< =
;AA= >
}BB 
catchCC 
(CC 
FormatExceptionCC )
exceptNumberFormatCC* <
)CC< =
{DD 
IOEE 
.EE 
LoggerEE !
.EE! "
LogEE" %
(EE% &
NLogEE& *
.EE* +
LogLevelEE+ 3
.EE3 4
WarnEE4 8
,EE8 9
exceptNumberFormatEE: L
,EEL M
$str	EEN Ä
)
EEÄ Å
;
EEÅ Ç
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
}MM 	
dataBadNN 
=NN 
dataNN 
;NN 
BadSinkOO 
(OO 
)OO 
;OO 
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateXX 
voidXX 
GoodG2BSinkXX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
=ZZ 
dataGoodG2BZZ 
;ZZ 
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2Bbb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
dataff 
=ff 
$numff 
;ff 
dataGoodG2Bgg 
=gg 
datagg 
;gg 
GoodG2BSinkhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll Í
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_51a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
String$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using&& 
(&& 
	TcpClient&&  
tcpConn&&! (
=&&) *
new&&+ .
	TcpClient&&/ 8
(&&8 9
$str&&9 K
,&&K L
$num&&M R
)&&R S
)&&S T
{'' 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
tcpConn))> E
.))E F
	GetStream))F O
())O P
)))P Q
)))Q R
)))R S
{** 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 )
exceptNumberFormat55* <
)55< =
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_51b@@ E
.@@E F
BadSink@@F M
(@@M N
data@@N R
)@@T U
;@@U V
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
voidJJ 
GoodG2BJJ 
(JJ 
)JJ 
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_51bOO E
.OOE F
GoodG2BSinkOOF Q
(OOQ R
dataOOR V
)OOX Y
;OOY Z
}PP 
}RR 
}SS £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_51b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, Í
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52bAA E
.AAE F
BadSinkAAF M
(AAM N
dataAAN R
)AAS T
;AAT U
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52bPP E
.PPE F
GoodG2BSinkPPF Q
(PPQ R
dataPPR V
)PPW X
;PPX Y
}QQ 
}SS 
}TT ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52c C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Í
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53bAA E
.AAE F
BadSinkAAF M
(AAM N
dataAAN R
)AAS T
;AAT U
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53bPP E
.PPE F
GoodG2BSinkPPF Q
(PPQ R
dataPPR V
)PPW X
;PPX Y
}QQ 
}SS 
}TT ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53c C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53d C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Í
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54bAA E
.AAE F
BadSinkAAF M
(AAM N
dataAAN R
)AAS T
;AAT U
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54bPP E
.PPE F
GoodG2BSinkPPF Q
(PPQ R
dataPPR V
)PPW X
;PPX Y
}QQ 
}SS 
}TT ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54c C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54d C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54e E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54e## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54e C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ı
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_61a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_61b P
.P Q
	BadSourceQ Z
(Z [
)[ \
;\ ]
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_61b++ P
.++P Q
GoodG2BSource++Q ^
(++^ _
)++_ `
;++` a
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ñ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_61b C
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
returnAA 
dataAA 
;AA 
}BB 
publicGG 

staticGG 
intGG 
GoodG2BSourceGG #
(GG# $
)GG$ %
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK 
returnLL 
dataLL 
;LL 
}MM 
}OO 
}PP ‚!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_66a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
intAA 
[AA 
]AA 
	dataArrayAA 
=AA 
newAA 
intAA !
[AA! "
$numAA" #
]AA# $
;AA$ %
	dataArrayBB 
[BB 
$numBB 
]BB 
=BB 
dataBB 
;BB I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_66bCC E
.CCE F
BadSinkCCF M
(CCM N
	dataArrayCCN W
)CCY Z
;CCZ [
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateMM 
staticMM 
voidMM 
GoodG2BMM 
(MM  
)MM  !
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
intRR 
[RR 
]RR 
	dataArrayRR 
=RR 
newRR 
intRR !
[RR! "
$numRR" #
]RR# $
;RR$ %
	dataArraySS 
[SS 
$numSS 
]SS 
=SS 
dataSS 
;SS I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_66bTT E
.TTE F
GoodG2BSinkTTF Q
(TTQ R
	dataArrayTTR [
)TT] ^
;TT^ _
}UU 
}WW 
}XX ˘
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_66b C
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// Œ"
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67a C
:D E
AbstractTestCaseF V
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%% 
{'' 	
try(( 
{)) 
String** 
stringNumber** #
=**$ %
$str**& (
;**( )
using,, 
(,, 
	TcpClient,,  
tcpConn,,! (
=,,) *
new,,+ .
	TcpClient,,/ 8
(,,8 9
$str,,9 K
,,,K L
$num,,M R
),,R S
),,S T
{-- 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
tcpConn//> E
.//E F
	GetStream//F O
(//O P
)//P Q
)//Q R
)//R S
{00 
stringNumber22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
if55 
(55 
stringNumber55  
!=55! #
null55$ (
)55( )
{66 
try77 
{88 
data99 
=99 
int99 "
.99" #
Parse99# (
(99( )
stringNumber99) 5
.995 6
Trim996 :
(99: ;
)99; <
)99< =
;99= >
}:: 
catch;; 
(;; 
FormatException;; )
exceptNumberFormat;;* <
);;< =
{<< 
IO== 
.== 
Logger== !
.==! "
Log==" %
(==% &
NLog==& *
.==* +
LogLevel==+ 3
.==3 4
Warn==4 8
,==8 9
exceptNumberFormat==: L
,==L M
$str	==N Ä
)
==Ä Å
;
==Å Ç
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
}EE 	
	ContainerFF 
dataContainerFF 
=FF  !
newFF" %
	ContainerFF& /
(FF/ 0
)FF0 1
;FF1 2
dataContainerGG 
.GG 
containerOneGG "
=GG# $
dataGG% )
;GG) *I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67bHH E
.HHE F
BadSinkHHF M
(HHM N
dataContainerHHN [
)HH] ^
;HH^ _
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
)RR  !
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
	ContainerWW 
dataContainerWW 
=WW  !
newWW" %
	ContainerWW& /
(WW/ 0
)WW0 1
;WW1 2
dataContainerXX 
.XX 
containerOneXX "
=XX# $
dataXX% )
;XX) *I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67bYY E
.YYE F
GoodG2BSinkYYF Q
(YYQ R
dataContainerYYR _
)YYa b
;YYb c
}ZZ 
}\\ 
}]] ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67b C
{ 
public 

static 
void 
BadSink 
( I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67a \
.\ ]
	Container] f
dataContainerg t
)u v
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67a%%# `
.%%` a
	Container%%a j
dataContainer%%k x
)%%y z
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// –
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68a C
:D E
AbstractTestCaseF V
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68bAA E
.AAE F
BadSinkAAF M
(AAM N
)AAN O
;AAO P
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
dataNN 
=NN 
$numNN 
;NN I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68bOO E
.OOE F
GoodG2BSinkOOF Q
(OOQ R
)OOR S
;OOS T
}PP 
}RR 
}SS ∑
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68b C
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68a P
.P Q
dataQ U
;U V
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68a&& P
.&&P Q
data&&Q U
;&&U V
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ‚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_71a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_71bAA E
.AAE F
BadSinkAAF M
(AAM N
(AAN O
ObjectAAO U
)AAU V
dataAAV Z
)AA\ ]
;AA] ^
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_71bPP E
.PPE F
GoodG2BSinkPPF Q
(PPQ R
(PPR S
ObjectPPS Y
)PPY Z
dataPPZ ^
)PP` a
;PPa b
}QQ 
}SS 
}TT ≈
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_71b C
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 Ç'
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_72a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
	HashtableAA 
dataHashtableAA 
=AA  !
newAA" %
	HashtableAA& /
(AA/ 0
$numAA0 1
)AA1 2
;AA2 3
dataHashtableBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB !
)BB! "
;BB" #
dataHashtableCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC !
)CC! "
;CC" #
dataHashtableDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD !
)DD! "
;DD" #I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_72bEE E
.EEE F
BadSinkEEF M
(EEM N
dataHashtableEEN [
)EE] ^
;EE^ _
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 
	HashtableTT 
dataHashtableTT 
=TT  !
newTT" %
	HashtableTT& /
(TT/ 0
$numTT0 1
)TT1 2
;TT2 3
dataHashtableUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU !
)UU! "
;UU" #
dataHashtableVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV !
)VV! "
;VV" #
dataHashtableWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW !
)WW! "
;WW" #I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_72bXX E
.XXE F
GoodG2BSinkXXF Q
(XXQ R
dataHashtableXXR _
)XXa b
;XXb c
}YY 
}[[ 
}\\ ∑
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_72b C
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ˙&
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_73a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
String&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using(( 
((( 
	TcpClient((  
tcpConn((! (
=(() *
new((+ .
	TcpClient((/ 8
(((8 9
$str((9 K
,((K L
$num((M R
)((R S
)((S T
{)) 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
tcpConn++> E
.++E F
	GetStream++F O
(++O P
)++P Q
)++Q R
)++R S
{,, 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	

LinkedListBB 
<BB 
intBB 
>BB 
dataLinkedListBB &
=BB' (
newBB) ,

LinkedListBB- 7
<BB7 8
intBB8 ;
>BB; <
(BB< =
)BB= >
;BB> ?
dataLinkedListCC 
.CC 
AddLastCC 
(CC 
dataCC #
)CC# $
;CC$ %
dataLinkedListDD 
.DD 
AddLastDD 
(DD 
dataDD #
)DD# $
;DD$ %
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_73bFF E
.FFE F
BadSinkFFF M
(FFM N
dataLinkedListFFN \
)FF^ _
;FF_ `
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
}MM 
privatePP 
staticPP 
voidPP 
GoodG2BPP 
(PP  
)PP  !
{QQ 
intRR 
dataRR 
;RR 
dataTT 
=TT 
$numTT 
;TT 

LinkedListUU 
<UU 
intUU 
>UU 
dataLinkedListUU &
=UU' (
newUU) ,

LinkedListUU- 7
<UU7 8
intUU8 ;
>UU; <
(UU< =
)UU= >
;UU> ?
dataLinkedListVV 
.VV 
AddLastVV 
(VV 
dataVV #
)VV# $
;VV$ %
dataLinkedListWW 
.WW 
AddLastWW 
(WW 
dataWW #
)WW# $
;WW$ %
dataLinkedListXX 
.XX 
AddLastXX 
(XX 
dataXX #
)XX# $
;XX$ %I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_73bYY E
.YYE F
GoodG2BSinkYYF Q
(YYQ R
dataLinkedListYYR `
)YYb c
;YYc d
}ZZ 
}\\ 
}]] „
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_73b C
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ®)
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_74a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	

DictionaryAA 
<AA 
intAA 
,AA 
intAA 
>AA 
dataDictionaryAA *
=AA+ ,
newAA- 0

DictionaryAA1 ;
<AA; <
intAA< ?
,AA? @
intAA@ C
>AAC D
(AAD E
)AAE F
;AAF G
dataDictionaryBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB "
)BB" #
;BB# $
dataDictionaryCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC "
)CC" #
;CC# $
dataDictionaryDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD "
)DD" #
;DD# $I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_74bEE E
.EEE F
BadSinkEEF M
(EEM N
dataDictionaryEEN \
)EE^ _
;EE_ `
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 

DictionaryTT 
<TT 
intTT 
,TT 
intTT 
>TT 
dataDictionaryTT *
=TT+ ,
newTT- 0

DictionaryTT1 ;
<TT; <
intTT< ?
,TT? @
intTT@ C
>TTC D
(TTD E
)TTE F
;TTF G
dataDictionaryUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU "
)UU" #
;UU# $
dataDictionaryVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV "
)VV" #
;VV# $
dataDictionaryWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW "
)WW" #
;WW# $I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_74bXX E
.XXE F
GoodG2BSinkXXF Q
(XXQ R
dataDictionaryXXR `
)XXb c
;XXc d
}YY 
}[[ 
}\\ ˝
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_74b C
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 –0
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_75a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
String&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using(( 
((( 
	TcpClient((  
tcpConn((! (
=(() *
new((+ .
	TcpClient((/ 8
(((8 9
$str((9 K
,((K L
$num((M R
)((R S
)((S T
{)) 
using++ 
(++ 
StreamReader++ '
sr++( *
=+++ ,
new++- 0
StreamReader++1 =
(++= >
tcpConn++> E
.++E F
	GetStream++F O
(++O P
)++P Q
)++Q R
)++R S
{,, 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 )
exceptNumberFormat77* <
)77< =
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	
byteCC 
[CC 
]CC 
dataSerializedCC 
=CC 
nullCC  $
;CC$ %
tryDD 
{EE 	
BinaryFormatterFF 
bfFF 
=FF  
newFF! $
BinaryFormatterFF% 4
(FF4 5
)FF5 6
;FF6 7
usingGG 
(GG 
varGG 
msGG 
=GG 
newGG 
MemoryStreamGG  ,
(GG, -
)GG- .
)GG. /
{HH 
bfII 
.II 
	SerializeII 
(II 
msII 
,II  
dataII! %
)II% &
;II& '
dataSerializedJJ 
=JJ  
msJJ! #
.JJ# $
ToArrayJJ$ +
(JJ+ ,
)JJ, -
;JJ- .
}KK I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_75bLL I
.LLI J
BadSinkLLJ Q
(LLQ R
dataSerializedLLR `
)LLb c
;LLc d
}MM 	
catchNN 
(NN "
SerializationExceptionNN %
exceptSerializeNN& 5
)NN5 6
{OO 	
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP 
.PP 
LogLevelPP '
.PP' (
WarnPP( ,
,PP, -
$strPP. X
,PPX Y
exceptSerializePPZ i
)PPi j
;PPj k
}QQ 	
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
int]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 
byteaa 
[aa 
]aa 
dataSerializedaa 
=aa 
nullaa  $
;aa$ %
trybb 
{cc 	
BinaryFormatterdd 
bfdd 
=dd  
newdd! $
BinaryFormatterdd% 4
(dd4 5
)dd5 6
;dd6 7
usingee 
(ee 
varee 
msee 
=ee 
newee 
MemoryStreamee  ,
(ee, -
)ee- .
)ee. /
{ff 
bfgg 
.gg 
	Serializegg 
(gg 
msgg 
,gg  
datagg! %
)gg% &
;gg& '
dataSerializedhh 
=hh  
mshh! #
.hh# $
ToArrayhh$ +
(hh+ ,
)hh, -
;hh- .
}ii I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_75bjj I
.jjI J
GoodG2BSinkjjJ U
(jjU V
dataSerializedjjV d
)jjf g
;jjg h
}kk 	
catchll 
(ll "
SerializationExceptionll %
exceptSerializell& 5
)ll5 6
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
$strnn. X
,nnX Y
exceptSerializennZ i
)nni j
;nnj k
}oo 	
}pp 
}rr 
}ss „!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_75b C
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN î 
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
String%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using'' 
('' 
	TcpClient''  
tcpConn''! (
='') *
new''+ .
	TcpClient''/ 8
(''8 9
$str''9 K
,''K L
$num''M R
)''R S
)''S T
{(( 
using** 
(** 
StreamReader** '
sr**( *
=**+ ,
new**- 0
StreamReader**1 =
(**= >
tcpConn**> E
.**E F
	GetStream**F O
(**O P
)**P Q
)**Q R
)**R S
{++ 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 )
exceptNumberFormat66* <
)66< =
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	M
ACWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_baseAA I

baseObjectAAJ T
=AAU V
newAAW ZM
@CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_bad	AA[ õ
(
AAõ ú
)
AAú ù
;
AAù û

baseObjectBB 
.BB 
ActionBB 
(BB 
dataBB 
)BB  
;BB  !
}CC 
publicFF 

overrideFF 
voidFF 
GoodFF 
(FF 
)FF 
{GG 
GoodG2BHH 
(HH 
)HH 
;HH 
}II 
privateLL 
voidLL 
GoodG2BLL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
dataPP 
=PP 
$numPP 
;PP M
ACWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_baseQQ I

baseObjectQQJ T
=QQU V
newQQW ZQ
DCWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_goodG2B	QQ[ ü
(
QQü †
)
QQ† °
;
QQ° ¢

baseObjectRR 
.RR 
ActionRR 
(RR 
dataRR 
)RR  
;RR  !
}SS 
}UU 
}VV ì
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_bad F
:G HN
ACWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_base	I ä
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ˘
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 M
ACWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_base P
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} õ
«C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class P
DCWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_goodG2B J
:K LN
ACWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81_base	M é
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ∫ 
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_01 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
voidRR 
GoodG2BRR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
{WW 	
IOYY 
.YY 
	WriteLineYY 
(YY 
(YY 
byteYY 
)YY 
dataYY #
)YY# $
;YY$ %
}ZZ 	
}[[ 
}]] 
}^^ ∏)
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_02 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
falseYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
truenn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ù*
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_03 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
$numYY 
!=YY 
$numYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
$numnn 
==nn 
$numnn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ û,
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_04 >
:? @
AbstractTestCaseA Q
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private   
const   
bool   
PRIVATE_CONST_FALSE   *
=  + ,
false  - 2
;  2 3
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_TRUE&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
using.. 
(.. 
SqlConnection.. (

connection..) 3
=..4 5
IO..6 8
...8 9
GetDBConnection..9 H
(..H I
)..I J
)..J K
{// 

connection00 "
.00" #
Open00# '
(00' (
)00( )
;00) *
using22 
(22 

SqlCommand22 )
command22* 1
=222 3
new224 7

SqlCommand228 B
(22B C
null22C G
,22G H

connection22I S
)22S T
)22T U
{33 
command44 #
.44# $
CommandText44$ /
=440 1
$str442 U
;44U V
command55 #
.55# $
Prepare55$ +
(55+ ,
)55, -
;55- .
using66 !
(66" #
SqlDataReader66# 0
dr661 3
=664 5
command666 =
.66= >
ExecuteReader66> K
(66K L
)66L M
)66M N
{77 
string99  &
stringNumber99' 3
=994 5
dr996 8
.998 9
	GetString999 B
(99B C
$num99C D
)99D E
;99E F
if::  "
(::# $
stringNumber::$ 0
!=::1 3
null::4 8
)::8 9
{;;  !
try<<$ '
{==$ %
data>>( ,
=>>- .
int>>/ 2
.>>2 3
Parse>>3 8
(>>8 9
stringNumber>>9 E
.>>E F
Trim>>F J
(>>J K
)>>K L
)>>L M
;>>M N
}??$ %
catch@@$ )
(@@* +
FormatException@@+ :
exceptNumberFormat@@; M
)@@M N
{AA$ %
IOBB( *
.BB* +
LoggerBB+ 1
.BB1 2
LogBB2 5
(BB5 6
NLogBB6 :
.BB: ;
LogLevelBB; C
.BBC D
WarnBBD H
,BBH I
exceptNumberFormatBBJ \
,BB\ ]
$str	BB^ ê
)
BBê ë
;
BBë í
}CC$ %
}DD  !
}EE 
}FF 
}GG 
}HH 
catchII 
(II 
SqlExceptionII #
	exceptSqlII$ -
)II- .
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
	exceptSqlKK6 ?
,KK? @
$strKKA [
)KK[ \
;KK\ ]
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
if`` 

(`` 
PRIVATE_CONST_FALSE`` 
)``  
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
inttt 
datatt 
;tt 
ifuu 

(uu 
PRIVATE_CONST_TRUEuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ’+
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_05 >
:? @
AbstractTestCaseA Q
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private   
bool   
privateFalse   
=   
false    %
;  % &
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateTrue&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
using.. 
(.. 
SqlConnection.. (

connection..) 3
=..4 5
IO..6 8
...8 9
GetDBConnection..9 H
(..H I
)..I J
)..J K
{// 

connection00 "
.00" #
Open00# '
(00' (
)00( )
;00) *
using22 
(22 

SqlCommand22 )
command22* 1
=222 3
new224 7

SqlCommand228 B
(22B C
null22C G
,22G H

connection22I S
)22S T
)22T U
{33 
command44 #
.44# $
CommandText44$ /
=440 1
$str442 U
;44U V
command55 #
.55# $
Prepare55$ +
(55+ ,
)55, -
;55- .
using66 !
(66" #
SqlDataReader66# 0
dr661 3
=664 5
command666 =
.66= >
ExecuteReader66> K
(66K L
)66L M
)66M N
{77 
string99  &
stringNumber99' 3
=994 5
dr996 8
.998 9
	GetString999 B
(99B C
$num99C D
)99D E
;99E F
if::  "
(::# $
stringNumber::$ 0
!=::1 3
null::4 8
)::8 9
{;;  !
try<<$ '
{==$ %
data>>( ,
=>>- .
int>>/ 2
.>>2 3
Parse>>3 8
(>>8 9
stringNumber>>9 E
.>>E F
Trim>>F J
(>>J K
)>>K L
)>>L M
;>>M N
}??$ %
catch@@$ )
(@@* +
FormatException@@+ :
exceptNumberFormat@@; M
)@@M N
{AA$ %
IOBB( *
.BB* +
LoggerBB+ 1
.BB1 2
LogBB2 5
(BB5 6
NLogBB6 :
.BB: ;
LogLevelBB; C
.BBC D
WarnBBD H
,BBH I
exceptNumberFormatBBJ \
,BB\ ]
$str	BB^ ê
)
BBê ë
;
BBë í
}CC$ %
}DD  !
}EE 
}FF 
}GG 
}HH 
catchII 
(II 
SqlExceptionII #
	exceptSqlII$ -
)II- .
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
	exceptSqlKK6 ?
,KK? @
$strKKA [
)KK[ \
;KK\ ]
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
if`` 

(`` 
privateFalse`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
inttt 
datatt 
;tt 
ifuu 

(uu 
privateTrueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
data
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç Ù+
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_06 >
:? @
AbstractTestCaseA Q
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
PRIVATE_CONST_FIVE%% 
==%% !
$num%%" #
)%%# $
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{)) 
try** 
{++ 
using-- 
(-- 
SqlConnection-- (

connection--) 3
=--4 5
IO--6 8
.--8 9
GetDBConnection--9 H
(--H I
)--I J
)--J K
{.. 

connection// "
.//" #
Open//# '
(//' (
)//( )
;//) *
using11 
(11 

SqlCommand11 )
command11* 1
=112 3
new114 7

SqlCommand118 B
(11B C
null11C G
,11G H

connection11I S
)11S T
)11T U
{22 
command33 #
.33# $
CommandText33$ /
=330 1
$str332 U
;33U V
command44 #
.44# $
Prepare44$ +
(44+ ,
)44, -
;44- .
using55 !
(55" #
SqlDataReader55# 0
dr551 3
=554 5
command556 =
.55= >
ExecuteReader55> K
(55K L
)55L M
)55M N
{66 
string88  &
stringNumber88' 3
=884 5
dr886 8
.888 9
	GetString889 B
(88B C
$num88C D
)88D E
;88E F
if99  "
(99# $
stringNumber99$ 0
!=991 3
null994 8
)998 9
{::  !
try;;$ '
{<<$ %
data==( ,
===- .
int==/ 2
.==2 3
Parse==3 8
(==8 9
stringNumber==9 E
.==E F
Trim==F J
(==J K
)==K L
)==L M
;==M N
}>>$ %
catch??$ )
(??* +
FormatException??+ :
exceptNumberFormat??; M
)??M N
{@@$ %
IOAA( *
.AA* +
LoggerAA+ 1
.AA1 2
LogAA2 5
(AA5 6
NLogAA6 :
.AA: ;
LogLevelAA; C
.AAC D
WarnAAD H
,AAH I
exceptNumberFormatAAJ \
,AA\ ]
$str	AA^ ê
)
AAê ë
;
AAë í
}BB$ %
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH #
	exceptSqlHH$ -
)HH- .
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
	exceptSqlJJ6 ?
,JJ? @
$strJJA [
)JJ[ \
;JJ\ ]
}KK 
}LL 
}MM 	
elseNN 
{OO 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV 
)VV 
dataVV #
)VV# $
;VV$ %
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
if__ 

(__ 
PRIVATE_CONST_FIVE__ 
!=__ !
$num__" #
)__# $
{`` 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
bytell 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
intss 
datass 
;ss 
iftt 

(tt 
PRIVATE_CONST_FIVEtt 
==tt !
$numtt" #
)tt# $
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
elseyy 
{zz 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
byte
ÅÅ 
)
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
public
ÖÖ 

override
ÖÖ 
void
ÖÖ 
Good
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
GoodG2B1
áá 
(
áá 
)
áá 
;
áá 
GoodG2B2
àà 
(
àà 
)
àà 
;
àà 
}
ââ 
}ãã 
}åå ≈+
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_07 >
:? @
AbstractTestCaseA Q
{ 
private 
int 
privateFive 
= 
$num 
;  
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
privateFive%% 
==%% 
$num%% 
)%% 
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{)) 
try** 
{++ 
using-- 
(-- 
SqlConnection-- (

connection--) 3
=--4 5
IO--6 8
.--8 9
GetDBConnection--9 H
(--H I
)--I J
)--J K
{.. 

connection// "
.//" #
Open//# '
(//' (
)//( )
;//) *
using11 
(11 

SqlCommand11 )
command11* 1
=112 3
new114 7

SqlCommand118 B
(11B C
null11C G
,11G H

connection11I S
)11S T
)11T U
{22 
command33 #
.33# $
CommandText33$ /
=330 1
$str332 U
;33U V
command44 #
.44# $
Prepare44$ +
(44+ ,
)44, -
;44- .
using55 !
(55" #
SqlDataReader55# 0
dr551 3
=554 5
command556 =
.55= >
ExecuteReader55> K
(55K L
)55L M
)55M N
{66 
string88  &
stringNumber88' 3
=884 5
dr886 8
.888 9
	GetString889 B
(88B C
$num88C D
)88D E
;88E F
if99  "
(99# $
stringNumber99$ 0
!=991 3
null994 8
)998 9
{::  !
try;;$ '
{<<$ %
data==( ,
===- .
int==/ 2
.==2 3
Parse==3 8
(==8 9
stringNumber==9 E
.==E F
Trim==F J
(==J K
)==K L
)==L M
;==M N
}>>$ %
catch??$ )
(??* +
FormatException??+ :
exceptNumberFormat??; M
)??M N
{@@$ %
IOAA( *
.AA* +
LoggerAA+ 1
.AA1 2
LogAA2 5
(AA5 6
NLogAA6 :
.AA: ;
LogLevelAA; C
.AAC D
WarnAAD H
,AAH I
exceptNumberFormatAAJ \
,AA\ ]
$str	AA^ ê
)
AAê ë
;
AAë í
}BB$ %
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH #
	exceptSqlHH$ -
)HH- .
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
	exceptSqlJJ6 ?
,JJ? @
$strJJA [
)JJ[ \
;JJ\ ]
}KK 
}LL 
}MM 	
elseNN 
{OO 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV 
)VV 
dataVV #
)VV# $
;VV$ %
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
if__ 

(__ 
privateFive__ 
!=__ 
$num__ 
)__ 
{`` 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
bytell 
)ll 
datall #
)ll# $
;ll$ %
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
intss 
datass 
;ss 
iftt 

(tt 
privateFivett 
==tt 
$numtt 
)tt 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
elseyy 
{zz 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
byte
ÅÅ 
)
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
public
ÖÖ 

override
ÖÖ 
void
ÖÖ 
Good
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
GoodG2B1
áá 
(
áá 
)
áá 
;
áá 
GoodG2B2
àà 
(
àà 
)
àà 
;
àà 
}
ââ 
}ãã 
}åå å.
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_08 >
:? @
AbstractTestCaseA Q
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{   
return!! 
true!! 
;!! 
}"" 
private$$ 
static$$ 
bool$$ 
PrivateReturnsFalse$$ +
($$+ ,
)$$, -
{%% 
return&& 
false&& 
;&& 
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 
PrivateReturnsTrue-- 
(-- 
)--  
)--  !
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{11 
try22 
{33 
using55 
(55 
SqlConnection55 (

connection55) 3
=554 5
IO556 8
.558 9
GetDBConnection559 H
(55H I
)55I J
)55J K
{66 

connection77 "
.77" #
Open77# '
(77' (
)77( )
;77) *
using99 
(99 

SqlCommand99 )
command99* 1
=992 3
new994 7

SqlCommand998 B
(99B C
null99C G
,99G H

connection99I S
)99S T
)99T U
{:: 
command;; #
.;;# $
CommandText;;$ /
=;;0 1
$str;;2 U
;;;U V
command<< #
.<<# $
Prepare<<$ +
(<<+ ,
)<<, -
;<<- .
using== !
(==" #
SqlDataReader==# 0
dr==1 3
===4 5
command==6 =
.=== >
ExecuteReader==> K
(==K L
)==L M
)==M N
{>> 
string@@  &
stringNumber@@' 3
=@@4 5
dr@@6 8
.@@8 9
	GetString@@9 B
(@@B C
$num@@C D
)@@D E
;@@E F
ifAA  "
(AA# $
stringNumberAA$ 0
!=AA1 3
nullAA4 8
)AA8 9
{BB  !
tryCC$ '
{DD$ %
dataEE( ,
=EE- .
intEE/ 2
.EE2 3
ParseEE3 8
(EE8 9
stringNumberEE9 E
.EEE F
TrimEEF J
(EEJ K
)EEK L
)EEL M
;EEM N
}FF$ %
catchGG$ )
(GG* +
FormatExceptionGG+ :
exceptNumberFormatGG; M
)GGM N
{HH$ %
IOII( *
.II* +
LoggerII+ 1
.II1 2
LogII2 5
(II5 6
NLogII6 :
.II: ;
LogLevelII; C
.IIC D
WarnIID H
,IIH I
exceptNumberFormatIIJ \
,II\ ]
$str	II^ ê
)
IIê ë
;
IIë í
}JJ$ %
}KK  !
}LL 
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP #
	exceptSqlPP$ -
)PP- .
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR !
(RR! "
NLogRR" &
.RR& '
LogLevelRR' /
.RR/ 0
WarnRR0 4
,RR4 5
	exceptSqlRR6 ?
,RR? @
$strRRA [
)RR[ \
;RR\ ]
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
byte^^ 
)^^ 
data^^ #
)^^# $
;^^$ %
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
intff 
dataff 
;ff 
ifgg 

(gg 
PrivateReturnsFalsegg 
(gg  
)gg  !
)gg! "
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
bytett 
)tt 
datatt #
)tt# $
;tt$ %
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
int{{ 
data{{ 
;{{ 
if|| 

(|| 
PrivateReturnsTrue|| 
(|| 
)||  
)||  !
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
byte
ââ 
)
ââ 
data
ââ #
)
ââ# $
;
ââ$ %
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî ≈*
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_09 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY !
STATIC_READONLY_FALSEYY $
)YY$ %
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn  
STATIC_READONLY_TRUEnn #
)nn# $
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ß*
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_10 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY 
staticFalseYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 

staticTruenn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ñ+
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_11 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY 
StaticReturnsFalseYY !
(YY! "
)YY" #
)YY# $
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
StaticReturnsTruenn  
(nn  !
)nn! "
)nn" #
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ¸$
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_12 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY $
StaticReturnsTrueOrFalseYY '
(YY' (
)YY( )
)YY) *
{ZZ 	
data\\ 
=\\ 
$num\\ 
;\\ 
}]] 	
else^^ 
{__ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
byteee 
)ee 
dataee #
)ee# $
;ee$ %
}ff 	
}gg 
publicii 

overrideii 
voidii 
Goodii 
(ii 
)ii 
{jj 
GoodG2Bkk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo ™+
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_13 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY  
STATIC_READONLY_FIVEYY #
!=YY$ &
$numYY' (
)YY( )
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn  
STATIC_READONLY_FIVEnn #
==nn$ &
$numnn' (
)nn( )
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ å+
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_14 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY 

staticFiveYY 
!=YY 
$numYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 

staticFivenn 
==nn 
$numnn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
byte{{ 
){{ 
data{{ #
){{# $
;{{$ %
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ı,
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_15 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{   	
case!! 
$num!! 
:!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
using(( 
((( 
SqlConnection(( (

connection(() 3
=((4 5
IO((6 8
.((8 9
GetDBConnection((9 H
(((H I
)((I J
)((J K
{)) 

connection** "
.**" #
Open**# '
(**' (
)**( )
;**) *
using,, 
(,, 

SqlCommand,, )
command,,* 1
=,,2 3
new,,4 7

SqlCommand,,8 B
(,,B C
null,,C G
,,,G H

connection,,I S
),,S T
),,T U
{-- 
command.. #
...# $
CommandText..$ /
=..0 1
$str..2 U
;..U V
command// #
.//# $
Prepare//$ +
(//+ ,
)//, -
;//- .
using00 !
(00" #
SqlDataReader00# 0
dr001 3
=004 5
command006 =
.00= >
ExecuteReader00> K
(00K L
)00L M
)00M N
{11 
string33  &
stringNumber33' 3
=334 5
dr336 8
.338 9
	GetString339 B
(33B C
$num33C D
)33D E
;33E F
if44  "
(44# $
stringNumber44$ 0
!=441 3
null444 8
)448 9
{55  !
try66$ '
{77$ %
data88( ,
=88- .
int88/ 2
.882 3
Parse883 8
(888 9
stringNumber889 E
.88E F
Trim88F J
(88J K
)88K L
)88L M
;88M N
}99$ %
catch::$ )
(::* +
FormatException::+ :
exceptNumberFormat::; M
)::M N
{;;$ %
IO<<( *
.<<* +
Logger<<+ 1
.<<1 2
Log<<2 5
(<<5 6
NLog<<6 :
.<<: ;
LogLevel<<; C
.<<C D
Warn<<D H
,<<H I
exceptNumberFormat<<J \
,<<\ ]
$str	<<^ ê
)
<<ê ë
;
<<ë í
}==$ %
}>>  !
}?? 
}@@ 
}AA 
}BB 
catchCC 
(CC 
SqlExceptionCC #
	exceptSqlCC$ -
)CC- .
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE !
(EE! "
NLogEE" &
.EE& '
LogLevelEE' /
.EE/ 0
WarnEE0 4
,EE4 5
	exceptSqlEE6 ?
,EE? @
$strEEA [
)EE[ \
;EE\ ]
}FF 
}GG 
breakHH 
;HH 
defaultII 
:II 
dataLL 
=LL 
$numLL 
;LL 
breakMM 
;MM 
}NN 	
{OO 	
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
(QQ 
byteQQ 
)QQ 
dataQQ #
)QQ# $
;QQ$ %
}RR 	
}SS 
privateWW 
voidWW 
GoodG2B1WW 
(WW 
)WW 
{XX 
intYY 
dataYY 
=YY 
$numYY 
;YY 
switchZZ 
(ZZ 
$numZZ 
)ZZ 
{[[ 	
case\\ 
$num\\ 
:\\ 
data__ 
=__ 
$num__ 
;__ 
break`` 
;`` 
defaultaa 
:aa 
datacc 
=cc 
$numcc 
;cc 
breakdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
=oo 
$numoo 
;oo 
switchpp 
(pp 
$numpp 
)pp 
{qq 	
caserr 
$numrr 
:rr 
datatt 
=tt 
$numtt 
;tt 
breakuu 
;uu 
defaultvv 
:vv 
datayy 
=yy 
$numyy 
;yy 
breakzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
byte~~ 
)~~ 
data~~ #
)~~# $
;~~$ %
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ ¿"
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_16 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
breakGG 
;GG 
}HH 	
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
byteKK 
)KK 
dataKK #
)KK# $
;KK$ %
}LL 	
}MM 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
intSS 
dataSS 
;SS 
whileTT 
(TT 
trueTT 
)TT 
{UU 	
dataWW 
=WW 
$numWW 
;WW 
breakXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ∞$
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_17 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
forEE 
(EE 
intEE 
iEE 
=EE 
$numEE 
;EE 
iEE 
<EE 
$numEE 
;EE 
iEE  
++EE  "
)EE" #
{FF 	
{GG 
IOII 
.II 
	WriteLineII 
(II 
(II 
byteII "
)II" #
dataII# '
)II' (
;II( )
}JJ 
}KK 	
}LL 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
intSS 
dataSS 
;SS 
dataUU 
=UU 
$numUU 
;UU 
forVV 
(VV 
intVV 
iVV 
=VV 
$numVV 
;VV 
iVV 
<VV 
$numVV 
;VV 
iVV  
++VV  "
)VV" #
{WW 	
{XX 
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
byteZZ "
)ZZ" #
dataZZ# '
)ZZ' (
;ZZ( )
}[[ 
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2Baa 
(aa 
)aa 
;aa 
}bb 
}dd 
}ee ø7
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_21 >
:? @
AbstractTestCaseA Q
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 

badPrivate"" 
="" 
true"" 
;"" 
data## 
=## 

Bad_source## 
(## 
)## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
byte&& 
)&& 
data&& #
)&&# $
;&&$ %
}'' 	
}(( 
private** 
int** 

Bad_source** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 

badPrivate-- 
)-- 
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{11 
try22 
{33 
using55 
(55 
SqlConnection55 (

connection55) 3
=554 5
IO556 8
.558 9
GetDBConnection559 H
(55H I
)55I J
)55J K
{66 

connection77 "
.77" #
Open77# '
(77' (
)77( )
;77) *
using99 
(99 

SqlCommand99 )
command99* 1
=992 3
new994 7

SqlCommand998 B
(99B C
null99C G
,99G H

connection99I S
)99S T
)99T U
{:: 
command;; #
.;;# $
CommandText;;$ /
=;;0 1
$str;;2 U
;;;U V
command<< #
.<<# $
Prepare<<$ +
(<<+ ,
)<<, -
;<<- .
using== !
(==" #
SqlDataReader==# 0
dr==1 3
===4 5
command==6 =
.=== >
ExecuteReader==> K
(==K L
)==L M
)==M N
{>> 
string@@  &
stringNumber@@' 3
=@@4 5
dr@@6 8
.@@8 9
	GetString@@9 B
(@@B C
$num@@C D
)@@D E
;@@E F
ifAA  "
(AA# $
stringNumberAA$ 0
!=AA1 3
nullAA4 8
)AA8 9
{BB  !
tryCC$ '
{DD$ %
dataEE( ,
=EE- .
intEE/ 2
.EE2 3
ParseEE3 8
(EE8 9
stringNumberEE9 E
.EEE F
TrimEEF J
(EEJ K
)EEK L
)EEL M
;EEM N
}FF$ %
catchGG$ )
(GG* +
FormatExceptionGG+ :
exceptNumberFormatGG; M
)GGM N
{HH$ %
IOII( *
.II* +
LoggerII+ 1
.II1 2
LogII2 5
(II5 6
NLogII6 :
.II: ;
LogLevelII; C
.IIC D
WarnIID H
,IIH I
exceptNumberFormatIIJ \
,II\ ]
$str	II^ ê
)
IIê ë
;
IIë í
}JJ$ %
}KK  !
}LL 
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP #
	exceptSqlPP$ -
)PP- .
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR !
(RR! "
NLogRR" &
.RR& '
LogLevelRR' /
.RR/ 0
WarnRR0 4
,RR4 5
	exceptSqlRR6 ?
,RR? @
$strRRA [
)RR[ \
;RR\ ]
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
return\\ 
data\\ 
;\\ 
}]] 
private`` 
bool`` 
goodG2B1_private`` !
=``" #
false``$ )
;``) *
privateaa 
boolaa 
GoodG2B2_privateaa !
=aa" #
falseaa$ )
;aa) *
publiccc 

overridecc 
voidcc 
Goodcc 
(cc 
)cc 
{dd 
GoodG2B1ee 
(ee 
)ee 
;ee 
GoodG2B2ff 
(ff 
)ff 
;ff 
}gg 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
intll 
datall 
;ll 
goodG2B1_privatemm 
=mm 
falsemm  
;mm  !
datann 
=nn 
GoodG2B1_sourcenn 
(nn 
)nn  
;nn  !
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
byteqq 
)qq 
dataqq #
)qq# $
;qq$ %
}rr 	
}ss 
privateuu 
intuu 
GoodG2B1_sourceuu 
(uu  
)uu  !
{vv 
intww 
dataww 
=ww 
$numww 
;ww 
ifxx 

(xx 
goodG2B1_privatexx 
)xx 
{yy 	
data|| 
=|| 
$num|| 
;|| 
}}} 	
else~~ 
{ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
return
ÉÉ 
data
ÉÉ 
;
ÉÉ 
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
int
ââ 
data
ââ 
;
ââ 
GoodG2B2_private
ää 
=
ää 
true
ää 
;
ää  
data
ãã 
=
ãã 
GoodG2B2_source
ãã 
(
ãã 
)
ãã  
;
ãã  !
{
åå 	
IO
éé 
.
éé 
	WriteLine
éé 
(
éé 
(
éé 
byte
éé 
)
éé 
data
éé #
)
éé# $
;
éé$ %
}
èè 	
}
êê 
private
íí 
int
íí 
GoodG2B2_source
íí 
(
íí  
)
íí  !
{
ìì 
int
îî 
data
îî 
=
îî 
$num
îî 
;
îî 
if
ïï 

(
ïï 
GoodG2B2_private
ïï 
)
ïï 
{
ññ 	
data
òò 
=
òò 
$num
òò 
;
òò 
}
ôô 	
else
öö 
{
õõ 	
data
ûû 
=
ûû 
$num
ûû 
;
ûû 
}
üü 	
return
†† 
data
†† 
;
†† 
}
°° 
}££ 
}§§ ô
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22a ?
:@ A
AbstractTestCaseB R
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22b!! H
.!!H I
	BadSource!!I R
(!!R S
)!!S T
;!!T U
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22b88 H
.88H I
GoodG2B1Source88I W
(88W X
)88X Y
;88Y Z
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22bDD H
.DDH I
GoodG2B2SourceDDI W
(DDW X
)DDX Y
;DDY Z
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ö&
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22b ?
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22a E
.E F
badPublicStaticF U
)U V
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
publicTT 

staticTT 
intTT 
GoodG2B1SourceTT $
(TT$ %
)TT% &
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22aWW E
.WWE F 
goodG2B1PublicStaticWWF Z
)WWZ [
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
returnbb 
databb 
;bb 
}cc 
publicff 

staticff 
intff 
GoodG2B2Sourceff $
(ff$ %
)ff% &
{gg 
inthh 
datahh 
;hh 
ifii 

(ii E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22aii E
.iiE F 
GoodG2B2PublicStaticiiF Z
)iiZ [
{jj 	
datall 
=ll 
$numll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
returntt 
datatt 
;tt 
}uu 
}ww 
}xx ÿ$
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_31 >
:? @
AbstractTestCaseA Q
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{   	
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
using(( 
((( 
SqlConnection(( (

connection(() 3
=((4 5
IO((6 8
.((8 9
GetDBConnection((9 H
(((H I
)((I J
)((J K
{)) 

connection** "
.**" #
Open**# '
(**' (
)**( )
;**) *
using,, 
(,, 

SqlCommand,, )
command,,* 1
=,,2 3
new,,4 7

SqlCommand,,8 B
(,,B C
null,,C G
,,,G H

connection,,I S
),,S T
),,T U
{-- 
command.. #
...# $
CommandText..$ /
=..0 1
$str..2 U
;..U V
command// #
.//# $
Prepare//$ +
(//+ ,
)//, -
;//- .
using00 !
(00" #
SqlDataReader00# 0
dr001 3
=004 5
command006 =
.00= >
ExecuteReader00> K
(00K L
)00L M
)00M N
{11 
string33  &
stringNumber33' 3
=334 5
dr336 8
.338 9
	GetString339 B
(33B C
$num33C D
)33D E
;33E F
if44  "
(44# $
stringNumber44$ 0
!=441 3
null444 8
)448 9
{55  !
try66$ '
{77$ %
data88( ,
=88- .
int88/ 2
.882 3
Parse883 8
(888 9
stringNumber889 E
.88E F
Trim88F J
(88J K
)88K L
)88L M
;88M N
}99$ %
catch::$ )
(::* +
FormatException::+ :
exceptNumberFormat::; M
)::M N
{;;$ %
IO<<( *
.<<* +
Logger<<+ 1
.<<1 2
Log<<2 5
(<<5 6
NLog<<6 :
.<<: ;
LogLevel<<; C
.<<C D
Warn<<D H
,<<H I
exceptNumberFormat<<J \
,<<\ ]
$str	<<^ ê
)
<<ê ë
;
<<ë í
}==$ %
}>>  !
}?? 
}@@ 
}AA 
}BB 
catchCC 
(CC 
SqlExceptionCC #
	exceptSqlCC$ -
)CC- .
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE !
(EE! "
NLogEE" &
.EE& '
LogLevelEE' /
.EE/ 0
WarnEE0 4
,EE4 5
	exceptSqlEE6 ?
,EE? @
$strEEA [
)EE[ \
;EE\ ]
}FF 
}GG 
dataCopyHH 
=HH 
dataHH 
;HH 
}II 	
{JJ 	
intKK 
dataKK 
=KK 
dataCopyKK 
;KK  
{LL 
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN "
)NN" #
dataNN# '
)NN' (
;NN( )
}OO 
}PP 	
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
voidZZ 
GoodG2BZZ 
(ZZ 
)ZZ 
{[[ 
int\\ 
dataCopy\\ 
;\\ 
{]] 	
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` 
dataCopyaa 
=aa 
dataaa 
;aa 
}bb 	
{cc 	
intdd 
datadd 
=dd 
dataCopydd 
;dd  
{ee 
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
bytegg "
)gg" #
datagg# '
)gg' (
;gg( )
}hh 
}ii 	
}jj 
}ll 
}mm ‹$
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_41 >
:? @
AbstractTestCaseA Q
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&& 
{(( 	
try)) 
{** 
using,, 
(,, 
SqlConnection,, $

connection,,% /
=,,0 1
IO,,2 4
.,,4 5
GetDBConnection,,5 D
(,,D E
),,E F
),,F G
{-- 

connection.. 
... 
Open.. #
(..# $
)..$ %
;..% &
using00 
(00 

SqlCommand00 %
command00& -
=00. /
new000 3

SqlCommand004 >
(00> ?
null00? C
,00C D

connection00E O
)00O P
)00P Q
{11 
command22 
.22  
CommandText22  +
=22, -
$str22. Q
;22Q R
command33 
.33  
Prepare33  '
(33' (
)33( )
;33) *
using44 
(44 
SqlDataReader44 ,
dr44- /
=440 1
command442 9
.449 :
ExecuteReader44: G
(44G H
)44H I
)44I J
{55 
string77 "
stringNumber77# /
=770 1
dr772 4
.774 5
	GetString775 >
(77> ?
$num77? @
)77@ A
;77A B
if88 
(88  
stringNumber88  ,
!=88- /
null880 4
)884 5
{99 
try::  #
{;;  !
data<<$ (
=<<) *
int<<+ .
.<<. /
Parse<</ 4
(<<4 5
stringNumber<<5 A
.<<A B
Trim<<B F
(<<F G
)<<G H
)<<H I
;<<I J
}==  !
catch>>  %
(>>& '
FormatException>>' 6
exceptNumberFormat>>7 I
)>>I J
{??  !
IO@@$ &
.@@& '
Logger@@' -
.@@- .
Log@@. 1
(@@1 2
NLog@@2 6
.@@6 7
LogLevel@@7 ?
.@@? @
Warn@@@ D
,@@D E
exceptNumberFormat@@F X
,@@X Y
$str	@@Z å
)
@@å ç
;
@@ç é
}AA  !
}BB 
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
	exceptSqlII2 ;
,II; <
$strII= W
)IIW X
;IIX Y
}JJ 
}KK 	
BadSinkLL 
(LL 
dataLL 
)LL 
;LL 
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateUU 
staticUU 
voidUU 
GoodG2BSinkUU #
(UU# $
intUU$ '
dataUU( ,
)UU- .
{VV 
{WW 	
IOYY 
.YY 
	WriteLineYY 
(YY 
(YY 
byteYY 
)YY 
dataYY #
)YY# $
;YY$ %
}ZZ 	
}[[ 
private^^ 
static^^ 
void^^ 
GoodG2B^^ 
(^^  
)^^  !
{__ 
int`` 
data`` 
;`` 
databb 
=bb 
$numbb 
;bb 
GoodG2BSinkcc 
(cc 
datacc 
)cc 
;cc 
}dd 
}ff 
}gg ∆%
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_42 >
:? @
AbstractTestCaseA Q
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
SqlConnection$$ $

connection$$% /
=$$0 1
IO$$2 4
.$$4 5
GetDBConnection$$5 D
($$D E
)$$E F
)$$F G
{%% 

connection&& 
.&& 
Open&& #
(&&# $
)&&$ %
;&&% &
using(( 
((( 

SqlCommand(( %
command((& -
=((. /
new((0 3

SqlCommand((4 >
(((> ?
null((? C
,((C D

connection((E O
)((O P
)((P Q
{)) 
command** 
.**  
CommandText**  +
=**, -
$str**. Q
;**Q R
command++ 
.++  
Prepare++  '
(++' (
)++( )
;++) *
using,, 
(,, 
SqlDataReader,, ,
dr,,- /
=,,0 1
command,,2 9
.,,9 :
ExecuteReader,,: G
(,,G H
),,H I
),,I J
{-- 
string// "
stringNumber//# /
=//0 1
dr//2 4
.//4 5
	GetString//5 >
(//> ?
$num//? @
)//@ A
;//A B
if00 
(00  
stringNumber00  ,
!=00- /
null000 4
)004 5
{11 
try22  #
{33  !
data44$ (
=44) *
int44+ .
.44. /
Parse44/ 4
(444 5
stringNumber445 A
.44A B
Trim44B F
(44F G
)44G H
)44H I
;44I J
}55  !
catch66  %
(66& '
FormatException66' 6
exceptNumberFormat667 I
)66I J
{77  !
IO88$ &
.88& '
Logger88' -
.88- .
Log88. 1
(881 2
NLog882 6
.886 7
LogLevel887 ?
.88? @
Warn88@ D
,88D E
exceptNumberFormat88F X
,88X Y
$str	88Z å
)
88å ç
;
88ç é
}99  !
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
SqlException?? 
	exceptSql??  )
)??) *
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
	exceptSqlAA2 ;
,AA; <
$strAA= W
)AAW X
;AAX Y
}BB 
}CC 	
returnDD 
dataDD 
;DD 
}EE 
publicHH 

overrideHH 
voidHH 
BadHH 
(HH 
)HH 
{II 
intJJ 
dataJJ 
=JJ 
	BadSourceJJ 
(JJ 
)JJ 
;JJ 
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
byteMM 
)MM 
dataMM #
)MM# $
;MM$ %
}NN 	
}OO 
privateRR 
staticRR 
intRR 
GoodG2BSourceRR $
(RR$ %
)RR% &
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
returnWW 
dataWW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
int]] 
data]] 
=]] 
GoodG2BSource]]  
(]]  !
)]]! "
;]]" #
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
byte`` 
)`` 
data`` #
)``# $
;``$ %
}aa 	
}bb 
publicdd 

overridedd 
voiddd 
Gooddd 
(dd 
)dd 
{ee 
GoodG2Bff 
(ff 
)ff 
;ff 
}gg 
}ii 
}jj å'
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_45 >
:? @
AbstractTestCaseA Q
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{   
int!! 
data!! 
=!! 
dataBad!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public)) 

override)) 
void)) 
Bad)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data,, 
=,, 
int,, 
.,, 
MinValue,, 
;,, 
{.. 	
try// 
{00 
using22 
(22 
SqlConnection22 $

connection22% /
=220 1
IO222 4
.224 5
GetDBConnection225 D
(22D E
)22E F
)22F G
{33 

connection44 
.44 
Open44 #
(44# $
)44$ %
;44% &
using66 
(66 

SqlCommand66 %
command66& -
=66. /
new660 3

SqlCommand664 >
(66> ?
null66? C
,66C D

connection66E O
)66O P
)66P Q
{77 
command88 
.88  
CommandText88  +
=88, -
$str88. Q
;88Q R
command99 
.99  
Prepare99  '
(99' (
)99( )
;99) *
using:: 
(:: 
SqlDataReader:: ,
dr::- /
=::0 1
command::2 9
.::9 :
ExecuteReader::: G
(::G H
)::H I
)::I J
{;; 
string== "
stringNumber==# /
===0 1
dr==2 4
.==4 5
	GetString==5 >
(==> ?
$num==? @
)==@ A
;==A B
if>> 
(>>  
stringNumber>>  ,
!=>>- /
null>>0 4
)>>4 5
{?? 
try@@  #
{AA  !
dataBB$ (
=BB) *
intBB+ .
.BB. /
ParseBB/ 4
(BB4 5
stringNumberBB5 A
.BBA B
TrimBBB F
(BBF G
)BBG H
)BBH I
;BBI J
}CC  !
catchDD  %
(DD& '
FormatExceptionDD' 6
exceptNumberFormatDD7 I
)DDI J
{EE  !
IOFF$ &
.FF& '
LoggerFF' -
.FF- .
LogFF. 1
(FF1 2
NLogFF2 6
.FF6 7
LogLevelFF7 ?
.FF? @
WarnFF@ D
,FFD E
exceptNumberFormatFFF X
,FFX Y
$str	FFZ å
)
FFå ç
;
FFç é
}GG  !
}HH 
}II 
}JJ 
}KK 
}LL 
catchMM 
(MM 
SqlExceptionMM 
	exceptSqlMM  )
)MM) *
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
	exceptSqlOO2 ;
,OO; <
$strOO= W
)OOW X
;OOX Y
}PP 
}QQ 	
dataBadRR 
=RR 
dataRR 
;RR 
BadSinkSS 
(SS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private\\ 
void\\ 
GoodG2BSink\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
=^^ 
dataGoodG2B^^ 
;^^ 
{__ 	
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
byteaa 
)aa 
dataaa #
)aa# $
;aa$ %
}bb 	
}cc 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
inthh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
dataGoodG2Bkk 
=kk 
datakk 
;kk 
GoodG2BSinkll 
(ll 
)ll 
;ll 
}mm 
}oo 
}pp é 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_51a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
SqlConnection$$ $

connection$$% /
=$$0 1
IO$$2 4
.$$4 5
GetDBConnection$$5 D
($$D E
)$$E F
)$$F G
{%% 

connection&& 
.&& 
Open&& #
(&&# $
)&&$ %
;&&% &
using(( 
((( 

SqlCommand(( %
command((& -
=((. /
new((0 3

SqlCommand((4 >
(((> ?
null((? C
,((C D

connection((E O
)((O P
)((P Q
{)) 
command** 
.**  
CommandText**  +
=**, -
$str**. Q
;**Q R
command++ 
.++  
Prepare++  '
(++' (
)++( )
;++) *
using,, 
(,, 
SqlDataReader,, ,
dr,,- /
=,,0 1
command,,2 9
.,,9 :
ExecuteReader,,: G
(,,G H
),,H I
),,I J
{-- 
string// "
stringNumber//# /
=//0 1
dr//2 4
.//4 5
	GetString//5 >
(//> ?
$num//? @
)//@ A
;//A B
if00 
(00  
stringNumber00  ,
!=00- /
null000 4
)004 5
{11 
try22  #
{33  !
data44$ (
=44) *
int44+ .
.44. /
Parse44/ 4
(444 5
stringNumber445 A
.44A B
Trim44B F
(44F G
)44G H
)44H I
;44I J
}55  !
catch66  %
(66& '
FormatException66' 6
exceptNumberFormat667 I
)66I J
{77  !
IO88$ &
.88& '
Logger88' -
.88- .
Log88. 1
(881 2
NLog882 6
.886 7
LogLevel887 ?
.88? @
Warn88@ D
,88D E
exceptNumberFormat88F X
,88X Y
$str	88Z å
)
88å ç
;
88ç é
}99  !
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
SqlException?? 
	exceptSql??  )
)??) *
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
	exceptSqlAA2 ;
,AA; <
$strAA= W
)AAW X
;AAX Y
}BB 
}CC 	E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_51bDD A
.DDA B
BadSinkDDB I
(DDI J
dataDDJ N
)DDP Q
;DDQ R
}EE 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
)NN 
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_51bSS A
.SSA B
GoodG2BSinkSSB M
(SSM N
dataSSN R
)SST U
;SSU V
}TT 
}VV 
}WW ô	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_51b ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, é 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52bEE A
.EEA B
BadSinkEEB I
(EEI J
dataEEJ N
)EEO P
;EEP Q
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52bTT A
.TTA B
GoodG2BSinkTTB M
(TTM N
dataTTN R
)TTS T
;TTT U
}UU 
}WW 
}XX Î
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52b ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52c A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52c## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' ô	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52c ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- é 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53bEE A
.EEA B
BadSinkEEB I
(EEI J
dataEEJ N
)EEO P
;EEP Q
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53bTT A
.TTA B
GoodG2BSinkTTB M
(TTM N
dataTTN R
)TTS T
;TTT U
}UU 
}WW 
}XX Î
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53b ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53c A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53c## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' Î
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53c ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53d A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53d## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' ô	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53d ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- é 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54bEE A
.EEA B
BadSinkEEB I
(EEI J
dataEEJ N
)EEO P
;EEP Q
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54bTT A
.TTA B
GoodG2BSinkTTB M
(TTM N
dataTTN R
)TTS T
;TTT U
}UU 
}WW 
}XX Î
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54b ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54c A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54c## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' Î
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54c ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54d A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54d## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' Î
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54d ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54e A
.A B
BadSinkB I
(I J
dataJ N
)O P
;P Q
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54e## A
.##A B
GoodG2BSink##B M
(##M N
data##N R
)##S T
;##T U
}$$ 
}&& 
}'' ô	
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54e ?
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- „
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_61a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_61b L
.L M
	BadSourceM V
(V W
)W X
;X Y
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_61b++ L
.++L M
GoodG2BSource++M Z
(++Z [
)++[ \
;++\ ]
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ¬
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_61b ?
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
returnEE 
dataEE 
;EE 
}FF 
publicKK 

staticKK 
intKK 
GoodG2BSourceKK #
(KK# $
)KK$ %
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO 
returnPP 
dataPP 
;PP 
}QQ 
}SS 
}TT Ü%
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_66a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
intEE 
[EE 
]EE 
	dataArrayEE 
=EE 
newEE 
intEE !
[EE! "
$numEE" #
]EE# $
;EE$ %
	dataArrayFF 
[FF 
$numFF 
]FF 
=FF 
dataFF 
;FF E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_66bGG A
.GGA B
BadSinkGGB I
(GGI J
	dataArrayGGJ S
)GGU V
;GGV W
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
)KK 
{LL 
GoodG2BMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
staticQQ 
voidQQ 
GoodG2BQQ 
(QQ  
)QQ  !
{RR 
intSS 
dataSS 
;SS 
dataUU 
=UU 
$numUU 
;UU 
intVV 
[VV 
]VV 
	dataArrayVV 
=VV 
newVV 
intVV !
[VV! "
$numVV" #
]VV# $
;VV$ %
	dataArrayWW 
[WW 
$numWW 
]WW 
=WW 
dataWW 
;WW E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_66bXX A
.XXA B
GoodG2BSinkXXB M
(XXM N
	dataArrayXXN W
)XXY Z
;XXZ [
}YY 
}[[ 
}\\ Ô
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_66b ?
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// Ú%
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_67a ?
:@ A
AbstractTestCaseB R
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$ 
{&& 	
try'' 
{(( 
using** 
(** 
SqlConnection** $

connection**% /
=**0 1
IO**2 4
.**4 5
GetDBConnection**5 D
(**D E
)**E F
)**F G
{++ 

connection,, 
.,, 
Open,, #
(,,# $
),,$ %
;,,% &
using.. 
(.. 

SqlCommand.. %
command..& -
=... /
new..0 3

SqlCommand..4 >
(..> ?
null..? C
,..C D

connection..E O
)..O P
)..P Q
{// 
command00 
.00  
CommandText00  +
=00, -
$str00. Q
;00Q R
command11 
.11  
Prepare11  '
(11' (
)11( )
;11) *
using22 
(22 
SqlDataReader22 ,
dr22- /
=220 1
command222 9
.229 :
ExecuteReader22: G
(22G H
)22H I
)22I J
{33 
string55 "
stringNumber55# /
=550 1
dr552 4
.554 5
	GetString555 >
(55> ?
$num55? @
)55@ A
;55A B
if66 
(66  
stringNumber66  ,
!=66- /
null660 4
)664 5
{77 
try88  #
{99  !
data::$ (
=::) *
int::+ .
.::. /
Parse::/ 4
(::4 5
stringNumber::5 A
.::A B
Trim::B F
(::F G
)::G H
)::H I
;::I J
};;  !
catch<<  %
(<<& '
FormatException<<' 6
exceptNumberFormat<<7 I
)<<I J
{==  !
IO>>$ &
.>>& '
Logger>>' -
.>>- .
Log>>. 1
(>>1 2
NLog>>2 6
.>>6 7
LogLevel>>7 ?
.>>? @
Warn>>@ D
,>>D E
exceptNumberFormat>>F X
,>>X Y
$str	>>Z å
)
>>å ç
;
>>ç é
}??  !
}@@ 
}AA 
}BB 
}CC 
}DD 
catchEE 
(EE 
SqlExceptionEE 
	exceptSqlEE  )
)EE) *
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
	exceptSqlGG2 ;
,GG; <
$strGG= W
)GGW X
;GGX Y
}HH 
}II 	
	ContainerJJ 
dataContainerJJ 
=JJ  !
newJJ" %
	ContainerJJ& /
(JJ/ 0
)JJ0 1
;JJ1 2
dataContainerKK 
.KK 
containerOneKK "
=KK# $
dataKK% )
;KK) *E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_67bLL A
.LLA B
BadSinkLLB I
(LLI J
dataContainerLLJ W
)LLY Z
;LLZ [
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
intXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ 
	Container[[ 
dataContainer[[ 
=[[  !
new[[" %
	Container[[& /
([[/ 0
)[[0 1
;[[1 2
dataContainer\\ 
.\\ 
containerOne\\ "
=\\# $
data\\% )
;\\) *E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_67b]] A
.]]A B
GoodG2BSink]]B M
(]]M N
dataContainer]]N [
)]]] ^
;]]^ _
}^^ 
}`` 
}aa Ì
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_67b ?
{ 
public 

static 
void 
BadSink 
( E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_67a X
.X Y
	ContainerY b
dataContainerc p
)q r
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_67a%%# \
.%%\ ]
	Container%%] f
dataContainer%%g t
)%%u v
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// Ù
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_68a ?
:@ A
AbstractTestCaseB R
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_68bEE A
.EEA B
BadSinkEEB I
(EEI J
)EEJ K
;EEK L
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
dataRR 
=RR 
$numRR 
;RR E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_68bSS A
.SSA B
GoodG2BSinkSSB M
(SSM N
)SSN O
;SSO P
}TT 
}VV 
}WW •
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_68b ?
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_68a L
.L M
dataM Q
;Q R
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_68a&& L
.&&L M
data&&M Q
;&&Q R
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. Ü!
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_71a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_71bEE A
.EEA B
BadSinkEEB I
(EEI J
(EEJ K
ObjectEEK Q
)EEQ R
dataEER V
)EEX Y
;EEY Z
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_71bTT A
.TTA B
GoodG2BSinkTTB M
(TTM N
(TTN O
ObjectTTO U
)TTU V
dataTTV Z
)TT\ ]
;TT] ^
}UU 
}WW 
}XX ª
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_71b ?
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ¶*
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_72a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
	HashtableEE 
dataHashtableEE 
=EE  !
newEE" %
	HashtableEE& /
(EE/ 0
$numEE0 1
)EE1 2
;EE2 3
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #
dataHashtableHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH !
)HH! "
;HH" #E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_72bII A
.IIA B
BadSinkIIB I
(III J
dataHashtableIIJ W
)IIY Z
;IIZ [
}JJ 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
)MM 
{NN 
GoodG2BOO 
(OO 
)OO 
;OO 
}PP 
privateSS 
staticSS 
voidSS 
GoodG2BSS 
(SS  
)SS  !
{TT 
intUU 
dataUU 
;UU 
dataWW 
=WW 
$numWW 
;WW 
	HashtableXX 
dataHashtableXX 
=XX  !
newXX" %
	HashtableXX& /
(XX/ 0
$numXX0 1
)XX1 2
;XX2 3
dataHashtableYY 
.YY 
AddYY 
(YY 
$numYY 
,YY 
dataYY !
)YY! "
;YY" #
dataHashtableZZ 
.ZZ 
AddZZ 
(ZZ 
$numZZ 
,ZZ 
dataZZ !
)ZZ! "
;ZZ" #
dataHashtable[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ !
)[[! "
;[[" #E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_72b\\ A
.\\A B
GoodG2BSink\\B M
(\\M N
dataHashtable\\N [
)\\] ^
;\\^ _
}]] 
}__ 
}`` ≠
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_72b ?
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 û*
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_73a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
SqlConnection&& $

connection&&% /
=&&0 1
IO&&2 4
.&&4 5
GetDBConnection&&5 D
(&&D E
)&&E F
)&&F G
{'' 

connection(( 
.(( 
Open(( #
(((# $
)(($ %
;((% &
using** 
(** 

SqlCommand** %
command**& -
=**. /
new**0 3

SqlCommand**4 >
(**> ?
null**? C
,**C D

connection**E O
)**O P
)**P Q
{++ 
command,, 
.,,  
CommandText,,  +
=,,, -
$str,,. Q
;,,Q R
command-- 
.--  
Prepare--  '
(--' (
)--( )
;--) *
using.. 
(.. 
SqlDataReader.. ,
dr..- /
=..0 1
command..2 9
...9 :
ExecuteReader..: G
(..G H
)..H I
)..I J
{// 
string11 "
stringNumber11# /
=110 1
dr112 4
.114 5
	GetString115 >
(11> ?
$num11? @
)11@ A
;11A B
if22 
(22  
stringNumber22  ,
!=22- /
null220 4
)224 5
{33 
try44  #
{55  !
data66$ (
=66) *
int66+ .
.66. /
Parse66/ 4
(664 5
stringNumber665 A
.66A B
Trim66B F
(66F G
)66G H
)66H I
;66I J
}77  !
catch88  %
(88& '
FormatException88' 6
exceptNumberFormat887 I
)88I J
{99  !
IO::$ &
.::& '
Logger::' -
.::- .
Log::. 1
(::1 2
NLog::2 6
.::6 7
LogLevel::7 ?
.::? @
Warn::@ D
,::D E
exceptNumberFormat::F X
,::X Y
$str	::Z å
)
::å ç
;
::ç é
};;  !
}<< 
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
SqlExceptionAA 
	exceptSqlAA  )
)AA) *
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
	exceptSqlCC2 ;
,CC; <
$strCC= W
)CCW X
;CCX Y
}DD 
}EE 	

LinkedListFF 
<FF 
intFF 
>FF 
dataLinkedListFF &
=FF' (
newFF) ,

LinkedListFF- 7
<FF7 8
intFF8 ;
>FF; <
(FF< =
)FF= >
;FF> ?
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %
dataLinkedListHH 
.HH 
AddLastHH 
(HH 
dataHH #
)HH# $
;HH$ %
dataLinkedListII 
.II 
AddLastII 
(II 
dataII #
)II# $
;II$ %E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_73bJJ A
.JJA B
BadSinkJJB I
(JJI J
dataLinkedListJJJ X
)JJZ [
;JJ[ \
}KK 
publicNN 

overrideNN 
voidNN 
GoodNN 
(NN 
)NN 
{OO 
GoodG2BPP 
(PP 
)PP 
;PP 
}QQ 
privateTT 
staticTT 
voidTT 
GoodG2BTT 
(TT  
)TT  !
{UU 
intVV 
dataVV 
;VV 
dataXX 
=XX 
$numXX 
;XX 

LinkedListYY 
<YY 
intYY 
>YY 
dataLinkedListYY &
=YY' (
newYY) ,

LinkedListYY- 7
<YY7 8
intYY8 ;
>YY; <
(YY< =
)YY= >
;YY> ?
dataLinkedListZZ 
.ZZ 
AddLastZZ 
(ZZ 
dataZZ #
)ZZ# $
;ZZ$ %
dataLinkedList[[ 
.[[ 
AddLast[[ 
([[ 
data[[ #
)[[# $
;[[$ %
dataLinkedList\\ 
.\\ 
AddLast\\ 
(\\ 
data\\ #
)\\# $
;\\$ %E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_73b]] A
.]]A B
GoodG2BSink]]B M
(]]M N
dataLinkedList]]N \
)]]^ _
;]]_ `
}^^ 
}`` 
}aa Ÿ
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_73b ?
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ã,
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_74a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	

DictionaryEE 
<EE 
intEE 
,EE 
intEE 
>EE 
dataDictionaryEE *
=EE+ ,
newEE- 0

DictionaryEE1 ;
<EE; <
intEE< ?
,EE? @
intEE@ C
>EEC D
(EED E
)EEE F
;EEF G
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $
dataDictionaryHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH "
)HH" #
;HH# $E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_74bII A
.IIA B
BadSinkIIB I
(III J
dataDictionaryIIJ X
)IIZ [
;II[ \
}JJ 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
)MM 
{NN 
GoodG2BOO 
(OO 
)OO 
;OO 
}PP 
privateSS 
staticSS 
voidSS 
GoodG2BSS 
(SS  
)SS  !
{TT 
intUU 
dataUU 
;UU 
dataWW 
=WW 
$numWW 
;WW 

DictionaryXX 
<XX 
intXX 
,XX 
intXX 
>XX 
dataDictionaryXX *
=XX+ ,
newXX- 0

DictionaryXX1 ;
<XX; <
intXX< ?
,XX? @
intXX@ C
>XXC D
(XXD E
)XXE F
;XXF G
dataDictionaryYY 
.YY 
AddYY 
(YY 
$numYY 
,YY 
dataYY "
)YY" #
;YY# $
dataDictionaryZZ 
.ZZ 
AddZZ 
(ZZ 
$numZZ 
,ZZ 
dataZZ "
)ZZ" #
;ZZ# $
dataDictionary[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ "
)[[" #
;[[# $E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_74b\\ A
.\\A B
GoodG2BSink\\B M
(\\M N
dataDictionary\\N \
)\\^ _
;\\_ `
}]] 
}__ 
}`` Û
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_74b ?
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ù3
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_75a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
using'' 
('' 
SqlConnection'' $

connection''% /
=''0 1
IO''2 4
.''4 5
GetDBConnection''5 D
(''D E
)''E F
)''F G
{(( 

connection)) 
.)) 
Open)) #
())# $
)))$ %
;))% &
using++ 
(++ 

SqlCommand++ %
command++& -
=++. /
new++0 3

SqlCommand++4 >
(++> ?
null++? C
,++C D

connection++E O
)++O P
)++P Q
{,, 
command-- 
.--  
CommandText--  +
=--, -
$str--. Q
;--Q R
command.. 
...  
Prepare..  '
(..' (
)..( )
;..) *
using// 
(// 
SqlDataReader// ,
dr//- /
=//0 1
command//2 9
.//9 :
ExecuteReader//: G
(//G H
)//H I
)//I J
{00 
string22 "
stringNumber22# /
=220 1
dr222 4
.224 5
	GetString225 >
(22> ?
$num22? @
)22@ A
;22A B
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99& '
FormatException99' 6
exceptNumberFormat997 I
)99I J
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB 
	exceptSqlBB  )
)BB) *
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD 
(DD 
NLogDD "
.DD" #
LogLevelDD# +
.DD+ ,
WarnDD, 0
,DD0 1
	exceptSqlDD2 ;
,DD; <
$strDD= W
)DDW X
;DDX Y
}EE 
}FF 	
byteHH 
[HH 
]HH 
dataSerializedHH 
=HH 
nullHH  $
;HH$ %
tryII 
{JJ 	
BinaryFormatterKK 
bfKK 
=KK  
newKK! $
BinaryFormatterKK% 4
(KK4 5
)KK5 6
;KK6 7
usingLL 
(LL 
varLL 
msLL 
=LL 
newLL 
MemoryStreamLL  ,
(LL, -
)LL- .
)LL. /
{MM 
bfNN 
.NN 
	SerializeNN 
(NN 
msNN 
,NN  
dataNN! %
)NN% &
;NN& '
dataSerializedOO 
=OO  
msOO! #
.OO# $
ToArrayOO$ +
(OO+ ,
)OO, -
;OO- .
}PP E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_75bQQ E
.QQE F
BadSinkQQF M
(QQM N
dataSerializedQQN \
)QQ^ _
;QQ_ `
}RR 	
catchSS 
(SS "
SerializationExceptionSS %
exceptSerializeSS& 5
)SS5 6
{TT 	
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU 
.UU 
LogLevelUU '
.UU' (
WarnUU( ,
,UU, -
$strUU. X
,UUX Y
exceptSerializeUUZ i
)UUi j
;UUj k
}VV 	
}WW 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B\\ 
(\\ 
)\\ 
;\\ 
}]] 
private`` 
static`` 
void`` 
GoodG2B`` 
(``  
)``  !
{aa 
intbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 
byteff 
[ff 
]ff 
dataSerializedff 
=ff 
nullff  $
;ff$ %
trygg 
{hh 	
BinaryFormatterii 
bfii 
=ii  
newii! $
BinaryFormatterii% 4
(ii4 5
)ii5 6
;ii6 7
usingjj 
(jj 
varjj 
msjj 
=jj 
newjj 
MemoryStreamjj  ,
(jj, -
)jj- .
)jj. /
{kk 
bfll 
.ll 
	Serializell 
(ll 
msll 
,ll  
datall! %
)ll% &
;ll& '
dataSerializedmm 
=mm  
msmm! #
.mm# $
ToArraymm$ +
(mm+ ,
)mm, -
;mm- .
}nn E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_75boo E
.ooE F
GoodG2BSinkooF Q
(ooQ R
dataSerializedooR `
)oob c
;ooc d
}pp 	
catchqq 
(qq "
SerializationExceptionqq %
exceptSerializeqq& 5
)qq5 6
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
$strss. X
,ssX Y
exceptSerializessZ i
)ssi j
;ssj k
}tt 	
}uu 
}ww 
}xx Ÿ!
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_75b ?
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ∞#
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_81a ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	I
=CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_baseEE E

baseObjectEEF P
=EEQ R
newEES VI
<CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_bad	EEW ì
(
EEì î
)
EEî ï
;
EEï ñ

baseObjectFF 
.FF 
ActionFF 
(FF 
dataFF 
)FF  
;FF  !
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
}MM 
privatePP 
voidPP 
GoodG2BPP 
(PP 
)PP 
{QQ 
intRR 
dataRR 
;RR 
dataTT 
=TT 
$numTT 
;TT I
=CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_baseUU E

baseObjectUUF P
=UUQ R
newUUS VM
@CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_goodG2B	UUW ó
(
UUó ò
)
UUò ô
;
UUô ö

baseObjectVV 
.VV 
ActionVV 
(VV 
dataVV 
)VV  
;VV  !
}WW 
}YY 
}ZZ Ü
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_bad B
:C DJ
=CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_base	E Ç
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ò
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 I
=CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_base L
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} é
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_goodG2B F
:G HJ
=CWE197_Numeric_Truncation_Error__int_Database_to_byte_81_base	I Ü
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" æ 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_01 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
voidRR 
GoodG2BRR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
{WW 	
IOYY 
.YY 
	WriteLineYY 
(YY 
(YY 
shortYY 
)YY  
dataYY  $
)YY$ %
;YY% &
}ZZ 	
}[[ 
}]] 
}^^ Ω)
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_02 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
falseYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
truenn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ¢*
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_03 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
$numYY 
!=YY 
$numYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
$numnn 
==nn 
$numnn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ £,
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_04 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private   
const   
bool   
PRIVATE_CONST_FALSE   *
=  + ,
false  - 2
;  2 3
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_TRUE&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
using.. 
(.. 
SqlConnection.. (

connection..) 3
=..4 5
IO..6 8
...8 9
GetDBConnection..9 H
(..H I
)..I J
)..J K
{// 

connection00 "
.00" #
Open00# '
(00' (
)00( )
;00) *
using22 
(22 

SqlCommand22 )
command22* 1
=222 3
new224 7

SqlCommand228 B
(22B C
null22C G
,22G H

connection22I S
)22S T
)22T U
{33 
command44 #
.44# $
CommandText44$ /
=440 1
$str442 U
;44U V
command55 #
.55# $
Prepare55$ +
(55+ ,
)55, -
;55- .
using66 !
(66" #
SqlDataReader66# 0
dr661 3
=664 5
command666 =
.66= >
ExecuteReader66> K
(66K L
)66L M
)66M N
{77 
string99  &
stringNumber99' 3
=994 5
dr996 8
.998 9
	GetString999 B
(99B C
$num99C D
)99D E
;99E F
if::  "
(::# $
stringNumber::$ 0
!=::1 3
null::4 8
)::8 9
{;;  !
try<<$ '
{==$ %
data>>( ,
=>>- .
int>>/ 2
.>>2 3
Parse>>3 8
(>>8 9
stringNumber>>9 E
.>>E F
Trim>>F J
(>>J K
)>>K L
)>>L M
;>>M N
}??$ %
catch@@$ )
(@@* +
FormatException@@+ :
exceptNumberFormat@@; M
)@@M N
{AA$ %
IOBB( *
.BB* +
LoggerBB+ 1
.BB1 2
LogBB2 5
(BB5 6
NLogBB6 :
.BB: ;
LogLevelBB; C
.BBC D
WarnBBD H
,BBH I
exceptNumberFormatBBJ \
,BB\ ]
$str	BB^ ê
)
BBê ë
;
BBë í
}CC$ %
}DD  !
}EE 
}FF 
}GG 
}HH 
catchII 
(II 
SqlExceptionII #
	exceptSqlII$ -
)II- .
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
	exceptSqlKK6 ?
,KK? @
$strKKA [
)KK[ \
;KK\ ]
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
if`` 

(`` 
PRIVATE_CONST_FALSE`` 
)``  
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
inttt 
datatt 
;tt 
ifuu 

(uu 
PRIVATE_CONST_TRUEuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ⁄+
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_05 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private   
bool   
privateFalse   
=   
false    %
;  % &
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateTrue&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
using.. 
(.. 
SqlConnection.. (

connection..) 3
=..4 5
IO..6 8
...8 9
GetDBConnection..9 H
(..H I
)..I J
)..J K
{// 

connection00 "
.00" #
Open00# '
(00' (
)00( )
;00) *
using22 
(22 

SqlCommand22 )
command22* 1
=222 3
new224 7

SqlCommand228 B
(22B C
null22C G
,22G H

connection22I S
)22S T
)22T U
{33 
command44 #
.44# $
CommandText44$ /
=440 1
$str442 U
;44U V
command55 #
.55# $
Prepare55$ +
(55+ ,
)55, -
;55- .
using66 !
(66" #
SqlDataReader66# 0
dr661 3
=664 5
command666 =
.66= >
ExecuteReader66> K
(66K L
)66L M
)66M N
{77 
string99  &
stringNumber99' 3
=994 5
dr996 8
.998 9
	GetString999 B
(99B C
$num99C D
)99D E
;99E F
if::  "
(::# $
stringNumber::$ 0
!=::1 3
null::4 8
)::8 9
{;;  !
try<<$ '
{==$ %
data>>( ,
=>>- .
int>>/ 2
.>>2 3
Parse>>3 8
(>>8 9
stringNumber>>9 E
.>>E F
Trim>>F J
(>>J K
)>>K L
)>>L M
;>>M N
}??$ %
catch@@$ )
(@@* +
FormatException@@+ :
exceptNumberFormat@@; M
)@@M N
{AA$ %
IOBB( *
.BB* +
LoggerBB+ 1
.BB1 2
LogBB2 5
(BB5 6
NLogBB6 :
.BB: ;
LogLevelBB; C
.BBC D
WarnBBD H
,BBH I
exceptNumberFormatBBJ \
,BB\ ]
$str	BB^ ê
)
BBê ë
;
BBë í
}CC$ %
}DD  !
}EE 
}FF 
}GG 
}HH 
catchII 
(II 
SqlExceptionII #
	exceptSqlII$ -
)II- .
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK !
(KK! "
NLogKK" &
.KK& '
LogLevelKK' /
.KK/ 0
WarnKK0 4
,KK4 5
	exceptSqlKK6 ?
,KK? @
$strKKA [
)KK[ \
;KK\ ]
}LL 
}MM 
}NN 	
elseOO 
{PP 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
private]] 
void]] 
GoodG2B1]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
if`` 

(`` 
privateFalse`` 
)`` 
{aa 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
elseff 
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privaterr 
voidrr 
GoodG2B2rr 
(rr 
)rr 
{ss 
inttt 
datatt 
;tt 
ifuu 

(uu 
privateTrueuu 
)uu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
{
ÄÄ 	
IO
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ 
(
ÇÇ 
(
ÇÇ 
short
ÇÇ 
)
ÇÇ  
data
ÇÇ  $
)
ÇÇ$ %
;
ÇÇ% &
}
ÉÉ 	
}
ÑÑ 
public
ÜÜ 

override
ÜÜ 
void
ÜÜ 
Good
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
GoodG2B1
àà 
(
àà 
)
àà 
;
àà 
GoodG2B2
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}åå 
}çç ˘+
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_06 ?
:@ A
AbstractTestCaseB R
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
PRIVATE_CONST_FIVE%% 
==%% !
$num%%" #
)%%# $
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{)) 
try** 
{++ 
using-- 
(-- 
SqlConnection-- (

connection--) 3
=--4 5
IO--6 8
.--8 9
GetDBConnection--9 H
(--H I
)--I J
)--J K
{.. 

connection// "
.//" #
Open//# '
(//' (
)//( )
;//) *
using11 
(11 

SqlCommand11 )
command11* 1
=112 3
new114 7

SqlCommand118 B
(11B C
null11C G
,11G H

connection11I S
)11S T
)11T U
{22 
command33 #
.33# $
CommandText33$ /
=330 1
$str332 U
;33U V
command44 #
.44# $
Prepare44$ +
(44+ ,
)44, -
;44- .
using55 !
(55" #
SqlDataReader55# 0
dr551 3
=554 5
command556 =
.55= >
ExecuteReader55> K
(55K L
)55L M
)55M N
{66 
string88  &
stringNumber88' 3
=884 5
dr886 8
.888 9
	GetString889 B
(88B C
$num88C D
)88D E
;88E F
if99  "
(99# $
stringNumber99$ 0
!=991 3
null994 8
)998 9
{::  !
try;;$ '
{<<$ %
data==( ,
===- .
int==/ 2
.==2 3
Parse==3 8
(==8 9
stringNumber==9 E
.==E F
Trim==F J
(==J K
)==K L
)==L M
;==M N
}>>$ %
catch??$ )
(??* +
FormatException??+ :
exceptNumberFormat??; M
)??M N
{@@$ %
IOAA( *
.AA* +
LoggerAA+ 1
.AA1 2
LogAA2 5
(AA5 6
NLogAA6 :
.AA: ;
LogLevelAA; C
.AAC D
WarnAAD H
,AAH I
exceptNumberFormatAAJ \
,AA\ ]
$str	AA^ ê
)
AAê ë
;
AAë í
}BB$ %
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH #
	exceptSqlHH$ -
)HH- .
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
	exceptSqlJJ6 ?
,JJ? @
$strJJA [
)JJ[ \
;JJ\ ]
}KK 
}LL 
}MM 	
elseNN 
{OO 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV 
)VV  
dataVV  $
)VV$ %
;VV% &
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
if__ 

(__ 
PRIVATE_CONST_FIVE__ 
!=__ !
$num__" #
)__# $
{`` 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
shortll 
)ll  
datall  $
)ll$ %
;ll% &
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
intss 
datass 
;ss 
iftt 

(tt 
PRIVATE_CONST_FIVEtt 
==tt !
$numtt" #
)tt# $
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
elseyy 
{zz 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
short
ÅÅ 
)
ÅÅ  
data
ÅÅ  $
)
ÅÅ$ %
;
ÅÅ% &
}
ÇÇ 	
}
ÉÉ 
public
ÖÖ 

override
ÖÖ 
void
ÖÖ 
Good
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
GoodG2B1
áá 
(
áá 
)
áá 
;
áá 
GoodG2B2
àà 
(
àà 
)
àà 
;
àà 
}
ââ 
}ãã 
}åå  +
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_07 ?
:@ A
AbstractTestCaseB R
{ 
private 
int 
privateFive 
= 
$num 
;  
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
privateFive%% 
==%% 
$num%% 
)%% 
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{)) 
try** 
{++ 
using-- 
(-- 
SqlConnection-- (

connection--) 3
=--4 5
IO--6 8
.--8 9
GetDBConnection--9 H
(--H I
)--I J
)--J K
{.. 

connection// "
.//" #
Open//# '
(//' (
)//( )
;//) *
using11 
(11 

SqlCommand11 )
command11* 1
=112 3
new114 7

SqlCommand118 B
(11B C
null11C G
,11G H

connection11I S
)11S T
)11T U
{22 
command33 #
.33# $
CommandText33$ /
=330 1
$str332 U
;33U V
command44 #
.44# $
Prepare44$ +
(44+ ,
)44, -
;44- .
using55 !
(55" #
SqlDataReader55# 0
dr551 3
=554 5
command556 =
.55= >
ExecuteReader55> K
(55K L
)55L M
)55M N
{66 
string88  &
stringNumber88' 3
=884 5
dr886 8
.888 9
	GetString889 B
(88B C
$num88C D
)88D E
;88E F
if99  "
(99# $
stringNumber99$ 0
!=991 3
null994 8
)998 9
{::  !
try;;$ '
{<<$ %
data==( ,
===- .
int==/ 2
.==2 3
Parse==3 8
(==8 9
stringNumber==9 E
.==E F
Trim==F J
(==J K
)==K L
)==L M
;==M N
}>>$ %
catch??$ )
(??* +
FormatException??+ :
exceptNumberFormat??; M
)??M N
{@@$ %
IOAA( *
.AA* +
LoggerAA+ 1
.AA1 2
LogAA2 5
(AA5 6
NLogAA6 :
.AA: ;
LogLevelAA; C
.AAC D
WarnAAD H
,AAH I
exceptNumberFormatAAJ \
,AA\ ]
$str	AA^ ê
)
AAê ë
;
AAë í
}BB$ %
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
SqlExceptionHH #
	exceptSqlHH$ -
)HH- .
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
	exceptSqlJJ6 ?
,JJ? @
$strJJA [
)JJ[ \
;JJ\ ]
}KK 
}LL 
}MM 	
elseNN 
{OO 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV 
)VV  
dataVV  $
)VV$ %
;VV% &
}WW 	
}XX 
private\\ 
void\\ 
GoodG2B1\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
if__ 

(__ 
privateFive__ 
!=__ 
$num__ 
)__ 
{`` 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
{jj 	
IOll 
.ll 
	WriteLinell 
(ll 
(ll 
shortll 
)ll  
datall  $
)ll$ %
;ll% &
}mm 	
}nn 
privateqq 
voidqq 
GoodG2B2qq 
(qq 
)qq 
{rr 
intss 
datass 
;ss 
iftt 

(tt 
privateFivett 
==tt 
$numtt 
)tt 
{uu 	
dataww 
=ww 
$numww 
;ww 
}xx 	
elseyy 
{zz 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
short
ÅÅ 
)
ÅÅ  
data
ÅÅ  $
)
ÅÅ$ %
;
ÅÅ% &
}
ÇÇ 	
}
ÉÉ 
public
ÖÖ 

override
ÖÖ 
void
ÖÖ 
Good
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 
GoodG2B1
áá 
(
áá 
)
áá 
;
áá 
GoodG2B2
àà 
(
àà 
)
àà 
;
àà 
}
ââ 
}ãã 
}åå ë.
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_08 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{   
return!! 
true!! 
;!! 
}"" 
private$$ 
static$$ 
bool$$ 
PrivateReturnsFalse$$ +
($$+ ,
)$$, -
{%% 
return&& 
false&& 
;&& 
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 
PrivateReturnsTrue-- 
(-- 
)--  
)--  !
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{11 
try22 
{33 
using55 
(55 
SqlConnection55 (

connection55) 3
=554 5
IO556 8
.558 9
GetDBConnection559 H
(55H I
)55I J
)55J K
{66 

connection77 "
.77" #
Open77# '
(77' (
)77( )
;77) *
using99 
(99 

SqlCommand99 )
command99* 1
=992 3
new994 7

SqlCommand998 B
(99B C
null99C G
,99G H

connection99I S
)99S T
)99T U
{:: 
command;; #
.;;# $
CommandText;;$ /
=;;0 1
$str;;2 U
;;;U V
command<< #
.<<# $
Prepare<<$ +
(<<+ ,
)<<, -
;<<- .
using== !
(==" #
SqlDataReader==# 0
dr==1 3
===4 5
command==6 =
.=== >
ExecuteReader==> K
(==K L
)==L M
)==M N
{>> 
string@@  &
stringNumber@@' 3
=@@4 5
dr@@6 8
.@@8 9
	GetString@@9 B
(@@B C
$num@@C D
)@@D E
;@@E F
ifAA  "
(AA# $
stringNumberAA$ 0
!=AA1 3
nullAA4 8
)AA8 9
{BB  !
tryCC$ '
{DD$ %
dataEE( ,
=EE- .
intEE/ 2
.EE2 3
ParseEE3 8
(EE8 9
stringNumberEE9 E
.EEE F
TrimEEF J
(EEJ K
)EEK L
)EEL M
;EEM N
}FF$ %
catchGG$ )
(GG* +
FormatExceptionGG+ :
exceptNumberFormatGG; M
)GGM N
{HH$ %
IOII( *
.II* +
LoggerII+ 1
.II1 2
LogII2 5
(II5 6
NLogII6 :
.II: ;
LogLevelII; C
.IIC D
WarnIID H
,IIH I
exceptNumberFormatIIJ \
,II\ ]
$str	II^ ê
)
IIê ë
;
IIë í
}JJ$ %
}KK  !
}LL 
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP #
	exceptSqlPP$ -
)PP- .
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR !
(RR! "
NLogRR" &
.RR& '
LogLevelRR' /
.RR/ 0
WarnRR0 4
,RR4 5
	exceptSqlRR6 ?
,RR? @
$strRRA [
)RR[ \
;RR\ ]
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
short^^ 
)^^  
data^^  $
)^^$ %
;^^% &
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
intff 
dataff 
;ff 
ifgg 

(gg 
PrivateReturnsFalsegg 
(gg  
)gg  !
)gg! "
{hh 	
datakk 
=kk 
$numkk 
;kk 
}ll 	
elsemm 
{nn 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
{rr 	
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt 
)tt  
datatt  $
)tt$ %
;tt% &
}uu 	
}vv 
privateyy 
voidyy 
GoodG2B2yy 
(yy 
)yy 
{zz 
int{{ 
data{{ 
;{{ 
if|| 

(|| 
PrivateReturnsTrue|| 
(|| 
)||  
)||  !
{}} 	
data 
= 
$num 
; 
}
ÄÄ 	
else
ÅÅ 
{
ÇÇ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
{
áá 	
IO
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
(
ââ 
short
ââ 
)
ââ  
data
ââ  $
)
ââ$ %
;
ââ% &
}
ää 	
}
ãã 
public
çç 

override
çç 
void
çç 
Good
çç 
(
çç 
)
çç 
{
éé 
GoodG2B1
èè 
(
èè 
)
èè 
;
èè 
GoodG2B2
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
}ìì 
}îî  *
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_09 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY !
STATIC_READONLY_FALSEYY $
)YY$ %
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn  
STATIC_READONLY_TRUEnn #
)nn# $
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ¨*
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_10 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY 
staticFalseYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 

staticTruenn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ õ+
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_11 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY 
StaticReturnsFalseYY !
(YY! "
)YY" #
)YY# $
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 
StaticReturnsTruenn  
(nn  !
)nn! "
)nn" #
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ Ä%
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_12 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY $
StaticReturnsTrueOrFalseYY '
(YY' (
)YY( )
)YY) *
{ZZ 	
data\\ 
=\\ 
$num\\ 
;\\ 
}]] 	
else^^ 
{__ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
{cc 	
IOee 
.ee 
	WriteLineee 
(ee 
(ee 
shortee 
)ee  
dataee  $
)ee$ %
;ee% &
}ff 	
}gg 
publicii 

overrideii 
voidii 
Goodii 
(ii 
)ii 
{jj 
GoodG2Bkk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo Ø+
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_13 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY  
STATIC_READONLY_FIVEYY #
!=YY$ &
$numYY' (
)YY( )
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn  
STATIC_READONLY_FIVEnn #
==nn$ &
$numnn' (
)nn( )
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ë+
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_14 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateVV 
voidVV 
GoodG2B1VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
;XX 
ifYY 

(YY 
IOYY 
.YY 

staticFiveYY 
!=YY 
$numYY 
)YY 
{ZZ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
else__ 
{`` 	
databb 
=bb 
$numbb 
;bb 
}cc 	
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
voidkk 
GoodG2B2kk 
(kk 
)kk 
{ll 
intmm 
datamm 
;mm 
ifnn 

(nn 
IOnn 
.nn 

staticFivenn 
==nn 
$numnn 
)nn 
{oo 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
dataww 
=ww 
$numww 
;ww 
}xx 	
{yy 	
IO{{ 
.{{ 
	WriteLine{{ 
({{ 
({{ 
short{{ 
){{  
data{{  $
){{$ %
;{{% &
}|| 	
}}} 
public 

override 
void 
Good 
( 
) 
{
ÄÄ 
GoodG2B1
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
GoodG2B2
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}ÖÖ 
}ÜÜ ˙,
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_15 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{   	
case!! 
$num!! 
:!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
using(( 
((( 
SqlConnection(( (

connection(() 3
=((4 5
IO((6 8
.((8 9
GetDBConnection((9 H
(((H I
)((I J
)((J K
{)) 

connection** "
.**" #
Open**# '
(**' (
)**( )
;**) *
using,, 
(,, 

SqlCommand,, )
command,,* 1
=,,2 3
new,,4 7

SqlCommand,,8 B
(,,B C
null,,C G
,,,G H

connection,,I S
),,S T
),,T U
{-- 
command.. #
...# $
CommandText..$ /
=..0 1
$str..2 U
;..U V
command// #
.//# $
Prepare//$ +
(//+ ,
)//, -
;//- .
using00 !
(00" #
SqlDataReader00# 0
dr001 3
=004 5
command006 =
.00= >
ExecuteReader00> K
(00K L
)00L M
)00M N
{11 
string33  &
stringNumber33' 3
=334 5
dr336 8
.338 9
	GetString339 B
(33B C
$num33C D
)33D E
;33E F
if44  "
(44# $
stringNumber44$ 0
!=441 3
null444 8
)448 9
{55  !
try66$ '
{77$ %
data88( ,
=88- .
int88/ 2
.882 3
Parse883 8
(888 9
stringNumber889 E
.88E F
Trim88F J
(88J K
)88K L
)88L M
;88M N
}99$ %
catch::$ )
(::* +
FormatException::+ :
exceptNumberFormat::; M
)::M N
{;;$ %
IO<<( *
.<<* +
Logger<<+ 1
.<<1 2
Log<<2 5
(<<5 6
NLog<<6 :
.<<: ;
LogLevel<<; C
.<<C D
Warn<<D H
,<<H I
exceptNumberFormat<<J \
,<<\ ]
$str	<<^ ê
)
<<ê ë
;
<<ë í
}==$ %
}>>  !
}?? 
}@@ 
}AA 
}BB 
catchCC 
(CC 
SqlExceptionCC #
	exceptSqlCC$ -
)CC- .
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE !
(EE! "
NLogEE" &
.EE& '
LogLevelEE' /
.EE/ 0
WarnEE0 4
,EE4 5
	exceptSqlEE6 ?
,EE? @
$strEEA [
)EE[ \
;EE\ ]
}FF 
}GG 
breakHH 
;HH 
defaultII 
:II 
dataLL 
=LL 
$numLL 
;LL 
breakMM 
;MM 
}NN 	
{OO 	
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
(QQ 
shortQQ 
)QQ  
dataQQ  $
)QQ$ %
;QQ% &
}RR 	
}SS 
privateWW 
voidWW 
GoodG2B1WW 
(WW 
)WW 
{XX 
intYY 
dataYY 
=YY 
$numYY 
;YY 
switchZZ 
(ZZ 
$numZZ 
)ZZ 
{[[ 	
case\\ 
$num\\ 
:\\ 
data__ 
=__ 
$num__ 
;__ 
break`` 
;`` 
defaultaa 
:aa 
datacc 
=cc 
$numcc 
;cc 
breakdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
=oo 
$numoo 
;oo 
switchpp 
(pp 
$numpp 
)pp 
{qq 	
caserr 
$numrr 
:rr 
datatt 
=tt 
$numtt 
;tt 
breakuu 
;uu 
defaultvv 
:vv 
datayy 
=yy 
$numyy 
;yy 
breakzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
short~~ 
)~~  
data~~  $
)~~$ %
;~~% &
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ ƒ"
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_16 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
breakGG 
;GG 
}HH 	
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
shortKK 
)KK  
dataKK  $
)KK$ %
;KK% &
}LL 	
}MM 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
intSS 
dataSS 
;SS 
whileTT 
(TT 
trueTT 
)TT 
{UU 	
dataWW 
=WW 
$numWW 
;WW 
breakXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ¥$
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_17 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
forEE 
(EE 
intEE 
iEE 
=EE 
$numEE 
;EE 
iEE 
<EE 
$numEE 
;EE 
iEE  
++EE  "
)EE" #
{FF 	
{GG 
IOII 
.II 
	WriteLineII 
(II 
(II 
shortII #
)II# $
dataII$ (
)II( )
;II) *
}JJ 
}KK 	
}LL 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
intSS 
dataSS 
;SS 
dataUU 
=UU 
$numUU 
;UU 
forVV 
(VV 
intVV 
iVV 
=VV 
$numVV 
;VV 
iVV 
<VV 
$numVV 
;VV 
iVV  
++VV  "
)VV" #
{WW 	
{XX 
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
shortZZ #
)ZZ# $
dataZZ$ (
)ZZ( )
;ZZ) *
}[[ 
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2Baa 
(aa 
)aa 
;aa 
}bb 
}dd 
}ee ƒ7
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_21 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 

badPrivate"" 
="" 
true"" 
;"" 
data## 
=## 

Bad_source## 
(## 
)## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
short&& 
)&&  
data&&  $
)&&$ %
;&&% &
}'' 	
}(( 
private** 
int** 

Bad_source** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 

badPrivate-- 
)-- 
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{11 
try22 
{33 
using55 
(55 
SqlConnection55 (

connection55) 3
=554 5
IO556 8
.558 9
GetDBConnection559 H
(55H I
)55I J
)55J K
{66 

connection77 "
.77" #
Open77# '
(77' (
)77( )
;77) *
using99 
(99 

SqlCommand99 )
command99* 1
=992 3
new994 7

SqlCommand998 B
(99B C
null99C G
,99G H

connection99I S
)99S T
)99T U
{:: 
command;; #
.;;# $
CommandText;;$ /
=;;0 1
$str;;2 U
;;;U V
command<< #
.<<# $
Prepare<<$ +
(<<+ ,
)<<, -
;<<- .
using== !
(==" #
SqlDataReader==# 0
dr==1 3
===4 5
command==6 =
.=== >
ExecuteReader==> K
(==K L
)==L M
)==M N
{>> 
string@@  &
stringNumber@@' 3
=@@4 5
dr@@6 8
.@@8 9
	GetString@@9 B
(@@B C
$num@@C D
)@@D E
;@@E F
ifAA  "
(AA# $
stringNumberAA$ 0
!=AA1 3
nullAA4 8
)AA8 9
{BB  !
tryCC$ '
{DD$ %
dataEE( ,
=EE- .
intEE/ 2
.EE2 3
ParseEE3 8
(EE8 9
stringNumberEE9 E
.EEE F
TrimEEF J
(EEJ K
)EEK L
)EEL M
;EEM N
}FF$ %
catchGG$ )
(GG* +
FormatExceptionGG+ :
exceptNumberFormatGG; M
)GGM N
{HH$ %
IOII( *
.II* +
LoggerII+ 1
.II1 2
LogII2 5
(II5 6
NLogII6 :
.II: ;
LogLevelII; C
.IIC D
WarnIID H
,IIH I
exceptNumberFormatIIJ \
,II\ ]
$str	II^ ê
)
IIê ë
;
IIë í
}JJ$ %
}KK  !
}LL 
}MM 
}NN 
}OO 
catchPP 
(PP 
SqlExceptionPP #
	exceptSqlPP$ -
)PP- .
{QQ 
IORR 
.RR 
LoggerRR 
.RR 
LogRR !
(RR! "
NLogRR" &
.RR& '
LogLevelRR' /
.RR/ 0
WarnRR0 4
,RR4 5
	exceptSqlRR6 ?
,RR? @
$strRRA [
)RR[ \
;RR\ ]
}SS 
}TT 
}UU 	
elseVV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
return\\ 
data\\ 
;\\ 
}]] 
private`` 
bool`` 
goodG2B1_private`` !
=``" #
false``$ )
;``) *
privateaa 
boolaa 
GoodG2B2_privateaa !
=aa" #
falseaa$ )
;aa) *
publiccc 

overridecc 
voidcc 
Goodcc 
(cc 
)cc 
{dd 
GoodG2B1ee 
(ee 
)ee 
;ee 
GoodG2B2ff 
(ff 
)ff 
;ff 
}gg 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
intll 
datall 
;ll 
goodG2B1_privatemm 
=mm 
falsemm  
;mm  !
datann 
=nn 
GoodG2B1_sourcenn 
(nn 
)nn  
;nn  !
{oo 	
IOqq 
.qq 
	WriteLineqq 
(qq 
(qq 
shortqq 
)qq  
dataqq  $
)qq$ %
;qq% &
}rr 	
}ss 
privateuu 
intuu 
GoodG2B1_sourceuu 
(uu  
)uu  !
{vv 
intww 
dataww 
=ww 
$numww 
;ww 
ifxx 

(xx 
goodG2B1_privatexx 
)xx 
{yy 	
data|| 
=|| 
$num|| 
;|| 
}}} 	
else~~ 
{ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
return
ÉÉ 
data
ÉÉ 
;
ÉÉ 
}
ÑÑ 
private
áá 
void
áá 
GoodG2B2
áá 
(
áá 
)
áá 
{
àà 
int
ââ 
data
ââ 
;
ââ 
GoodG2B2_private
ää 
=
ää 
true
ää 
;
ää  
data
ãã 
=
ãã 
GoodG2B2_source
ãã 
(
ãã 
)
ãã  
;
ãã  !
{
åå 	
IO
éé 
.
éé 
	WriteLine
éé 
(
éé 
(
éé 
short
éé 
)
éé  
data
éé  $
)
éé$ %
;
éé% &
}
èè 	
}
êê 
private
íí 
int
íí 
GoodG2B2_source
íí 
(
íí  
)
íí  !
{
ìì 
int
îî 
data
îî 
=
îî 
$num
îî 
;
îî 
if
ïï 

(
ïï 
GoodG2B2_private
ïï 
)
ïï 
{
ññ 	
data
òò 
=
òò 
$num
òò 
;
òò 
}
ôô 	
else
öö 
{
õõ 	
data
ûû 
=
ûû 
$num
ûû 
;
ûû 
}
üü 	
return
†† 
data
†† 
;
†† 
}
°° 
}££ 
}§§ °
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22a @
:A B
AbstractTestCaseC S
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22b!! I
.!!I J
	BadSource!!J S
(!!S T
)!!T U
;!!U V
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22b88 I
.88I J
GoodG2B1Source88J X
(88X Y
)88Y Z
;88Z [
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22bDD I
.DDI J
GoodG2B2SourceDDJ X
(DDX Y
)DDY Z
;DDZ [
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ü&
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22b @
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22a F
.F G
badPublicStaticG V
)V W
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{## 
try$$ 
{%% 
using'' 
('' 
SqlConnection'' (

connection'') 3
=''4 5
IO''6 8
.''8 9
GetDBConnection''9 H
(''H I
)''I J
)''J K
{(( 

connection)) "
.))" #
Open))# '
())' (
)))( )
;))) *
using++ 
(++ 

SqlCommand++ )
command++* 1
=++2 3
new++4 7

SqlCommand++8 B
(++B C
null++C G
,++G H

connection++I S
)++S T
)++T U
{,, 
command-- #
.--# $
CommandText--$ /
=--0 1
$str--2 U
;--U V
command.. #
...# $
Prepare..$ +
(..+ ,
).., -
;..- .
using// !
(//" #
SqlDataReader//# 0
dr//1 3
=//4 5
command//6 =
.//= >
ExecuteReader//> K
(//K L
)//L M
)//M N
{00 
string22  &
stringNumber22' 3
=224 5
dr226 8
.228 9
	GetString229 B
(22B C
$num22C D
)22D E
;22E F
if33  "
(33# $
stringNumber33$ 0
!=331 3
null334 8
)338 9
{44  !
try55$ '
{66$ %
data77( ,
=77- .
int77/ 2
.772 3
Parse773 8
(778 9
stringNumber779 E
.77E F
Trim77F J
(77J K
)77K L
)77L M
;77M N
}88$ %
catch99$ )
(99* +
FormatException99+ :
exceptNumberFormat99; M
)99M N
{::$ %
IO;;( *
.;;* +
Logger;;+ 1
.;;1 2
Log;;2 5
(;;5 6
NLog;;6 :
.;;: ;
LogLevel;;; C
.;;C D
Warn;;D H
,;;H I
exceptNumberFormat;;J \
,;;\ ]
$str	;;^ ê
)
;;ê ë
;
;;ë í
}<<$ %
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB #
	exceptSqlBB$ -
)BB- .
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
	exceptSqlDD6 ?
,DD? @
$strDDA [
)DD[ \
;DD\ ]
}EE 
}FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
publicTT 

staticTT 
intTT 
GoodG2B1SourceTT $
(TT$ %
)TT% &
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22aWW F
.WWF G 
goodG2B1PublicStaticWWG [
)WW[ \
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
returnbb 
databb 
;bb 
}cc 
publicff 

staticff 
intff 
GoodG2B2Sourceff $
(ff$ %
)ff% &
{gg 
inthh 
datahh 
;hh 
ifii 

(ii F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22aii F
.iiF G 
GoodG2B2PublicStaticiiG [
)ii[ \
{jj 	
datall 
=ll 
$numll 
;ll 
}mm 	
elsenn 
{oo 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
returntt 
datatt 
;tt 
}uu 
}ww 
}xx ‹$
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_31 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{   	
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
using(( 
((( 
SqlConnection(( (

connection(() 3
=((4 5
IO((6 8
.((8 9
GetDBConnection((9 H
(((H I
)((I J
)((J K
{)) 

connection** "
.**" #
Open**# '
(**' (
)**( )
;**) *
using,, 
(,, 

SqlCommand,, )
command,,* 1
=,,2 3
new,,4 7

SqlCommand,,8 B
(,,B C
null,,C G
,,,G H

connection,,I S
),,S T
),,T U
{-- 
command.. #
...# $
CommandText..$ /
=..0 1
$str..2 U
;..U V
command// #
.//# $
Prepare//$ +
(//+ ,
)//, -
;//- .
using00 !
(00" #
SqlDataReader00# 0
dr001 3
=004 5
command006 =
.00= >
ExecuteReader00> K
(00K L
)00L M
)00M N
{11 
string33  &
stringNumber33' 3
=334 5
dr336 8
.338 9
	GetString339 B
(33B C
$num33C D
)33D E
;33E F
if44  "
(44# $
stringNumber44$ 0
!=441 3
null444 8
)448 9
{55  !
try66$ '
{77$ %
data88( ,
=88- .
int88/ 2
.882 3
Parse883 8
(888 9
stringNumber889 E
.88E F
Trim88F J
(88J K
)88K L
)88L M
;88M N
}99$ %
catch::$ )
(::* +
FormatException::+ :
exceptNumberFormat::; M
)::M N
{;;$ %
IO<<( *
.<<* +
Logger<<+ 1
.<<1 2
Log<<2 5
(<<5 6
NLog<<6 :
.<<: ;
LogLevel<<; C
.<<C D
Warn<<D H
,<<H I
exceptNumberFormat<<J \
,<<\ ]
$str	<<^ ê
)
<<ê ë
;
<<ë í
}==$ %
}>>  !
}?? 
}@@ 
}AA 
}BB 
catchCC 
(CC 
SqlExceptionCC #
	exceptSqlCC$ -
)CC- .
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE !
(EE! "
NLogEE" &
.EE& '
LogLevelEE' /
.EE/ 0
WarnEE0 4
,EE4 5
	exceptSqlEE6 ?
,EE? @
$strEEA [
)EE[ \
;EE\ ]
}FF 
}GG 
dataCopyHH 
=HH 
dataHH 
;HH 
}II 	
{JJ 	
intKK 
dataKK 
=KK 
dataCopyKK 
;KK  
{LL 
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN #
)NN# $
dataNN$ (
)NN( )
;NN) *
}OO 
}PP 	
}QQ 
publicTT 

overrideTT 
voidTT 
GoodTT 
(TT 
)TT 
{UU 
GoodG2BVV 
(VV 
)VV 
;VV 
}WW 
privateZZ 
voidZZ 
GoodG2BZZ 
(ZZ 
)ZZ 
{[[ 
int\\ 
dataCopy\\ 
;\\ 
{]] 	
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` 
dataCopyaa 
=aa 
dataaa 
;aa 
}bb 	
{cc 	
intdd 
datadd 
=dd 
dataCopydd 
;dd  
{ee 
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
shortgg #
)gg# $
datagg$ (
)gg( )
;gg) *
}hh 
}ii 	
}jj 
}ll 
}mm ‡$
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_41 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&& 
{(( 	
try)) 
{** 
using,, 
(,, 
SqlConnection,, $

connection,,% /
=,,0 1
IO,,2 4
.,,4 5
GetDBConnection,,5 D
(,,D E
),,E F
),,F G
{-- 

connection.. 
... 
Open.. #
(..# $
)..$ %
;..% &
using00 
(00 

SqlCommand00 %
command00& -
=00. /
new000 3

SqlCommand004 >
(00> ?
null00? C
,00C D

connection00E O
)00O P
)00P Q
{11 
command22 
.22  
CommandText22  +
=22, -
$str22. Q
;22Q R
command33 
.33  
Prepare33  '
(33' (
)33( )
;33) *
using44 
(44 
SqlDataReader44 ,
dr44- /
=440 1
command442 9
.449 :
ExecuteReader44: G
(44G H
)44H I
)44I J
{55 
string77 "
stringNumber77# /
=770 1
dr772 4
.774 5
	GetString775 >
(77> ?
$num77? @
)77@ A
;77A B
if88 
(88  
stringNumber88  ,
!=88- /
null880 4
)884 5
{99 
try::  #
{;;  !
data<<$ (
=<<) *
int<<+ .
.<<. /
Parse<</ 4
(<<4 5
stringNumber<<5 A
.<<A B
Trim<<B F
(<<F G
)<<G H
)<<H I
;<<I J
}==  !
catch>>  %
(>>& '
FormatException>>' 6
exceptNumberFormat>>7 I
)>>I J
{??  !
IO@@$ &
.@@& '
Logger@@' -
.@@- .
Log@@. 1
(@@1 2
NLog@@2 6
.@@6 7
LogLevel@@7 ?
.@@? @
Warn@@@ D
,@@D E
exceptNumberFormat@@F X
,@@X Y
$str	@@Z å
)
@@å ç
;
@@ç é
}AA  !
}BB 
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
SqlExceptionGG 
	exceptSqlGG  )
)GG) *
{HH 
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII "
.II" #
LogLevelII# +
.II+ ,
WarnII, 0
,II0 1
	exceptSqlII2 ;
,II; <
$strII= W
)IIW X
;IIX Y
}JJ 
}KK 	
BadSinkLL 
(LL 
dataLL 
)LL 
;LL 
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateUU 
staticUU 
voidUU 
GoodG2BSinkUU #
(UU# $
intUU$ '
dataUU( ,
)UU- .
{VV 
{WW 	
IOYY 
.YY 
	WriteLineYY 
(YY 
(YY 
shortYY 
)YY  
dataYY  $
)YY$ %
;YY% &
}ZZ 	
}[[ 
private^^ 
static^^ 
void^^ 
GoodG2B^^ 
(^^  
)^^  !
{__ 
int`` 
data`` 
;`` 
databb 
=bb 
$numbb 
;bb 
GoodG2BSinkcc 
(cc 
datacc 
)cc 
;cc 
}dd 
}ff 
}gg  %
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_42 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
SqlConnection$$ $

connection$$% /
=$$0 1
IO$$2 4
.$$4 5
GetDBConnection$$5 D
($$D E
)$$E F
)$$F G
{%% 

connection&& 
.&& 
Open&& #
(&&# $
)&&$ %
;&&% &
using(( 
((( 

SqlCommand(( %
command((& -
=((. /
new((0 3

SqlCommand((4 >
(((> ?
null((? C
,((C D

connection((E O
)((O P
)((P Q
{)) 
command** 
.**  
CommandText**  +
=**, -
$str**. Q
;**Q R
command++ 
.++  
Prepare++  '
(++' (
)++( )
;++) *
using,, 
(,, 
SqlDataReader,, ,
dr,,- /
=,,0 1
command,,2 9
.,,9 :
ExecuteReader,,: G
(,,G H
),,H I
),,I J
{-- 
string// "
stringNumber//# /
=//0 1
dr//2 4
.//4 5
	GetString//5 >
(//> ?
$num//? @
)//@ A
;//A B
if00 
(00  
stringNumber00  ,
!=00- /
null000 4
)004 5
{11 
try22  #
{33  !
data44$ (
=44) *
int44+ .
.44. /
Parse44/ 4
(444 5
stringNumber445 A
.44A B
Trim44B F
(44F G
)44G H
)44H I
;44I J
}55  !
catch66  %
(66& '
FormatException66' 6
exceptNumberFormat667 I
)66I J
{77  !
IO88$ &
.88& '
Logger88' -
.88- .
Log88. 1
(881 2
NLog882 6
.886 7
LogLevel887 ?
.88? @
Warn88@ D
,88D E
exceptNumberFormat88F X
,88X Y
$str	88Z å
)
88å ç
;
88ç é
}99  !
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
SqlException?? 
	exceptSql??  )
)??) *
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
	exceptSqlAA2 ;
,AA; <
$strAA= W
)AAW X
;AAX Y
}BB 
}CC 	
returnDD 
dataDD 
;DD 
}EE 
publicHH 

overrideHH 
voidHH 
BadHH 
(HH 
)HH 
{II 
intJJ 
dataJJ 
=JJ 
	BadSourceJJ 
(JJ 
)JJ 
;JJ 
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
shortMM 
)MM  
dataMM  $
)MM$ %
;MM% &
}NN 	
}OO 
privateRR 
staticRR 
intRR 
GoodG2BSourceRR $
(RR$ %
)RR% &
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
returnWW 
dataWW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
int]] 
data]] 
=]] 
GoodG2BSource]]  
(]]  !
)]]! "
;]]" #
{^^ 	
IO`` 
.`` 
	WriteLine`` 
(`` 
(`` 
short`` 
)``  
data``  $
)``$ %
;``% &
}aa 	
}bb 
publicdd 

overridedd 
voiddd 
Gooddd 
(dd 
)dd 
{ee 
GoodG2Bff 
(ff 
)ff 
;ff 
}gg 
}ii 
}jj ê'
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_Database_to_short_45 ?
:@ A
AbstractTestCaseB R
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{   
int!! 
data!! 
=!! 
dataBad!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public)) 

override)) 
void)) 
Bad)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data,, 
=,, 
int,, 
.,, 
MinValue,, 
;,, 
{.. 	
try// 
{00 
using22 
(22 
SqlConnection22 $

connection22% /
=220 1
IO222 4
.224 5
GetDBConnection225 D
(22D E
)22E F
)22F G
{33 

connection44 
.44 
Open44 #
(44# $
)44$ %
;44% &
using66 
(66 

SqlCommand66 %
command66& -
=66. /
new660 3

SqlCommand664 >
(66> ?
null66? C
,66C D

connection66E O
)66O P
)66P Q
{77 
command88 
.88  
CommandText88  +
=88, -
$str88. Q
;88Q R
command99 
.99  
Prepare99  '
(99' (
)99( )
;99) *
using:: 
(:: 
SqlDataReader:: ,
dr::- /
=::0 1
command::2 9
.::9 :
ExecuteReader::: G
(::G H
)::H I
)::I J
{;; 
string== "
stringNumber==# /
===0 1
dr==2 4
.==4 5
	GetString==5 >
(==> ?
$num==? @
)==@ A
;==A B
if>> 
(>>  
stringNumber>>  ,
!=>>- /
null>>0 4
)>>4 5
{?? 
try@@  #
{AA  !
dataBB$ (
=BB) *
intBB+ .
.BB. /
ParseBB/ 4
(BB4 5
stringNumberBB5 A
.BBA B
TrimBBB F
(BBF G
)BBG H
)BBH I
;BBI J
}CC  !
catchDD  %
(DD& '
FormatExceptionDD' 6
exceptNumberFormatDD7 I
)DDI J
{EE  !
IOFF$ &
.FF& '
LoggerFF' -
.FF- .
LogFF. 1
(FF1 2
NLogFF2 6
.FF6 7
LogLevelFF7 ?
.FF? @
WarnFF@ D
,FFD E
exceptNumberFormatFFF X
,FFX Y
$str	FFZ å
)
FFå ç
;
FFç é
}GG  !
}HH 
}II 
}JJ 
}KK 
}LL 
catchMM 
(MM 
SqlExceptionMM 
	exceptSqlMM  )
)MM) *
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO 
(OO 
NLogOO "
.OO" #
LogLevelOO# +
.OO+ ,
WarnOO, 0
,OO0 1
	exceptSqlOO2 ;
,OO; <
$strOO= W
)OOW X
;OOX Y
}PP 
}QQ 	
dataBadRR 
=RR 
dataRR 
;RR 
BadSinkSS 
(SS 
)SS 
;SS 
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private\\ 
void\\ 
GoodG2BSink\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
=^^ 
dataGoodG2B^^ 
;^^ 
{__ 	
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
shortaa 
)aa  
dataaa  $
)aa$ %
;aa% &
}bb 	
}cc 
privateff 
voidff 
GoodG2Bff 
(ff 
)ff 
{gg 
inthh 
datahh 
;hh 
datajj 
=jj 
$numjj 
;jj 
dataGoodG2Bkk 
=kk 
datakk 
;kk 
GoodG2BSinkll 
(ll 
)ll 
;ll 
}mm 
}oo 
}pp í 
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_51a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
SqlConnection$$ $

connection$$% /
=$$0 1
IO$$2 4
.$$4 5
GetDBConnection$$5 D
($$D E
)$$E F
)$$F G
{%% 

connection&& 
.&& 
Open&& #
(&&# $
)&&$ %
;&&% &
using(( 
((( 

SqlCommand(( %
command((& -
=((. /
new((0 3

SqlCommand((4 >
(((> ?
null((? C
,((C D

connection((E O
)((O P
)((P Q
{)) 
command** 
.**  
CommandText**  +
=**, -
$str**. Q
;**Q R
command++ 
.++  
Prepare++  '
(++' (
)++( )
;++) *
using,, 
(,, 
SqlDataReader,, ,
dr,,- /
=,,0 1
command,,2 9
.,,9 :
ExecuteReader,,: G
(,,G H
),,H I
),,I J
{-- 
string// "
stringNumber//# /
=//0 1
dr//2 4
.//4 5
	GetString//5 >
(//> ?
$num//? @
)//@ A
;//A B
if00 
(00  
stringNumber00  ,
!=00- /
null000 4
)004 5
{11 
try22  #
{33  !
data44$ (
=44) *
int44+ .
.44. /
Parse44/ 4
(444 5
stringNumber445 A
.44A B
Trim44B F
(44F G
)44G H
)44H I
;44I J
}55  !
catch66  %
(66& '
FormatException66' 6
exceptNumberFormat667 I
)66I J
{77  !
IO88$ &
.88& '
Logger88' -
.88- .
Log88. 1
(881 2
NLog882 6
.886 7
LogLevel887 ?
.88? @
Warn88@ D
,88D E
exceptNumberFormat88F X
,88X Y
$str	88Z å
)
88å ç
;
88ç é
}99  !
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
SqlException?? 
	exceptSql??  )
)??) *
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
	exceptSqlAA2 ;
,AA; <
$strAA= W
)AAW X
;AAX Y
}BB 
}CC 	F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_51bDD B
.DDB C
BadSinkDDC J
(DDJ K
dataDDK O
)DDQ R
;DDR S
}EE 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
)NN 
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_51bSS B
.SSB C
GoodG2BSinkSSC N
(SSN O
dataSSO S
)SSU V
;SSV W
}TT 
}VV 
}WW ù	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_51b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, í 
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52bEE B
.EEB C
BadSinkEEC J
(EEJ K
dataEEK O
)EEP Q
;EEQ R
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52bTT B
.TTB C
GoodG2BSinkTTC N
(TTN O
dataTTO S
)TTT U
;TTU V
}UU 
}WW 
}XX Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ù	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52c @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- í 
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53bEE B
.EEB C
BadSinkEEC J
(EEJ K
dataEEK O
)EEP Q
;EEQ R
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53bTT B
.TTB C
GoodG2BSinkTTC N
(TTN O
dataTTO S
)TTT U
;TTU V
}UU 
}WW 
}XX Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53c @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ù	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53d @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- í 
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54bEE B
.EEB C
BadSinkEEC J
(EEJ K
dataEEK O
)EEP Q
;EEQ R
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54bTT B
.TTB C
GoodG2BSinkTTC N
(TTN O
dataTTO S
)TTT U
;TTU V
}UU 
}WW 
}XX Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54c @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54d @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54e B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54e## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' ù	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54e @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- È
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_61a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_61b M
.M N
	BadSourceN W
(W X
)X Y
;Y Z
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_61b++ M
.++M N
GoodG2BSource++N [
(++[ \
)++\ ]
;++] ^
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ƒ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_61b @
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
returnEE 
dataEE 
;EE 
}FF 
publicKK 

staticKK 
intKK 
GoodG2BSourceKK #
(KK# $
)KK$ %
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO 
returnPP 
dataPP 
;PP 
}QQ 
}SS 
}TT ä%
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_66a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
intEE 
[EE 
]EE 
	dataArrayEE 
=EE 
newEE 
intEE !
[EE! "
$numEE" #
]EE# $
;EE$ %
	dataArrayFF 
[FF 
$numFF 
]FF 
=FF 
dataFF 
;FF F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_66bGG B
.GGB C
BadSinkGGC J
(GGJ K
	dataArrayGGK T
)GGV W
;GGW X
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
)KK 
{LL 
GoodG2BMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
staticQQ 
voidQQ 
GoodG2BQQ 
(QQ  
)QQ  !
{RR 
intSS 
dataSS 
;SS 
dataUU 
=UU 
$numUU 
;UU 
intVV 
[VV 
]VV 
	dataArrayVV 
=VV 
newVV 
intVV !
[VV! "
$numVV" #
]VV# $
;VV$ %
	dataArrayWW 
[WW 
$numWW 
]WW 
=WW 
dataWW 
;WW F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_66bXX B
.XXB C
GoodG2BSinkXXC N
(XXN O
	dataArrayXXO X
)XXZ [
;XX[ \
}YY 
}[[ 
}\\ Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_66b @
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ˆ%
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_67a @
:A B
AbstractTestCaseC S
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$ 
{&& 	
try'' 
{(( 
using** 
(** 
SqlConnection** $

connection**% /
=**0 1
IO**2 4
.**4 5
GetDBConnection**5 D
(**D E
)**E F
)**F G
{++ 

connection,, 
.,, 
Open,, #
(,,# $
),,$ %
;,,% &
using.. 
(.. 

SqlCommand.. %
command..& -
=... /
new..0 3

SqlCommand..4 >
(..> ?
null..? C
,..C D

connection..E O
)..O P
)..P Q
{// 
command00 
.00  
CommandText00  +
=00, -
$str00. Q
;00Q R
command11 
.11  
Prepare11  '
(11' (
)11( )
;11) *
using22 
(22 
SqlDataReader22 ,
dr22- /
=220 1
command222 9
.229 :
ExecuteReader22: G
(22G H
)22H I
)22I J
{33 
string55 "
stringNumber55# /
=550 1
dr552 4
.554 5
	GetString555 >
(55> ?
$num55? @
)55@ A
;55A B
if66 
(66  
stringNumber66  ,
!=66- /
null660 4
)664 5
{77 
try88  #
{99  !
data::$ (
=::) *
int::+ .
.::. /
Parse::/ 4
(::4 5
stringNumber::5 A
.::A B
Trim::B F
(::F G
)::G H
)::H I
;::I J
};;  !
catch<<  %
(<<& '
FormatException<<' 6
exceptNumberFormat<<7 I
)<<I J
{==  !
IO>>$ &
.>>& '
Logger>>' -
.>>- .
Log>>. 1
(>>1 2
NLog>>2 6
.>>6 7
LogLevel>>7 ?
.>>? @
Warn>>@ D
,>>D E
exceptNumberFormat>>F X
,>>X Y
$str	>>Z å
)
>>å ç
;
>>ç é
}??  !
}@@ 
}AA 
}BB 
}CC 
}DD 
catchEE 
(EE 
SqlExceptionEE 
	exceptSqlEE  )
)EE) *
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG 
(GG 
NLogGG "
.GG" #
LogLevelGG# +
.GG+ ,
WarnGG, 0
,GG0 1
	exceptSqlGG2 ;
,GG; <
$strGG= W
)GGW X
;GGX Y
}HH 
}II 	
	ContainerJJ 
dataContainerJJ 
=JJ  !
newJJ" %
	ContainerJJ& /
(JJ/ 0
)JJ0 1
;JJ1 2
dataContainerKK 
.KK 
containerOneKK "
=KK# $
dataKK% )
;KK) *F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_67bLL B
.LLB C
BadSinkLLC J
(LLJ K
dataContainerLLK X
)LLZ [
;LL[ \
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
intXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ 
	Container[[ 
dataContainer[[ 
=[[  !
new[[" %
	Container[[& /
([[/ 0
)[[0 1
;[[1 2
dataContainer\\ 
.\\ 
containerOne\\ "
=\\# $
data\\% )
;\\) *F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_67b]] B
.]]B C
GoodG2BSink]]C N
(]]N O
dataContainer]]O \
)]]^ _
;]]_ `
}^^ 
}`` 
}aa Û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_67a Y
.Y Z
	ContainerZ c
dataContainerd q
)r s
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_67a%%# ]
.%%] ^
	Container%%^ g
dataContainer%%h u
)%%v w
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ¯
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_68a @
:A B
AbstractTestCaseC S
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_68bEE B
.EEB C
BadSinkEEC J
(EEJ K
)EEK L
;EEL M
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
dataRR 
=RR 
$numRR 
;RR F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_68bSS B
.SSB C
GoodG2BSinkSSC N
(SSN O
)SSO P
;SSP Q
}TT 
}VV 
}WW ´
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_68b @
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_68a M
.M N
dataN R
;R S
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_68a&& M
.&&M N
data&&N R
;&&R S
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ä!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_71a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_71bEE B
.EEB C
BadSinkEEC J
(EEJ K
(EEK L
ObjectEEL R
)EER S
dataEES W
)EEY Z
;EEZ [
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_71bTT B
.TTB C
GoodG2BSinkTTC N
(TTN O
(TTO P
ObjectTTP V
)TTV W
dataTTW [
)TT] ^
;TT^ _
}UU 
}WW 
}XX ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ™*
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_72a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	
	HashtableEE 
dataHashtableEE 
=EE  !
newEE" %
	HashtableEE& /
(EE/ 0
$numEE0 1
)EE1 2
;EE2 3
dataHashtableFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF !
)FF! "
;FF" #
dataHashtableGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG !
)GG! "
;GG" #
dataHashtableHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH !
)HH! "
;HH" #F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_72bII B
.IIB C
BadSinkIIC J
(IIJ K
dataHashtableIIK X
)IIZ [
;II[ \
}JJ 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
)MM 
{NN 
GoodG2BOO 
(OO 
)OO 
;OO 
}PP 
privateSS 
staticSS 
voidSS 
GoodG2BSS 
(SS  
)SS  !
{TT 
intUU 
dataUU 
;UU 
dataWW 
=WW 
$numWW 
;WW 
	HashtableXX 
dataHashtableXX 
=XX  !
newXX" %
	HashtableXX& /
(XX/ 0
$numXX0 1
)XX1 2
;XX2 3
dataHashtableYY 
.YY 
AddYY 
(YY 
$numYY 
,YY 
dataYY !
)YY! "
;YY" #
dataHashtableZZ 
.ZZ 
AddZZ 
(ZZ 
$numZZ 
,ZZ 
dataZZ !
)ZZ! "
;ZZ" #
dataHashtable[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ !
)[[! "
;[[" #F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_72b\\ B
.\\B C
GoodG2BSink\\C N
(\\N O
dataHashtable\\O \
)\\^ _
;\\_ `
}]] 
}__ 
}`` ±
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ¢*
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_73a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
using&& 
(&& 
SqlConnection&& $

connection&&% /
=&&0 1
IO&&2 4
.&&4 5
GetDBConnection&&5 D
(&&D E
)&&E F
)&&F G
{'' 

connection(( 
.(( 
Open(( #
(((# $
)(($ %
;((% &
using** 
(** 

SqlCommand** %
command**& -
=**. /
new**0 3

SqlCommand**4 >
(**> ?
null**? C
,**C D

connection**E O
)**O P
)**P Q
{++ 
command,, 
.,,  
CommandText,,  +
=,,, -
$str,,. Q
;,,Q R
command-- 
.--  
Prepare--  '
(--' (
)--( )
;--) *
using.. 
(.. 
SqlDataReader.. ,
dr..- /
=..0 1
command..2 9
...9 :
ExecuteReader..: G
(..G H
)..H I
)..I J
{// 
string11 "
stringNumber11# /
=110 1
dr112 4
.114 5
	GetString115 >
(11> ?
$num11? @
)11@ A
;11A B
if22 
(22  
stringNumber22  ,
!=22- /
null220 4
)224 5
{33 
try44  #
{55  !
data66$ (
=66) *
int66+ .
.66. /
Parse66/ 4
(664 5
stringNumber665 A
.66A B
Trim66B F
(66F G
)66G H
)66H I
;66I J
}77  !
catch88  %
(88& '
FormatException88' 6
exceptNumberFormat887 I
)88I J
{99  !
IO::$ &
.::& '
Logger::' -
.::- .
Log::. 1
(::1 2
NLog::2 6
.::6 7
LogLevel::7 ?
.::? @
Warn::@ D
,::D E
exceptNumberFormat::F X
,::X Y
$str	::Z å
)
::å ç
;
::ç é
};;  !
}<< 
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
SqlExceptionAA 
	exceptSqlAA  )
)AA) *
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
	exceptSqlCC2 ;
,CC; <
$strCC= W
)CCW X
;CCX Y
}DD 
}EE 	

LinkedListFF 
<FF 
intFF 
>FF 
dataLinkedListFF &
=FF' (
newFF) ,

LinkedListFF- 7
<FF7 8
intFF8 ;
>FF; <
(FF< =
)FF= >
;FF> ?
dataLinkedListGG 
.GG 
AddLastGG 
(GG 
dataGG #
)GG# $
;GG$ %
dataLinkedListHH 
.HH 
AddLastHH 
(HH 
dataHH #
)HH# $
;HH$ %
dataLinkedListII 
.II 
AddLastII 
(II 
dataII #
)II# $
;II$ %F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_73bJJ B
.JJB C
BadSinkJJC J
(JJJ K
dataLinkedListJJK Y
)JJ[ \
;JJ\ ]
}KK 
publicNN 

overrideNN 
voidNN 
GoodNN 
(NN 
)NN 
{OO 
GoodG2BPP 
(PP 
)PP 
;PP 
}QQ 
privateTT 
staticTT 
voidTT 
GoodG2BTT 
(TT  
)TT  !
{UU 
intVV 
dataVV 
;VV 
dataXX 
=XX 
$numXX 
;XX 

LinkedListYY 
<YY 
intYY 
>YY 
dataLinkedListYY &
=YY' (
newYY) ,

LinkedListYY- 7
<YY7 8
intYY8 ;
>YY; <
(YY< =
)YY= >
;YY> ?
dataLinkedListZZ 
.ZZ 
AddLastZZ 
(ZZ 
dataZZ #
)ZZ# $
;ZZ$ %
dataLinkedList[[ 
.[[ 
AddLast[[ 
([[ 
data[[ #
)[[# $
;[[$ %
dataLinkedList\\ 
.\\ 
AddLast\\ 
(\\ 
data\\ #
)\\# $
;\\$ %F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_73b]] B
.]]B C
GoodG2BSink]]C N
(]]N O
dataLinkedList]]O ]
)]]_ `
;]]` a
}^^ 
}`` 
}aa ›
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 –,
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_74a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	

DictionaryEE 
<EE 
intEE 
,EE 
intEE 
>EE 
dataDictionaryEE *
=EE+ ,
newEE- 0

DictionaryEE1 ;
<EE; <
intEE< ?
,EE? @
intEE@ C
>EEC D
(EED E
)EEE F
;EEF G
dataDictionaryFF 
.FF 
AddFF 
(FF 
$numFF 
,FF 
dataFF "
)FF" #
;FF# $
dataDictionaryGG 
.GG 
AddGG 
(GG 
$numGG 
,GG 
dataGG "
)GG" #
;GG# $
dataDictionaryHH 
.HH 
AddHH 
(HH 
$numHH 
,HH 
dataHH "
)HH" #
;HH# $F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_74bII B
.IIB C
BadSinkIIC J
(IIJ K
dataDictionaryIIK Y
)II[ \
;II\ ]
}JJ 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
)MM 
{NN 
GoodG2BOO 
(OO 
)OO 
;OO 
}PP 
privateSS 
staticSS 
voidSS 
GoodG2BSS 
(SS  
)SS  !
{TT 
intUU 
dataUU 
;UU 
dataWW 
=WW 
$numWW 
;WW 

DictionaryXX 
<XX 
intXX 
,XX 
intXX 
>XX 
dataDictionaryXX *
=XX+ ,
newXX- 0

DictionaryXX1 ;
<XX; <
intXX< ?
,XX? @
intXX@ C
>XXC D
(XXD E
)XXE F
;XXF G
dataDictionaryYY 
.YY 
AddYY 
(YY 
$numYY 
,YY 
dataYY "
)YY" #
;YY# $
dataDictionaryZZ 
.ZZ 
AddZZ 
(ZZ 
$numZZ 
,ZZ 
dataZZ "
)ZZ" #
;ZZ# $
dataDictionary[[ 
.[[ 
Add[[ 
([[ 
$num[[ 
,[[ 
data[[ "
)[[" #
;[[# $F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_74b\\ B
.\\B C
GoodG2BSink\\C N
(\\N O
dataDictionary\\O ]
)\\_ `
;\\` a
}]] 
}__ 
}`` ˜
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ¯3
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_75a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
using'' 
('' 
SqlConnection'' $

connection''% /
=''0 1
IO''2 4
.''4 5
GetDBConnection''5 D
(''D E
)''E F
)''F G
{(( 

connection)) 
.)) 
Open)) #
())# $
)))$ %
;))% &
using++ 
(++ 

SqlCommand++ %
command++& -
=++. /
new++0 3

SqlCommand++4 >
(++> ?
null++? C
,++C D

connection++E O
)++O P
)++P Q
{,, 
command-- 
.--  
CommandText--  +
=--, -
$str--. Q
;--Q R
command.. 
...  
Prepare..  '
(..' (
)..( )
;..) *
using// 
(// 
SqlDataReader// ,
dr//- /
=//0 1
command//2 9
.//9 :
ExecuteReader//: G
(//G H
)//H I
)//I J
{00 
string22 "
stringNumber22# /
=220 1
dr222 4
.224 5
	GetString225 >
(22> ?
$num22? @
)22@ A
;22A B
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99& '
FormatException99' 6
exceptNumberFormat997 I
)99I J
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
SqlExceptionBB 
	exceptSqlBB  )
)BB) *
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD 
(DD 
NLogDD "
.DD" #
LogLevelDD# +
.DD+ ,
WarnDD, 0
,DD0 1
	exceptSqlDD2 ;
,DD; <
$strDD= W
)DDW X
;DDX Y
}EE 
}FF 	
byteHH 
[HH 
]HH 
dataSerializedHH 
=HH 
nullHH  $
;HH$ %
tryII 
{JJ 	
BinaryFormatterKK 
bfKK 
=KK  
newKK! $
BinaryFormatterKK% 4
(KK4 5
)KK5 6
;KK6 7
usingLL 
(LL 
varLL 
msLL 
=LL 
newLL 
MemoryStreamLL  ,
(LL, -
)LL- .
)LL. /
{MM 
bfNN 
.NN 
	SerializeNN 
(NN 
msNN 
,NN  
dataNN! %
)NN% &
;NN& '
dataSerializedOO 
=OO  
msOO! #
.OO# $
ToArrayOO$ +
(OO+ ,
)OO, -
;OO- .
}PP F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_75bQQ F
.QQF G
BadSinkQQG N
(QQN O
dataSerializedQQO ]
)QQ_ `
;QQ` a
}RR 	
catchSS 
(SS "
SerializationExceptionSS %
exceptSerializeSS& 5
)SS5 6
{TT 	
IOUU 
.UU 
LoggerUU 
.UU 
LogUU 
(UU 
NLogUU 
.UU 
LogLevelUU '
.UU' (
WarnUU( ,
,UU, -
$strUU. X
,UUX Y
exceptSerializeUUZ i
)UUi j
;UUj k
}VV 	
}WW 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B\\ 
(\\ 
)\\ 
;\\ 
}]] 
private`` 
static`` 
void`` 
GoodG2B`` 
(``  
)``  !
{aa 
intbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 
byteff 
[ff 
]ff 
dataSerializedff 
=ff 
nullff  $
;ff$ %
trygg 
{hh 	
BinaryFormatterii 
bfii 
=ii  
newii! $
BinaryFormatterii% 4
(ii4 5
)ii5 6
;ii6 7
usingjj 
(jj 
varjj 
msjj 
=jj 
newjj 
MemoryStreamjj  ,
(jj, -
)jj- .
)jj. /
{kk 
bfll 
.ll 
	Serializell 
(ll 
msll 
,ll  
datall! %
)ll% &
;ll& '
dataSerializedmm 
=mm  
msmm! #
.mm# $
ToArraymm$ +
(mm+ ,
)mm, -
;mm- .
}nn F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_75boo F
.ooF G
GoodG2BSinkooG R
(ooR S
dataSerializedooS a
)ooc d
;ood e
}pp 	
catchqq 
(qq "
SerializationExceptionqq %
exceptSerializeqq& 5
)qq5 6
{rr 	
IOss 
.ss 
Loggerss 
.ss 
Logss 
(ss 
NLogss 
.ss 
LogLevelss '
.ss' (
Warnss( ,
,ss, -
$strss. X
,ssX Y
exceptSerializessZ i
)ssi j
;ssj k
}tt 	
}uu 
}ww 
}xx ›!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_75b @
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ∂#
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Database_to_short_81a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
using%% 
(%% 
SqlConnection%% $

connection%%% /
=%%0 1
IO%%2 4
.%%4 5
GetDBConnection%%5 D
(%%D E
)%%E F
)%%F G
{&& 

connection'' 
.'' 
Open'' #
(''# $
)''$ %
;''% &
using)) 
()) 

SqlCommand)) %
command))& -
=)). /
new))0 3

SqlCommand))4 >
())> ?
null))? C
,))C D

connection))E O
)))O P
)))P Q
{** 
command++ 
.++  
CommandText++  +
=++, -
$str++. Q
;++Q R
command,, 
.,,  
Prepare,,  '
(,,' (
),,( )
;,,) *
using-- 
(-- 
SqlDataReader-- ,
dr--- /
=--0 1
command--2 9
.--9 :
ExecuteReader--: G
(--G H
)--H I
)--I J
{.. 
string00 "
stringNumber00# /
=000 1
dr002 4
.004 5
	GetString005 >
(00> ?
$num00? @
)00@ A
;00A B
if11 
(11  
stringNumber11  ,
!=11- /
null110 4
)114 5
{22 
try33  #
{44  !
data55$ (
=55) *
int55+ .
.55. /
Parse55/ 4
(554 5
stringNumber555 A
.55A B
Trim55B F
(55F G
)55G H
)55H I
;55I J
}66  !
catch77  %
(77& '
FormatException77' 6
exceptNumberFormat777 I
)77I J
{88  !
IO99$ &
.99& '
Logger99' -
.99- .
Log99. 1
(991 2
NLog992 6
.996 7
LogLevel997 ?
.99? @
Warn99@ D
,99D E
exceptNumberFormat99F X
,99X Y
$str	99Z å
)
99å ç
;
99ç é
}::  !
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
SqlException@@ 
	exceptSql@@  )
)@@) *
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
	exceptSqlBB2 ;
,BB; <
$strBB= W
)BBW X
;BBX Y
}CC 
}DD 	J
>CWE197_Numeric_Truncation_Error__int_Database_to_short_81_baseEE F

baseObjectEEG Q
=EER S
newEET WJ
=CWE197_Numeric_Truncation_Error__int_Database_to_short_81_bad	EEX ï
(
EEï ñ
)
EEñ ó
;
EEó ò

baseObjectFF 
.FF 
ActionFF 
(FF 
dataFF 
)FF  
;FF  !
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
}MM 
privatePP 
voidPP 
GoodG2BPP 
(PP 
)PP 
{QQ 
intRR 
dataRR 
;RR 
dataTT 
=TT 
$numTT 
;TT J
>CWE197_Numeric_Truncation_Error__int_Database_to_short_81_baseUU F

baseObjectUUG Q
=UUR S
newUUT WN
ACWE197_Numeric_Truncation_Error__int_Database_to_short_81_goodG2B	UUX ô
(
UUô ö
)
UUö õ
;
UUõ ú

baseObjectVV 
.VV 
ActionVV 
(VV 
dataVV 
)VV  
;VV  !
}WW 
}YY 
}ZZ ä
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Database_to_short_81_bad C
:D EK
>CWE197_Numeric_Truncation_Error__int_Database_to_short_81_base	F Ñ
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" Û
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 J
>CWE197_Numeric_Truncation_Error__int_Database_to_short_81_base M
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} í
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Database_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__int_Database_to_short_81_goodG2B G
:H IK
>CWE197_Numeric_Truncation_Error__int_Database_to_short_81_base	J à
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" Ó
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_01 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
byte00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
public55 

override55 
void55 
Good55 
(55 
)55 
{66 
GoodG2B77 
(77 
)77 
;77 
}88 
private;; 
void;; 
GoodG2B;; 
(;; 
);; 
{<< 
int== 
data== 
;== 
data?? 
=?? 
$num?? 
;?? 
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
byteBB 
)BB 
dataBB #
)BB# $
;BB$ %
}CC 	
}DD 
}FF 
}GG Ÿ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_02 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
byte99 
)99 
data99 #
)99# $
;99$ %
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
falseBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
trueWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo æ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_03 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
byte99 
)99 
data99 #
)99# $
;99$ %
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
$numBB 
!=BB 
$numBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
$numWW 
==WW 
$numWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo ô 
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_04 A
:B C
AbstractTestCaseD T
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&&  
{)) 
string** 
stringNumber** #
=**$ %
Environment**& 1
.**1 2"
GetEnvironmentVariable**2 H
(**H I
$str**I N
)**N O
;**O P
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
int// "
.//" #
Parse//# (
(//( )
stringNumber//) 5
.//5 6
Trim//6 :
(//: ;
)//; <
)//< =
;//= >
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateFF 
voidFF 
GoodG2B1FF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
ifII 

(II 
PRIVATE_CONST_FALSEII 
)II  
{JJ 	
dataMM 
=MM 
$numMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV 
)VV 
dataVV #
)VV# $
;VV$ %
}WW 	
}XX 
private[[ 
void[[ 
GoodG2B2[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
if^^ 

(^^ 
PRIVATE_CONST_TRUE^^ 
)^^ 
{__ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
bytekk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
)oo 
{pp 
GoodG2B1qq 
(qq 
)qq 
;qq 
GoodG2B2rr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv –
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_05 A
:B C
AbstractTestCaseD T
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&&  
{)) 
string** 
stringNumber** #
=**$ %
Environment**& 1
.**1 2"
GetEnvironmentVariable**2 H
(**H I
$str**I N
)**N O
;**O P
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
int// "
.//" #
Parse//# (
(//( )
stringNumber//) 5
.//5 6
Trim//6 :
(//: ;
)//; <
)//< =
;//= >
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateFF 
voidFF 
GoodG2B1FF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
ifII 

(II 
privateFalseII 
)II 
{JJ 	
dataMM 
=MM 
$numMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV 
)VV 
dataVV #
)VV# $
;VV$ %
}WW 	
}XX 
private[[ 
void[[ 
GoodG2B2[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
if^^ 

(^^ 
privateTrue^^ 
)^^ 
{__ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
bytekk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
)oo 
{pp 
GoodG2B1qq 
(qq 
)qq 
;qq 
GoodG2B2rr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv Ò
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_06 A
:B C
AbstractTestCaseD T
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%%  
{(( 
string)) 
stringNumber)) #
=))$ %
Environment))& 1
.))1 2"
GetEnvironmentVariable))2 H
())H I
$str))I N
)))N O
;))O P
if** 
(** 
stringNumber**  
!=**! #
null**$ (
)**( )
{++ 
try,, 
{-- 
data.. 
=.. 
int.. "
..." #
Parse..# (
(..( )
stringNumber..) 5
...5 6
Trim..6 :
(..: ;
)..; <
)..< =
;..= >
}// 
catch00 
(00 
FormatException00 *
exceptNumberFormat00+ =
)00= >
{11 
IO22 
.22 
Logger22 !
.22! "
Log22" %
(22% &
NLog22& *
.22* +
LogLevel22+ 3
.223 4
Warn224 8
,228 9
exceptNumberFormat22: L
,22L M
$str	22N Ä
)
22Ä Å
;
22Å Ç
}33 
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
byte?? 
)?? 
data?? #
)??# $
;??$ %
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
PRIVATE_CONST_FIVEHH 
!=HH !
$numHH" #
)HH# $
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
privateZZ 
voidZZ 
GoodG2B2ZZ 
(ZZ 
)ZZ 
{[[ 
int\\ 
data\\ 
;\\ 
if]] 

(]] 
PRIVATE_CONST_FIVE]] 
==]] !
$num]]" #
)]]# $
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataff 
=ff 
$numff 
;ff 
}gg 	
{hh 	
IOjj 
.jj 
	WriteLinejj 
(jj 
(jj 
bytejj 
)jj 
datajj #
)jj# $
;jj$ %
}kk 	
}ll 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2B1pp 
(pp 
)pp 
;pp 
GoodG2B2qq 
(qq 
)qq 
;qq 
}rr 
}tt 
}uu ¬
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_07 A
:B C
AbstractTestCaseD T
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%%  
{(( 
string)) 
stringNumber)) #
=))$ %
Environment))& 1
.))1 2"
GetEnvironmentVariable))2 H
())H I
$str))I N
)))N O
;))O P
if** 
(** 
stringNumber**  
!=**! #
null**$ (
)**( )
{++ 
try,, 
{-- 
data.. 
=.. 
int.. "
..." #
Parse..# (
(..( )
stringNumber..) 5
...5 6
Trim..6 :
(..: ;
)..; <
)..< =
;..= >
}// 
catch00 
(00 
FormatException00 *
exceptNumberFormat00+ =
)00= >
{11 
IO22 
.22 
Logger22 !
.22! "
Log22" %
(22% &
NLog22& *
.22* +
LogLevel22+ 3
.223 4
Warn224 8
,228 9
exceptNumberFormat22: L
,22L M
$str	22N Ä
)
22Ä Å
;
22Å Ç
}33 
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
byte?? 
)?? 
data?? #
)??# $
;??$ %
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
privateFiveHH 
!=HH 
$numHH 
)HH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
privateZZ 
voidZZ 
GoodG2B2ZZ 
(ZZ 
)ZZ 
{[[ 
int\\ 
data\\ 
;\\ 
if]] 

(]] 
privateFive]] 
==]] 
$num]] 
)]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataff 
=ff 
$numff 
;ff 
}gg 	
{hh 	
IOjj 
.jj 
	WriteLinejj 
(jj 
(jj 
bytejj 
)jj 
datajj #
)jj# $
;jj$ %
}kk 	
}ll 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2B1pp 
(pp 
)pp 
;pp 
GoodG2B2qq 
(qq 
)qq 
;qq 
}rr 
}tt 
}uu ˜!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_08 A
:B C
AbstractTestCaseD T
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;--  
{00 
string11 
stringNumber11 #
=11$ %
Environment11& 1
.111 2"
GetEnvironmentVariable112 H
(11H I
$str11I N
)11N O
;11O P
if22 
(22 
stringNumber22  
!=22! #
null22$ (
)22( )
{33 
try44 
{55 
data66 
=66 
int66 "
.66" #
Parse66# (
(66( )
stringNumber66) 5
.665 6
Trim666 :
(66: ;
)66; <
)66< =
;66= >
}77 
catch88 
(88 
FormatException88 *
exceptNumberFormat88+ =
)88= >
{99 
IO:: 
.:: 
Logger:: !
.::! "
Log::" %
(::% &
NLog::& *
.::* +
LogLevel::+ 3
.::3 4
Warn::4 8
,::8 9
exceptNumberFormat::: L
,::L M
$str	::N Ä
)
::Ä Å
;
::Å Ç
};; 
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
PrivateReturnsFalsePP 
(PP  
)PP  !
)PP! "
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
PrivateReturnsTrueee 
(ee 
)ee  
)ee  !
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} Ê
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_09 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
byte99 
)99 
data99 #
)99# $
;99$ %
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB !
STATIC_READONLY_FALSEBB $
)BB$ %
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW  
STATIC_READONLY_TRUEWW #
)WW# $
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo »
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_10 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
byte99 
)99 
data99 #
)99# $
;99$ %
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 
staticFalseBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW 

staticTrueWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo ∑
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_11 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
byte99 
)99 
data99 #
)99# $
;99$ %
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 
StaticReturnsFalseBB !
(BB! "
)BB" #
)BB# $
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW 
StaticReturnsTrueWW  
(WW  !
)WW! "
)WW" #
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo µ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_12 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
byte88 
)88 
data88 #
)88# $
;88$ %
}99 	
}:: 
private?? 
void?? 
GoodG2B?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB $
StaticReturnsTrueOrFalseBB '
(BB' (
)BB( )
)BB) *
{CC 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodG2BTT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX À
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_13 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
byte99 
)99 
data99 #
)99# $
;99$ %
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB  
STATIC_READONLY_FIVEBB #
!=BB$ &
$numBB' (
)BB( )
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW  
STATIC_READONLY_FIVEWW #
==WW$ &
$numWW' (
)WW( )
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo ≠
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_14 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
byte99 
)99 
data99 #
)99# $
;99$ %
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 

staticFiveBB 
!=BB 
$numBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
byteOO 
)OO 
dataOO #
)OO# $
;OO$ %
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW 

staticFiveWW 
==WW 
$numWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo à!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_15 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data   
=   
int   
.   
MinValue   
;    
{## 
string$$ 
stringNumber$$ #
=$$$ %
Environment$$& 1
.$$1 2"
GetEnvironmentVariable$$2 H
($$H I
$str$$I N
)$$N O
;$$O P
if%% 
(%% 
stringNumber%%  
!=%%! #
null%%$ (
)%%( )
{&& 
try'' 
{(( 
data)) 
=)) 
int)) "
.))" #
Parse))# (
())( )
stringNumber))) 5
.))5 6
Trim))6 :
()): ;
))); <
)))< =
;))= >
}** 
catch++ 
(++ 
FormatException++ *
exceptNumberFormat+++ =
)++= >
{,, 
IO-- 
.-- 
Logger-- !
.--! "
Log--" %
(--% &
NLog--& *
.--* +
LogLevel--+ 3
.--3 4
Warn--4 8
,--8 9
exceptNumberFormat--: L
,--L M
$str	--N Ä
)
--Ä Å
;
--Å Ç
}.. 
}// 
}00 
break11 
;11 
default22 
:22 
data55 
=55 
$num55 
;55 
break66 
;66 
}77 	
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
byte:: 
):: 
data:: #
)::# $
;::$ %
};; 	
}<< 
private@@ 
void@@ 
GoodG2B1@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
=BB 
$numBB 
;BB 
switchCC 
(CC 
$numCC 
)CC 
{DD 	
caseEE 
$numEE 
:EE 
dataHH 
=HH 
$numHH 
;HH 
breakII 
;II 
defaultJJ 
:JJ 
dataLL 
=LL 
$numLL 
;LL 
breakMM 
;MM 
}NN 	
{OO 	
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
(QQ 
byteQQ 
)QQ 
dataQQ #
)QQ# $
;QQ$ %
}RR 	
}SS 
privateVV 
voidVV 
GoodG2B2VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
=XX 
$numXX 
;XX 
switchYY 
(YY 
$numYY 
)YY 
{ZZ 	
case[[ 
$num[[ 
:[[ 
data]] 
=]] 
$num]] 
;]] 
break^^ 
;^^ 
default__ 
:__ 
databb 
=bb 
$numbb 
;bb 
breakcc 
;cc 
}dd 	
{ee 	
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
bytegg 
)gg 
datagg #
)gg# $
;gg$ %
}hh 	
}ii 
publickk 

overridekk 
voidkk 
Goodkk 
(kk 
)kk 
{ll 
GoodG2B1mm 
(mm 
)mm 
;mm 
GoodG2B2nn 
(nn 
)nn 
;nn 
}oo 
}qq 
}rr ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_16 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
break00 
;00 
}11 	
{22 	
IO44 
.44 
	WriteLine44 
(44 
(44 
byte44 
)44 
data44 #
)44# $
;44$ %
}55 	
}66 
private:: 
void:: 
GoodG2B:: 
(:: 
):: 
{;; 
int<< 
data<< 
;<< 
while== 
(== 
true== 
)== 
{>> 	
data@@ 
=@@ 
$num@@ 
;@@ 
breakAA 
;AA 
}BB 	
{CC 	
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
byteEE 
)EE 
dataEE #
)EE# $
;EE$ %
}FF 	
}GG 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
}NN 
}OO ‰
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_17 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
for.. 
(.. 
int.. 
i.. 
=.. 
$num.. 
;.. 
i.. 
<.. 
$num.. 
;.. 
i..  
++..  "
).." #
{// 	
{00 
IO22 
.22 
	WriteLine22 
(22 
(22 
byte22 "
)22" #
data22# '
)22' (
;22( )
}33 
}44 	
}55 
private:: 
void:: 
GoodG2B:: 
(:: 
):: 
{;; 
int<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
for?? 
(?? 
int?? 
i?? 
=?? 
$num?? 
;?? 
i?? 
<?? 
$num?? 
;?? 
i??  
++??  "
)??" #
{@@ 	
{AA 
IOCC 
.CC 
	WriteLineCC 
(CC 
(CC 
byteCC "
)CC" #
dataCC# '
)CC' (
;CC( )
}DD 
}EE 	
}FF 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
}MM 
}NN Ü+
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_21 A
:B C
AbstractTestCaseD T
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
private(( 
int(( 

Bad_source(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;--  
{00 
string11 
stringNumber11 #
=11$ %
Environment11& 1
.111 2"
GetEnvironmentVariable112 H
(11H I
$str11I N
)11N O
;11O P
if22 
(22 
stringNumber22  
!=22! #
null22$ (
)22( )
{33 
try44 
{55 
data66 
=66 
int66 "
.66" #
Parse66# (
(66( )
stringNumber66) 5
.665 6
Trim666 :
(66: ;
)66; <
)66< =
;66= >
}77 
catch88 
(88 
FormatException88 *
exceptNumberFormat88+ =
)88= >
{99 
IO:: 
.:: 
Logger:: !
.::! "
Log::" %
(::% &
NLog::& *
.::* +
LogLevel::+ 3
.::3 4
Warn::4 8
,::8 9
exceptNumberFormat::: L
,::L M
$str	::N Ä
)
::Ä Å
;
::Å Ç
};; 
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
returnEE 
dataEE 
;EE 
}FF 
privateII 
boolII 
goodG2B1_privateII !
=II" #
falseII$ )
;II) *
privateJJ 
boolJJ 
GoodG2B2_privateJJ !
=JJ" #
falseJJ$ )
;JJ) *
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2B1NN 
(NN 
)NN 
;NN 
GoodG2B2OO 
(OO 
)OO 
;OO 
}PP 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
goodG2B1_privateVV 
=VV 
falseVV  
;VV  !
dataWW 
=WW 
GoodG2B1_sourceWW 
(WW 
)WW  
;WW  !
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
byteZZ 
)ZZ 
dataZZ #
)ZZ# $
;ZZ$ %
}[[ 	
}\\ 
private^^ 
int^^ 
GoodG2B1_source^^ 
(^^  
)^^  !
{__ 
int`` 
data`` 
=`` 
$num`` 
;`` 
ifaa 

(aa 
goodG2B1_privateaa 
)aa 
{bb 	
dataee 
=ee 
$numee 
;ee 
}ff 	
elsegg 
{hh 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
returnll 
datall 
;ll 
}mm 
privatepp 
voidpp 
GoodG2B2pp 
(pp 
)pp 
{qq 
intrr 
datarr 
;rr 
GoodG2B2_privatess 
=ss 
truess 
;ss  
datatt 
=tt 
GoodG2B2_sourcett 
(tt 
)tt  
;tt  !
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
private{{ 
int{{ 
GoodG2B2_source{{ 
({{  
){{  !
{|| 
int}} 
data}} 
=}} 
$num}} 
;}} 
if~~ 

(~~ 
GoodG2B2_private~~ 
)~~ 
{ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
return
ââ 
data
ââ 
;
ââ 
}
ää 
}åå 
}çç ®
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a B
:C D
AbstractTestCaseE U
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22b!! K
.!!K L
	BadSource!!L U
(!!U V
)!!V W
;!!W X
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22b88 K
.88K L
GoodG2B1Source88L Z
(88Z [
)88[ \
;88\ ]
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22bDD K
.DDK L
GoodG2B2SourceDDL Z
(DDZ [
)DD[ \
;DD\ ]
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ‹
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22b B
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a H
.H I
badPublicStaticI X
)X Y
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
return77 
data77 
;77 
}88 
public== 

static== 
int== 
GoodG2B1Source== $
(==$ %
)==% &
{>> 
int?? 
data?? 
;?? 
if@@ 

(@@ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a@@ H
.@@H I 
goodG2B1PublicStatic@@I ]
)@@] ^
{AA 	
dataDD 
=DD 
$numDD 
;DD 
}EE 	
elseFF 
{GG 	
dataII 
=II 
$numII 
;II 
}JJ 	
returnKK 
dataKK 
;KK 
}LL 
publicOO 

staticOO 
intOO 
GoodG2B2SourceOO $
(OO$ %
)OO% &
{PP 
intQQ 
dataQQ 
;QQ 
ifRR 

(RR H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22aRR H
.RRH I 
GoodG2B2PublicStaticRRI ]
)RR] ^
{SS 	
dataUU 
=UU 
$numUU 
;UU 
}VV 	
elseWW 
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
}`` 
}aa ë
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_31 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{ 	
int 
data 
; 
data   
=   
int   
.   
MinValue   
;    
{## 
string$$ 
stringNumber$$ #
=$$$ %
Environment$$& 1
.$$1 2"
GetEnvironmentVariable$$2 H
($$H I
$str$$I N
)$$N O
;$$O P
if%% 
(%% 
stringNumber%%  
!=%%! #
null%%$ (
)%%( )
{&& 
try'' 
{(( 
data)) 
=)) 
int)) "
.))" #
Parse))# (
())( )
stringNumber))) 5
.))5 6
Trim))6 :
()): ;
))); <
)))< =
;))= >
}** 
catch++ 
(++ 
FormatException++ *
exceptNumberFormat+++ =
)++= >
{,, 
IO-- 
.-- 
Logger-- !
.--! "
Log--" %
(--% &
NLog--& *
.--* +
LogLevel--+ 3
.--3 4
Warn--4 8
,--8 9
exceptNumberFormat--: L
,--L M
$str	--N Ä
)
--Ä Å
;
--Å Ç
}.. 
}// 
}00 
dataCopy11 
=11 
data11 
;11 
}22 	
{33 	
int44 
data44 
=44 
dataCopy44 
;44  
{55 
IO77 
.77 
	WriteLine77 
(77 
(77 
byte77 "
)77" #
data77# '
)77' (
;77( )
}88 
}99 	
}:: 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B?? 
(?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
)CC 
{DD 
intEE 
dataCopyEE 
;EE 
{FF 	
intGG 
dataGG 
;GG 
dataII 
=II 
$numII 
;II 
dataCopyJJ 
=JJ 
dataJJ 
;JJ 
}KK 	
{LL 	
intMM 
dataMM 
=MM 
dataCopyMM 
;MM  
{NN 
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP "
)PP" #
dataPP# '
)PP' (
;PP( )
}QQ 
}RR 	
}SS 
}UU 
}VV ê
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_41 A
:B C
AbstractTestCaseD T
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$ 
{'' 	
string(( 
stringNumber(( 
=((  !
Environment((" -
.((- ."
GetEnvironmentVariable((. D
(((D E
$str((E J
)((J K
;((K L
if)) 
()) 
stringNumber)) 
!=)) 
null))  $
)))$ %
{** 
try++ 
{,, 
data-- 
=-- 
int-- 
.-- 
Parse-- $
(--$ %
stringNumber--% 1
.--1 2
Trim--2 6
(--6 7
)--7 8
)--8 9
;--9 :
}.. 
catch// 
(// 
FormatException// &
exceptNumberFormat//' 9
)//9 :
{00 
IO11 
.11 
Logger11 
.11 
Log11 !
(11! "
NLog11" &
.11& '
LogLevel11' /
.11/ 0
Warn110 4
,114 5
exceptNumberFormat116 H
,11H I
$str11J |
)11| }
;11} ~
}22 
}33 
}44 	
BadSink55 
(55 
data55 
)55 
;55 
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
private>> 
static>> 
void>> 
GoodG2BSink>> #
(>># $
int>>$ '
data>>( ,
)>>- .
{?? 
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
byteBB 
)BB 
dataBB #
)BB# $
;BB$ %
}CC 	
}DD 
privateGG 
staticGG 
voidGG 
GoodG2BGG 
(GG  
)GG  !
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK 
GoodG2BSinkLL 
(LL 
dataLL 
)LL 
;LL 
}MM 
}OO 
}PP ˙
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_42 A
:B C
AbstractTestCaseD T
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
string   
stringNumber   
=    !
Environment  " -
.  - ."
GetEnvironmentVariable  . D
(  D E
$str  E J
)  J K
;  K L
if!! 
(!! 
stringNumber!! 
!=!! 
null!!  $
)!!$ %
{"" 
try## 
{$$ 
data%% 
=%% 
int%% 
.%% 
Parse%% $
(%%$ %
stringNumber%%% 1
.%%1 2
Trim%%2 6
(%%6 7
)%%7 8
)%%8 9
;%%9 :
}&& 
catch'' 
('' 
FormatException'' &
exceptNumberFormat''' 9
)''9 :
{(( 
IO)) 
.)) 
Logger)) 
.)) 
Log)) !
())! "
NLog))" &
.))& '
LogLevel))' /
.))/ 0
Warn))0 4
,))4 5
exceptNumberFormat))6 H
,))H I
$str))J |
)))| }
;))} ~
}** 
}++ 
},, 	
return-- 
data-- 
;-- 
}.. 
public11 

override11 
void11 
Bad11 
(11 
)11 
{22 
int33 
data33 
=33 
	BadSource33 
(33 
)33 
;33 
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
byte66 
)66 
data66 #
)66# $
;66$ %
}77 	
}88 
private;; 
static;; 
int;; 
GoodG2BSource;; $
(;;$ %
);;% &
{<< 
int== 
data== 
;== 
data?? 
=?? 
$num?? 
;?? 
return@@ 
data@@ 
;@@ 
}AA 
privateDD 
staticDD 
voidDD 
GoodG2BDD 
(DD  
)DD  !
{EE 
intFF 
dataFF 
=FF 
GoodG2BSourceFF  
(FF  !
)FF! "
;FF" #
{GG 	
IOII 
.II 
	WriteLineII 
(II 
(II 
byteII 
)II 
dataII #
)II# $
;II$ %
}JJ 	
}KK 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
)MM 
{NN 
GoodG2BOO 
(OO 
)OO 
;OO 
}PP 
}RR 
}SS ¿
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_45 A
:B C
AbstractTestCaseD T
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
int 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
byte"" 
)"" 
data"" #
)""# $
;""$ %
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
int)) 
data)) 
;)) 
data** 
=** 
int** 
.** 
MinValue** 
;** 
{-- 	
string.. 
stringNumber.. 
=..  !
Environment.." -
...- ."
GetEnvironmentVariable... D
(..D E
$str..E J
)..J K
;..K L
if// 
(// 
stringNumber// 
!=// 
null//  $
)//$ %
{00 
try11 
{22 
data33 
=33 
int33 
.33 
Parse33 $
(33$ %
stringNumber33% 1
.331 2
Trim332 6
(336 7
)337 8
)338 9
;339 :
}44 
catch55 
(55 
FormatException55 &
exceptNumberFormat55' 9
)559 :
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptNumberFormat776 H
,77H I
$str77J |
)77| }
;77} ~
}88 
}99 
}:: 	
dataBad;; 
=;; 
data;; 
;;; 
BadSink<< 
(<< 
)<< 
;<< 
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateEE 
voidEE 
GoodG2BSinkEE 
(EE 
)EE 
{FF 
intGG 
dataGG 
=GG 
dataGoodG2BGG 
;GG 
{HH 	
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
(JJ 
byteJJ 
)JJ 
dataJJ #
)JJ# $
;JJ$ %
}KK 	
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 
dataGoodG2BTT 
=TT 
dataTT 
;TT 
GoodG2BSinkUU 
(UU 
)UU 
;UU 
}VV 
}XX 
}YY »
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
string   
stringNumber   
=    !
Environment  " -
.  - ."
GetEnvironmentVariable  . D
(  D E
$str  E J
)  J K
;  K L
if!! 
(!! 
stringNumber!! 
!=!! 
null!!  $
)!!$ %
{"" 
try## 
{$$ 
data%% 
=%% 
int%% 
.%% 
Parse%% $
(%%$ %
stringNumber%%% 1
.%%1 2
Trim%%2 6
(%%6 7
)%%7 8
)%%8 9
;%%9 :
}&& 
catch'' 
('' 
FormatException'' &
exceptNumberFormat''' 9
)''9 :
{(( 
IO)) 
.)) 
Logger)) 
.)) 
Log)) !
())! "
NLog))" &
.))& '
LogLevel))' /
.))/ 0
Warn))0 4
,))4 5
exceptNumberFormat))6 H
,))H I
$str))J |
)))| }
;))} ~
}** 
}++ 
},, 	H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51b-- D
.--D E
BadSink--E L
(--L M
data--M Q
)--S T
;--T U
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private77 
void77 
GoodG2B77 
(77 
)77 
{88 
int99 
data99 
;99 
data;; 
=;; 
$num;; 
;;; H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51b<< D
.<<D E
GoodG2BSink<<E P
(<<P Q
data<<Q U
)<<W X
;<<X Y
}== 
}?? 
}@@ ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, »
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52b.. D
...D E
BadSink..E L
(..L M
data..M Q
)..R S
;..S T
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
)88 
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52b== D
.==D E
GoodG2BSink==E P
(==P Q
data==Q U
)==V W
;==W X
}>> 
}@@ 
}AA ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- »
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53b.. D
...D E
BadSink..E L
(..L M
data..M Q
)..R S
;..S T
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
)88 
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53b== D
.==D E
GoodG2BSink==E P
(==P Q
data==Q U
)==V W
;==W X
}>> 
}@@ 
}AA ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53d B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- »
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54b.. D
...D E
BadSink..E L
(..L M
data..M Q
)..R S
;..S T
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
)88 
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54b== D
.==D E
GoodG2BSink==E P
(==P Q
data==Q U
)==V W
;==W X
}>> 
}@@ 
}AA ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54d B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54e D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54e## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ü	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54e B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Ô
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61b O
.O P
	BadSourceP Y
(Y Z
)Z [
;[ \
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61b++ O
.++O P
GoodG2BSource++P ]
(++] ^
)++^ _
;++_ `
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ˆ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61b B
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
return.. 
data.. 
;.. 
}// 
public44 

static44 
int44 
GoodG2BSource44 #
(44# $
)44$ %
{55 
int66 
data66 
;66 
data88 
=88 
$num88 
;88 
return99 
data99 
;99 
}:: 
}<< 
}== ¿
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
int.. 
[.. 
].. 
	dataArray.. 
=.. 
new.. 
int.. !
[..! "
$num.." #
]..# $
;..$ %
	dataArray// 
[// 
$num// 
]// 
=// 
data// 
;// H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66b00 D
.00D E
BadSink00E L
(00L M
	dataArray00M V
)00X Y
;00Y Z
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
int<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
int?? 
[?? 
]?? 
	dataArray?? 
=?? 
new?? 
int?? !
[??! "
$num??" #
]??# $
;??$ %
	dataArray@@ 
[@@ 
$num@@ 
]@@ 
=@@ 
data@@ 
;@@ H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66bAA D
.AAD E
GoodG2BSinkAAE P
(AAP Q
	dataArrayAAQ Z
)AA\ ]
;AA] ^
}BB 
}DD 
}EE ı
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66b B
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ¨
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67a B
:C D
AbstractTestCaseE U
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;"" 
{%% 	
string&& 
stringNumber&& 
=&&  !
Environment&&" -
.&&- ."
GetEnvironmentVariable&&. D
(&&D E
$str&&E J
)&&J K
;&&K L
if'' 
('' 
stringNumber'' 
!='' 
null''  $
)''$ %
{(( 
try)) 
{** 
data++ 
=++ 
int++ 
.++ 
Parse++ $
(++$ %
stringNumber++% 1
.++1 2
Trim++2 6
(++6 7
)++7 8
)++8 9
;++9 :
},, 
catch-- 
(-- 
FormatException-- &
exceptNumberFormat--' 9
)--9 :
{.. 
IO// 
.// 
Logger// 
.// 
Log// !
(//! "
NLog//" &
.//& '
LogLevel//' /
./// 0
Warn//0 4
,//4 5
exceptNumberFormat//6 H
,//H I
$str//J |
)//| }
;//} ~
}00 
}11 
}22 	
	Container33 
dataContainer33 
=33  !
new33" %
	Container33& /
(33/ 0
)330 1
;331 2
dataContainer44 
.44 
containerOne44 "
=44# $
data44% )
;44) *H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67b55 D
.55D E
BadSink55E L
(55L M
dataContainer55M Z
)55\ ]
;55] ^
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
)??  !
{@@ 
intAA 
dataAA 
;AA 
dataCC 
=CC 
$numCC 
;CC 
	ContainerDD 
dataContainerDD 
=DD  !
newDD" %
	ContainerDD& /
(DD/ 0
)DD0 1
;DD1 2
dataContainerEE 
.EE 
containerOneEE "
=EE# $
dataEE% )
;EE) *H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67bFF D
.FFD E
GoodG2BSinkFFE P
(FFP Q
dataContainerFFQ ^
)FF` a
;FFa b
}GG 
}II 
}JJ ˘
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67b B
{ 
public 

static 
void 
BadSink 
( H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67a [
.[ \
	Container\ e
dataContainerf s
)t u
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67a%%# _
.%%_ `
	Container%%` i
dataContainer%%j w
)%%x y
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// Æ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68a B
:C D
AbstractTestCaseE U
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68b.. D
...D E
BadSink..E L
(..L M
)..M N
;..N O
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
data;; 
=;; 
$num;; 
;;; H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68b<< D
.<<D E
GoodG2BSink<<E P
(<<P Q
)<<Q R
;<<R S
}== 
}?? 
}@@ ±
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68b B
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68a O
.O P
dataP T
;T U
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68a&& O
.&&O P
data&&P T
;&&T U
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ¿
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71b.. D
...D E
BadSink..E L
(..L M
(..M N
Object..N T
)..T U
data..U Y
)..[ \
;..\ ]
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71b== D
.==D E
GoodG2BSink==E P
(==P Q
(==Q R
Object==R X
)==X Y
data==Y ]
)==_ `
;==` a
}>> 
}@@ 
}AA ¡
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71b B
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ‡
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
	Hashtable.. 
dataHashtable.. 
=..  !
new.." %
	Hashtable..& /
(../ 0
$num..0 1
)..1 2
;..2 3
dataHashtable// 
.// 
Add// 
(// 
$num// 
,// 
data// !
)//! "
;//" #
dataHashtable00 
.00 
Add00 
(00 
$num00 
,00 
data00 !
)00! "
;00" #
dataHashtable11 
.11 
Add11 
(11 
$num11 
,11 
data11 !
)11! "
;11" #H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72b22 D
.22D E
BadSink22E L
(22L M
dataHashtable22M Z
)22\ ]
;22] ^
}33 
public66 

override66 
void66 
Good66 
(66 
)66 
{77 
GoodG2B88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
int>> 
data>> 
;>> 
data@@ 
=@@ 
$num@@ 
;@@ 
	HashtableAA 
dataHashtableAA 
=AA  !
newAA" %
	HashtableAA& /
(AA/ 0
$numAA0 1
)AA1 2
;AA2 3
dataHashtableBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB !
)BB! "
;BB" #
dataHashtableCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC !
)CC! "
;CC" #
dataHashtableDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD !
)DD! "
;DD" #H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72bEE D
.EED E
GoodG2BSinkEEE P
(EEP Q
dataHashtableEEQ ^
)EE` a
;EEa b
}FF 
}HH 
}II ≥
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72b B
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ÿ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
string"" 
stringNumber"" 
=""  !
Environment""" -
.""- ."
GetEnvironmentVariable"". D
(""D E
$str""E J
)""J K
;""K L
if## 
(## 
stringNumber## 
!=## 
null##  $
)##$ %
{$$ 
try%% 
{&& 
data'' 
='' 
int'' 
.'' 
Parse'' $
(''$ %
stringNumber''% 1
.''1 2
Trim''2 6
(''6 7
)''7 8
)''8 9
;''9 :
}(( 
catch)) 
()) 
FormatException)) &
exceptNumberFormat))' 9
)))9 :
{** 
IO++ 
.++ 
Logger++ 
.++ 
Log++ !
(++! "
NLog++" &
.++& '
LogLevel++' /
.++/ 0
Warn++0 4
,++4 5
exceptNumberFormat++6 H
,++H I
$str++J |
)++| }
;++} ~
},, 
}-- 
}.. 	

LinkedList// 
<// 
int// 
>// 
dataLinkedList// &
=//' (
new//) ,

LinkedList//- 7
<//7 8
int//8 ;
>//; <
(//< =
)//= >
;//> ?
dataLinkedList00 
.00 
AddLast00 
(00 
data00 #
)00# $
;00$ %
dataLinkedList11 
.11 
AddLast11 
(11 
data11 #
)11# $
;11$ %
dataLinkedList22 
.22 
AddLast22 
(22 
data22 #
)22# $
;22$ %H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73b33 D
.33D E
BadSink33E L
(33L M
dataLinkedList33M [
)33] ^
;33^ _
}44 
public77 

override77 
void77 
Good77 
(77 
)77 
{88 
GoodG2B99 
(99 
)99 
;99 
}:: 
private== 
static== 
void== 
GoodG2B== 
(==  
)==  !
{>> 
int?? 
data?? 
;?? 
dataAA 
=AA 
$numAA 
;AA 

LinkedListBB 
<BB 
intBB 
>BB 
dataLinkedListBB &
=BB' (
newBB) ,

LinkedListBB- 7
<BB7 8
intBB8 ;
>BB; <
(BB< =
)BB= >
;BB> ?
dataLinkedListCC 
.CC 
AddLastCC 
(CC 
dataCC #
)CC# $
;CC$ %
dataLinkedListDD 
.DD 
AddLastDD 
(DD 
dataDD #
)DD# $
;DD$ %
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73bFF D
.FFD E
GoodG2BSinkFFE P
(FFP Q
dataLinkedListFFQ _
)FFa b
;FFb c
}GG 
}II 
}JJ ﬂ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73b B
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ü!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	

Dictionary.. 
<.. 
int.. 
,.. 
int.. 
>.. 
dataDictionary.. *
=..+ ,
new..- 0

Dictionary..1 ;
<..; <
int..< ?
,..? @
int..@ C
>..C D
(..D E
)..E F
;..F G
dataDictionary// 
.// 
Add// 
(// 
$num// 
,// 
data// "
)//" #
;//# $
dataDictionary00 
.00 
Add00 
(00 
$num00 
,00 
data00 "
)00" #
;00# $
dataDictionary11 
.11 
Add11 
(11 
$num11 
,11 
data11 "
)11" #
;11# $H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74b22 D
.22D E
BadSink22E L
(22L M
dataDictionary22M [
)22] ^
;22^ _
}33 
public66 

override66 
void66 
Good66 
(66 
)66 
{77 
GoodG2B88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
int>> 
data>> 
;>> 
data@@ 
=@@ 
$num@@ 
;@@ 

DictionaryAA 
<AA 
intAA 
,AA 
intAA 
>AA 
dataDictionaryAA *
=AA+ ,
newAA- 0

DictionaryAA1 ;
<AA; <
intAA< ?
,AA? @
intAA@ C
>AAC D
(AAD E
)AAE F
;AAF G
dataDictionaryBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB "
)BB" #
;BB# $
dataDictionaryCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC "
)CC" #
;CC# $
dataDictionaryDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD "
)DD" #
;DD# $H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74bEE D
.EED E
GoodG2BSinkEEE P
(EEP Q
dataDictionaryEEQ _
)EEa b
;EEb c
}FF 
}HH 
}II ˘
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74b B
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Æ(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{"" 	
string## 
stringNumber## 
=##  !
Environment##" -
.##- ."
GetEnvironmentVariable##. D
(##D E
$str##E J
)##J K
;##K L
if$$ 
($$ 
stringNumber$$ 
!=$$ 
null$$  $
)$$$ %
{%% 
try&& 
{'' 
data(( 
=(( 
int(( 
.(( 
Parse(( $
((($ %
stringNumber((% 1
.((1 2
Trim((2 6
(((6 7
)((7 8
)((8 9
;((9 :
})) 
catch** 
(** 
FormatException** &
exceptNumberFormat**' 9
)**9 :
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, !
(,,! "
NLog,," &
.,,& '
LogLevel,,' /
.,,/ 0
Warn,,0 4
,,,4 5
exceptNumberFormat,,6 H
,,,H I
$str,,J |
),,| }
;,,} ~
}-- 
}.. 
}// 	
byte11 
[11 
]11 
dataSerialized11 
=11 
null11  $
;11$ %
try22 
{33 	
BinaryFormatter44 
bf44 
=44  
new44! $
BinaryFormatter44% 4
(444 5
)445 6
;446 7
using55 
(55 
var55 
ms55 
=55 
new55 
MemoryStream55  ,
(55, -
)55- .
)55. /
{66 
bf77 
.77 
	Serialize77 
(77 
ms77 
,77  
data77! %
)77% &
;77& '
dataSerialized88 
=88  
ms88! #
.88# $
ToArray88$ +
(88+ ,
)88, -
;88- .
}99 H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75b:: H
.::H I
BadSink::I P
(::P Q
dataSerialized::Q _
)::a b
;::b c
};; 	
catch<< 
(<< "
SerializationException<< %
exceptSerialize<<& 5
)<<5 6
{== 	
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> 
.>> 
LogLevel>> '
.>>' (
Warn>>( ,
,>>, -
$str>>. X
,>>X Y
exceptSerialize>>Z i
)>>i j
;>>j k
}?? 	
}@@ 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
privateII 
staticII 
voidII 
GoodG2BII 
(II  
)II  !
{JJ 
intKK 
dataKK 
;KK 
dataMM 
=MM 
$numMM 
;MM 
byteOO 
[OO 
]OO 
dataSerializedOO 
=OO 
nullOO  $
;OO$ %
tryPP 
{QQ 	
BinaryFormatterRR 
bfRR 
=RR  
newRR! $
BinaryFormatterRR% 4
(RR4 5
)RR5 6
;RR6 7
usingSS 
(SS 
varSS 
msSS 
=SS 
newSS 
MemoryStreamSS  ,
(SS, -
)SS- .
)SS. /
{TT 
bfUU 
.UU 
	SerializeUU 
(UU 
msUU 
,UU  
dataUU! %
)UU% &
;UU& '
dataSerializedVV 
=VV  
msVV! #
.VV# $
ToArrayVV$ +
(VV+ ,
)VV, -
;VV- .
}WW H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75bXX H
.XXH I
GoodG2BSinkXXI T
(XXT U
dataSerializedXXU c
)XXe f
;XXf g
}YY 	
catchZZ 
(ZZ "
SerializationExceptionZZ %
exceptSerializeZZ& 5
)ZZ5 6
{[[ 	
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ 
.\\ 
LogLevel\\ '
.\\' (
Warn\\( ,
,\\, -
$str\\. X
,\\X Y
exceptSerialize\\Z i
)\\i j
;\\j k
}]] 	
}^^ 
}`` 
}aa ﬂ!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75b B
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN 
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	L
@CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base.. H

baseObject..I S
=..T U
new..V YL
?CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_bad	..Z ô
(
..ô ö
)
..ö õ
;
..õ ú

baseObject// 
.// 
Action// 
(// 
data// 
)//  
;//  !
}00 
public33 

override33 
void33 
Good33 
(33 
)33 
{44 
GoodG2B55 
(55 
)55 
;55 
}66 
private99 
void99 
GoodG2B99 
(99 
)99 
{:: 
int;; 
data;; 
;;; 
data== 
=== 
$num== 
;== L
@CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base>> H

baseObject>>I S
=>>T U
new>>V YP
CCWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_goodG2B	>>Z ù
(
>>ù û
)
>>û ü
;
>>ü †

baseObject?? 
.?? 
Action?? 
(?? 
data?? 
)??  
;??  !
}@@ 
}BB 
}CC è
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_bad E
:F GM
@CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base	H à
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ˜
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 L
@CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base O
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} ó
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class O
CCWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_goodG2B I
:J KM
@CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base	L å
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ú
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_01 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
short00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
public55 

override55 
void55 
Good55 
(55 
)55 
{66 
GoodG2B77 
(77 
)77 
;77 
}88 
private;; 
void;; 
GoodG2B;; 
(;; 
);; 
{<< 
int== 
data== 
;== 
data?? 
=?? 
$num?? 
;?? 
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
shortBB 
)BB  
dataBB  $
)BB$ %
;BB% &
}CC 	
}DD 
}FF 
}GG ﬁ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_02 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
short99 
)99  
data99  $
)99$ %
;99% &
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
falseBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
trueWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo √
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_03 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
short99 
)99  
data99  $
)99$ %
;99% &
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
$numBB 
!=BB 
$numBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
$numWW 
==WW 
$numWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo û 
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_04 B
:C D
AbstractTestCaseE U
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&&  
{)) 
string** 
stringNumber** #
=**$ %
Environment**& 1
.**1 2"
GetEnvironmentVariable**2 H
(**H I
$str**I N
)**N O
;**O P
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
int// "
.//" #
Parse//# (
(//( )
stringNumber//) 5
.//5 6
Trim//6 :
(//: ;
)//; <
)//< =
;//= >
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateFF 
voidFF 
GoodG2B1FF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
ifII 

(II 
PRIVATE_CONST_FALSEII 
)II  
{JJ 	
dataMM 
=MM 
$numMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV 
)VV  
dataVV  $
)VV$ %
;VV% &
}WW 	
}XX 
private[[ 
void[[ 
GoodG2B2[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
if^^ 

(^^ 
PRIVATE_CONST_TRUE^^ 
)^^ 
{__ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
shortkk 
)kk  
datakk  $
)kk$ %
;kk% &
}ll 	
}mm 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
)oo 
{pp 
GoodG2B1qq 
(qq 
)qq 
;qq 
GoodG2B2rr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv ’
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_05 B
:C D
AbstractTestCaseE U
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&&  
{)) 
string** 
stringNumber** #
=**$ %
Environment**& 1
.**1 2"
GetEnvironmentVariable**2 H
(**H I
$str**I N
)**N O
;**O P
if++ 
(++ 
stringNumber++  
!=++! #
null++$ (
)++( )
{,, 
try-- 
{.. 
data// 
=// 
int// "
.//" #
Parse//# (
(//( )
stringNumber//) 5
.//5 6
Trim//6 :
(//: ;
)//; <
)//< =
;//= >
}00 
catch11 
(11 
FormatException11 *
exceptNumberFormat11+ =
)11= >
{22 
IO33 
.33 
Logger33 !
.33! "
Log33" %
(33% &
NLog33& *
.33* +
LogLevel33+ 3
.333 4
Warn334 8
,338 9
exceptNumberFormat33: L
,33L M
$str	33N Ä
)
33Ä Å
;
33Å Ç
}44 
}55 
}66 
}77 	
else88 
{99 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateFF 
voidFF 
GoodG2B1FF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
ifII 

(II 
privateFalseII 
)II 
{JJ 	
dataMM 
=MM 
$numMM 
;MM 
}NN 	
elseOO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
{TT 	
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV 
)VV  
dataVV  $
)VV$ %
;VV% &
}WW 	
}XX 
private[[ 
void[[ 
GoodG2B2[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
if^^ 

(^^ 
privateTrue^^ 
)^^ 
{__ 	
dataaa 
=aa 
$numaa 
;aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
shortkk 
)kk  
datakk  $
)kk$ %
;kk% &
}ll 	
}mm 
publicoo 

overrideoo 
voidoo 
Goodoo 
(oo 
)oo 
{pp 
GoodG2B1qq 
(qq 
)qq 
;qq 
GoodG2B2rr 
(rr 
)rr 
;rr 
}ss 
}uu 
}vv ˆ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_06 B
:C D
AbstractTestCaseE U
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%%  
{(( 
string)) 
stringNumber)) #
=))$ %
Environment))& 1
.))1 2"
GetEnvironmentVariable))2 H
())H I
$str))I N
)))N O
;))O P
if** 
(** 
stringNumber**  
!=**! #
null**$ (
)**( )
{++ 
try,, 
{-- 
data.. 
=.. 
int.. "
..." #
Parse..# (
(..( )
stringNumber..) 5
...5 6
Trim..6 :
(..: ;
)..; <
)..< =
;..= >
}// 
catch00 
(00 
FormatException00 *
exceptNumberFormat00+ =
)00= >
{11 
IO22 
.22 
Logger22 !
.22! "
Log22" %
(22% &
NLog22& *
.22* +
LogLevel22+ 3
.223 4
Warn224 8
,228 9
exceptNumberFormat22: L
,22L M
$str	22N Ä
)
22Ä Å
;
22Å Ç
}33 
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
short?? 
)??  
data??  $
)??$ %
;??% &
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
PRIVATE_CONST_FIVEHH 
!=HH !
$numHH" #
)HH# $
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
privateZZ 
voidZZ 
GoodG2B2ZZ 
(ZZ 
)ZZ 
{[[ 
int\\ 
data\\ 
;\\ 
if]] 

(]] 
PRIVATE_CONST_FIVE]] 
==]] !
$num]]" #
)]]# $
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataff 
=ff 
$numff 
;ff 
}gg 	
{hh 	
IOjj 
.jj 
	WriteLinejj 
(jj 
(jj 
shortjj 
)jj  
datajj  $
)jj$ %
;jj% &
}kk 	
}ll 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2B1pp 
(pp 
)pp 
;pp 
GoodG2B2qq 
(qq 
)qq 
;qq 
}rr 
}tt 
}uu «
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_07 B
:C D
AbstractTestCaseE U
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%%  
{(( 
string)) 
stringNumber)) #
=))$ %
Environment))& 1
.))1 2"
GetEnvironmentVariable))2 H
())H I
$str))I N
)))N O
;))O P
if** 
(** 
stringNumber**  
!=**! #
null**$ (
)**( )
{++ 
try,, 
{-- 
data.. 
=.. 
int.. "
..." #
Parse..# (
(..( )
stringNumber..) 5
...5 6
Trim..6 :
(..: ;
)..; <
)..< =
;..= >
}// 
catch00 
(00 
FormatException00 *
exceptNumberFormat00+ =
)00= >
{11 
IO22 
.22 
Logger22 !
.22! "
Log22" %
(22% &
NLog22& *
.22* +
LogLevel22+ 3
.223 4
Warn224 8
,228 9
exceptNumberFormat22: L
,22L M
$str	22N Ä
)
22Ä Å
;
22Å Ç
}33 
}44 
}55 
}66 	
else77 
{88 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
short?? 
)??  
data??  $
)??$ %
;??% &
}@@ 	
}AA 
privateEE 
voidEE 
GoodG2B1EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
privateFiveHH 
!=HH 
$numHH 
)HH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
elseNN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
privateZZ 
voidZZ 
GoodG2B2ZZ 
(ZZ 
)ZZ 
{[[ 
int\\ 
data\\ 
;\\ 
if]] 

(]] 
privateFive]] 
==]] 
$num]] 
)]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataff 
=ff 
$numff 
;ff 
}gg 	
{hh 	
IOjj 
.jj 
	WriteLinejj 
(jj 
(jj 
shortjj 
)jj  
datajj  $
)jj$ %
;jj% &
}kk 	
}ll 
publicnn 

overridenn 
voidnn 
Goodnn 
(nn 
)nn 
{oo 
GoodG2B1pp 
(pp 
)pp 
;pp 
GoodG2B2qq 
(qq 
)qq 
;qq 
}rr 
}tt 
}uu ¸!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_08 B
:C D
AbstractTestCaseE U
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;--  
{00 
string11 
stringNumber11 #
=11$ %
Environment11& 1
.111 2"
GetEnvironmentVariable112 H
(11H I
$str11I N
)11N O
;11O P
if22 
(22 
stringNumber22  
!=22! #
null22$ (
)22( )
{33 
try44 
{55 
data66 
=66 
int66 "
.66" #
Parse66# (
(66( )
stringNumber66) 5
.665 6
Trim666 :
(66: ;
)66; <
)66< =
;66= >
}77 
catch88 
(88 
FormatException88 *
exceptNumberFormat88+ =
)88= >
{99 
IO:: 
.:: 
Logger:: !
.::! "
Log::" %
(::% &
NLog::& *
.::* +
LogLevel::+ 3
.::3 4
Warn::4 8
,::8 9
exceptNumberFormat::: L
,::L M
$str	::N Ä
)
::Ä Å
;
::Å Ç
};; 
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
PrivateReturnsFalsePP 
(PP  
)PP  !
)PP! "
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
PrivateReturnsTrueee 
(ee 
)ee  
)ee  !
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} Î
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_09 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
short99 
)99  
data99  $
)99$ %
;99% &
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB !
STATIC_READONLY_FALSEBB $
)BB$ %
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW  
STATIC_READONLY_TRUEWW #
)WW# $
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo Õ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_10 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
short99 
)99  
data99  $
)99$ %
;99% &
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 
staticFalseBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW 

staticTrueWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo º
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_11 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
short99 
)99  
data99  $
)99$ %
;99% &
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 
StaticReturnsFalseBB !
(BB! "
)BB" #
)BB# $
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW 
StaticReturnsTrueWW  
(WW  !
)WW! "
)WW" #
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo π
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_12 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
short88 
)88  
data88  $
)88$ %
;88% &
}99 	
}:: 
private?? 
void?? 
GoodG2B?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB $
StaticReturnsTrueOrFalseBB '
(BB' (
)BB( )
)BB) *
{CC 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
publicRR 

overrideRR 
voidRR 
GoodRR 
(RR 
)RR 
{SS 
GoodG2BTT 
(TT 
)TT 
;TT 
}UU 
}WW 
}XX –
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_13 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
short99 
)99  
data99  $
)99$ %
;99% &
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB  
STATIC_READONLY_FIVEBB #
!=BB$ &
$numBB' (
)BB( )
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW  
STATIC_READONLY_FIVEWW #
==WW$ &
$numWW' (
)WW( )
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo ≤
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_14 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
{77 	
IO99 
.99 
	WriteLine99 
(99 
(99 
short99 
)99  
data99  $
)99$ %
;99% &
}:: 	
};; 
private?? 
void?? 
GoodG2B1?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
;AA 
ifBB 

(BB 
IOBB 
.BB 

staticFiveBB 
!=BB 
$numBB 
)BB 
{CC 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
{MM 	
IOOO 
.OO 
	WriteLineOO 
(OO 
(OO 
shortOO 
)OO  
dataOO  $
)OO$ %
;OO% &
}PP 	
}QQ 
privateTT 
voidTT 
GoodG2B2TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
IOWW 
.WW 

staticFiveWW 
==WW 
$numWW 
)WW 
{XX 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
publichh 

overridehh 
voidhh 
Goodhh 
(hh 
)hh 
{ii 
GoodG2B1jj 
(jj 
)jj 
;jj 
GoodG2B2kk 
(kk 
)kk 
;kk 
}ll 
}nn 
}oo ç!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_15 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data   
=   
int   
.   
MinValue   
;    
{## 
string$$ 
stringNumber$$ #
=$$$ %
Environment$$& 1
.$$1 2"
GetEnvironmentVariable$$2 H
($$H I
$str$$I N
)$$N O
;$$O P
if%% 
(%% 
stringNumber%%  
!=%%! #
null%%$ (
)%%( )
{&& 
try'' 
{(( 
data)) 
=)) 
int)) "
.))" #
Parse))# (
())( )
stringNumber))) 5
.))5 6
Trim))6 :
()): ;
))); <
)))< =
;))= >
}** 
catch++ 
(++ 
FormatException++ *
exceptNumberFormat+++ =
)++= >
{,, 
IO-- 
.-- 
Logger-- !
.--! "
Log--" %
(--% &
NLog--& *
.--* +
LogLevel--+ 3
.--3 4
Warn--4 8
,--8 9
exceptNumberFormat--: L
,--L M
$str	--N Ä
)
--Ä Å
;
--Å Ç
}.. 
}// 
}00 
break11 
;11 
default22 
:22 
data55 
=55 
$num55 
;55 
break66 
;66 
}77 	
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
short:: 
)::  
data::  $
)::$ %
;::% &
};; 	
}<< 
private@@ 
void@@ 
GoodG2B1@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
=BB 
$numBB 
;BB 
switchCC 
(CC 
$numCC 
)CC 
{DD 	
caseEE 
$numEE 
:EE 
dataHH 
=HH 
$numHH 
;HH 
breakII 
;II 
defaultJJ 
:JJ 
dataLL 
=LL 
$numLL 
;LL 
breakMM 
;MM 
}NN 	
{OO 	
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
(QQ 
shortQQ 
)QQ  
dataQQ  $
)QQ$ %
;QQ% &
}RR 	
}SS 
privateVV 
voidVV 
GoodG2B2VV 
(VV 
)VV 
{WW 
intXX 
dataXX 
=XX 
$numXX 
;XX 
switchYY 
(YY 
$numYY 
)YY 
{ZZ 	
case[[ 
$num[[ 
:[[ 
data]] 
=]] 
$num]] 
;]] 
break^^ 
;^^ 
default__ 
:__ 
databb 
=bb 
$numbb 
;bb 
breakcc 
;cc 
}dd 	
{ee 	
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
shortgg 
)gg  
datagg  $
)gg$ %
;gg% &
}hh 	
}ii 
publickk 

overridekk 
voidkk 
Goodkk 
(kk 
)kk 
{ll 
GoodG2B1mm 
(mm 
)mm 
;mm 
GoodG2B2nn 
(nn 
)nn 
;nn 
}oo 
}qq 
}rr ˝
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_16 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
break00 
;00 
}11 	
{22 	
IO44 
.44 
	WriteLine44 
(44 
(44 
short44 
)44  
data44  $
)44$ %
;44% &
}55 	
}66 
private:: 
void:: 
GoodG2B:: 
(:: 
):: 
{;; 
int<< 
data<< 
;<< 
while== 
(== 
true== 
)== 
{>> 	
data@@ 
=@@ 
$num@@ 
;@@ 
breakAA 
;AA 
}BB 	
{CC 	
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
shortEE 
)EE  
dataEE  $
)EE$ %
;EE% &
}FF 	
}GG 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
}NN 
}OO Ë
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_17 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
for.. 
(.. 
int.. 
i.. 
=.. 
$num.. 
;.. 
i.. 
<.. 
$num.. 
;.. 
i..  
++..  "
).." #
{// 	
{00 
IO22 
.22 
	WriteLine22 
(22 
(22 
short22 #
)22# $
data22$ (
)22( )
;22) *
}33 
}44 	
}55 
private:: 
void:: 
GoodG2B:: 
(:: 
):: 
{;; 
int<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
for?? 
(?? 
int?? 
i?? 
=?? 
$num?? 
;?? 
i?? 
<?? 
$num?? 
;?? 
i??  
++??  "
)??" #
{@@ 	
{AA 
IOCC 
.CC 
	WriteLineCC 
(CC 
(CC 
shortCC #
)CC# $
dataCC$ (
)CC( )
;CC) *
}DD 
}EE 	
}FF 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
}MM 
}NN ã+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_21 B
:C D
AbstractTestCaseE U
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
private(( 
int(( 

Bad_source(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;--  
{00 
string11 
stringNumber11 #
=11$ %
Environment11& 1
.111 2"
GetEnvironmentVariable112 H
(11H I
$str11I N
)11N O
;11O P
if22 
(22 
stringNumber22  
!=22! #
null22$ (
)22( )
{33 
try44 
{55 
data66 
=66 
int66 "
.66" #
Parse66# (
(66( )
stringNumber66) 5
.665 6
Trim666 :
(66: ;
)66; <
)66< =
;66= >
}77 
catch88 
(88 
FormatException88 *
exceptNumberFormat88+ =
)88= >
{99 
IO:: 
.:: 
Logger:: !
.::! "
Log::" %
(::% &
NLog::& *
.::* +
LogLevel::+ 3
.::3 4
Warn::4 8
,::8 9
exceptNumberFormat::: L
,::L M
$str	::N Ä
)
::Ä Å
;
::Å Ç
};; 
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
returnEE 
dataEE 
;EE 
}FF 
privateII 
boolII 
goodG2B1_privateII !
=II" #
falseII$ )
;II) *
privateJJ 
boolJJ 
GoodG2B2_privateJJ !
=JJ" #
falseJJ$ )
;JJ) *
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2B1NN 
(NN 
)NN 
;NN 
GoodG2B2OO 
(OO 
)OO 
;OO 
}PP 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
goodG2B1_privateVV 
=VV 
falseVV  
;VV  !
dataWW 
=WW 
GoodG2B1_sourceWW 
(WW 
)WW  
;WW  !
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
shortZZ 
)ZZ  
dataZZ  $
)ZZ$ %
;ZZ% &
}[[ 	
}\\ 
private^^ 
int^^ 
GoodG2B1_source^^ 
(^^  
)^^  !
{__ 
int`` 
data`` 
=`` 
$num`` 
;`` 
ifaa 

(aa 
goodG2B1_privateaa 
)aa 
{bb 	
dataee 
=ee 
$numee 
;ee 
}ff 	
elsegg 
{hh 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
returnll 
datall 
;ll 
}mm 
privatepp 
voidpp 
GoodG2B2pp 
(pp 
)pp 
{qq 
intrr 
datarr 
;rr 
GoodG2B2_privatess 
=ss 
truess 
;ss  
datatt 
=tt 
GoodG2B2_sourcett 
(tt 
)tt  
;tt  !
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
private{{ 
int{{ 
GoodG2B2_source{{ 
({{  
){{  !
{|| 
int}} 
data}} 
=}} 
$num}} 
;}} 
if~~ 

(~~ 
GoodG2B2_private~~ 
)~~ 
{ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
else
ÉÉ 
{
ÑÑ 	
data
áá 
=
áá 
$num
áá 
;
áá 
}
àà 	
return
ââ 
data
ââ 
;
ââ 
}
ää 
}åå 
}çç ∞
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a C
:D E
AbstractTestCaseF V
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22b!! L
.!!L M
	BadSource!!M V
(!!V W
)!!W X
;!!X Y
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22b88 L
.88L M
GoodG2B1Source88M [
(88[ \
)88\ ]
;88] ^
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22bDD L
.DDL M
GoodG2B2SourceDDM [
(DD[ \
)DD\ ]
;DD] ^
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ·
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22b C
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a I
.I J
badPublicStaticJ Y
)Y Z
{ 	
data 
= 
int 
. 
MinValue 
;  
{"" 
string## 
stringNumber## #
=##$ %
Environment##& 1
.##1 2"
GetEnvironmentVariable##2 H
(##H I
$str##I N
)##N O
;##O P
if$$ 
($$ 
stringNumber$$  
!=$$! #
null$$$ (
)$$( )
{%% 
try&& 
{'' 
data(( 
=(( 
int(( "
.((" #
Parse((# (
(((( )
stringNumber(() 5
.((5 6
Trim((6 :
(((: ;
)((; <
)((< =
;((= >
})) 
catch** 
(** 
FormatException** *
exceptNumberFormat**+ =
)**= >
{++ 
IO,, 
.,, 
Logger,, !
.,,! "
Log,," %
(,,% &
NLog,,& *
.,,* +
LogLevel,,+ 3
.,,3 4
Warn,,4 8
,,,8 9
exceptNumberFormat,,: L
,,,L M
$str	,,N Ä
)
,,Ä Å
;
,,Å Ç
}-- 
}.. 
}// 
}00 	
else11 
{22 	
data55 
=55 
$num55 
;55 
}66 	
return77 
data77 
;77 
}88 
public== 

static== 
int== 
GoodG2B1Source== $
(==$ %
)==% &
{>> 
int?? 
data?? 
;?? 
if@@ 

(@@ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a@@ I
.@@I J 
goodG2B1PublicStatic@@J ^
)@@^ _
{AA 	
dataDD 
=DD 
$numDD 
;DD 
}EE 	
elseFF 
{GG 	
dataII 
=II 
$numII 
;II 
}JJ 	
returnKK 
dataKK 
;KK 
}LL 
publicOO 

staticOO 
intOO 
GoodG2B2SourceOO $
(OO$ %
)OO% &
{PP 
intQQ 
dataQQ 
;QQ 
ifRR 

(RR I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22aRR I
.RRI J 
GoodG2B2PublicStaticRRJ ^
)RR^ _
{SS 	
dataUU 
=UU 
$numUU 
;UU 
}VV 	
elseWW 
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
}`` 
}aa ï
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_31 B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{ 	
int 
data 
; 
data   
=   
int   
.   
MinValue   
;    
{## 
string$$ 
stringNumber$$ #
=$$$ %
Environment$$& 1
.$$1 2"
GetEnvironmentVariable$$2 H
($$H I
$str$$I N
)$$N O
;$$O P
if%% 
(%% 
stringNumber%%  
!=%%! #
null%%$ (
)%%( )
{&& 
try'' 
{(( 
data)) 
=)) 
int)) "
.))" #
Parse))# (
())( )
stringNumber))) 5
.))5 6
Trim))6 :
()): ;
))); <
)))< =
;))= >
}** 
catch++ 
(++ 
FormatException++ *
exceptNumberFormat+++ =
)++= >
{,, 
IO-- 
.-- 
Logger-- !
.--! "
Log--" %
(--% &
NLog--& *
.--* +
LogLevel--+ 3
.--3 4
Warn--4 8
,--8 9
exceptNumberFormat--: L
,--L M
$str	--N Ä
)
--Ä Å
;
--Å Ç
}.. 
}// 
}00 
dataCopy11 
=11 
data11 
;11 
}22 	
{33 	
int44 
data44 
=44 
dataCopy44 
;44  
{55 
IO77 
.77 
	WriteLine77 
(77 
(77 
short77 #
)77# $
data77$ (
)77( )
;77) *
}88 
}99 	
}:: 
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B?? 
(?? 
)?? 
;?? 
}@@ 
privateCC 
voidCC 
GoodG2BCC 
(CC 
)CC 
{DD 
intEE 
dataCopyEE 
;EE 
{FF 	
intGG 
dataGG 
;GG 
dataII 
=II 
$numII 
;II 
dataCopyJJ 
=JJ 
dataJJ 
;JJ 
}KK 	
{LL 	
intMM 
dataMM 
=MM 
dataCopyMM 
;MM  
{NN 
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP #
)PP# $
dataPP$ (
)PP( )
;PP) *
}QQ 
}RR 	
}SS 
}UU 
}VV î
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_41 B
:C D
AbstractTestCaseE U
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$ 
{'' 	
string(( 
stringNumber(( 
=((  !
Environment((" -
.((- ."
GetEnvironmentVariable((. D
(((D E
$str((E J
)((J K
;((K L
if)) 
()) 
stringNumber)) 
!=)) 
null))  $
)))$ %
{** 
try++ 
{,, 
data-- 
=-- 
int-- 
.-- 
Parse-- $
(--$ %
stringNumber--% 1
.--1 2
Trim--2 6
(--6 7
)--7 8
)--8 9
;--9 :
}.. 
catch// 
(// 
FormatException// &
exceptNumberFormat//' 9
)//9 :
{00 
IO11 
.11 
Logger11 
.11 
Log11 !
(11! "
NLog11" &
.11& '
LogLevel11' /
.11/ 0
Warn110 4
,114 5
exceptNumberFormat116 H
,11H I
$str11J |
)11| }
;11} ~
}22 
}33 
}44 	
BadSink55 
(55 
data55 
)55 
;55 
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
private>> 
static>> 
void>> 
GoodG2BSink>> #
(>># $
int>>$ '
data>>( ,
)>>- .
{?? 
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
shortBB 
)BB  
dataBB  $
)BB$ %
;BB% &
}CC 	
}DD 
privateGG 
staticGG 
voidGG 
GoodG2BGG 
(GG  
)GG  !
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK 
GoodG2BSinkLL 
(LL 
dataLL 
)LL 
;LL 
}MM 
}OO 
}PP ˛
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_42 B
:C D
AbstractTestCaseE U
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
string   
stringNumber   
=    !
Environment  " -
.  - ."
GetEnvironmentVariable  . D
(  D E
$str  E J
)  J K
;  K L
if!! 
(!! 
stringNumber!! 
!=!! 
null!!  $
)!!$ %
{"" 
try## 
{$$ 
data%% 
=%% 
int%% 
.%% 
Parse%% $
(%%$ %
stringNumber%%% 1
.%%1 2
Trim%%2 6
(%%6 7
)%%7 8
)%%8 9
;%%9 :
}&& 
catch'' 
('' 
FormatException'' &
exceptNumberFormat''' 9
)''9 :
{(( 
IO)) 
.)) 
Logger)) 
.)) 
Log)) !
())! "
NLog))" &
.))& '
LogLevel))' /
.))/ 0
Warn))0 4
,))4 5
exceptNumberFormat))6 H
,))H I
$str))J |
)))| }
;))} ~
}** 
}++ 
},, 	
return-- 
data-- 
;-- 
}.. 
public11 

override11 
void11 
Bad11 
(11 
)11 
{22 
int33 
data33 
=33 
	BadSource33 
(33 
)33 
;33 
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
short66 
)66  
data66  $
)66$ %
;66% &
}77 	
}88 
private;; 
static;; 
int;; 
GoodG2BSource;; $
(;;$ %
);;% &
{<< 
int== 
data== 
;== 
data?? 
=?? 
$num?? 
;?? 
return@@ 
data@@ 
;@@ 
}AA 
privateDD 
staticDD 
voidDD 
GoodG2BDD 
(DD  
)DD  !
{EE 
intFF 
dataFF 
=FF 
GoodG2BSourceFF  
(FF  !
)FF! "
;FF" #
{GG 	
IOII 
.II 
	WriteLineII 
(II 
(II 
shortII 
)II  
dataII  $
)II$ %
;II% &
}JJ 	
}KK 
publicMM 

overrideMM 
voidMM 
GoodMM 
(MM 
)MM 
{NN 
GoodG2BOO 
(OO 
)OO 
;OO 
}PP 
}RR 
}SS ƒ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_45 B
:C D
AbstractTestCaseE U
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
int 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
short"" 
)""  
data""  $
)""$ %
;""% &
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
int)) 
data)) 
;)) 
data** 
=** 
int** 
.** 
MinValue** 
;** 
{-- 	
string.. 
stringNumber.. 
=..  !
Environment.." -
...- ."
GetEnvironmentVariable... D
(..D E
$str..E J
)..J K
;..K L
if// 
(// 
stringNumber// 
!=// 
null//  $
)//$ %
{00 
try11 
{22 
data33 
=33 
int33 
.33 
Parse33 $
(33$ %
stringNumber33% 1
.331 2
Trim332 6
(336 7
)337 8
)338 9
;339 :
}44 
catch55 
(55 
FormatException55 &
exceptNumberFormat55' 9
)559 :
{66 
IO77 
.77 
Logger77 
.77 
Log77 !
(77! "
NLog77" &
.77& '
LogLevel77' /
.77/ 0
Warn770 4
,774 5
exceptNumberFormat776 H
,77H I
$str77J |
)77| }
;77} ~
}88 
}99 
}:: 	
dataBad;; 
=;; 
data;; 
;;; 
BadSink<< 
(<< 
)<< 
;<< 
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateEE 
voidEE 
GoodG2BSinkEE 
(EE 
)EE 
{FF 
intGG 
dataGG 
=GG 
dataGoodG2BGG 
;GG 
{HH 	
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
(JJ 
shortJJ 
)JJ  
dataJJ  $
)JJ$ %
;JJ% &
}KK 	
}LL 
privateOO 
voidOO 
GoodG2BOO 
(OO 
)OO 
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 
dataGoodG2BTT 
=TT 
dataTT 
;TT 
GoodG2BSinkUU 
(UU 
)UU 
;UU 
}VV 
}XX 
}YY Ã
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_51a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
string   
stringNumber   
=    !
Environment  " -
.  - ."
GetEnvironmentVariable  . D
(  D E
$str  E J
)  J K
;  K L
if!! 
(!! 
stringNumber!! 
!=!! 
null!!  $
)!!$ %
{"" 
try## 
{$$ 
data%% 
=%% 
int%% 
.%% 
Parse%% $
(%%$ %
stringNumber%%% 1
.%%1 2
Trim%%2 6
(%%6 7
)%%7 8
)%%8 9
;%%9 :
}&& 
catch'' 
('' 
FormatException'' &
exceptNumberFormat''' 9
)''9 :
{(( 
IO)) 
.)) 
Logger)) 
.)) 
Log)) !
())! "
NLog))" &
.))& '
LogLevel))' /
.))/ 0
Warn))0 4
,))4 5
exceptNumberFormat))6 H
,))H I
$str))J |
)))| }
;))} ~
}** 
}++ 
},, 	I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_51b-- E
.--E F
BadSink--F M
(--M N
data--N R
)--T U
;--U V
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private77 
void77 
GoodG2B77 
(77 
)77 
{88 
int99 
data99 
;99 
data;; 
=;; 
$num;; 
;;; I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_51b<< E
.<<E F
GoodG2BSink<<F Q
(<<Q R
data<<R V
)<<X Y
;<<Y Z
}== 
}?? 
}@@ £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_51b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, Ã
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52b.. E
...E F
BadSink..F M
(..M N
data..N R
)..S T
;..T U
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
)88 
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52b== E
.==E F
GoodG2BSink==F Q
(==Q R
data==R V
)==W X
;==X Y
}>> 
}@@ 
}AA ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52c C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Ã
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53b.. E
...E F
BadSink..F M
(..M N
data..N R
)..S T
;..T U
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
)88 
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53b== E
.==E F
GoodG2BSink==F Q
(==Q R
data==R V
)==W X
;==X Y
}>> 
}@@ 
}AA ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53c C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53d C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Ã
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54b.. E
...E F
BadSink..F M
(..M N
data..N R
)..S T
;..T U
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
void88 
GoodG2B88 
(88 
)88 
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54b== E
.==E F
GoodG2BSink==F Q
(==Q R
data==R V
)==W X
;==X Y
}>> 
}@@ 
}AA ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54b C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54c E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54c## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54c C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54d E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54d## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' ˚
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54d C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54e E
.E F
BadSinkF M
(M N
dataN R
)S T
;T U
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54e## E
.##E F
GoodG2BSink##F Q
(##Q R
data##R V
)##W X
;##X Y
}$$ 
}&& 
}'' £	
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54e C
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ı
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_61a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_61b P
.P Q
	BadSourceQ Z
(Z [
)[ \
;\ ]
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_61b++ P
.++P Q
GoodG2BSource++Q ^
(++^ _
)++_ `
;++` a
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ¯
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_61b C
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
return.. 
data.. 
;.. 
}// 
public44 

static44 
int44 
GoodG2BSource44 #
(44# $
)44$ %
{55 
int66 
data66 
;66 
data88 
=88 
$num88 
;88 
return99 
data99 
;99 
}:: 
}<< 
}== ƒ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_66a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
int.. 
[.. 
].. 
	dataArray.. 
=.. 
new.. 
int.. !
[..! "
$num.." #
]..# $
;..$ %
	dataArray// 
[// 
$num// 
]// 
=// 
data// 
;// I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_66b00 E
.00E F
BadSink00F M
(00M N
	dataArray00N W
)00Y Z
;00Z [
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
int<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
int?? 
[?? 
]?? 
	dataArray?? 
=?? 
new?? 
int?? !
[??! "
$num??" #
]??# $
;??$ %
	dataArray@@ 
[@@ 
$num@@ 
]@@ 
=@@ 
data@@ 
;@@ I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_66bAA E
.AAE F
GoodG2BSinkAAF Q
(AAQ R
	dataArrayAAR [
)AA] ^
;AA^ _
}BB 
}DD 
}EE ˘
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_66b C
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ∞
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_67a C
:D E
AbstractTestCaseF V
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;"" 
{%% 	
string&& 
stringNumber&& 
=&&  !
Environment&&" -
.&&- ."
GetEnvironmentVariable&&. D
(&&D E
$str&&E J
)&&J K
;&&K L
if'' 
('' 
stringNumber'' 
!='' 
null''  $
)''$ %
{(( 
try)) 
{** 
data++ 
=++ 
int++ 
.++ 
Parse++ $
(++$ %
stringNumber++% 1
.++1 2
Trim++2 6
(++6 7
)++7 8
)++8 9
;++9 :
},, 
catch-- 
(-- 
FormatException-- &
exceptNumberFormat--' 9
)--9 :
{.. 
IO// 
.// 
Logger// 
.// 
Log// !
(//! "
NLog//" &
.//& '
LogLevel//' /
./// 0
Warn//0 4
,//4 5
exceptNumberFormat//6 H
,//H I
$str//J |
)//| }
;//} ~
}00 
}11 
}22 	
	Container33 
dataContainer33 
=33  !
new33" %
	Container33& /
(33/ 0
)330 1
;331 2
dataContainer44 
.44 
containerOne44 "
=44# $
data44% )
;44) *I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_67b55 E
.55E F
BadSink55F M
(55M N
dataContainer55N [
)55] ^
;55^ _
}66 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
private?? 
static?? 
void?? 
GoodG2B?? 
(??  
)??  !
{@@ 
intAA 
dataAA 
;AA 
dataCC 
=CC 
$numCC 
;CC 
	ContainerDD 
dataContainerDD 
=DD  !
newDD" %
	ContainerDD& /
(DD/ 0
)DD0 1
;DD1 2
dataContainerEE 
.EE 
containerOneEE "
=EE# $
dataEE% )
;EE) *I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_67bFF E
.FFE F
GoodG2BSinkFFF Q
(FFQ R
dataContainerFFR _
)FFa b
;FFb c
}GG 
}II 
}JJ ˇ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_67b C
{ 
public 

static 
void 
BadSink 
( I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_67a \
.\ ]
	Container] f
dataContainerg t
)u v
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_67a%%# `
.%%` a
	Container%%a j
dataContainer%%k x
)%%y z
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ≤
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_68a C
:D E
AbstractTestCaseF V
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_68b.. E
...E F
BadSink..F M
(..M N
)..N O
;..O P
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
data;; 
=;; 
$num;; 
;;; I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_68b<< E
.<<E F
GoodG2BSink<<F Q
(<<Q R
)<<R S
;<<S T
}== 
}?? 
}@@ ∑
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_68b C
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_68a P
.P Q
dataQ U
;U V
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_68a&& P
.&&P Q
data&&Q U
;&&U V
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ƒ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_71a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_71b.. E
...E F
BadSink..F M
(..M N
(..N O
Object..O U
)..U V
data..V Z
)..\ ]
;..] ^
}// 
public22 

override22 
void22 
Good22 
(22 
)22 
{33 
GoodG2B44 
(44 
)44 
;44 
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_71b== E
.==E F
GoodG2BSink==F Q
(==Q R
(==R S
Object==S Y
)==Y Z
data==Z ^
)==` a
;==a b
}>> 
}@@ 
}AA ≈
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_71b C
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ‰
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_72a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	
	Hashtable.. 
dataHashtable.. 
=..  !
new.." %
	Hashtable..& /
(../ 0
$num..0 1
)..1 2
;..2 3
dataHashtable// 
.// 
Add// 
(// 
$num// 
,// 
data// !
)//! "
;//" #
dataHashtable00 
.00 
Add00 
(00 
$num00 
,00 
data00 !
)00! "
;00" #
dataHashtable11 
.11 
Add11 
(11 
$num11 
,11 
data11 !
)11! "
;11" #I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_72b22 E
.22E F
BadSink22F M
(22M N
dataHashtable22N [
)22] ^
;22^ _
}33 
public66 

override66 
void66 
Good66 
(66 
)66 
{77 
GoodG2B88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
int>> 
data>> 
;>> 
data@@ 
=@@ 
$num@@ 
;@@ 
	HashtableAA 
dataHashtableAA 
=AA  !
newAA" %
	HashtableAA& /
(AA/ 0
$numAA0 1
)AA1 2
;AA2 3
dataHashtableBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB !
)BB! "
;BB" #
dataHashtableCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC !
)CC! "
;CC" #
dataHashtableDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD !
)DD! "
;DD" #I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_72bEE E
.EEE F
GoodG2BSinkEEF Q
(EEQ R
dataHashtableEER _
)EEa b
;EEb c
}FF 
}HH 
}II ∑
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_72b C
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ‹
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_73a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
string"" 
stringNumber"" 
=""  !
Environment""" -
.""- ."
GetEnvironmentVariable"". D
(""D E
$str""E J
)""J K
;""K L
if## 
(## 
stringNumber## 
!=## 
null##  $
)##$ %
{$$ 
try%% 
{&& 
data'' 
='' 
int'' 
.'' 
Parse'' $
(''$ %
stringNumber''% 1
.''1 2
Trim''2 6
(''6 7
)''7 8
)''8 9
;''9 :
}(( 
catch)) 
()) 
FormatException)) &
exceptNumberFormat))' 9
)))9 :
{** 
IO++ 
.++ 
Logger++ 
.++ 
Log++ !
(++! "
NLog++" &
.++& '
LogLevel++' /
.++/ 0
Warn++0 4
,++4 5
exceptNumberFormat++6 H
,++H I
$str++J |
)++| }
;++} ~
},, 
}-- 
}.. 	

LinkedList// 
<// 
int// 
>// 
dataLinkedList// &
=//' (
new//) ,

LinkedList//- 7
<//7 8
int//8 ;
>//; <
(//< =
)//= >
;//> ?
dataLinkedList00 
.00 
AddLast00 
(00 
data00 #
)00# $
;00$ %
dataLinkedList11 
.11 
AddLast11 
(11 
data11 #
)11# $
;11$ %
dataLinkedList22 
.22 
AddLast22 
(22 
data22 #
)22# $
;22$ %I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_73b33 E
.33E F
BadSink33F M
(33M N
dataLinkedList33N \
)33^ _
;33_ `
}44 
public77 

override77 
void77 
Good77 
(77 
)77 
{88 
GoodG2B99 
(99 
)99 
;99 
}:: 
private== 
static== 
void== 
GoodG2B== 
(==  
)==  !
{>> 
int?? 
data?? 
;?? 
dataAA 
=AA 
$numAA 
;AA 

LinkedListBB 
<BB 
intBB 
>BB 
dataLinkedListBB &
=BB' (
newBB) ,

LinkedListBB- 7
<BB7 8
intBB8 ;
>BB; <
(BB< =
)BB= >
;BB> ?
dataLinkedListCC 
.CC 
AddLastCC 
(CC 
dataCC #
)CC# $
;CC$ %
dataLinkedListDD 
.DD 
AddLastDD 
(DD 
dataDD #
)DD# $
;DD$ %
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_73bFF E
.FFE F
GoodG2BSinkFFF Q
(FFQ R
dataLinkedListFFR `
)FFb c
;FFc d
}GG 
}II 
}JJ „
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_73b C
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ä!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_74a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	

Dictionary.. 
<.. 
int.. 
,.. 
int.. 
>.. 
dataDictionary.. *
=..+ ,
new..- 0

Dictionary..1 ;
<..; <
int..< ?
,..? @
int..@ C
>..C D
(..D E
)..E F
;..F G
dataDictionary// 
.// 
Add// 
(// 
$num// 
,// 
data// "
)//" #
;//# $
dataDictionary00 
.00 
Add00 
(00 
$num00 
,00 
data00 "
)00" #
;00# $
dataDictionary11 
.11 
Add11 
(11 
$num11 
,11 
data11 "
)11" #
;11# $I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_74b22 E
.22E F
BadSink22F M
(22M N
dataDictionary22N \
)22^ _
;22_ `
}33 
public66 

override66 
void66 
Good66 
(66 
)66 
{77 
GoodG2B88 
(88 
)88 
;88 
}99 
private<< 
static<< 
void<< 
GoodG2B<< 
(<<  
)<<  !
{== 
int>> 
data>> 
;>> 
data@@ 
=@@ 
$num@@ 
;@@ 

DictionaryAA 
<AA 
intAA 
,AA 
intAA 
>AA 
dataDictionaryAA *
=AA+ ,
newAA- 0

DictionaryAA1 ;
<AA; <
intAA< ?
,AA? @
intAA@ C
>AAC D
(AAD E
)AAE F
;AAF G
dataDictionaryBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB "
)BB" #
;BB# $
dataDictionaryCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC "
)CC" #
;CC# $
dataDictionaryDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD "
)DD" #
;DD# $I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_74bEE E
.EEE F
GoodG2BSinkEEF Q
(EEQ R
dataDictionaryEER `
)EEb c
;EEc d
}FF 
}HH 
}II ˝
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_74b C
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ≤(
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_75a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{"" 	
string## 
stringNumber## 
=##  !
Environment##" -
.##- ."
GetEnvironmentVariable##. D
(##D E
$str##E J
)##J K
;##K L
if$$ 
($$ 
stringNumber$$ 
!=$$ 
null$$  $
)$$$ %
{%% 
try&& 
{'' 
data(( 
=(( 
int(( 
.(( 
Parse(( $
((($ %
stringNumber((% 1
.((1 2
Trim((2 6
(((6 7
)((7 8
)((8 9
;((9 :
})) 
catch** 
(** 
FormatException** &
exceptNumberFormat**' 9
)**9 :
{++ 
IO,, 
.,, 
Logger,, 
.,, 
Log,, !
(,,! "
NLog,," &
.,,& '
LogLevel,,' /
.,,/ 0
Warn,,0 4
,,,4 5
exceptNumberFormat,,6 H
,,,H I
$str,,J |
),,| }
;,,} ~
}-- 
}.. 
}// 	
byte11 
[11 
]11 
dataSerialized11 
=11 
null11  $
;11$ %
try22 
{33 	
BinaryFormatter44 
bf44 
=44  
new44! $
BinaryFormatter44% 4
(444 5
)445 6
;446 7
using55 
(55 
var55 
ms55 
=55 
new55 
MemoryStream55  ,
(55, -
)55- .
)55. /
{66 
bf77 
.77 
	Serialize77 
(77 
ms77 
,77  
data77! %
)77% &
;77& '
dataSerialized88 
=88  
ms88! #
.88# $
ToArray88$ +
(88+ ,
)88, -
;88- .
}99 I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_75b:: I
.::I J
BadSink::J Q
(::Q R
dataSerialized::R `
)::b c
;::c d
};; 	
catch<< 
(<< "
SerializationException<< %
exceptSerialize<<& 5
)<<5 6
{== 	
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> 
.>> 
LogLevel>> '
.>>' (
Warn>>( ,
,>>, -
$str>>. X
,>>X Y
exceptSerialize>>Z i
)>>i j
;>>j k
}?? 	
}@@ 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
privateII 
staticII 
voidII 
GoodG2BII 
(II  
)II  !
{JJ 
intKK 
dataKK 
;KK 
dataMM 
=MM 
$numMM 
;MM 
byteOO 
[OO 
]OO 
dataSerializedOO 
=OO 
nullOO  $
;OO$ %
tryPP 
{QQ 	
BinaryFormatterRR 
bfRR 
=RR  
newRR! $
BinaryFormatterRR% 4
(RR4 5
)RR5 6
;RR6 7
usingSS 
(SS 
varSS 
msSS 
=SS 
newSS 
MemoryStreamSS  ,
(SS, -
)SS- .
)SS. /
{TT 
bfUU 
.UU 
	SerializeUU 
(UU 
msUU 
,UU  
dataUU! %
)UU% &
;UU& '
dataSerializedVV 
=VV  
msVV! #
.VV# $
ToArrayVV$ +
(VV+ ,
)VV, -
;VV- .
}WW I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_75bXX I
.XXI J
GoodG2BSinkXXJ U
(XXU V
dataSerializedXXV d
)XXf g
;XXg h
}YY 	
catchZZ 
(ZZ "
SerializationExceptionZZ %
exceptSerializeZZ& 5
)ZZ5 6
{[[ 	
IO\\ 
.\\ 
Logger\\ 
.\\ 
Log\\ 
(\\ 
NLog\\ 
.\\ 
LogLevel\\ '
.\\' (
Warn\\( ,
,\\, -
$str\\. X
,\\X Y
exceptSerialize\\Z i
)\\i j
;\\j k
}]] 	
}^^ 
}`` 
}aa „!
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_75b C
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ˆ
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_81a C
:D E
AbstractTestCaseF V
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
string!! 
stringNumber!! 
=!!  !
Environment!!" -
.!!- ."
GetEnvironmentVariable!!. D
(!!D E
$str!!E J
)!!J K
;!!K L
if"" 
("" 
stringNumber"" 
!="" 
null""  $
)""$ %
{## 
try$$ 
{%% 
data&& 
=&& 
int&& 
.&& 
Parse&& $
(&&$ %
stringNumber&&% 1
.&&1 2
Trim&&2 6
(&&6 7
)&&7 8
)&&8 9
;&&9 :
}'' 
catch(( 
((( 
FormatException(( &
exceptNumberFormat((' 9
)((9 :
{)) 
IO** 
.** 
Logger** 
.** 
Log** !
(**! "
NLog**" &
.**& '
LogLevel**' /
.**/ 0
Warn**0 4
,**4 5
exceptNumberFormat**6 H
,**H I
$str**J |
)**| }
;**} ~
}++ 
},, 
}-- 	M
ACWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base.. I

baseObject..J T
=..U V
new..W ZM
@CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_bad	..[ õ
(
..õ ú
)
..ú ù
;
..ù û

baseObject// 
.// 
Action// 
(// 
data// 
)//  
;//  !
}00 
public33 

override33 
void33 
Good33 
(33 
)33 
{44 
GoodG2B55 
(55 
)55 
;55 
}66 
private99 
void99 
GoodG2B99 
(99 
)99 
{:: 
int;; 
data;; 
;;; 
data== 
=== 
$num== 
;== M
ACWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base>> I

baseObject>>J T
=>>U V
new>>W ZQ
DCWE197_Numeric_Truncation_Error__int_Environment_to_short_81_goodG2B	>>[ ü
(
>>ü †
)
>>† °
;
>>° ¢

baseObject?? 
.?? 
Action?? 
(?? 
data?? 
)??  
;??  !
}@@ 
}BB 
}CC ì
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class L
@CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_bad F
:G HN
ACWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base	I ä
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ˘
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 M
ACWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base P
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} õ
«C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class P
DCWE197_Numeric_Truncation_Error__int_Environment_to_short_81_goodG2B J
:K LN
ACWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base	M é
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" Í
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_01 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
{<< 	
IO>> 
.>> 
	WriteLine>> 
(>> 
(>> 
byte>> 
)>> 
data>> #
)>># $
;>>$ %
}?? 	
}@@ 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodG2BII 
(II 
)II 
{JJ 
intKK 
dataKK 
;KK 
dataMM 
=MM 
$numMM 
;MM 
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
}TT 
}UU –"
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_02 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
falsePP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
trueee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} µ#
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_03 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
$numPP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
$numee 
==ee 
$numee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} û%
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_04 :
:; <
AbstractTestCase= M
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private   
const   
bool   
PRIVATE_CONST_FALSE   *
=  + ,
false  - 2
;  2 3
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_TRUE&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{)) 
try** 
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
$str--> H
)--H I
)--I J
{.. 
string22 
stringNumber22 +
=22, -
sr22. 0
.220 1
ReadLine221 9
(229 :
)22: ;
;22; <
if33 
(33 
stringNumber33 (
!=33) +
null33, 0
)330 1
{44 
try55 
{66 
data77  $
=77% &
int77' *
.77* +
Parse77+ 0
(770 1
stringNumber771 =
.77= >
Trim77> B
(77B C
)77C D
)77D E
;77E F
}88 
catch99 !
(99" #
FormatException99# 2
exceptNumberFormat993 E
)99E F
{:: 
IO;;  "
.;;" #
Logger;;# )
.;;) *
Log;;* -
(;;- .
NLog;;. 2
.;;2 3
LogLevel;;3 ;
.;;; <
Warn;;< @
,;;@ A
exceptNumberFormat;;B T
,;;T U
$str	;;V à
)
;;à â
;
;;â ä
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	
elseFF 
{GG 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
PRIVATE_CONST_FALSEWW 
)WW  
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
PRIVATE_CONST_TRUEll 
)ll 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
elseqq 
{rr 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
byteyy 
)yy 
datayy #
)yy# $
;yy$ %
}zz 	
}{{ 
public}} 

override}} 
void}} 
Good}} 
(}} 
)}} 
{~~ 
GoodG2B1 
( 
) 
; 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}ÉÉ 
}ÑÑ ’$
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_05 :
:; <
AbstractTestCase= M
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private   
bool   
privateFalse   
=   
false    %
;  % &
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateTrue&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{)) 
try** 
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
$str--> H
)--H I
)--I J
{.. 
string22 
stringNumber22 +
=22, -
sr22. 0
.220 1
ReadLine221 9
(229 :
)22: ;
;22; <
if33 
(33 
stringNumber33 (
!=33) +
null33, 0
)330 1
{44 
try55 
{66 
data77  $
=77% &
int77' *
.77* +
Parse77+ 0
(770 1
stringNumber771 =
.77= >
Trim77> B
(77B C
)77C D
)77D E
;77E F
}88 
catch99 !
(99" #
FormatException99# 2
exceptNumberFormat993 E
)99E F
{:: 
IO;;  "
.;;" #
Logger;;# )
.;;) *
Log;;* -
(;;- .
NLog;;. 2
.;;2 3
LogLevel;;3 ;
.;;; <
Warn;;< @
,;;@ A
exceptNumberFormat;;B T
,;;T U
$str	;;V à
)
;;à â
;
;;â ä
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	
elseFF 
{GG 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
privateFalseWW 
)WW 
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
privateTruell 
)ll 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
elseqq 
{rr 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
byteyy 
)yy 
datayy #
)yy# $
;yy$ %
}zz 	
}{{ 
public}} 

override}} 
void}} 
Good}} 
(}} 
)}} 
{~~ 
GoodG2B1 
( 
) 
; 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}ÉÉ 
}ÑÑ Ó$
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_06 :
:; <
AbstractTestCase= M
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
PRIVATE_CONST_FIVE%% 
==%% !
$num%%" #
)%%# $
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{(( 
try)) 
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
$str,,> H
),,H I
),,I J
{-- 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88" #
FormatException88# 2
exceptNumberFormat883 E
)88E F
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
}DD 	
elseEE 
{FF 	
dataII 
=II 
$numII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
byteMM 
)MM 
dataMM #
)MM# $
;MM$ %
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
ifVV 

(VV 
PRIVATE_CONST_FIVEVV 
!=VV !
$numVV" #
)VV# $
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
privatehh 
voidhh 
GoodG2B2hh 
(hh 
)hh 
{ii 
intjj 
datajj 
;jj 
ifkk 

(kk 
PRIVATE_CONST_FIVEkk 
==kk !
$numkk" #
)kk# $
{ll 	
datann 
=nn 
$numnn 
;nn 
}oo 	
elsepp 
{qq 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
bytexx 
)xx 
dataxx #
)xx# $
;xx$ %
}yy 	
}zz 
public|| 

override|| 
void|| 
Good|| 
(|| 
)|| 
{}} 
GoodG2B1~~ 
(~~ 
)~~ 
;~~ 
GoodG2B2 
( 
) 
; 
}
ÄÄ 
}ÇÇ 
}ÉÉ ø$
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_07 :
:; <
AbstractTestCase= M
{ 
private 
int 
privateFive 
= 
$num 
;  
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
privateFive%% 
==%% 
$num%% 
)%% 
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{(( 
try)) 
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
$str,,> H
),,H I
),,I J
{-- 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88" #
FormatException88# 2
exceptNumberFormat883 E
)88E F
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
}DD 	
elseEE 
{FF 	
dataII 
=II 
$numII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
byteMM 
)MM 
dataMM #
)MM# $
;MM$ %
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
ifVV 

(VV 
privateFiveVV 
!=VV 
$numVV 
)VV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
privatehh 
voidhh 
GoodG2B2hh 
(hh 
)hh 
{ii 
intjj 
datajj 
;jj 
ifkk 

(kk 
privateFivekk 
==kk 
$numkk 
)kk 
{ll 	
datann 
=nn 
$numnn 
;nn 
}oo 	
elsepp 
{qq 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
bytexx 
)xx 
dataxx #
)xx# $
;xx$ %
}yy 	
}zz 
public|| 

override|| 
void|| 
Good|| 
(|| 
)|| 
{}} 
GoodG2B1~~ 
(~~ 
)~~ 
;~~ 
GoodG2B2 
( 
) 
; 
}
ÄÄ 
}ÇÇ 
}ÉÉ ™'
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_08 :
:; <
AbstractTestCase= M
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{   
return!! 
true!! 
;!! 
}"" 
private$$ 
static$$ 
bool$$ 
PrivateReturnsFalse$$ +
($$+ ,
)$$, -
{%% 
return&& 
false&& 
;&& 
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 
PrivateReturnsTrue-- 
(-- 
)--  
)--  !
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{00 
try11 
{22 
using44 
(44 
StreamReader44 '
sr44( *
=44+ ,
new44- 0
StreamReader441 =
(44= >
$str44> H
)44H I
)44I J
{55 
string99 
stringNumber99 +
=99, -
sr99. 0
.990 1
ReadLine991 9
(999 :
)99: ;
;99; <
if:: 
(:: 
stringNumber:: (
!=::) +
null::, 0
)::0 1
{;; 
try<< 
{== 
data>>  $
=>>% &
int>>' *
.>>* +
Parse>>+ 0
(>>0 1
stringNumber>>1 =
.>>= >
Trim>>> B
(>>B C
)>>C D
)>>D E
;>>E F
}?? 
catch@@ !
(@@" #
FormatException@@# 2
exceptNumberFormat@@3 E
)@@E F
{AA 
IOBB  "
.BB" #
LoggerBB# )
.BB) *
LogBB* -
(BB- .
NLogBB. 2
.BB2 3
LogLevelBB3 ;
.BB; <
WarnBB< @
,BB@ A
exceptNumberFormatBBB T
,BBT U
$str	BBV à
)
BBà â
;
BBâ ä
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
private[[ 
void[[ 
GoodG2B1[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
if^^ 

(^^ 
PrivateReturnsFalse^^ 
(^^  
)^^  !
)^^! "
{__ 	
databb 
=bb 
$numbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
bytekk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
privatepp 
voidpp 
GoodG2B2pp 
(pp 
)pp 
{qq 
intrr 
datarr 
;rr 
ifss 

(ss 
PrivateReturnsTruess 
(ss 
)ss  
)ss  !
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
elsexx 
{yy 	
data|| 
=|| 
$num|| 
;|| 
}}} 	
{~~ 	
IO
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ 
(
ÄÄ 
(
ÄÄ 
byte
ÄÄ 
)
ÄÄ 
data
ÄÄ #
)
ÄÄ# $
;
ÄÄ$ %
}
ÅÅ 	
}
ÇÇ 
public
ÑÑ 

override
ÑÑ 
void
ÑÑ 
Good
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
GoodG2B1
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
GoodG2B2
áá 
(
áá 
)
áá 
;
áá 
}
àà 
}ää 
}ãã ›#
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_09 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP !
STATIC_READONLY_FALSEPP $
)PP$ %
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_TRUEee #
)ee# $
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ø#
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_10 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
staticFalsePP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee 

staticTrueee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} Æ$
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_11 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
StaticReturnsFalsePP !
(PP! "
)PP" #
)PP# $
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee 
StaticReturnsTrueee  
(ee  !
)ee! "
)ee" #
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ¨
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_12 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
byteFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP $
StaticReturnsTrueOrFalsePP '
(PP' (
)PP( )
)PP) *
{QQ 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ¬$
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_13 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP  
STATIC_READONLY_FIVEPP #
!=PP$ &
$numPP' (
)PP( )
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_FIVEee #
==ee$ &
$numee' (
)ee( )
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} §$
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_14 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 

staticFivePP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee 

staticFiveee 
==ee 
$numee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} Å&
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_15 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{   	
case!! 
$num!! 
:!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{## 
try$$ 
{%% 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
$str''> H
)''H I
)''I J
{(( 
string,, 
stringNumber,, +
=,,, -
sr,,. 0
.,,0 1
ReadLine,,1 9
(,,9 :
),,: ;
;,,; <
if-- 
(-- 
stringNumber-- (
!=--) +
null--, 0
)--0 1
{.. 
try// 
{00 
data11  $
=11% &
int11' *
.11* +
Parse11+ 0
(110 1
stringNumber111 =
.11= >
Trim11> B
(11B C
)11C D
)11D E
;11E F
}22 
catch33 !
(33" #
FormatException33# 2
exceptNumberFormat333 E
)33E F
{44 
IO55  "
.55" #
Logger55# )
.55) *
Log55* -
(55- .
NLog55. 2
.552 3
LogLevel553 ;
.55; <
Warn55< @
,55@ A
exceptNumberFormat55B T
,55T U
$str	55V à
)
55à â
;
55â ä
}66 
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
break?? 
;?? 
default@@ 
:@@ 
dataCC 
=CC 
$numCC 
;CC 
breakDD 
;DD 
}EE 	
{FF 	
IOHH 
.HH 
	WriteLineHH 
(HH 
(HH 
byteHH 
)HH 
dataHH #
)HH# $
;HH$ %
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
intPP 
dataPP 
=PP 
$numPP 
;PP 
switchQQ 
(QQ 
$numQQ 
)QQ 
{RR 	
caseSS 
$numSS 
:SS 
dataVV 
=VV 
$numVV 
;VV 
breakWW 
;WW 
defaultXX 
:XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ 
break[[ 
;[[ 
}\\ 	
{]] 	
IO__ 
.__ 
	WriteLine__ 
(__ 
(__ 
byte__ 
)__ 
data__ #
)__# $
;__$ %
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
)dd 
{ee 
intff 
dataff 
=ff 
$numff 
;ff 
switchgg 
(gg 
$numgg 
)gg 
{hh 	
caseii 
$numii 
:ii 
datakk 
=kk 
$numkk 
;kk 
breakll 
;ll 
defaultmm 
:mm 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
}rr 	
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
byteuu 
)uu 
datauu #
)uu# $
;uu$ %
}vv 	
}ww 
publicyy 

overrideyy 
voidyy 
Goodyy 
(yy 
)yy 
{zz 
GoodG2B1{{ 
({{ 
){{ 
;{{ 
GoodG2B2|| 
(|| 
)|| 
;|| 
}}} 
} 
}ÄÄ 
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_16 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
byteBB 
)BB 
dataBB #
)BB# $
;BB$ %
}CC 	
}DD 
privateHH 
voidHH 
GoodG2BHH 
(HH 
)HH 
{II 
intJJ 
dataJJ 
;JJ 
whileKK 
(KK 
trueKK 
)KK 
{LL 	
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
byteSS 
)SS 
dataSS #
)SS# $
;SS$ %
}TT 	
}UU 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
}\\ 
}]] ‡
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_17 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
for<< 
(<< 
int<< 
i<< 
=<< 
$num<< 
;<< 
i<< 
<<< 
$num<< 
;<< 
i<<  
++<<  "
)<<" #
{== 	
{>> 
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ "
)@@" #
data@@# '
)@@' (
;@@( )
}AA 
}BB 	
}CC 
privateHH 
voidHH 
GoodG2BHH 
(HH 
)HH 
{II 
intJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$numLL 
;LL 
forMM 
(MM 
intMM 
iMM 
=MM 
$numMM 
;MM 
iMM 
<MM 
$numMM 
;MM 
iMM  
++MM  "
)MM" #
{NN 	
{OO 
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
(QQ 
byteQQ "
)QQ" #
dataQQ# '
)QQ' (
;QQ( )
}RR 
}SS 	
}TT 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
}[[ 
}\\ —0
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_21 :
:; <
AbstractTestCase= M
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 

badPrivate"" 
="" 
true"" 
;"" 
data## 
=## 

Bad_source## 
(## 
)## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
byte&& 
)&& 
data&& #
)&&# $
;&&$ %
}'' 	
}(( 
private** 
int** 

Bad_source** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 

badPrivate-- 
)-- 
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{00 
try11 
{22 
using44 
(44 
StreamReader44 '
sr44( *
=44+ ,
new44- 0
StreamReader441 =
(44= >
$str44> H
)44H I
)44I J
{55 
string99 
stringNumber99 +
=99, -
sr99. 0
.990 1
ReadLine991 9
(999 :
)99: ;
;99; <
if:: 
(:: 
stringNumber:: (
!=::) +
null::, 0
)::0 1
{;; 
try<< 
{== 
data>>  $
=>>% &
int>>' *
.>>* +
Parse>>+ 0
(>>0 1
stringNumber>>1 =
.>>= >
Trim>>> B
(>>B C
)>>C D
)>>D E
;>>E F
}?? 
catch@@ !
(@@" #
FormatException@@# 2
exceptNumberFormat@@3 E
)@@E F
{AA 
IOBB  "
.BB" #
LoggerBB# )
.BB) *
LogBB* -
(BB- .
NLogBB. 2
.BB2 3
LogLevelBB3 ;
.BB; <
WarnBB< @
,BB@ A
exceptNumberFormatBBB T
,BBT U
$str	BBV à
)
BBà â
;
BBâ ä
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
returnSS 
dataSS 
;SS 
}TT 
privateWW 
boolWW 
goodG2B1_privateWW !
=WW" #
falseWW$ )
;WW) *
privateXX 
boolXX 
GoodG2B2_privateXX !
=XX" #
falseXX$ )
;XX) *
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B1\\ 
(\\ 
)\\ 
;\\ 
GoodG2B2]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B1aa 
(aa 
)aa 
{bb 
intcc 
datacc 
;cc 
goodG2B1_privatedd 
=dd 
falsedd  
;dd  !
dataee 
=ee 
GoodG2B1_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatell 
intll 
GoodG2B1_sourcell 
(ll  
)ll  !
{mm 
intnn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
goodG2B1_privateoo 
)oo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
int
ÄÄ 
data
ÄÄ 
;
ÄÄ 
GoodG2B2_private
ÅÅ 
=
ÅÅ 
true
ÅÅ 
;
ÅÅ  
data
ÇÇ 
=
ÇÇ 
GoodG2B2_source
ÇÇ 
(
ÇÇ 
)
ÇÇ  
;
ÇÇ  !
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
byte
ÖÖ 
)
ÖÖ 
data
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
}
ÜÜ 	
}
áá 
private
ââ 
int
ââ 
GoodG2B2_source
ââ 
(
ââ  
)
ââ  !
{
ää 
int
ãã 
data
ãã 
=
ãã 
$num
ãã 
;
ãã 
if
åå 

(
åå 
GoodG2B2_private
åå 
)
åå 
{
çç 	
data
èè 
=
èè 
$num
èè 
;
èè 
}
êê 	
else
ëë 
{
íí 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
return
óó 
data
óó 
;
óó 
}
òò 
}öö 
}õõ Ö
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22a ;
:< =
AbstractTestCase> N
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22b!! D
.!!D E
	BadSource!!E N
(!!N O
)!!O P
;!!P Q
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22b88 D
.88D E
GoodG2B1Source88E S
(88S T
)88T U
;88U V
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22bDD D
.DDD E
GoodG2B2SourceDDE S
(DDS T
)DDT U
;DDU V
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL æ
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22b ;
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22a A
.A B
badPublicStaticB Q
)Q R
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
returnEE 
dataEE 
;EE 
}FF 
publicKK 

staticKK 
intKK 
GoodG2B1SourceKK $
(KK$ %
)KK% &
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22aNN A
.NNA B 
goodG2B1PublicStaticNNB V
)NNV W
{OO 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
returnYY 
dataYY 
;YY 
}ZZ 
public]] 

static]] 
int]] 
GoodG2B2Source]] $
(]]$ %
)]]% &
{^^ 
int__ 
data__ 
;__ 
if`` 

(`` A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22a`` A
.``A B 
GoodG2B2PublicStatic``B V
)``V W
{aa 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
$numii 
;ii 
}jj 	
returnkk 
datakk 
;kk 
}ll 
}nn 
}oo à
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_31 :
:; <
AbstractTestCase= M
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{   	
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{## 
try$$ 
{%% 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
$str''> H
)''H I
)''I J
{(( 
string,, 
stringNumber,, +
=,,, -
sr,,. 0
.,,0 1
ReadLine,,1 9
(,,9 :
),,: ;
;,,; <
if-- 
(-- 
stringNumber-- (
!=--) +
null--, 0
)--0 1
{.. 
try// 
{00 
data11  $
=11% &
int11' *
.11* +
Parse11+ 0
(110 1
stringNumber111 =
.11= >
Trim11> B
(11B C
)11C D
)11D E
;11E F
}22 
catch33 !
(33" #
FormatException33# 2
exceptNumberFormat333 E
)33E F
{44 
IO55  "
.55" #
Logger55# )
.55) *
Log55* -
(55- .
NLog55. 2
.552 3
LogLevel553 ;
.55; <
Warn55< @
,55@ A
exceptNumberFormat55B T
,55T U
$str	55V à
)
55à â
;
55â ä
}66 
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
dataCopy?? 
=?? 
data?? 
;?? 
}@@ 	
{AA 	
intBB 
dataBB 
=BB 
dataCopyBB 
;BB  
{CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
byteEE "
)EE" #
dataEE# '
)EE' (
;EE( )
}FF 
}GG 	
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
)KK 
{LL 
GoodG2BMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
intSS 
dataCopySS 
;SS 
{TT 	
intUU 
dataUU 
;UU 
dataWW 
=WW 
$numWW 
;WW 
dataCopyXX 
=XX 
dataXX 
;XX 
}YY 	
{ZZ 	
int[[ 
data[[ 
=[[ 
dataCopy[[ 
;[[  
{\\ 
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
byte^^ "
)^^" #
data^^# '
)^^' (
;^^( )
}__ 
}`` 	
}aa 
}cc 
}dd å
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_41 :
:; <
AbstractTestCase= M
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&& 
{'' 	
try(( 
{)) 
using++ 
(++ 
StreamReader++ #
sr++$ &
=++' (
new++) ,
StreamReader++- 9
(++9 :
$str++: D
)++D E
)++E F
{,, 
string00 
stringNumber00 '
=00( )
sr00* ,
.00, -
ReadLine00- 5
(005 6
)006 7
;007 8
if11 
(11 
stringNumber11 $
!=11% '
null11( ,
)11, -
{22 
try33 
{44 
data55  
=55! "
int55# &
.55& '
Parse55' ,
(55, -
stringNumber55- 9
.559 :
Trim55: >
(55> ?
)55? @
)55@ A
;55A B
}66 
catch77 
(77 
FormatException77 .
exceptNumberFormat77/ A
)77A B
{88 
IO99 
.99 
Logger99 %
.99% &
Log99& )
(99) *
NLog99* .
.99. /
LogLevel99/ 7
.997 8
Warn998 <
,99< =
exceptNumberFormat99> P
,99P Q
$str	99R Ñ
)
99Ñ Ö
;
99Ö Ü
}:: 
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
}BB 	
BadSinkCC 
(CC 
dataCC 
)CC 
;CC 
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateLL 
staticLL 
voidLL 
GoodG2BSinkLL #
(LL# $
intLL$ '
dataLL( ,
)LL- .
{MM 
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
bytePP 
)PP 
dataPP #
)PP# $
;PP$ %
}QQ 	
}RR 
privateUU 
staticUU 
voidUU 
GoodG2BUU 
(UU  
)UU  !
{VV 
intWW 
dataWW 
;WW 
dataYY 
=YY 
$numYY 
;YY 
GoodG2BSinkZZ 
(ZZ 
dataZZ 
)ZZ 
;ZZ 
}[[ 
}]] 
}^^ ˆ
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_42 :
:; <
AbstractTestCase= M
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
try   
{!! 
using## 
(## 
StreamReader## #
sr##$ &
=##' (
new##) ,
StreamReader##- 9
(##9 :
$str##: D
)##D E
)##E F
{$$ 
string(( 
stringNumber(( '
=((( )
sr((* ,
.((, -
ReadLine((- 5
(((5 6
)((6 7
;((7 8
if)) 
()) 
stringNumber)) $
!=))% '
null))( ,
))), -
{** 
try++ 
{,, 
data--  
=--! "
int--# &
.--& '
Parse--' ,
(--, -
stringNumber--- 9
.--9 :
Trim--: >
(--> ?
)--? @
)--@ A
;--A B
}.. 
catch// 
(// 
FormatException// .
exceptNumberFormat/// A
)//A B
{00 
IO11 
.11 
Logger11 %
.11% &
Log11& )
(11) *
NLog11* .
.11. /
LogLevel11/ 7
.117 8
Warn118 <
,11< =
exceptNumberFormat11> P
,11P Q
$str	11R Ñ
)
11Ñ Ö
;
11Ö Ü
}22 
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	
return;; 
data;; 
;;; 
}<< 
public?? 

override?? 
void?? 
Bad?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
=AA 
	BadSourceAA 
(AA 
)AA 
;AA 
{BB 	
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD 
)DD 
dataDD #
)DD# $
;DD$ %
}EE 	
}FF 
privateII 
staticII 
intII 
GoodG2BSourceII $
(II$ %
)II% &
{JJ 
intKK 
dataKK 
;KK 
dataMM 
=MM 
$numMM 
;MM 
returnNN 
dataNN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
)RR  !
{SS 
intTT 
dataTT 
=TT 
GoodG2BSourceTT  
(TT  !
)TT! "
;TT" #
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
byteWW 
)WW 
dataWW #
)WW# $
;WW$ %
}XX 	
}YY 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
}`` 
}aa º 
∑C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class @
4CWE197_Numeric_Truncation_Error__int_File_to_byte_45 :
:; <
AbstractTestCase= M
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{   
int!! 
data!! 
=!! 
dataBad!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public)) 

override)) 
void)) 
Bad)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data,, 
=,, 
int,, 
.,, 
MinValue,, 
;,, 
{-- 	
try.. 
{// 
using11 
(11 
StreamReader11 #
sr11$ &
=11' (
new11) ,
StreamReader11- 9
(119 :
$str11: D
)11D E
)11E F
{22 
string66 
stringNumber66 '
=66( )
sr66* ,
.66, -
ReadLine66- 5
(665 6
)666 7
;667 8
if77 
(77 
stringNumber77 $
!=77% '
null77( ,
)77, -
{88 
try99 
{:: 
data;;  
=;;! "
int;;# &
.;;& '
Parse;;' ,
(;;, -
stringNumber;;- 9
.;;9 :
Trim;;: >
(;;> ?
);;? @
);;@ A
;;;A B
}<< 
catch== 
(== 
FormatException== .
exceptNumberFormat==/ A
)==A B
{>> 
IO?? 
.?? 
Logger?? %
.??% &
Log??& )
(??) *
NLog??* .
.??. /
LogLevel??/ 7
.??7 8
Warn??8 <
,??< =
exceptNumberFormat??> P
,??P Q
$str	??R Ñ
)
??Ñ Ö
;
??Ö Ü
}@@ 
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD 
exceptIODD '
)DD' (
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF "
.FF" #
LogLevelFF# +
.FF+ ,
WarnFF, 0
,FF0 1
exceptIOFF2 :
,FF: ;
$strFF< W
)FFW X
;FFX Y
}GG 
}HH 	
dataBadII 
=II 
dataII 
;II 
BadSinkJJ 
(JJ 
)JJ 
;JJ 
}KK 
publicNN 

overrideNN 
voidNN 
GoodNN 
(NN 
)NN 
{OO 
GoodG2BPP 
(PP 
)PP 
;PP 
}QQ 
privateSS 
voidSS 
GoodG2BSinkSS 
(SS 
)SS 
{TT 
intUU 
dataUU 
=UU 
dataGoodG2BUU 
;UU 
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa 
dataGoodG2Bbb 
=bb 
databb 
;bb 
GoodG2BSinkcc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg ∂
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_51a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
try   
{!! 
using## 
(## 
StreamReader## #
sr##$ &
=##' (
new##) ,
StreamReader##- 9
(##9 :
$str##: D
)##D E
)##E F
{$$ 
string(( 
stringNumber(( '
=((( )
sr((* ,
.((, -
ReadLine((- 5
(((5 6
)((6 7
;((7 8
if)) 
()) 
stringNumber)) $
!=))% '
null))( ,
))), -
{** 
try++ 
{,, 
data--  
=--! "
int--# &
.--& '
Parse--' ,
(--, -
stringNumber--- 9
.--9 :
Trim--: >
(--> ?
)--? @
)--@ A
;--A B
}.. 
catch// 
(// 
FormatException// .
exceptNumberFormat/// A
)//A B
{00 
IO11 
.11 
Logger11 %
.11% &
Log11& )
(11) *
NLog11* .
.11. /
LogLevel11/ 7
.117 8
Warn118 <
,11< =
exceptNumberFormat11> P
,11P Q
$str	11R Ñ
)
11Ñ Ö
;
11Ö Ü
}22 
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_51b;; =
.;;= >
BadSink;;> E
(;;E F
data;;F J
);;L M
;;;M N
}<< 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
GoodG2BAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
voidEE 
GoodG2BEE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
dataII 
=II 
$numII 
;II A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_51bJJ =
.JJ= >
GoodG2BSinkJJ> I
(JJI J
dataJJJ N
)JJP Q
;JJQ R
}KK 
}MM 
}NN ë	
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_51b ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, ∂
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52b<< =
.<<= >
BadSink<<> E
(<<E F
data<<F J
)<<K L
;<<L M
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
voidFF 
GoodG2BFF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52bKK =
.KK= >
GoodG2BSinkKK> I
(KKI J
dataKKJ N
)KKO P
;KKP Q
}LL 
}NN 
}OO €
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52b ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52c =
.= >
BadSink> E
(E F
dataF J
)K L
;L M
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52c## =
.##= >
GoodG2BSink##> I
(##I J
data##J N
)##O P
;##P Q
}$$ 
}&& 
}'' ë	
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52c ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ∂
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53b<< =
.<<= >
BadSink<<> E
(<<E F
data<<F J
)<<K L
;<<L M
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
voidFF 
GoodG2BFF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53bKK =
.KK= >
GoodG2BSinkKK> I
(KKI J
dataKKJ N
)KKO P
;KKP Q
}LL 
}NN 
}OO €
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53b ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53c =
.= >
BadSink> E
(E F
dataF J
)K L
;L M
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53c## =
.##= >
GoodG2BSink##> I
(##I J
data##J N
)##O P
;##P Q
}$$ 
}&& 
}'' €
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53c ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53d =
.= >
BadSink> E
(E F
dataF J
)K L
;L M
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53d## =
.##= >
GoodG2BSink##> I
(##I J
data##J N
)##O P
;##P Q
}$$ 
}&& 
}'' ë	
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53d ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ∂
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54b<< =
.<<= >
BadSink<<> E
(<<E F
data<<F J
)<<K L
;<<L M
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
voidFF 
GoodG2BFF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54bKK =
.KK= >
GoodG2BSinkKK> I
(KKI J
dataKKJ N
)KKO P
;KKP Q
}LL 
}NN 
}OO €
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54b ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54c =
.= >
BadSink> E
(E F
dataF J
)K L
;L M
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54c## =
.##= >
GoodG2BSink##> I
(##I J
data##J N
)##O P
;##P Q
}$$ 
}&& 
}'' €
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54c ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54d =
.= >
BadSink> E
(E F
dataF J
)K L
;L M
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54d## =
.##= >
GoodG2BSink##> I
(##I J
data##J N
)##O P
;##P Q
}$$ 
}&& 
}'' €
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54d ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54e =
.= >
BadSink> E
(E F
dataF J
)K L
;L M
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54e## =
.##= >
GoodG2BSink##> I
(##I J
data##J N
)##O P
;##P Q
}$$ 
}&& 
}'' ë	
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54e ;
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ”
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_61a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_61b H
.H I
	BadSourceI R
(R S
)S T
;T U
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_61b++ H
.++H I
GoodG2BSource++I V
(++V W
)++W X
;++X Y
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 Ú
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_61b ;
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
return<< 
data<< 
;<< 
}== 
publicBB 

staticBB 
intBB 
GoodG2BSourceBB #
(BB# $
)BB$ %
{CC 
intDD 
dataDD 
;DD 
dataFF 
=FF 
$numFF 
;FF 
returnGG 
dataGG 
;GG 
}HH 
}JJ 
}KK Æ
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_66a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
int<< 
[<< 
]<< 
	dataArray<< 
=<< 
new<< 
int<< !
[<<! "
$num<<" #
]<<# $
;<<$ %
	dataArray== 
[== 
$num== 
]== 
=== 
data== 
;== A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_66b>> =
.>>= >
BadSink>>> E
(>>E F
	dataArray>>F O
)>>Q R
;>>R S
}?? 
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
)BB 
{CC 
GoodG2BDD 
(DD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
)HH  !
{II 
intJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$numLL 
;LL 
intMM 
[MM 
]MM 
	dataArrayMM 
=MM 
newMM 
intMM !
[MM! "
$numMM" #
]MM# $
;MM$ %
	dataArrayNN 
[NN 
$numNN 
]NN 
=NN 
dataNN 
;NN A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_66bOO =
.OO= >
GoodG2BSinkOO> I
(OOI J
	dataArrayOOJ S
)OOU V
;OOV W
}PP 
}RR 
}SS Á
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_66b ;
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ö
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_67a ;
:< =
AbstractTestCase> N
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$ 
{%% 	
try&& 
{'' 
using)) 
()) 
StreamReader)) #
sr))$ &
=))' (
new))) ,
StreamReader))- 9
())9 :
$str)): D
)))D E
)))E F
{** 
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
int33# &
.33& '
Parse33' ,
(33, -
stringNumber33- 9
.339 :
Trim33: >
(33> ?
)33? @
)33@ A
;33A B
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
	ContainerAA 
dataContainerAA 
=AA  !
newAA" %
	ContainerAA& /
(AA/ 0
)AA0 1
;AA1 2
dataContainerBB 
.BB 
containerOneBB "
=BB# $
dataBB% )
;BB) *A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_67bCC =
.CC= >
BadSinkCC> E
(CCE F
dataContainerCCF S
)CCU V
;CCV W
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateMM 
staticMM 
voidMM 
GoodG2BMM 
(MM  
)MM  !
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
	ContainerRR 
dataContainerRR 
=RR  !
newRR" %
	ContainerRR& /
(RR/ 0
)RR0 1
;RR1 2
dataContainerSS 
.SS 
containerOneSS "
=SS# $
dataSS% )
;SS) *A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_67bTT =
.TT= >
GoodG2BSinkTT> I
(TTI J
dataContainerTTJ W
)TTY Z
;TTZ [
}UU 
}WW 
}XX ›
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_67b ;
{ 
public 

static 
void 
BadSink 
( A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_67a T
.T U
	ContainerU ^
dataContainer_ l
)m n
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_67a%%# X
.%%X Y
	Container%%Y b
dataContainer%%c p
)%%q r
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ú
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_68a ;
:< =
AbstractTestCase> N
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_68b<< =
.<<= >
BadSink<<> E
(<<E F
)<<F G
;<<G H
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
)FF  !
{GG 
dataII 
=II 
$numII 
;II A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_68bJJ =
.JJ= >
GoodG2BSinkJJ> I
(JJI J
)JJJ K
;JJK L
}KK 
}MM 
}NN ï
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_68b ;
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_68a H
.H I
dataI M
;M N
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_68a&& H
.&&H I
data&&I M
;&&M N
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. Æ
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_71a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_71b<< =
.<<= >
BadSink<<> E
(<<E F
(<<F G
Object<<G M
)<<M N
data<<N R
)<<T U
;<<U V
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
)FF  !
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_71bKK =
.KK= >
GoodG2BSinkKK> I
(KKI J
(KKJ K
ObjectKKK Q
)KKQ R
dataKKR V
)KKX Y
;KKY Z
}LL 
}NN 
}OO ≥
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_71b ;
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Œ#
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_72a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
	Hashtable<< 
dataHashtable<< 
=<<  !
new<<" %
	Hashtable<<& /
(<</ 0
$num<<0 1
)<<1 2
;<<2 3
dataHashtable== 
.== 
Add== 
(== 
$num== 
,== 
data== !
)==! "
;==" #
dataHashtable>> 
.>> 
Add>> 
(>> 
$num>> 
,>> 
data>> !
)>>! "
;>>" #
dataHashtable?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? !
)??! "
;??" #A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_72b@@ =
.@@= >
BadSink@@> E
(@@E F
dataHashtable@@F S
)@@U V
;@@V W
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodG2BJJ 
(JJ  
)JJ  !
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN 
	HashtableOO 
dataHashtableOO 
=OO  !
newOO" %
	HashtableOO& /
(OO/ 0
$numOO0 1
)OO1 2
;OO2 3
dataHashtablePP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP !
)PP! "
;PP" #
dataHashtableQQ 
.QQ 
AddQQ 
(QQ 
$numQQ 
,QQ 
dataQQ !
)QQ! "
;QQ" #
dataHashtableRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR !
)RR! "
;RR" #A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_72bSS =
.SS= >
GoodG2BSinkSS> I
(SSI J
dataHashtableSSJ W
)SSY Z
;SSZ [
}TT 
}VV 
}WW •
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_72b ;
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ∆#
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_73a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{!! 	
try"" 
{## 
using%% 
(%% 
StreamReader%% #
sr%%$ &
=%%' (
new%%) ,
StreamReader%%- 9
(%%9 :
$str%%: D
)%%D E
)%%E F
{&& 
string** 
stringNumber** '
=**( )
sr*** ,
.**, -
ReadLine**- 5
(**5 6
)**6 7
;**7 8
if++ 
(++ 
stringNumber++ $
!=++% '
null++( ,
)++, -
{,, 
try-- 
{.. 
data//  
=//! "
int//# &
.//& '
Parse//' ,
(//, -
stringNumber//- 9
.//9 :
Trim//: >
(//> ?
)//? @
)//@ A
;//A B
}00 
catch11 
(11 
FormatException11 .
exceptNumberFormat11/ A
)11A B
{22 
IO33 
.33 
Logger33 %
.33% &
Log33& )
(33) *
NLog33* .
.33. /
LogLevel33/ 7
.337 8
Warn338 <
,33< =
exceptNumberFormat33> P
,33P Q
$str	33R Ñ
)
33Ñ Ö
;
33Ö Ü
}44 
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	

LinkedList== 
<== 
int== 
>== 
dataLinkedList== &
===' (
new==) ,

LinkedList==- 7
<==7 8
int==8 ;
>==; <
(==< =
)=== >
;==> ?
dataLinkedList>> 
.>> 
AddLast>> 
(>> 
data>> #
)>># $
;>>$ %
dataLinkedList?? 
.?? 
AddLast?? 
(?? 
data?? #
)??# $
;??$ %
dataLinkedList@@ 
.@@ 
AddLast@@ 
(@@ 
data@@ #
)@@# $
;@@$ %A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_73bAA =
.AA= >
BadSinkAA> E
(AAE F
dataLinkedListAAF T
)AAV W
;AAW X
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO 

LinkedListPP 
<PP 
intPP 
>PP 
dataLinkedListPP &
=PP' (
newPP) ,

LinkedListPP- 7
<PP7 8
intPP8 ;
>PP; <
(PP< =
)PP= >
;PP> ?
dataLinkedListQQ 
.QQ 
AddLastQQ 
(QQ 
dataQQ #
)QQ# $
;QQ$ %
dataLinkedListRR 
.RR 
AddLastRR 
(RR 
dataRR #
)RR# $
;RR$ %
dataLinkedListSS 
.SS 
AddLastSS 
(SS 
dataSS #
)SS# $
;SS$ %A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_73bTT =
.TT= >
GoodG2BSinkTT> I
(TTI J
dataLinkedListTTJ X
)TTZ [
;TT[ \
}UU 
}WW 
}XX —
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_73b ;
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ù%
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_74a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	

Dictionary<< 
<<< 
int<< 
,<< 
int<< 
><< 
dataDictionary<< *
=<<+ ,
new<<- 0

Dictionary<<1 ;
<<<; <
int<<< ?
,<<? @
int<<@ C
><<C D
(<<D E
)<<E F
;<<F G
dataDictionary== 
.== 
Add== 
(== 
$num== 
,== 
data== "
)==" #
;==# $
dataDictionary>> 
.>> 
Add>> 
(>> 
$num>> 
,>> 
data>> "
)>>" #
;>># $
dataDictionary?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? "
)??" #
;??# $A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_74b@@ =
.@@= >
BadSink@@> E
(@@E F
dataDictionary@@F T
)@@V W
;@@W X
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodG2BJJ 
(JJ  
)JJ  !
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN 

DictionaryOO 
<OO 
intOO 
,OO 
intOO 
>OO 
dataDictionaryOO *
=OO+ ,
newOO- 0

DictionaryOO1 ;
<OO; <
intOO< ?
,OO? @
intOO@ C
>OOC D
(OOD E
)OOE F
;OOF G
dataDictionaryPP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP "
)PP" #
;PP# $
dataDictionaryQQ 
.QQ 
AddQQ 
(QQ 
$numQQ 
,QQ 
dataQQ "
)QQ" #
;QQ# $
dataDictionaryRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR "
)RR" #
;RR# $A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_74bSS =
.SS= >
GoodG2BSinkSS> I
(SSI J
dataDictionarySSJ X
)SSZ [
;SS[ \
}TT 
}VV 
}WW Î
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_74b ;
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ú-
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_75a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{!! 	
try"" 
{## 
using%% 
(%% 
StreamReader%% #
sr%%$ &
=%%' (
new%%) ,
StreamReader%%- 9
(%%9 :
$str%%: D
)%%D E
)%%E F
{&& 
string** 
stringNumber** '
=**( )
sr*** ,
.**, -
ReadLine**- 5
(**5 6
)**6 7
;**7 8
if++ 
(++ 
stringNumber++ $
!=++% '
null++( ,
)++, -
{,, 
try-- 
{.. 
data//  
=//! "
int//# &
.//& '
Parse//' ,
(//, -
stringNumber//- 9
.//9 :
Trim//: >
(//> ?
)//? @
)//@ A
;//A B
}00 
catch11 
(11 
FormatException11 .
exceptNumberFormat11/ A
)11A B
{22 
IO33 
.33 
Logger33 %
.33% &
Log33& )
(33) *
NLog33* .
.33. /
LogLevel33/ 7
.337 8
Warn338 <
,33< =
exceptNumberFormat33> P
,33P Q
$str	33R Ñ
)
33Ñ Ö
;
33Ö Ü
}44 
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	
byte>> 
[>> 
]>> 
dataSerialized>> 
=>> 
null>>  $
;>>$ %
try?? 
{@@ 	
BinaryFormatterAA 
bfAA 
=AA  
newAA! $
BinaryFormatterAA% 4
(AA4 5
)AA5 6
;AA6 7
usingBB 
(BB 
varBB 
msBB 
=BB 
newBB 
MemoryStreamBB  ,
(BB, -
)BB- .
)BB. /
{CC 
bfDD 
.DD 
	SerializeDD 
(DD 
msDD 
,DD  
dataDD! %
)DD% &
;DD& '
dataSerializedEE 
=EE  
msEE! #
.EE# $
ToArrayEE$ +
(EE+ ,
)EE, -
;EE- .
}FF A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_75bGG A
.GGA B
BadSinkGGB I
(GGI J
dataSerializedGGJ X
)GGZ [
;GG[ \
}HH 	
catchII 
(II "
SerializationExceptionII %
exceptSerializeII& 5
)II5 6
{JJ 	
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK 
.KK 
LogLevelKK '
.KK' (
WarnKK( ,
,KK, -
$strKK. X
,KKX Y
exceptSerializeKKZ i
)KKi j
;KKj k
}LL 	
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
intXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ 
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_75bee A
.eeA B
GoodG2BSinkeeB M
(eeM N
dataSerializedeeN \
)ee^ _
;ee_ `
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
}mm 
}nn —!
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_75b ;
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN –
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_byte_81a ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	E
9CWE197_Numeric_Truncation_Error__int_File_to_byte_81_base<< A

baseObject<<B L
=<<M N
new<<O RE
8CWE197_Numeric_Truncation_Error__int_File_to_byte_81_bad	<<S ã
(
<<ã å
)
<<å ç
;
<<ç é

baseObject== 
.== 
Action== 
(== 
data== 
)==  
;==  !
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
)AA 
{BB 
GoodG2BCC 
(CC 
)CC 
;CC 
}DD 
privateGG 
voidGG 
GoodG2BGG 
(GG 
)GG 
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK E
9CWE197_Numeric_Truncation_Error__int_File_to_byte_81_baseLL A

baseObjectLLB L
=LLM N
newLLO RI
<CWE197_Numeric_Truncation_Error__int_File_to_byte_81_goodG2B	LLS è
(
LLè ê
)
LLê ë
;
LLë í

baseObjectMM 
.MM 
ActionMM 
(MM 
dataMM 
)MM  
;MM  !
}NN 
}PP 
}QQ ˘
ªC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class D
8CWE197_Numeric_Truncation_Error__int_File_to_byte_81_bad >
:? @E
9CWE197_Numeric_Truncation_Error__int_File_to_byte_81_baseA z
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" È
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 E
9CWE197_Numeric_Truncation_Error__int_File_to_byte_81_base H
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} Å
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_File_to_byte_81_goodG2B B
:C DE
9CWE197_Numeric_Truncation_Error__int_File_to_byte_81_baseE ~
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ó
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_01 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
{<< 	
IO>> 
.>> 
	WriteLine>> 
(>> 
(>> 
short>> 
)>>  
data>>  $
)>>$ %
;>>% &
}?? 	
}@@ 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
privateII 
voidII 
GoodG2BII 
(II 
)II 
{JJ 
intKK 
dataKK 
;KK 
dataMM 
=MM 
$numMM 
;MM 
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
}TT 
}UU ’"
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_02 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
falsePP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
trueee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ∫#
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_03 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
$numPP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
$numee 
==ee 
$numee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} £%
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_04 ;
:< =
AbstractTestCase> N
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private   
const   
bool   
PRIVATE_CONST_FALSE   *
=  + ,
false  - 2
;  2 3
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_TRUE&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{)) 
try** 
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
$str--> H
)--H I
)--I J
{.. 
string22 
stringNumber22 +
=22, -
sr22. 0
.220 1
ReadLine221 9
(229 :
)22: ;
;22; <
if33 
(33 
stringNumber33 (
!=33) +
null33, 0
)330 1
{44 
try55 
{66 
data77  $
=77% &
int77' *
.77* +
Parse77+ 0
(770 1
stringNumber771 =
.77= >
Trim77> B
(77B C
)77C D
)77D E
;77E F
}88 
catch99 !
(99" #
FormatException99# 2
exceptNumberFormat993 E
)99E F
{:: 
IO;;  "
.;;" #
Logger;;# )
.;;) *
Log;;* -
(;;- .
NLog;;. 2
.;;2 3
LogLevel;;3 ;
.;;; <
Warn;;< @
,;;@ A
exceptNumberFormat;;B T
,;;T U
$str	;;V à
)
;;à â
;
;;â ä
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	
elseFF 
{GG 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
PRIVATE_CONST_FALSEWW 
)WW  
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
PRIVATE_CONST_TRUEll 
)ll 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
elseqq 
{rr 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
shortyy 
)yy  
datayy  $
)yy$ %
;yy% &
}zz 	
}{{ 
public}} 

override}} 
void}} 
Good}} 
(}} 
)}} 
{~~ 
GoodG2B1 
( 
) 
; 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}ÉÉ 
}ÑÑ ⁄$
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_05 ;
:< =
AbstractTestCase> N
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private   
bool   
privateFalse   
=   
false    %
;  % &
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateTrue&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{)) 
try** 
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
$str--> H
)--H I
)--I J
{.. 
string22 
stringNumber22 +
=22, -
sr22. 0
.220 1
ReadLine221 9
(229 :
)22: ;
;22; <
if33 
(33 
stringNumber33 (
!=33) +
null33, 0
)330 1
{44 
try55 
{66 
data77  $
=77% &
int77' *
.77* +
Parse77+ 0
(770 1
stringNumber771 =
.77= >
Trim77> B
(77B C
)77C D
)77D E
;77E F
}88 
catch99 !
(99" #
FormatException99# 2
exceptNumberFormat993 E
)99E F
{:: 
IO;;  "
.;;" #
Logger;;# )
.;;) *
Log;;* -
(;;- .
NLog;;. 2
.;;2 3
LogLevel;;3 ;
.;;; <
Warn;;< @
,;;@ A
exceptNumberFormat;;B T
,;;T U
$str	;;V à
)
;;à â
;
;;â ä
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ "
exceptIO@@# +
)@@+ ,
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB !
(BB! "
NLogBB" &
.BB& '
LogLevelBB' /
.BB/ 0
WarnBB0 4
,BB4 5
exceptIOBB6 >
,BB> ?
$strBB@ [
)BB[ \
;BB\ ]
}CC 
}DD 
}EE 	
elseFF 
{GG 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
privateTT 
voidTT 
GoodG2B1TT 
(TT 
)TT 
{UU 
intVV 
dataVV 
;VV 
ifWW 

(WW 
privateFalseWW 
)WW 
{XX 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
else]] 
{^^ 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
privateTruell 
)ll 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
elseqq 
{rr 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
shortyy 
)yy  
datayy  $
)yy$ %
;yy% &
}zz 	
}{{ 
public}} 

override}} 
void}} 
Good}} 
(}} 
)}} 
{~~ 
GoodG2B1 
( 
) 
; 
GoodG2B2
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}ÉÉ 
}ÑÑ Û$
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_06 ;
:< =
AbstractTestCase> N
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
PRIVATE_CONST_FIVE%% 
==%% !
$num%%" #
)%%# $
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{(( 
try)) 
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
$str,,> H
),,H I
),,I J
{-- 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88" #
FormatException88# 2
exceptNumberFormat883 E
)88E F
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
}DD 	
elseEE 
{FF 	
dataII 
=II 
$numII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
shortMM 
)MM  
dataMM  $
)MM$ %
;MM% &
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
ifVV 

(VV 
PRIVATE_CONST_FIVEVV 
!=VV !
$numVV" #
)VV# $
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
privatehh 
voidhh 
GoodG2B2hh 
(hh 
)hh 
{ii 
intjj 
datajj 
;jj 
ifkk 

(kk 
PRIVATE_CONST_FIVEkk 
==kk !
$numkk" #
)kk# $
{ll 	
datann 
=nn 
$numnn 
;nn 
}oo 	
elsepp 
{qq 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
shortxx 
)xx  
dataxx  $
)xx$ %
;xx% &
}yy 	
}zz 
public|| 

override|| 
void|| 
Good|| 
(|| 
)|| 
{}} 
GoodG2B1~~ 
(~~ 
)~~ 
;~~ 
GoodG2B2 
( 
) 
; 
}
ÄÄ 
}ÇÇ 
}ÉÉ ƒ$
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_07 ;
:< =
AbstractTestCase> N
{ 
private 
int 
privateFive 
= 
$num 
;  
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
if%% 

(%% 
privateFive%% 
==%% 
$num%% 
)%% 
{&& 	
data'' 
='' 
int'' 
.'' 
MinValue'' 
;''  
{(( 
try)) 
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
$str,,> H
),,H I
),,I J
{-- 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88" #
FormatException88# 2
exceptNumberFormat883 E
)88E F
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
}DD 	
elseEE 
{FF 	
dataII 
=II 
$numII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
shortMM 
)MM  
dataMM  $
)MM$ %
;MM% &
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
ifVV 

(VV 
privateFiveVV 
!=VV 
$numVV 
)VV 
{WW 	
dataZZ 
=ZZ 
$numZZ 
;ZZ 
}[[ 	
else\\ 
{]] 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
privatehh 
voidhh 
GoodG2B2hh 
(hh 
)hh 
{ii 
intjj 
datajj 
;jj 
ifkk 

(kk 
privateFivekk 
==kk 
$numkk 
)kk 
{ll 	
datann 
=nn 
$numnn 
;nn 
}oo 	
elsepp 
{qq 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
{vv 	
IOxx 
.xx 
	WriteLinexx 
(xx 
(xx 
shortxx 
)xx  
dataxx  $
)xx$ %
;xx% &
}yy 	
}zz 
public|| 

override|| 
void|| 
Good|| 
(|| 
)|| 
{}} 
GoodG2B1~~ 
(~~ 
)~~ 
;~~ 
GoodG2B2 
( 
) 
; 
}
ÄÄ 
}ÇÇ 
}ÉÉ Ø'
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_08 ;
:< =
AbstractTestCase> N
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{   
return!! 
true!! 
;!! 
}"" 
private$$ 
static$$ 
bool$$ 
PrivateReturnsFalse$$ +
($$+ ,
)$$, -
{%% 
return&& 
false&& 
;&& 
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 
PrivateReturnsTrue-- 
(-- 
)--  
)--  !
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{00 
try11 
{22 
using44 
(44 
StreamReader44 '
sr44( *
=44+ ,
new44- 0
StreamReader441 =
(44= >
$str44> H
)44H I
)44I J
{55 
string99 
stringNumber99 +
=99, -
sr99. 0
.990 1
ReadLine991 9
(999 :
)99: ;
;99; <
if:: 
(:: 
stringNumber:: (
!=::) +
null::, 0
)::0 1
{;; 
try<< 
{== 
data>>  $
=>>% &
int>>' *
.>>* +
Parse>>+ 0
(>>0 1
stringNumber>>1 =
.>>= >
Trim>>> B
(>>B C
)>>C D
)>>D E
;>>E F
}?? 
catch@@ !
(@@" #
FormatException@@# 2
exceptNumberFormat@@3 E
)@@E F
{AA 
IOBB  "
.BB" #
LoggerBB# )
.BB) *
LogBB* -
(BB- .
NLogBB. 2
.BB2 3
LogLevelBB3 ;
.BB; <
WarnBB< @
,BB@ A
exceptNumberFormatBBB T
,BBT U
$str	BBV à
)
BBà â
;
BBâ ä
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
private[[ 
void[[ 
GoodG2B1[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
if^^ 

(^^ 
PrivateReturnsFalse^^ 
(^^  
)^^  !
)^^! "
{__ 	
databb 
=bb 
$numbb 
;bb 
}cc 	
elsedd 
{ee 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
shortkk 
)kk  
datakk  $
)kk$ %
;kk% &
}ll 	
}mm 
privatepp 
voidpp 
GoodG2B2pp 
(pp 
)pp 
{qq 
intrr 
datarr 
;rr 
ifss 

(ss 
PrivateReturnsTruess 
(ss 
)ss  
)ss  !
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
elsexx 
{yy 	
data|| 
=|| 
$num|| 
;|| 
}}} 	
{~~ 	
IO
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ 
(
ÄÄ 
(
ÄÄ 
short
ÄÄ 
)
ÄÄ  
data
ÄÄ  $
)
ÄÄ$ %
;
ÄÄ% &
}
ÅÅ 	
}
ÇÇ 
public
ÑÑ 

override
ÑÑ 
void
ÑÑ 
Good
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 
GoodG2B1
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
GoodG2B2
áá 
(
áá 
)
áá 
;
áá 
}
àà 
}ää 
}ãã ‚#
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_09 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP !
STATIC_READONLY_FALSEPP $
)PP$ %
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_TRUEee #
)ee# $
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ƒ#
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_10 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
staticFalsePP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee 

staticTrueee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ≥$
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_11 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 
StaticReturnsFalsePP !
(PP! "
)PP" #
)PP# $
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee 
StaticReturnsTrueee  
(ee  !
)ee! "
)ee" #
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ∞
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_12 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
shortFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP $
StaticReturnsTrueOrFalsePP '
(PP' (
)PP( )
)PP) *
{QQ 	
dataSS 
=SS 
$numSS 
;SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff «$
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_13 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP  
STATIC_READONLY_FIVEPP #
!=PP$ &
$numPP' (
)PP( )
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee  
STATIC_READONLY_FIVEee #
==ee$ &
$numee' (
)ee( )
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ©$
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_14 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2B1MM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
ifPP 

(PP 
IOPP 
.PP 

staticFivePP 
!=PP 
$numPP 
)PP 
{QQ 	
dataTT 
=TT 
$numTT 
;TT 
}UU 	
elseVV 
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2B2bb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
ifee 

(ee 
IOee 
.ee 

staticFiveee 
==ee 
$numee 
)ee 
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2B1xx 
(xx 
)xx 
;xx 
GoodG2B2yy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} Ü&
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_15 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{   	
case!! 
$num!! 
:!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{## 
try$$ 
{%% 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
$str''> H
)''H I
)''I J
{(( 
string,, 
stringNumber,, +
=,,, -
sr,,. 0
.,,0 1
ReadLine,,1 9
(,,9 :
),,: ;
;,,; <
if-- 
(-- 
stringNumber-- (
!=--) +
null--, 0
)--0 1
{.. 
try// 
{00 
data11  $
=11% &
int11' *
.11* +
Parse11+ 0
(110 1
stringNumber111 =
.11= >
Trim11> B
(11B C
)11C D
)11D E
;11E F
}22 
catch33 !
(33" #
FormatException33# 2
exceptNumberFormat333 E
)33E F
{44 
IO55  "
.55" #
Logger55# )
.55) *
Log55* -
(55- .
NLog55. 2
.552 3
LogLevel553 ;
.55; <
Warn55< @
,55@ A
exceptNumberFormat55B T
,55T U
$str	55V à
)
55à â
;
55â ä
}66 
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
break?? 
;?? 
default@@ 
:@@ 
dataCC 
=CC 
$numCC 
;CC 
breakDD 
;DD 
}EE 	
{FF 	
IOHH 
.HH 
	WriteLineHH 
(HH 
(HH 
shortHH 
)HH  
dataHH  $
)HH$ %
;HH% &
}II 	
}JJ 
privateNN 
voidNN 
GoodG2B1NN 
(NN 
)NN 
{OO 
intPP 
dataPP 
=PP 
$numPP 
;PP 
switchQQ 
(QQ 
$numQQ 
)QQ 
{RR 	
caseSS 
$numSS 
:SS 
dataVV 
=VV 
$numVV 
;VV 
breakWW 
;WW 
defaultXX 
:XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ 
break[[ 
;[[ 
}\\ 	
{]] 	
IO__ 
.__ 
	WriteLine__ 
(__ 
(__ 
short__ 
)__  
data__  $
)__$ %
;__% &
}`` 	
}aa 
privatedd 
voiddd 
GoodG2B2dd 
(dd 
)dd 
{ee 
intff 
dataff 
=ff 
$numff 
;ff 
switchgg 
(gg 
$numgg 
)gg 
{hh 	
caseii 
$numii 
:ii 
datakk 
=kk 
$numkk 
;kk 
breakll 
;ll 
defaultmm 
:mm 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
}rr 	
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
shortuu 
)uu  
datauu  $
)uu$ %
;uu% &
}vv 	
}ww 
publicyy 

overrideyy 
voidyy 
Goodyy 
(yy 
)yy 
{zz 
GoodG2B1{{ 
({{ 
){{ 
;{{ 
GoodG2B2|| 
(|| 
)|| 
;|| 
}}} 
} 
}ÄÄ Ù
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_16 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
shortBB 
)BB  
dataBB  $
)BB$ %
;BB% &
}CC 	
}DD 
privateHH 
voidHH 
GoodG2BHH 
(HH 
)HH 
{II 
intJJ 
dataJJ 
;JJ 
whileKK 
(KK 
trueKK 
)KK 
{LL 	
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
shortSS 
)SS  
dataSS  $
)SS$ %
;SS% &
}TT 	
}UU 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
}\\ 
}]] ‰
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_17 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
for<< 
(<< 
int<< 
i<< 
=<< 
$num<< 
;<< 
i<< 
<<< 
$num<< 
;<< 
i<<  
++<<  "
)<<" #
{== 	
{>> 
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ #
)@@# $
data@@$ (
)@@( )
;@@) *
}AA 
}BB 	
}CC 
privateHH 
voidHH 
GoodG2BHH 
(HH 
)HH 
{II 
intJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$numLL 
;LL 
forMM 
(MM 
intMM 
iMM 
=MM 
$numMM 
;MM 
iMM 
<MM 
$numMM 
;MM 
iMM  
++MM  "
)MM" #
{NN 	
{OO 
IOQQ 
.QQ 
	WriteLineQQ 
(QQ 
(QQ 
shortQQ #
)QQ# $
dataQQ$ (
)QQ( )
;QQ) *
}RR 
}SS 	
}TT 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
}[[ 
}\\ ÷0
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_21 ;
:< =
AbstractTestCase> N
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 

badPrivate"" 
="" 
true"" 
;"" 
data## 
=## 

Bad_source## 
(## 
)## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
short&& 
)&&  
data&&  $
)&&$ %
;&&% &
}'' 	
}(( 
private** 
int** 

Bad_source** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
if-- 

(-- 

badPrivate-- 
)-- 
{.. 	
data// 
=// 
int// 
.// 
MinValue// 
;//  
{00 
try11 
{22 
using44 
(44 
StreamReader44 '
sr44( *
=44+ ,
new44- 0
StreamReader441 =
(44= >
$str44> H
)44H I
)44I J
{55 
string99 
stringNumber99 +
=99, -
sr99. 0
.990 1
ReadLine991 9
(999 :
)99: ;
;99; <
if:: 
(:: 
stringNumber:: (
!=::) +
null::, 0
)::0 1
{;; 
try<< 
{== 
data>>  $
=>>% &
int>>' *
.>>* +
Parse>>+ 0
(>>0 1
stringNumber>>1 =
.>>= >
Trim>>> B
(>>B C
)>>C D
)>>D E
;>>E F
}?? 
catch@@ !
(@@" #
FormatException@@# 2
exceptNumberFormat@@3 E
)@@E F
{AA 
IOBB  "
.BB" #
LoggerBB# )
.BB) *
LogBB* -
(BB- .
NLogBB. 2
.BB2 3
LogLevelBB3 ;
.BB; <
WarnBB< @
,BB@ A
exceptNumberFormatBBB T
,BBT U
$str	BBV à
)
BBà â
;
BBâ ä
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
}KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
returnSS 
dataSS 
;SS 
}TT 
privateWW 
boolWW 
goodG2B1_privateWW !
=WW" #
falseWW$ )
;WW) *
privateXX 
boolXX 
GoodG2B2_privateXX !
=XX" #
falseXX$ )
;XX) *
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B1\\ 
(\\ 
)\\ 
;\\ 
GoodG2B2]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B1aa 
(aa 
)aa 
{bb 
intcc 
datacc 
;cc 
goodG2B1_privatedd 
=dd 
falsedd  
;dd  !
dataee 
=ee 
GoodG2B1_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatell 
intll 
GoodG2B1_sourcell 
(ll  
)ll  !
{mm 
intnn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
goodG2B1_privateoo 
)oo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
int
ÄÄ 
data
ÄÄ 
;
ÄÄ 
GoodG2B2_private
ÅÅ 
=
ÅÅ 
true
ÅÅ 
;
ÅÅ  
data
ÇÇ 
=
ÇÇ 
GoodG2B2_source
ÇÇ 
(
ÇÇ 
)
ÇÇ  
;
ÇÇ  !
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
short
ÖÖ 
)
ÖÖ  
data
ÖÖ  $
)
ÖÖ$ %
;
ÖÖ% &
}
ÜÜ 	
}
áá 
private
ââ 
int
ââ 
GoodG2B2_source
ââ 
(
ââ  
)
ââ  !
{
ää 
int
ãã 
data
ãã 
=
ãã 
$num
ãã 
;
ãã 
if
åå 

(
åå 
GoodG2B2_private
åå 
)
åå 
{
çç 	
data
èè 
=
èè 
$num
èè 
;
èè 
}
êê 	
else
ëë 
{
íí 	
data
ïï 
=
ïï 
$num
ïï 
;
ïï 
}
ññ 	
return
óó 
data
óó 
;
óó 
}
òò 
}öö 
}õõ ç
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22a <
:= >
AbstractTestCase? O
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22b!! E
.!!E F
	BadSource!!F O
(!!O P
)!!P Q
;!!Q R
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22b88 E
.88E F
GoodG2B1Source88F T
(88T U
)88U V
;88V W
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22bDD E
.DDE F
GoodG2B2SourceDDF T
(DDT U
)DDU V
;DDV W
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL √
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22b <
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22a B
.B C
badPublicStaticC R
)R S
{   	
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!!  
{"" 
try## 
{$$ 
using&& 
(&& 
StreamReader&& '
sr&&( *
=&&+ ,
new&&- 0
StreamReader&&1 =
(&&= >
$str&&> H
)&&H I
)&&I J
{'' 
string++ 
stringNumber++ +
=++, -
sr++. 0
.++0 1
ReadLine++1 9
(++9 :
)++: ;
;++; <
if,, 
(,, 
stringNumber,, (
!=,,) +
null,,, 0
),,0 1
{-- 
try.. 
{// 
data00  $
=00% &
int00' *
.00* +
Parse00+ 0
(000 1
stringNumber001 =
.00= >
Trim00> B
(00B C
)00C D
)00D E
;00E F
}11 
catch22 !
(22" #
FormatException22# 2
exceptNumberFormat223 E
)22E F
{33 
IO44  "
.44" #
Logger44# )
.44) *
Log44* -
(44- .
NLog44. 2
.442 3
LogLevel443 ;
.44; <
Warn44< @
,44@ A
exceptNumberFormat44B T
,44T U
$str	44V à
)
44à â
;
44â ä
}55 
}66 
}77 
}88 
catch99 
(99 
IOException99 "
exceptIO99# +
)99+ ,
{:: 
IO;; 
.;; 
Logger;; 
.;; 
Log;; !
(;;! "
NLog;;" &
.;;& '
LogLevel;;' /
.;;/ 0
Warn;;0 4
,;;4 5
exceptIO;;6 >
,;;> ?
$str;;@ [
);;[ \
;;;\ ]
}<< 
}== 
}>> 	
else?? 
{@@ 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
returnEE 
dataEE 
;EE 
}FF 
publicKK 

staticKK 
intKK 
GoodG2B1SourceKK $
(KK$ %
)KK% &
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22aNN B
.NNB C 
goodG2B1PublicStaticNNC W
)NNW X
{OO 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
returnYY 
dataYY 
;YY 
}ZZ 
public]] 

static]] 
int]] 
GoodG2B2Source]] $
(]]$ %
)]]% &
{^^ 
int__ 
data__ 
;__ 
if`` 

(`` B
6CWE197_Numeric_Truncation_Error__int_File_to_short_22a`` B
.``B C 
GoodG2B2PublicStatic``C W
)``W X
{aa 	
datacc 
=cc 
$numcc 
;cc 
}dd 	
elseee 
{ff 	
dataii 
=ii 
$numii 
;ii 
}jj 	
returnkk 
datakk 
;kk 
}ll 
}nn 
}oo å
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_31 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{   	
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{## 
try$$ 
{%% 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
$str''> H
)''H I
)''I J
{(( 
string,, 
stringNumber,, +
=,,, -
sr,,. 0
.,,0 1
ReadLine,,1 9
(,,9 :
),,: ;
;,,; <
if-- 
(-- 
stringNumber-- (
!=--) +
null--, 0
)--0 1
{.. 
try// 
{00 
data11  $
=11% &
int11' *
.11* +
Parse11+ 0
(110 1
stringNumber111 =
.11= >
Trim11> B
(11B C
)11C D
)11D E
;11E F
}22 
catch33 !
(33" #
FormatException33# 2
exceptNumberFormat333 E
)33E F
{44 
IO55  "
.55" #
Logger55# )
.55) *
Log55* -
(55- .
NLog55. 2
.552 3
LogLevel553 ;
.55; <
Warn55< @
,55@ A
exceptNumberFormat55B T
,55T U
$str	55V à
)
55à â
;
55â ä
}66 
}77 
}88 
}99 
catch:: 
(:: 
IOException:: "
exceptIO::# +
)::+ ,
{;; 
IO<< 
.<< 
Logger<< 
.<< 
Log<< !
(<<! "
NLog<<" &
.<<& '
LogLevel<<' /
.<</ 0
Warn<<0 4
,<<4 5
exceptIO<<6 >
,<<> ?
$str<<@ [
)<<[ \
;<<\ ]
}== 
}>> 
dataCopy?? 
=?? 
data?? 
;?? 
}@@ 	
{AA 	
intBB 
dataBB 
=BB 
dataCopyBB 
;BB  
{CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
shortEE #
)EE# $
dataEE$ (
)EE( )
;EE) *
}FF 
}GG 	
}HH 
publicKK 

overrideKK 
voidKK 
GoodKK 
(KK 
)KK 
{LL 
GoodG2BMM 
(MM 
)MM 
;MM 
}NN 
privateQQ 
voidQQ 
GoodG2BQQ 
(QQ 
)QQ 
{RR 
intSS 
dataCopySS 
;SS 
{TT 	
intUU 
dataUU 
;UU 
dataWW 
=WW 
$numWW 
;WW 
dataCopyXX 
=XX 
dataXX 
;XX 
}YY 	
{ZZ 	
int[[ 
data[[ 
=[[ 
dataCopy[[ 
;[[  
{\\ 
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
short^^ #
)^^# $
data^^$ (
)^^( )
;^^) *
}__ 
}`` 	
}aa 
}cc 
}dd ê
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_41 ;
:< =
AbstractTestCase> N
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&& 
{'' 	
try(( 
{)) 
using++ 
(++ 
StreamReader++ #
sr++$ &
=++' (
new++) ,
StreamReader++- 9
(++9 :
$str++: D
)++D E
)++E F
{,, 
string00 
stringNumber00 '
=00( )
sr00* ,
.00, -
ReadLine00- 5
(005 6
)006 7
;007 8
if11 
(11 
stringNumber11 $
!=11% '
null11( ,
)11, -
{22 
try33 
{44 
data55  
=55! "
int55# &
.55& '
Parse55' ,
(55, -
stringNumber55- 9
.559 :
Trim55: >
(55> ?
)55? @
)55@ A
;55A B
}66 
catch77 
(77 
FormatException77 .
exceptNumberFormat77/ A
)77A B
{88 
IO99 
.99 
Logger99 %
.99% &
Log99& )
(99) *
NLog99* .
.99. /
LogLevel99/ 7
.997 8
Warn998 <
,99< =
exceptNumberFormat99> P
,99P Q
$str	99R Ñ
)
99Ñ Ö
;
99Ö Ü
}:: 
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
}BB 	
BadSinkCC 
(CC 
dataCC 
)CC 
;CC 
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateLL 
staticLL 
voidLL 
GoodG2BSinkLL #
(LL# $
intLL$ '
dataLL( ,
)LL- .
{MM 
{NN 	
IOPP 
.PP 
	WriteLinePP 
(PP 
(PP 
shortPP 
)PP  
dataPP  $
)PP$ %
;PP% &
}QQ 	
}RR 
privateUU 
staticUU 
voidUU 
GoodG2BUU 
(UU  
)UU  !
{VV 
intWW 
dataWW 
;WW 
dataYY 
=YY 
$numYY 
;YY 
GoodG2BSinkZZ 
(ZZ 
dataZZ 
)ZZ 
;ZZ 
}[[ 
}]] 
}^^ ˙
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_42 ;
:< =
AbstractTestCase> N
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
try   
{!! 
using## 
(## 
StreamReader## #
sr##$ &
=##' (
new##) ,
StreamReader##- 9
(##9 :
$str##: D
)##D E
)##E F
{$$ 
string(( 
stringNumber(( '
=((( )
sr((* ,
.((, -
ReadLine((- 5
(((5 6
)((6 7
;((7 8
if)) 
()) 
stringNumber)) $
!=))% '
null))( ,
))), -
{** 
try++ 
{,, 
data--  
=--! "
int--# &
.--& '
Parse--' ,
(--, -
stringNumber--- 9
.--9 :
Trim--: >
(--> ?
)--? @
)--@ A
;--A B
}.. 
catch// 
(// 
FormatException// .
exceptNumberFormat/// A
)//A B
{00 
IO11 
.11 
Logger11 %
.11% &
Log11& )
(11) *
NLog11* .
.11. /
LogLevel11/ 7
.117 8
Warn118 <
,11< =
exceptNumberFormat11> P
,11P Q
$str	11R Ñ
)
11Ñ Ö
;
11Ö Ü
}22 
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	
return;; 
data;; 
;;; 
}<< 
public?? 

override?? 
void?? 
Bad?? 
(?? 
)?? 
{@@ 
intAA 
dataAA 
=AA 
	BadSourceAA 
(AA 
)AA 
;AA 
{BB 	
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD 
)DD  
dataDD  $
)DD$ %
;DD% &
}EE 	
}FF 
privateII 
staticII 
intII 
GoodG2BSourceII $
(II$ %
)II% &
{JJ 
intKK 
dataKK 
;KK 
dataMM 
=MM 
$numMM 
;MM 
returnNN 
dataNN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
)RR  !
{SS 
intTT 
dataTT 
=TT 
GoodG2BSourceTT  
(TT  !
)TT! "
;TT" #
{UU 	
IOWW 
.WW 
	WriteLineWW 
(WW 
(WW 
shortWW 
)WW  
dataWW  $
)WW$ %
;WW% &
}XX 	
}YY 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
}`` 
}aa ¿ 
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_File_to_short_45 ;
:< =
AbstractTestCase> N
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{   
int!! 
data!! 
=!! 
dataBad!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public)) 

override)) 
void)) 
Bad)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data,, 
=,, 
int,, 
.,, 
MinValue,, 
;,, 
{-- 	
try.. 
{// 
using11 
(11 
StreamReader11 #
sr11$ &
=11' (
new11) ,
StreamReader11- 9
(119 :
$str11: D
)11D E
)11E F
{22 
string66 
stringNumber66 '
=66( )
sr66* ,
.66, -
ReadLine66- 5
(665 6
)666 7
;667 8
if77 
(77 
stringNumber77 $
!=77% '
null77( ,
)77, -
{88 
try99 
{:: 
data;;  
=;;! "
int;;# &
.;;& '
Parse;;' ,
(;;, -
stringNumber;;- 9
.;;9 :
Trim;;: >
(;;> ?
);;? @
);;@ A
;;;A B
}<< 
catch== 
(== 
FormatException== .
exceptNumberFormat==/ A
)==A B
{>> 
IO?? 
.?? 
Logger?? %
.??% &
Log??& )
(??) *
NLog??* .
.??. /
LogLevel??/ 7
.??7 8
Warn??8 <
,??< =
exceptNumberFormat??> P
,??P Q
$str	??R Ñ
)
??Ñ Ö
;
??Ö Ü
}@@ 
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD 
exceptIODD '
)DD' (
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF "
.FF" #
LogLevelFF# +
.FF+ ,
WarnFF, 0
,FF0 1
exceptIOFF2 :
,FF: ;
$strFF< W
)FFW X
;FFX Y
}GG 
}HH 	
dataBadII 
=II 
dataII 
;II 
BadSinkJJ 
(JJ 
)JJ 
;JJ 
}KK 
publicNN 

overrideNN 
voidNN 
GoodNN 
(NN 
)NN 
{OO 
GoodG2BPP 
(PP 
)PP 
;PP 
}QQ 
privateSS 
voidSS 
GoodG2BSinkSS 
(SS 
)SS 
{TT 
intUU 
dataUU 
=UU 
dataGoodG2BUU 
;UU 
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa 
dataGoodG2Bbb 
=bb 
databb 
;bb 
GoodG2BSinkcc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg ∫
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_51a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{ 	
try   
{!! 
using## 
(## 
StreamReader## #
sr##$ &
=##' (
new##) ,
StreamReader##- 9
(##9 :
$str##: D
)##D E
)##E F
{$$ 
string(( 
stringNumber(( '
=((( )
sr((* ,
.((, -
ReadLine((- 5
(((5 6
)((6 7
;((7 8
if)) 
()) 
stringNumber)) $
!=))% '
null))( ,
))), -
{** 
try++ 
{,, 
data--  
=--! "
int--# &
.--& '
Parse--' ,
(--, -
stringNumber--- 9
.--9 :
Trim--: >
(--> ?
)--? @
)--@ A
;--A B
}.. 
catch// 
(// 
FormatException// .
exceptNumberFormat/// A
)//A B
{00 
IO11 
.11 
Logger11 %
.11% &
Log11& )
(11) *
NLog11* .
.11. /
LogLevel11/ 7
.117 8
Warn118 <
,11< =
exceptNumberFormat11> P
,11P Q
$str	11R Ñ
)
11Ñ Ö
;
11Ö Ü
}22 
}33 
}44 
}55 
catch66 
(66 
IOException66 
exceptIO66 '
)66' (
{77 
IO88 
.88 
Logger88 
.88 
Log88 
(88 
NLog88 "
.88" #
LogLevel88# +
.88+ ,
Warn88, 0
,880 1
exceptIO882 :
,88: ;
$str88< W
)88W X
;88X Y
}99 
}:: 	B
6CWE197_Numeric_Truncation_Error__int_File_to_short_51b;; >
.;;> ?
BadSink;;? F
(;;F G
data;;G K
);;M N
;;;N O
}<< 
public?? 

override?? 
void?? 
Good?? 
(?? 
)?? 
{@@ 
GoodG2BAA 
(AA 
)AA 
;AA 
}BB 
privateEE 
voidEE 
GoodG2BEE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
dataII 
=II 
$numII 
;II B
6CWE197_Numeric_Truncation_Error__int_File_to_short_51bJJ >
.JJ> ?
GoodG2BSinkJJ? J
(JJJ K
dataJJK O
)JJQ R
;JJR S
}KK 
}MM 
}NN ï	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_51b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, ∫
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_52a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	B
6CWE197_Numeric_Truncation_Error__int_File_to_short_52b<< >
.<<> ?
BadSink<<? F
(<<F G
data<<G K
)<<L M
;<<M N
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
voidFF 
GoodG2BFF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_52bKK >
.KK> ?
GoodG2BSinkKK? J
(KKJ K
dataKKK O
)KKP Q
;KKQ R
}LL 
}NN 
}OO ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_52b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_52c >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_File_to_short_52c## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ï	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_52c <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ∫
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53b<< >
.<<> ?
BadSink<<? F
(<<F G
data<<G K
)<<L M
;<<M N
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
voidFF 
GoodG2BFF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53bKK >
.KK> ?
GoodG2BSinkKK? J
(KKJ K
dataKKK O
)KKP Q
;KKQ R
}LL 
}NN 
}OO ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53c >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53c## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53c <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53d >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53d## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ï	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_53d <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ∫
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54b<< >
.<<> ?
BadSink<<? F
(<<F G
data<<G K
)<<L M
;<<M N
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
voidFF 
GoodG2BFF 
(FF 
)FF 
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54bKK >
.KK> ?
GoodG2BSinkKK? J
(KKJ K
dataKKK O
)KKP Q
;KKQ R
}LL 
}NN 
}OO ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54c >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54c## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54c <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54d >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54d## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54d <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54e >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54e## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ï	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_54e <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Ÿ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_61a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= B
6CWE197_Numeric_Truncation_Error__int_File_to_short_61b I
.I J
	BadSourceJ S
(S T
)T U
;U V
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_61b++ I
.++I J
GoodG2BSource++J W
(++W X
)++X Y
;++Y Z
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 Ù
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_61b <
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
return<< 
data<< 
;<< 
}== 
publicBB 

staticBB 
intBB 
GoodG2BSourceBB #
(BB# $
)BB$ %
{CC 
intDD 
dataDD 
;DD 
dataFF 
=FF 
$numFF 
;FF 
returnGG 
dataGG 
;GG 
}HH 
}JJ 
}KK ≤
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_66a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
int<< 
[<< 
]<< 
	dataArray<< 
=<< 
new<< 
int<< !
[<<! "
$num<<" #
]<<# $
;<<$ %
	dataArray== 
[== 
$num== 
]== 
=== 
data== 
;== B
6CWE197_Numeric_Truncation_Error__int_File_to_short_66b>> >
.>>> ?
BadSink>>? F
(>>F G
	dataArray>>G P
)>>R S
;>>S T
}?? 
publicBB 

overrideBB 
voidBB 
GoodBB 
(BB 
)BB 
{CC 
GoodG2BDD 
(DD 
)DD 
;DD 
}EE 
privateHH 
staticHH 
voidHH 
GoodG2BHH 
(HH  
)HH  !
{II 
intJJ 
dataJJ 
;JJ 
dataLL 
=LL 
$numLL 
;LL 
intMM 
[MM 
]MM 
	dataArrayMM 
=MM 
newMM 
intMM !
[MM! "
$numMM" #
]MM# $
;MM$ %
	dataArrayNN 
[NN 
$numNN 
]NN 
=NN 
dataNN 
;NN B
6CWE197_Numeric_Truncation_Error__int_File_to_short_66bOO >
.OO> ?
GoodG2BSinkOO? J
(OOJ K
	dataArrayOOK T
)OOV W
;OOW X
}PP 
}RR 
}SS Î
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_66b <
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// û
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_67a <
:= >
AbstractTestCase? O
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$ 
{%% 	
try&& 
{'' 
using)) 
()) 
StreamReader)) #
sr))$ &
=))' (
new))) ,
StreamReader))- 9
())9 :
$str)): D
)))D E
)))E F
{** 
string.. 
stringNumber.. '
=..( )
sr..* ,
..., -
ReadLine..- 5
(..5 6
)..6 7
;..7 8
if// 
(// 
stringNumber// $
!=//% '
null//( ,
)//, -
{00 
try11 
{22 
data33  
=33! "
int33# &
.33& '
Parse33' ,
(33, -
stringNumber33- 9
.339 :
Trim33: >
(33> ?
)33? @
)33@ A
;33A B
}44 
catch55 
(55 
FormatException55 .
exceptNumberFormat55/ A
)55A B
{66 
IO77 
.77 
Logger77 %
.77% &
Log77& )
(77) *
NLog77* .
.77. /
LogLevel77/ 7
.777 8
Warn778 <
,77< =
exceptNumberFormat77> P
,77P Q
$str	77R Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
	ContainerAA 
dataContainerAA 
=AA  !
newAA" %
	ContainerAA& /
(AA/ 0
)AA0 1
;AA1 2
dataContainerBB 
.BB 
containerOneBB "
=BB# $
dataBB% )
;BB) *B
6CWE197_Numeric_Truncation_Error__int_File_to_short_67bCC >
.CC> ?
BadSinkCC? F
(CCF G
dataContainerCCG T
)CCV W
;CCW X
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateMM 
staticMM 
voidMM 
GoodG2BMM 
(MM  
)MM  !
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
	ContainerRR 
dataContainerRR 
=RR  !
newRR" %
	ContainerRR& /
(RR/ 0
)RR0 1
;RR1 2
dataContainerSS 
.SS 
containerOneSS "
=SS# $
dataSS% )
;SS) *B
6CWE197_Numeric_Truncation_Error__int_File_to_short_67bTT >
.TT> ?
GoodG2BSinkTT? J
(TTJ K
dataContainerTTK X
)TTZ [
;TT[ \
}UU 
}WW 
}XX „
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_67b <
{ 
public 

static 
void 
BadSink 
( B
6CWE197_Numeric_Truncation_Error__int_File_to_short_67a U
.U V
	ContainerV _
dataContainer` m
)n o
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #B
6CWE197_Numeric_Truncation_Error__int_File_to_short_67a%%# Y
.%%Y Z
	Container%%Z c
dataContainer%%d q
)%%r s
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// †
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_68a <
:= >
AbstractTestCase? O
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	B
6CWE197_Numeric_Truncation_Error__int_File_to_short_68b<< >
.<<> ?
BadSink<<? F
(<<F G
)<<G H
;<<H I
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
)FF  !
{GG 
dataII 
=II 
$numII 
;II B
6CWE197_Numeric_Truncation_Error__int_File_to_short_68bJJ >
.JJ> ?
GoodG2BSinkJJ? J
(JJJ K
)JJK L
;JJL M
}KK 
}MM 
}NN õ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_68b <
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= B
6CWE197_Numeric_Truncation_Error__int_File_to_short_68a I
.I J
dataJ N
;N O
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& B
6CWE197_Numeric_Truncation_Error__int_File_to_short_68a&& I
.&&I J
data&&J N
;&&N O
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ≤
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_71a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	B
6CWE197_Numeric_Truncation_Error__int_File_to_short_71b<< >
.<<> ?
BadSink<<? F
(<<F G
(<<G H
Object<<H N
)<<N O
data<<O S
)<<U V
;<<V W
}== 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
)@@ 
{AA 
GoodG2BBB 
(BB 
)BB 
;BB 
}CC 
privateFF 
staticFF 
voidFF 
GoodG2BFF 
(FF  
)FF  !
{GG 
intHH 
dataHH 
;HH 
dataJJ 
=JJ 
$numJJ 
;JJ B
6CWE197_Numeric_Truncation_Error__int_File_to_short_71bKK >
.KK> ?
GoodG2BSinkKK? J
(KKJ K
(KKK L
ObjectKKL R
)KKR S
dataKKS W
)KKY Z
;KKZ [
}LL 
}NN 
}OO ∑
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_71b <
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 “#
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_72a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	
	Hashtable<< 
dataHashtable<< 
=<<  !
new<<" %
	Hashtable<<& /
(<</ 0
$num<<0 1
)<<1 2
;<<2 3
dataHashtable== 
.== 
Add== 
(== 
$num== 
,== 
data== !
)==! "
;==" #
dataHashtable>> 
.>> 
Add>> 
(>> 
$num>> 
,>> 
data>> !
)>>! "
;>>" #
dataHashtable?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? !
)??! "
;??" #B
6CWE197_Numeric_Truncation_Error__int_File_to_short_72b@@ >
.@@> ?
BadSink@@? F
(@@F G
dataHashtable@@G T
)@@V W
;@@W X
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodG2BJJ 
(JJ  
)JJ  !
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN 
	HashtableOO 
dataHashtableOO 
=OO  !
newOO" %
	HashtableOO& /
(OO/ 0
$numOO0 1
)OO1 2
;OO2 3
dataHashtablePP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP !
)PP! "
;PP" #
dataHashtableQQ 
.QQ 
AddQQ 
(QQ 
$numQQ 
,QQ 
dataQQ !
)QQ! "
;QQ" #
dataHashtableRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR !
)RR! "
;RR" #B
6CWE197_Numeric_Truncation_Error__int_File_to_short_72bSS >
.SS> ?
GoodG2BSinkSS? J
(SSJ K
dataHashtableSSK X
)SSZ [
;SS[ \
}TT 
}VV 
}WW ©
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_72b <
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00  #
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_73a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{!! 	
try"" 
{## 
using%% 
(%% 
StreamReader%% #
sr%%$ &
=%%' (
new%%) ,
StreamReader%%- 9
(%%9 :
$str%%: D
)%%D E
)%%E F
{&& 
string** 
stringNumber** '
=**( )
sr*** ,
.**, -
ReadLine**- 5
(**5 6
)**6 7
;**7 8
if++ 
(++ 
stringNumber++ $
!=++% '
null++( ,
)++, -
{,, 
try-- 
{.. 
data//  
=//! "
int//# &
.//& '
Parse//' ,
(//, -
stringNumber//- 9
.//9 :
Trim//: >
(//> ?
)//? @
)//@ A
;//A B
}00 
catch11 
(11 
FormatException11 .
exceptNumberFormat11/ A
)11A B
{22 
IO33 
.33 
Logger33 %
.33% &
Log33& )
(33) *
NLog33* .
.33. /
LogLevel33/ 7
.337 8
Warn338 <
,33< =
exceptNumberFormat33> P
,33P Q
$str	33R Ñ
)
33Ñ Ö
;
33Ö Ü
}44 
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	

LinkedList== 
<== 
int== 
>== 
dataLinkedList== &
===' (
new==) ,

LinkedList==- 7
<==7 8
int==8 ;
>==; <
(==< =
)=== >
;==> ?
dataLinkedList>> 
.>> 
AddLast>> 
(>> 
data>> #
)>># $
;>>$ %
dataLinkedList?? 
.?? 
AddLast?? 
(?? 
data?? #
)??# $
;??$ %
dataLinkedList@@ 
.@@ 
AddLast@@ 
(@@ 
data@@ #
)@@# $
;@@$ %B
6CWE197_Numeric_Truncation_Error__int_File_to_short_73bAA >
.AA> ?
BadSinkAA? F
(AAF G
dataLinkedListAAG U
)AAW X
;AAX Y
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO 

LinkedListPP 
<PP 
intPP 
>PP 
dataLinkedListPP &
=PP' (
newPP) ,

LinkedListPP- 7
<PP7 8
intPP8 ;
>PP; <
(PP< =
)PP= >
;PP> ?
dataLinkedListQQ 
.QQ 
AddLastQQ 
(QQ 
dataQQ #
)QQ# $
;QQ$ %
dataLinkedListRR 
.RR 
AddLastRR 
(RR 
dataRR #
)RR# $
;RR$ %
dataLinkedListSS 
.SS 
AddLastSS 
(SS 
dataSS #
)SS# $
;SS$ %B
6CWE197_Numeric_Truncation_Error__int_File_to_short_73bTT >
.TT> ?
GoodG2BSinkTT? J
(TTJ K
dataLinkedListTTK Y
)TT[ \
;TT\ ]
}UU 
}WW 
}XX ’
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_73b <
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ¯%
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_74a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	

Dictionary<< 
<<< 
int<< 
,<< 
int<< 
><< 
dataDictionary<< *
=<<+ ,
new<<- 0

Dictionary<<1 ;
<<<; <
int<<< ?
,<<? @
int<<@ C
><<C D
(<<D E
)<<E F
;<<F G
dataDictionary== 
.== 
Add== 
(== 
$num== 
,== 
data== "
)==" #
;==# $
dataDictionary>> 
.>> 
Add>> 
(>> 
$num>> 
,>> 
data>> "
)>>" #
;>># $
dataDictionary?? 
.?? 
Add?? 
(?? 
$num?? 
,?? 
data?? "
)??" #
;??# $B
6CWE197_Numeric_Truncation_Error__int_File_to_short_74b@@ >
.@@> ?
BadSink@@? F
(@@F G
dataDictionary@@G U
)@@W X
;@@X Y
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
staticJJ 
voidJJ 
GoodG2BJJ 
(JJ  
)JJ  !
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN 

DictionaryOO 
<OO 
intOO 
,OO 
intOO 
>OO 
dataDictionaryOO *
=OO+ ,
newOO- 0

DictionaryOO1 ;
<OO; <
intOO< ?
,OO? @
intOO@ C
>OOC D
(OOD E
)OOE F
;OOF G
dataDictionaryPP 
.PP 
AddPP 
(PP 
$numPP 
,PP 
dataPP "
)PP" #
;PP# $
dataDictionaryQQ 
.QQ 
AddQQ 
(QQ 
$numQQ 
,QQ 
dataQQ "
)QQ" #
;QQ# $
dataDictionaryRR 
.RR 
AddRR 
(RR 
$numRR 
,RR 
dataRR "
)RR" #
;RR# $B
6CWE197_Numeric_Truncation_Error__int_File_to_short_74bSS >
.SS> ?
GoodG2BSinkSS? J
(SSJ K
dataDictionarySSK Y
)SS[ \
;SS\ ]
}TT 
}VV 
}WW Ô
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_74b <
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 †-
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_75a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{!! 	
try"" 
{## 
using%% 
(%% 
StreamReader%% #
sr%%$ &
=%%' (
new%%) ,
StreamReader%%- 9
(%%9 :
$str%%: D
)%%D E
)%%E F
{&& 
string** 
stringNumber** '
=**( )
sr*** ,
.**, -
ReadLine**- 5
(**5 6
)**6 7
;**7 8
if++ 
(++ 
stringNumber++ $
!=++% '
null++( ,
)++, -
{,, 
try-- 
{.. 
data//  
=//! "
int//# &
.//& '
Parse//' ,
(//, -
stringNumber//- 9
.//9 :
Trim//: >
(//> ?
)//? @
)//@ A
;//A B
}00 
catch11 
(11 
FormatException11 .
exceptNumberFormat11/ A
)11A B
{22 
IO33 
.33 
Logger33 %
.33% &
Log33& )
(33) *
NLog33* .
.33. /
LogLevel33/ 7
.337 8
Warn338 <
,33< =
exceptNumberFormat33> P
,33P Q
$str	33R Ñ
)
33Ñ Ö
;
33Ö Ü
}44 
}55 
}66 
}77 
catch88 
(88 
IOException88 
exceptIO88 '
)88' (
{99 
IO:: 
.:: 
Logger:: 
.:: 
Log:: 
(:: 
NLog:: "
.::" #
LogLevel::# +
.::+ ,
Warn::, 0
,::0 1
exceptIO::2 :
,::: ;
$str::< W
)::W X
;::X Y
};; 
}<< 	
byte>> 
[>> 
]>> 
dataSerialized>> 
=>> 
null>>  $
;>>$ %
try?? 
{@@ 	
BinaryFormatterAA 
bfAA 
=AA  
newAA! $
BinaryFormatterAA% 4
(AA4 5
)AA5 6
;AA6 7
usingBB 
(BB 
varBB 
msBB 
=BB 
newBB 
MemoryStreamBB  ,
(BB, -
)BB- .
)BB. /
{CC 
bfDD 
.DD 
	SerializeDD 
(DD 
msDD 
,DD  
dataDD! %
)DD% &
;DD& '
dataSerializedEE 
=EE  
msEE! #
.EE# $
ToArrayEE$ +
(EE+ ,
)EE, -
;EE- .
}FF B
6CWE197_Numeric_Truncation_Error__int_File_to_short_75bGG B
.GGB C
BadSinkGGC J
(GGJ K
dataSerializedGGK Y
)GG[ \
;GG\ ]
}HH 	
catchII 
(II "
SerializationExceptionII %
exceptSerializeII& 5
)II5 6
{JJ 	
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK 
.KK 
LogLevelKK '
.KK' (
WarnKK( ,
,KK, -
$strKK. X
,KKX Y
exceptSerializeKKZ i
)KKi j
;KKj k
}LL 	
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
staticVV 
voidVV 
GoodG2BVV 
(VV  
)VV  !
{WW 
intXX 
dataXX 
;XX 
dataZZ 
=ZZ 
$numZZ 
;ZZ 
byte\\ 
[\\ 
]\\ 
dataSerialized\\ 
=\\ 
null\\  $
;\\$ %
try]] 
{^^ 	
BinaryFormatter__ 
bf__ 
=__  
new__! $
BinaryFormatter__% 4
(__4 5
)__5 6
;__6 7
using`` 
(`` 
var`` 
ms`` 
=`` 
new`` 
MemoryStream``  ,
(``, -
)``- .
)``. /
{aa 
bfbb 
.bb 
	Serializebb 
(bb 
msbb 
,bb  
databb! %
)bb% &
;bb& '
dataSerializedcc 
=cc  
mscc! #
.cc# $
ToArraycc$ +
(cc+ ,
)cc, -
;cc- .
}dd B
6CWE197_Numeric_Truncation_Error__int_File_to_short_75bee B
.eeB C
GoodG2BSinkeeC N
(eeN O
dataSerializedeeO ]
)ee_ `
;ee` a
}ff 	
catchgg 
(gg "
SerializationExceptiongg %
exceptSerializegg& 5
)gg5 6
{hh 	
IOii 
.ii 
Loggerii 
.ii 
Logii 
(ii 
NLogii 
.ii 
LogLevelii '
.ii' (
Warnii( ,
,ii, -
$strii. X
,iiX Y
exceptSerializeiiZ i
)iii j
;iij k
}jj 	
}kk 
}mm 
}nn ’!
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_75b <
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ÷
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_File_to_short_81a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{   	
try!! 
{"" 
using$$ 
($$ 
StreamReader$$ #
sr$$$ &
=$$' (
new$$) ,
StreamReader$$- 9
($$9 :
$str$$: D
)$$D E
)$$E F
{%% 
string)) 
stringNumber)) '
=))( )
sr))* ,
.)), -
ReadLine))- 5
())5 6
)))6 7
;))7 8
if** 
(** 
stringNumber** $
!=**% '
null**( ,
)**, -
{++ 
try,, 
{-- 
data..  
=..! "
int..# &
...& '
Parse..' ,
(.., -
stringNumber..- 9
...9 :
Trim..: >
(..> ?
)..? @
)..@ A
;..A B
}// 
catch00 
(00 
FormatException00 .
exceptNumberFormat00/ A
)00A B
{11 
IO22 
.22 
Logger22 %
.22% &
Log22& )
(22) *
NLog22* .
.22. /
LogLevel22/ 7
.227 8
Warn228 <
,22< =
exceptNumberFormat22> P
,22P Q
$str	22R Ñ
)
22Ñ Ö
;
22Ö Ü
}33 
}44 
}55 
}66 
catch77 
(77 
IOException77 
exceptIO77 '
)77' (
{88 
IO99 
.99 
Logger99 
.99 
Log99 
(99 
NLog99 "
.99" #
LogLevel99# +
.99+ ,
Warn99, 0
,990 1
exceptIO992 :
,99: ;
$str99< W
)99W X
;99X Y
}:: 
};; 	F
:CWE197_Numeric_Truncation_Error__int_File_to_short_81_base<< B

baseObject<<C M
=<<N O
new<<P SF
9CWE197_Numeric_Truncation_Error__int_File_to_short_81_bad	<<T ç
(
<<ç é
)
<<é è
;
<<è ê

baseObject== 
.== 
Action== 
(== 
data== 
)==  
;==  !
}>> 
publicAA 

overrideAA 
voidAA 
GoodAA 
(AA 
)AA 
{BB 
GoodG2BCC 
(CC 
)CC 
;CC 
}DD 
privateGG 
voidGG 
GoodG2BGG 
(GG 
)GG 
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK F
:CWE197_Numeric_Truncation_Error__int_File_to_short_81_baseLL B

baseObjectLLC M
=LLN O
newLLP SJ
=CWE197_Numeric_Truncation_Error__int_File_to_short_81_goodG2B	LLT ë
(
LLë í
)
LLí ì
;
LLì î

baseObjectMM 
.MM 
ActionMM 
(MM 
dataMM 
)MM  
;MM  !
}NN 
}PP 
}QQ ˝
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_File_to_short_81_bad ?
:@ AF
:CWE197_Numeric_Truncation_Error__int_File_to_short_81_baseB |
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" Î
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 F
:CWE197_Numeric_Truncation_Error__int_File_to_short_81_base I
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} Ü
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_File_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_File_to_short_81_goodG2B C
:D EG
:CWE197_Numeric_Truncation_Error__int_File_to_short_81_base	F Ä
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ⁄
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_01 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
byte!! 
)!! 
data!! #
)!!# $
;!!$ %
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
int.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
byte33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
}77 
}88 ¿
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_02 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` •
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_03 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ä
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_04 ;
:< =
AbstractTestCase> N
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
short'' 
.'' 
MaxValue'' !
+''" #
$num''$ %
;''% &
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
byte11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
int99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg ∑
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_05 ;
:< =
AbstractTestCase> N
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
short'' 
.'' 
MaxValue'' !
+''" #
$num''$ %
;''% &
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
byte11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
int99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg ÿ
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_06 ;
:< =
AbstractTestCase> N
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
short&& 
.&& 
MaxValue&& !
+&&" #
$num&&$ %
;&&% &
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
byte00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
int88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
byteFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
byte[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ©
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_07 ;
:< =
AbstractTestCase> N
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
short&& 
.&& 
MaxValue&& !
+&&" #
$num&&$ %
;&&% &
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
byte00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
int88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
byteFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
byte[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ﬁ
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_08 ;
:< =
AbstractTestCase> N
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
short.. 
... 
MaxValue.. !
+.." #
$num..$ %
;..% &
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
byte88 
)88 
data88 #
)88# $
;88$ %
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
int@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn Õ
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_09 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ø
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_10 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` û
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_11 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ú
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_12 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
byte?? 
)?? 
data?? #
)??# $
;??$ %
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ≤
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_13 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` î
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_14 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ô
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_15 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
short!! 
.!! 
MaxValue!! !
+!!" #
$num!!$ %
;!!% &
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
int33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
byteBB 
)BB 
dataBB #
)BB# $
;BB$ %
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
intII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc ‡
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_16 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
byte%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
byte66 
)66 
data66 #
)66# $
;66$ %
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ –
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_17 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
byte## "
)##" #
data### '
)##' (
;##( )
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
byte44 "
)44" #
data44# '
)44' (
;44( )
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? …"
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_21 ;
:< =
AbstractTestCase> N
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
private(( 
int(( 

Bad_source(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
short.. 
... 
MaxValue.. !
+.." #
$num..$ %
;..% &
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
intFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
byteKK 
)KK 
dataKK #
)KK# $
;KK$ %
}LL 	
}MM 
privateOO 
intOO 
GoodG2B1_sourceOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
intcc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatell 
intll 
GoodG2B2_sourcell 
(ll  
)ll  !
{mm 
intnn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ ä
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22a <
:= >
AbstractTestCase? O
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22b!! E
.!!E F
	BadSource!!F O
(!!O P
)!!P Q
;!!Q R
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22b88 E
.88E F
GoodG2B1Source88F T
(88T U
)88U V
;88V W
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22bDD E
.DDE F
GoodG2B2SourceDDF T
(DDT U
)DDU V
;DDV W
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ±
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22b <
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22a B
.B C
badPublicStaticC R
)R S
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
int.. 
GoodG2B1Source.. $
(..$ %
)..% &
{// 
int00 
data00 
;00 
if11 

(11 B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22a11 B
.11B C 
goodG2B1PublicStatic11C W
)11W X
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
int@@ 
GoodG2B2Source@@ $
(@@$ %
)@@% &
{AA 
intBB 
dataBB 
;BB 
ifCC 

(CC B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22aCC B
.CCB C 
GoodG2B2PublicStaticCCC W
)CCW X
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ¯
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_31 ;
:< =
AbstractTestCase> N
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{ 	
int 
data 
; 
data!! 
=!! 
short!! 
.!! 
MaxValue!! !
+!!" #
$num!!$ %
;!!% &
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
int%% 
data%% 
=%% 
dataCopy%% 
;%%  
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( "
)((" #
data((# '
)((' (
;((( )
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
int66 
dataCopy66 
;66 
{77 	
int88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
int>> 
data>> 
=>> 
dataCopy>> 
;>>  
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
byteAA "
)AA" #
dataAA# '
)AA' (
;AA( )
}BB 
}CC 	
}DD 
}FF 
}GG ¸
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_41 ;
:< =
AbstractTestCase> N
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data%% 
=%% 
short%% 
.%% 
MaxValue%% 
+%% 
$num%%  !
;%%! "
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
int//$ '
data//( ,
)//- .
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
byte33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA Ê
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_42 ;
:< =
AbstractTestCase> N
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
=$$ 
	BadSource$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private,, 
static,, 
int,, 
GoodG2BSource,, $
(,,$ %
),,% &
{-- 
int.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
int77 
data77 
=77 
GoodG2BSource77  
(77  !
)77! "
;77" #
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
byte:: 
):: 
data:: #
)::# $
;::$ %
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD ¨
∏C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class A
5CWE197_Numeric_Truncation_Error__int_large_to_byte_45 ;
:< =
AbstractTestCase> N
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
int 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
byte"" 
)"" 
data"" #
)""# $
;""$ %
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
int)) 
data)) 
;)) 
data++ 
=++ 
short++ 
.++ 
MaxValue++ 
+++ 
$num++  !
;++! "
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
int88 
data88 
=88 
dataGoodG2B88 
;88 
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ®
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_51a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_51b >
.> ?
BadSink? F
(F G
dataG K
)M N
;N O
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_51b-- >
.--> ?
GoodG2BSink--? J
(--J K
data--K O
)--Q R
;--R S
}.. 
}00 
}11 ì	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_51b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, ®
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52b >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52b.. >
...> ?
GoodG2BSink..? J
(..J K
data..K O
)..P Q
;..Q R
}// 
}11 
}22 ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52c >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52c## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ì	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52c <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ®
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53b >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53b.. >
...> ?
GoodG2BSink..? J
(..J K
data..K O
)..P Q
;..Q R
}// 
}11 
}22 ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53c >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53c## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53c <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53d >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53d## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ì	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53d <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ®
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54b >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54b.. >
...> ?
GoodG2BSink..? J
(..J K
data..K O
)..P Q
;..Q R
}// 
}11 
}22 ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54b <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54c >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54c## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54c <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54d >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54d## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ﬂ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54d <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54e >
.> ?
BadSink? F
(F G
dataG K
)L M
;M N
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54e## >
.##> ?
GoodG2BSink##? J
(##J K
data##K O
)##P Q
;##Q R
}$$ 
}&& 
}'' ì	
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54e <
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ◊
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_61a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_61b I
.I J
	BadSourceJ S
(S T
)T U
;U V
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_61b++ I
.++I J
GoodG2BSource++J W
(++W X
)++X Y
;++Y Z
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ‚
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_61b <
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
return 
data 
; 
}   
public%% 

static%% 
int%% 
GoodG2BSource%% #
(%%# $
)%%$ %
{&& 
int'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. †
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_66a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
int 
[ 
] 
	dataArray 
= 
new 
int !
[! "
$num" #
]# $
;$ %
	dataArray   
[   
$num   
]   
=   
data   
;   B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_66b!! >
.!!> ?
BadSink!!? F
(!!F G
	dataArray!!G P
)!!R S
;!!S T
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
int-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
int00 
[00 
]00 
	dataArray00 
=00 
new00 
int00 !
[00! "
$num00" #
]00# $
;00$ %
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_66b22 >
.22> ?
GoodG2BSink22? J
(22J K
	dataArray22K T
)22V W
;22W X
}33 
}55 
}66 È
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_66b <
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// å
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_67a <
:= >
AbstractTestCase? O
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data## 
=## 
short## 
.## 
MaxValue## 
+## 
$num##  !
;##! "
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_67b&& >
.&&> ?
BadSink&&? F
(&&F G
dataContainer&&G T
)&&V W
;&&W X
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
int22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_67b77 >
.77> ?
GoodG2BSink77? J
(77J K
dataContainer77K X
)77Z [
;77[ \
}88 
}:: 
};; ·
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_67b <
{ 
public 

static 
void 
BadSink 
( B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_67a U
.U V
	ContainerV _
dataContainer` m
)n o
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_67a%%# Y
.%%Y Z
	Container%%Z c
dataContainer%%d q
)%%r s
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// é
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_68a <
:= >
AbstractTestCase? O
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_68b >
.> ?
BadSink? F
(F G
)G H
;H I
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_68b-- >
.--> ?
GoodG2BSink--? J
(--J K
)--K L
;--L M
}.. 
}00 
}11 ô
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_68b <
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_68a I
.I J
dataJ N
;N O
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_68a&& I
.&&I J
data&&J N
;&&N O
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. †
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_71a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_71b >
.> ?
BadSink? F
(F G
(G H
ObjectH N
)N O
dataO S
)U V
;V W
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_71b.. >
...> ?
GoodG2BSink..? J
(..J K
(..K L
Object..L R
)..R S
data..S W
)..Y Z
;..Z [
}// 
}11 
}22 µ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_71b <
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ¿
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_72a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_72b## >
.##> ?
BadSink##? F
(##F G
dataHashtable##G T
)##V W
;##W X
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
int// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_72b66 >
.66> ?
GoodG2BSink66? J
(66J K
dataHashtable66K X
)66Z [
;66[ \
}77 
}99 
}:: ß
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_72b <
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ∏
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_73a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "

LinkedList   
<   
int   
>   
dataLinkedList   &
=  ' (
new  ) ,

LinkedList  - 7
<  7 8
int  8 ;
>  ; <
(  < =
)  = >
;  > ?
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_73b$$ >
.$$> ?
BadSink$$? F
($$F G
dataLinkedList$$G U
)$$W X
;$$X Y
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
int00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
int33 
>33 
dataLinkedList33 &
=33' (
new33) ,

LinkedList33- 7
<337 8
int338 ;
>33; <
(33< =
)33= >
;33> ?
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_73b77 >
.77> ?
GoodG2BSink77? J
(77J K
dataLinkedList77K Y
)77[ \
;77\ ]
}88 
}:: 
};; ”
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_73b <
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ê
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_74a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "

Dictionary 
< 
int 
, 
int 
> 
dataDictionary *
=+ ,
new- 0

Dictionary1 ;
<; <
int< ?
,? @
int@ C
>C D
(D E
)E F
;F G
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_74b## >
.##> ?
BadSink##? F
(##F G
dataDictionary##G U
)##W X
;##X Y
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
int// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
int22 
>22 
dataDictionary22 *
=22+ ,
new22- 0

Dictionary221 ;
<22; <
int22< ?
,22? @
int22@ C
>22C D
(22D E
)22E F
;22F G
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_74b66 >
.66> ?
GoodG2BSink66? J
(66J K
dataDictionary66K Y
)66[ \
;66\ ]
}77 
}99 
}:: Ì
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_74b <
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 é 
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_75a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
short   
.   
MaxValue   
+   
$num    !
;  ! "
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_75b++ B
.++B C
BadSink++C J
(++J K
dataSerialized++K Y
)++[ \
;++\ ]
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
int<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_75bII B
.IIB C
GoodG2BSinkIIC N
(IIN O
dataSerializedIIO ]
)II_ `
;II` a
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR ”!
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_75b <
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ƒ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_byte_81a <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "F
:CWE197_Numeric_Truncation_Error__int_large_to_byte_81_base B

baseObjectC M
=N O
newP SF
9CWE197_Numeric_Truncation_Error__int_large_to_byte_81_bad	T ç
(
ç é
)
é è
;
è ê

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. F
:CWE197_Numeric_Truncation_Error__int_large_to_byte_81_base// B

baseObject//C M
=//N O
new//P SJ
=CWE197_Numeric_Truncation_Error__int_large_to_byte_81_goodG2B	//T ë
(
//ë í
)
//í ì
;
//ì î

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 ¸
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_large_to_byte_81_bad ?
:@ AF
:CWE197_Numeric_Truncation_Error__int_large_to_byte_81_baseB |
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Î
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 F
:CWE197_Numeric_Truncation_Error__int_large_to_byte_81_base I
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} Ö
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_large_to_byte_81_goodG2B C
:D EG
:CWE197_Numeric_Truncation_Error__int_large_to_byte_81_base	F Ä
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ﬁ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_01 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
short!! 
)!!  
data!!  $
)!!$ %
;!!% &
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
int.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
short33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
}77 
}88 ≈
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_02 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ™
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_03 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ö
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_04 <
:= >
AbstractTestCase? O
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
short'' 
.'' 
MaxValue'' !
+''" #
$num''$ %
;''% &
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
short11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
int99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg º
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_05 <
:= >
AbstractTestCase? O
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
short'' 
.'' 
MaxValue'' !
+''" #
$num''$ %
;''% &
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
short11 
)11  
data11  $
)11$ %
;11% &
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
int99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg ›
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_06 <
:= >
AbstractTestCase? O
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
short&& 
.&& 
MaxValue&& !
+&&" #
$num&&$ %
;&&% &
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
short00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
int88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
shortFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
short[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff Æ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_07 <
:= >
AbstractTestCase? O
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
short&& 
.&& 
MaxValue&& !
+&&" #
$num&&$ %
;&&% &
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
short00 
)00  
data00  $
)00$ %
;00% &
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
int88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
shortFF 
)FF  
dataFF  $
)FF$ %
;FF% &
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
short[[ 
)[[  
data[[  $
)[[$ %
;[[% &
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff „
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_08 <
:= >
AbstractTestCase? O
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
short.. 
... 
MaxValue.. !
+.." #
$num..$ %
;..% &
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
short88 
)88  
data88  $
)88$ %
;88% &
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
int@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
shortNN 
)NN  
dataNN  $
)NN$ %
;NN% &
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn “
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_09 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ¥
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_10 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` £
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_11 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` †
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_12 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
short?? 
)??  
data??  $
)??$ %
;??% &
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ∑
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_13 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ô
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_14 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
short@@ 
)@@  
data@@  $
)@@$ %
;@@% &
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ù
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_15 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
short!! 
.!! 
MaxValue!! !
+!!" #
$num!!$ %
;!!% &
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
int33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
shortBB 
)BB  
dataBB  $
)BB$ %
;BB% &
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
intII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc ‰
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_16 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
short%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
short66 
)66  
data66  $
)66$ %
;66% &
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ ‘
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_17 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
short## #
)### $
data##$ (
)##( )
;##) *
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
short44 #
)44# $
data44$ (
)44( )
;44) *
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? Œ"
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_21 <
:= >
AbstractTestCase? O
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
private(( 
int(( 

Bad_source(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
short.. 
... 
MaxValue.. !
+.." #
$num..$ %
;..% &
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
intFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
shortKK 
)KK  
dataKK  $
)KK$ %
;KK% &
}LL 	
}MM 
privateOO 
intOO 
GoodG2B1_sourceOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
intcc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatell 
intll 
GoodG2B2_sourcell 
(ll  
)ll  !
{mm 
intnn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ í
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22a =
:> ?
AbstractTestCase@ P
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22b!! F
.!!F G
	BadSource!!G P
(!!P Q
)!!Q R
;!!R S
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22b88 F
.88F G
GoodG2B1Source88G U
(88U V
)88V W
;88W X
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22bDD F
.DDF G
GoodG2B2SourceDDG U
(DDU V
)DDV W
;DDW X
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL ∂
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22b =
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22a C
.C D
badPublicStaticD S
)S T
{ 	
data   
=   
short   
.   
MaxValue   !
+  " #
$num  $ %
;  % &
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
int.. 
GoodG2B1Source.. $
(..$ %
)..% &
{// 
int00 
data00 
;00 
if11 

(11 C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22a11 C
.11C D 
goodG2B1PublicStatic11D X
)11X Y
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
int@@ 
GoodG2B2Source@@ $
(@@$ %
)@@% &
{AA 
intBB 
dataBB 
;BB 
ifCC 

(CC C
7CWE197_Numeric_Truncation_Error__int_large_to_short_22aCC C
.CCC D 
GoodG2B2PublicStaticCCD X
)CCX Y
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ¸
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_31 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{ 	
int 
data 
; 
data!! 
=!! 
short!! 
.!! 
MaxValue!! !
+!!" #
$num!!$ %
;!!% &
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
int%% 
data%% 
=%% 
dataCopy%% 
;%%  
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( #
)((# $
data(($ (
)((( )
;(() *
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
int66 
dataCopy66 
;66 
{77 	
int88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
int>> 
data>> 
=>> 
dataCopy>> 
;>>  
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
shortAA #
)AA# $
dataAA$ (
)AA( )
;AA) *
}BB 
}CC 	
}DD 
}FF 
}GG Ä
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_41 <
:= >
AbstractTestCase? O
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data%% 
=%% 
short%% 
.%% 
MaxValue%% 
+%% 
$num%%  !
;%%! "
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
int//$ '
data//( ,
)//- .
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
short33 
)33  
data33  $
)33$ %
;33% &
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA Í
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_42 <
:= >
AbstractTestCase? O
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
=$$ 
	BadSource$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private,, 
static,, 
int,, 
GoodG2BSource,, $
(,,$ %
),,% &
{-- 
int.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
int77 
data77 
=77 
GoodG2BSource77  
(77  !
)77! "
;77" #
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
short:: 
)::  
data::  $
)::$ %
;::% &
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD ∞
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_large_to_short_45 <
:= >
AbstractTestCase? O
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
int 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
short"" 
)""  
data""  $
)""$ %
;""% &
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
int)) 
data)) 
;)) 
data++ 
=++ 
short++ 
.++ 
MaxValue++ 
+++ 
$num++  !
;++! "
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
int88 
data88 
=88 
dataGoodG2B88 
;88 
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ ¨
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_51a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "C
7CWE197_Numeric_Truncation_Error__int_large_to_short_51b ?
.? @
BadSink@ G
(G H
dataH L
)N O
;O P
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, C
7CWE197_Numeric_Truncation_Error__int_large_to_short_51b-- ?
.--? @
GoodG2BSink--@ K
(--K L
data--L P
)--R S
;--S T
}.. 
}00 
}11 ó	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_51b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, ¨
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_52a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "C
7CWE197_Numeric_Truncation_Error__int_large_to_short_52b ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_large_to_short_52b.. ?
...? @
GoodG2BSink..@ K
(..K L
data..L P
)..Q R
;..R S
}// 
}11 
}22 „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_52b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_large_to_short_52c ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_large_to_short_52c## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' ó	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_52c =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ¨
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53b ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53b.. ?
...? @
GoodG2BSink..@ K
(..K L
data..L P
)..Q R
;..R S
}// 
}11 
}22 „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53c ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53c## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53c =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53d ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53d## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' ó	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_53d =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ¨
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54b ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54b.. ?
...? @
GoodG2BSink..@ K
(..K L
data..L P
)..Q R
;..R S
}// 
}11 
}22 „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54c ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54c## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54c =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54d ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54d## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54d =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54e ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54e## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' ó	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_54e =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ›
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_61a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= C
7CWE197_Numeric_Truncation_Error__int_large_to_short_61b J
.J K
	BadSourceK T
(T U
)U V
;V W
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ C
7CWE197_Numeric_Truncation_Error__int_large_to_short_61b++ J
.++J K
GoodG2BSource++K X
(++X Y
)++Y Z
;++Z [
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 ‰
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_61b =
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
return 
data 
; 
}   
public%% 

static%% 
int%% 
GoodG2BSource%% #
(%%# $
)%%$ %
{&& 
int'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. §
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_66a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
int 
[ 
] 
	dataArray 
= 
new 
int !
[! "
$num" #
]# $
;$ %
	dataArray   
[   
$num   
]   
=   
data   
;   C
7CWE197_Numeric_Truncation_Error__int_large_to_short_66b!! ?
.!!? @
BadSink!!@ G
(!!G H
	dataArray!!H Q
)!!S T
;!!T U
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
int-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
int00 
[00 
]00 
	dataArray00 
=00 
new00 
int00 !
[00! "
$num00" #
]00# $
;00$ %
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 C
7CWE197_Numeric_Truncation_Error__int_large_to_short_66b22 ?
.22? @
GoodG2BSink22@ K
(22K L
	dataArray22L U
)22W X
;22X Y
}33 
}55 
}66 Ì
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_66b =
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ê
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_67a =
:> ?
AbstractTestCase@ P
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data## 
=## 
short## 
.## 
MaxValue## 
+## 
$num##  !
;##! "
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *C
7CWE197_Numeric_Truncation_Error__int_large_to_short_67b&& ?
.&&? @
BadSink&&@ G
(&&G H
dataContainer&&H U
)&&W X
;&&X Y
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
int22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *C
7CWE197_Numeric_Truncation_Error__int_large_to_short_67b77 ?
.77? @
GoodG2BSink77@ K
(77K L
dataContainer77L Y
)77[ \
;77\ ]
}88 
}:: 
};; Á
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_67b =
{ 
public 

static 
void 
BadSink 
( C
7CWE197_Numeric_Truncation_Error__int_large_to_short_67a V
.V W
	ContainerW `
dataContainera n
)o p
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #C
7CWE197_Numeric_Truncation_Error__int_large_to_short_67a%%# Z
.%%Z [
	Container%%[ d
dataContainer%%e r
)%%s t
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// í
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_68a =
:> ?
AbstractTestCase@ P
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "C
7CWE197_Numeric_Truncation_Error__int_large_to_short_68b ?
.? @
BadSink@ G
(G H
)H I
;I J
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, C
7CWE197_Numeric_Truncation_Error__int_large_to_short_68b-- ?
.--? @
GoodG2BSink--@ K
(--K L
)--L M
;--M N
}.. 
}00 
}11 ü
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_68b =
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= C
7CWE197_Numeric_Truncation_Error__int_large_to_short_68a J
.J K
dataK O
;O P
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& C
7CWE197_Numeric_Truncation_Error__int_large_to_short_68a&& J
.&&J K
data&&K O
;&&O P
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. §
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_71a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "C
7CWE197_Numeric_Truncation_Error__int_large_to_short_71b ?
.? @
BadSink@ G
(G H
(H I
ObjectI O
)O P
dataP T
)V W
;W X
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_large_to_short_71b.. ?
...? @
GoodG2BSink..@ K
(..K L
(..L M
Object..M S
)..S T
data..T X
)..Z [
;..[ \
}// 
}11 
}22 π
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_71b =
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ƒ
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_72a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #C
7CWE197_Numeric_Truncation_Error__int_large_to_short_72b## ?
.##? @
BadSink##@ G
(##G H
dataHashtable##H U
)##W X
;##X Y
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
int// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #C
7CWE197_Numeric_Truncation_Error__int_large_to_short_72b66 ?
.66? @
GoodG2BSink66@ K
(66K L
dataHashtable66L Y
)66[ \
;66\ ]
}77 
}99 
}:: ´
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_72b =
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 º
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_73a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "

LinkedList   
<   
int   
>   
dataLinkedList   &
=  ' (
new  ) ,

LinkedList  - 7
<  7 8
int  8 ;
>  ; <
(  < =
)  = >
;  > ?
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %C
7CWE197_Numeric_Truncation_Error__int_large_to_short_73b$$ ?
.$$? @
BadSink$$@ G
($$G H
dataLinkedList$$H V
)$$X Y
;$$Y Z
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
int00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
int33 
>33 
dataLinkedList33 &
=33' (
new33) ,

LinkedList33- 7
<337 8
int338 ;
>33; <
(33< =
)33= >
;33> ?
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %C
7CWE197_Numeric_Truncation_Error__int_large_to_short_73b77 ?
.77? @
GoodG2BSink77@ K
(77K L
dataLinkedList77L Z
)77\ ]
;77] ^
}88 
}:: 
};; ◊
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_73b =
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 Í
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_74a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "

Dictionary 
< 
int 
, 
int 
> 
dataDictionary *
=+ ,
new- 0

Dictionary1 ;
<; <
int< ?
,? @
int@ C
>C D
(D E
)E F
;F G
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $C
7CWE197_Numeric_Truncation_Error__int_large_to_short_74b## ?
.##? @
BadSink##@ G
(##G H
dataDictionary##H V
)##X Y
;##Y Z
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
int// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
int22 
>22 
dataDictionary22 *
=22+ ,
new22- 0

Dictionary221 ;
<22; <
int22< ?
,22? @
int22@ C
>22C D
(22D E
)22E F
;22F G
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $C
7CWE197_Numeric_Truncation_Error__int_large_to_short_74b66 ?
.66? @
GoodG2BSink66@ K
(66K L
dataDictionary66L Z
)66\ ]
;66] ^
}77 
}99 
}:: Ò
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_74b =
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 í 
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_75a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
short   
.   
MaxValue   
+   
$num    !
;  ! "
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** C
7CWE197_Numeric_Truncation_Error__int_large_to_short_75b++ C
.++C D
BadSink++D K
(++K L
dataSerialized++L Z
)++\ ]
;++] ^
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
int<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH C
7CWE197_Numeric_Truncation_Error__int_large_to_short_75bII C
.IIC D
GoodG2BSinkIID O
(IIO P
dataSerializedIIP ^
)II` a
;IIa b
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR ◊!
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_75b =
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN  
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_large_to_short_81a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
short 
. 
MaxValue 
+ 
$num  !
;! "G
;CWE197_Numeric_Truncation_Error__int_large_to_short_81_base C

baseObjectD N
=O P
newQ TG
:CWE197_Numeric_Truncation_Error__int_large_to_short_81_bad	U è
(
è ê
)
ê ë
;
ë í

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. G
;CWE197_Numeric_Truncation_Error__int_large_to_short_81_base// C

baseObject//D N
=//O P
new//Q TK
>CWE197_Numeric_Truncation_Error__int_large_to_short_81_goodG2B	//U ì
(
//ì î
)
//î ï
;
//ï ñ

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 Ä
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_large_to_short_81_bad @
:A BG
;CWE197_Numeric_Truncation_Error__int_large_to_short_81_baseC ~
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" Ì
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 G
;CWE197_Numeric_Truncation_Error__int_large_to_short_81_base J
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} â
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_large_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__int_large_to_short_81_goodG2B D
:E FH
;CWE197_Numeric_Truncation_Error__int_large_to_short_81_base	G Ç
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" œ%
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_01 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
{RR 	
IOTT 
.TT 
	WriteLineTT 
(TT 
(TT 
byteTT 
)TT 
dataTT #
)TT# $
;TT$ %
}UU 	
}VV 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B[[ 
([[ 
)[[ 
;[[ 
}\\ 
private__ 
void__ 
GoodG2B__ 
(__ 
)__ 
{`` 
intaa 
dataaa 
;aa 
datacc 
=cc 
$numcc 
;cc 
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
}jj 
}kk Å/
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_02 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
falseff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
true{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Ê/
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_03 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
$numff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
$num{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ›1
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_04 @
:A B
AbstractTestCaseC S
{ 
private!! 
const!! 
bool!! 
PRIVATE_CONST_TRUE!! )
=!!* +
true!!, 0
;!!0 1
private"" 
const"" 
bool"" 
PRIVATE_CONST_FALSE"" *
=""+ ,
false""- 2
;""2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
int'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
int** 
.** 
MinValue** 
;**  
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
try// 
{00 
listener11 
=11 
new11 "
TcpListener11# .
(11. /
	IPAddress11/ 8
.118 9
Parse119 >
(11> ?
$str11? K
)11K L
,11L M
$num11N S
)11S T
;11T U
listener22 
.22 
Start22 "
(22" #
)22# $
;22$ %
using33 
(33 
	TcpClient33 $
tcpConn33% ,
=33- .
listener33/ 7
.337 8
AcceptTcpClient338 G
(33G H
)33H I
)33I J
{44 
using66 
(66 
StreamReader66 +
sr66, .
=66/ 0
new661 4
StreamReader665 A
(66A B
tcpConn66B I
.66I J
	GetStream66J S
(66S T
)66T U
)66U V
)66V W
{77 
string99 "
stringNumber99# /
=990 1
sr992 4
.994 5
ReadLine995 =
(99= >
)99> ?
;99? @
if:: 
(::  
stringNumber::  ,
!=::- /
null::0 4
)::4 5
{;; 
try<<  #
{==  !
data>>$ (
=>>) *
int>>+ .
.>>. /
Parse>>/ 4
(>>4 5
stringNumber>>5 A
.>>A B
Trim>>B F
(>>F G
)>>G H
)>>H I
;>>I J
}??  !
catch@@  %
(@@% &
FormatException@@& 5
exceptNumberFormat@@6 H
)@@H I
{AA  !
IOBB$ &
.BB& '
LoggerBB' -
.BB- .
LogBB. 1
(BB1 2
NLogBB2 6
.BB6 7
LogLevelBB7 ?
.BB? @
WarnBB@ D
,BBD E
exceptNumberFormatBBF X
,BBX Y
$str	BBZ å
)
BBå ç
;
BBç é
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryNN 
{OO 
ifPP 
(PP 
listenerPP $
!=PP% '
nullPP( ,
)PP, -
{QQ 
listenerRR $
.RR$ %
StopRR% )
(RR) *
)RR* +
;RR+ ,
}SS 
}TT 
catchUU 
(UU 
SocketExceptionUU )
seUU* ,
)UU, -
{VV 
IOWW 
.WW 
LoggerWW !
.WW! "
LogWW" %
(WW% &
NLogWW& *
.WW* +
LogLevelWW+ 3
.WW3 4
WarnWW4 8
,WW8 9
seWW: <
,WW< =
$strWW> Y
)WWY Z
;WWZ [
}XX 
}YY 
}ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
intll 
datall 
;ll 
ifmm 

(mm 
PRIVATE_CONST_FALSEmm 
)mm  
{nn 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
bytezz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
private 
void 
GoodG2B2 
( 
) 
{
ÄÄ 
int
ÅÅ 
data
ÅÅ 
;
ÅÅ 
if
ÇÇ 

(
ÇÇ  
PRIVATE_CONST_TRUE
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
else
áá 
{
àà 	
data
ãã 
=
ãã 
$num
ãã 
;
ãã 
}
åå 	
{
çç 	
IO
èè 
.
èè 
	WriteLine
èè 
(
èè 
(
èè 
byte
èè 
)
èè 
data
èè #
)
èè# $
;
èè$ %
}
êê 	
}
ëë 
public
ìì 

override
ìì 
void
ìì 
Good
ìì 
(
ìì 
)
ìì 
{
îî 
GoodG2B1
ïï 
(
ïï 
)
ïï 
;
ïï 
GoodG2B2
ññ 
(
ññ 
)
ññ 
;
ññ 
}
óó 
}ôô 
}öö î1
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_05 @
:A B
AbstractTestCaseC S
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
int'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
int** 
.** 
MinValue** 
;**  
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
try// 
{00 
listener11 
=11 
new11 "
TcpListener11# .
(11. /
	IPAddress11/ 8
.118 9
Parse119 >
(11> ?
$str11? K
)11K L
,11L M
$num11N S
)11S T
;11T U
listener22 
.22 
Start22 "
(22" #
)22# $
;22$ %
using33 
(33 
	TcpClient33 $
tcpConn33% ,
=33- .
listener33/ 7
.337 8
AcceptTcpClient338 G
(33G H
)33H I
)33I J
{44 
using66 
(66 
StreamReader66 +
sr66, .
=66/ 0
new661 4
StreamReader665 A
(66A B
tcpConn66B I
.66I J
	GetStream66J S
(66S T
)66T U
)66U V
)66V W
{77 
string99 "
stringNumber99# /
=990 1
sr992 4
.994 5
ReadLine995 =
(99= >
)99> ?
;99? @
if:: 
(::  
stringNumber::  ,
!=::- /
null::0 4
)::4 5
{;; 
try<<  #
{==  !
data>>$ (
=>>) *
int>>+ .
.>>. /
Parse>>/ 4
(>>4 5
stringNumber>>5 A
.>>A B
Trim>>B F
(>>F G
)>>G H
)>>H I
;>>I J
}??  !
catch@@  %
(@@% &
FormatException@@& 5
exceptNumberFormat@@6 H
)@@H I
{AA  !
IOBB$ &
.BB& '
LoggerBB' -
.BB- .
LogBB. 1
(BB1 2
NLogBB2 6
.BB6 7
LogLevelBB7 ?
.BB? @
WarnBB@ D
,BBD E
exceptNumberFormatBBF X
,BBX Y
$str	BBZ å
)
BBå ç
;
BBç é
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryNN 
{OO 
ifPP 
(PP 
listenerPP $
!=PP% '
nullPP( ,
)PP, -
{QQ 
listenerRR $
.RR$ %
StopRR% )
(RR) *
)RR* +
;RR+ ,
}SS 
}TT 
catchUU 
(UU 
SocketExceptionUU )
seUU* ,
)UU, -
{VV 
IOWW 
.WW 
LoggerWW !
.WW! "
LogWW" %
(WW% &
NLogWW& *
.WW* +
LogLevelWW+ 3
.WW3 4
WarnWW4 8
,WW8 9
seWW: <
,WW< =
$strWW> Y
)WWY Z
;WWZ [
}XX 
}YY 
}ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
intll 
datall 
;ll 
ifmm 

(mm 
privateFalsemm 
)mm 
{nn 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
bytezz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
private 
void 
GoodG2B2 
( 
) 
{
ÄÄ 
int
ÅÅ 
data
ÅÅ 
;
ÅÅ 
if
ÇÇ 

(
ÇÇ 
privateTrue
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
else
áá 
{
àà 	
data
ãã 
=
ãã 
$num
ãã 
;
ãã 
}
åå 	
{
çç 	
IO
èè 
.
èè 
	WriteLine
èè 
(
èè 
(
èè 
byte
èè 
)
èè 
data
èè #
)
èè# $
;
èè$ %
}
êê 	
}
ëë 
public
ìì 

override
ìì 
void
ìì 
Good
ìì 
(
ìì 
)
ìì 
{
îî 
GoodG2B1
ïï 
(
ïï 
)
ïï 
;
ïï 
GoodG2B2
ññ 
(
ññ 
)
ññ 
;
ññ 
}
óó 
}ôô 
}öö ∑1
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_06 @
:A B
AbstractTestCaseC S
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
=='' !
$num''" #
)''# $
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
try.. 
{// 
listener00 
=00 
new00 "
TcpListener00# .
(00. /
	IPAddress00/ 8
.008 9
Parse009 >
(00> ?
$str00? K
)00K L
,00L M
$num00N S
)00S T
;00T U
listener11 
.11 
Start11 "
(11" #
)11# $
;11$ %
using22 
(22 
	TcpClient22 $
tcpConn22% ,
=22- .
listener22/ 7
.227 8
AcceptTcpClient228 G
(22G H
)22H I
)22I J
{33 
using55 
(55 
StreamReader55 +
sr55, .
=55/ 0
new551 4
StreamReader555 A
(55A B
tcpConn55B I
.55I J
	GetStream55J S
(55S T
)55T U
)55U V
)55V W
{66 
string88 "
stringNumber88# /
=880 1
sr882 4
.884 5
ReadLine885 =
(88= >
)88> ?
;88? @
if99 
(99  
stringNumber99  ,
!=99- /
null990 4
)994 5
{:: 
try;;  #
{<<  !
data==$ (
===) *
int==+ .
.==. /
Parse==/ 4
(==4 5
stringNumber==5 A
.==A B
Trim==B F
(==F G
)==G H
)==H I
;==I J
}>>  !
catch??  %
(??% &
FormatException??& 5
exceptNumberFormat??6 H
)??H I
{@@  !
IOAA$ &
.AA& '
LoggerAA' -
.AA- .
LogAA. 1
(AA1 2
NLogAA2 6
.AA6 7
LogLevelAA7 ?
.AA? @
WarnAA@ D
,AAD E
exceptNumberFormatAAF X
,AAX Y
$str	AAZ å
)
AAå ç
;
AAç é
}BB  !
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
finallyKK 
{LL 
tryMM 
{NN 
ifOO 
(OO 
listenerOO $
!=OO% '
nullOO( ,
)OO, -
{PP 
listenerQQ $
.QQ$ %
StopQQ% )
(QQ) *
)QQ* +
;QQ+ ,
}RR 
}SS 
catchTT 
(TT 
SocketExceptionTT )
seTT* ,
)TT, -
{UU 
IOVV 
.VV 
LoggerVV !
.VV! "
LogVV" %
(VV% &
NLogVV& *
.VV* +
LogLevelVV+ 3
.VV3 4
WarnVV4 8
,VV8 9
seVV: <
,VV< =
$strVV> Y
)VVY Z
;VVZ [
}WW 
}XX 
}YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
privateii 
voidii 
GoodG2B1ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
PRIVATE_CONST_FIVEll 
!=ll !
$numll" #
)ll# $
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
elserr 
{ss 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
byteyy 
)yy 
datayy #
)yy# $
;yy$ %
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
int
ÄÄ 
data
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ  
PRIVATE_CONST_FIVE
ÅÅ 
==
ÅÅ !
$num
ÅÅ" #
)
ÅÅ# $
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
else
ÜÜ 
{
áá 	
data
ää 
=
ää 
$num
ää 
;
ää 
}
ãã 	
{
åå 	
IO
éé 
.
éé 
	WriteLine
éé 
(
éé 
(
éé 
byte
éé 
)
éé 
data
éé #
)
éé# $
;
éé$ %
}
èè 	
}
êê 
public
íí 

override
íí 
void
íí 
Good
íí 
(
íí 
)
íí 
{
ìì 
GoodG2B1
îî 
(
îî 
)
îî 
;
îî 
GoodG2B2
ïï 
(
ïï 
)
ïï 
;
ïï 
}
ññ 
}òò 
}ôô à1
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_07 @
:A B
AbstractTestCaseC S
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
try.. 
{// 
listener00 
=00 
new00 "
TcpListener00# .
(00. /
	IPAddress00/ 8
.008 9
Parse009 >
(00> ?
$str00? K
)00K L
,00L M
$num00N S
)00S T
;00T U
listener11 
.11 
Start11 "
(11" #
)11# $
;11$ %
using22 
(22 
	TcpClient22 $
tcpConn22% ,
=22- .
listener22/ 7
.227 8
AcceptTcpClient228 G
(22G H
)22H I
)22I J
{33 
using55 
(55 
StreamReader55 +
sr55, .
=55/ 0
new551 4
StreamReader555 A
(55A B
tcpConn55B I
.55I J
	GetStream55J S
(55S T
)55T U
)55U V
)55V W
{66 
string88 "
stringNumber88# /
=880 1
sr882 4
.884 5
ReadLine885 =
(88= >
)88> ?
;88? @
if99 
(99  
stringNumber99  ,
!=99- /
null990 4
)994 5
{:: 
try;;  #
{<<  !
data==$ (
===) *
int==+ .
.==. /
Parse==/ 4
(==4 5
stringNumber==5 A
.==A B
Trim==B F
(==F G
)==G H
)==H I
;==I J
}>>  !
catch??  %
(??% &
FormatException??& 5
exceptNumberFormat??6 H
)??H I
{@@  !
IOAA$ &
.AA& '
LoggerAA' -
.AA- .
LogAA. 1
(AA1 2
NLogAA2 6
.AA6 7
LogLevelAA7 ?
.AA? @
WarnAA@ D
,AAD E
exceptNumberFormatAAF X
,AAX Y
$str	AAZ å
)
AAå ç
;
AAç é
}BB  !
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
finallyKK 
{LL 
tryMM 
{NN 
ifOO 
(OO 
listenerOO $
!=OO% '
nullOO( ,
)OO, -
{PP 
listenerQQ $
.QQ$ %
StopQQ% )
(QQ) *
)QQ* +
;QQ+ ,
}RR 
}SS 
catchTT 
(TT 
SocketExceptionTT )
seTT* ,
)TT, -
{UU 
IOVV 
.VV 
LoggerVV !
.VV! "
LogVV" %
(VV% &
NLogVV& *
.VV* +
LogLevelVV+ 3
.VV3 4
WarnVV4 8
,VV8 9
seVV: <
,VV< =
$strVV> Y
)VVY Z
;VVZ [
}WW 
}XX 
}YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
privateii 
voidii 
GoodG2B1ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
privateFivell 
!=ll 
$numll 
)ll 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
elserr 
{ss 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
byteyy 
)yy 
datayy #
)yy# $
;yy$ %
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
int
ÄÄ 
data
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
privateFive
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
else
ÜÜ 
{
áá 	
data
ää 
=
ää 
$num
ää 
;
ää 
}
ãã 	
{
åå 	
IO
éé 
.
éé 
	WriteLine
éé 
(
éé 
(
éé 
byte
éé 
)
éé 
data
éé #
)
éé# $
;
éé$ %
}
èè 	
}
êê 
public
íí 

override
íí 
void
íí 
Good
íí 
(
íí 
)
íí 
{
ìì 
GoodG2B1
îî 
(
îî 
)
îî 
;
îî 
GoodG2B2
ïï 
(
ïï 
)
ïï 
;
ïï 
}
ññ 
}òò 
}ôô ·3
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_08 @
:A B
AbstractTestCaseC S
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public,, 

override,, 
void,, 
Bad,, 
(,, 
),, 
{-- 
int.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
int11 
.11 
MinValue11 
;11  
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
try66 
{77 
listener88 
=88 
new88 "
TcpListener88# .
(88. /
	IPAddress88/ 8
.888 9
Parse889 >
(88> ?
$str88? K
)88K L
,88L M
$num88N S
)88S T
;88T U
listener99 
.99 
Start99 "
(99" #
)99# $
;99$ %
using:: 
(:: 
	TcpClient:: $
tcpConn::% ,
=::- .
listener::/ 7
.::7 8
AcceptTcpClient::8 G
(::G H
)::H I
)::I J
{;; 
using== 
(== 
StreamReader== +
sr==, .
===/ 0
new==1 4
StreamReader==5 A
(==A B
tcpConn==B I
.==I J
	GetStream==J S
(==S T
)==T U
)==U V
)==V W
{>> 
string@@ "
stringNumber@@# /
=@@0 1
sr@@2 4
.@@4 5
ReadLine@@5 =
(@@= >
)@@> ?
;@@? @
ifAA 
(AA  
stringNumberAA  ,
!=AA- /
nullAA0 4
)AA4 5
{BB 
tryCC  #
{DD  !
dataEE$ (
=EE) *
intEE+ .
.EE. /
ParseEE/ 4
(EE4 5
stringNumberEE5 A
.EEA B
TrimEEB F
(EEF G
)EEG H
)EEH I
;EEI J
}FF  !
catchGG  %
(GG% &
FormatExceptionGG& 5
exceptNumberFormatGG6 H
)GGH I
{HH  !
IOII$ &
.II& '
LoggerII' -
.II- .
LogII. 1
(II1 2
NLogII2 6
.II6 7
LogLevelII7 ?
.II? @
WarnII@ D
,IID E
exceptNumberFormatIIF X
,IIX Y
$str	IIZ å
)
IIå ç
;
IIç é
}JJ  !
}KK 
}LL 
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO "
exceptIOOO# +
)OO+ ,
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ !
(QQ! "
NLogQQ" &
.QQ& '
LogLevelQQ' /
.QQ/ 0
WarnQQ0 4
,QQ4 5
exceptIOQQ6 >
,QQ> ?
$strQQ@ [
)QQ[ \
;QQ\ ]
}RR 
finallySS 
{TT 
tryUU 
{VV 
ifWW 
(WW 
listenerWW $
!=WW% '
nullWW( ,
)WW, -
{XX 
listenerYY $
.YY$ %
StopYY% )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
SocketException\\ )
se\\* ,
)\\, -
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
se^^: <
,^^< =
$str^^> Y
)^^Y Z
;^^Z [
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
bytekk 
)kk 
datakk #
)kk# $
;kk$ %
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
intss 
datass 
;ss 
iftt 

(tt 
PrivateReturnsFalsett 
(tt  
)tt  !
)tt! "
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
byte
ÅÅ 
)
ÅÅ 
data
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
int
àà 
data
àà 
;
àà 
if
ââ 

(
ââ  
PrivateReturnsTrue
ââ 
(
ââ 
)
ââ  
)
ââ  !
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
byte
ññ 
)
ññ 
data
ññ #
)
ññ# $
;
ññ$ %
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° é0
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_09 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff !
STATIC_READONLY_FALSEff $
)ff$ %
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{  
STATIC_READONLY_TRUE{{ #
){{# $
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì /
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_10 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff 
staticFalseff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 

staticTrue{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ﬂ0
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_11 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff 
StaticReturnsFalseff !
(ff! "
)ff" #
)ff# $
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 
StaticReturnsTrue{{  
({{  !
){{! "
){{" #
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ë*
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_12 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! '
(!!' (
)!!( )
)!!) *
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
privatecc 
voidcc 
GoodG2Bcc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff $
StaticReturnsTrueOrFalseff '
(ff' (
)ff( )
)ff) *
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
elsekk 
{ll 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
byterr 
)rr 
datarr #
)rr# $
;rr$ %
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2Bxx 
(xx 
)xx 
;xx 
}yy 
}{{ 
}|| Û0
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_13 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!$ &
$num!!' (
)!!( )
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff  
STATIC_READONLY_FIVEff #
!=ff$ &
$numff' (
)ff( )
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{  
STATIC_READONLY_FIVE{{ #
=={{$ &
$num{{' (
){{( )
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ’0
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_14 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff 

staticFiveff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
bytess 
)ss 
datass #
)ss# $
;ss$ %
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 

staticFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
byte
àà 
)
àà 
data
àà #
)
àà# $
;
àà$ %
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ¿2
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_15 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
=   
$num   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$  
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
try)) 
{** 
listener++ 
=++ 
new++ "
TcpListener++# .
(++. /
	IPAddress++/ 8
.++8 9
Parse++9 >
(++> ?
$str++? K
)++K L
,++L M
$num++N S
)++S T
;++T U
listener,, 
.,, 
Start,, "
(,," #
),,# $
;,,$ %
using-- 
(-- 
	TcpClient-- $
tcpConn--% ,
=--- .
listener--/ 7
.--7 8
AcceptTcpClient--8 G
(--G H
)--H I
)--I J
{.. 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
tcpConn00B I
.00I J
	GetStream00J S
(00S T
)00T U
)00U V
)00V W
{11 
string33 "
stringNumber33# /
=330 1
sr332 4
.334 5
ReadLine335 =
(33= >
)33> ?
;33? @
if44 
(44  
stringNumber44  ,
!=44- /
null440 4
)444 5
{55 
try66  #
{77  !
data88$ (
=88) *
int88+ .
.88. /
Parse88/ 4
(884 5
stringNumber885 A
.88A B
Trim88B F
(88F G
)88G H
)88H I
;88I J
}99  !
catch::  %
(::% &
FormatException::& 5
exceptNumberFormat::6 H
)::H I
{;;  !
IO<<$ &
.<<& '
Logger<<' -
.<<- .
Log<<. 1
(<<1 2
NLog<<2 6
.<<6 7
LogLevel<<7 ?
.<<? @
Warn<<@ D
,<<D E
exceptNumberFormat<<F X
,<<X Y
$str	<<Z å
)
<<å ç
;
<<ç é
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryHH 
{II 
ifJJ 
(JJ 
listenerJJ $
!=JJ% '
nullJJ( ,
)JJ, -
{KK 
listenerLL $
.LL$ %
StopLL% )
(LL) *
)LL* +
;LL+ ,
}MM 
}NN 
catchOO 
(OO 
SocketExceptionOO )
seOO* ,
)OO, -
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
seQQ: <
,QQ< =
$strQQ> Y
)QQY Z
;QQZ [
}RR 
}SS 
}TT 
breakUU 
;UU 
defaultVV 
:VV 
dataYY 
=YY 
$numYY 
;YY 
breakZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
byte^^ 
)^^ 
data^^ #
)^^# $
;^^$ %
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
intff 
dataff 
=ff 
$numff 
;ff 
switchgg 
(gg 
$numgg 
)gg 
{hh 	
caseii 
$numii 
:ii 
datall 
=ll 
$numll 
;ll 
breakmm 
;mm 
defaultnn 
:nn 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
}rr 	
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
byteuu 
)uu 
datauu #
)uu# $
;uu$ %
}vv 	
}ww 
privatezz 
voidzz 
GoodG2B2zz 
(zz 
)zz 
{{{ 
int|| 
data|| 
=|| 
$num|| 
;|| 
switch}} 
(}} 
$num}} 
)}} 
{~~ 	
case 
$num 
: 
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
break
ÇÇ 
;
ÇÇ 
default
ÉÉ 
:
ÉÉ 
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
break
áá 
;
áá 
}
àà 	
{
ââ 	
IO
ãã 
.
ãã 
	WriteLine
ãã 
(
ãã 
(
ãã 
byte
ãã 
)
ãã 
data
ãã #
)
ãã# $
;
ãã$ %
}
åå 	
}
çç 
public
èè 

override
èè 
void
èè 
Good
èè 
(
èè 
)
èè 
{
êê 
GoodG2B1
ëë 
(
ëë 
)
ëë 
;
ëë 
GoodG2B2
íí 
(
íí 
)
íí 
;
íí 
}
ìì 
}ïï 
}ññ ’'
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_16 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B^^ 
(^^ 
)^^ 
{__ 
int`` 
data`` 
;`` 
whileaa 
(aa 
trueaa 
)aa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
breakee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
byteii 
)ii 
dataii #
)ii# $
;ii$ %
}jj 	
}kk 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
}rr 
}ss ≈)
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_17 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
forRR 
(RR 
intRR 
iRR 
=RR 
$numRR 
;RR 
iRR 
<RR 
$numRR 
;RR 
iRR  
++RR  "
)RR" #
{SS 	
{TT 
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV "
)VV" #
dataVV# '
)VV' (
;VV( )
}WW 
}XX 	
}YY 
private^^ 
void^^ 
GoodG2B^^ 
(^^ 
)^^ 
{__ 
int`` 
data`` 
;`` 
databb 
=bb 
$numbb 
;bb 
forcc 
(cc 
intcc 
icc 
=cc 
$numcc 
;cc 
icc 
<cc 
$numcc 
;cc 
icc  
++cc  "
)cc" #
{dd 	
{ee 
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
bytegg "
)gg" #
datagg# '
)gg' (
;gg( )
}hh 
}ii 	
}jj 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
}qq 
}rr Ñ=
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_21 @
:A B
AbstractTestCaseC S
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 

badPrivate$$ 
=$$ 
true$$ 
;$$ 
data%% 
=%% 

Bad_source%% 
(%% 
)%% 
;%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
private,, 
int,, 

Bad_source,, 
(,, 
),, 
{-- 
int.. 
data.. 
;.. 
if// 

(// 

badPrivate// 
)// 
{00 	
data11 
=11 
int11 
.11 
MinValue11 
;11  
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
try66 
{77 
listener88 
=88 
new88 "
TcpListener88# .
(88. /
	IPAddress88/ 8
.888 9
Parse889 >
(88> ?
$str88? K
)88K L
,88L M
$num88N S
)88S T
;88T U
listener99 
.99 
Start99 "
(99" #
)99# $
;99$ %
using:: 
(:: 
	TcpClient:: $
tcpConn::% ,
=::- .
listener::/ 7
.::7 8
AcceptTcpClient::8 G
(::G H
)::H I
)::I J
{;; 
using== 
(== 
StreamReader== +
sr==, .
===/ 0
new==1 4
StreamReader==5 A
(==A B
tcpConn==B I
.==I J
	GetStream==J S
(==S T
)==T U
)==U V
)==V W
{>> 
string@@ "
stringNumber@@# /
=@@0 1
sr@@2 4
.@@4 5
ReadLine@@5 =
(@@= >
)@@> ?
;@@? @
ifAA 
(AA  
stringNumberAA  ,
!=AA- /
nullAA0 4
)AA4 5
{BB 
tryCC  #
{DD  !
dataEE$ (
=EE) *
intEE+ .
.EE. /
ParseEE/ 4
(EE4 5
stringNumberEE5 A
.EEA B
TrimEEB F
(EEF G
)EEG H
)EEH I
;EEI J
}FF  !
catchGG  %
(GG% &
FormatExceptionGG& 5
exceptNumberFormatGG6 H
)GGH I
{HH  !
IOII$ &
.II& '
LoggerII' -
.II- .
LogII. 1
(II1 2
NLogII2 6
.II6 7
LogLevelII7 ?
.II? @
WarnII@ D
,IID E
exceptNumberFormatIIF X
,IIX Y
$str	IIZ å
)
IIå ç
;
IIç é
}JJ  !
}KK 
}LL 
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO "
exceptIOOO# +
)OO+ ,
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ !
(QQ! "
NLogQQ" &
.QQ& '
LogLevelQQ' /
.QQ/ 0
WarnQQ0 4
,QQ4 5
exceptIOQQ6 >
,QQ> ?
$strQQ@ [
)QQ[ \
;QQ\ ]
}RR 
finallySS 
{TT 
tryUU 
{VV 
ifWW 
(WW 
listenerWW $
!=WW% '
nullWW( ,
)WW, -
{XX 
listenerYY $
.YY$ %
StopYY% )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
SocketException\\ )
se\\* ,
)\\, -
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
se^^: <
,^^< =
$str^^> Y
)^^Y Z
;^^Z [
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
privatemm 
boolmm 
goodG2B1_privatemm !
=mm" #
falsemm$ )
;mm) *
privatenn 
boolnn 
GoodG2B2_privatenn !
=nn" #
falsenn$ )
;nn) *
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2B1rr 
(rr 
)rr 
;rr 
GoodG2B2ss 
(ss 
)ss 
;ss 
}tt 
privateww 
voidww 
GoodG2B1ww 
(ww 
)ww 
{xx 
intyy 
datayy 
;yy 
goodG2B1_privatezz 
=zz 
falsezz  
;zz  !
data{{ 
={{ 
GoodG2B1_source{{ 
({{ 
){{  
;{{  !
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
byte~~ 
)~~ 
data~~ #
)~~# $
;~~$ %
} 	
}
ÄÄ 
private
ÇÇ 
int
ÇÇ 
GoodG2B1_source
ÇÇ 
(
ÇÇ  
)
ÇÇ  !
{
ÉÉ 
int
ÑÑ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
if
ÖÖ 

(
ÖÖ 
goodG2B1_private
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
data
ââ 
=
ââ 
$num
ââ 
;
ââ 
}
ää 	
else
ãã 
{
åå 	
data
éé 
=
éé 
$num
éé 
;
éé 
}
èè 	
return
êê 
data
êê 
;
êê 
}
ëë 
private
îî 
void
îî 
GoodG2B2
îî 
(
îî 
)
îî 
{
ïï 
int
ññ 
data
ññ 
;
ññ 
GoodG2B2_private
óó 
=
óó 
true
óó 
;
óó  
data
òò 
=
òò 
GoodG2B2_source
òò 
(
òò 
)
òò  
;
òò  !
{
ôô 	
IO
õõ 
.
õõ 
	WriteLine
õõ 
(
õõ 
(
õõ 
byte
õõ 
)
õõ 
data
õõ #
)
õõ# $
;
õõ$ %
}
úú 	
}
ùù 
private
üü 
int
üü 
GoodG2B2_source
üü 
(
üü  
)
üü  !
{
†† 
int
°° 
data
°° 
=
°° 
$num
°° 
;
°° 
if
¢¢ 

(
¢¢ 
GoodG2B2_private
¢¢ 
)
¢¢ 
{
££ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
else
ßß 
{
®® 	
data
´´ 
=
´´ 
$num
´´ 
;
´´ 
}
¨¨ 	
return
≠≠ 
data
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± £
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22a A
:B C
AbstractTestCaseD T
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22b!! J
.!!J K
	BadSource!!K T
(!!T U
)!!U V
;!!V W
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22b88 J
.88J K
GoodG2B1Source88K Y
(88Y Z
)88Z [
;88[ \
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22bDD J
.DDJ K
GoodG2B2SourceDDK Y
(DDY Z
)DDZ [
;DD[ \
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL √+
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22b A
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int   
data   
;   
if!! 

(!! G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22a!! G
.!!G H
badPublicStatic!!H W
)!!W X
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
return[[ 
data[[ 
;[[ 
}\\ 
publicaa 

staticaa 
intaa 
GoodG2B1Sourceaa $
(aa$ %
)aa% &
{bb 
intcc 
datacc 
;cc 
ifdd 

(dd G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22add G
.ddG H 
goodG2B1PublicStaticddH \
)dd\ ]
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
returnoo 
dataoo 
;oo 
}pp 
publicss 

staticss 
intss 
GoodG2B2Sourcess $
(ss$ %
)ss% &
{tt 
intuu 
datauu 
;uu 
ifvv 

(vv G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22avv G
.vvG H 
GoodG2B2PublicStaticvvH \
)vv\ ]
{ww 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data 
= 
$num 
; 
}
ÄÄ 	
return
ÅÅ 
data
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ Ì)
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_31 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
dataCopy!! 
;!! 
{"" 	
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$  
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
try)) 
{** 
listener++ 
=++ 
new++ "
TcpListener++# .
(++. /
	IPAddress++/ 8
.++8 9
Parse++9 >
(++> ?
$str++? K
)++K L
,++L M
$num++N S
)++S T
;++T U
listener,, 
.,, 
Start,, "
(,," #
),,# $
;,,$ %
using-- 
(-- 
	TcpClient-- $
tcpConn--% ,
=--- .
listener--/ 7
.--7 8
AcceptTcpClient--8 G
(--G H
)--H I
)--I J
{.. 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
tcpConn00B I
.00I J
	GetStream00J S
(00S T
)00T U
)00U V
)00V W
{11 
string33 "
stringNumber33# /
=330 1
sr332 4
.334 5
ReadLine335 =
(33= >
)33> ?
;33? @
if44 
(44  
stringNumber44  ,
!=44- /
null440 4
)444 5
{55 
try66  #
{77  !
data88$ (
=88) *
int88+ .
.88. /
Parse88/ 4
(884 5
stringNumber885 A
.88A B
Trim88B F
(88F G
)88G H
)88H I
;88I J
}99  !
catch::  %
(::% &
FormatException::& 5
exceptNumberFormat::6 H
)::H I
{;;  !
IO<<$ &
.<<& '
Logger<<' -
.<<- .
Log<<. 1
(<<1 2
NLog<<2 6
.<<6 7
LogLevel<<7 ?
.<<? @
Warn<<@ D
,<<D E
exceptNumberFormat<<F X
,<<X Y
$str	<<Z å
)
<<å ç
;
<<ç é
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryHH 
{II 
ifJJ 
(JJ 
listenerJJ $
!=JJ% '
nullJJ( ,
)JJ, -
{KK 
listenerLL $
.LL$ %
StopLL% )
(LL) *
)LL* +
;LL+ ,
}MM 
}NN 
catchOO 
(OO 
SocketExceptionOO )
seOO* ,
)OO, -
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
seQQ: <
,QQ< =
$strQQ> Y
)QQY Z
;QQZ [
}RR 
}SS 
}TT 
dataCopyUU 
=UU 
dataUU 
;UU 
}VV 	
{WW 	
intXX 
dataXX 
=XX 
dataCopyXX 
;XX  
{YY 
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
byte[[ "
)[[" #
data[[# '
)[[' (
;[[( )
}\\ 
}]] 	
}^^ 
publicaa 

overrideaa 
voidaa 
Goodaa 
(aa 
)aa 
{bb 
GoodG2Bcc 
(cc 
)cc 
;cc 
}dd 
privategg 
voidgg 
GoodG2Bgg 
(gg 
)gg 
{hh 
intii 
dataCopyii 
;ii 
{jj 	
intkk 
datakk 
;kk 
datamm 
=mm 
$nummm 
;mm 
dataCopynn 
=nn 
datann 
;nn 
}oo 	
{pp 	
intqq 
dataqq 
=qq 
dataCopyqq 
;qq  
{rr 
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
bytett "
)tt" #
datatt# '
)tt' (
;tt( )
}uu 
}vv 	
}ww 
}yy 
}zz Ò)
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_41 @
:A B
AbstractTestCaseC S
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
byte!! 
)!! 
data!! #
)!!# $
;!!$ %
}"" 	
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
int'' 
data'' 
;'' 
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;(( 
{** 	
TcpListener++ 
listener++  
=++! "
null++# '
;++' (
try-- 
{.. 
listener// 
=// 
new// 
TcpListener// *
(//* +
	IPAddress//+ 4
.//4 5
Parse//5 :
(//: ;
$str//; G
)//G H
,//H I
$num//J O
)//O P
;//P Q
listener00 
.00 
Start00 
(00 
)00  
;00  !
using11 
(11 
	TcpClient11  
tcpConn11! (
=11) *
listener11+ 3
.113 4
AcceptTcpClient114 C
(11C D
)11D E
)11E F
{22 
using44 
(44 
StreamReader44 '
sr44( *
=44+ ,
new44- 0
StreamReader441 =
(44= >
tcpConn44> E
.44E F
	GetStream44F O
(44O P
)44P Q
)44Q R
)44R S
{55 
string77 
stringNumber77 +
=77, -
sr77. 0
.770 1
ReadLine771 9
(779 :
)77: ;
;77; <
if88 
(88 
stringNumber88 (
!=88) +
null88, 0
)880 1
{99 
try:: 
{;; 
data<<  $
=<<% &
int<<' *
.<<* +
Parse<<+ 0
(<<0 1
stringNumber<<1 =
.<<= >
Trim<<> B
(<<B C
)<<C D
)<<D E
;<<E F
}== 
catch>> !
(>>! "
FormatException>>" 1
exceptNumberFormat>>2 D
)>>D E
{?? 
IO@@  "
.@@" #
Logger@@# )
.@@) *
Log@@* -
(@@- .
NLog@@. 2
.@@2 3
LogLevel@@3 ;
.@@; <
Warn@@< @
,@@@ A
exceptNumberFormat@@B T
,@@T U
$str	@@V à
)
@@à â
;
@@â ä
}AA 
}BB 
}CC 
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF 
exceptIOFF '
)FF' (
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
exceptIOHH2 :
,HH: ;
$strHH< W
)HHW X
;HHX Y
}II 
finallyJJ 
{KK 
tryLL 
{MM 
ifNN 
(NN 
listenerNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
listenerPP  
.PP  !
StopPP! %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
SocketExceptionSS %
seSS& (
)SS( )
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
seUU6 8
,UU8 9
$strUU: U
)UUU V
;UUV W
}VV 
}WW 
}XX 	
BadSinkYY 
(YY 
dataYY 
)YY 
;YY 
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
}`` 
privatebb 
staticbb 
voidbb 
GoodG2BSinkbb #
(bb# $
intbb$ '
databb( ,
)bb- .
{cc 
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
byteff 
)ff 
dataff #
)ff# $
;ff$ %
}gg 	
}hh 
privatekk 
statickk 
voidkk 
GoodG2Bkk 
(kk  
)kk  !
{ll 
intmm 
datamm 
;mm 
dataoo 
=oo 
$numoo 
;oo 
GoodG2BSinkpp 
(pp 
datapp 
)pp 
;pp 
}qq 
}ss 
}tt €*
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_42 @
:A B
AbstractTestCaseC S
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
try%% 
{&& 
listener'' 
='' 
new'' 
TcpListener'' *
(''* +
	IPAddress''+ 4
.''4 5
Parse''5 :
('': ;
$str''; G
)''G H
,''H I
$num''J O
)''O P
;''P Q
listener(( 
.(( 
Start(( 
((( 
)((  
;((  !
using)) 
()) 
	TcpClient))  
tcpConn))! (
=))) *
listener))+ 3
.))3 4
AcceptTcpClient))4 C
())C D
)))D E
)))E F
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
tcpConn,,> E
.,,E F
	GetStream,,F O
(,,O P
),,P Q
),,Q R
),,R S
{-- 
string// 
stringNumber// +
=//, -
sr//. 0
.//0 1
ReadLine//1 9
(//9 :
)//: ;
;//; <
if00 
(00 
stringNumber00 (
!=00) +
null00, 0
)000 1
{11 
try22 
{33 
data44  $
=44% &
int44' *
.44* +
Parse44+ 0
(440 1
stringNumber441 =
.44= >
Trim44> B
(44B C
)44C D
)44D E
;44E F
}55 
catch66 !
(66! "
FormatException66" 1
exceptNumberFormat662 D
)66D E
{77 
IO88  "
.88" #
Logger88# )
.88) *
Log88* -
(88- .
NLog88. 2
.882 3
LogLevel883 ;
.88; <
Warn88< @
,88@ A
exceptNumberFormat88B T
,88T U
$str	88V à
)
88à â
;
88â ä
}99 
}:: 
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
finallyBB 
{CC 
tryDD 
{EE 
ifFF 
(FF 
listenerFF  
!=FF! #
nullFF$ (
)FF( )
{GG 
listenerHH  
.HH  !
StopHH! %
(HH% &
)HH& '
;HH' (
}II 
}JJ 
catchKK 
(KK 
SocketExceptionKK %
seKK& (
)KK( )
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
seMM6 8
,MM8 9
$strMM: U
)MMU V
;MMV W
}NN 
}OO 
}PP 	
returnQQ 
dataQQ 
;QQ 
}RR 
publicUU 

overrideUU 
voidUU 
BadUU 
(UU 
)UU 
{VV 
intWW 
dataWW 
=WW 
	BadSourceWW 
(WW 
)WW 
;WW 
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
byteZZ 
)ZZ 
dataZZ #
)ZZ# $
;ZZ$ %
}[[ 	
}\\ 
private__ 
static__ 
int__ 
GoodG2BSource__ $
(__$ %
)__% &
{`` 
intaa 
dataaa 
;aa 
datacc 
=cc 
$numcc 
;cc 
returndd 
datadd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
intjj 
datajj 
=jj 
GoodG2BSourcejj  
(jj  !
)jj! "
;jj" #
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
}vv 
}ww °,
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_45 @
:A B
AbstractTestCaseC S
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private!! 
void!! 
BadSink!! 
(!! 
)!! 
{"" 
int## 
data## 
=## 
dataBad## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
byte&& 
)&& 
data&& #
)&&# $
;&&$ %
}'' 	
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
data.. 
=.. 
int.. 
... 
MinValue.. 
;.. 
{00 	
TcpListener11 
listener11  
=11! "
null11# '
;11' (
try33 
{44 
listener55 
=55 
new55 
TcpListener55 *
(55* +
	IPAddress55+ 4
.554 5
Parse555 :
(55: ;
$str55; G
)55G H
,55H I
$num55J O
)55O P
;55P Q
listener66 
.66 
Start66 
(66 
)66  
;66  !
using77 
(77 
	TcpClient77  
tcpConn77! (
=77) *
listener77+ 3
.773 4
AcceptTcpClient774 C
(77C D
)77D E
)77E F
{88 
using:: 
(:: 
StreamReader:: '
sr::( *
=::+ ,
new::- 0
StreamReader::1 =
(::= >
tcpConn::> E
.::E F
	GetStream::F O
(::O P
)::P Q
)::Q R
)::R S
{;; 
string== 
stringNumber== +
===, -
sr==. 0
.==0 1
ReadLine==1 9
(==9 :
)==: ;
;==; <
if>> 
(>> 
stringNumber>> (
!=>>) +
null>>, 0
)>>0 1
{?? 
try@@ 
{AA 
dataBB  $
=BB% &
intBB' *
.BB* +
ParseBB+ 0
(BB0 1
stringNumberBB1 =
.BB= >
TrimBB> B
(BBB C
)BBC D
)BBD E
;BBE F
}CC 
catchDD !
(DD! "
FormatExceptionDD" 1
exceptNumberFormatDD2 D
)DDD E
{EE 
IOFF  "
.FF" #
LoggerFF# )
.FF) *
LogFF* -
(FF- .
NLogFF. 2
.FF2 3
LogLevelFF3 ;
.FF; <
WarnFF< @
,FF@ A
exceptNumberFormatFFB T
,FFT U
$str	FFV à
)
FFà â
;
FFâ ä
}GG 
}HH 
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL 
exceptIOLL '
)LL' (
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN 
(NN 
NLogNN "
.NN" #
LogLevelNN# +
.NN+ ,
WarnNN, 0
,NN0 1
exceptIONN2 :
,NN: ;
$strNN< W
)NNW X
;NNX Y
}OO 
finallyPP 
{QQ 
tryRR 
{SS 
ifTT 
(TT 
listenerTT  
!=TT! #
nullTT$ (
)TT( )
{UU 
listenerVV  
.VV  !
StopVV! %
(VV% &
)VV& '
;VV' (
}WW 
}XX 
catchYY 
(YY 
SocketExceptionYY %
seYY& (
)YY( )
{ZZ 
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ !
([[! "
NLog[[" &
.[[& '
LogLevel[[' /
.[[/ 0
Warn[[0 4
,[[4 5
se[[6 8
,[[8 9
$str[[: U
)[[U V
;[[V W
}\\ 
}]] 
}^^ 	
dataBad__ 
=__ 
data__ 
;__ 
BadSink`` 
(`` 
)`` 
;`` 
}aa 
publicdd 

overridedd 
voiddd 
Gooddd 
(dd 
)dd 
{ee 
GoodG2Bff 
(ff 
)ff 
;ff 
}gg 
privateii 
voidii 
GoodG2BSinkii 
(ii 
)ii 
{jj 
intkk 
datakk 
=kk 
dataGoodG2Bkk 
;kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
bytenn 
)nn 
datann #
)nn# $
;nn$ %
}oo 	
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
intuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww 
dataGoodG2Bxx 
=xx 
dataxx 
;xx 
GoodG2BSinkyy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ß%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_51a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
try%% 
{&& 
listener'' 
='' 
new'' 
TcpListener'' *
(''* +
	IPAddress''+ 4
.''4 5
Parse''5 :
('': ;
$str''; G
)''G H
,''H I
$num''J O
)''O P
;''P Q
listener(( 
.(( 
Start(( 
((( 
)((  
;((  !
using)) 
()) 
	TcpClient))  
tcpConn))! (
=))) *
listener))+ 3
.))3 4
AcceptTcpClient))4 C
())C D
)))D E
)))E F
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
tcpConn,,> E
.,,E F
	GetStream,,F O
(,,O P
),,P Q
),,Q R
),,R S
{-- 
string// 
stringNumber// +
=//, -
sr//. 0
.//0 1
ReadLine//1 9
(//9 :
)//: ;
;//; <
if00 
(00 
stringNumber00 (
!=00) +
null00, 0
)000 1
{11 
try22 
{33 
data44  $
=44% &
int44' *
.44* +
Parse44+ 0
(440 1
stringNumber441 =
.44= >
Trim44> B
(44B C
)44C D
)44D E
;44E F
}55 
catch66 !
(66! "
FormatException66" 1
exceptNumberFormat662 D
)66D E
{77 
IO88  "
.88" #
Logger88# )
.88) *
Log88* -
(88- .
NLog88. 2
.882 3
LogLevel883 ;
.88; <
Warn88< @
,88@ A
exceptNumberFormat88B T
,88T U
$str	88V à
)
88à â
;
88â ä
}99 
}:: 
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
finallyBB 
{CC 
tryDD 
{EE 
ifFF 
(FF 
listenerFF  
!=FF! #
nullFF$ (
)FF( )
{GG 
listenerHH  
.HH  !
StopHH! %
(HH% &
)HH& '
;HH' (
}II 
}JJ 
catchKK 
(KK 
SocketExceptionKK %
seKK& (
)KK( )
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
seMM6 8
,MM8 9
$strMM: U
)MMU V
;MMV W
}NN 
}OO 
}PP 	G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_51bQQ C
.QQC D
BadSinkQQD K
(QQK L
dataQQL P
)QQR S
;QQS T
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
void[[ 
GoodG2B[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_51b`` C
.``C D
GoodG2BSink``D O
(``O P
data``P T
)``V W
;``W X
}aa 
}cc 
}dd ù	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_51b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, ß%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52bRR C
.RRC D
BadSinkRRD K
(RRK L
dataRRL P
)RRQ R
;RRR S
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52baa C
.aaC D
GoodG2BSinkaaD O
(aaO P
dataaaP T
)aaU V
;aaV W
}bb 
}dd 
}ee Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ù	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52c A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ß%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53bRR C
.RRC D
BadSinkRRD K
(RRK L
dataRRL P
)RRQ R
;RRR S
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53baa C
.aaC D
GoodG2BSinkaaD O
(aaO P
dataaaP T
)aaU V
;aaV W
}bb 
}dd 
}ee Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53c A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ù	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53d A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ß%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54bRR C
.RRC D
BadSinkRRD K
(RRK L
dataRRL P
)RRQ R
;RRR S
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54baa C
.aaC D
GoodG2BSinkaaD O
(aaO P
dataaaP T
)aaU V
;aaV W
}bb 
}dd 
}ee Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54c A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54d A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54e C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54e## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ù	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54e A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Î
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_61a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_61b N
.N O
	BadSourceO X
(X Y
)Y Z
;Z [
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_61b++ N
.++N O
GoodG2BSource++O \
(++\ ]
)++] ^
;++^ _
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ◊!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_61b A
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
returnRR 
dataRR 
;RR 
}SS 
publicXX 

staticXX 
intXX 
GoodG2BSourceXX #
(XX# $
)XX$ %
{YY 
intZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
return]] 
data]] 
;]] 
}^^ 
}`` 
}aa ü*
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_66a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
intRR 
[RR 
]RR 
	dataArrayRR 
=RR 
newRR 
intRR !
[RR! "
$numRR" #
]RR# $
;RR$ %
	dataArraySS 
[SS 
$numSS 
]SS 
=SS 
dataSS 
;SS G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_66bTT C
.TTC D
BadSinkTTD K
(TTK L
	dataArrayTTL U
)TTW X
;TTX Y
}UU 
publicXX 

overrideXX 
voidXX 
GoodXX 
(XX 
)XX 
{YY 
GoodG2BZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
private^^ 
static^^ 
void^^ 
GoodG2B^^ 
(^^  
)^^  !
{__ 
int`` 
data`` 
;`` 
databb 
=bb 
$numbb 
;bb 
intcc 
[cc 
]cc 
	dataArraycc 
=cc 
newcc 
intcc !
[cc! "
$numcc" #
]cc# $
;cc$ %
	dataArraydd 
[dd 
$numdd 
]dd 
=dd 
datadd 
;dd G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_66bee C
.eeC D
GoodG2BSinkeeD O
(eeO P
	dataArrayeeP Y
)ee[ \
;ee\ ]
}ff 
}hh 
}ii Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_66b A
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ã+
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67a A
:B C
AbstractTestCaseD T
{ 
public 

class 
	Container 
{ 
public   
int   
containerOne   
;    
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&& 
{(( 	
TcpListener)) 
listener))  
=))! "
null))# '
;))' (
try++ 
{,, 
listener-- 
=-- 
new-- 
TcpListener-- *
(--* +
	IPAddress--+ 4
.--4 5
Parse--5 :
(--: ;
$str--; G
)--G H
,--H I
$num--J O
)--O P
;--P Q
listener.. 
... 
Start.. 
(.. 
)..  
;..  !
using// 
(// 
	TcpClient//  
tcpConn//! (
=//) *
listener//+ 3
.//3 4
AcceptTcpClient//4 C
(//C D
)//D E
)//E F
{00 
using22 
(22 
StreamReader22 '
sr22( *
=22+ ,
new22- 0
StreamReader221 =
(22= >
tcpConn22> E
.22E F
	GetStream22F O
(22O P
)22P Q
)22Q R
)22R S
{33 
string55 
stringNumber55 +
=55, -
sr55. 0
.550 1
ReadLine551 9
(559 :
)55: ;
;55; <
if66 
(66 
stringNumber66 (
!=66) +
null66, 0
)660 1
{77 
try88 
{99 
data::  $
=::% &
int::' *
.::* +
Parse::+ 0
(::0 1
stringNumber::1 =
.::= >
Trim::> B
(::B C
)::C D
)::D E
;::E F
};; 
catch<< !
(<<! "
FormatException<<" 1
exceptNumberFormat<<2 D
)<<D E
{== 
IO>>  "
.>>" #
Logger>># )
.>>) *
Log>>* -
(>>- .
NLog>>. 2
.>>2 3
LogLevel>>3 ;
.>>; <
Warn>>< @
,>>@ A
exceptNumberFormat>>B T
,>>T U
$str	>>V à
)
>>à â
;
>>â ä
}?? 
}@@ 
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD 
exceptIODD '
)DD' (
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF "
.FF" #
LogLevelFF# +
.FF+ ,
WarnFF, 0
,FF0 1
exceptIOFF2 :
,FF: ;
$strFF< W
)FFW X
;FFX Y
}GG 
finallyHH 
{II 
tryJJ 
{KK 
ifLL 
(LL 
listenerLL  
!=LL! #
nullLL$ (
)LL( )
{MM 
listenerNN  
.NN  !
StopNN! %
(NN% &
)NN& '
;NN' (
}OO 
}PP 
catchQQ 
(QQ 
SocketExceptionQQ %
seQQ& (
)QQ( )
{RR 
IOSS 
.SS 
LoggerSS 
.SS 
LogSS !
(SS! "
NLogSS" &
.SS& '
LogLevelSS' /
.SS/ 0
WarnSS0 4
,SS4 5
seSS6 8
,SS8 9
$strSS: U
)SSU V
;SSV W
}TT 
}UU 
}VV 	
	ContainerWW 
dataContainerWW 
=WW  !
newWW" %
	ContainerWW& /
(WW/ 0
)WW0 1
;WW1 2
dataContainerXX 
.XX 
containerOneXX "
=XX# $
dataXX% )
;XX) *G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67bYY C
.YYC D
BadSinkYYD K
(YYK L
dataContainerYYL Y
)YY[ \
;YY\ ]
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
}`` 
privatecc 
staticcc 
voidcc 
GoodG2Bcc 
(cc  
)cc  !
{dd 
intee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg 
	Containerhh 
dataContainerhh 
=hh  !
newhh" %
	Containerhh& /
(hh/ 0
)hh0 1
;hh1 2
dataContainerii 
.ii 
containerOneii "
=ii# $
dataii% )
;ii) *G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67bjj C
.jjC D
GoodG2BSinkjjD O
(jjO P
dataContainerjjP ]
)jj_ `
;jj` a
}kk 
}mm 
}nn ı
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67b A
{ 
public 

static 
void 
BadSink 
( G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67a Z
.Z [
	Container[ d
dataContainere r
)s t
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67a%%# ^
.%%^ _
	Container%%_ h
dataContainer%%i v
)%%w x
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ç%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68a A
:B C
AbstractTestCaseD T
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68bRR C
.RRC D
BadSinkRRD K
(RRK L
)RRL M
;RRM N
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
static\\ 
void\\ 
GoodG2B\\ 
(\\  
)\\  !
{]] 
data__ 
=__ 
$num__ 
;__ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68b`` C
.``C D
GoodG2BSink``D O
(``O P
)``P Q
;``Q R
}aa 
}cc 
}dd ≠
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68b A
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68a N
.N O
dataO S
;S T
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68a&& N
.&&N O
data&&O S
;&&S T
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ü&
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_71a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_71bRR C
.RRC D
BadSinkRRD K
(RRK L
(RRL M
ObjectRRM S
)RRS T
dataRRT X
)RRZ [
;RR[ \
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
static\\ 
void\\ 
GoodG2B\\ 
(\\  
)\\  !
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_71baa C
.aaC D
GoodG2BSinkaaD O
(aaO P
(aaP Q
ObjectaaQ W
)aaW X
dataaaX \
)aa^ _
;aa_ `
}bb 
}dd 
}ee ø
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_71b A
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ø/
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_72a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
	HashtableRR 
dataHashtableRR 
=RR  !
newRR" %
	HashtableRR& /
(RR/ 0
$numRR0 1
)RR1 2
;RR2 3
dataHashtableSS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS !
)SS! "
;SS" #
dataHashtableTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT !
)TT! "
;TT" #
dataHashtableUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU !
)UU! "
;UU" #G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_72bVV C
.VVC D
BadSinkVVD K
(VVK L
dataHashtableVVL Y
)VV[ \
;VV\ ]
}WW 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B\\ 
(\\ 
)\\ 
;\\ 
}]] 
private`` 
static`` 
void`` 
GoodG2B`` 
(``  
)``  !
{aa 
intbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 
	Hashtableee 
dataHashtableee 
=ee  !
newee" %
	Hashtableee& /
(ee/ 0
$numee0 1
)ee1 2
;ee2 3
dataHashtableff 
.ff 
Addff 
(ff 
$numff 
,ff 
dataff !
)ff! "
;ff" #
dataHashtablegg 
.gg 
Addgg 
(gg 
$numgg 
,gg 
datagg !
)gg! "
;gg" #
dataHashtablehh 
.hh 
Addhh 
(hh 
$numhh 
,hh 
datahh !
)hh! "
;hh" #G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_72bii C
.iiC D
GoodG2BSinkiiD O
(iiO P
dataHashtableiiP ]
)ii_ `
;ii` a
}jj 
}ll 
}mm ±
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_72b A
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ∑/
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_73a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
tcpConn..> E
...E F
	GetStream..F O
(..O P
)..P Q
)..Q R
)..R S
{// 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88! "
FormatException88" 1
exceptNumberFormat882 D
)88D E
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
exceptIOBB2 :
,BB: ;
$strBB< W
)BBW X
;BBX Y
}CC 
finallyDD 
{EE 
tryFF 
{GG 
ifHH 
(HH 
listenerHH  
!=HH! #
nullHH$ (
)HH( )
{II 
listenerJJ  
.JJ  !
StopJJ! %
(JJ% &
)JJ& '
;JJ' (
}KK 
}LL 
catchMM 
(MM 
SocketExceptionMM %
seMM& (
)MM( )
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
seOO6 8
,OO8 9
$strOO: U
)OOU V
;OOV W
}PP 
}QQ 
}RR 	

LinkedListSS 
<SS 
intSS 
>SS 
dataLinkedListSS &
=SS' (
newSS) ,

LinkedListSS- 7
<SS7 8
intSS8 ;
>SS; <
(SS< =
)SS= >
;SS> ?
dataLinkedListTT 
.TT 
AddLastTT 
(TT 
dataTT #
)TT# $
;TT$ %
dataLinkedListUU 
.UU 
AddLastUU 
(UU 
dataUU #
)UU# $
;UU$ %
dataLinkedListVV 
.VV 
AddLastVV 
(VV 
dataVV #
)VV# $
;VV$ %G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_73bWW C
.WWC D
BadSinkWWD K
(WWK L
dataLinkedListWWL Z
)WW\ ]
;WW] ^
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
staticaa 
voidaa 
GoodG2Baa 
(aa  
)aa  !
{bb 
intcc 
datacc 
;cc 
dataee 
=ee 
$numee 
;ee 

LinkedListff 
<ff 
intff 
>ff 
dataLinkedListff &
=ff' (
newff) ,

LinkedListff- 7
<ff7 8
intff8 ;
>ff; <
(ff< =
)ff= >
;ff> ?
dataLinkedListgg 
.gg 
AddLastgg 
(gg 
datagg #
)gg# $
;gg$ %
dataLinkedListhh 
.hh 
AddLasthh 
(hh 
datahh #
)hh# $
;hh$ %
dataLinkedListii 
.ii 
AddLastii 
(ii 
dataii #
)ii# $
;ii$ %G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_73bjj C
.jjC D
GoodG2BSinkjjD O
(jjO P
dataLinkedListjjP ^
)jj` a
;jja b
}kk 
}mm 
}nn ›
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_73b A
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Â1
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_74a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	

DictionaryRR 
<RR 
intRR 
,RR 
intRR 
>RR 
dataDictionaryRR *
=RR+ ,
newRR- 0

DictionaryRR1 ;
<RR; <
intRR< ?
,RR? @
intRR@ C
>RRC D
(RRD E
)RRE F
;RRF G
dataDictionarySS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS "
)SS" #
;SS# $
dataDictionaryTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT "
)TT" #
;TT# $
dataDictionaryUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU "
)UU" #
;UU# $G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_74bVV C
.VVC D
BadSinkVVD K
(VVK L
dataDictionaryVVL Z
)VV\ ]
;VV] ^
}WW 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B\\ 
(\\ 
)\\ 
;\\ 
}]] 
private`` 
static`` 
void`` 
GoodG2B`` 
(``  
)``  !
{aa 
intbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 

Dictionaryee 
<ee 
intee 
,ee 
intee 
>ee 
dataDictionaryee *
=ee+ ,
newee- 0

Dictionaryee1 ;
<ee; <
intee< ?
,ee? @
intee@ C
>eeC D
(eeD E
)eeE F
;eeF G
dataDictionaryff 
.ff 
Addff 
(ff 
$numff 
,ff 
dataff "
)ff" #
;ff# $
dataDictionarygg 
.gg 
Addgg 
(gg 
$numgg 
,gg 
datagg "
)gg" #
;gg# $
dataDictionaryhh 
.hh 
Addhh 
(hh 
$numhh 
,hh 
datahh "
)hh" #
;hh# $G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_74bii C
.iiC D
GoodG2BSinkiiD O
(iiO P
dataDictionaryiiP ^
)ii` a
;iia b
}jj 
}ll 
}mm ˜
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_74b A
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ï9
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_75a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
tcpConn..> E
...E F
	GetStream..F O
(..O P
)..P Q
)..Q R
)..R S
{// 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88! "
FormatException88" 1
exceptNumberFormat882 D
)88D E
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
exceptIOBB2 :
,BB: ;
$strBB< W
)BBW X
;BBX Y
}CC 
finallyDD 
{EE 
tryFF 
{GG 
ifHH 
(HH 
listenerHH  
!=HH! #
nullHH$ (
)HH( )
{II 
listenerJJ  
.JJ  !
StopJJ! %
(JJ% &
)JJ& '
;JJ' (
}KK 
}LL 
catchMM 
(MM 
SocketExceptionMM %
seMM& (
)MM( )
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
seOO6 8
,OO8 9
$strOO: U
)OOU V
;OOV W
}PP 
}QQ 
}RR 	
byteTT 
[TT 
]TT 
dataSerializedTT 
=TT 
nullTT  $
;TT$ %
tryUU 
{VV 	
BinaryFormatterWW 
bfWW 
=WW  
newWW! $
BinaryFormatterWW% 4
(WW4 5
)WW5 6
;WW6 7
usingXX 
(XX 
varXX 
msXX 
=XX 
newXX 
MemoryStreamXX  ,
(XX, -
)XX- .
)XX. /
{YY 
bfZZ 
.ZZ 
	SerializeZZ 
(ZZ 
msZZ 
,ZZ  
dataZZ! %
)ZZ% &
;ZZ& '
dataSerialized[[ 
=[[  
ms[[! #
.[[# $
ToArray[[$ +
([[+ ,
)[[, -
;[[- .
}\\ G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_75b]] G
.]]G H
BadSink]]H O
(]]O P
dataSerialized]]P ^
)]]` a
;]]a b
}^^ 	
catch__ 
(__ "
SerializationException__ %
exceptSerialize__& 5
)__5 6
{`` 	
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa 
.aa 
LogLevelaa '
.aa' (
Warnaa( ,
,aa, -
$straa. X
,aaX Y
exceptSerializeaaZ i
)aai j
;aaj k
}bb 	
}cc 
publicff 

overrideff 
voidff 
Goodff 
(ff 
)ff 
{gg 
GoodG2Bhh 
(hh 
)hh 
;hh 
}ii 
privatell 
staticll 
voidll 
GoodG2Bll 
(ll  
)ll  !
{mm 
intnn 
datann 
;nn 
datapp 
=pp 
$numpp 
;pp 
byterr 
[rr 
]rr 
dataSerializedrr 
=rr 
nullrr  $
;rr$ %
tryss 
{tt 	
BinaryFormatteruu 
bfuu 
=uu  
newuu! $
BinaryFormatteruu% 4
(uu4 5
)uu5 6
;uu6 7
usingvv 
(vv 
varvv 
msvv 
=vv 
newvv 
MemoryStreamvv  ,
(vv, -
)vv- .
)vv. /
{ww 
bfxx 
.xx 
	Serializexx 
(xx 
msxx 
,xx  
dataxx! %
)xx% &
;xx& '
dataSerializedyy 
=yy  
msyy! #
.yy# $
ToArrayyy$ +
(yy+ ,
)yy, -
;yy- .
}zz G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_75b{{ G
.{{G H
GoodG2BSink{{H S
({{S T
dataSerialized{{T b
){{d e
;{{e f
}|| 	
catch}} 
(}} "
SerializationException}} %
exceptSerialize}}& 5
)}}5 6
{~~ 	
IO 
. 
Logger 
. 
Log 
( 
NLog 
. 
LogLevel '
.' (
Warn( ,
,, -
$str. X
,X Y
exceptSerializeZ i
)i j
;j k
}
ÄÄ 	
}
ÅÅ 
}ÉÉ 
}ÑÑ ›!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_75b A
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN Õ(
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	K
?CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_baseRR G

baseObjectRRH R
=RRS T
newRRU XK
>CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_bad	RRY ó
(
RRó ò
)
RRò ô
;
RRô ö

baseObjectSS 
.SS 
ActionSS 
(SS 
dataSS 
)SS  
;SS  !
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa K
?CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_basebb G

baseObjectbbH R
=bbS T
newbbU XO
BCWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_goodG2B	bbY õ
(
bbõ ú
)
bbú ù
;
bbù û

baseObjectcc 
.cc 
Actioncc 
(cc 
datacc 
)cc  
;cc  !
}dd 
}ff 
}gg å
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_bad D
:E FL
?CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_base	G Ü
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ı
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 K
?CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_base N
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} î
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class N
BCWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_goodG2B H
:I JL
?CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81_base	K ä
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" ”%
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_01 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
{RR 	
IOTT 
.TT 
	WriteLineTT 
(TT 
(TT 
shortTT 
)TT  
dataTT  $
)TT$ %
;TT% &
}UU 	
}VV 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B[[ 
([[ 
)[[ 
;[[ 
}\\ 
private__ 
void__ 
GoodG2B__ 
(__ 
)__ 
{`` 
intaa 
dataaa 
;aa 
datacc 
=cc 
$numcc 
;cc 
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
}jj 
}kk Ü/
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_02 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
true!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
falseff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
true{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì Î/
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_03 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
$num!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
$numff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
$num{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ‚1
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_04 A
:B C
AbstractTestCaseD T
{ 
private!! 
const!! 
bool!! 
PRIVATE_CONST_TRUE!! )
=!!* +
true!!, 0
;!!0 1
private"" 
const"" 
bool"" 
PRIVATE_CONST_FALSE"" *
=""+ ,
false""- 2
;""2 3
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
int'' 
data'' 
;'' 
if(( 

((( 
PRIVATE_CONST_TRUE(( 
)(( 
{)) 	
data** 
=** 
int** 
.** 
MinValue** 
;**  
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
try// 
{00 
listener11 
=11 
new11 "
TcpListener11# .
(11. /
	IPAddress11/ 8
.118 9
Parse119 >
(11> ?
$str11? K
)11K L
,11L M
$num11N S
)11S T
;11T U
listener22 
.22 
Start22 "
(22" #
)22# $
;22$ %
using33 
(33 
	TcpClient33 $
tcpConn33% ,
=33- .
listener33/ 7
.337 8
AcceptTcpClient338 G
(33G H
)33H I
)33I J
{44 
using66 
(66 
StreamReader66 +
sr66, .
=66/ 0
new661 4
StreamReader665 A
(66A B
tcpConn66B I
.66I J
	GetStream66J S
(66S T
)66T U
)66U V
)66V W
{77 
string99 "
stringNumber99# /
=990 1
sr992 4
.994 5
ReadLine995 =
(99= >
)99> ?
;99? @
if:: 
(::  
stringNumber::  ,
!=::- /
null::0 4
)::4 5
{;; 
try<<  #
{==  !
data>>$ (
=>>) *
int>>+ .
.>>. /
Parse>>/ 4
(>>4 5
stringNumber>>5 A
.>>A B
Trim>>B F
(>>F G
)>>G H
)>>H I
;>>I J
}??  !
catch@@  %
(@@% &
FormatException@@& 5
exceptNumberFormat@@6 H
)@@H I
{AA  !
IOBB$ &
.BB& '
LoggerBB' -
.BB- .
LogBB. 1
(BB1 2
NLogBB2 6
.BB6 7
LogLevelBB7 ?
.BB? @
WarnBB@ D
,BBD E
exceptNumberFormatBBF X
,BBX Y
$str	BBZ å
)
BBå ç
;
BBç é
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryNN 
{OO 
ifPP 
(PP 
listenerPP $
!=PP% '
nullPP( ,
)PP, -
{QQ 
listenerRR $
.RR$ %
StopRR% )
(RR) *
)RR* +
;RR+ ,
}SS 
}TT 
catchUU 
(UU 
SocketExceptionUU )
seUU* ,
)UU, -
{VV 
IOWW 
.WW 
LoggerWW !
.WW! "
LogWW" %
(WW% &
NLogWW& *
.WW* +
LogLevelWW+ 3
.WW3 4
WarnWW4 8
,WW8 9
seWW: <
,WW< =
$strWW> Y
)WWY Z
;WWZ [
}XX 
}YY 
}ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
intll 
datall 
;ll 
ifmm 

(mm 
PRIVATE_CONST_FALSEmm 
)mm  
{nn 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
shortzz 
)zz  
datazz  $
)zz$ %
;zz% &
}{{ 	
}|| 
private 
void 
GoodG2B2 
( 
) 
{
ÄÄ 
int
ÅÅ 
data
ÅÅ 
;
ÅÅ 
if
ÇÇ 

(
ÇÇ  
PRIVATE_CONST_TRUE
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
else
áá 
{
àà 	
data
ãã 
=
ãã 
$num
ãã 
;
ãã 
}
åå 	
{
çç 	
IO
èè 
.
èè 
	WriteLine
èè 
(
èè 
(
èè 
short
èè 
)
èè  
data
èè  $
)
èè$ %
;
èè% &
}
êê 	
}
ëë 
public
ìì 

override
ìì 
void
ìì 
Good
ìì 
(
ìì 
)
ìì 
{
îî 
GoodG2B1
ïï 
(
ïï 
)
ïï 
;
ïï 
GoodG2B2
ññ 
(
ññ 
)
ññ 
;
ññ 
}
óó 
}ôô 
}öö ô1
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_05 A
:B C
AbstractTestCaseD T
{ 
private!! 
bool!! 
privateTrue!! 
=!! 
true!! #
;!!# $
private"" 
bool"" 
privateFalse"" 
="" 
false""  %
;""% &
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
int'' 
data'' 
;'' 
if(( 

((( 
privateTrue(( 
)(( 
{)) 	
data** 
=** 
int** 
.** 
MinValue** 
;**  
{,, 
TcpListener-- 
listener-- $
=--% &
null--' +
;--+ ,
try// 
{00 
listener11 
=11 
new11 "
TcpListener11# .
(11. /
	IPAddress11/ 8
.118 9
Parse119 >
(11> ?
$str11? K
)11K L
,11L M
$num11N S
)11S T
;11T U
listener22 
.22 
Start22 "
(22" #
)22# $
;22$ %
using33 
(33 
	TcpClient33 $
tcpConn33% ,
=33- .
listener33/ 7
.337 8
AcceptTcpClient338 G
(33G H
)33H I
)33I J
{44 
using66 
(66 
StreamReader66 +
sr66, .
=66/ 0
new661 4
StreamReader665 A
(66A B
tcpConn66B I
.66I J
	GetStream66J S
(66S T
)66T U
)66U V
)66V W
{77 
string99 "
stringNumber99# /
=990 1
sr992 4
.994 5
ReadLine995 =
(99= >
)99> ?
;99? @
if:: 
(::  
stringNumber::  ,
!=::- /
null::0 4
)::4 5
{;; 
try<<  #
{==  !
data>>$ (
=>>) *
int>>+ .
.>>. /
Parse>>/ 4
(>>4 5
stringNumber>>5 A
.>>A B
Trim>>B F
(>>F G
)>>G H
)>>H I
;>>I J
}??  !
catch@@  %
(@@% &
FormatException@@& 5
exceptNumberFormat@@6 H
)@@H I
{AA  !
IOBB$ &
.BB& '
LoggerBB' -
.BB- .
LogBB. 1
(BB1 2
NLogBB2 6
.BB6 7
LogLevelBB7 ?
.BB? @
WarnBB@ D
,BBD E
exceptNumberFormatBBF X
,BBX Y
$str	BBZ å
)
BBå ç
;
BBç é
}CC  !
}DD 
}EE 
}FF 
}GG 
catchHH 
(HH 
IOExceptionHH "
exceptIOHH# +
)HH+ ,
{II 
IOJJ 
.JJ 
LoggerJJ 
.JJ 
LogJJ !
(JJ! "
NLogJJ" &
.JJ& '
LogLevelJJ' /
.JJ/ 0
WarnJJ0 4
,JJ4 5
exceptIOJJ6 >
,JJ> ?
$strJJ@ [
)JJ[ \
;JJ\ ]
}KK 
finallyLL 
{MM 
tryNN 
{OO 
ifPP 
(PP 
listenerPP $
!=PP% '
nullPP( ,
)PP, -
{QQ 
listenerRR $
.RR$ %
StopRR% )
(RR) *
)RR* +
;RR+ ,
}SS 
}TT 
catchUU 
(UU 
SocketExceptionUU )
seUU* ,
)UU, -
{VV 
IOWW 
.WW 
LoggerWW !
.WW! "
LogWW" %
(WW% &
NLogWW& *
.WW* +
LogLevelWW+ 3
.WW3 4
WarnWW4 8
,WW8 9
seWW: <
,WW< =
$strWW> Y
)WWY Z
;WWZ [
}XX 
}YY 
}ZZ 
}[[ 	
else\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
privatejj 
voidjj 
GoodG2B1jj 
(jj 
)jj 
{kk 
intll 
datall 
;ll 
ifmm 

(mm 
privateFalsemm 
)mm 
{nn 	
dataqq 
=qq 
$numqq 
;qq 
}rr 	
elsess 
{tt 	
datavv 
=vv 
$numvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
shortzz 
)zz  
datazz  $
)zz$ %
;zz% &
}{{ 	
}|| 
private 
void 
GoodG2B2 
( 
) 
{
ÄÄ 
int
ÅÅ 
data
ÅÅ 
;
ÅÅ 
if
ÇÇ 

(
ÇÇ 
privateTrue
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
data
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
else
áá 
{
àà 	
data
ãã 
=
ãã 
$num
ãã 
;
ãã 
}
åå 	
{
çç 	
IO
èè 
.
èè 
	WriteLine
èè 
(
èè 
(
èè 
short
èè 
)
èè  
data
èè  $
)
èè$ %
;
èè% &
}
êê 	
}
ëë 
public
ìì 

override
ìì 
void
ìì 
Good
ìì 
(
ìì 
)
ìì 
{
îî 
GoodG2B1
ïï 
(
ïï 
)
ïï 
;
ïï 
GoodG2B2
ññ 
(
ññ 
)
ññ 
;
ññ 
}
óó 
}ôô 
}öö º1
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_06 A
:B C
AbstractTestCaseD T
{ 
private!! 
const!! 
int!! 
PRIVATE_CONST_FIVE!! (
=!!) *
$num!!+ ,
;!!, -
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_FIVE'' 
=='' !
$num''" #
)''# $
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
try.. 
{// 
listener00 
=00 
new00 "
TcpListener00# .
(00. /
	IPAddress00/ 8
.008 9
Parse009 >
(00> ?
$str00? K
)00K L
,00L M
$num00N S
)00S T
;00T U
listener11 
.11 
Start11 "
(11" #
)11# $
;11$ %
using22 
(22 
	TcpClient22 $
tcpConn22% ,
=22- .
listener22/ 7
.227 8
AcceptTcpClient228 G
(22G H
)22H I
)22I J
{33 
using55 
(55 
StreamReader55 +
sr55, .
=55/ 0
new551 4
StreamReader555 A
(55A B
tcpConn55B I
.55I J
	GetStream55J S
(55S T
)55T U
)55U V
)55V W
{66 
string88 "
stringNumber88# /
=880 1
sr882 4
.884 5
ReadLine885 =
(88= >
)88> ?
;88? @
if99 
(99  
stringNumber99  ,
!=99- /
null990 4
)994 5
{:: 
try;;  #
{<<  !
data==$ (
===) *
int==+ .
.==. /
Parse==/ 4
(==4 5
stringNumber==5 A
.==A B
Trim==B F
(==F G
)==G H
)==H I
;==I J
}>>  !
catch??  %
(??% &
FormatException??& 5
exceptNumberFormat??6 H
)??H I
{@@  !
IOAA$ &
.AA& '
LoggerAA' -
.AA- .
LogAA. 1
(AA1 2
NLogAA2 6
.AA6 7
LogLevelAA7 ?
.AA? @
WarnAA@ D
,AAD E
exceptNumberFormatAAF X
,AAX Y
$str	AAZ å
)
AAå ç
;
AAç é
}BB  !
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
finallyKK 
{LL 
tryMM 
{NN 
ifOO 
(OO 
listenerOO $
!=OO% '
nullOO( ,
)OO, -
{PP 
listenerQQ $
.QQ$ %
StopQQ% )
(QQ) *
)QQ* +
;QQ+ ,
}RR 
}SS 
catchTT 
(TT 
SocketExceptionTT )
seTT* ,
)TT, -
{UU 
IOVV 
.VV 
LoggerVV !
.VV! "
LogVV" %
(VV% &
NLogVV& *
.VV* +
LogLevelVV+ 3
.VV3 4
WarnVV4 8
,VV8 9
seVV: <
,VV< =
$strVV> Y
)VVY Z
;VVZ [
}WW 
}XX 
}YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
privateii 
voidii 
GoodG2B1ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
PRIVATE_CONST_FIVEll 
!=ll !
$numll" #
)ll# $
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
elserr 
{ss 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
shortyy 
)yy  
datayy  $
)yy$ %
;yy% &
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
int
ÄÄ 
data
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ  
PRIVATE_CONST_FIVE
ÅÅ 
==
ÅÅ !
$num
ÅÅ" #
)
ÅÅ# $
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
else
ÜÜ 
{
áá 	
data
ää 
=
ää 
$num
ää 
;
ää 
}
ãã 	
{
åå 	
IO
éé 
.
éé 
	WriteLine
éé 
(
éé 
(
éé 
short
éé 
)
éé  
data
éé  $
)
éé$ %
;
éé% &
}
èè 	
}
êê 
public
íí 

override
íí 
void
íí 
Good
íí 
(
íí 
)
íí 
{
ìì 
GoodG2B1
îî 
(
îî 
)
îî 
;
îî 
GoodG2B2
ïï 
(
ïï 
)
ïï 
;
ïï 
}
ññ 
}òò 
}ôô ç1
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_07 A
:B C
AbstractTestCaseD T
{ 
private!! 
int!! 
privateFive!! 
=!! 
$num!! 
;!!  
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
privateFive'' 
=='' 
$num'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
TcpListener,, 
listener,, $
=,,% &
null,,' +
;,,+ ,
try.. 
{// 
listener00 
=00 
new00 "
TcpListener00# .
(00. /
	IPAddress00/ 8
.008 9
Parse009 >
(00> ?
$str00? K
)00K L
,00L M
$num00N S
)00S T
;00T U
listener11 
.11 
Start11 "
(11" #
)11# $
;11$ %
using22 
(22 
	TcpClient22 $
tcpConn22% ,
=22- .
listener22/ 7
.227 8
AcceptTcpClient228 G
(22G H
)22H I
)22I J
{33 
using55 
(55 
StreamReader55 +
sr55, .
=55/ 0
new551 4
StreamReader555 A
(55A B
tcpConn55B I
.55I J
	GetStream55J S
(55S T
)55T U
)55U V
)55V W
{66 
string88 "
stringNumber88# /
=880 1
sr882 4
.884 5
ReadLine885 =
(88= >
)88> ?
;88? @
if99 
(99  
stringNumber99  ,
!=99- /
null990 4
)994 5
{:: 
try;;  #
{<<  !
data==$ (
===) *
int==+ .
.==. /
Parse==/ 4
(==4 5
stringNumber==5 A
.==A B
Trim==B F
(==F G
)==G H
)==H I
;==I J
}>>  !
catch??  %
(??% &
FormatException??& 5
exceptNumberFormat??6 H
)??H I
{@@  !
IOAA$ &
.AA& '
LoggerAA' -
.AA- .
LogAA. 1
(AA1 2
NLogAA2 6
.AA6 7
LogLevelAA7 ?
.AA? @
WarnAA@ D
,AAD E
exceptNumberFormatAAF X
,AAX Y
$str	AAZ å
)
AAå ç
;
AAç é
}BB  !
}CC 
}DD 
}EE 
}FF 
catchGG 
(GG 
IOExceptionGG "
exceptIOGG# +
)GG+ ,
{HH 
IOII 
.II 
LoggerII 
.II 
LogII !
(II! "
NLogII" &
.II& '
LogLevelII' /
.II/ 0
WarnII0 4
,II4 5
exceptIOII6 >
,II> ?
$strII@ [
)II[ \
;II\ ]
}JJ 
finallyKK 
{LL 
tryMM 
{NN 
ifOO 
(OO 
listenerOO $
!=OO% '
nullOO( ,
)OO, -
{PP 
listenerQQ $
.QQ$ %
StopQQ% )
(QQ) *
)QQ* +
;QQ+ ,
}RR 
}SS 
catchTT 
(TT 
SocketExceptionTT )
seTT* ,
)TT, -
{UU 
IOVV 
.VV 
LoggerVV !
.VV! "
LogVV" %
(VV% &
NLogVV& *
.VV* +
LogLevelVV+ 3
.VV3 4
WarnVV4 8
,VV8 9
seVV: <
,VV< =
$strVV> Y
)VVY Z
;VVZ [
}WW 
}XX 
}YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc 
)cc  
datacc  $
)cc$ %
;cc% &
}dd 	
}ee 
privateii 
voidii 
GoodG2B1ii 
(ii 
)ii 
{jj 
intkk 
datakk 
;kk 
ifll 

(ll 
privateFivell 
!=ll 
$numll 
)ll 
{mm 	
datapp 
=pp 
$numpp 
;pp 
}qq 	
elserr 
{ss 	
datauu 
=uu 
$numuu 
;uu 
}vv 	
{ww 	
IOyy 
.yy 
	WriteLineyy 
(yy 
(yy 
shortyy 
)yy  
datayy  $
)yy$ %
;yy% &
}zz 	
}{{ 
private~~ 
void~~ 
GoodG2B2~~ 
(~~ 
)~~ 
{ 
int
ÄÄ 
data
ÄÄ 
;
ÄÄ 
if
ÅÅ 

(
ÅÅ 
privateFive
ÅÅ 
==
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
else
ÜÜ 
{
áá 	
data
ää 
=
ää 
$num
ää 
;
ää 
}
ãã 	
{
åå 	
IO
éé 
.
éé 
	WriteLine
éé 
(
éé 
(
éé 
short
éé 
)
éé  
data
éé  $
)
éé$ %
;
éé% &
}
èè 	
}
êê 
public
íí 

override
íí 
void
íí 
Good
íí 
(
íí 
)
íí 
{
ìì 
GoodG2B1
îî 
(
îî 
)
îî 
;
îî 
GoodG2B2
ïï 
(
ïï 
)
ïï 
;
ïï 
}
ññ 
}òò 
}ôô Ê3
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_08 A
:B C
AbstractTestCaseD T
{ 
private!! 
static!! 
bool!! 
PrivateReturnsTrue!! *
(!!* +
)!!+ ,
{"" 
return## 
true## 
;## 
}$$ 
private&& 
static&& 
bool&& 
PrivateReturnsFalse&& +
(&&+ ,
)&&, -
{'' 
return(( 
false(( 
;(( 
})) 
public,, 

override,, 
void,, 
Bad,, 
(,, 
),, 
{-- 
int.. 
data.. 
;.. 
if// 

(// 
PrivateReturnsTrue// 
(// 
)//  
)//  !
{00 	
data11 
=11 
int11 
.11 
MinValue11 
;11  
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
try66 
{77 
listener88 
=88 
new88 "
TcpListener88# .
(88. /
	IPAddress88/ 8
.888 9
Parse889 >
(88> ?
$str88? K
)88K L
,88L M
$num88N S
)88S T
;88T U
listener99 
.99 
Start99 "
(99" #
)99# $
;99$ %
using:: 
(:: 
	TcpClient:: $
tcpConn::% ,
=::- .
listener::/ 7
.::7 8
AcceptTcpClient::8 G
(::G H
)::H I
)::I J
{;; 
using== 
(== 
StreamReader== +
sr==, .
===/ 0
new==1 4
StreamReader==5 A
(==A B
tcpConn==B I
.==I J
	GetStream==J S
(==S T
)==T U
)==U V
)==V W
{>> 
string@@ "
stringNumber@@# /
=@@0 1
sr@@2 4
.@@4 5
ReadLine@@5 =
(@@= >
)@@> ?
;@@? @
ifAA 
(AA  
stringNumberAA  ,
!=AA- /
nullAA0 4
)AA4 5
{BB 
tryCC  #
{DD  !
dataEE$ (
=EE) *
intEE+ .
.EE. /
ParseEE/ 4
(EE4 5
stringNumberEE5 A
.EEA B
TrimEEB F
(EEF G
)EEG H
)EEH I
;EEI J
}FF  !
catchGG  %
(GG% &
FormatExceptionGG& 5
exceptNumberFormatGG6 H
)GGH I
{HH  !
IOII$ &
.II& '
LoggerII' -
.II- .
LogII. 1
(II1 2
NLogII2 6
.II6 7
LogLevelII7 ?
.II? @
WarnII@ D
,IID E
exceptNumberFormatIIF X
,IIX Y
$str	IIZ å
)
IIå ç
;
IIç é
}JJ  !
}KK 
}LL 
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO "
exceptIOOO# +
)OO+ ,
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ !
(QQ! "
NLogQQ" &
.QQ& '
LogLevelQQ' /
.QQ/ 0
WarnQQ0 4
,QQ4 5
exceptIOQQ6 >
,QQ> ?
$strQQ@ [
)QQ[ \
;QQ\ ]
}RR 
finallySS 
{TT 
tryUU 
{VV 
ifWW 
(WW 
listenerWW $
!=WW% '
nullWW( ,
)WW, -
{XX 
listenerYY $
.YY$ %
StopYY% )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
SocketException\\ )
se\\* ,
)\\, -
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
se^^: <
,^^< =
$str^^> Y
)^^Y Z
;^^Z [
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
{ii 	
IOkk 
.kk 
	WriteLinekk 
(kk 
(kk 
shortkk 
)kk  
datakk  $
)kk$ %
;kk% &
}ll 	
}mm 
privateqq 
voidqq 
GoodG2B1qq 
(qq 
)qq 
{rr 
intss 
datass 
;ss 
iftt 

(tt 
PrivateReturnsFalsett 
(tt  
)tt  !
)tt! "
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
{ 	
IO
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ 
(
ÅÅ 
(
ÅÅ 
short
ÅÅ 
)
ÅÅ  
data
ÅÅ  $
)
ÅÅ$ %
;
ÅÅ% &
}
ÇÇ 	
}
ÉÉ 
private
ÜÜ 
void
ÜÜ 
GoodG2B2
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 
int
àà 
data
àà 
;
àà 
if
ââ 

(
ââ  
PrivateReturnsTrue
ââ 
(
ââ 
)
ââ  
)
ââ  !
{
ää 	
data
åå 
=
åå 
$num
åå 
;
åå 
}
çç 	
else
éé 
{
èè 	
data
íí 
=
íí 
$num
íí 
;
íí 
}
ìì 	
{
îî 	
IO
ññ 
.
ññ 
	WriteLine
ññ 
(
ññ 
(
ññ 
short
ññ 
)
ññ  
data
ññ  $
)
ññ$ %
;
ññ% &
}
óó 	
}
òò 
public
öö 

override
öö 
void
öö 
Good
öö 
(
öö 
)
öö 
{
õõ 
GoodG2B1
úú 
(
úú 
)
úú 
;
úú 
GoodG2B2
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 
}†† 
}°° ì0
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_09 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_TRUE!! #
)!!# $
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff !
STATIC_READONLY_FALSEff $
)ff$ %
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{  
STATIC_READONLY_TRUE{{ #
){{# $
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ı/
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_10 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticTrue!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff 
staticFalseff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 

staticTrue{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ‰0
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_11 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! 
StaticReturnsTrue!!  
(!!  !
)!!! "
)!!" #
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff 
StaticReturnsFalseff !
(ff! "
)ff" #
)ff# $
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 
StaticReturnsTrue{{  
({{  !
){{! "
){{" #
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ï*
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_12 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! $
StaticReturnsTrueOrFalse!! '
(!!' (
)!!( )
)!!) *
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
privatecc 
voidcc 
GoodG2Bcc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff $
StaticReturnsTrueOrFalseff '
(ff' (
)ff( )
)ff) *
{gg 	
dataii 
=ii 
$numii 
;ii 
}jj 	
elsekk 
{ll 	
datann 
=nn 
$numnn 
;nn 
}oo 	
{pp 	
IOrr 
.rr 
	WriteLinerr 
(rr 
(rr 
shortrr 
)rr  
datarr  $
)rr$ %
;rr% &
}ss 	
}tt 
publicvv 

overridevv 
voidvv 
Goodvv 
(vv 
)vv 
{ww 
GoodG2Bxx 
(xx 
)xx 
;xx 
}yy 
}{{ 
}|| ¯0
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_13 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!!  
STATIC_READONLY_FIVE!! #
==!!$ &
$num!!' (
)!!( )
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff  
STATIC_READONLY_FIVEff #
!=ff$ &
$numff' (
)ff( )
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{  
STATIC_READONLY_FIVE{{ #
=={{$ &
$num{{' (
){{( )
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ⁄0
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_14 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
if!! 

(!! 
IO!! 
.!! 

staticFive!! 
==!! 
$num!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatecc 
voidcc 
GoodG2B1cc 
(cc 
)cc 
{dd 
intee 
dataee 
;ee 
ifff 

(ff 
IOff 
.ff 

staticFiveff 
!=ff 
$numff 
)ff 
{gg 	
datajj 
=jj 
$numjj 
;jj 
}kk 	
elsell 
{mm 	
dataoo 
=oo 
$numoo 
;oo 
}pp 	
{qq 	
IOss 
.ss 
	WriteLiness 
(ss 
(ss 
shortss 
)ss  
datass  $
)ss$ %
;ss% &
}tt 	
}uu 
privatexx 
voidxx 
GoodG2B2xx 
(xx 
)xx 
{yy 
intzz 
datazz 
;zz 
if{{ 

({{ 
IO{{ 
.{{ 

staticFive{{ 
=={{ 
$num{{ 
){{ 
{|| 	
data~~ 
=~~ 
$num~~ 
;~~ 
} 	
else
ÄÄ 
{
ÅÅ 	
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
{
ÜÜ 	
IO
àà 
.
àà 
	WriteLine
àà 
(
àà 
(
àà 
short
àà 
)
àà  
data
àà  $
)
àà$ %
;
àà% &
}
ââ 	
}
ää 
public
åå 

override
åå 
void
åå 
Good
åå 
(
åå 
)
åå 
{
çç 
GoodG2B1
éé 
(
éé 
)
éé 
;
éé 
GoodG2B2
èè 
(
èè 
)
èè 
;
èè 
}
êê 
}íí 
}ìì ≈2
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_15 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
=   
$num   
;   
switch!! 
(!! 
$num!! 
)!! 
{"" 	
case## 
$num## 
:## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$  
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
try)) 
{** 
listener++ 
=++ 
new++ "
TcpListener++# .
(++. /
	IPAddress++/ 8
.++8 9
Parse++9 >
(++> ?
$str++? K
)++K L
,++L M
$num++N S
)++S T
;++T U
listener,, 
.,, 
Start,, "
(,," #
),,# $
;,,$ %
using-- 
(-- 
	TcpClient-- $
tcpConn--% ,
=--- .
listener--/ 7
.--7 8
AcceptTcpClient--8 G
(--G H
)--H I
)--I J
{.. 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
tcpConn00B I
.00I J
	GetStream00J S
(00S T
)00T U
)00U V
)00V W
{11 
string33 "
stringNumber33# /
=330 1
sr332 4
.334 5
ReadLine335 =
(33= >
)33> ?
;33? @
if44 
(44  
stringNumber44  ,
!=44- /
null440 4
)444 5
{55 
try66  #
{77  !
data88$ (
=88) *
int88+ .
.88. /
Parse88/ 4
(884 5
stringNumber885 A
.88A B
Trim88B F
(88F G
)88G H
)88H I
;88I J
}99  !
catch::  %
(::% &
FormatException::& 5
exceptNumberFormat::6 H
)::H I
{;;  !
IO<<$ &
.<<& '
Logger<<' -
.<<- .
Log<<. 1
(<<1 2
NLog<<2 6
.<<6 7
LogLevel<<7 ?
.<<? @
Warn<<@ D
,<<D E
exceptNumberFormat<<F X
,<<X Y
$str	<<Z å
)
<<å ç
;
<<ç é
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryHH 
{II 
ifJJ 
(JJ 
listenerJJ $
!=JJ% '
nullJJ( ,
)JJ, -
{KK 
listenerLL $
.LL$ %
StopLL% )
(LL) *
)LL* +
;LL+ ,
}MM 
}NN 
catchOO 
(OO 
SocketExceptionOO )
seOO* ,
)OO, -
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
seQQ: <
,QQ< =
$strQQ> Y
)QQY Z
;QQZ [
}RR 
}SS 
}TT 
breakUU 
;UU 
defaultVV 
:VV 
dataYY 
=YY 
$numYY 
;YY 
breakZZ 
;ZZ 
}[[ 	
{\\ 	
IO^^ 
.^^ 
	WriteLine^^ 
(^^ 
(^^ 
short^^ 
)^^  
data^^  $
)^^$ %
;^^% &
}__ 	
}`` 
privatedd 
voiddd 
GoodG2B1dd 
(dd 
)dd 
{ee 
intff 
dataff 
=ff 
$numff 
;ff 
switchgg 
(gg 
$numgg 
)gg 
{hh 	
caseii 
$numii 
:ii 
datall 
=ll 
$numll 
;ll 
breakmm 
;mm 
defaultnn 
:nn 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
}rr 	
{ss 	
IOuu 
.uu 
	WriteLineuu 
(uu 
(uu 
shortuu 
)uu  
datauu  $
)uu$ %
;uu% &
}vv 	
}ww 
privatezz 
voidzz 
GoodG2B2zz 
(zz 
)zz 
{{{ 
int|| 
data|| 
=|| 
$num|| 
;|| 
switch}} 
(}} 
$num}} 
)}} 
{~~ 	
case 
$num 
: 
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
break
ÇÇ 
;
ÇÇ 
default
ÉÉ 
:
ÉÉ 
data
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
break
áá 
;
áá 
}
àà 	
{
ââ 	
IO
ãã 
.
ãã 
	WriteLine
ãã 
(
ãã 
(
ãã 
short
ãã 
)
ãã  
data
ãã  $
)
ãã$ %
;
ãã% &
}
åå 	
}
çç 
public
èè 

override
èè 
void
èè 
Good
èè 
(
èè 
)
èè 
{
êê 
GoodG2B1
ëë 
(
ëë 
)
ëë 
;
ëë 
GoodG2B2
íí 
(
íí 
)
íí 
;
íí 
}
ìì 
}ïï 
}ññ Ÿ'
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_16 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
while!! 
(!! 
true!! 
)!! 
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
private^^ 
void^^ 
GoodG2B^^ 
(^^ 
)^^ 
{__ 
int`` 
data`` 
;`` 
whileaa 
(aa 
trueaa 
)aa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
breakee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
shortii 
)ii  
dataii  $
)ii$ %
;ii% &
}jj 	
}kk 
publicmm 

overridemm 
voidmm 
Goodmm 
(mm 
)mm 
{nn 
GoodG2Boo 
(oo 
)oo 
;oo 
}pp 
}rr 
}ss …)
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_17 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
forRR 
(RR 
intRR 
iRR 
=RR 
$numRR 
;RR 
iRR 
<RR 
$numRR 
;RR 
iRR  
++RR  "
)RR" #
{SS 	
{TT 
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV #
)VV# $
dataVV$ (
)VV( )
;VV) *
}WW 
}XX 	
}YY 
private^^ 
void^^ 
GoodG2B^^ 
(^^ 
)^^ 
{__ 
int`` 
data`` 
;`` 
databb 
=bb 
$numbb 
;bb 
forcc 
(cc 
intcc 
icc 
=cc 
$numcc 
;cc 
icc 
<cc 
$numcc 
;cc 
icc  
++cc  "
)cc" #
{dd 	
{ee 
IOgg 
.gg 
	WriteLinegg 
(gg 
(gg 
shortgg #
)gg# $
datagg$ (
)gg( )
;gg) *
}hh 
}ii 	
}jj 
publicll 

overridell 
voidll 
Goodll 
(ll 
)ll 
{mm 
GoodG2Bnn 
(nn 
)nn 
;nn 
}oo 
}qq 
}rr â=
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_21 A
:B C
AbstractTestCaseD T
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 

badPrivate$$ 
=$$ 
true$$ 
;$$ 
data%% 
=%% 

Bad_source%% 
(%% 
)%% 
;%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
private,, 
int,, 

Bad_source,, 
(,, 
),, 
{-- 
int.. 
data.. 
;.. 
if// 

(// 

badPrivate// 
)// 
{00 	
data11 
=11 
int11 
.11 
MinValue11 
;11  
{33 
TcpListener44 
listener44 $
=44% &
null44' +
;44+ ,
try66 
{77 
listener88 
=88 
new88 "
TcpListener88# .
(88. /
	IPAddress88/ 8
.888 9
Parse889 >
(88> ?
$str88? K
)88K L
,88L M
$num88N S
)88S T
;88T U
listener99 
.99 
Start99 "
(99" #
)99# $
;99$ %
using:: 
(:: 
	TcpClient:: $
tcpConn::% ,
=::- .
listener::/ 7
.::7 8
AcceptTcpClient::8 G
(::G H
)::H I
)::I J
{;; 
using== 
(== 
StreamReader== +
sr==, .
===/ 0
new==1 4
StreamReader==5 A
(==A B
tcpConn==B I
.==I J
	GetStream==J S
(==S T
)==T U
)==U V
)==V W
{>> 
string@@ "
stringNumber@@# /
=@@0 1
sr@@2 4
.@@4 5
ReadLine@@5 =
(@@= >
)@@> ?
;@@? @
ifAA 
(AA  
stringNumberAA  ,
!=AA- /
nullAA0 4
)AA4 5
{BB 
tryCC  #
{DD  !
dataEE$ (
=EE) *
intEE+ .
.EE. /
ParseEE/ 4
(EE4 5
stringNumberEE5 A
.EEA B
TrimEEB F
(EEF G
)EEG H
)EEH I
;EEI J
}FF  !
catchGG  %
(GG% &
FormatExceptionGG& 5
exceptNumberFormatGG6 H
)GGH I
{HH  !
IOII$ &
.II& '
LoggerII' -
.II- .
LogII. 1
(II1 2
NLogII2 6
.II6 7
LogLevelII7 ?
.II? @
WarnII@ D
,IID E
exceptNumberFormatIIF X
,IIX Y
$str	IIZ å
)
IIå ç
;
IIç é
}JJ  !
}KK 
}LL 
}MM 
}NN 
catchOO 
(OO 
IOExceptionOO "
exceptIOOO# +
)OO+ ,
{PP 
IOQQ 
.QQ 
LoggerQQ 
.QQ 
LogQQ !
(QQ! "
NLogQQ" &
.QQ& '
LogLevelQQ' /
.QQ/ 0
WarnQQ0 4
,QQ4 5
exceptIOQQ6 >
,QQ> ?
$strQQ@ [
)QQ[ \
;QQ\ ]
}RR 
finallySS 
{TT 
tryUU 
{VV 
ifWW 
(WW 
listenerWW $
!=WW% '
nullWW( ,
)WW, -
{XX 
listenerYY $
.YY$ %
StopYY% )
(YY) *
)YY* +
;YY+ ,
}ZZ 
}[[ 
catch\\ 
(\\ 
SocketException\\ )
se\\* ,
)\\, -
{]] 
IO^^ 
.^^ 
Logger^^ !
.^^! "
Log^^" %
(^^% &
NLog^^& *
.^^* +
LogLevel^^+ 3
.^^3 4
Warn^^4 8
,^^8 9
se^^: <
,^^< =
$str^^> Y
)^^Y Z
;^^Z [
}__ 
}`` 
}aa 
}bb 	
elsecc 
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
returnii 
dataii 
;ii 
}jj 
privatemm 
boolmm 
goodG2B1_privatemm !
=mm" #
falsemm$ )
;mm) *
privatenn 
boolnn 
GoodG2B2_privatenn !
=nn" #
falsenn$ )
;nn) *
publicpp 

overridepp 
voidpp 
Goodpp 
(pp 
)pp 
{qq 
GoodG2B1rr 
(rr 
)rr 
;rr 
GoodG2B2ss 
(ss 
)ss 
;ss 
}tt 
privateww 
voidww 
GoodG2B1ww 
(ww 
)ww 
{xx 
intyy 
datayy 
;yy 
goodG2B1_privatezz 
=zz 
falsezz  
;zz  !
data{{ 
={{ 
GoodG2B1_source{{ 
({{ 
){{  
;{{  !
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
short~~ 
)~~  
data~~  $
)~~$ %
;~~% &
} 	
}
ÄÄ 
private
ÇÇ 
int
ÇÇ 
GoodG2B1_source
ÇÇ 
(
ÇÇ  
)
ÇÇ  !
{
ÉÉ 
int
ÑÑ 
data
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
if
ÖÖ 

(
ÖÖ 
goodG2B1_private
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
data
ââ 
=
ââ 
$num
ââ 
;
ââ 
}
ää 	
else
ãã 
{
åå 	
data
éé 
=
éé 
$num
éé 
;
éé 
}
èè 	
return
êê 
data
êê 
;
êê 
}
ëë 
private
îî 
void
îî 
GoodG2B2
îî 
(
îî 
)
îî 
{
ïï 
int
ññ 
data
ññ 
;
ññ 
GoodG2B2_private
óó 
=
óó 
true
óó 
;
óó  
data
òò 
=
òò 
GoodG2B2_source
òò 
(
òò 
)
òò  
;
òò  !
{
ôô 	
IO
õõ 
.
õõ 
	WriteLine
õõ 
(
õõ 
(
õõ 
short
õõ 
)
õõ  
data
õõ  $
)
õõ$ %
;
õõ% &
}
úú 	
}
ùù 
private
üü 
int
üü 
GoodG2B2_source
üü 
(
üü  
)
üü  !
{
†† 
int
°° 
data
°° 
=
°° 
$num
°° 
;
°° 
if
¢¢ 

(
¢¢ 
GoodG2B2_private
¢¢ 
)
¢¢ 
{
££ 	
data
•• 
=
•• 
$num
•• 
;
•• 
}
¶¶ 	
else
ßß 
{
®® 	
data
´´ 
=
´´ 
$num
´´ 
;
´´ 
}
¨¨ 	
return
≠≠ 
data
≠≠ 
;
≠≠ 
}
ÆÆ 
}∞∞ 
}±± ´
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22a B
:C D
AbstractTestCaseE U
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22b!! K
.!!K L
	BadSource!!L U
(!!U V
)!!V W
;!!W X
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22b88 K
.88K L
GoodG2B1Source88L Z
(88Z [
)88[ \
;88\ ]
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22bDD K
.DDK L
GoodG2B2SourceDDL Z
(DDZ [
)DD[ \
;DD\ ]
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL »+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22b B
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int   
data   
;   
if!! 

(!! H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22a!! H
.!!H I
badPublicStatic!!I X
)!!X Y
{"" 	
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
TcpListener&& 
listener&& $
=&&% &
null&&' +
;&&+ ,
try(( 
{)) 
listener** 
=** 
new** "
TcpListener**# .
(**. /
	IPAddress**/ 8
.**8 9
Parse**9 >
(**> ?
$str**? K
)**K L
,**L M
$num**N S
)**S T
;**T U
listener++ 
.++ 
Start++ "
(++" #
)++# $
;++$ %
using,, 
(,, 
	TcpClient,, $
tcpConn,,% ,
=,,- .
listener,,/ 7
.,,7 8
AcceptTcpClient,,8 G
(,,G H
),,H I
),,I J
{-- 
using// 
(// 
StreamReader// +
sr//, .
=/// 0
new//1 4
StreamReader//5 A
(//A B
tcpConn//B I
.//I J
	GetStream//J S
(//S T
)//T U
)//U V
)//V W
{00 
string22 "
stringNumber22# /
=220 1
sr222 4
.224 5
ReadLine225 =
(22= >
)22> ?
;22? @
if33 
(33  
stringNumber33  ,
!=33- /
null330 4
)334 5
{44 
try55  #
{66  !
data77$ (
=77) *
int77+ .
.77. /
Parse77/ 4
(774 5
stringNumber775 A
.77A B
Trim77B F
(77F G
)77G H
)77H I
;77I J
}88  !
catch99  %
(99% &
FormatException99& 5
exceptNumberFormat996 H
)99H I
{::  !
IO;;$ &
.;;& '
Logger;;' -
.;;- .
Log;;. 1
(;;1 2
NLog;;2 6
.;;6 7
LogLevel;;7 ?
.;;? @
Warn;;@ D
,;;D E
exceptNumberFormat;;F X
,;;X Y
$str	;;Z å
)
;;å ç
;
;;ç é
}<<  !
}== 
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA "
exceptIOAA# +
)AA+ ,
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC !
(CC! "
NLogCC" &
.CC& '
LogLevelCC' /
.CC/ 0
WarnCC0 4
,CC4 5
exceptIOCC6 >
,CC> ?
$strCC@ [
)CC[ \
;CC\ ]
}DD 
finallyEE 
{FF 
tryGG 
{HH 
ifII 
(II 
listenerII $
!=II% '
nullII( ,
)II, -
{JJ 
listenerKK $
.KK$ %
StopKK% )
(KK) *
)KK* +
;KK+ ,
}LL 
}MM 
catchNN 
(NN 
SocketExceptionNN )
seNN* ,
)NN, -
{OO 
IOPP 
.PP 
LoggerPP !
.PP! "
LogPP" %
(PP% &
NLogPP& *
.PP* +
LogLevelPP+ 3
.PP3 4
WarnPP4 8
,PP8 9
sePP: <
,PP< =
$strPP> Y
)PPY Z
;PPZ [
}QQ 
}RR 
}SS 
}TT 	
elseUU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
return[[ 
data[[ 
;[[ 
}\\ 
publicaa 

staticaa 
intaa 
GoodG2B1Sourceaa $
(aa$ %
)aa% &
{bb 
intcc 
datacc 
;cc 
ifdd 

(dd H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22add H
.ddH I 
goodG2B1PublicStaticddI ]
)dd] ^
{ee 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
returnoo 
dataoo 
;oo 
}pp 
publicss 

staticss 
intss 
GoodG2B2Sourcess $
(ss$ %
)ss% &
{tt 
intuu 
datauu 
;uu 
ifvv 

(vv H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22avv H
.vvH I 
GoodG2B2PublicStaticvvI ]
)vv] ^
{ww 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
else{{ 
{|| 	
data 
= 
$num 
; 
}
ÄÄ 	
return
ÅÅ 
data
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ Ò)
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_31 A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
dataCopy!! 
;!! 
{"" 	
int## 
data## 
;## 
data$$ 
=$$ 
int$$ 
.$$ 
MinValue$$ 
;$$  
{&& 
TcpListener'' 
listener'' $
=''% &
null''' +
;''+ ,
try)) 
{** 
listener++ 
=++ 
new++ "
TcpListener++# .
(++. /
	IPAddress++/ 8
.++8 9
Parse++9 >
(++> ?
$str++? K
)++K L
,++L M
$num++N S
)++S T
;++T U
listener,, 
.,, 
Start,, "
(,," #
),,# $
;,,$ %
using-- 
(-- 
	TcpClient-- $
tcpConn--% ,
=--- .
listener--/ 7
.--7 8
AcceptTcpClient--8 G
(--G H
)--H I
)--I J
{.. 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
tcpConn00B I
.00I J
	GetStream00J S
(00S T
)00T U
)00U V
)00V W
{11 
string33 "
stringNumber33# /
=330 1
sr332 4
.334 5
ReadLine335 =
(33= >
)33> ?
;33? @
if44 
(44  
stringNumber44  ,
!=44- /
null440 4
)444 5
{55 
try66  #
{77  !
data88$ (
=88) *
int88+ .
.88. /
Parse88/ 4
(884 5
stringNumber885 A
.88A B
Trim88B F
(88F G
)88G H
)88H I
;88I J
}99  !
catch::  %
(::% &
FormatException::& 5
exceptNumberFormat::6 H
)::H I
{;;  !
IO<<$ &
.<<& '
Logger<<' -
.<<- .
Log<<. 1
(<<1 2
NLog<<2 6
.<<6 7
LogLevel<<7 ?
.<<? @
Warn<<@ D
,<<D E
exceptNumberFormat<<F X
,<<X Y
$str	<<Z å
)
<<å ç
;
<<ç é
}==  !
}>> 
}?? 
}@@ 
}AA 
catchBB 
(BB 
IOExceptionBB "
exceptIOBB# +
)BB+ ,
{CC 
IODD 
.DD 
LoggerDD 
.DD 
LogDD !
(DD! "
NLogDD" &
.DD& '
LogLevelDD' /
.DD/ 0
WarnDD0 4
,DD4 5
exceptIODD6 >
,DD> ?
$strDD@ [
)DD[ \
;DD\ ]
}EE 
finallyFF 
{GG 
tryHH 
{II 
ifJJ 
(JJ 
listenerJJ $
!=JJ% '
nullJJ( ,
)JJ, -
{KK 
listenerLL $
.LL$ %
StopLL% )
(LL) *
)LL* +
;LL+ ,
}MM 
}NN 
catchOO 
(OO 
SocketExceptionOO )
seOO* ,
)OO, -
{PP 
IOQQ 
.QQ 
LoggerQQ !
.QQ! "
LogQQ" %
(QQ% &
NLogQQ& *
.QQ* +
LogLevelQQ+ 3
.QQ3 4
WarnQQ4 8
,QQ8 9
seQQ: <
,QQ< =
$strQQ> Y
)QQY Z
;QQZ [
}RR 
}SS 
}TT 
dataCopyUU 
=UU 
dataUU 
;UU 
}VV 	
{WW 	
intXX 
dataXX 
=XX 
dataCopyXX 
;XX  
{YY 
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
short[[ #
)[[# $
data[[$ (
)[[( )
;[[) *
}\\ 
}]] 	
}^^ 
publicaa 

overrideaa 
voidaa 
Goodaa 
(aa 
)aa 
{bb 
GoodG2Bcc 
(cc 
)cc 
;cc 
}dd 
privategg 
voidgg 
GoodG2Bgg 
(gg 
)gg 
{hh 
intii 
dataCopyii 
;ii 
{jj 	
intkk 
datakk 
;kk 
datamm 
=mm 
$nummm 
;mm 
dataCopynn 
=nn 
datann 
;nn 
}oo 	
{pp 	
intqq 
dataqq 
=qq 
dataCopyqq 
;qq  
{rr 
IOtt 
.tt 
	WriteLinett 
(tt 
(tt 
shorttt #
)tt# $
datatt$ (
)tt( )
;tt) *
}uu 
}vv 	
}ww 
}yy 
}zz ı)
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_41 A
:B C
AbstractTestCaseD T
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
short!! 
)!!  
data!!  $
)!!$ %
;!!% &
}"" 	
}## 
public%% 

override%% 
void%% 
Bad%% 
(%% 
)%% 
{&& 
int'' 
data'' 
;'' 
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;(( 
{** 	
TcpListener++ 
listener++  
=++! "
null++# '
;++' (
try-- 
{.. 
listener// 
=// 
new// 
TcpListener// *
(//* +
	IPAddress//+ 4
.//4 5
Parse//5 :
(//: ;
$str//; G
)//G H
,//H I
$num//J O
)//O P
;//P Q
listener00 
.00 
Start00 
(00 
)00  
;00  !
using11 
(11 
	TcpClient11  
tcpConn11! (
=11) *
listener11+ 3
.113 4
AcceptTcpClient114 C
(11C D
)11D E
)11E F
{22 
using44 
(44 
StreamReader44 '
sr44( *
=44+ ,
new44- 0
StreamReader441 =
(44= >
tcpConn44> E
.44E F
	GetStream44F O
(44O P
)44P Q
)44Q R
)44R S
{55 
string77 
stringNumber77 +
=77, -
sr77. 0
.770 1
ReadLine771 9
(779 :
)77: ;
;77; <
if88 
(88 
stringNumber88 (
!=88) +
null88, 0
)880 1
{99 
try:: 
{;; 
data<<  $
=<<% &
int<<' *
.<<* +
Parse<<+ 0
(<<0 1
stringNumber<<1 =
.<<= >
Trim<<> B
(<<B C
)<<C D
)<<D E
;<<E F
}== 
catch>> !
(>>! "
FormatException>>" 1
exceptNumberFormat>>2 D
)>>D E
{?? 
IO@@  "
.@@" #
Logger@@# )
.@@) *
Log@@* -
(@@- .
NLog@@. 2
.@@2 3
LogLevel@@3 ;
.@@; <
Warn@@< @
,@@@ A
exceptNumberFormat@@B T
,@@T U
$str	@@V à
)
@@à â
;
@@â ä
}AA 
}BB 
}CC 
}DD 
}EE 
catchFF 
(FF 
IOExceptionFF 
exceptIOFF '
)FF' (
{GG 
IOHH 
.HH 
LoggerHH 
.HH 
LogHH 
(HH 
NLogHH "
.HH" #
LogLevelHH# +
.HH+ ,
WarnHH, 0
,HH0 1
exceptIOHH2 :
,HH: ;
$strHH< W
)HHW X
;HHX Y
}II 
finallyJJ 
{KK 
tryLL 
{MM 
ifNN 
(NN 
listenerNN  
!=NN! #
nullNN$ (
)NN( )
{OO 
listenerPP  
.PP  !
StopPP! %
(PP% &
)PP& '
;PP' (
}QQ 
}RR 
catchSS 
(SS 
SocketExceptionSS %
seSS& (
)SS( )
{TT 
IOUU 
.UU 
LoggerUU 
.UU 
LogUU !
(UU! "
NLogUU" &
.UU& '
LogLevelUU' /
.UU/ 0
WarnUU0 4
,UU4 5
seUU6 8
,UU8 9
$strUU: U
)UUU V
;UUV W
}VV 
}WW 
}XX 	
BadSinkYY 
(YY 
dataYY 
)YY 
;YY 
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
}`` 
privatebb 
staticbb 
voidbb 
GoodG2BSinkbb #
(bb# $
intbb$ '
databb( ,
)bb- .
{cc 
{dd 	
IOff 
.ff 
	WriteLineff 
(ff 
(ff 
shortff 
)ff  
dataff  $
)ff$ %
;ff% &
}gg 	
}hh 
privatekk 
statickk 
voidkk 
GoodG2Bkk 
(kk  
)kk  !
{ll 
intmm 
datamm 
;mm 
dataoo 
=oo 
$numoo 
;oo 
GoodG2BSinkpp 
(pp 
datapp 
)pp 
;pp 
}qq 
}ss 
}tt ﬂ*
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_42 A
:B C
AbstractTestCaseD T
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
try%% 
{&& 
listener'' 
='' 
new'' 
TcpListener'' *
(''* +
	IPAddress''+ 4
.''4 5
Parse''5 :
('': ;
$str''; G
)''G H
,''H I
$num''J O
)''O P
;''P Q
listener(( 
.(( 
Start(( 
((( 
)((  
;((  !
using)) 
()) 
	TcpClient))  
tcpConn))! (
=))) *
listener))+ 3
.))3 4
AcceptTcpClient))4 C
())C D
)))D E
)))E F
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
tcpConn,,> E
.,,E F
	GetStream,,F O
(,,O P
),,P Q
),,Q R
),,R S
{-- 
string// 
stringNumber// +
=//, -
sr//. 0
.//0 1
ReadLine//1 9
(//9 :
)//: ;
;//; <
if00 
(00 
stringNumber00 (
!=00) +
null00, 0
)000 1
{11 
try22 
{33 
data44  $
=44% &
int44' *
.44* +
Parse44+ 0
(440 1
stringNumber441 =
.44= >
Trim44> B
(44B C
)44C D
)44D E
;44E F
}55 
catch66 !
(66! "
FormatException66" 1
exceptNumberFormat662 D
)66D E
{77 
IO88  "
.88" #
Logger88# )
.88) *
Log88* -
(88- .
NLog88. 2
.882 3
LogLevel883 ;
.88; <
Warn88< @
,88@ A
exceptNumberFormat88B T
,88T U
$str	88V à
)
88à â
;
88â ä
}99 
}:: 
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
finallyBB 
{CC 
tryDD 
{EE 
ifFF 
(FF 
listenerFF  
!=FF! #
nullFF$ (
)FF( )
{GG 
listenerHH  
.HH  !
StopHH! %
(HH% &
)HH& '
;HH' (
}II 
}JJ 
catchKK 
(KK 
SocketExceptionKK %
seKK& (
)KK( )
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
seMM6 8
,MM8 9
$strMM: U
)MMU V
;MMV W
}NN 
}OO 
}PP 	
returnQQ 
dataQQ 
;QQ 
}RR 
publicUU 

overrideUU 
voidUU 
BadUU 
(UU 
)UU 
{VV 
intWW 
dataWW 
=WW 
	BadSourceWW 
(WW 
)WW 
;WW 
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
shortZZ 
)ZZ  
dataZZ  $
)ZZ$ %
;ZZ% &
}[[ 	
}\\ 
private__ 
static__ 
int__ 
GoodG2BSource__ $
(__$ %
)__% &
{`` 
intaa 
dataaa 
;aa 
datacc 
=cc 
$numcc 
;cc 
returndd 
datadd 
;dd 
}ee 
privatehh 
statichh 
voidhh 
GoodG2Bhh 
(hh  
)hh  !
{ii 
intjj 
datajj 
=jj 
GoodG2BSourcejj  
(jj  !
)jj! "
;jj" #
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
publicqq 

overrideqq 
voidqq 
Goodqq 
(qq 
)qq 
{rr 
GoodG2Bss 
(ss 
)ss 
;ss 
}tt 
}vv 
}ww •,
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_45 A
:B C
AbstractTestCaseD T
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private!! 
void!! 
BadSink!! 
(!! 
)!! 
{"" 
int## 
data## 
=## 
dataBad## 
;## 
{$$ 	
IO&& 
.&& 
	WriteLine&& 
(&& 
(&& 
short&& 
)&&  
data&&  $
)&&$ %
;&&% &
}'' 	
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
data.. 
=.. 
int.. 
... 
MinValue.. 
;.. 
{00 	
TcpListener11 
listener11  
=11! "
null11# '
;11' (
try33 
{44 
listener55 
=55 
new55 
TcpListener55 *
(55* +
	IPAddress55+ 4
.554 5
Parse555 :
(55: ;
$str55; G
)55G H
,55H I
$num55J O
)55O P
;55P Q
listener66 
.66 
Start66 
(66 
)66  
;66  !
using77 
(77 
	TcpClient77  
tcpConn77! (
=77) *
listener77+ 3
.773 4
AcceptTcpClient774 C
(77C D
)77D E
)77E F
{88 
using:: 
(:: 
StreamReader:: '
sr::( *
=::+ ,
new::- 0
StreamReader::1 =
(::= >
tcpConn::> E
.::E F
	GetStream::F O
(::O P
)::P Q
)::Q R
)::R S
{;; 
string== 
stringNumber== +
===, -
sr==. 0
.==0 1
ReadLine==1 9
(==9 :
)==: ;
;==; <
if>> 
(>> 
stringNumber>> (
!=>>) +
null>>, 0
)>>0 1
{?? 
try@@ 
{AA 
dataBB  $
=BB% &
intBB' *
.BB* +
ParseBB+ 0
(BB0 1
stringNumberBB1 =
.BB= >
TrimBB> B
(BBB C
)BBC D
)BBD E
;BBE F
}CC 
catchDD !
(DD! "
FormatExceptionDD" 1
exceptNumberFormatDD2 D
)DDD E
{EE 
IOFF  "
.FF" #
LoggerFF# )
.FF) *
LogFF* -
(FF- .
NLogFF. 2
.FF2 3
LogLevelFF3 ;
.FF; <
WarnFF< @
,FF@ A
exceptNumberFormatFFB T
,FFT U
$str	FFV à
)
FFà â
;
FFâ ä
}GG 
}HH 
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL 
exceptIOLL '
)LL' (
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN 
(NN 
NLogNN "
.NN" #
LogLevelNN# +
.NN+ ,
WarnNN, 0
,NN0 1
exceptIONN2 :
,NN: ;
$strNN< W
)NNW X
;NNX Y
}OO 
finallyPP 
{QQ 
tryRR 
{SS 
ifTT 
(TT 
listenerTT  
!=TT! #
nullTT$ (
)TT( )
{UU 
listenerVV  
.VV  !
StopVV! %
(VV% &
)VV& '
;VV' (
}WW 
}XX 
catchYY 
(YY 
SocketExceptionYY %
seYY& (
)YY( )
{ZZ 
IO[[ 
.[[ 
Logger[[ 
.[[ 
Log[[ !
([[! "
NLog[[" &
.[[& '
LogLevel[[' /
.[[/ 0
Warn[[0 4
,[[4 5
se[[6 8
,[[8 9
$str[[: U
)[[U V
;[[V W
}\\ 
}]] 
}^^ 	
dataBad__ 
=__ 
data__ 
;__ 
BadSink`` 
(`` 
)`` 
;`` 
}aa 
publicdd 

overridedd 
voiddd 
Gooddd 
(dd 
)dd 
{ee 
GoodG2Bff 
(ff 
)ff 
;ff 
}gg 
privateii 
voidii 
GoodG2BSinkii 
(ii 
)ii 
{jj 
intkk 
datakk 
=kk 
dataGoodG2Bkk 
;kk 
{ll 	
IOnn 
.nn 
	WriteLinenn 
(nn 
(nn 
shortnn 
)nn  
datann  $
)nn$ %
;nn% &
}oo 	
}pp 
privatess 
voidss 
GoodG2Bss 
(ss 
)ss 
{tt 
intuu 
datauu 
;uu 
dataww 
=ww 
$numww 
;ww 
dataGoodG2Bxx 
=xx 
dataxx 
;xx 
GoodG2BSinkyy 
(yy 
)yy 
;yy 
}zz 
}|| 
}}} ´%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_51a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
TcpListener## 
listener##  
=##! "
null### '
;##' (
try%% 
{&& 
listener'' 
='' 
new'' 
TcpListener'' *
(''* +
	IPAddress''+ 4
.''4 5
Parse''5 :
('': ;
$str''; G
)''G H
,''H I
$num''J O
)''O P
;''P Q
listener(( 
.(( 
Start(( 
((( 
)((  
;((  !
using)) 
()) 
	TcpClient))  
tcpConn))! (
=))) *
listener))+ 3
.))3 4
AcceptTcpClient))4 C
())C D
)))D E
)))E F
{** 
using,, 
(,, 
StreamReader,, '
sr,,( *
=,,+ ,
new,,- 0
StreamReader,,1 =
(,,= >
tcpConn,,> E
.,,E F
	GetStream,,F O
(,,O P
),,P Q
),,Q R
),,R S
{-- 
string// 
stringNumber// +
=//, -
sr//. 0
.//0 1
ReadLine//1 9
(//9 :
)//: ;
;//; <
if00 
(00 
stringNumber00 (
!=00) +
null00, 0
)000 1
{11 
try22 
{33 
data44  $
=44% &
int44' *
.44* +
Parse44+ 0
(440 1
stringNumber441 =
.44= >
Trim44> B
(44B C
)44C D
)44D E
;44E F
}55 
catch66 !
(66! "
FormatException66" 1
exceptNumberFormat662 D
)66D E
{77 
IO88  "
.88" #
Logger88# )
.88) *
Log88* -
(88- .
NLog88. 2
.882 3
LogLevel883 ;
.88; <
Warn88< @
,88@ A
exceptNumberFormat88B T
,88T U
$str	88V à
)
88à â
;
88â ä
}99 
}:: 
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> 
exceptIO>> '
)>>' (
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ 
(@@ 
NLog@@ "
.@@" #
LogLevel@@# +
.@@+ ,
Warn@@, 0
,@@0 1
exceptIO@@2 :
,@@: ;
$str@@< W
)@@W X
;@@X Y
}AA 
finallyBB 
{CC 
tryDD 
{EE 
ifFF 
(FF 
listenerFF  
!=FF! #
nullFF$ (
)FF( )
{GG 
listenerHH  
.HH  !
StopHH! %
(HH% &
)HH& '
;HH' (
}II 
}JJ 
catchKK 
(KK 
SocketExceptionKK %
seKK& (
)KK( )
{LL 
IOMM 
.MM 
LoggerMM 
.MM 
LogMM !
(MM! "
NLogMM" &
.MM& '
LogLevelMM' /
.MM/ 0
WarnMM0 4
,MM4 5
seMM6 8
,MM8 9
$strMM: U
)MMU V
;MMV W
}NN 
}OO 
}PP 	H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_51bQQ D
.QQD E
BadSinkQQE L
(QQL M
dataQQM Q
)QQS T
;QQT U
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
void[[ 
GoodG2B[[ 
([[ 
)[[ 
{\\ 
int]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_51b`` D
.``D E
GoodG2BSink``E P
(``P Q
data``Q U
)``W X
;``X Y
}aa 
}cc 
}dd °	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_51b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, ´%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52bRR D
.RRD E
BadSinkRRE L
(RRL M
dataRRM Q
)RRR S
;RRS T
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52baa D
.aaD E
GoodG2BSinkaaE P
(aaP Q
dataaaQ U
)aaV W
;aaW X
}bb 
}dd 
}ee ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' °	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ´%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53bRR D
.RRD E
BadSinkRRE L
(RRL M
dataRRM Q
)RRR S
;RRS T
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53baa D
.aaD E
GoodG2BSinkaaE P
(aaP Q
dataaaQ U
)aaV W
;aaW X
}bb 
}dd 
}ee ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' °	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53d B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- ´%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54bRR D
.RRD E
BadSinkRRE L
(RRL M
dataRRM Q
)RRR S
;RRS T
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
void\\ 
GoodG2B\\ 
(\\ 
)\\ 
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54baa D
.aaD E
GoodG2BSinkaaE P
(aaP Q
dataaaQ U
)aaV W
;aaW X
}bb 
}dd 
}ee ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54b B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54c D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54c## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54c B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54d D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54d## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54d B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54e D
.D E
BadSinkE L
(L M
dataM Q
)R S
;S T
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54e## D
.##D E
GoodG2BSink##E P
(##P Q
data##Q U
)##V W
;##W X
}$$ 
}&& 
}'' °	
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54e B
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Ò
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_61a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_61b O
.O P
	BadSourceP Y
(Y Z
)Z [
;[ \
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_61b++ O
.++O P
GoodG2BSource++P ]
(++] ^
)++^ _
;++_ `
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 Ÿ!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_61b B
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
returnRR 
dataRR 
;RR 
}SS 
publicXX 

staticXX 
intXX 
GoodG2BSourceXX #
(XX# $
)XX$ %
{YY 
intZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
return]] 
data]] 
;]] 
}^^ 
}`` 
}aa £*
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_66a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
intRR 
[RR 
]RR 
	dataArrayRR 
=RR 
newRR 
intRR !
[RR! "
$numRR" #
]RR# $
;RR$ %
	dataArraySS 
[SS 
$numSS 
]SS 
=SS 
dataSS 
;SS H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_66bTT D
.TTD E
BadSinkTTE L
(TTL M
	dataArrayTTM V
)TTX Y
;TTY Z
}UU 
publicXX 

overrideXX 
voidXX 
GoodXX 
(XX 
)XX 
{YY 
GoodG2BZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
private^^ 
static^^ 
void^^ 
GoodG2B^^ 
(^^  
)^^  !
{__ 
int`` 
data`` 
;`` 
databb 
=bb 
$numbb 
;bb 
intcc 
[cc 
]cc 
	dataArraycc 
=cc 
newcc 
intcc !
[cc! "
$numcc" #
]cc# $
;cc$ %
	dataArraydd 
[dd 
$numdd 
]dd 
=dd 
datadd 
;dd H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_66bee D
.eeD E
GoodG2BSinkeeE P
(eeP Q
	dataArrayeeQ Z
)ee\ ]
;ee] ^
}ff 
}hh 
}ii ˜
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_66b B
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// è+
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67a B
:C D
AbstractTestCaseE U
{ 
public 

class 
	Container 
{ 
public   
int   
containerOne   
;    
}!! 
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
data&& 
=&& 
int&& 
.&& 
MinValue&& 
;&& 
{(( 	
TcpListener)) 
listener))  
=))! "
null))# '
;))' (
try++ 
{,, 
listener-- 
=-- 
new-- 
TcpListener-- *
(--* +
	IPAddress--+ 4
.--4 5
Parse--5 :
(--: ;
$str--; G
)--G H
,--H I
$num--J O
)--O P
;--P Q
listener.. 
... 
Start.. 
(.. 
)..  
;..  !
using// 
(// 
	TcpClient//  
tcpConn//! (
=//) *
listener//+ 3
.//3 4
AcceptTcpClient//4 C
(//C D
)//D E
)//E F
{00 
using22 
(22 
StreamReader22 '
sr22( *
=22+ ,
new22- 0
StreamReader221 =
(22= >
tcpConn22> E
.22E F
	GetStream22F O
(22O P
)22P Q
)22Q R
)22R S
{33 
string55 
stringNumber55 +
=55, -
sr55. 0
.550 1
ReadLine551 9
(559 :
)55: ;
;55; <
if66 
(66 
stringNumber66 (
!=66) +
null66, 0
)660 1
{77 
try88 
{99 
data::  $
=::% &
int::' *
.::* +
Parse::+ 0
(::0 1
stringNumber::1 =
.::= >
Trim::> B
(::B C
)::C D
)::D E
;::E F
};; 
catch<< !
(<<! "
FormatException<<" 1
exceptNumberFormat<<2 D
)<<D E
{== 
IO>>  "
.>>" #
Logger>># )
.>>) *
Log>>* -
(>>- .
NLog>>. 2
.>>2 3
LogLevel>>3 ;
.>>; <
Warn>>< @
,>>@ A
exceptNumberFormat>>B T
,>>T U
$str	>>V à
)
>>à â
;
>>â ä
}?? 
}@@ 
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD 
exceptIODD '
)DD' (
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF 
(FF 
NLogFF "
.FF" #
LogLevelFF# +
.FF+ ,
WarnFF, 0
,FF0 1
exceptIOFF2 :
,FF: ;
$strFF< W
)FFW X
;FFX Y
}GG 
finallyHH 
{II 
tryJJ 
{KK 
ifLL 
(LL 
listenerLL  
!=LL! #
nullLL$ (
)LL( )
{MM 
listenerNN  
.NN  !
StopNN! %
(NN% &
)NN& '
;NN' (
}OO 
}PP 
catchQQ 
(QQ 
SocketExceptionQQ %
seQQ& (
)QQ( )
{RR 
IOSS 
.SS 
LoggerSS 
.SS 
LogSS !
(SS! "
NLogSS" &
.SS& '
LogLevelSS' /
.SS/ 0
WarnSS0 4
,SS4 5
seSS6 8
,SS8 9
$strSS: U
)SSU V
;SSV W
}TT 
}UU 
}VV 	
	ContainerWW 
dataContainerWW 
=WW  !
newWW" %
	ContainerWW& /
(WW/ 0
)WW0 1
;WW1 2
dataContainerXX 
.XX 
containerOneXX "
=XX# $
dataXX% )
;XX) *H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67bYY D
.YYD E
BadSinkYYE L
(YYL M
dataContainerYYM Z
)YY\ ]
;YY] ^
}ZZ 
public]] 

override]] 
void]] 
Good]] 
(]] 
)]] 
{^^ 
GoodG2B__ 
(__ 
)__ 
;__ 
}`` 
privatecc 
staticcc 
voidcc 
GoodG2Bcc 
(cc  
)cc  !
{dd 
intee 
dataee 
;ee 
datagg 
=gg 
$numgg 
;gg 
	Containerhh 
dataContainerhh 
=hh  !
newhh" %
	Containerhh& /
(hh/ 0
)hh0 1
;hh1 2
dataContainerii 
.ii 
containerOneii "
=ii# $
dataii% )
;ii) *H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67bjj D
.jjD E
GoodG2BSinkjjE P
(jjP Q
dataContainerjjQ ^
)jj` a
;jja b
}kk 
}mm 
}nn ˚
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67b B
{ 
public 

static 
void 
BadSink 
( H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67a [
.[ \
	Container\ e
dataContainerf s
)t u
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67a%%# _
.%%_ `
	Container%%` i
dataContainer%%j w
)%%x y
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ë%
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68a B
:C D
AbstractTestCaseE U
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68bRR D
.RRD E
BadSinkRRE L
(RRL M
)RRM N
;RRN O
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
static\\ 
void\\ 
GoodG2B\\ 
(\\  
)\\  !
{]] 
data__ 
=__ 
$num__ 
;__ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68b`` D
.``D E
GoodG2BSink``E P
(``P Q
)``Q R
;``R S
}aa 
}cc 
}dd ≥
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68b B
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68a O
.O P
dataP T
;T U
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68a&& O
.&&O P
data&&P T
;&&T U
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. £&
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_71a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_71bRR D
.RRD E
BadSinkRRE L
(RRL M
(RRM N
ObjectRRN T
)RRT U
dataRRU Y
)RR[ \
;RR\ ]
}SS 
publicVV 

overrideVV 
voidVV 
GoodVV 
(VV 
)VV 
{WW 
GoodG2BXX 
(XX 
)XX 
;XX 
}YY 
private\\ 
static\\ 
void\\ 
GoodG2B\\ 
(\\  
)\\  !
{]] 
int^^ 
data^^ 
;^^ 
data`` 
=`` 
$num`` 
;`` H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_71baa D
.aaD E
GoodG2BSinkaaE P
(aaP Q
(aaQ R
ObjectaaR X
)aaX Y
dataaaY ]
)aa_ `
;aa` a
}bb 
}dd 
}ee √
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_71b B
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 √/
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_72a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	
	HashtableRR 
dataHashtableRR 
=RR  !
newRR" %
	HashtableRR& /
(RR/ 0
$numRR0 1
)RR1 2
;RR2 3
dataHashtableSS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS !
)SS! "
;SS" #
dataHashtableTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT !
)TT! "
;TT" #
dataHashtableUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU !
)UU! "
;UU" #H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_72bVV D
.VVD E
BadSinkVVE L
(VVL M
dataHashtableVVM Z
)VV\ ]
;VV] ^
}WW 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B\\ 
(\\ 
)\\ 
;\\ 
}]] 
private`` 
static`` 
void`` 
GoodG2B`` 
(``  
)``  !
{aa 
intbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 
	Hashtableee 
dataHashtableee 
=ee  !
newee" %
	Hashtableee& /
(ee/ 0
$numee0 1
)ee1 2
;ee2 3
dataHashtableff 
.ff 
Addff 
(ff 
$numff 
,ff 
dataff !
)ff! "
;ff" #
dataHashtablegg 
.gg 
Addgg 
(gg 
$numgg 
,gg 
datagg !
)gg! "
;gg" #
dataHashtablehh 
.hh 
Addhh 
(hh 
$numhh 
,hh 
datahh !
)hh! "
;hh" #H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_72bii D
.iiD E
GoodG2BSinkiiE P
(iiP Q
dataHashtableiiQ ^
)ii` a
;iia b
}jj 
}ll 
}mm µ
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_72b B
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ª/
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_73a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
tcpConn..> E
...E F
	GetStream..F O
(..O P
)..P Q
)..Q R
)..R S
{// 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88! "
FormatException88" 1
exceptNumberFormat882 D
)88D E
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
exceptIOBB2 :
,BB: ;
$strBB< W
)BBW X
;BBX Y
}CC 
finallyDD 
{EE 
tryFF 
{GG 
ifHH 
(HH 
listenerHH  
!=HH! #
nullHH$ (
)HH( )
{II 
listenerJJ  
.JJ  !
StopJJ! %
(JJ% &
)JJ& '
;JJ' (
}KK 
}LL 
catchMM 
(MM 
SocketExceptionMM %
seMM& (
)MM( )
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
seOO6 8
,OO8 9
$strOO: U
)OOU V
;OOV W
}PP 
}QQ 
}RR 	

LinkedListSS 
<SS 
intSS 
>SS 
dataLinkedListSS &
=SS' (
newSS) ,

LinkedListSS- 7
<SS7 8
intSS8 ;
>SS; <
(SS< =
)SS= >
;SS> ?
dataLinkedListTT 
.TT 
AddLastTT 
(TT 
dataTT #
)TT# $
;TT$ %
dataLinkedListUU 
.UU 
AddLastUU 
(UU 
dataUU #
)UU# $
;UU$ %
dataLinkedListVV 
.VV 
AddLastVV 
(VV 
dataVV #
)VV# $
;VV$ %H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_73bWW D
.WWD E
BadSinkWWE L
(WWL M
dataLinkedListWWM [
)WW] ^
;WW^ _
}XX 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
privateaa 
staticaa 
voidaa 
GoodG2Baa 
(aa  
)aa  !
{bb 
intcc 
datacc 
;cc 
dataee 
=ee 
$numee 
;ee 

LinkedListff 
<ff 
intff 
>ff 
dataLinkedListff &
=ff' (
newff) ,

LinkedListff- 7
<ff7 8
intff8 ;
>ff; <
(ff< =
)ff= >
;ff> ?
dataLinkedListgg 
.gg 
AddLastgg 
(gg 
datagg #
)gg# $
;gg$ %
dataLinkedListhh 
.hh 
AddLasthh 
(hh 
datahh #
)hh# $
;hh$ %
dataLinkedListii 
.ii 
AddLastii 
(ii 
dataii #
)ii# $
;ii$ %H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_73bjj D
.jjD E
GoodG2BSinkjjE P
(jjP Q
dataLinkedListjjQ _
)jja b
;jjb c
}kk 
}mm 
}nn ·
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_73b B
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 È1
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_74a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	

DictionaryRR 
<RR 
intRR 
,RR 
intRR 
>RR 
dataDictionaryRR *
=RR+ ,
newRR- 0

DictionaryRR1 ;
<RR; <
intRR< ?
,RR? @
intRR@ C
>RRC D
(RRD E
)RRE F
;RRF G
dataDictionarySS 
.SS 
AddSS 
(SS 
$numSS 
,SS 
dataSS "
)SS" #
;SS# $
dataDictionaryTT 
.TT 
AddTT 
(TT 
$numTT 
,TT 
dataTT "
)TT" #
;TT# $
dataDictionaryUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU "
)UU" #
;UU# $H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_74bVV D
.VVD E
BadSinkVVE L
(VVL M
dataDictionaryVVM [
)VV] ^
;VV^ _
}WW 
publicZZ 

overrideZZ 
voidZZ 
GoodZZ 
(ZZ 
)ZZ 
{[[ 
GoodG2B\\ 
(\\ 
)\\ 
;\\ 
}]] 
private`` 
static`` 
void`` 
GoodG2B`` 
(``  
)``  !
{aa 
intbb 
databb 
;bb 
datadd 
=dd 
$numdd 
;dd 

Dictionaryee 
<ee 
intee 
,ee 
intee 
>ee 
dataDictionaryee *
=ee+ ,
newee- 0

Dictionaryee1 ;
<ee; <
intee< ?
,ee? @
intee@ C
>eeC D
(eeD E
)eeE F
;eeF G
dataDictionaryff 
.ff 
Addff 
(ff 
$numff 
,ff 
dataff "
)ff" #
;ff# $
dataDictionarygg 
.gg 
Addgg 
(gg 
$numgg 
,gg 
datagg "
)gg" #
;gg# $
dataDictionaryhh 
.hh 
Addhh 
(hh 
$numhh 
,hh 
datahh "
)hh" #
;hh# $H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_74bii D
.iiD E
GoodG2BSinkiiE P
(iiP Q
dataDictionaryiiQ _
)iia b
;iib c
}jj 
}ll 
}mm ˚
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_74b B
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ô9
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_75a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data"" 
="" 
int"" 
."" 
MinValue"" 
;"" 
{$$ 	
TcpListener%% 
listener%%  
=%%! "
null%%# '
;%%' (
try'' 
{(( 
listener)) 
=)) 
new)) 
TcpListener)) *
())* +
	IPAddress))+ 4
.))4 5
Parse))5 :
()): ;
$str)); G
)))G H
,))H I
$num))J O
)))O P
;))P Q
listener** 
.** 
Start** 
(** 
)**  
;**  !
using++ 
(++ 
	TcpClient++  
tcpConn++! (
=++) *
listener+++ 3
.++3 4
AcceptTcpClient++4 C
(++C D
)++D E
)++E F
{,, 
using.. 
(.. 
StreamReader.. '
sr..( *
=..+ ,
new..- 0
StreamReader..1 =
(..= >
tcpConn..> E
...E F
	GetStream..F O
(..O P
)..P Q
)..Q R
)..R S
{// 
string11 
stringNumber11 +
=11, -
sr11. 0
.110 1
ReadLine111 9
(119 :
)11: ;
;11; <
if22 
(22 
stringNumber22 (
!=22) +
null22, 0
)220 1
{33 
try44 
{55 
data66  $
=66% &
int66' *
.66* +
Parse66+ 0
(660 1
stringNumber661 =
.66= >
Trim66> B
(66B C
)66C D
)66D E
;66E F
}77 
catch88 !
(88! "
FormatException88" 1
exceptNumberFormat882 D
)88D E
{99 
IO::  "
.::" #
Logger::# )
.::) *
Log::* -
(::- .
NLog::. 2
.::2 3
LogLevel::3 ;
.::; <
Warn::< @
,::@ A
exceptNumberFormat::B T
,::T U
$str	::V à
)
::à â
;
::â ä
};; 
}<< 
}== 
}>> 
}?? 
catch@@ 
(@@ 
IOException@@ 
exceptIO@@ '
)@@' (
{AA 
IOBB 
.BB 
LoggerBB 
.BB 
LogBB 
(BB 
NLogBB "
.BB" #
LogLevelBB# +
.BB+ ,
WarnBB, 0
,BB0 1
exceptIOBB2 :
,BB: ;
$strBB< W
)BBW X
;BBX Y
}CC 
finallyDD 
{EE 
tryFF 
{GG 
ifHH 
(HH 
listenerHH  
!=HH! #
nullHH$ (
)HH( )
{II 
listenerJJ  
.JJ  !
StopJJ! %
(JJ% &
)JJ& '
;JJ' (
}KK 
}LL 
catchMM 
(MM 
SocketExceptionMM %
seMM& (
)MM( )
{NN 
IOOO 
.OO 
LoggerOO 
.OO 
LogOO !
(OO! "
NLogOO" &
.OO& '
LogLevelOO' /
.OO/ 0
WarnOO0 4
,OO4 5
seOO6 8
,OO8 9
$strOO: U
)OOU V
;OOV W
}PP 
}QQ 
}RR 	
byteTT 
[TT 
]TT 
dataSerializedTT 
=TT 
nullTT  $
;TT$ %
tryUU 
{VV 	
BinaryFormatterWW 
bfWW 
=WW  
newWW! $
BinaryFormatterWW% 4
(WW4 5
)WW5 6
;WW6 7
usingXX 
(XX 
varXX 
msXX 
=XX 
newXX 
MemoryStreamXX  ,
(XX, -
)XX- .
)XX. /
{YY 
bfZZ 
.ZZ 
	SerializeZZ 
(ZZ 
msZZ 
,ZZ  
dataZZ! %
)ZZ% &
;ZZ& '
dataSerialized[[ 
=[[  
ms[[! #
.[[# $
ToArray[[$ +
([[+ ,
)[[, -
;[[- .
}\\ H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_75b]] H
.]]H I
BadSink]]I P
(]]P Q
dataSerialized]]Q _
)]]a b
;]]b c
}^^ 	
catch__ 
(__ "
SerializationException__ %
exceptSerialize__& 5
)__5 6
{`` 	
IOaa 
.aa 
Loggeraa 
.aa 
Logaa 
(aa 
NLogaa 
.aa 
LogLevelaa '
.aa' (
Warnaa( ,
,aa, -
$straa. X
,aaX Y
exceptSerializeaaZ i
)aai j
;aaj k
}bb 	
}cc 
publicff 

overrideff 
voidff 
Goodff 
(ff 
)ff 
{gg 
GoodG2Bhh 
(hh 
)hh 
;hh 
}ii 
privatell 
staticll 
voidll 
GoodG2Bll 
(ll  
)ll  !
{mm 
intnn 
datann 
;nn 
datapp 
=pp 
$numpp 
;pp 
byterr 
[rr 
]rr 
dataSerializedrr 
=rr 
nullrr  $
;rr$ %
tryss 
{tt 	
BinaryFormatteruu 
bfuu 
=uu  
newuu! $
BinaryFormatteruu% 4
(uu4 5
)uu5 6
;uu6 7
usingvv 
(vv 
varvv 
msvv 
=vv 
newvv 
MemoryStreamvv  ,
(vv, -
)vv- .
)vv. /
{ww 
bfxx 
.xx 
	Serializexx 
(xx 
msxx 
,xx  
dataxx! %
)xx% &
;xx& '
dataSerializedyy 
=yy  
msyy! #
.yy# $
ToArrayyy$ +
(yy+ ,
)yy, -
;yy- .
}zz H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_75b{{ H
.{{H I
GoodG2BSink{{I T
({{T U
dataSerialized{{U c
){{e f
;{{f g
}|| 	
catch}} 
(}} "
SerializationException}} %
exceptSerialize}}& 5
)}}5 6
{~~ 	
IO 
. 
Logger 
. 
Log 
( 
NLog 
. 
LogLevel '
.' (
Warn( ,
,, -
$str. X
,X Y
exceptSerializeZ i
)i j
;j k
}
ÄÄ 	
}
ÅÅ 
}ÉÉ 
}ÑÑ ·!
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_75b B
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ”(
øC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class H
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81a B
:C D
AbstractTestCaseE U
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
TcpListener$$ 
listener$$  
=$$! "
null$$# '
;$$' (
try&& 
{'' 
listener(( 
=(( 
new(( 
TcpListener(( *
(((* +
	IPAddress((+ 4
.((4 5
Parse((5 :
(((: ;
$str((; G
)((G H
,((H I
$num((J O
)((O P
;((P Q
listener)) 
.)) 
Start)) 
()) 
)))  
;))  !
using** 
(** 
	TcpClient**  
tcpConn**! (
=**) *
listener**+ 3
.**3 4
AcceptTcpClient**4 C
(**C D
)**D E
)**E F
{++ 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
tcpConn--> E
.--E F
	GetStream--F O
(--O P
)--P Q
)--Q R
)--R S
{.. 
string00 
stringNumber00 +
=00, -
sr00. 0
.000 1
ReadLine001 9
(009 :
)00: ;
;00; <
if11 
(11 
stringNumber11 (
!=11) +
null11, 0
)110 1
{22 
try33 
{44 
data55  $
=55% &
int55' *
.55* +
Parse55+ 0
(550 1
stringNumber551 =
.55= >
Trim55> B
(55B C
)55C D
)55D E
;55E F
}66 
catch77 !
(77! "
FormatException77" 1
exceptNumberFormat772 D
)77D E
{88 
IO99  "
.99" #
Logger99# )
.99) *
Log99* -
(99- .
NLog99. 2
.992 3
LogLevel993 ;
.99; <
Warn99< @
,99@ A
exceptNumberFormat99B T
,99T U
$str	99V à
)
99à â
;
99â ä
}:: 
};; 
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? 
exceptIO?? '
)??' (
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA 
(AA 
NLogAA "
.AA" #
LogLevelAA# +
.AA+ ,
WarnAA, 0
,AA0 1
exceptIOAA2 :
,AA: ;
$strAA< W
)AAW X
;AAX Y
}BB 
finallyCC 
{DD 
tryEE 
{FF 
ifGG 
(GG 
listenerGG  
!=GG! #
nullGG$ (
)GG( )
{HH 
listenerII  
.II  !
StopII! %
(II% &
)II& '
;II' (
}JJ 
}KK 
catchLL 
(LL 
SocketExceptionLL %
seLL& (
)LL( )
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
seNN6 8
,NN8 9
$strNN: U
)NNU V
;NNV W
}OO 
}PP 
}QQ 	L
@CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_baseRR H

baseObjectRRI S
=RRT U
newRRV YL
?CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_bad	RRZ ô
(
RRô ö
)
RRö õ
;
RRõ ú

baseObjectSS 
.SS 
ActionSS 
(SS 
dataSS 
)SS  
;SS  !
}TT 
publicWW 

overrideWW 
voidWW 
GoodWW 
(WW 
)WW 
{XX 
GoodG2BYY 
(YY 
)YY 
;YY 
}ZZ 
private]] 
void]] 
GoodG2B]] 
(]] 
)]] 
{^^ 
int__ 
data__ 
;__ 
dataaa 
=aa 
$numaa 
;aa L
@CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_basebb H

baseObjectbbI S
=bbT U
newbbV YP
CCWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_goodG2B	bbZ ù
(
bbù û
)
bbû ü
;
bbü †

baseObjectcc 
.cc 
Actioncc 
(cc 
datacc 
)cc  
;cc  !
}dd 
}ff 
}gg ê
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class K
?CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_bad E
:F GM
@CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_base	H à
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ˜
√C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 L
@CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_base O
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} ò
∆C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class O
CCWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_goodG2B I
:J KM
@CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81_base	L å
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ‰
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_01 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
{AA 	
IOCC 
.CC 
	WriteLineCC 
(CC 
(CC 
byteCC 
)CC 
dataCC #
)CC# $
;CC$ %
}DD 	
}EE 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
)NN 
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
}YY 
}ZZ Œ%
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_02 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
falseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
truejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ≥&
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_03 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
$numUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
$numjj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ∞(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_04 ?
:@ A
AbstractTestCaseB R
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
string.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? .
exceptNumberFormat??/ A
)??A B
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
byteSS 
)SS 
dataSS #
)SS# $
;SS$ %
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
PRIVATE_CONST_FALSE\\ 
)\\  
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
byteii 
)ii 
dataii #
)ii# $
;ii$ %
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
PRIVATE_CONST_TRUEqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
byte~~ 
)~~ 
data~~ #
)~~# $
;~~$ %
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ Á'
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_05 ?
:@ A
AbstractTestCaseB R
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
string.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? .
exceptNumberFormat??/ A
)??A B
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
byteSS 
)SS 
dataSS #
)SS# $
;SS$ %
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
privateFalse\\ 
)\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
byteii 
)ii 
dataii #
)ii# $
;ii$ %
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
privateTrueqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
byte~~ 
)~~ 
data~~ #
)~~# $
;~~$ %
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ Ü(
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_06 ?
:@ A
AbstractTestCaseB R
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
string-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using.. 
(.. 
	WebClient.. $
client..% +
=.., -
new... 1
	WebClient..2 ;
(..; <
)..< =
)..= >
{// 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
client00B H
.00H I
OpenRead00I Q
(00Q R
$str00R k
)00k l
)00l m
)00m n
{11 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> .
exceptNumberFormat>>/ A
)>>A B
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
byteRR 
)RR 
dataRR #
)RR# $
;RR$ %
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
PRIVATE_CONST_FIVE[[ 
!=[[ !
$num[[" #
)[[# $
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
PRIVATE_CONST_FIVEpp 
==pp !
$numpp" #
)pp# $
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
byte}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ◊'
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_07 ?
:@ A
AbstractTestCaseB R
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
string-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using.. 
(.. 
	WebClient.. $
client..% +
=.., -
new... 1
	WebClient..2 ;
(..; <
)..< =
)..= >
{// 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
client00B H
.00H I
OpenRead00I Q
(00Q R
$str00R k
)00k l
)00l m
)00m n
{11 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> .
exceptNumberFormat>>/ A
)>>A B
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
byteRR 
)RR 
dataRR #
)RR# $
;RR$ %
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
privateFive[[ 
!=[[ 
$num[[ 
)[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
privateFivepp 
==pp 
$numpp 
)pp 
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
byte}} 
)}} 
data}} #
)}}# $
;}}$ %
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ∞*
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_08 ?
:@ A
AbstractTestCaseB R
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
string55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using66 
(66 
	WebClient66 $
client66% +
=66, -
new66. 1
	WebClient662 ;
(66; <
)66< =
)66= >
{77 
using88 
(88 
StreamReader88 +
sr88, .
=88/ 0
new881 4
StreamReader885 A
(88A B
client88B H
.88H I
OpenRead88I Q
(88Q R
$str88R k
)88k l
)88l m
)88m n
{99 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF .
exceptNumberFormatFF/ A
)FFA B
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
byteZZ 
)ZZ 
dataZZ #
)ZZ# $
;ZZ$ %
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
intbb 
databb 
;bb 
ifcc 

(cc 
PrivateReturnsFalsecc 
(cc  
)cc  !
)cc! "
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
elseii 
{jj 	
datall 
=ll 
$numll 
;ll 
}mm 	
{nn 	
IOpp 
.pp 
	WriteLinepp 
(pp 
(pp 
bytepp 
)pp 
datapp #
)pp# $
;pp$ %
}qq 	
}rr 
privateuu 
voiduu 
GoodG2B2uu 
(uu 
)uu 
{vv 
intww 
dataww 
;ww 
ifxx 

(xx 
PrivateReturnsTruexx 
(xx 
)xx  
)xx  !
{yy 	
data{{ 
={{ 
$num{{ 
;{{ 
}|| 	
else}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
byte
ÖÖ 
)
ÖÖ 
data
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê €&
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_09 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU !
STATIC_READONLY_FALSEUU $
)UU$ %
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_TRUEjj #
)jj# $
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ Ω&
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_10 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
staticFalseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticTruejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ¨'
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_11 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
StaticReturnsFalseUU !
(UU! "
)UU" #
)UU# $
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 
StaticReturnsTruejj  
(jj  !
)jj! "
)jj" #
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ¶!
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_12 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataGG 
=GG 
$numGG 
;GG 
}HH 	
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
byteKK 
)KK 
dataKK #
)KK# $
;KK$ %
}LL 	
}MM 
privateRR 
voidRR 
GoodG2BRR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU $
StaticReturnsTrueOrFalseUU '
(UU' (
)UU( )
)UU) *
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
elseZZ 
{[[ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
{__ 	
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
byteaa 
)aa 
dataaa #
)aa# $
;aa$ %
}bb 	
}cc 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
}jj 
}kk ¿'
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_13 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU  
STATIC_READONLY_FIVEUU #
!=UU$ &
$numUU' (
)UU( )
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_FIVEjj #
==jj$ &
$numjj' (
)jj( )
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ¢'
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_14 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
byteLL 
)LL 
dataLL #
)LL# $
;LL$ %
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 

staticFiveUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
bytebb 
)bb 
databb #
)bb# $
;bb$ %
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticFivejj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
byteww 
)ww 
dataww #
)ww# $
;ww$ %
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ è)
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_15 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
string(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using)) 
()) 
	WebClient)) $
client))% +
=)), -
new)). 1
	WebClient))2 ;
()); <
)))< =
)))= >
{** 
using++ 
(++ 
StreamReader++ +
sr++, .
=++/ 0
new++1 4
StreamReader++5 A
(++A B
client++B H
.++H I
OpenRead++I Q
(++Q R
$str++R k
)++k l
)++l m
)++m n
{,, 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 .
exceptNumberFormat99/ A
)99A B
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
breakDD 
;DD 
defaultEE 
:EE 
dataHH 
=HH 
$numHH 
;HH 
breakII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
byteMM 
)MM 
dataMM #
)MM# $
;MM$ %
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
=UU 
$numUU 
;UU 
switchVV 
(VV 
$numVV 
)VV 
{WW 	
caseXX 
$numXX 
:XX 
data[[ 
=[[ 
$num[[ 
;[[ 
break\\ 
;\\ 
default]] 
:]] 
data__ 
=__ 
$num__ 
;__ 
break`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
bytedd 
)dd 
datadd #
)dd# $
;dd$ %
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
=kk 
$numkk 
;kk 
switchll 
(ll 
$numll 
)ll 
{mm 	
casenn 
$numnn 
:nn 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
defaultrr 
:rr 
datauu 
=uu 
$numuu 
;uu 
breakvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
bytezz 
)zz 
datazz #
)zz# $
;zz$ %
}{{ 	
}|| 
public~~ 

override~~ 
void~~ 
Good~~ 
(~~ 
)~~ 
{ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodG2B2
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ Í
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_16 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
breakCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
whilePP 
(PP 
truePP 
)PP 
{QQ 	
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B^^ 
(^^ 
)^^ 
;^^ 
}__ 
}aa 
}bb ⁄ 
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_17 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
forAA 
(AA 
intAA 
iAA 
=AA 
$numAA 
;AA 
iAA 
<AA 
$numAA 
;AA 
iAA  
++AA  "
)AA" #
{BB 	
{CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
byteEE "
)EE" #
dataEE# '
)EE' (
;EE( )
}FF 
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
forRR 
(RR 
intRR 
iRR 
=RR 
$numRR 
;RR 
iRR 
<RR 
$numRR 
;RR 
iRR  
++RR  "
)RR" #
{SS 	
{TT 
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
byteVV "
)VV" #
dataVV# '
)VV' (
;VV( )
}WW 
}XX 	
}YY 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
}`` 
}aa Ÿ3
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_21 ?
:@ A
AbstractTestCaseB R
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private++ 
int++ 

Bad_source++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
string55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using66 
(66 
	WebClient66 $
client66% +
=66, -
new66. 1
	WebClient662 ;
(66; <
)66< =
)66= >
{77 
using88 
(88 
StreamReader88 +
sr88, .
=88/ 0
new881 4
StreamReader885 A
(88A B
client88B H
.88H I
OpenRead88I Q
(88Q R
$str88R k
)88k l
)88l m
)88m n
{99 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF .
exceptNumberFormatFF/ A
)FFA B
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
returnXX 
dataXX 
;XX 
}YY 
private\\ 
bool\\ 
goodG2B1_private\\ !
=\\" #
false\\$ )
;\\) *
private]] 
bool]] 
GoodG2B2_private]] !
=]]" #
false]]$ )
;]]) *
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
privateff 
voidff 
GoodG2B1ff 
(ff 
)ff 
{gg 
inthh 
datahh 
;hh 
goodG2B1_privateii 
=ii 
falseii  
;ii  !
datajj 
=jj 
GoodG2B1_sourcejj 
(jj 
)jj  
;jj  !
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
bytemm 
)mm 
datamm #
)mm# $
;mm$ %
}nn 	
}oo 
privateqq 
intqq 
GoodG2B1_sourceqq 
(qq  
)qq  !
{rr 
intss 
datass 
=ss 
$numss 
;ss 
iftt 

(tt 
goodG2B1_privatett 
)tt 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
return 
data 
; 
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
int
ÖÖ 
data
ÖÖ 
;
ÖÖ 
GoodG2B2_private
ÜÜ 
=
ÜÜ 
true
ÜÜ 
;
ÜÜ  
data
áá 
=
áá 
GoodG2B2_source
áá 
(
áá 
)
áá  
;
áá  !
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
byte
ää 
)
ää 
data
ää #
)
ää# $
;
ää$ %
}
ãã 	
}
åå 
private
éé 
int
éé 
GoodG2B2_source
éé 
(
éé  
)
éé  !
{
èè 
int
êê 
data
êê 
=
êê 
$num
êê 
;
êê 
if
ëë 

(
ëë 
GoodG2B2_private
ëë 
)
ëë 
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
else
ññ 
{
óó 	
data
öö 
=
öö 
$num
öö 
;
öö 
}
õõ 	
return
úú 
data
úú 
;
úú 
}
ùù 
}üü 
}†† û
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22a @
:A B
AbstractTestCaseC S
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22b!! I
.!!I J
	BadSource!!J S
(!!S T
)!!T U
;!!U V
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22b88 I
.88I J
GoodG2B1Source88J X
(88X Y
)88Y Z
;88Z [
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22bDD I
.DDI J
GoodG2B2SourceDDJ X
(DDX Y
)DDY Z
;DDZ [
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL «"
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22b @
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if   

(   F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22a   F
.  F G
badPublicStatic  G V
)  V W
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
returnJJ 
dataJJ 
;JJ 
}KK 
publicPP 

staticPP 
intPP 
GoodG2B1SourcePP $
(PP$ %
)PP% &
{QQ 
intRR 
dataRR 
;RR 
ifSS 

(SS F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22aSS F
.SSF G 
goodG2B1PublicStaticSSG [
)SS[ \
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data\\ 
=\\ 
$num\\ 
;\\ 
}]] 	
return^^ 
data^^ 
;^^ 
}__ 
publicbb 

staticbb 
intbb 
GoodG2B2Sourcebb $
(bb$ %
)bb% &
{cc 
intdd 
datadd 
;dd 
ifee 

(ee F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22aee F
.eeF G 
GoodG2B2PublicStaticeeG [
)ee[ \
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
returnpp 
datapp 
;pp 
}qq 
}ss 
}tt Ç!
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_31 ?
:@ A
AbstractTestCaseB R
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
dataCopy   
;   
{!! 	
int"" 
data"" 
;"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
string(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using)) 
()) 
	WebClient)) $
client))% +
=)), -
new)). 1
	WebClient))2 ;
()); <
)))< =
)))= >
{** 
using++ 
(++ 
StreamReader++ +
sr++, .
=++/ 0
new++1 4
StreamReader++5 A
(++A B
client++B H
.++H I
OpenRead++I Q
(++Q R
$str++R k
)++k l
)++l m
)++m n
{,, 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 .
exceptNumberFormat99/ A
)99A B
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
dataCopyDD 
=DD 
dataDD 
;DD 
}EE 	
{FF 	
intGG 
dataGG 
=GG 
dataCopyGG 
;GG  
{HH 
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
(JJ 
byteJJ "
)JJ" #
dataJJ# '
)JJ' (
;JJ( )
}KK 
}LL 	
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
intXX 
dataCopyXX 
;XX 
{YY 	
intZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
dataCopy]] 
=]] 
data]] 
;]] 
}^^ 	
{__ 	
int`` 
data`` 
=`` 
dataCopy`` 
;``  
{aa 
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc "
)cc" #
datacc# '
)cc' (
;cc( )
}dd 
}ee 	
}ff 
}hh 
}ii Ü!
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_41 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
byte   
)   
data   #
)  # $
;  $ %
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
data'' 
='' 
int'' 
.'' 
MinValue'' 
;'' 
{)) 	
try** 
{++ 
string,, 
stringNumber,, #
=,,$ %
$str,,& (
;,,( )
using-- 
(-- 
	WebClient--  
client--! '
=--( )
new--* -
	WebClient--. 7
(--7 8
)--8 9
)--9 :
{.. 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
client//> D
.//D E
OpenRead//E M
(//M N
$str//N g
)//g h
)//h i
)//i j
{00 
stringNumber44 $
=44% &
sr44' )
.44) *
ReadLine44* 2
(442 3
)443 4
;444 5
}55 
}66 
if77 
(77 
stringNumber77  
!=77! #
null77$ (
)77( )
{88 
try99 
{:: 
data;; 
=;; 
int;; "
.;;" #
Parse;;# (
(;;( )
stringNumber;;) 5
.;;5 6
Trim;;6 :
(;;: ;
);;; <
);;< =
;;;= >
}<< 
catch== 
(== 
FormatException== *
exceptNumberFormat==+ =
)=== >
{>> 
IO?? 
.?? 
Logger?? !
.??! "
Log??" %
(??% &
NLog??& *
.??* +
LogLevel??+ 3
.??3 4
Warn??4 8
,??8 9
exceptNumberFormat??: L
,??L M
$str	??N Ä
)
??Ä Å
;
??Å Ç
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC 
exceptIOCC '
)CC' (
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
exceptIOEE2 :
,EE: ;
$strEE< W
)EEW X
;EEX Y
}FF 
}GG 	
BadSinkHH 
(HH 
dataHH 
)HH 
;HH 
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateQQ 
staticQQ 
voidQQ 
GoodG2BSinkQQ #
(QQ# $
intQQ$ '
dataQQ( ,
)QQ- .
{RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
int\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
GoodG2BSink__ 
(__ 
data__ 
)__ 
;__ 
}`` 
}bb 
}cc !
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_42 ?
:@ A
AbstractTestCaseB R
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
string$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 *
exceptNumberFormat55+ =
)55= >
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	
return@@ 
data@@ 
;@@ 
}AA 
publicDD 

overrideDD 
voidDD 
BadDD 
(DD 
)DD 
{EE 
intFF 
dataFF 
=FF 
	BadSourceFF 
(FF 
)FF 
;FF 
{GG 	
IOII 
.II 
	WriteLineII 
(II 
(II 
byteII 
)II 
dataII #
)II# $
;II$ %
}JJ 	
}KK 
privateNN 
staticNN 
intNN 
GoodG2BSourceNN $
(NN$ %
)NN% &
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
returnSS 
dataSS 
;SS 
}TT 
privateWW 
staticWW 
voidWW 
GoodG2BWW 
(WW  
)WW  !
{XX 
intYY 
dataYY 
=YY 
GoodG2BSourceYY  
(YY  !
)YY! "
;YY" #
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ∂#
ºC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class E
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_45 ?
:@ A
AbstractTestCaseB R
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
int"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
byte%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;-- 
{// 	
try00 
{11 
string22 
stringNumber22 #
=22$ %
$str22& (
;22( )
using33 
(33 
	WebClient33  
client33! '
=33( )
new33* -
	WebClient33. 7
(337 8
)338 9
)339 :
{44 
using55 
(55 
StreamReader55 '
sr55( *
=55+ ,
new55- 0
StreamReader551 =
(55= >
client55> D
.55D E
OpenRead55E M
(55M N
$str55N g
)55g h
)55h i
)55i j
{66 
stringNumber:: $
=::% &
sr::' )
.::) *
ReadLine::* 2
(::2 3
)::3 4
;::4 5
};; 
}<< 
if== 
(== 
stringNumber==  
!===! #
null==$ (
)==( )
{>> 
try?? 
{@@ 
dataAA 
=AA 
intAA "
.AA" #
ParseAA# (
(AA( )
stringNumberAA) 5
.AA5 6
TrimAA6 :
(AA: ;
)AA; <
)AA< =
;AA= >
}BB 
catchCC 
(CC 
FormatExceptionCC *
exceptNumberFormatCC+ =
)CC= >
{DD 
IOEE 
.EE 
LoggerEE !
.EE! "
LogEE" %
(EE% &
NLogEE& *
.EE* +
LogLevelEE+ 3
.EE3 4
WarnEE4 8
,EE8 9
exceptNumberFormatEE: L
,EEL M
$str	EEN Ä
)
EEÄ Å
;
EEÅ Ç
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
}MM 	
dataBadNN 
=NN 
dataNN 
;NN 
BadSinkOO 
(OO 
)OO 
;OO 
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateXX 
voidXX 
GoodG2BSinkXX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
=ZZ 
dataGoodG2BZZ 
;ZZ 
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
byte]] 
)]] 
data]] #
)]]# $
;]]$ %
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2Bbb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
dataff 
=ff 
$numff 
;ff 
dataGoodG2Bgg 
=gg 
datagg 
;gg 
GoodG2BSinkhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll ∫
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_51a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
string$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 *
exceptNumberFormat55+ =
)55= >
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_51b@@ B
.@@B C
BadSink@@C J
(@@J K
data@@K O
)@@Q R
;@@R S
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
voidJJ 
GoodG2BJJ 
(JJ 
)JJ 
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_51bOO B
.OOB C
GoodG2BSinkOOC N
(OON O
dataOOO S
)OOU V
;OOV W
}PP 
}RR 
}SS õ	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_51b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, ∫
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52bAA B
.AAB C
BadSinkAAC J
(AAJ K
dataAAK O
)AAP Q
;AAQ R
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52bPP B
.PPB C
GoodG2BSinkPPC N
(PPN O
dataPPO S
)PPT U
;PPU V
}QQ 
}SS 
}TT Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' õ	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52c @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ∫
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53bAA B
.AAB C
BadSinkAAC J
(AAJ K
dataAAK O
)AAP Q
;AAQ R
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53bPP B
.PPB C
GoodG2BSinkPPC N
(PPN O
dataPPO S
)PPT U
;PPU V
}QQ 
}SS 
}TT Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53c @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' õ	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53d @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- ∫
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54bAA B
.AAB C
BadSinkAAC J
(AAJ K
dataAAK O
)AAP Q
;AAQ R
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54bPP B
.PPB C
GoodG2BSinkPPC N
(PPN O
dataPPO S
)PPT U
;PPU V
}QQ 
}SS 
}TT Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54b @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54c B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54c## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54c @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54d B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54d## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' Ô
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54d @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54e B
.B C
BadSinkC J
(J K
dataK O
)P Q
;Q R
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54e## B
.##B C
GoodG2BSink##C N
(##N O
data##O S
)##T U
;##U V
}$$ 
}&& 
}'' õ	
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54e @
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Á
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_61a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_61b M
.M N
	BadSourceN W
(W X
)X Y
;Y Z
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_61b++ M
.++M N
GoodG2BSource++N [
(++[ \
)++\ ]
;++] ^
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 Ï
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_61b @
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
returnAA 
dataAA 
;AA 
}BB 
publicGG 

staticGG 
intGG 
GoodG2BSourceGG #
(GG# $
)GG$ %
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK 
returnLL 
dataLL 
;LL 
}MM 
}OO 
}PP ≤!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_66a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
intAA 
[AA 
]AA 
	dataArrayAA 
=AA 
newAA 
intAA !
[AA! "
$numAA" #
]AA# $
;AA$ %
	dataArrayBB 
[BB 
$numBB 
]BB 
=BB 
dataBB 
;BB F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_66bCC B
.CCB C
BadSinkCCC J
(CCJ K
	dataArrayCCK T
)CCV W
;CCW X
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateMM 
staticMM 
voidMM 
GoodG2BMM 
(MM  
)MM  !
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
intRR 
[RR 
]RR 
	dataArrayRR 
=RR 
newRR 
intRR !
[RR! "
$numRR" #
]RR# $
;RR$ %
	dataArraySS 
[SS 
$numSS 
]SS 
=SS 
dataSS 
;SS F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_66bTT B
.TTB C
GoodG2BSinkTTC N
(TTN O
	dataArrayTTO X
)TTZ [
;TT[ \
}UU 
}WW 
}XX Ò
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_66b @
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// û"
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67a @
:A B
AbstractTestCaseC S
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%% 
{'' 	
try(( 
{)) 
string** 
stringNumber** #
=**$ %
$str**& (
;**( )
using++ 
(++ 
	WebClient++  
client++! '
=++( )
new++* -
	WebClient++. 7
(++7 8
)++8 9
)++9 :
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
client--> D
.--D E
OpenRead--E M
(--M N
$str--N g
)--g h
)--h i
)--i j
{.. 
stringNumber22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
if55 
(55 
stringNumber55  
!=55! #
null55$ (
)55( )
{66 
try77 
{88 
data99 
=99 
int99 "
.99" #
Parse99# (
(99( )
stringNumber99) 5
.995 6
Trim996 :
(99: ;
)99; <
)99< =
;99= >
}:: 
catch;; 
(;; 
FormatException;; *
exceptNumberFormat;;+ =
);;= >
{<< 
IO== 
.== 
Logger== !
.==! "
Log==" %
(==% &
NLog==& *
.==* +
LogLevel==+ 3
.==3 4
Warn==4 8
,==8 9
exceptNumberFormat==: L
,==L M
$str	==N Ä
)
==Ä Å
;
==Å Ç
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
}EE 	
	ContainerFF 
dataContainerFF 
=FF  !
newFF" %
	ContainerFF& /
(FF/ 0
)FF0 1
;FF1 2
dataContainerGG 
.GG 
containerOneGG "
=GG# $
dataGG% )
;GG) *F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67bHH B
.HHB C
BadSinkHHC J
(HHJ K
dataContainerHHK X
)HHZ [
;HH[ \
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
)RR  !
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
	ContainerWW 
dataContainerWW 
=WW  !
newWW" %
	ContainerWW& /
(WW/ 0
)WW0 1
;WW1 2
dataContainerXX 
.XX 
containerOneXX "
=XX# $
dataXX% )
;XX) *F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67bYY B
.YYB C
GoodG2BSinkYYC N
(YYN O
dataContainerYYO \
)YY^ _
;YY_ `
}ZZ 
}\\ 
}]] Ò
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67b @
{ 
public 

static 
void 
BadSink 
( F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67a Y
.Y Z
	ContainerZ c
dataContainerd q
)r s
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67a%%# ]
.%%] ^
	Container%%^ g
dataContainer%%h u
)%%v w
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// †
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68a @
:A B
AbstractTestCaseC S
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68bAA B
.AAB C
BadSinkAAC J
(AAJ K
)AAK L
;AAL M
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
dataNN 
=NN 
$numNN 
;NN F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68bOO B
.OOB C
GoodG2BSinkOOC N
(OON O
)OOO P
;OOP Q
}PP 
}RR 
}SS ©
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68b @
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68a M
.M N
dataN R
;R S
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68a&& M
.&&M N
data&&N R
;&&R S
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. ≤
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_71a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_71bAA B
.AAB C
BadSinkAAC J
(AAJ K
(AAK L
ObjectAAL R
)AAR S
dataAAS W
)AAY Z
;AAZ [
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_71bPP B
.PPB C
GoodG2BSinkPPC N
(PPN O
(PPO P
ObjectPPP V
)PPV W
dataPPW [
)PP] ^
;PP^ _
}QQ 
}SS 
}TT Ω
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_71b @
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 “&
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_72a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
	HashtableAA 
dataHashtableAA 
=AA  !
newAA" %
	HashtableAA& /
(AA/ 0
$numAA0 1
)AA1 2
;AA2 3
dataHashtableBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB !
)BB! "
;BB" #
dataHashtableCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC !
)CC! "
;CC" #
dataHashtableDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD !
)DD! "
;DD" #F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_72bEE B
.EEB C
BadSinkEEC J
(EEJ K
dataHashtableEEK X
)EEZ [
;EE[ \
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 
	HashtableTT 
dataHashtableTT 
=TT  !
newTT" %
	HashtableTT& /
(TT/ 0
$numTT0 1
)TT1 2
;TT2 3
dataHashtableUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU !
)UU! "
;UU" #
dataHashtableVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV !
)VV! "
;VV" #
dataHashtableWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW !
)WW! "
;WW" #F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_72bXX B
.XXB C
GoodG2BSinkXXC N
(XXN O
dataHashtableXXO \
)XX^ _
;XX_ `
}YY 
}[[ 
}\\ Ø
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_72b @
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00  &
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_73a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
string&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using'' 
('' 
	WebClient''  
client''! '
=''( )
new''* -
	WebClient''. 7
(''7 8
)''8 9
)''9 :
{(( 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
client))> D
.))D E
OpenRead))E M
())M N
$str))N g
)))g h
)))h i
)))i j
{** 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	

LinkedListBB 
<BB 
intBB 
>BB 
dataLinkedListBB &
=BB' (
newBB) ,

LinkedListBB- 7
<BB7 8
intBB8 ;
>BB; <
(BB< =
)BB= >
;BB> ?
dataLinkedListCC 
.CC 
AddLastCC 
(CC 
dataCC #
)CC# $
;CC$ %
dataLinkedListDD 
.DD 
AddLastDD 
(DD 
dataDD #
)DD# $
;DD$ %
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_73bFF B
.FFB C
BadSinkFFC J
(FFJ K
dataLinkedListFFK Y
)FF[ \
;FF\ ]
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
}MM 
privatePP 
staticPP 
voidPP 
GoodG2BPP 
(PP  
)PP  !
{QQ 
intRR 
dataRR 
;RR 
dataTT 
=TT 
$numTT 
;TT 

LinkedListUU 
<UU 
intUU 
>UU 
dataLinkedListUU &
=UU' (
newUU) ,

LinkedListUU- 7
<UU7 8
intUU8 ;
>UU; <
(UU< =
)UU= >
;UU> ?
dataLinkedListVV 
.VV 
AddLastVV 
(VV 
dataVV #
)VV# $
;VV$ %
dataLinkedListWW 
.WW 
AddLastWW 
(WW 
dataWW #
)WW# $
;WW$ %
dataLinkedListXX 
.XX 
AddLastXX 
(XX 
dataXX #
)XX# $
;XX$ %F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_73bYY B
.YYB C
GoodG2BSinkYYC N
(YYN O
dataLinkedListYYO ]
)YY_ `
;YY` a
}ZZ 
}\\ 
}]] €
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_73b @
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ¯(
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_74a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	

DictionaryAA 
<AA 
intAA 
,AA 
intAA 
>AA 
dataDictionaryAA *
=AA+ ,
newAA- 0

DictionaryAA1 ;
<AA; <
intAA< ?
,AA? @
intAA@ C
>AAC D
(AAD E
)AAE F
;AAF G
dataDictionaryBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB "
)BB" #
;BB# $
dataDictionaryCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC "
)CC" #
;CC# $
dataDictionaryDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD "
)DD" #
;DD# $F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_74bEE B
.EEB C
BadSinkEEC J
(EEJ K
dataDictionaryEEK Y
)EE[ \
;EE\ ]
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 

DictionaryTT 
<TT 
intTT 
,TT 
intTT 
>TT 
dataDictionaryTT *
=TT+ ,
newTT- 0

DictionaryTT1 ;
<TT; <
intTT< ?
,TT? @
intTT@ C
>TTC D
(TTD E
)TTE F
;TTF G
dataDictionaryUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU "
)UU" #
;UU# $
dataDictionaryVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV "
)VV" #
;VV# $
dataDictionaryWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW "
)WW" #
;WW# $F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_74bXX B
.XXB C
GoodG2BSinkXXC N
(XXN O
dataDictionaryXXO ]
)XX_ `
;XX` a
}YY 
}[[ 
}\\ ı
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_74b @
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 †0
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_75a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
string&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using'' 
('' 
	WebClient''  
client''! '
=''( )
new''* -
	WebClient''. 7
(''7 8
)''8 9
)''9 :
{(( 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
client))> D
.))D E
OpenRead))E M
())M N
$str))N g
)))g h
)))h i
)))i j
{** 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	
byteCC 
[CC 
]CC 
dataSerializedCC 
=CC 
nullCC  $
;CC$ %
tryDD 
{EE 	
BinaryFormatterFF 
bfFF 
=FF  
newFF! $
BinaryFormatterFF% 4
(FF4 5
)FF5 6
;FF6 7
usingGG 
(GG 
varGG 
msGG 
=GG 
newGG 
MemoryStreamGG  ,
(GG, -
)GG- .
)GG. /
{HH 
bfII 
.II 
	SerializeII 
(II 
msII 
,II  
dataII! %
)II% &
;II& '
dataSerializedJJ 
=JJ  
msJJ! #
.JJ# $
ToArrayJJ$ +
(JJ+ ,
)JJ, -
;JJ- .
}KK F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_75bLL F
.LLF G
BadSinkLLG N
(LLN O
dataSerializedLLO ]
)LL_ `
;LL` a
}MM 	
catchNN 
(NN "
SerializationExceptionNN %
exceptSerializeNN& 5
)NN5 6
{OO 	
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP 
.PP 
LogLevelPP '
.PP' (
WarnPP( ,
,PP, -
$strPP. X
,PPX Y
exceptSerializePPZ i
)PPi j
;PPj k
}QQ 	
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
int]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 
byteaa 
[aa 
]aa 
dataSerializedaa 
=aa 
nullaa  $
;aa$ %
trybb 
{cc 	
BinaryFormatterdd 
bfdd 
=dd  
newdd! $
BinaryFormatterdd% 4
(dd4 5
)dd5 6
;dd6 7
usingee 
(ee 
varee 
msee 
=ee 
newee 
MemoryStreamee  ,
(ee, -
)ee- .
)ee. /
{ff 
bfgg 
.gg 
	Serializegg 
(gg 
msgg 
,gg  
datagg! %
)gg% &
;gg& '
dataSerializedhh 
=hh  
mshh! #
.hh# $
ToArrayhh$ +
(hh+ ,
)hh, -
;hh- .
}ii F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_75bjj F
.jjF G
GoodG2BSinkjjG R
(jjR S
dataSerializedjjS a
)jjc d
;jjd e
}kk 	
catchll 
(ll "
SerializationExceptionll %
exceptSerializell& 5
)ll5 6
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
$strnn. X
,nnX Y
exceptSerializennZ i
)nni j
;nnj k
}oo 	
}pp 
}rr 
}ss €!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_75b @
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ﬁ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81a @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	J
>CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_baseAA F

baseObjectAAG Q
=AAR S
newAAT WJ
=CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_bad	AAX ï
(
AAï ñ
)
AAñ ó
;
AAó ò

baseObjectBB 
.BB 
ActionBB 
(BB 
dataBB 
)BB  
;BB  !
}CC 
publicFF 

overrideFF 
voidFF 
GoodFF 
(FF 
)FF 
{GG 
GoodG2BHH 
(HH 
)HH 
;HH 
}II 
privateLL 
voidLL 
GoodG2BLL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
dataPP 
=PP 
$numPP 
;PP J
>CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_baseQQ F

baseObjectQQG Q
=QQR S
newQQT WN
ACWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_goodG2B	QQX ô
(
QQô ö
)
QQö õ
;
QQõ ú

baseObjectRR 
.RR 
ActionRR 
(RR 
dataRR 
)RR  
;RR  !
}SS 
}UU 
}VV â
¿C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class I
=CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_bad C
:D EK
>CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_base	F Ñ
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Û
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 J
>CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_base M
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} ë
ƒC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class M
ACWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_goodG2B G
:H IK
>CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81_base	J à
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ë
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_01 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
{AA 	
IOCC 
.CC 
	WriteLineCC 
(CC 
(CC 
shortCC 
)CC  
dataCC  $
)CC$ %
;CC% &
}DD 	
}EE 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
)HH 
{II 
GoodG2BJJ 
(JJ 
)JJ 
;JJ 
}KK 
privateNN 
voidNN 
GoodG2BNN 
(NN 
)NN 
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
}YY 
}ZZ ”%
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_02 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
falseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
truejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ∏&
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_03 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
$num   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
$numUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
$numjj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ µ(
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_04 @
:A B
AbstractTestCaseC S
{ 
private   
const   
bool   
PRIVATE_CONST_TRUE   )
=  * +
true  , 0
;  0 1
private!! 
const!! 
bool!! 
PRIVATE_CONST_FALSE!! *
=!!+ ,
false!!- 2
;!!2 3
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
PRIVATE_CONST_TRUE'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
string.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? .
exceptNumberFormat??/ A
)??A B
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
shortSS 
)SS  
dataSS  $
)SS$ %
;SS% &
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
PRIVATE_CONST_FALSE\\ 
)\\  
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
shortii 
)ii  
dataii  $
)ii$ %
;ii% &
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
PRIVATE_CONST_TRUEqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
short~~ 
)~~  
data~~  $
)~~$ %
;~~% &
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ Ï'
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_05 @
:A B
AbstractTestCaseC S
{ 
private   
bool   
privateTrue   
=   
true   #
;  # $
private!! 
bool!! 
privateFalse!! 
=!! 
false!!  %
;!!% &
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
if'' 

('' 
privateTrue'' 
)'' 
{(( 	
data)) 
=)) 
int)) 
.)) 
MinValue)) 
;))  
{++ 
try,, 
{-- 
string.. 
stringNumber.. '
=..( )
$str..* ,
;.., -
using// 
(// 
	WebClient// $
client//% +
=//, -
new//. 1
	WebClient//2 ;
(//; <
)//< =
)//= >
{00 
using11 
(11 
StreamReader11 +
sr11, .
=11/ 0
new111 4
StreamReader115 A
(11A B
client11B H
.11H I
OpenRead11I Q
(11Q R
$str11R k
)11k l
)11l m
)11m n
{22 
stringNumber66 (
=66) *
sr66+ -
.66- .
ReadLine66. 6
(666 7
)667 8
;668 9
}77 
}88 
if99 
(99 
stringNumber99 $
!=99% '
null99( ,
)99, -
{:: 
try;; 
{<< 
data==  
===! "
int==# &
.==& '
Parse==' ,
(==, -
stringNumber==- 9
.==9 :
Trim==: >
(==> ?
)==? @
)==@ A
;==A B
}>> 
catch?? 
(?? 
FormatException?? .
exceptNumberFormat??/ A
)??A B
{@@ 
IOAA 
.AA 
LoggerAA %
.AA% &
LogAA& )
(AA) *
NLogAA* .
.AA. /
LogLevelAA/ 7
.AA7 8
WarnAA8 <
,AA< =
exceptNumberFormatAA> P
,AAP Q
$str	AAR Ñ
)
AAÑ Ö
;
AAÖ Ü
}BB 
}CC 
}DD 
catchEE 
(EE 
IOExceptionEE "
exceptIOEE# +
)EE+ ,
{FF 
IOGG 
.GG 
LoggerGG 
.GG 
LogGG !
(GG! "
NLogGG" &
.GG& '
LogLevelGG' /
.GG/ 0
WarnGG0 4
,GG4 5
exceptIOGG6 >
,GG> ?
$strGG@ [
)GG[ \
;GG\ ]
}HH 
}II 
}JJ 	
elseKK 
{LL 	
dataOO 
=OO 
$numOO 
;OO 
}PP 	
{QQ 	
IOSS 
.SS 
	WriteLineSS 
(SS 
(SS 
shortSS 
)SS  
dataSS  $
)SS$ %
;SS% &
}TT 	
}UU 
privateYY 
voidYY 
GoodG2B1YY 
(YY 
)YY 
{ZZ 
int[[ 
data[[ 
;[[ 
if\\ 

(\\ 
privateFalse\\ 
)\\ 
{]] 	
data`` 
=`` 
$num`` 
;`` 
}aa 	
elsebb 
{cc 	
dataee 
=ee 
$numee 
;ee 
}ff 	
{gg 	
IOii 
.ii 
	WriteLineii 
(ii 
(ii 
shortii 
)ii  
dataii  $
)ii$ %
;ii% &
}jj 	
}kk 
privatenn 
voidnn 
GoodG2B2nn 
(nn 
)nn 
{oo 
intpp 
datapp 
;pp 
ifqq 

(qq 
privateTrueqq 
)qq 
{rr 	
datatt 
=tt 
$numtt 
;tt 
}uu 	
elsevv 
{ww 	
datazz 
=zz 
$numzz 
;zz 
}{{ 	
{|| 	
IO~~ 
.~~ 
	WriteLine~~ 
(~~ 
(~~ 
short~~ 
)~~  
data~~  $
)~~$ %
;~~% &
} 	
}
ÄÄ 
public
ÇÇ 

override
ÇÇ 
void
ÇÇ 
Good
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 
GoodG2B1
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GoodG2B2
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}àà 
}ââ ã(
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_06 @
:A B
AbstractTestCaseC S
{ 
private   
const   
int   
PRIVATE_CONST_FIVE   (
=  ) *
$num  + ,
;  , -
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
PRIVATE_CONST_FIVE&& 
==&& !
$num&&" #
)&&# $
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
string-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using.. 
(.. 
	WebClient.. $
client..% +
=.., -
new... 1
	WebClient..2 ;
(..; <
)..< =
)..= >
{// 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
client00B H
.00H I
OpenRead00I Q
(00Q R
$str00R k
)00k l
)00l m
)00m n
{11 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> .
exceptNumberFormat>>/ A
)>>A B
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
shortRR 
)RR  
dataRR  $
)RR$ %
;RR% &
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
PRIVATE_CONST_FIVE[[ 
!=[[ !
$num[[" #
)[[# $
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
PRIVATE_CONST_FIVEpp 
==pp !
$numpp" #
)pp# $
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
short}} 
)}}  
data}}  $
)}}$ %
;}}% &
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà ‹'
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_07 @
:A B
AbstractTestCaseC S
{ 
private   
int   
privateFive   
=   
$num   
;    
public## 

override## 
void## 
Bad## 
(## 
)## 
{$$ 
int%% 
data%% 
;%% 
if&& 

(&& 
privateFive&& 
==&& 
$num&& 
)&& 
{'' 	
data(( 
=(( 
int(( 
.(( 
MinValue(( 
;((  
{** 
try++ 
{,, 
string-- 
stringNumber-- '
=--( )
$str--* ,
;--, -
using.. 
(.. 
	WebClient.. $
client..% +
=.., -
new... 1
	WebClient..2 ;
(..; <
)..< =
)..= >
{// 
using00 
(00 
StreamReader00 +
sr00, .
=00/ 0
new001 4
StreamReader005 A
(00A B
client00B H
.00H I
OpenRead00I Q
(00Q R
$str00R k
)00k l
)00l m
)00m n
{11 
stringNumber55 (
=55) *
sr55+ -
.55- .
ReadLine55. 6
(556 7
)557 8
;558 9
}66 
}77 
if88 
(88 
stringNumber88 $
!=88% '
null88( ,
)88, -
{99 
try:: 
{;; 
data<<  
=<<! "
int<<# &
.<<& '
Parse<<' ,
(<<, -
stringNumber<<- 9
.<<9 :
Trim<<: >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
FormatException>> .
exceptNumberFormat>>/ A
)>>A B
{?? 
IO@@ 
.@@ 
Logger@@ %
.@@% &
Log@@& )
(@@) *
NLog@@* .
.@@. /
LogLevel@@/ 7
.@@7 8
Warn@@8 <
,@@< =
exceptNumberFormat@@> P
,@@P Q
$str	@@R Ñ
)
@@Ñ Ö
;
@@Ö Ü
}AA 
}BB 
}CC 
catchDD 
(DD 
IOExceptionDD "
exceptIODD# +
)DD+ ,
{EE 
IOFF 
.FF 
LoggerFF 
.FF 
LogFF !
(FF! "
NLogFF" &
.FF& '
LogLevelFF' /
.FF/ 0
WarnFF0 4
,FF4 5
exceptIOFF6 >
,FF> ?
$strFF@ [
)FF[ \
;FF\ ]
}GG 
}HH 
}II 	
elseJJ 
{KK 	
dataNN 
=NN 
$numNN 
;NN 
}OO 	
{PP 	
IORR 
.RR 
	WriteLineRR 
(RR 
(RR 
shortRR 
)RR  
dataRR  $
)RR$ %
;RR% &
}SS 	
}TT 
privateXX 
voidXX 
GoodG2B1XX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
;ZZ 
if[[ 

([[ 
privateFive[[ 
!=[[ 
$num[[ 
)[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
elseaa 
{bb 	
datadd 
=dd 
$numdd 
;dd 
}ee 	
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
shorthh 
)hh  
datahh  $
)hh$ %
;hh% &
}ii 	
}jj 
privatemm 
voidmm 
GoodG2B2mm 
(mm 
)mm 
{nn 
intoo 
dataoo 
;oo 
ifpp 

(pp 
privateFivepp 
==pp 
$numpp 
)pp 
{qq 	
datass 
=ss 
$numss 
;ss 
}tt 	
elseuu 
{vv 	
datayy 
=yy 
$numyy 
;yy 
}zz 	
{{{ 	
IO}} 
.}} 
	WriteLine}} 
(}} 
(}} 
short}} 
)}}  
data}}  $
)}}$ %
;}}% &
}~~ 	
} 
public
ÅÅ 

override
ÅÅ 
void
ÅÅ 
Good
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 
GoodG2B1
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GoodG2B2
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}áá 
}àà µ*
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_08 @
:A B
AbstractTestCaseC S
{ 
private   
static   
bool   
PrivateReturnsTrue   *
(  * +
)  + ,
{!! 
return"" 
true"" 
;"" 
}## 
private%% 
static%% 
bool%% 
PrivateReturnsFalse%% +
(%%+ ,
)%%, -
{&& 
return'' 
false'' 
;'' 
}(( 
public++ 

override++ 
void++ 
Bad++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 
PrivateReturnsTrue.. 
(.. 
)..  
)..  !
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
string55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using66 
(66 
	WebClient66 $
client66% +
=66, -
new66. 1
	WebClient662 ;
(66; <
)66< =
)66= >
{77 
using88 
(88 
StreamReader88 +
sr88, .
=88/ 0
new881 4
StreamReader885 A
(88A B
client88B H
.88H I
OpenRead88I Q
(88Q R
$str88R k
)88k l
)88l m
)88m n
{99 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF .
exceptNumberFormatFF/ A
)FFA B
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
{XX 	
IOZZ 
.ZZ 
	WriteLineZZ 
(ZZ 
(ZZ 
shortZZ 
)ZZ  
dataZZ  $
)ZZ$ %
;ZZ% &
}[[ 	
}\\ 
private`` 
void`` 
GoodG2B1`` 
(`` 
)`` 
{aa 
intbb 
databb 
;bb 
ifcc 

(cc 
PrivateReturnsFalsecc 
(cc  
)cc  !
)cc! "
{dd 	
datagg 
=gg 
$numgg 
;gg 
}hh 	
elseii 
{jj 	
datall 
=ll 
$numll 
;ll 
}mm 	
{nn 	
IOpp 
.pp 
	WriteLinepp 
(pp 
(pp 
shortpp 
)pp  
datapp  $
)pp$ %
;pp% &
}qq 	
}rr 
privateuu 
voiduu 
GoodG2B2uu 
(uu 
)uu 
{vv 
intww 
dataww 
;ww 
ifxx 

(xx 
PrivateReturnsTruexx 
(xx 
)xx  
)xx  !
{yy 	
data{{ 
={{ 
$num{{ 
;{{ 
}|| 	
else}} 
{~~ 	
data
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
{
ÉÉ 	
IO
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ 
(
ÖÖ 
(
ÖÖ 
short
ÖÖ 
)
ÖÖ  
data
ÖÖ  $
)
ÖÖ$ %
;
ÖÖ% &
}
ÜÜ 	
}
áá 
public
ââ 

override
ââ 
void
ââ 
Good
ââ 
(
ââ 
)
ââ 
{
ää 
GoodG2B1
ãã 
(
ãã 
)
ãã 
;
ãã 
GoodG2B2
åå 
(
åå 
)
åå 
;
åå 
}
çç 
}èè 
}êê ‡&
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_09 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_TRUE   #
)  # $
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU !
STATIC_READONLY_FALSEUU $
)UU$ %
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_TRUEjj #
)jj# $
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ¬&
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_10 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticTrue   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
staticFalseUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticTruejj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ±'
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_11 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   
StaticReturnsTrue    
(    !
)  ! "
)  " #
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 
StaticReturnsFalseUU !
(UU! "
)UU" #
)UU# $
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 
StaticReturnsTruejj  
(jj  !
)jj! "
)jj" #
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ™!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_12 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   $
StaticReturnsTrueOrFalse   '
(  ' (
)  ( )
)  ) *
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataGG 
=GG 
$numGG 
;GG 
}HH 	
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
shortKK 
)KK  
dataKK  $
)KK$ %
;KK% &
}LL 	
}MM 
privateRR 
voidRR 
GoodG2BRR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU $
StaticReturnsTrueOrFalseUU '
(UU' (
)UU( )
)UU) *
{VV 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
elseZZ 
{[[ 	
data]] 
=]] 
$num]] 
;]] 
}^^ 	
{__ 	
IOaa 
.aa 
	WriteLineaa 
(aa 
(aa 
shortaa 
)aa  
dataaa  $
)aa$ %
;aa% &
}bb 	
}cc 
publicee 

overrideee 
voidee 
Goodee 
(ee 
)ee 
{ff 
GoodG2Bgg 
(gg 
)gg 
;gg 
}hh 
}jj 
}kk ≈'
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_13 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.    
STATIC_READONLY_FIVE   #
==  $ &
$num  ' (
)  ( )
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU  
STATIC_READONLY_FIVEUU #
!=UU$ &
$numUU' (
)UU( )
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj  
STATIC_READONLY_FIVEjj #
==jj$ &
$numjj' (
)jj( )
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ ß'
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_14 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if   

(   
IO   
.   

staticFive   
==   
$num   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
{JJ 	
IOLL 
.LL 
	WriteLineLL 
(LL 
(LL 
shortLL 
)LL  
dataLL  $
)LL$ %
;LL% &
}MM 	
}NN 
privateRR 
voidRR 
GoodG2B1RR 
(RR 
)RR 
{SS 
intTT 
dataTT 
;TT 
ifUU 

(UU 
IOUU 
.UU 

staticFiveUU 
!=UU 
$numUU 
)UU 
{VV 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data^^ 
=^^ 
$num^^ 
;^^ 
}__ 	
{`` 	
IObb 
.bb 
	WriteLinebb 
(bb 
(bb 
shortbb 
)bb  
databb  $
)bb$ %
;bb% &
}cc 	
}dd 
privategg 
voidgg 
GoodG2B2gg 
(gg 
)gg 
{hh 
intii 
dataii 
;ii 
ifjj 

(jj 
IOjj 
.jj 

staticFivejj 
==jj 
$numjj 
)jj 
{kk 	
datamm 
=mm 
$nummm 
;mm 
}nn 	
elseoo 
{pp 	
datass 
=ss 
$numss 
;ss 
}tt 	
{uu 	
IOww 
.ww 
	WriteLineww 
(ww 
(ww 
shortww 
)ww  
dataww  $
)ww$ %
;ww% &
}xx 	
}yy 
public{{ 

override{{ 
void{{ 
Good{{ 
({{ 
){{ 
{|| 
GoodG2B1}} 
(}} 
)}} 
;}} 
GoodG2B2~~ 
(~~ 
)~~ 
;~~ 
} 
}ÅÅ 
}ÇÇ î)
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_15 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch   
(   
$num   
)   
{!! 	
case"" 
$num"" 
:"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
string(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using)) 
()) 
	WebClient)) $
client))% +
=)), -
new)). 1
	WebClient))2 ;
()); <
)))< =
)))= >
{** 
using++ 
(++ 
StreamReader++ +
sr++, .
=++/ 0
new++1 4
StreamReader++5 A
(++A B
client++B H
.++H I
OpenRead++I Q
(++Q R
$str++R k
)++k l
)++l m
)++m n
{,, 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 .
exceptNumberFormat99/ A
)99A B
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
breakDD 
;DD 
defaultEE 
:EE 
dataHH 
=HH 
$numHH 
;HH 
breakII 
;II 
}JJ 	
{KK 	
IOMM 
.MM 
	WriteLineMM 
(MM 
(MM 
shortMM 
)MM  
dataMM  $
)MM$ %
;MM% &
}NN 	
}OO 
privateSS 
voidSS 
GoodG2B1SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
=UU 
$numUU 
;UU 
switchVV 
(VV 
$numVV 
)VV 
{WW 	
caseXX 
$numXX 
:XX 
data[[ 
=[[ 
$num[[ 
;[[ 
break\\ 
;\\ 
default]] 
:]] 
data__ 
=__ 
$num__ 
;__ 
break`` 
;`` 
}aa 	
{bb 	
IOdd 
.dd 
	WriteLinedd 
(dd 
(dd 
shortdd 
)dd  
datadd  $
)dd$ %
;dd% &
}ee 	
}ff 
privateii 
voidii 
GoodG2B2ii 
(ii 
)ii 
{jj 
intkk 
datakk 
=kk 
$numkk 
;kk 
switchll 
(ll 
$numll 
)ll 
{mm 	
casenn 
$numnn 
:nn 
datapp 
=pp 
$numpp 
;pp 
breakqq 
;qq 
defaultrr 
:rr 
datauu 
=uu 
$numuu 
;uu 
breakvv 
;vv 
}ww 	
{xx 	
IOzz 
.zz 
	WriteLinezz 
(zz 
(zz 
shortzz 
)zz  
datazz  $
)zz$ %
;zz% &
}{{ 	
}|| 
public~~ 

override~~ 
void~~ 
Good~~ 
(~~ 
)~~ 
{ 
GoodG2B1
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
GoodG2B2
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}ÑÑ 
}ÖÖ Ó
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_16 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while   
(   
true   
)   
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
breakCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
whilePP 
(PP 
truePP 
)PP 
{QQ 	
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
shortXX 
)XX  
dataXX  $
)XX$ %
;XX% &
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B^^ 
(^^ 
)^^ 
;^^ 
}__ 
}aa 
}bb ﬁ 
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_17 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
forAA 
(AA 
intAA 
iAA 
=AA 
$numAA 
;AA 
iAA 
<AA 
$numAA 
;AA 
iAA  
++AA  "
)AA" #
{BB 	
{CC 
IOEE 
.EE 
	WriteLineEE 
(EE 
(EE 
shortEE #
)EE# $
dataEE$ (
)EE( )
;EE) *
}FF 
}GG 	
}HH 
privateMM 
voidMM 
GoodG2BMM 
(MM 
)MM 
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
forRR 
(RR 
intRR 
iRR 
=RR 
$numRR 
;RR 
iRR 
<RR 
$numRR 
;RR 
iRR  
++RR  "
)RR" #
{SS 	
{TT 
IOVV 
.VV 
	WriteLineVV 
(VV 
(VV 
shortVV #
)VV# $
dataVV$ (
)VV( )
;VV) *
}WW 
}XX 	
}YY 
public[[ 

override[[ 
void[[ 
Good[[ 
([[ 
)[[ 
{\\ 
GoodG2B]] 
(]] 
)]] 
;]] 
}^^ 
}`` 
}aa ﬁ3
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_21 @
:A B
AbstractTestCaseC S
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 

badPrivate## 
=## 
true## 
;## 
data$$ 
=$$ 

Bad_source$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
private++ 
int++ 

Bad_source++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
if.. 

(.. 

badPrivate.. 
).. 
{// 	
data00 
=00 
int00 
.00 
MinValue00 
;00  
{22 
try33 
{44 
string55 
stringNumber55 '
=55( )
$str55* ,
;55, -
using66 
(66 
	WebClient66 $
client66% +
=66, -
new66. 1
	WebClient662 ;
(66; <
)66< =
)66= >
{77 
using88 
(88 
StreamReader88 +
sr88, .
=88/ 0
new881 4
StreamReader885 A
(88A B
client88B H
.88H I
OpenRead88I Q
(88Q R
$str88R k
)88k l
)88l m
)88m n
{99 
stringNumber== (
===) *
sr==+ -
.==- .
ReadLine==. 6
(==6 7
)==7 8
;==8 9
}>> 
}?? 
if@@ 
(@@ 
stringNumber@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
tryBB 
{CC 
dataDD  
=DD! "
intDD# &
.DD& '
ParseDD' ,
(DD, -
stringNumberDD- 9
.DD9 :
TrimDD: >
(DD> ?
)DD? @
)DD@ A
;DDA B
}EE 
catchFF 
(FF 
FormatExceptionFF .
exceptNumberFormatFF/ A
)FFA B
{GG 
IOHH 
.HH 
LoggerHH %
.HH% &
LogHH& )
(HH) *
NLogHH* .
.HH. /
LogLevelHH/ 7
.HH7 8
WarnHH8 <
,HH< =
exceptNumberFormatHH> P
,HHP Q
$str	HHR Ñ
)
HHÑ Ö
;
HHÖ Ü
}II 
}JJ 
}KK 
catchLL 
(LL 
IOExceptionLL "
exceptIOLL# +
)LL+ ,
{MM 
IONN 
.NN 
LoggerNN 
.NN 
LogNN !
(NN! "
NLogNN" &
.NN& '
LogLevelNN' /
.NN/ 0
WarnNN0 4
,NN4 5
exceptIONN6 >
,NN> ?
$strNN@ [
)NN[ \
;NN\ ]
}OO 
}PP 
}QQ 	
elseRR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
returnXX 
dataXX 
;XX 
}YY 
private\\ 
bool\\ 
goodG2B1_private\\ !
=\\" #
false\\$ )
;\\) *
private]] 
bool]] 
GoodG2B2_private]] !
=]]" #
false]]$ )
;]]) *
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
privateff 
voidff 
GoodG2B1ff 
(ff 
)ff 
{gg 
inthh 
datahh 
;hh 
goodG2B1_privateii 
=ii 
falseii  
;ii  !
datajj 
=jj 
GoodG2B1_sourcejj 
(jj 
)jj  
;jj  !
{kk 	
IOmm 
.mm 
	WriteLinemm 
(mm 
(mm 
shortmm 
)mm  
datamm  $
)mm$ %
;mm% &
}nn 	
}oo 
privateqq 
intqq 
GoodG2B1_sourceqq 
(qq  
)qq  !
{rr 
intss 
datass 
=ss 
$numss 
;ss 
iftt 

(tt 
goodG2B1_privatett 
)tt 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
elsezz 
{{{ 	
data}} 
=}} 
$num}} 
;}} 
}~~ 	
return 
data 
; 
}
ÄÄ 
private
ÉÉ 
void
ÉÉ 
GoodG2B2
ÉÉ 
(
ÉÉ 
)
ÉÉ 
{
ÑÑ 
int
ÖÖ 
data
ÖÖ 
;
ÖÖ 
GoodG2B2_private
ÜÜ 
=
ÜÜ 
true
ÜÜ 
;
ÜÜ  
data
áá 
=
áá 
GoodG2B2_source
áá 
(
áá 
)
áá  
;
áá  !
{
àà 	
IO
ää 
.
ää 
	WriteLine
ää 
(
ää 
(
ää 
short
ää 
)
ää  
data
ää  $
)
ää$ %
;
ää% &
}
ãã 	
}
åå 
private
éé 
int
éé 
GoodG2B2_source
éé 
(
éé  
)
éé  !
{
èè 
int
êê 
data
êê 
=
êê 
$num
êê 
;
êê 
if
ëë 

(
ëë 
GoodG2B2_private
ëë 
)
ëë 
{
íí 	
data
îî 
=
îî 
$num
îî 
;
îî 
}
ïï 	
else
ññ 
{
óó 	
data
öö 
=
öö 
$num
öö 
;
öö 
}
õõ 	
return
úú 
data
úú 
;
úú 
}
ùù 
}üü 
}†† ¶
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22a A
:B C
AbstractTestCaseD T
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22b!! J
.!!J K
	BadSource!!K T
(!!T U
)!!U V
;!!V W
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
short$$ 
)$$  
data$$  $
)$$$ %
;$$% &
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22b88 J
.88J K
GoodG2B1Source88K Y
(88Y Z
)88Z [
;88[ \
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
short;; 
);;  
data;;  $
);;$ %
;;;% &
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22bDD J
.DDJ K
GoodG2B2SourceDDK Y
(DDY Z
)DDZ [
;DD[ \
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
shortGG 
)GG  
dataGG  $
)GG$ %
;GG% &
}HH 	
}II 
}KK 
}LL Ã"
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22b A
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if   

(   G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22a   G
.  G H
badPublicStatic  H W
)  W X
{!! 	
data"" 
="" 
int"" 
."" 
MinValue"" 
;""  
{$$ 
try%% 
{&& 
string'' 
stringNumber'' '
=''( )
$str''* ,
;'', -
using(( 
((( 
	WebClient(( $
client((% +
=((, -
new((. 1
	WebClient((2 ;
(((; <
)((< =
)((= >
{)) 
using** 
(** 
StreamReader** +
sr**, .
=**/ 0
new**1 4
StreamReader**5 A
(**A B
client**B H
.**H I
OpenRead**I Q
(**Q R
$str**R k
)**k l
)**l m
)**m n
{++ 
stringNumber// (
=//) *
sr//+ -
.//- .
ReadLine//. 6
(//6 7
)//7 8
;//8 9
}00 
}11 
if22 
(22 
stringNumber22 $
!=22% '
null22( ,
)22, -
{33 
try44 
{55 
data66  
=66! "
int66# &
.66& '
Parse66' ,
(66, -
stringNumber66- 9
.669 :
Trim66: >
(66> ?
)66? @
)66@ A
;66A B
}77 
catch88 
(88 
FormatException88 .
exceptNumberFormat88/ A
)88A B
{99 
IO:: 
.:: 
Logger:: %
.::% &
Log::& )
(::) *
NLog::* .
.::. /
LogLevel::/ 7
.::7 8
Warn::8 <
,::< =
exceptNumberFormat::> P
,::P Q
$str	::R Ñ
)
::Ñ Ö
;
::Ö Ü
};; 
}<< 
}== 
catch>> 
(>> 
IOException>> "
exceptIO>># +
)>>+ ,
{?? 
IO@@ 
.@@ 
Logger@@ 
.@@ 
Log@@ !
(@@! "
NLog@@" &
.@@& '
LogLevel@@' /
.@@/ 0
Warn@@0 4
,@@4 5
exceptIO@@6 >
,@@> ?
$str@@@ [
)@@[ \
;@@\ ]
}AA 
}BB 
}CC 	
elseDD 
{EE 	
dataHH 
=HH 
$numHH 
;HH 
}II 	
returnJJ 
dataJJ 
;JJ 
}KK 
publicPP 

staticPP 
intPP 
GoodG2B1SourcePP $
(PP$ %
)PP% &
{QQ 
intRR 
dataRR 
;RR 
ifSS 

(SS G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22aSS G
.SSG H 
goodG2B1PublicStaticSSH \
)SS\ ]
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
elseYY 
{ZZ 	
data\\ 
=\\ 
$num\\ 
;\\ 
}]] 	
return^^ 
data^^ 
;^^ 
}__ 
publicbb 

staticbb 
intbb 
GoodG2B2Sourcebb $
(bb$ %
)bb% &
{cc 
intdd 
datadd 
;dd 
ifee 

(ee G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22aee G
.eeG H 
GoodG2B2PublicStaticeeH \
)ee\ ]
{ff 	
datahh 
=hh 
$numhh 
;hh 
}ii 	
elsejj 
{kk 	
datann 
=nn 
$numnn 
;nn 
}oo 	
returnpp 
datapp 
;pp 
}qq 
}ss 
}tt Ü!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_31 @
:A B
AbstractTestCaseC S
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
dataCopy   
;   
{!! 	
int"" 
data"" 
;"" 
data## 
=## 
int## 
.## 
MinValue## 
;##  
{%% 
try&& 
{'' 
string(( 
stringNumber(( '
=((( )
$str((* ,
;((, -
using)) 
()) 
	WebClient)) $
client))% +
=)), -
new)). 1
	WebClient))2 ;
()); <
)))< =
)))= >
{** 
using++ 
(++ 
StreamReader++ +
sr++, .
=++/ 0
new++1 4
StreamReader++5 A
(++A B
client++B H
.++H I
OpenRead++I Q
(++Q R
$str++R k
)++k l
)++l m
)++m n
{,, 
stringNumber00 (
=00) *
sr00+ -
.00- .
ReadLine00. 6
(006 7
)007 8
;008 9
}11 
}22 
if33 
(33 
stringNumber33 $
!=33% '
null33( ,
)33, -
{44 
try55 
{66 
data77  
=77! "
int77# &
.77& '
Parse77' ,
(77, -
stringNumber77- 9
.779 :
Trim77: >
(77> ?
)77? @
)77@ A
;77A B
}88 
catch99 
(99 
FormatException99 .
exceptNumberFormat99/ A
)99A B
{:: 
IO;; 
.;; 
Logger;; %
.;;% &
Log;;& )
(;;) *
NLog;;* .
.;;. /
LogLevel;;/ 7
.;;7 8
Warn;;8 <
,;;< =
exceptNumberFormat;;> P
,;;P Q
$str	;;R Ñ
)
;;Ñ Ö
;
;;Ö Ü
}<< 
}== 
}>> 
catch?? 
(?? 
IOException?? "
exceptIO??# +
)??+ ,
{@@ 
IOAA 
.AA 
LoggerAA 
.AA 
LogAA !
(AA! "
NLogAA" &
.AA& '
LogLevelAA' /
.AA/ 0
WarnAA0 4
,AA4 5
exceptIOAA6 >
,AA> ?
$strAA@ [
)AA[ \
;AA\ ]
}BB 
}CC 
dataCopyDD 
=DD 
dataDD 
;DD 
}EE 	
{FF 	
intGG 
dataGG 
=GG 
dataCopyGG 
;GG  
{HH 
IOJJ 
.JJ 
	WriteLineJJ 
(JJ 
(JJ 
shortJJ #
)JJ# $
dataJJ$ (
)JJ( )
;JJ) *
}KK 
}LL 	
}MM 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
)PP 
{QQ 
GoodG2BRR 
(RR 
)RR 
;RR 
}SS 
privateVV 
voidVV 
GoodG2BVV 
(VV 
)VV 
{WW 
intXX 
dataCopyXX 
;XX 
{YY 	
intZZ 
dataZZ 
;ZZ 
data\\ 
=\\ 
$num\\ 
;\\ 
dataCopy]] 
=]] 
data]] 
;]] 
}^^ 	
{__ 	
int`` 
data`` 
=`` 
dataCopy`` 
;``  
{aa 
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
shortcc #
)cc# $
datacc$ (
)cc( )
;cc) *
}dd 
}ee 	
}ff 
}hh 
}ii ä!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_41 @
:A B
AbstractTestCaseC S
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO   
.   
	WriteLine   
(   
(   
short   
)    
data    $
)  $ %
;  % &
}!! 	
}"" 
public$$ 

override$$ 
void$$ 
Bad$$ 
($$ 
)$$ 
{%% 
int&& 
data&& 
;&& 
data'' 
='' 
int'' 
.'' 
MinValue'' 
;'' 
{)) 	
try** 
{++ 
string,, 
stringNumber,, #
=,,$ %
$str,,& (
;,,( )
using-- 
(-- 
	WebClient--  
client--! '
=--( )
new--* -
	WebClient--. 7
(--7 8
)--8 9
)--9 :
{.. 
using// 
(// 
StreamReader// '
sr//( *
=//+ ,
new//- 0
StreamReader//1 =
(//= >
client//> D
.//D E
OpenRead//E M
(//M N
$str//N g
)//g h
)//h i
)//i j
{00 
stringNumber44 $
=44% &
sr44' )
.44) *
ReadLine44* 2
(442 3
)443 4
;444 5
}55 
}66 
if77 
(77 
stringNumber77  
!=77! #
null77$ (
)77( )
{88 
try99 
{:: 
data;; 
=;; 
int;; "
.;;" #
Parse;;# (
(;;( )
stringNumber;;) 5
.;;5 6
Trim;;6 :
(;;: ;
);;; <
);;< =
;;;= >
}<< 
catch== 
(== 
FormatException== *
exceptNumberFormat==+ =
)=== >
{>> 
IO?? 
.?? 
Logger?? !
.??! "
Log??" %
(??% &
NLog??& *
.??* +
LogLevel??+ 3
.??3 4
Warn??4 8
,??8 9
exceptNumberFormat??: L
,??L M
$str	??N Ä
)
??Ä Å
;
??Å Ç
}@@ 
}AA 
}BB 
catchCC 
(CC 
IOExceptionCC 
exceptIOCC '
)CC' (
{DD 
IOEE 
.EE 
LoggerEE 
.EE 
LogEE 
(EE 
NLogEE "
.EE" #
LogLevelEE# +
.EE+ ,
WarnEE, 0
,EE0 1
exceptIOEE2 :
,EE: ;
$strEE< W
)EEW X
;EEX Y
}FF 
}GG 	
BadSinkHH 
(HH 
dataHH 
)HH 
;HH 
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateQQ 
staticQQ 
voidQQ 
GoodG2BSinkQQ #
(QQ# $
intQQ$ '
dataQQ( ,
)QQ- .
{RR 
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
shortUU 
)UU  
dataUU  $
)UU$ %
;UU% &
}VV 	
}WW 
privateZZ 
staticZZ 
voidZZ 
GoodG2BZZ 
(ZZ  
)ZZ  !
{[[ 
int\\ 
data\\ 
;\\ 
data^^ 
=^^ 
$num^^ 
;^^ 
GoodG2BSink__ 
(__ 
data__ 
)__ 
;__ 
}`` 
}bb 
}cc Ù!
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_42 @
:A B
AbstractTestCaseC S
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
string$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 *
exceptNumberFormat55+ =
)55= >
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	
return@@ 
data@@ 
;@@ 
}AA 
publicDD 

overrideDD 
voidDD 
BadDD 
(DD 
)DD 
{EE 
intFF 
dataFF 
=FF 
	BadSourceFF 
(FF 
)FF 
;FF 
{GG 	
IOII 
.II 
	WriteLineII 
(II 
(II 
shortII 
)II  
dataII  $
)II$ %
;II% &
}JJ 	
}KK 
privateNN 
staticNN 
intNN 
GoodG2BSourceNN $
(NN$ %
)NN% &
{OO 
intPP 
dataPP 
;PP 
dataRR 
=RR 
$numRR 
;RR 
returnSS 
dataSS 
;SS 
}TT 
privateWW 
staticWW 
voidWW 
GoodG2BWW 
(WW  
)WW  !
{XX 
intYY 
dataYY 
=YY 
GoodG2BSourceYY  
(YY  !
)YY! "
;YY" #
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
short\\ 
)\\  
data\\  $
)\\$ %
;\\% &
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2Bbb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ∫#
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_45 @
:A B
AbstractTestCaseC S
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private   
void   
BadSink   
(   
)   
{!! 
int"" 
data"" 
="" 
dataBad"" 
;"" 
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
short%% 
)%%  
data%%  $
)%%$ %
;%%% &
}&& 	
}'' 
public** 

override** 
void** 
Bad** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
data-- 
=-- 
int-- 
.-- 
MinValue-- 
;-- 
{// 	
try00 
{11 
string22 
stringNumber22 #
=22$ %
$str22& (
;22( )
using33 
(33 
	WebClient33  
client33! '
=33( )
new33* -
	WebClient33. 7
(337 8
)338 9
)339 :
{44 
using55 
(55 
StreamReader55 '
sr55( *
=55+ ,
new55- 0
StreamReader551 =
(55= >
client55> D
.55D E
OpenRead55E M
(55M N
$str55N g
)55g h
)55h i
)55i j
{66 
stringNumber:: $
=::% &
sr::' )
.::) *
ReadLine::* 2
(::2 3
)::3 4
;::4 5
};; 
}<< 
if== 
(== 
stringNumber==  
!===! #
null==$ (
)==( )
{>> 
try?? 
{@@ 
dataAA 
=AA 
intAA "
.AA" #
ParseAA# (
(AA( )
stringNumberAA) 5
.AA5 6
TrimAA6 :
(AA: ;
)AA; <
)AA< =
;AA= >
}BB 
catchCC 
(CC 
FormatExceptionCC *
exceptNumberFormatCC+ =
)CC= >
{DD 
IOEE 
.EE 
LoggerEE !
.EE! "
LogEE" %
(EE% &
NLogEE& *
.EE* +
LogLevelEE+ 3
.EE3 4
WarnEE4 8
,EE8 9
exceptNumberFormatEE: L
,EEL M
$str	EEN Ä
)
EEÄ Å
;
EEÅ Ç
}FF 
}GG 
}HH 
catchII 
(II 
IOExceptionII 
exceptIOII '
)II' (
{JJ 
IOKK 
.KK 
LoggerKK 
.KK 
LogKK 
(KK 
NLogKK "
.KK" #
LogLevelKK# +
.KK+ ,
WarnKK, 0
,KK0 1
exceptIOKK2 :
,KK: ;
$strKK< W
)KKW X
;KKX Y
}LL 
}MM 	
dataBadNN 
=NN 
dataNN 
;NN 
BadSinkOO 
(OO 
)OO 
;OO 
}PP 
publicSS 

overrideSS 
voidSS 
GoodSS 
(SS 
)SS 
{TT 
GoodG2BUU 
(UU 
)UU 
;UU 
}VV 
privateXX 
voidXX 
GoodG2BSinkXX 
(XX 
)XX 
{YY 
intZZ 
dataZZ 
=ZZ 
dataGoodG2BZZ 
;ZZ 
{[[ 	
IO]] 
.]] 
	WriteLine]] 
(]] 
(]] 
short]] 
)]]  
data]]  $
)]]$ %
;]]% &
}^^ 	
}__ 
privatebb 
voidbb 
GoodG2Bbb 
(bb 
)bb 
{cc 
intdd 
datadd 
;dd 
dataff 
=ff 
$numff 
;ff 
dataGoodG2Bgg 
=gg 
datagg 
;gg 
GoodG2BSinkhh 
(hh 
)hh 
;hh 
}ii 
}kk 
}ll æ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_51a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
int 
. 
MinValue 
; 
{!! 	
try"" 
{## 
string$$ 
stringNumber$$ #
=$$$ %
$str$$& (
;$$( )
using%% 
(%% 
	WebClient%%  
client%%! '
=%%( )
new%%* -
	WebClient%%. 7
(%%7 8
)%%8 9
)%%9 :
{&& 
using'' 
('' 
StreamReader'' '
sr''( *
=''+ ,
new''- 0
StreamReader''1 =
(''= >
client''> D
.''D E
OpenRead''E M
(''M N
$str''N g
)''g h
)''h i
)''i j
{(( 
stringNumber,, $
=,,% &
sr,,' )
.,,) *
ReadLine,,* 2
(,,2 3
),,3 4
;,,4 5
}-- 
}.. 
if// 
(// 
stringNumber//  
!=//! #
null//$ (
)//( )
{00 
try11 
{22 
data33 
=33 
int33 "
.33" #
Parse33# (
(33( )
stringNumber33) 5
.335 6
Trim336 :
(33: ;
)33; <
)33< =
;33= >
}44 
catch55 
(55 
FormatException55 *
exceptNumberFormat55+ =
)55= >
{66 
IO77 
.77 
Logger77 !
.77! "
Log77" %
(77% &
NLog77& *
.77* +
LogLevel77+ 3
.773 4
Warn774 8
,778 9
exceptNumberFormat77: L
,77L M
$str	77N Ä
)
77Ä Å
;
77Å Ç
}88 
}99 
}:: 
catch;; 
(;; 
IOException;; 
exceptIO;; '
);;' (
{<< 
IO== 
.== 
Logger== 
.== 
Log== 
(== 
NLog== "
.==" #
LogLevel==# +
.==+ ,
Warn==, 0
,==0 1
exceptIO==2 :
,==: ;
$str==< W
)==W X
;==X Y
}>> 
}?? 	G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_51b@@ C
.@@C D
BadSink@@D K
(@@K L
data@@L P
)@@R S
;@@S T
}AA 
publicDD 

overrideDD 
voidDD 
GoodDD 
(DD 
)DD 
{EE 
GoodG2BFF 
(FF 
)FF 
;FF 
}GG 
privateJJ 
voidJJ 
GoodG2BJJ 
(JJ 
)JJ 
{KK 
intLL 
dataLL 
;LL 
dataNN 
=NN 
$numNN 
;NN G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_51bOO C
.OOC D
GoodG2BSinkOOD O
(OOO P
dataOOP T
)OOV W
;OOW X
}PP 
}RR 
}SS ü	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_51b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
short'' 
)''  
data''  $
)''$ %
;''% &
}(( 	
})) 
}++ 
},, æ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52bAA C
.AAC D
BadSinkAAD K
(AAK L
dataAAL P
)AAQ R
;AAR S
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52bPP C
.PPC D
GoodG2BSinkPPD O
(PPO P
dataPPP T
)PPU V
;PPV W
}QQ 
}SS 
}TT Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ü	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52c A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- æ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53bAA C
.AAC D
BadSinkAAD K
(AAK L
dataAAL P
)AAQ R
;AAR S
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53bPP C
.PPC D
GoodG2BSinkPPD O
(PPO P
dataPPP T
)PPU V
;PPV W
}QQ 
}SS 
}TT Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53c A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ü	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53d A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- æ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54bAA C
.AAC D
BadSinkAAD K
(AAK L
dataAAL P
)AAQ R
;AAR S
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
voidKK 
GoodG2BKK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54bPP C
.PPC D
GoodG2BSinkPPD O
(PPO P
dataPPP T
)PPU V
;PPV W
}QQ 
}SS 
}TT Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54b A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54c C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54c## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54c A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54d C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54d## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' Û
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54d A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54e C
.C D
BadSinkD K
(K L
dataL P
)Q R
;R S
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54e## C
.##C D
GoodG2BSink##D O
(##O P
data##P T
)##U V
;##V W
}$$ 
}&& 
}'' ü	
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54e A
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
short(( 
)((  
data((  $
)(($ %
;((% &
})) 	
}** 
},, 
}-- Ì
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_61a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_61b N
.N O
	BadSourceO X
(X Y
)Y Z
;Z [
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_61b++ N
.++N O
GoodG2BSource++O \
(++\ ]
)++] ^
;++^ _
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
short.. 
)..  
data..  $
)..$ %
;..% &
}// 	
}00 
}22 
}33 Ó
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_61b A
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
returnAA 
dataAA 
;AA 
}BB 
publicGG 

staticGG 
intGG 
GoodG2BSourceGG #
(GG# $
)GG$ %
{HH 
intII 
dataII 
;II 
dataKK 
=KK 
$numKK 
;KK 
returnLL 
dataLL 
;LL 
}MM 
}OO 
}PP ∂!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_66a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
intAA 
[AA 
]AA 
	dataArrayAA 
=AA 
newAA 
intAA !
[AA! "
$numAA" #
]AA# $
;AA$ %
	dataArrayBB 
[BB 
$numBB 
]BB 
=BB 
dataBB 
;BB G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_66bCC C
.CCC D
BadSinkCCD K
(CCK L
	dataArrayCCL U
)CCW X
;CCX Y
}DD 
publicGG 

overrideGG 
voidGG 
GoodGG 
(GG 
)GG 
{HH 
GoodG2BII 
(II 
)II 
;II 
}JJ 
privateMM 
staticMM 
voidMM 
GoodG2BMM 
(MM  
)MM  !
{NN 
intOO 
dataOO 
;OO 
dataQQ 
=QQ 
$numQQ 
;QQ 
intRR 
[RR 
]RR 
	dataArrayRR 
=RR 
newRR 
intRR !
[RR! "
$numRR" #
]RR# $
;RR$ %
	dataArraySS 
[SS 
$numSS 
]SS 
=SS 
dataSS 
;SS G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_66bTT C
.TTC D
GoodG2BSinkTTD O
(TTO P
	dataArrayTTP Y
)TT[ \
;TT\ ]
}UU 
}WW 
}XX ı
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_66b A
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// ¢"
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67a A
:B C
AbstractTestCaseD T
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
}   
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
;$$ 
data%% 
=%% 
int%% 
.%% 
MinValue%% 
;%% 
{'' 	
try(( 
{)) 
string** 
stringNumber** #
=**$ %
$str**& (
;**( )
using++ 
(++ 
	WebClient++  
client++! '
=++( )
new++* -
	WebClient++. 7
(++7 8
)++8 9
)++9 :
{,, 
using-- 
(-- 
StreamReader-- '
sr--( *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
client--> D
.--D E
OpenRead--E M
(--M N
$str--N g
)--g h
)--h i
)--i j
{.. 
stringNumber22 $
=22% &
sr22' )
.22) *
ReadLine22* 2
(222 3
)223 4
;224 5
}33 
}44 
if55 
(55 
stringNumber55  
!=55! #
null55$ (
)55( )
{66 
try77 
{88 
data99 
=99 
int99 "
.99" #
Parse99# (
(99( )
stringNumber99) 5
.995 6
Trim996 :
(99: ;
)99; <
)99< =
;99= >
}:: 
catch;; 
(;; 
FormatException;; *
exceptNumberFormat;;+ =
);;= >
{<< 
IO== 
.== 
Logger== !
.==! "
Log==" %
(==% &
NLog==& *
.==* +
LogLevel==+ 3
.==3 4
Warn==4 8
,==8 9
exceptNumberFormat==: L
,==L M
$str	==N Ä
)
==Ä Å
;
==Å Ç
}>> 
}?? 
}@@ 
catchAA 
(AA 
IOExceptionAA 
exceptIOAA '
)AA' (
{BB 
IOCC 
.CC 
LoggerCC 
.CC 
LogCC 
(CC 
NLogCC "
.CC" #
LogLevelCC# +
.CC+ ,
WarnCC, 0
,CC0 1
exceptIOCC2 :
,CC: ;
$strCC< W
)CCW X
;CCX Y
}DD 
}EE 	
	ContainerFF 
dataContainerFF 
=FF  !
newFF" %
	ContainerFF& /
(FF/ 0
)FF0 1
;FF1 2
dataContainerGG 
.GG 
containerOneGG "
=GG# $
dataGG% )
;GG) *G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67bHH C
.HHC D
BadSinkHHD K
(HHK L
dataContainerHHL Y
)HH[ \
;HH\ ]
}II 
publicLL 

overrideLL 
voidLL 
GoodLL 
(LL 
)LL 
{MM 
GoodG2BNN 
(NN 
)NN 
;NN 
}OO 
privateRR 
staticRR 
voidRR 
GoodG2BRR 
(RR  
)RR  !
{SS 
intTT 
dataTT 
;TT 
dataVV 
=VV 
$numVV 
;VV 
	ContainerWW 
dataContainerWW 
=WW  !
newWW" %
	ContainerWW& /
(WW/ 0
)WW0 1
;WW1 2
dataContainerXX 
.XX 
containerOneXX "
=XX# $
dataXX% )
;XX) *G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67bYY C
.YYC D
GoodG2BSinkYYD O
(YYO P
dataContainerYYP ]
)YY_ `
;YY` a
}ZZ 
}\\ 
}]] ˜
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67b A
{ 
public 

static 
void 
BadSink 
( G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67a Z
.Z [
	Container[ d
dataContainere r
)s t
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67a%%# ^
.%%^ _
	Container%%_ h
dataContainer%%i v
)%%w x
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
short** 
)**  
data**  $
)**$ %
;**% &
}++ 	
},, 
}.. 
}// §
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68a A
:B C
AbstractTestCaseD T
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68bAA C
.AAC D
BadSinkAAD K
(AAK L
)AAL M
;AAM N
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
dataNN 
=NN 
$numNN 
;NN G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68bOO C
.OOC D
GoodG2BSinkOOD O
(OOO P
)OOP Q
;OOQ R
}PP 
}RR 
}SS Ø
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68b A
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68a N
.N O
dataO S
;S T
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68a&& N
.&&N O
data&&O S
;&&S T
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
short)) 
)))  
data))  $
)))$ %
;))% &
}** 	
}++ 
}-- 
}.. ∂
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_71a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_71bAA C
.AAC D
BadSinkAAD K
(AAK L
(AAL M
ObjectAAM S
)AAS T
dataAAT X
)AAZ [
;AA[ \
}BB 
publicEE 

overrideEE 
voidEE 
GoodEE 
(EE 
)EE 
{FF 
GoodG2BGG 
(GG 
)GG 
;GG 
}HH 
privateKK 
staticKK 
voidKK 
GoodG2BKK 
(KK  
)KK  !
{LL 
intMM 
dataMM 
;MM 
dataOO 
=OO 
$numOO 
;OO G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_71bPP C
.PPC D
GoodG2BSinkPPD O
(PPO P
(PPP Q
ObjectPPQ W
)PPW X
dataPPX \
)PP^ _
;PP_ `
}QQ 
}SS 
}TT ¡
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_71b A
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ÷&
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_72a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	
	HashtableAA 
dataHashtableAA 
=AA  !
newAA" %
	HashtableAA& /
(AA/ 0
$numAA0 1
)AA1 2
;AA2 3
dataHashtableBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB !
)BB! "
;BB" #
dataHashtableCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC !
)CC! "
;CC" #
dataHashtableDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD !
)DD! "
;DD" #G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_72bEE C
.EEC D
BadSinkEED K
(EEK L
dataHashtableEEL Y
)EE[ \
;EE\ ]
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 
	HashtableTT 
dataHashtableTT 
=TT  !
newTT" %
	HashtableTT& /
(TT/ 0
$numTT0 1
)TT1 2
;TT2 3
dataHashtableUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU !
)UU! "
;UU" #
dataHashtableVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV !
)VV! "
;VV" #
dataHashtableWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW !
)WW! "
;WW" #G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_72bXX C
.XXC D
GoodG2BSinkXXD O
(XXO P
dataHashtableXXP ]
)XX_ `
;XX` a
}YY 
}[[ 
}\\ ≥
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_72b A
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 Œ&
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_73a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
string&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using'' 
('' 
	WebClient''  
client''! '
=''( )
new''* -
	WebClient''. 7
(''7 8
)''8 9
)''9 :
{(( 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
client))> D
.))D E
OpenRead))E M
())M N
$str))N g
)))g h
)))h i
)))i j
{** 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	

LinkedListBB 
<BB 
intBB 
>BB 
dataLinkedListBB &
=BB' (
newBB) ,

LinkedListBB- 7
<BB7 8
intBB8 ;
>BB; <
(BB< =
)BB= >
;BB> ?
dataLinkedListCC 
.CC 
AddLastCC 
(CC 
dataCC #
)CC# $
;CC$ %
dataLinkedListDD 
.DD 
AddLastDD 
(DD 
dataDD #
)DD# $
;DD$ %
dataLinkedListEE 
.EE 
AddLastEE 
(EE 
dataEE #
)EE# $
;EE$ %G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_73bFF C
.FFC D
BadSinkFFD K
(FFK L
dataLinkedListFFL Z
)FF\ ]
;FF] ^
}GG 
publicJJ 

overrideJJ 
voidJJ 
GoodJJ 
(JJ 
)JJ 
{KK 
GoodG2BLL 
(LL 
)LL 
;LL 
}MM 
privatePP 
staticPP 
voidPP 
GoodG2BPP 
(PP  
)PP  !
{QQ 
intRR 
dataRR 
;RR 
dataTT 
=TT 
$numTT 
;TT 

LinkedListUU 
<UU 
intUU 
>UU 
dataLinkedListUU &
=UU' (
newUU) ,

LinkedListUU- 7
<UU7 8
intUU8 ;
>UU; <
(UU< =
)UU= >
;UU> ?
dataLinkedListVV 
.VV 
AddLastVV 
(VV 
dataVV #
)VV# $
;VV$ %
dataLinkedListWW 
.WW 
AddLastWW 
(WW 
dataWW #
)WW# $
;WW$ %
dataLinkedListXX 
.XX 
AddLastXX 
(XX 
dataXX #
)XX# $
;XX$ %G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_73bYY C
.YYC D
GoodG2BSinkYYD O
(YYO P
dataLinkedListYYP ^
)YY` a
;YYa b
}ZZ 
}\\ 
}]] ﬂ
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_73b A
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 ¸(
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_74a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	

DictionaryAA 
<AA 
intAA 
,AA 
intAA 
>AA 
dataDictionaryAA *
=AA+ ,
newAA- 0

DictionaryAA1 ;
<AA; <
intAA< ?
,AA? @
intAA@ C
>AAC D
(AAD E
)AAE F
;AAF G
dataDictionaryBB 
.BB 
AddBB 
(BB 
$numBB 
,BB 
dataBB "
)BB" #
;BB# $
dataDictionaryCC 
.CC 
AddCC 
(CC 
$numCC 
,CC 
dataCC "
)CC" #
;CC# $
dataDictionaryDD 
.DD 
AddDD 
(DD 
$numDD 
,DD 
dataDD "
)DD" #
;DD# $G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_74bEE C
.EEC D
BadSinkEED K
(EEK L
dataDictionaryEEL Z
)EE\ ]
;EE] ^
}FF 
publicII 

overrideII 
voidII 
GoodII 
(II 
)II 
{JJ 
GoodG2BKK 
(KK 
)KK 
;KK 
}LL 
privateOO 
staticOO 
voidOO 
GoodG2BOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
;QQ 
dataSS 
=SS 
$numSS 
;SS 

DictionaryTT 
<TT 
intTT 
,TT 
intTT 
>TT 
dataDictionaryTT *
=TT+ ,
newTT- 0

DictionaryTT1 ;
<TT; <
intTT< ?
,TT? @
intTT@ C
>TTC D
(TTD E
)TTE F
;TTF G
dataDictionaryUU 
.UU 
AddUU 
(UU 
$numUU 
,UU 
dataUU "
)UU" #
;UU# $
dataDictionaryVV 
.VV 
AddVV 
(VV 
$numVV 
,VV 
dataVV "
)VV" #
;VV# $
dataDictionaryWW 
.WW 
AddWW 
(WW 
$numWW 
,WW 
dataWW "
)WW" #
;WW# $G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_74bXX C
.XXC D
GoodG2BSinkXXD O
(XXO P
dataDictionaryXXP ^
)XX` a
;XXa b
}YY 
}[[ 
}\\ ˘
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_74b A
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
short++ 
)++  
data++  $
)++$ %
;++% &
},, 	
}-- 
}// 
}00 §0
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_75a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int   
data   
;   
data!! 
=!! 
int!! 
.!! 
MinValue!! 
;!! 
{## 	
try$$ 
{%% 
string&& 
stringNumber&& #
=&&$ %
$str&&& (
;&&( )
using'' 
('' 
	WebClient''  
client''! '
=''( )
new''* -
	WebClient''. 7
(''7 8
)''8 9
)''9 :
{(( 
using)) 
()) 
StreamReader)) '
sr))( *
=))+ ,
new))- 0
StreamReader))1 =
())= >
client))> D
.))D E
OpenRead))E M
())M N
$str))N g
)))g h
)))h i
)))i j
{** 
stringNumber.. $
=..% &
sr..' )
...) *
ReadLine..* 2
(..2 3
)..3 4
;..4 5
}// 
}00 
if11 
(11 
stringNumber11  
!=11! #
null11$ (
)11( )
{22 
try33 
{44 
data55 
=55 
int55 "
.55" #
Parse55# (
(55( )
stringNumber55) 5
.555 6
Trim556 :
(55: ;
)55; <
)55< =
;55= >
}66 
catch77 
(77 
FormatException77 *
exceptNumberFormat77+ =
)77= >
{88 
IO99 
.99 
Logger99 !
.99! "
Log99" %
(99% &
NLog99& *
.99* +
LogLevel99+ 3
.993 4
Warn994 8
,998 9
exceptNumberFormat99: L
,99L M
$str	99N Ä
)
99Ä Å
;
99Å Ç
}:: 
};; 
}<< 
catch== 
(== 
IOException== 
exceptIO== '
)==' (
{>> 
IO?? 
.?? 
Logger?? 
.?? 
Log?? 
(?? 
NLog?? "
.??" #
LogLevel??# +
.??+ ,
Warn??, 0
,??0 1
exceptIO??2 :
,??: ;
$str??< W
)??W X
;??X Y
}@@ 
}AA 	
byteCC 
[CC 
]CC 
dataSerializedCC 
=CC 
nullCC  $
;CC$ %
tryDD 
{EE 	
BinaryFormatterFF 
bfFF 
=FF  
newFF! $
BinaryFormatterFF% 4
(FF4 5
)FF5 6
;FF6 7
usingGG 
(GG 
varGG 
msGG 
=GG 
newGG 
MemoryStreamGG  ,
(GG, -
)GG- .
)GG. /
{HH 
bfII 
.II 
	SerializeII 
(II 
msII 
,II  
dataII! %
)II% &
;II& '
dataSerializedJJ 
=JJ  
msJJ! #
.JJ# $
ToArrayJJ$ +
(JJ+ ,
)JJ, -
;JJ- .
}KK G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_75bLL G
.LLG H
BadSinkLLH O
(LLO P
dataSerializedLLP ^
)LL` a
;LLa b
}MM 	
catchNN 
(NN "
SerializationExceptionNN %
exceptSerializeNN& 5
)NN5 6
{OO 	
IOPP 
.PP 
LoggerPP 
.PP 
LogPP 
(PP 
NLogPP 
.PP 
LogLevelPP '
.PP' (
WarnPP( ,
,PP, -
$strPP. X
,PPX Y
exceptSerializePPZ i
)PPi j
;PPj k
}QQ 	
}RR 
publicUU 

overrideUU 
voidUU 
GoodUU 
(UU 
)UU 
{VV 
GoodG2BWW 
(WW 
)WW 
;WW 
}XX 
private[[ 
static[[ 
void[[ 
GoodG2B[[ 
([[  
)[[  !
{\\ 
int]] 
data]] 
;]] 
data__ 
=__ 
$num__ 
;__ 
byteaa 
[aa 
]aa 
dataSerializedaa 
=aa 
nullaa  $
;aa$ %
trybb 
{cc 	
BinaryFormatterdd 
bfdd 
=dd  
newdd! $
BinaryFormatterdd% 4
(dd4 5
)dd5 6
;dd6 7
usingee 
(ee 
varee 
msee 
=ee 
newee 
MemoryStreamee  ,
(ee, -
)ee- .
)ee. /
{ff 
bfgg 
.gg 
	Serializegg 
(gg 
msgg 
,gg  
datagg! %
)gg% &
;gg& '
dataSerializedhh 
=hh  
mshh! #
.hh# $
ToArrayhh$ +
(hh+ ,
)hh, -
;hh- .
}ii G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_75bjj G
.jjG H
GoodG2BSinkjjH S
(jjS T
dataSerializedjjT b
)jjd e
;jje f
}kk 	
catchll 
(ll "
SerializationExceptionll %
exceptSerializell& 5
)ll5 6
{mm 	
IOnn 
.nn 
Loggernn 
.nn 
Lognn 
(nn 
NLognn 
.nn 
LogLevelnn '
.nn' (
Warnnn( ,
,nn, -
$strnn. X
,nnX Y
exceptSerializennZ i
)nni j
;nnj k
}oo 	
}pp 
}rr 
}ss ﬂ!
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_75b A
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
short** #
)**# $
data**$ (
)**( )
;**) *
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
shortDD #
)DD# $
dataDD$ (
)DD( )
;DD) *
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ‰
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class G
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81a A
:B C
AbstractTestCaseD T
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
int   
.   
MinValue   
;   
{"" 	
try## 
{$$ 
string%% 
stringNumber%% #
=%%$ %
$str%%& (
;%%( )
using&& 
(&& 
	WebClient&&  
client&&! '
=&&( )
new&&* -
	WebClient&&. 7
(&&7 8
)&&8 9
)&&9 :
{'' 
using(( 
((( 
StreamReader(( '
sr((( *
=((+ ,
new((- 0
StreamReader((1 =
(((= >
client((> D
.((D E
OpenRead((E M
(((M N
$str((N g
)((g h
)((h i
)((i j
{)) 
stringNumber-- $
=--% &
sr--' )
.--) *
ReadLine--* 2
(--2 3
)--3 4
;--4 5
}.. 
}// 
if00 
(00 
stringNumber00  
!=00! #
null00$ (
)00( )
{11 
try22 
{33 
data44 
=44 
int44 "
.44" #
Parse44# (
(44( )
stringNumber44) 5
.445 6
Trim446 :
(44: ;
)44; <
)44< =
;44= >
}55 
catch66 
(66 
FormatException66 *
exceptNumberFormat66+ =
)66= >
{77 
IO88 
.88 
Logger88 !
.88! "
Log88" %
(88% &
NLog88& *
.88* +
LogLevel88+ 3
.883 4
Warn884 8
,888 9
exceptNumberFormat88: L
,88L M
$str	88N Ä
)
88Ä Å
;
88Å Ç
}99 
}:: 
};; 
catch<< 
(<< 
IOException<< 
exceptIO<< '
)<<' (
{== 
IO>> 
.>> 
Logger>> 
.>> 
Log>> 
(>> 
NLog>> "
.>>" #
LogLevel>># +
.>>+ ,
Warn>>, 0
,>>0 1
exceptIO>>2 :
,>>: ;
$str>>< W
)>>W X
;>>X Y
}?? 
}@@ 	K
?CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_baseAA G

baseObjectAAH R
=AAS T
newAAU XK
>CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_bad	AAY ó
(
AAó ò
)
AAò ô
;
AAô ö

baseObjectBB 
.BB 
ActionBB 
(BB 
dataBB 
)BB  
;BB  !
}CC 
publicFF 

overrideFF 
voidFF 
GoodFF 
(FF 
)FF 
{GG 
GoodG2BHH 
(HH 
)HH 
;HH 
}II 
privateLL 
voidLL 
GoodG2BLL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
dataPP 
=PP 
$numPP 
;PP K
?CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_baseQQ G

baseObjectQQH R
=QQS T
newQQU XO
BCWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_goodG2B	QQY õ
(
QQõ ú
)
QQú ù
;
QQù û

baseObjectRR 
.RR 
ActionRR 
(RR 
dataRR 
)RR  
;RR  !
}SS 
}UU 
}VV ç
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_bad D
:E FL
?CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_base	G Ü
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" ı
¬C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 K
?CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_base N
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} ï
≈C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class N
BCWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_goodG2B H
:I JL
?CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81_base	K ä
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
short 
)  
data  $
)$ %
;% &
} 	
}   
}!! 
}"" £
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_01.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_01 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %
{ 	
IO!! 
.!! 
	WriteLine!! 
(!! 
(!! 
byte!! 
)!! 
data!! #
)!!# $
;!!$ %
}"" 	
}## 
public&& 

override&& 
void&& 
Good&& 
(&& 
)&& 
{'' 
GoodG2B(( 
((( 
)(( 
;(( 
})) 
private,, 
void,, 
GoodG2B,, 
(,, 
),, 
{-- 
int.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
byte33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
}77 
}88 â
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_02.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_02 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
true 
) 
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
false33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
trueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Ó
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_03.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_03 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
$num 
== 
$num 
) 
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
$num33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
$numHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` …
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_04.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_04 <
:= >
AbstractTestCase? O
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
PRIVATE_CONST_TRUE$$ 
)$$ 
{%% 	
data'' 
='' 
('' 
new'' 
Random'' 
('' 
)''  
)''  !
.''! "
Next''" &
(''& '
)''' (
;''( )
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
byte11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
int99 
data99 
;99 
if:: 

(:: 
PRIVATE_CONST_FALSE:: 
)::  
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
ifOO 

(OO 
PRIVATE_CONST_TRUEOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg Ä
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_05.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_05 <
:= >
AbstractTestCase? O
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
if$$ 

($$ 
privateTrue$$ 
)$$ 
{%% 	
data'' 
='' 
('' 
new'' 
Random'' 
('' 
)''  
)''  !
.''! "
Next''" &
(''& '
)''' (
;''( )
}(( 	
else)) 
{** 	
data-- 
=-- 
$num-- 
;-- 
}.. 	
{// 	
IO11 
.11 
	WriteLine11 
(11 
(11 
byte11 
)11 
data11 #
)11# $
;11$ %
}22 	
}33 
private77 
void77 
GoodG2B177 
(77 
)77 
{88 
int99 
data99 
;99 
if:: 

(:: 
privateFalse:: 
):: 
{;; 	
data>> 
=>> 
$num>> 
;>> 
}?? 	
else@@ 
{AA 	
dataCC 
=CC 
$numCC 
;CC 
}DD 	
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
privateLL 
voidLL 
GoodG2B2LL 
(LL 
)LL 
{MM 
intNN 
dataNN 
;NN 
ifOO 

(OO 
privateTrueOO 
)OO 
{PP 	
dataRR 
=RR 
$numRR 
;RR 
}SS 	
elseTT 
{UU 	
dataXX 
=XX 
$numXX 
;XX 
}YY 	
{ZZ 	
IO\\ 
.\\ 
	WriteLine\\ 
(\\ 
(\\ 
byte\\ 
)\\ 
data\\ #
)\\# $
;\\$ %
}]] 	
}^^ 
public`` 

override`` 
void`` 
Good`` 
(`` 
)`` 
{aa 
GoodG2B1bb 
(bb 
)bb 
;bb 
GoodG2B2cc 
(cc 
)cc 
;cc 
}dd 
}ff 
}gg °
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_06.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_06 <
:= >
AbstractTestCase? O
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
PRIVATE_CONST_FIVE## 
==## !
$num##" #
)### $
{$$ 	
data&& 
=&& 
(&& 
new&& 
Random&& 
(&& 
)&&  
)&&  !
.&&! "
Next&&" &
(&&& '
)&&' (
;&&( )
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
byte00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
int88 
data88 
;88 
if99 

(99 
PRIVATE_CONST_FIVE99 
!=99 !
$num99" #
)99# $
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
byteFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN 
PRIVATE_CONST_FIVENN 
==NN !
$numNN" #
)NN# $
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
byte[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff Ú
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_07.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_07 <
:= >
AbstractTestCase? O
{ 
private 
int 
privateFive 
= 
$num 
;  
public   

override   
void   
Bad   
(   
)   
{!! 
int"" 
data"" 
;"" 
if## 

(## 
privateFive## 
==## 
$num## 
)## 
{$$ 	
data&& 
=&& 
(&& 
new&& 
Random&& 
(&& 
)&&  
)&&  !
.&&! "
Next&&" &
(&&& '
)&&' (
;&&( )
}'' 	
else(( 
{)) 	
data,, 
=,, 
$num,, 
;,, 
}-- 	
{.. 	
IO00 
.00 
	WriteLine00 
(00 
(00 
byte00 
)00 
data00 #
)00# $
;00$ %
}11 	
}22 
private66 
void66 
GoodG2B166 
(66 
)66 
{77 
int88 
data88 
;88 
if99 

(99 
privateFive99 
!=99 
$num99 
)99 
{:: 	
data== 
=== 
$num== 
;== 
}>> 	
else?? 
{@@ 	
dataBB 
=BB 
$numBB 
;BB 
}CC 	
{DD 	
IOFF 
.FF 
	WriteLineFF 
(FF 
(FF 
byteFF 
)FF 
dataFF #
)FF# $
;FF$ %
}GG 	
}HH 
privateKK 
voidKK 
GoodG2B2KK 
(KK 
)KK 
{LL 
intMM 
dataMM 
;MM 
ifNN 

(NN 
privateFiveNN 
==NN 
$numNN 
)NN 
{OO 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
elseSS 
{TT 	
dataWW 
=WW 
$numWW 
;WW 
}XX 	
{YY 	
IO[[ 
.[[ 
	WriteLine[[ 
([[ 
([[ 
byte[[ 
)[[ 
data[[ #
)[[# $
;[[$ %
}\\ 	
}]] 
public__ 

override__ 
void__ 
Good__ 
(__ 
)__ 
{`` 
GoodG2B1aa 
(aa 
)aa 
;aa 
GoodG2B2bb 
(bb 
)bb 
;bb 
}cc 
}ee 
}ff ß
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_08.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_08 <
:= >
AbstractTestCase? O
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public(( 

override(( 
void(( 
Bad(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 
PrivateReturnsTrue++ 
(++ 
)++  
)++  !
{,, 	
data.. 
=.. 
(.. 
new.. 
Random.. 
(.. 
)..  
)..  !
...! "
Next.." &
(..& '
)..' (
;..( )
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
{66 	
IO88 
.88 
	WriteLine88 
(88 
(88 
byte88 
)88 
data88 #
)88# $
;88$ %
}99 	
}:: 
private>> 
void>> 
GoodG2B1>> 
(>> 
)>> 
{?? 
int@@ 
data@@ 
;@@ 
ifAA 

(AA 
PrivateReturnsFalseAA 
(AA  
)AA  !
)AA! "
{BB 	
dataEE 
=EE 
$numEE 
;EE 
}FF 	
elseGG 
{HH 	
dataJJ 
=JJ 
$numJJ 
;JJ 
}KK 	
{LL 	
IONN 
.NN 
	WriteLineNN 
(NN 
(NN 
byteNN 
)NN 
dataNN #
)NN# $
;NN$ %
}OO 	
}PP 
privateSS 
voidSS 
GoodG2B2SS 
(SS 
)SS 
{TT 
intUU 
dataUU 
;UU 
ifVV 

(VV 
PrivateReturnsTrueVV 
(VV 
)VV  
)VV  !
{WW 	
dataYY 
=YY 
$numYY 
;YY 
}ZZ 	
else[[ 
{\\ 	
data__ 
=__ 
$num__ 
;__ 
}`` 	
{aa 	
IOcc 
.cc 
	WriteLinecc 
(cc 
(cc 
bytecc 
)cc 
datacc #
)cc# $
;cc$ %
}dd 	
}ee 
publicgg 

overridegg 
voidgg 
Goodgg 
(gg 
)gg 
{hh 
GoodG2B1ii 
(ii 
)ii 
;ii 
GoodG2B2jj 
(jj 
)jj 
;jj 
}kk 
}mm 
}nn ñ
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_09.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_09 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 !
STATIC_READONLY_FALSE33 $
)33$ %
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_TRUEHH #
)HH# $
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ¯
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_10.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_10 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 
staticFalse33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticTrueHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Á
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_11.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_11 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 
StaticReturnsFalse33 !
(33! "
)33" #
)33# $
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 
StaticReturnsTrueHH  
(HH  !
)HH! "
)HH" #
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` Â
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_12.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_12 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data%% 
=%% 
$num%% 
;%% 
}&& 	
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
private00 
void00 
GoodG2B00 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 $
StaticReturnsTrueOrFalse33 '
(33' (
)33( )
)33) *
{44 	
data66 
=66 
$num66 
;66 
}77 	
else88 
{99 	
data;; 
=;; 
$num;; 
;;; 
}<< 	
{== 	
IO?? 
.?? 
	WriteLine?? 
(?? 
(?? 
byte?? 
)?? 
data?? #
)??# $
;??$ %
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
)CC 
{DD 
GoodG2BEE 
(EE 
)EE 
;EE 
}FF 
}HH 
}II ˚
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_13.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_13 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33  
STATIC_READONLY_FIVE33 #
!=33$ &
$num33' (
)33( )
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH  
STATIC_READONLY_FIVEHH #
==HH$ &
$numHH' (
)HH( )
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ›
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_14.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_14 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
private00 
void00 
GoodG2B100 
(00 
)00 
{11 
int22 
data22 
;22 
if33 

(33 
IO33 
.33 

staticFive33 
!=33 
$num33 
)33 
{44 	
data77 
=77 
$num77 
;77 
}88 	
else99 
{:: 	
data<< 
=<< 
$num<< 
;<< 
}== 	
{>> 	
IO@@ 
.@@ 
	WriteLine@@ 
(@@ 
(@@ 
byte@@ 
)@@ 
data@@ #
)@@# $
;@@$ %
}AA 	
}BB 
privateEE 
voidEE 
GoodG2B2EE 
(EE 
)EE 
{FF 
intGG 
dataGG 
;GG 
ifHH 

(HH 
IOHH 
.HH 

staticFiveHH 
==HH 
$numHH 
)HH 
{II 	
dataKK 
=KK 
$numKK 
;KK 
}LL 	
elseMM 
{NN 	
dataQQ 
=QQ 
$numQQ 
;QQ 
}RR 	
{SS 	
IOUU 
.UU 
	WriteLineUU 
(UU 
(UU 
byteUU 
)UU 
dataUU #
)UU# $
;UU$ %
}VV 	
}WW 
publicYY 

overrideYY 
voidYY 
GoodYY 
(YY 
)YY 
{ZZ 
GoodG2B1[[ 
([[ 
)[[ 
;[[ 
GoodG2B2\\ 
(\\ 
)\\ 
;\\ 
}]] 
}__ 
}`` ∏
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_15.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_15 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= 
$num 
; 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
data!! 
=!! 
(!! 
new!! 
Random!! 
(!! 
)!!  
)!!  !
.!!! "
Next!!" &
(!!& '
)!!' (
;!!( )
break"" 
;"" 
default## 
:## 
data&& 
=&& 
$num&& 
;&& 
break'' 
;'' 
}(( 	
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
private11 
void11 
GoodG2B111 
(11 
)11 
{22 
int33 
data33 
=33 
$num33 
;33 
switch44 
(44 
$num44 
)44 
{55 	
case66 
$num66 
:66 
data99 
=99 
$num99 
;99 
break:: 
;:: 
default;; 
:;; 
data== 
=== 
$num== 
;== 
break>> 
;>> 
}?? 	
{@@ 	
IOBB 
.BB 
	WriteLineBB 
(BB 
(BB 
byteBB 
)BB 
dataBB #
)BB# $
;BB$ %
}CC 	
}DD 
privateGG 
voidGG 
GoodG2B2GG 
(GG 
)GG 
{HH 
intII 
dataII 
=II 
$numII 
;II 
switchJJ 
(JJ 
$numJJ 
)JJ 
{KK 	
caseLL 
$numLL 
:LL 
dataNN 
=NN 
$numNN 
;NN 
breakOO 
;OO 
defaultPP 
:PP 
dataSS 
=SS 
$numSS 
;SS 
breakTT 
;TT 
}UU 	
{VV 	
IOXX 
.XX 
	WriteLineXX 
(XX 
(XX 
byteXX 
)XX 
dataXX #
)XX# $
;XX$ %
}YY 	
}ZZ 
public\\ 

override\\ 
void\\ 
Good\\ 
(\\ 
)\\ 
{]] 
GoodG2B1^^ 
(^^ 
)^^ 
;^^ 
GoodG2B2__ 
(__ 
)__ 
;__ 
}`` 
}bb 
}cc ©
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_16.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_16 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
while 
( 
true 
) 
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
break!! 
;!! 
}"" 	
{## 	
IO%% 
.%% 
	WriteLine%% 
(%% 
(%% 
byte%% 
)%% 
data%% #
)%%# $
;%%$ %
}&& 	
}'' 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
while.. 
(.. 
true.. 
).. 
{// 	
data11 
=11 
$num11 
;11 
break22 
;22 
}33 	
{44 	
IO66 
.66 
	WriteLine66 
(66 
(66 
byte66 
)66 
data66 #
)66# $
;66$ %
}77 	
}88 
public:: 

override:: 
void:: 
Good:: 
(:: 
):: 
{;; 
GoodG2B<< 
(<< 
)<< 
;<< 
}== 
}?? 
}@@ ô
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_17.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_17 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num 
; 
i  
++  "
)" #
{   	
{!! 
IO## 
.## 
	WriteLine## 
(## 
(## 
byte## "
)##" #
data### '
)##' (
;##( )
}$$ 
}%% 	
}&& 
private++ 
void++ 
GoodG2B++ 
(++ 
)++ 
{,, 
int-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
$num00 
;00 
i00  
++00  "
)00" #
{11 	
{22 
IO44 
.44 
	WriteLine44 
(44 
(44 
byte44 "
)44" #
data44# '
)44' (
;44( )
}55 
}66 	
}77 
public99 

override99 
void99 
Good99 
(99 
)99 
{:: 
GoodG2B;; 
(;; 
);; 
;;; 
}<< 
}>> 
}?? í#
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_21.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_21 <
:= >
AbstractTestCase? O
{ 
private 
bool 

badPrivate 
= 
false #
;# $
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 

badPrivate   
=   
true   
;   
data!! 
=!! 

Bad_source!! 
(!! 
)!! 
;!! 
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
private(( 
int(( 

Bad_source(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
if++ 

(++ 

badPrivate++ 
)++ 
{,, 	
data.. 
=.. 
(.. 
new.. 
Random.. 
(.. 
)..  
)..  !
...! "
Next.." &
(..& '
)..' (
;..( )
}// 	
else00 
{11 	
data44 
=44 
$num44 
;44 
}55 	
return66 
data66 
;66 
}77 
private:: 
bool:: 
goodG2B1_private:: !
=::" #
false::$ )
;::) *
private;; 
bool;; 
GoodG2B2_private;; !
=;;" #
false;;$ )
;;;) *
public== 

override== 
void== 
Good== 
(== 
)== 
{>> 
GoodG2B1?? 
(?? 
)?? 
;?? 
GoodG2B2@@ 
(@@ 
)@@ 
;@@ 
}AA 
privateDD 
voidDD 
GoodG2B1DD 
(DD 
)DD 
{EE 
intFF 
dataFF 
;FF 
goodG2B1_privateGG 
=GG 
falseGG  
;GG  !
dataHH 
=HH 
GoodG2B1_sourceHH 
(HH 
)HH  
;HH  !
{II 	
IOKK 
.KK 
	WriteLineKK 
(KK 
(KK 
byteKK 
)KK 
dataKK #
)KK# $
;KK$ %
}LL 	
}MM 
privateOO 
intOO 
GoodG2B1_sourceOO 
(OO  
)OO  !
{PP 
intQQ 
dataQQ 
=QQ 
$numQQ 
;QQ 
ifRR 

(RR 
goodG2B1_privateRR 
)RR 
{SS 	
dataVV 
=VV 
$numVV 
;VV 
}WW 	
elseXX 
{YY 	
data[[ 
=[[ 
$num[[ 
;[[ 
}\\ 	
return]] 
data]] 
;]] 
}^^ 
privateaa 
voidaa 
GoodG2B2aa 
(aa 
)aa 
{bb 
intcc 
datacc 
;cc 
GoodG2B2_privatedd 
=dd 
truedd 
;dd  
dataee 
=ee 
GoodG2B2_sourceee 
(ee 
)ee  
;ee  !
{ff 	
IOhh 
.hh 
	WriteLinehh 
(hh 
(hh 
bytehh 
)hh 
datahh #
)hh# $
;hh$ %
}ii 	
}jj 
privatell 
intll 
GoodG2B2_sourcell 
(ll  
)ll  !
{mm 
intnn 
datann 
=nn 
$numnn 
;nn 
ifoo 

(oo 
GoodG2B2_privateoo 
)oo 
{pp 	
datarr 
=rr 
$numrr 
;rr 
}ss 	
elsett 
{uu 	
dataxx 
=xx 
$numxx 
;xx 
}yy 	
returnzz 
datazz 
;zz 
}{{ 
}}} 
}~~ è
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_22a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22a =
:> ?
AbstractTestCase@ P
{ 
public 

static 
bool 
badPublicStatic &
=' (
false) .
;. /
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
badPublicStatic   
=   
true   
;   
data!! 
=!! C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22b!! F
.!!F G
	BadSource!!G P
(!!P Q
)!!Q R
;!!R S
{"" 	
IO$$ 
.$$ 
	WriteLine$$ 
($$ 
($$ 
byte$$ 
)$$ 
data$$ #
)$$# $
;$$$ %
}%% 	
}&& 
public** 

static** 
bool**  
goodG2B1PublicStatic** +
=**, -
false**. 3
;**3 4
public++ 

static++ 
bool++  
GoodG2B2PublicStatic++ +
=++, -
false++. 3
;++3 4
public-- 

override-- 
void-- 
Good-- 
(-- 
)-- 
{.. 
GoodG2B1// 
(// 
)// 
;// 
GoodG2B200 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B144 
(44 
)44 
{55 
int66 
data66 
;66  
goodG2B1PublicStatic77 
=77 
false77 $
;77$ %
data88 
=88 C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22b88 F
.88F G
GoodG2B1Source88G U
(88U V
)88V W
;88W X
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B2@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB  
GoodG2B2PublicStaticCC 
=CC 
trueCC #
;CC# $
dataDD 
=DD C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22bDD F
.DDF G
GoodG2B2SourceDDG U
(DDU V
)DDV W
;DDW X
{EE 	
IOGG 
.GG 
	WriteLineGG 
(GG 
(GG 
byteGG 
)GG 
dataGG #
)GG# $
;GG$ %
}HH 	
}II 
}KK 
}LL ˝
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_22b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22b =
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
if 

( C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22a C
.C D
badPublicStaticD S
)S T
{ 	
data   
=   
(   
new   
Random   
(   
)    
)    !
.  ! "
Next  " &
(  & '
)  ' (
;  ( )
}!! 	
else"" 
{## 	
data&& 
=&& 
$num&& 
;&& 
}'' 	
return(( 
data(( 
;(( 
})) 
public.. 

static.. 
int.. 
GoodG2B1Source.. $
(..$ %
)..% &
{// 
int00 
data00 
;00 
if11 

(11 C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22a11 C
.11C D 
goodG2B1PublicStatic11D X
)11X Y
{22 	
data55 
=55 
$num55 
;55 
}66 	
else77 
{88 	
data:: 
=:: 
$num:: 
;:: 
};; 	
return<< 
data<< 
;<< 
}== 
public@@ 

static@@ 
int@@ 
GoodG2B2Source@@ $
(@@$ %
)@@% &
{AA 
intBB 
dataBB 
;BB 
ifCC 

(CC C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22aCC C
.CCC D 
GoodG2B2PublicStaticCCD X
)CCX Y
{DD 	
dataFF 
=FF 
$numFF 
;FF 
}GG 	
elseHH 
{II 	
dataLL 
=LL 
$numLL 
;LL 
}MM 	
returnNN 
dataNN 
;NN 
}OO 
}QQ 
}RR ¡
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_31.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_31 <
:= >
AbstractTestCase? O
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
dataCopy 
; 
{ 	
int 
data 
; 
data!! 
=!! 
(!! 
new!! 
Random!! 
(!! 
)!!  
)!!  !
.!!! "
Next!!" &
(!!& '
)!!' (
;!!( )
dataCopy"" 
="" 
data"" 
;"" 
}## 	
{$$ 	
int%% 
data%% 
=%% 
dataCopy%% 
;%%  
{&& 
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( "
)((" #
data((# '
)((' (
;((( )
})) 
}** 	
}++ 
public.. 

override.. 
void.. 
Good.. 
(.. 
).. 
{// 
GoodG2B00 
(00 
)00 
;00 
}11 
private44 
void44 
GoodG2B44 
(44 
)44 
{55 
int66 
dataCopy66 
;66 
{77 	
int88 
data88 
;88 
data:: 
=:: 
$num:: 
;:: 
dataCopy;; 
=;; 
data;; 
;;; 
}<< 	
{== 	
int>> 
data>> 
=>> 
dataCopy>> 
;>>  
{?? 
IOAA 
.AA 
	WriteLineAA 
(AA 
(AA 
byteAA "
)AA" #
dataAA# '
)AA' (
;AA( )
}BB 
}CC 	
}DD 
}FF 
}GG ≈
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_41.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_41 <
:= >
AbstractTestCase? O
{ 
private 
static 
void 
BadSink 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public!! 

override!! 
void!! 
Bad!! 
(!! 
)!! 
{"" 
int## 
data## 
;## 
data%% 
=%% 
(%% 
new%% 
Random%% 
(%% 
)%% 
)%% 
.%% 
Next%% "
(%%" #
)%%# $
;%%$ %
BadSink&& 
(&& 
data&& 
)&& 
;&& 
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private// 
static// 
void// 
GoodG2BSink// #
(//# $
int//$ '
data//( ,
)//- .
{00 
{11 	
IO33 
.33 
	WriteLine33 
(33 
(33 
byte33 
)33 
data33 #
)33# $
;33$ %
}44 	
}55 
private88 
static88 
void88 
GoodG2B88 
(88  
)88  !
{99 
int:: 
data:: 
;:: 
data<< 
=<< 
$num<< 
;<< 
GoodG2BSink== 
(== 
data== 
)== 
;== 
}>> 
}@@ 
}AA Ø
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_42.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_42 <
:= >
AbstractTestCase? O
{ 
private 
static 
int 
	BadSource  
(  !
)! "
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %
return 
data 
; 
} 
public"" 

override"" 
void"" 
Bad"" 
("" 
)"" 
{## 
int$$ 
data$$ 
=$$ 
	BadSource$$ 
($$ 
)$$ 
;$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
private,, 
static,, 
int,, 
GoodG2BSource,, $
(,,$ %
),,% &
{-- 
int.. 
data.. 
;.. 
data00 
=00 
$num00 
;00 
return11 
data11 
;11 
}22 
private55 
static55 
void55 
GoodG2B55 
(55  
)55  !
{66 
int77 
data77 
=77 
GoodG2BSource77  
(77  !
)77! "
;77" #
{88 	
IO:: 
.:: 
	WriteLine:: 
(:: 
(:: 
byte:: 
):: 
data:: #
)::# $
;::$ %
};; 	
}<< 
public>> 

override>> 
void>> 
Good>> 
(>> 
)>> 
{?? 
GoodG2B@@ 
(@@ 
)@@ 
;@@ 
}AA 
}CC 
}DD ı
πC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_45.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class B
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_45 <
:= >
AbstractTestCase? O
{ 
private 
int 
dataBad 
; 
private 
int 
dataGoodG2B 
; 
private 
void 
BadSink 
( 
) 
{ 
int 
data 
= 
dataBad 
; 
{   	
IO"" 
."" 
	WriteLine"" 
("" 
("" 
byte"" 
)"" 
data"" #
)""# $
;""$ %
}## 	
}$$ 
public'' 

override'' 
void'' 
Bad'' 
('' 
)'' 
{(( 
int)) 
data)) 
;)) 
data++ 
=++ 
(++ 
new++ 
Random++ 
(++ 
)++ 
)++ 
.++ 
Next++ "
(++" #
)++# $
;++$ %
dataBad,, 
=,, 
data,, 
;,, 
BadSink-- 
(-- 
)-- 
;-- 
}.. 
public11 

override11 
void11 
Good11 
(11 
)11 
{22 
GoodG2B33 
(33 
)33 
;33 
}44 
private66 
void66 
GoodG2BSink66 
(66 
)66 
{77 
int88 
data88 
=88 
dataGoodG2B88 
;88 
{99 	
IO;; 
.;; 
	WriteLine;; 
(;; 
(;; 
byte;; 
);; 
data;; #
);;# $
;;;$ %
}<< 	
}== 
private@@ 
void@@ 
GoodG2B@@ 
(@@ 
)@@ 
{AA 
intBB 
dataBB 
;BB 
dataDD 
=DD 
$numDD 
;DD 
dataGoodG2BEE 
=EE 
dataEE 
;EE 
GoodG2BSinkFF 
(FF 
)FF 
;FF 
}GG 
}II 
}JJ Û
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_51a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_51a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_51b ?
.? @
BadSink@ G
(G H
dataH L
)N O
;O P
} 
public"" 

override"" 
void"" 
Good"" 
("" 
)"" 
{## 
GoodG2B$$ 
($$ 
)$$ 
;$$ 
}%% 
private(( 
void(( 
GoodG2B(( 
((( 
)(( 
{)) 
int** 
data** 
;** 
data,, 
=,, 
$num,, 
;,, C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_51b-- ?
.--? @
GoodG2BSink--@ K
(--K L
data--L P
)--R S
;--S T
}.. 
}00 
}11 ï	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_51b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_51b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public## 

static## 
void## 
GoodG2BSink## "
(##" #
int### &
data##' +
)##, -
{$$ 
{%% 	
IO'' 
.'' 
	WriteLine'' 
('' 
('' 
byte'' 
)'' 
data'' #
)''# $
;''$ %
}(( 	
})) 
}++ 
},, Û
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_52a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52b ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52b.. ?
...? @
GoodG2BSink..@ K
(..K L
data..L P
)..Q R
;..R S
}// 
}11 
}22 „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_52b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52c ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52c## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' ï	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_52c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52c =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Û
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_53a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53b ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53b.. ?
...? @
GoodG2BSink..@ K
(..K L
data..L P
)..Q R
;..R S
}// 
}11 
}22 „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_53b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53c ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53c## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_53c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53c =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53d ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53d## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' ï	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_53d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53d =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- Û
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_54a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54b ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
void)) 
GoodG2B)) 
()) 
))) 
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54b.. ?
...? @
GoodG2BSink..@ K
(..K L
data..L P
)..Q R
;..R S
}// 
}11 
}22 „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_54b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54b =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54c ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54c## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_54c.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54c =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54d ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54d## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' „
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_54d.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54d =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54e ?
.? @
BadSink@ G
(G H
dataH L
)M N
;N O
} 
public!! 

static!! 
void!! 
GoodG2BSink!! "
(!!" #
int!!# &
data!!' +
)!!, -
{"" C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54e## ?
.##? @
GoodG2BSink##@ K
(##K L
data##L P
)##Q R
;##R S
}$$ 
}&& 
}'' ï	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_54e.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54e =
{ 
public 

static 
void 
BadSink 
( 
int "
data# '
)( )
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
int$$# &
data$$' +
)$$, -
{%% 
{&& 	
IO(( 
.(( 
	WriteLine(( 
((( 
((( 
byte(( 
)(( 
data(( #
)((# $
;(($ %
})) 	
}** 
},, 
}-- €
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_61a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_61a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
= C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_61b J
.J K
	BadSourceK T
(T U
)U V
;V W
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
=++ C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_61b++ J
.++J K
GoodG2BSource++K X
(++X Y
)++Y Z
;++Z [
{,, 	
IO.. 
... 
	WriteLine.. 
(.. 
(.. 
byte.. 
).. 
data.. #
)..# $
;..$ %
}// 	
}00 
}22 
}33 ´	
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_61b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_61b =
{ 
public 

static 
int 
	BadSource 
(  
)  !
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %
return 
data 
; 
}   
public%% 

static%% 
int%% 
GoodG2BSource%% #
(%%# $
)%%$ %
{&& 
int'' 
data'' 
;'' 
data)) 
=)) 
$num)) 
;)) 
return** 
data** 
;** 
}++ 
}-- 
}.. Î
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_66a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_66a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %
int 
[ 
] 
	dataArray 
= 
new 
int !
[! "
$num" #
]# $
;$ %
	dataArray   
[   
$num   
]   
=   
data   
;   C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_66b!! ?
.!!? @
BadSink!!@ G
(!!G H
	dataArray!!H Q
)!!S T
;!!T U
}"" 
public%% 

override%% 
void%% 
Good%% 
(%% 
)%% 
{&& 
GoodG2B'' 
('' 
)'' 
;'' 
}(( 
private++ 
static++ 
void++ 
GoodG2B++ 
(++  
)++  !
{,, 
int-- 
data-- 
;-- 
data// 
=// 
$num// 
;// 
int00 
[00 
]00 
	dataArray00 
=00 
new00 
int00 !
[00! "
$num00" #
]00# $
;00$ %
	dataArray11 
[11 
$num11 
]11 
=11 
data11 
;11 C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_66b22 ?
.22? @
GoodG2BSink22@ K
(22K L
	dataArray22L U
)22W X
;22X Y
}33 
}55 
}66 Î
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_66b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_66b =
{ 
public 

static 
void 
BadSink 
( 
int "
[" #
]# $
	dataArray% .
)/ 0
{ 
int 
data 
= 
	dataArray 
[ 
$num 
] 
;  
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #
int%%# &
[%%& '
]%%' (
	dataArray%%) 2
)%%3 4
{&& 
int'' 
data'' 
='' 
	dataArray'' 
['' 
$num'' 
]'' 
;''  
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// ◊
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_67a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_67a =
:> ?
AbstractTestCase@ P
{ 
public 

class 
	Container 
{ 
public 
int 
containerOne 
;  
} 
public 

override 
void 
Bad 
( 
) 
{   
int!! 
data!! 
;!! 
data## 
=## 
(## 
new## 
Random## 
(## 
)## 
)## 
.## 
Next## "
(##" #
)### $
;##$ %
	Container$$ 
dataContainer$$ 
=$$  !
new$$" %
	Container$$& /
($$/ 0
)$$0 1
;$$1 2
dataContainer%% 
.%% 
containerOne%% "
=%%# $
data%%% )
;%%) *C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_67b&& ?
.&&? @
BadSink&&@ G
(&&G H
dataContainer&&H U
)&&W X
;&&X Y
}'' 
public** 

override** 
void** 
Good** 
(** 
)** 
{++ 
GoodG2B,, 
(,, 
),, 
;,, 
}-- 
private00 
static00 
void00 
GoodG2B00 
(00  
)00  !
{11 
int22 
data22 
;22 
data44 
=44 
$num44 
;44 
	Container55 
dataContainer55 
=55  !
new55" %
	Container55& /
(55/ 0
)550 1
;551 2
dataContainer66 
.66 
containerOne66 "
=66# $
data66% )
;66) *C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_67b77 ?
.77? @
GoodG2BSink77@ K
(77K L
dataContainer77L Y
)77[ \
;77\ ]
}88 
}:: 
};; Â
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_67b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_67b =
{ 
public 

static 
void 
BadSink 
( C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_67a V
.V W
	ContainerW `
dataContainera n
)o p
{ 
int 
data 
= 
dataContainer  
.  !
containerOne! -
;- .
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
public%% 

static%% 
void%% 
GoodG2BSink%% "
(%%" #C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_67a%%# Z
.%%Z [
	Container%%[ d
dataContainer%%e r
)%%s t
{&& 
int'' 
data'' 
='' 
dataContainer''  
.''  !
containerOne''! -
;''- .
{(( 	
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** 
)** 
data** #
)**# $
;**$ %
}++ 	
},, 
}.. 
}// Ÿ
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_68a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_68a =
:> ?
AbstractTestCase@ P
{ 
public 

static 
int 
data 
; 
public 

override 
void 
Bad 
( 
) 
{ 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_68b ?
.? @
BadSink@ G
(G H
)H I
;I J
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
data,, 
=,, 
$num,, 
;,, C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_68b-- ?
.--? @
GoodG2BSink--@ K
(--K L
)--L M
;--M N
}.. 
}00 
}11 ù
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_68b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_68b =
{ 
public 

static 
void 
BadSink 
( 
)  
{ 
int 
data 
= C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_68a J
.J K
dataK O
;O P
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
} 
public$$ 

static$$ 
void$$ 
GoodG2BSink$$ "
($$" #
)$$# $
{%% 
int&& 
data&& 
=&& C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_68a&& J
.&&J K
data&&K O
;&&O P
{'' 	
IO)) 
.)) 
	WriteLine)) 
()) 
()) 
byte)) 
))) 
data)) #
)))# $
;))$ %
}** 	
}++ 
}-- 
}.. Î
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_71a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_71a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_71b ?
.? @
BadSink@ G
(G H
(H I
ObjectI O
)O P
dataP T
)V W
;W X
}   
public## 

override## 
void## 
Good## 
(## 
)## 
{$$ 
GoodG2B%% 
(%% 
)%% 
;%% 
}&& 
private)) 
static)) 
void)) 
GoodG2B)) 
())  
)))  !
{** 
int++ 
data++ 
;++ 
data-- 
=-- 
$num-- 
;-- C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_71b.. ?
...? @
GoodG2BSink..@ K
(..K L
(..L M
Object..M S
)..S T
data..T X
)..Z [
;..[ \
}// 
}11 
}22 ∑
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_71b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_71b =
{ 
public 

static 
void 
BadSink 
( 
Object %

dataObject& 0
)1 2
{ 
int 
data 
= 
( 
int 
) 

dataObject "
;" #
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
Object&&# )

dataObject&&* 4
)&&5 6
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 

dataObject(( "
;((" #
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ã
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_72a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_72a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %
	Hashtable 
dataHashtable 
=  !
new" %
	Hashtable& /
(/ 0
$num0 1
)1 2
;2 3
dataHashtable   
.   
Add   
(   
$num   
,   
data   !
)  ! "
;  " #
dataHashtable!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! !
)!!! "
;!!" #
dataHashtable"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" !
)""! "
;""" #C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_72b## ?
.##? @
BadSink##@ G
(##G H
dataHashtable##H U
)##W X
;##X Y
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
int// 
data// 
;// 
data11 
=11 
$num11 
;11 
	Hashtable22 
dataHashtable22 
=22  !
new22" %
	Hashtable22& /
(22/ 0
$num220 1
)221 2
;222 3
dataHashtable33 
.33 
Add33 
(33 
$num33 
,33 
data33 !
)33! "
;33" #
dataHashtable44 
.44 
Add44 
(44 
$num44 
,44 
data44 !
)44! "
;44" #
dataHashtable55 
.55 
Add55 
(55 
$num55 
,55 
data55 !
)55! "
;55" #C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_72b66 ?
.66? @
GoodG2BSink66@ K
(66K L
dataHashtable66L Y
)66[ \
;66\ ]
}77 
}99 
}:: ©
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_72b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_72b =
{ 
public 

static 
void 
BadSink 
( 
	Hashtable (
dataHashtable) 6
)7 8
{ 
int 
data 
= 
( 
int 
) 
dataHashtable &
[& '
$num' (
]( )
;) *
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #
	Hashtable&&# ,
dataHashtable&&- :
)&&; <
{'' 
int(( 
data(( 
=(( 
((( 
int(( 
)(( 
dataHashtable(( &
[((& '
$num((' (
]((( )
;(() *
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 É
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_73a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_73a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %

LinkedList   
<   
int   
>   
dataLinkedList   &
=  ' (
new  ) ,

LinkedList  - 7
<  7 8
int  8 ;
>  ; <
(  < =
)  = >
;  > ?
dataLinkedList!! 
.!! 
AddLast!! 
(!! 
data!! #
)!!# $
;!!$ %
dataLinkedList"" 
."" 
AddLast"" 
("" 
data"" #
)""# $
;""$ %
dataLinkedList## 
.## 
AddLast## 
(## 
data## #
)### $
;##$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_73b$$ ?
.$$? @
BadSink$$@ G
($$G H
dataLinkedList$$H V
)$$X Y
;$$Y Z
}%% 
public(( 

override(( 
void(( 
Good(( 
((( 
)(( 
{)) 
GoodG2B** 
(** 
)** 
;** 
}++ 
private.. 
static.. 
void.. 
GoodG2B.. 
(..  
)..  !
{// 
int00 
data00 
;00 
data22 
=22 
$num22 
;22 

LinkedList33 
<33 
int33 
>33 
dataLinkedList33 &
=33' (
new33) ,

LinkedList33- 7
<337 8
int338 ;
>33; <
(33< =
)33= >
;33> ?
dataLinkedList44 
.44 
AddLast44 
(44 
data44 #
)44# $
;44$ %
dataLinkedList55 
.55 
AddLast55 
(55 
data55 #
)55# $
;55$ %
dataLinkedList66 
.66 
AddLast66 
(66 
data66 #
)66# $
;66$ %C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_73b77 ?
.77? @
GoodG2BSink77@ K
(77K L
dataLinkedList77L Z
)77\ ]
;77] ^
}88 
}:: 
};; ’
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_73b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_73b =
{ 
public 

static 
void 
BadSink 
( 

LinkedList )
<) *
int* -
>- .
dataLinkedList/ =
)> ?
{ 
int 
data 
= 
dataLinkedList !
.! "
Last" &
.& '
Value' ,
;, -
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

LinkedList&&# -
<&&- .
int&&. 1
>&&1 2
dataLinkedList&&3 A
)&&B C
{'' 
int(( 
data(( 
=(( 
dataLinkedList(( !
.((! "
Last((" &
.((& '
Value((' ,
;((, -
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 ±
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_74a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_74a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %

Dictionary 
< 
int 
, 
int 
> 
dataDictionary *
=+ ,
new- 0

Dictionary1 ;
<; <
int< ?
,? @
int@ C
>C D
(D E
)E F
;F G
dataDictionary   
.   
Add   
(   
$num   
,   
data   "
)  " #
;  # $
dataDictionary!! 
.!! 
Add!! 
(!! 
$num!! 
,!! 
data!! "
)!!" #
;!!# $
dataDictionary"" 
."" 
Add"" 
("" 
$num"" 
,"" 
data"" "
)""" #
;""# $C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_74b## ?
.##? @
BadSink##@ G
(##G H
dataDictionary##H V
)##X Y
;##Y Z
}$$ 
public'' 

override'' 
void'' 
Good'' 
('' 
)'' 
{(( 
GoodG2B)) 
()) 
))) 
;)) 
}** 
private-- 
static-- 
void-- 
GoodG2B-- 
(--  
)--  !
{.. 
int// 
data// 
;// 
data11 
=11 
$num11 
;11 

Dictionary22 
<22 
int22 
,22 
int22 
>22 
dataDictionary22 *
=22+ ,
new22- 0

Dictionary221 ;
<22; <
int22< ?
,22? @
int22@ C
>22C D
(22D E
)22E F
;22F G
dataDictionary33 
.33 
Add33 
(33 
$num33 
,33 
data33 "
)33" #
;33# $
dataDictionary44 
.44 
Add44 
(44 
$num44 
,44 
data44 "
)44" #
;44# $
dataDictionary55 
.55 
Add55 
(55 
$num55 
,55 
data55 "
)55" #
;55# $C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_74b66 ?
.66? @
GoodG2BSink66@ K
(66K L
dataDictionary66L Z
)66\ ]
;66] ^
}77 
}99 
}:: Ô
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_74b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_74b =
{ 
public 

static 
void 
BadSink 
( 

Dictionary )
<) *
int* -
,- .
int. 1
>1 2
dataDictionary3 A
)B C
{ 
int 
data 
= 
dataDictionary !
[! "
$num" #
]# $
;$ %
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
}   	
}!! 
public&& 

static&& 
void&& 
GoodG2BSink&& "
(&&" #

Dictionary&&# -
<&&- .
int&&. 1
,&&1 2
int&&2 5
>&&5 6
dataDictionary&&7 E
)&&F G
{'' 
int(( 
data(( 
=(( 
dataDictionary(( !
[((! "
$num((" #
]((# $
;(($ %
{)) 	
IO++ 
.++ 
	WriteLine++ 
(++ 
(++ 
byte++ 
)++ 
data++ #
)++# $
;++$ %
},, 	
}-- 
}// 
}00 Ÿ 
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_75a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_75a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data   
=   
(   
new   
Random   
(   
)   
)   
.   
Next   "
(  " #
)  # $
;  $ %
byte"" 
["" 
]"" 
dataSerialized"" 
="" 
null""  $
;""$ %
try## 
{$$ 	
BinaryFormatter%% 
bf%% 
=%%  
new%%! $
BinaryFormatter%%% 4
(%%4 5
)%%5 6
;%%6 7
using&& 
(&& 
var&& 
ms&& 
=&& 
new&& 
MemoryStream&&  ,
(&&, -
)&&- .
)&&. /
{'' 
bf(( 
.(( 
	Serialize(( 
((( 
ms(( 
,((  
data((! %
)((% &
;((& '
dataSerialized)) 
=))  
ms))! #
.))# $
ToArray))$ +
())+ ,
))), -
;))- .
}** C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_75b++ C
.++C D
BadSink++D K
(++K L
dataSerialized++L Z
)++\ ]
;++] ^
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. X
,//X Y
exceptSerialize//Z i
)//i j
;//j k
}00 	
}11 
public44 

override44 
void44 
Good44 
(44 
)44 
{55 
GoodG2B66 
(66 
)66 
;66 
}77 
private:: 
static:: 
void:: 
GoodG2B:: 
(::  
)::  !
{;; 
int<< 
data<< 
;<< 
data>> 
=>> 
$num>> 
;>> 
byte@@ 
[@@ 
]@@ 
dataSerialized@@ 
=@@ 
null@@  $
;@@$ %
tryAA 
{BB 	
BinaryFormatterCC 
bfCC 
=CC  
newCC! $
BinaryFormatterCC% 4
(CC4 5
)CC5 6
;CC6 7
usingDD 
(DD 
varDD 
msDD 
=DD 
newDD 
MemoryStreamDD  ,
(DD, -
)DD- .
)DD. /
{EE 
bfFF 
.FF 
	SerializeFF 
(FF 
msFF 
,FF  
dataFF! %
)FF% &
;FF& '
dataSerializedGG 
=GG  
msGG! #
.GG# $
ToArrayGG$ +
(GG+ ,
)GG, -
;GG- .
}HH C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_75bII C
.IIC D
GoodG2BSinkIID O
(IIO P
dataSerializedIIP ^
)II` a
;IIa b
}JJ 	
catchKK 
(KK "
SerializationExceptionKK %
exceptSerializeKK& 5
)KK5 6
{LL 	
IOMM 
.MM 
LoggerMM 
.MM 
LogMM 
(MM 
NLogMM 
.MM 
LogLevelMM '
.MM' (
WarnMM( ,
,MM, -
$strMM. X
,MMX Y
exceptSerializeMMZ i
)MMi j
;MMj k
}NN 	
}OO 
}QQ 
}RR ’!
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_75b.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_75b =
{ 
public 

static 
void 
BadSink 
( 
byte #
[# $
]$ %
dataSerialized& 4
)5 6
{ 
try 
{ 	
int   
data   
;   
var!! 
binForm!! 
=!! 
new!! 
BinaryFormatter!! -
(!!- .
)!!. /
;!!/ 0
using"" 
("" 
var"" 
	memStream""  
=""! "
new""# &
MemoryStream""' 3
(""3 4
)""4 5
)""5 6
{## 
	memStream$$ 
.$$ 
Write$$ 
($$  
dataSerialized$$  .
,$$. /
$num$$0 1
,$$1 2
dataSerialized$$3 A
.$$A B
Length$$B H
)$$H I
;$$I J
	memStream%% 
.%% 
Seek%% 
(%% 
$num%%  
,%%  !

SeekOrigin%%" ,
.%%, -
Begin%%- 2
)%%2 3
;%%3 4
data&& 
=&& 
(&& 
int&& 
)&& 
binForm&& #
.&&# $
Deserialize&&$ /
(&&/ 0
	memStream&&0 9
)&&9 :
;&&: ;
}'' 
{(( 
IO** 
.** 
	WriteLine** 
(** 
(** 
byte** "
)**" #
data**# '
)**' (
;**( )
}++ 
},, 	
catch-- 
(-- "
SerializationException-- %
exceptSerialize--& 5
)--5 6
{.. 	
IO// 
.// 
Logger// 
.// 
Log// 
(// 
NLog// 
.// 
LogLevel// '
.//' (
Warn//( ,
,//, -
$str//. Y
,//Y Z
exceptSerialize//[ j
)//j k
;//k l
}00 	
}11 
public66 

static66 
void66 
GoodG2BSink66 "
(66" #
byte66# '
[66' (
]66( )
dataSerialized66* 8
)669 :
{77 
try88 
{99 	
int:: 
data:: 
;:: 
var;; 
binForm;; 
=;; 
new;; 
BinaryFormatter;; -
(;;- .
);;. /
;;;/ 0
using<< 
(<< 
var<< 
	memStream<<  
=<<! "
new<<# &
MemoryStream<<' 3
(<<3 4
)<<4 5
)<<5 6
{== 
	memStream>> 
.>> 
Write>> 
(>>  
dataSerialized>>  .
,>>. /
$num>>0 1
,>>1 2
dataSerialized>>3 A
.>>A B
Length>>B H
)>>H I
;>>I J
	memStream?? 
.?? 
Seek?? 
(?? 
$num??  
,??  !

SeekOrigin??" ,
.??, -
Begin??- 2
)??2 3
;??3 4
data@@ 
=@@ 
(@@ 
int@@ 
)@@ 
binForm@@ #
.@@# $
Deserialize@@$ /
(@@/ 0
	memStream@@0 9
)@@9 :
;@@: ;
}AA 
{BB 
IODD 
.DD 
	WriteLineDD 
(DD 
(DD 
byteDD "
)DD" #
dataDD# '
)DD' (
;DD( )
}EE 
}FF 	
catchGG 
(GG "
SerializationExceptionGG %
exceptSerializeGG& 5
)GG5 6
{HH 	
IOII 
.II 
LoggerII 
.II 
LogII 
(II 
NLogII 
.II 
LogLevelII '
.II' (
WarnII( ,
,II, -
$strII. Y
,IIY Z
exceptSerializeII[ j
)IIj k
;IIk l
}JJ 	
}KK 
}MM 
}NN ë
∫C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_81a.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class C
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_81a =
:> ?
AbstractTestCase@ P
{ 
public 

override 
void 
Bad 
( 
) 
{ 
int 
data 
; 
data 
= 
( 
new 
Random 
( 
) 
) 
. 
Next "
(" #
)# $
;$ %G
;CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_base C

baseObjectD N
=O P
newQ TG
:CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_bad	U è
(
è ê
)
ê ë
;
ë í

baseObject   
.   
Action   
(   
data   
)    
;    !
}!! 
public$$ 

override$$ 
void$$ 
Good$$ 
($$ 
)$$ 
{%% 
GoodG2B&& 
(&& 
)&& 
;&& 
}'' 
private** 
void** 
GoodG2B** 
(** 
)** 
{++ 
int,, 
data,, 
;,, 
data.. 
=.. 
$num.. 
;.. G
;CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_base// C

baseObject//D N
=//O P
new//Q TK
>CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_goodG2B	//U ì
(
//ì î
)
//î ï
;
//ï ñ

baseObject00 
.00 
Action00 
(00 
data00 
)00  
;00  !
}11 
}33 
}44 ˇ
ΩC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_bad.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class F
:CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_bad @
:A BG
;CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_baseC ~
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" Ì
æC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_base.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
abstract 
class	 G
;CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_base J
{ 
public 

abstract 
void 
Action 
(  
int  #
data$ (
)) *
;* +
} 
} à
¡C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_goodG2B.cs
	namespace 	
	testcases
 
. +
CWE197_Numeric_Truncation_Error 3
{ 
class J
>CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_goodG2B D
:E FH
;CWE197_Numeric_Truncation_Error__int_Random_to_byte_81_base	G Ç
{ 
public 

override 
void 
Action 
(  
int  #
data$ (
)) *
{ 
{ 	
IO 
. 
	WriteLine 
( 
( 
byte 
) 
data #
)# $
;$ %
} 	
}   
}!! 
}"" áù

äC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\Program.cs
	namespace		 	
	testcases		
 
.		 +
CWE197_Numeric_Truncation_Error		 3
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
(QQ 
newQQ E
9CWE197_Numeric_Truncation_Error__float_random_to_short_01QQ A
(QQA B
)QQB C
)QQC D
.QQD E
RunTestQQE L
(QQL M
$str	QQM à
)
QQà â
;
QQâ ä
(RR 
newRR E
9CWE197_Numeric_Truncation_Error__float_random_to_short_02RR A
(RRA B
)RRB C
)RRC D
.RRD E
RunTestRRE L
(RRL M
$str	RRM à
)
RRà â
;
RRâ ä
(SS 
newSS E
9CWE197_Numeric_Truncation_Error__float_random_to_short_03SS A
(SSA B
)SSB C
)SSC D
.SSD E
RunTestSSE L
(SSL M
$str	SSM à
)
SSà â
;
SSâ ä
(TT 
newTT E
9CWE197_Numeric_Truncation_Error__float_random_to_short_04TT A
(TTA B
)TTB C
)TTC D
.TTD E
RunTestTTE L
(TTL M
$str	TTM à
)
TTà â
;
TTâ ä
(UU 
newUU E
9CWE197_Numeric_Truncation_Error__float_random_to_short_05UU A
(UUA B
)UUB C
)UUC D
.UUD E
RunTestUUE L
(UUL M
$str	UUM à
)
UUà â
;
UUâ ä
(VV 
newVV E
9CWE197_Numeric_Truncation_Error__float_random_to_short_06VV A
(VVA B
)VVB C
)VVC D
.VVD E
RunTestVVE L
(VVL M
$str	VVM à
)
VVà â
;
VVâ ä
(WW 
newWW E
9CWE197_Numeric_Truncation_Error__float_random_to_short_07WW A
(WWA B
)WWB C
)WWC D
.WWD E
RunTestWWE L
(WWL M
$str	WWM à
)
WWà â
;
WWâ ä
(XX 
newXX E
9CWE197_Numeric_Truncation_Error__float_random_to_short_08XX A
(XXA B
)XXB C
)XXC D
.XXD E
RunTestXXE L
(XXL M
$str	XXM à
)
XXà â
;
XXâ ä
(YY 
newYY E
9CWE197_Numeric_Truncation_Error__float_random_to_short_09YY A
(YYA B
)YYB C
)YYC D
.YYD E
RunTestYYE L
(YYL M
$str	YYM à
)
YYà â
;
YYâ ä
(ZZ 
newZZ E
9CWE197_Numeric_Truncation_Error__float_random_to_short_10ZZ A
(ZZA B
)ZZB C
)ZZC D
.ZZD E
RunTestZZE L
(ZZL M
$str	ZZM à
)
ZZà â
;
ZZâ ä
([[ 
new[[ E
9CWE197_Numeric_Truncation_Error__float_random_to_short_11[[ A
([[A B
)[[B C
)[[C D
.[[D E
RunTest[[E L
([[L M
$str	[[M à
)
[[à â
;
[[â ä
(\\ 
new\\ E
9CWE197_Numeric_Truncation_Error__float_random_to_short_12\\ A
(\\A B
)\\B C
)\\C D
.\\D E
RunTest\\E L
(\\L M
$str	\\M à
)
\\à â
;
\\â ä
(]] 
new]] E
9CWE197_Numeric_Truncation_Error__float_random_to_short_13]] A
(]]A B
)]]B C
)]]C D
.]]D E
RunTest]]E L
(]]L M
$str	]]M à
)
]]à â
;
]]â ä
(^^ 
new^^ E
9CWE197_Numeric_Truncation_Error__float_random_to_short_14^^ A
(^^A B
)^^B C
)^^C D
.^^D E
RunTest^^E L
(^^L M
$str	^^M à
)
^^à â
;
^^â ä
(__ 
new__ E
9CWE197_Numeric_Truncation_Error__float_random_to_short_15__ A
(__A B
)__B C
)__C D
.__D E
RunTest__E L
(__L M
$str	__M à
)
__à â
;
__â ä
(`` 
new`` E
9CWE197_Numeric_Truncation_Error__float_random_to_short_16`` A
(``A B
)``B C
)``C D
.``D E
RunTest``E L
(``L M
$str	``M à
)
``à â
;
``â ä
(aa 
newaa E
9CWE197_Numeric_Truncation_Error__float_random_to_short_17aa A
(aaA B
)aaB C
)aaC D
.aaD E
RunTestaaE L
(aaL M
$str	aaM à
)
aaà â
;
aaâ ä
(bb 
newbb E
9CWE197_Numeric_Truncation_Error__float_random_to_short_21bb A
(bbA B
)bbB C
)bbC D
.bbD E
RunTestbbE L
(bbL M
$str	bbM à
)
bbà â
;
bbâ ä
(cc 
newcc F
:CWE197_Numeric_Truncation_Error__float_random_to_short_22acc B
(ccB C
)ccC D
)ccD E
.ccE F
RunTestccF M
(ccM N
$str	ccN ä
)
ccä ã
;
ccã å
(dd 
newdd E
9CWE197_Numeric_Truncation_Error__float_random_to_short_31dd A
(ddA B
)ddB C
)ddC D
.ddD E
RunTestddE L
(ddL M
$str	ddM à
)
ddà â
;
ddâ ä
(ee 
newee E
9CWE197_Numeric_Truncation_Error__float_random_to_short_41ee A
(eeA B
)eeB C
)eeC D
.eeD E
RunTesteeE L
(eeL M
$str	eeM à
)
eeà â
;
eeâ ä
(ff 
newff E
9CWE197_Numeric_Truncation_Error__float_random_to_short_42ff A
(ffA B
)ffB C
)ffC D
.ffD E
RunTestffE L
(ffL M
$str	ffM à
)
ffà â
;
ffâ ä
(gg 
newgg E
9CWE197_Numeric_Truncation_Error__float_random_to_short_45gg A
(ggA B
)ggB C
)ggC D
.ggD E
RunTestggE L
(ggL M
$str	ggM à
)
ggà â
;
ggâ ä
(hh 
newhh F
:CWE197_Numeric_Truncation_Error__float_random_to_short_51ahh B
(hhB C
)hhC D
)hhD E
.hhE F
RunTesthhF M
(hhM N
$str	hhN ä
)
hhä ã
;
hhã å
(ii 
newii F
:CWE197_Numeric_Truncation_Error__float_random_to_short_52aii B
(iiB C
)iiC D
)iiD E
.iiE F
RunTestiiF M
(iiM N
$str	iiN ä
)
iiä ã
;
iiã å
(jj 
newjj F
:CWE197_Numeric_Truncation_Error__float_random_to_short_53ajj B
(jjB C
)jjC D
)jjD E
.jjE F
RunTestjjF M
(jjM N
$str	jjN ä
)
jjä ã
;
jjã å
(kk 
newkk F
:CWE197_Numeric_Truncation_Error__float_random_to_short_54akk B
(kkB C
)kkC D
)kkD E
.kkE F
RunTestkkF M
(kkM N
$str	kkN ä
)
kkä ã
;
kkã å
(ll 
newll F
:CWE197_Numeric_Truncation_Error__float_random_to_short_61all B
(llB C
)llC D
)llD E
.llE F
RunTestllF M
(llM N
$str	llN ä
)
llä ã
;
llã å
(mm 
newmm F
:CWE197_Numeric_Truncation_Error__float_random_to_short_66amm B
(mmB C
)mmC D
)mmD E
.mmE F
RunTestmmF M
(mmM N
$str	mmN ä
)
mmä ã
;
mmã å
(nn 
newnn F
:CWE197_Numeric_Truncation_Error__float_random_to_short_67ann B
(nnB C
)nnC D
)nnD E
.nnE F
RunTestnnF M
(nnM N
$str	nnN ä
)
nnä ã
;
nnã å
(oo 
newoo F
:CWE197_Numeric_Truncation_Error__float_random_to_short_68aoo B
(ooB C
)ooC D
)ooD E
.ooE F
RunTestooF M
(ooM N
$str	ooN ä
)
ooä ã
;
ooã å
(pp 
newpp F
:CWE197_Numeric_Truncation_Error__float_random_to_short_71app B
(ppB C
)ppC D
)ppD E
.ppE F
RunTestppF M
(ppM N
$str	ppN ä
)
ppä ã
;
ppã å
(qq 
newqq F
:CWE197_Numeric_Truncation_Error__float_random_to_short_72aqq B
(qqB C
)qqC D
)qqD E
.qqE F
RunTestqqF M
(qqM N
$str	qqN ä
)
qqä ã
;
qqã å
(rr 
newrr F
:CWE197_Numeric_Truncation_Error__float_random_to_short_73arr B
(rrB C
)rrC D
)rrD E
.rrE F
RunTestrrF M
(rrM N
$str	rrN ä
)
rrä ã
;
rrã å
(ss 
newss F
:CWE197_Numeric_Truncation_Error__float_random_to_short_74ass B
(ssB C
)ssC D
)ssD E
.ssE F
RunTestssF M
(ssM N
$str	ssN ä
)
ssä ã
;
ssã å
(tt 
newtt F
:CWE197_Numeric_Truncation_Error__float_random_to_short_75att B
(ttB C
)ttC D
)ttD E
.ttE F
RunTestttF M
(ttM N
$str	ttN ä
)
ttä ã
;
ttã å
(uu 
newuu F
:CWE197_Numeric_Truncation_Error__float_random_to_short_81auu B
(uuB C
)uuC D
)uuD E
.uuE F
RunTestuuF M
(uuM N
$str	uuN ä
)
uuä ã
;
uuã å
(vv 
newvv G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_01vv C
(vvC D
)vvD E
)vvE F
.vvF G
RunTestvvG N
(vvN O
$str	vvO å
)
vvå ç
;
vvç é
(ww 
newww G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_02ww C
(wwC D
)wwD E
)wwE F
.wwF G
RunTestwwG N
(wwN O
$str	wwO å
)
wwå ç
;
wwç é
(xx 
newxx G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_03xx C
(xxC D
)xxD E
)xxE F
.xxF G
RunTestxxG N
(xxN O
$str	xxO å
)
xxå ç
;
xxç é
(yy 
newyy G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_04yy C
(yyC D
)yyD E
)yyE F
.yyF G
RunTestyyG N
(yyN O
$str	yyO å
)
yyå ç
;
yyç é
(zz 
newzz G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_05zz C
(zzC D
)zzD E
)zzE F
.zzF G
RunTestzzG N
(zzN O
$str	zzO å
)
zzå ç
;
zzç é
({{ 
new{{ G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_06{{ C
({{C D
){{D E
){{E F
.{{F G
RunTest{{G N
({{N O
$str	{{O å
)
{{å ç
;
{{ç é
(|| 
new|| G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_07|| C
(||C D
)||D E
)||E F
.||F G
RunTest||G N
(||N O
$str	||O å
)
||å ç
;
||ç é
(}} 
new}} G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_08}} C
(}}C D
)}}D E
)}}E F
.}}F G
RunTest}}G N
(}}N O
$str	}}O å
)
}}å ç
;
}}ç é
(~~ 
new~~ G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_09~~ C
(~~C D
)~~D E
)~~E F
.~~F G
RunTest~~G N
(~~N O
$str	~~O å
)
~~å ç
;
~~ç é
( 
new G
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_10 C
(C D
)D E
)E F
.F G
RunTestG N
(N O
$str	O å
)
å ç
;
ç é
(
ÄÄ 
new
ÄÄ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_11
ÄÄ C
(
ÄÄC D
)
ÄÄD E
)
ÄÄE F
.
ÄÄF G
RunTest
ÄÄG N
(
ÄÄN O
$strÄÄO å
)ÄÄå ç
;ÄÄç é
(
ÅÅ 
new
ÅÅ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_12
ÅÅ C
(
ÅÅC D
)
ÅÅD E
)
ÅÅE F
.
ÅÅF G
RunTest
ÅÅG N
(
ÅÅN O
$strÅÅO å
)ÅÅå ç
;ÅÅç é
(
ÇÇ 
new
ÇÇ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_13
ÇÇ C
(
ÇÇC D
)
ÇÇD E
)
ÇÇE F
.
ÇÇF G
RunTest
ÇÇG N
(
ÇÇN O
$strÇÇO å
)ÇÇå ç
;ÇÇç é
(
ÉÉ 
new
ÉÉ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_14
ÉÉ C
(
ÉÉC D
)
ÉÉD E
)
ÉÉE F
.
ÉÉF G
RunTest
ÉÉG N
(
ÉÉN O
$strÉÉO å
)ÉÉå ç
;ÉÉç é
(
ÑÑ 
new
ÑÑ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_15
ÑÑ C
(
ÑÑC D
)
ÑÑD E
)
ÑÑE F
.
ÑÑF G
RunTest
ÑÑG N
(
ÑÑN O
$strÑÑO å
)ÑÑå ç
;ÑÑç é
(
ÖÖ 
new
ÖÖ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_16
ÖÖ C
(
ÖÖC D
)
ÖÖD E
)
ÖÖE F
.
ÖÖF G
RunTest
ÖÖG N
(
ÖÖN O
$strÖÖO å
)ÖÖå ç
;ÖÖç é
(
ÜÜ 
new
ÜÜ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_17
ÜÜ C
(
ÜÜC D
)
ÜÜD E
)
ÜÜE F
.
ÜÜF G
RunTest
ÜÜG N
(
ÜÜN O
$strÜÜO å
)ÜÜå ç
;ÜÜç é
(
áá 
new
áá I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_21
áá C
(
ááC D
)
ááD E
)
ááE F
.
ááF G
RunTest
ááG N
(
ááN O
$strááO å
)ááå ç
;ááç é
(
àà 
new
àà J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_22a
àà D
(
ààD E
)
ààE F
)
ààF G
.
ààG H
RunTest
ààH O
(
ààO P
$strààP é
)ààé è
;ààè ê
(
ââ 
new
ââ I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_31
ââ C
(
ââC D
)
ââD E
)
ââE F
.
ââF G
RunTest
ââG N
(
ââN O
$strââO å
)ââå ç
;ââç é
(
ää 
new
ää I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_41
ää C
(
ääC D
)
ääD E
)
ääE F
.
ääF G
RunTest
ääG N
(
ääN O
$strääO å
)ääå ç
;ääç é
(
ãã 
new
ãã I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_42
ãã C
(
ããC D
)
ããD E
)
ããE F
.
ããF G
RunTest
ããG N
(
ããN O
$strããO å
)ããå ç
;ããç é
(
åå 
new
åå I
;CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_45
åå C
(
ååC D
)
ååD E
)
ååE F
.
ååF G
RunTest
ååG N
(
ååN O
$strååO å
)ååå ç
;ååç é
(
çç 
new
çç J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_51a
çç D
(
ççD E
)
ççE F
)
ççF G
.
ççG H
RunTest
ççH O
(
ççO P
$strççP é
)ççé è
;ççè ê
(
éé 
new
éé J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_52a
éé D
(
ééD E
)
ééE F
)
ééF G
.
ééG H
RunTest
ééH O
(
ééO P
$strééP é
)ééé è
;ééè ê
(
èè 
new
èè J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_53a
èè D
(
èèD E
)
èèE F
)
èèF G
.
èèG H
RunTest
èèH O
(
èèO P
$strèèP é
)èèé è
;èèè ê
(
êê 
new
êê J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_54a
êê D
(
êêD E
)
êêE F
)
êêF G
.
êêG H
RunTest
êêH O
(
êêO P
$strêêP é
)êêé è
;êêè ê
(
ëë 
new
ëë J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_61a
ëë D
(
ëëD E
)
ëëE F
)
ëëF G
.
ëëG H
RunTest
ëëH O
(
ëëO P
$strëëP é
)ëëé è
;ëëè ê
(
íí 
new
íí J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_66a
íí D
(
ííD E
)
ííE F
)
ííF G
.
ííG H
RunTest
ííH O
(
ííO P
$strííP é
)ííé è
;ííè ê
(
ìì 
new
ìì J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_67a
ìì D
(
ììD E
)
ììE F
)
ììF G
.
ììG H
RunTest
ììH O
(
ììO P
$strììP é
)ììé è
;ììè ê
(
îî 
new
îî J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_68a
îî D
(
îîD E
)
îîE F
)
îîF G
.
îîG H
RunTest
îîH O
(
îîO P
$strîîP é
)îîé è
;îîè ê
(
ïï 
new
ïï J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_71a
ïï D
(
ïïD E
)
ïïE F
)
ïïF G
.
ïïG H
RunTest
ïïH O
(
ïïO P
$strïïP é
)ïïé è
;ïïè ê
(
ññ 
new
ññ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_72a
ññ D
(
ññD E
)
ññE F
)
ññF G
.
ññG H
RunTest
ññH O
(
ññO P
$strññP é
)ññé è
;ññè ê
(
óó 
new
óó J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_73a
óó D
(
óóD E
)
óóE F
)
óóF G
.
óóG H
RunTest
óóH O
(
óóO P
$stróóP é
)óóé è
;óóè ê
(
òò 
new
òò J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_74a
òò D
(
òòD E
)
òòE F
)
òòF G
.
òòG H
RunTest
òòH O
(
òòO P
$stròòP é
)òòé è
;òòè ê
(
ôô 
new
ôô J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_75a
ôô D
(
ôôD E
)
ôôE F
)
ôôF G
.
ôôG H
RunTest
ôôH O
(
ôôO P
$strôôP é
)ôôé è
;ôôè ê
(
öö 
new
öö J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_byte_81a
öö D
(
ööD E
)
ööE F
)
ööF G
.
ööG H
RunTest
ööH O
(
ööO P
$strööP é
)ööé è
;ööè ê
(
õõ 
new
õõ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_01
õõ D
(
õõD E
)
õõE F
)
õõF G
.
õõG H
RunTest
õõH O
(
õõO P
$strõõP é
)õõé è
;õõè ê
(
úú 
new
úú J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_02
úú D
(
úúD E
)
úúE F
)
úúF G
.
úúG H
RunTest
úúH O
(
úúO P
$strúúP é
)úúé è
;úúè ê
(
ùù 
new
ùù J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_03
ùù D
(
ùùD E
)
ùùE F
)
ùùF G
.
ùùG H
RunTest
ùùH O
(
ùùO P
$strùùP é
)ùùé è
;ùùè ê
(
ûû 
new
ûû J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_04
ûû D
(
ûûD E
)
ûûE F
)
ûûF G
.
ûûG H
RunTest
ûûH O
(
ûûO P
$strûûP é
)ûûé è
;ûûè ê
(
üü 
new
üü J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_05
üü D
(
üüD E
)
üüE F
)
üüF G
.
üüG H
RunTest
üüH O
(
üüO P
$strüüP é
)üüé è
;üüè ê
(
†† 
new
†† J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_06
†† D
(
††D E
)
††E F
)
††F G
.
††G H
RunTest
††H O
(
††O P
$str††P é
)††é è
;††è ê
(
°° 
new
°° J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_07
°° D
(
°°D E
)
°°E F
)
°°F G
.
°°G H
RunTest
°°H O
(
°°O P
$str°°P é
)°°é è
;°°è ê
(
¢¢ 
new
¢¢ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_08
¢¢ D
(
¢¢D E
)
¢¢E F
)
¢¢F G
.
¢¢G H
RunTest
¢¢H O
(
¢¢O P
$str¢¢P é
)¢¢é è
;¢¢è ê
(
££ 
new
££ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_09
££ D
(
££D E
)
££E F
)
££F G
.
££G H
RunTest
££H O
(
££O P
$str££P é
)££é è
;££è ê
(
§§ 
new
§§ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_10
§§ D
(
§§D E
)
§§E F
)
§§F G
.
§§G H
RunTest
§§H O
(
§§O P
$str§§P é
)§§é è
;§§è ê
(
•• 
new
•• J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_11
•• D
(
••D E
)
••E F
)
••F G
.
••G H
RunTest
••H O
(
••O P
$str••P é
)••é è
;••è ê
(
¶¶ 
new
¶¶ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_12
¶¶ D
(
¶¶D E
)
¶¶E F
)
¶¶F G
.
¶¶G H
RunTest
¶¶H O
(
¶¶O P
$str¶¶P é
)¶¶é è
;¶¶è ê
(
ßß 
new
ßß J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_13
ßß D
(
ßßD E
)
ßßE F
)
ßßF G
.
ßßG H
RunTest
ßßH O
(
ßßO P
$strßßP é
)ßßé è
;ßßè ê
(
®® 
new
®® J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_14
®® D
(
®®D E
)
®®E F
)
®®F G
.
®®G H
RunTest
®®H O
(
®®O P
$str®®P é
)®®é è
;®®è ê
(
©© 
new
©© J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_15
©© D
(
©©D E
)
©©E F
)
©©F G
.
©©G H
RunTest
©©H O
(
©©O P
$str©©P é
)©©é è
;©©è ê
(
™™ 
new
™™ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_16
™™ D
(
™™D E
)
™™E F
)
™™F G
.
™™G H
RunTest
™™H O
(
™™O P
$str™™P é
)™™é è
;™™è ê
(
´´ 
new
´´ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_17
´´ D
(
´´D E
)
´´E F
)
´´F G
.
´´G H
RunTest
´´H O
(
´´O P
$str´´P é
)´´é è
;´´è ê
(
¨¨ 
new
¨¨ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_21
¨¨ D
(
¨¨D E
)
¨¨E F
)
¨¨F G
.
¨¨G H
RunTest
¨¨H O
(
¨¨O P
$str¨¨P é
)¨¨é è
;¨¨è ê
(
≠≠ 
new
≠≠ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_22a
≠≠ E
(
≠≠E F
)
≠≠F G
)
≠≠G H
.
≠≠H I
RunTest
≠≠I P
(
≠≠P Q
$str≠≠Q ê
)≠≠ê ë
;≠≠ë í
(
ÆÆ 
new
ÆÆ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_31
ÆÆ D
(
ÆÆD E
)
ÆÆE F
)
ÆÆF G
.
ÆÆG H
RunTest
ÆÆH O
(
ÆÆO P
$strÆÆP é
)ÆÆé è
;ÆÆè ê
(
ØØ 
new
ØØ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_41
ØØ D
(
ØØD E
)
ØØE F
)
ØØF G
.
ØØG H
RunTest
ØØH O
(
ØØO P
$strØØP é
)ØØé è
;ØØè ê
(
∞∞ 
new
∞∞ J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_42
∞∞ D
(
∞∞D E
)
∞∞E F
)
∞∞F G
.
∞∞G H
RunTest
∞∞H O
(
∞∞O P
$str∞∞P é
)∞∞é è
;∞∞è ê
(
±± 
new
±± J
<CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_45
±± D
(
±±D E
)
±±E F
)
±±F G
.
±±G H
RunTest
±±H O
(
±±O P
$str±±P é
)±±é è
;±±è ê
(
≤≤ 
new
≤≤ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_51a
≤≤ E
(
≤≤E F
)
≤≤F G
)
≤≤G H
.
≤≤H I
RunTest
≤≤I P
(
≤≤P Q
$str≤≤Q ê
)≤≤ê ë
;≤≤ë í
(
≥≥ 
new
≥≥ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_52a
≥≥ E
(
≥≥E F
)
≥≥F G
)
≥≥G H
.
≥≥H I
RunTest
≥≥I P
(
≥≥P Q
$str≥≥Q ê
)≥≥ê ë
;≥≥ë í
(
¥¥ 
new
¥¥ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_53a
¥¥ E
(
¥¥E F
)
¥¥F G
)
¥¥G H
.
¥¥H I
RunTest
¥¥I P
(
¥¥P Q
$str¥¥Q ê
)¥¥ê ë
;¥¥ë í
(
µµ 
new
µµ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_54a
µµ E
(
µµE F
)
µµF G
)
µµG H
.
µµH I
RunTest
µµI P
(
µµP Q
$strµµQ ê
)µµê ë
;µµë í
(
∂∂ 
new
∂∂ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_61a
∂∂ E
(
∂∂E F
)
∂∂F G
)
∂∂G H
.
∂∂H I
RunTest
∂∂I P
(
∂∂P Q
$str∂∂Q ê
)∂∂ê ë
;∂∂ë í
(
∑∑ 
new
∑∑ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_66a
∑∑ E
(
∑∑E F
)
∑∑F G
)
∑∑G H
.
∑∑H I
RunTest
∑∑I P
(
∑∑P Q
$str∑∑Q ê
)∑∑ê ë
;∑∑ë í
(
∏∏ 
new
∏∏ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_67a
∏∏ E
(
∏∏E F
)
∏∏F G
)
∏∏G H
.
∏∏H I
RunTest
∏∏I P
(
∏∏P Q
$str∏∏Q ê
)∏∏ê ë
;∏∏ë í
(
ππ 
new
ππ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_68a
ππ E
(
ππE F
)
ππF G
)
ππG H
.
ππH I
RunTest
ππI P
(
ππP Q
$strππQ ê
)ππê ë
;ππë í
(
∫∫ 
new
∫∫ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_71a
∫∫ E
(
∫∫E F
)
∫∫F G
)
∫∫G H
.
∫∫H I
RunTest
∫∫I P
(
∫∫P Q
$str∫∫Q ê
)∫∫ê ë
;∫∫ë í
(
ªª 
new
ªª K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_72a
ªª E
(
ªªE F
)
ªªF G
)
ªªG H
.
ªªH I
RunTest
ªªI P
(
ªªP Q
$strªªQ ê
)ªªê ë
;ªªë í
(
ºº 
new
ºº K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_73a
ºº E
(
ººE F
)
ººF G
)
ººG H
.
ººH I
RunTest
ººI P
(
ººP Q
$strººQ ê
)ººê ë
;ººë í
(
ΩΩ 
new
ΩΩ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_74a
ΩΩ E
(
ΩΩE F
)
ΩΩF G
)
ΩΩG H
.
ΩΩH I
RunTest
ΩΩI P
(
ΩΩP Q
$strΩΩQ ê
)ΩΩê ë
;ΩΩë í
(
ææ 
new
ææ K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_75a
ææ E
(
ææE F
)
ææF G
)
ææG H
.
ææH I
RunTest
ææI P
(
ææP Q
$strææQ ê
)ææê ë
;ææë í
(
øø 
new
øø K
=CWE197_Numeric_Truncation_Error__int_Connect_tcp_to_short_81a
øø E
(
øøE F
)
øøF G
)
øøG H
.
øøH I
RunTest
øøI P
(
øøP Q
$strøøQ ê
)øøê ë
;øøë í
(
¿¿ 
new
¿¿ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_01
¿¿ @
(
¿¿@ A
)
¿¿A B
)
¿¿B C
.
¿¿C D
RunTest
¿¿D K
(
¿¿K L
$str¿¿L Ü
)¿¿Ü á
;¿¿á à
(
¡¡ 
new
¡¡ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_02
¡¡ @
(
¡¡@ A
)
¡¡A B
)
¡¡B C
.
¡¡C D
RunTest
¡¡D K
(
¡¡K L
$str¡¡L Ü
)¡¡Ü á
;¡¡á à
(
¬¬ 
new
¬¬ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_03
¬¬ @
(
¬¬@ A
)
¬¬A B
)
¬¬B C
.
¬¬C D
RunTest
¬¬D K
(
¬¬K L
$str¬¬L Ü
)¬¬Ü á
;¬¬á à
(
√√ 
new
√√ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_04
√√ @
(
√√@ A
)
√√A B
)
√√B C
.
√√C D
RunTest
√√D K
(
√√K L
$str√√L Ü
)√√Ü á
;√√á à
(
ƒƒ 
new
ƒƒ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_05
ƒƒ @
(
ƒƒ@ A
)
ƒƒA B
)
ƒƒB C
.
ƒƒC D
RunTest
ƒƒD K
(
ƒƒK L
$strƒƒL Ü
)ƒƒÜ á
;ƒƒá à
(
≈≈ 
new
≈≈ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_06
≈≈ @
(
≈≈@ A
)
≈≈A B
)
≈≈B C
.
≈≈C D
RunTest
≈≈D K
(
≈≈K L
$str≈≈L Ü
)≈≈Ü á
;≈≈á à
(
∆∆ 
new
∆∆ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_07
∆∆ @
(
∆∆@ A
)
∆∆A B
)
∆∆B C
.
∆∆C D
RunTest
∆∆D K
(
∆∆K L
$str∆∆L Ü
)∆∆Ü á
;∆∆á à
(
«« 
new
«« F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_08
«« @
(
««@ A
)
««A B
)
««B C
.
««C D
RunTest
««D K
(
««K L
$str««L Ü
)««Ü á
;««á à
(
»» 
new
»» F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_09
»» @
(
»»@ A
)
»»A B
)
»»B C
.
»»C D
RunTest
»»D K
(
»»K L
$str»»L Ü
)»»Ü á
;»»á à
(
…… 
new
…… F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_10
…… @
(
……@ A
)
……A B
)
……B C
.
……C D
RunTest
……D K
(
……K L
$str……L Ü
)……Ü á
;……á à
(
   
new
   F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_11
   @
(
  @ A
)
  A B
)
  B C
.
  C D
RunTest
  D K
(
  K L
$str  L Ü
)  Ü á
;  á à
(
ÀÀ 
new
ÀÀ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_12
ÀÀ @
(
ÀÀ@ A
)
ÀÀA B
)
ÀÀB C
.
ÀÀC D
RunTest
ÀÀD K
(
ÀÀK L
$strÀÀL Ü
)ÀÀÜ á
;ÀÀá à
(
ÃÃ 
new
ÃÃ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_13
ÃÃ @
(
ÃÃ@ A
)
ÃÃA B
)
ÃÃB C
.
ÃÃC D
RunTest
ÃÃD K
(
ÃÃK L
$strÃÃL Ü
)ÃÃÜ á
;ÃÃá à
(
ÕÕ 
new
ÕÕ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_14
ÕÕ @
(
ÕÕ@ A
)
ÕÕA B
)
ÕÕB C
.
ÕÕC D
RunTest
ÕÕD K
(
ÕÕK L
$strÕÕL Ü
)ÕÕÜ á
;ÕÕá à
(
ŒŒ 
new
ŒŒ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_15
ŒŒ @
(
ŒŒ@ A
)
ŒŒA B
)
ŒŒB C
.
ŒŒC D
RunTest
ŒŒD K
(
ŒŒK L
$strŒŒL Ü
)ŒŒÜ á
;ŒŒá à
(
œœ 
new
œœ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_16
œœ @
(
œœ@ A
)
œœA B
)
œœB C
.
œœC D
RunTest
œœD K
(
œœK L
$strœœL Ü
)œœÜ á
;œœá à
(
–– 
new
–– F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_17
–– @
(
––@ A
)
––A B
)
––B C
.
––C D
RunTest
––D K
(
––K L
$str––L Ü
)––Ü á
;––á à
(
—— 
new
—— F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_21
—— @
(
——@ A
)
——A B
)
——B C
.
——C D
RunTest
——D K
(
——K L
$str——L Ü
)——Ü á
;——á à
(
““ 
new
““ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_22a
““ A
(
““A B
)
““B C
)
““C D
.
““D E
RunTest
““E L
(
““L M
$str““M à
)““à â
;““â ä
(
”” 
new
”” F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_31
”” @
(
””@ A
)
””A B
)
””B C
.
””C D
RunTest
””D K
(
””K L
$str””L Ü
)””Ü á
;””á à
(
‘‘ 
new
‘‘ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_41
‘‘ @
(
‘‘@ A
)
‘‘A B
)
‘‘B C
.
‘‘C D
RunTest
‘‘D K
(
‘‘K L
$str‘‘L Ü
)‘‘Ü á
;‘‘á à
(
’’ 
new
’’ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_42
’’ @
(
’’@ A
)
’’A B
)
’’B C
.
’’C D
RunTest
’’D K
(
’’K L
$str’’L Ü
)’’Ü á
;’’á à
(
÷÷ 
new
÷÷ F
8CWE197_Numeric_Truncation_Error__int_Database_to_byte_45
÷÷ @
(
÷÷@ A
)
÷÷A B
)
÷÷B C
.
÷÷C D
RunTest
÷÷D K
(
÷÷K L
$str÷÷L Ü
)÷÷Ü á
;÷÷á à
(
◊◊ 
new
◊◊ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_51a
◊◊ A
(
◊◊A B
)
◊◊B C
)
◊◊C D
.
◊◊D E
RunTest
◊◊E L
(
◊◊L M
$str◊◊M à
)◊◊à â
;◊◊â ä
(
ÿÿ 
new
ÿÿ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_52a
ÿÿ A
(
ÿÿA B
)
ÿÿB C
)
ÿÿC D
.
ÿÿD E
RunTest
ÿÿE L
(
ÿÿL M
$strÿÿM à
)ÿÿà â
;ÿÿâ ä
(
ŸŸ 
new
ŸŸ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_53a
ŸŸ A
(
ŸŸA B
)
ŸŸB C
)
ŸŸC D
.
ŸŸD E
RunTest
ŸŸE L
(
ŸŸL M
$strŸŸM à
)ŸŸà â
;ŸŸâ ä
(
⁄⁄ 
new
⁄⁄ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_54a
⁄⁄ A
(
⁄⁄A B
)
⁄⁄B C
)
⁄⁄C D
.
⁄⁄D E
RunTest
⁄⁄E L
(
⁄⁄L M
$str⁄⁄M à
)⁄⁄à â
;⁄⁄â ä
(
€€ 
new
€€ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_61a
€€ A
(
€€A B
)
€€B C
)
€€C D
.
€€D E
RunTest
€€E L
(
€€L M
$str€€M à
)€€à â
;€€â ä
(
‹‹ 
new
‹‹ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_66a
‹‹ A
(
‹‹A B
)
‹‹B C
)
‹‹C D
.
‹‹D E
RunTest
‹‹E L
(
‹‹L M
$str‹‹M à
)‹‹à â
;‹‹â ä
(
›› 
new
›› G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_67a
›› A
(
››A B
)
››B C
)
››C D
.
››D E
RunTest
››E L
(
››L M
$str››M à
)››à â
;››â ä
(
ﬁﬁ 
new
ﬁﬁ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_68a
ﬁﬁ A
(
ﬁﬁA B
)
ﬁﬁB C
)
ﬁﬁC D
.
ﬁﬁD E
RunTest
ﬁﬁE L
(
ﬁﬁL M
$strﬁﬁM à
)ﬁﬁà â
;ﬁﬁâ ä
(
ﬂﬂ 
new
ﬂﬂ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_71a
ﬂﬂ A
(
ﬂﬂA B
)
ﬂﬂB C
)
ﬂﬂC D
.
ﬂﬂD E
RunTest
ﬂﬂE L
(
ﬂﬂL M
$strﬂﬂM à
)ﬂﬂà â
;ﬂﬂâ ä
(
‡‡ 
new
‡‡ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_72a
‡‡ A
(
‡‡A B
)
‡‡B C
)
‡‡C D
.
‡‡D E
RunTest
‡‡E L
(
‡‡L M
$str‡‡M à
)‡‡à â
;‡‡â ä
(
·· 
new
·· G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_73a
·· A
(
··A B
)
··B C
)
··C D
.
··D E
RunTest
··E L
(
··L M
$str··M à
)··à â
;··â ä
(
‚‚ 
new
‚‚ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_74a
‚‚ A
(
‚‚A B
)
‚‚B C
)
‚‚C D
.
‚‚D E
RunTest
‚‚E L
(
‚‚L M
$str‚‚M à
)‚‚à â
;‚‚â ä
(
„„ 
new
„„ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_75a
„„ A
(
„„A B
)
„„B C
)
„„C D
.
„„D E
RunTest
„„E L
(
„„L M
$str„„M à
)„„à â
;„„â ä
(
‰‰ 
new
‰‰ G
9CWE197_Numeric_Truncation_Error__int_Database_to_byte_81a
‰‰ A
(
‰‰A B
)
‰‰B C
)
‰‰C D
.
‰‰D E
RunTest
‰‰E L
(
‰‰L M
$str‰‰M à
)‰‰à â
;‰‰â ä
(
ÂÂ 
new
ÂÂ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_01
ÂÂ A
(
ÂÂA B
)
ÂÂB C
)
ÂÂC D
.
ÂÂD E
RunTest
ÂÂE L
(
ÂÂL M
$strÂÂM à
)ÂÂà â
;ÂÂâ ä
(
ÊÊ 
new
ÊÊ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_02
ÊÊ A
(
ÊÊA B
)
ÊÊB C
)
ÊÊC D
.
ÊÊD E
RunTest
ÊÊE L
(
ÊÊL M
$strÊÊM à
)ÊÊà â
;ÊÊâ ä
(
ÁÁ 
new
ÁÁ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_03
ÁÁ A
(
ÁÁA B
)
ÁÁB C
)
ÁÁC D
.
ÁÁD E
RunTest
ÁÁE L
(
ÁÁL M
$strÁÁM à
)ÁÁà â
;ÁÁâ ä
(
ËË 
new
ËË G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_04
ËË A
(
ËËA B
)
ËËB C
)
ËËC D
.
ËËD E
RunTest
ËËE L
(
ËËL M
$strËËM à
)ËËà â
;ËËâ ä
(
ÈÈ 
new
ÈÈ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_05
ÈÈ A
(
ÈÈA B
)
ÈÈB C
)
ÈÈC D
.
ÈÈD E
RunTest
ÈÈE L
(
ÈÈL M
$strÈÈM à
)ÈÈà â
;ÈÈâ ä
(
ÍÍ 
new
ÍÍ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_06
ÍÍ A
(
ÍÍA B
)
ÍÍB C
)
ÍÍC D
.
ÍÍD E
RunTest
ÍÍE L
(
ÍÍL M
$strÍÍM à
)ÍÍà â
;ÍÍâ ä
(
ÎÎ 
new
ÎÎ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_07
ÎÎ A
(
ÎÎA B
)
ÎÎB C
)
ÎÎC D
.
ÎÎD E
RunTest
ÎÎE L
(
ÎÎL M
$strÎÎM à
)ÎÎà â
;ÎÎâ ä
(
ÏÏ 
new
ÏÏ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_08
ÏÏ A
(
ÏÏA B
)
ÏÏB C
)
ÏÏC D
.
ÏÏD E
RunTest
ÏÏE L
(
ÏÏL M
$strÏÏM à
)ÏÏà â
;ÏÏâ ä
(
ÌÌ 
new
ÌÌ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_09
ÌÌ A
(
ÌÌA B
)
ÌÌB C
)
ÌÌC D
.
ÌÌD E
RunTest
ÌÌE L
(
ÌÌL M
$strÌÌM à
)ÌÌà â
;ÌÌâ ä
(
ÓÓ 
new
ÓÓ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_10
ÓÓ A
(
ÓÓA B
)
ÓÓB C
)
ÓÓC D
.
ÓÓD E
RunTest
ÓÓE L
(
ÓÓL M
$strÓÓM à
)ÓÓà â
;ÓÓâ ä
(
ÔÔ 
new
ÔÔ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_11
ÔÔ A
(
ÔÔA B
)
ÔÔB C
)
ÔÔC D
.
ÔÔD E
RunTest
ÔÔE L
(
ÔÔL M
$strÔÔM à
)ÔÔà â
;ÔÔâ ä
(
 
new
 G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_12
 A
(
A B
)
B C
)
C D
.
D E
RunTest
E L
(
L M
$strM à
)à â
;â ä
(
ÒÒ 
new
ÒÒ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_13
ÒÒ A
(
ÒÒA B
)
ÒÒB C
)
ÒÒC D
.
ÒÒD E
RunTest
ÒÒE L
(
ÒÒL M
$strÒÒM à
)ÒÒà â
;ÒÒâ ä
(
ÚÚ 
new
ÚÚ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_14
ÚÚ A
(
ÚÚA B
)
ÚÚB C
)
ÚÚC D
.
ÚÚD E
RunTest
ÚÚE L
(
ÚÚL M
$strÚÚM à
)ÚÚà â
;ÚÚâ ä
(
ÛÛ 
new
ÛÛ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_15
ÛÛ A
(
ÛÛA B
)
ÛÛB C
)
ÛÛC D
.
ÛÛD E
RunTest
ÛÛE L
(
ÛÛL M
$strÛÛM à
)ÛÛà â
;ÛÛâ ä
(
ÙÙ 
new
ÙÙ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_16
ÙÙ A
(
ÙÙA B
)
ÙÙB C
)
ÙÙC D
.
ÙÙD E
RunTest
ÙÙE L
(
ÙÙL M
$strÙÙM à
)ÙÙà â
;ÙÙâ ä
(
ıı 
new
ıı G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_17
ıı A
(
ııA B
)
ııB C
)
ııC D
.
ııD E
RunTest
ııE L
(
ııL M
$strııM à
)ııà â
;ııâ ä
(
ˆˆ 
new
ˆˆ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_21
ˆˆ A
(
ˆˆA B
)
ˆˆB C
)
ˆˆC D
.
ˆˆD E
RunTest
ˆˆE L
(
ˆˆL M
$strˆˆM à
)ˆˆà â
;ˆˆâ ä
(
˜˜ 
new
˜˜ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_22a
˜˜ B
(
˜˜B C
)
˜˜C D
)
˜˜D E
.
˜˜E F
RunTest
˜˜F M
(
˜˜M N
$str˜˜N ä
)˜˜ä ã
;˜˜ã å
(
¯¯ 
new
¯¯ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_31
¯¯ A
(
¯¯A B
)
¯¯B C
)
¯¯C D
.
¯¯D E
RunTest
¯¯E L
(
¯¯L M
$str¯¯M à
)¯¯à â
;¯¯â ä
(
˘˘ 
new
˘˘ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_41
˘˘ A
(
˘˘A B
)
˘˘B C
)
˘˘C D
.
˘˘D E
RunTest
˘˘E L
(
˘˘L M
$str˘˘M à
)˘˘à â
;˘˘â ä
(
˙˙ 
new
˙˙ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_42
˙˙ A
(
˙˙A B
)
˙˙B C
)
˙˙C D
.
˙˙D E
RunTest
˙˙E L
(
˙˙L M
$str˙˙M à
)˙˙à â
;˙˙â ä
(
˚˚ 
new
˚˚ G
9CWE197_Numeric_Truncation_Error__int_Database_to_short_45
˚˚ A
(
˚˚A B
)
˚˚B C
)
˚˚C D
.
˚˚D E
RunTest
˚˚E L
(
˚˚L M
$str˚˚M à
)˚˚à â
;˚˚â ä
(
¸¸ 
new
¸¸ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_51a
¸¸ B
(
¸¸B C
)
¸¸C D
)
¸¸D E
.
¸¸E F
RunTest
¸¸F M
(
¸¸M N
$str¸¸N ä
)¸¸ä ã
;¸¸ã å
(
˝˝ 
new
˝˝ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_52a
˝˝ B
(
˝˝B C
)
˝˝C D
)
˝˝D E
.
˝˝E F
RunTest
˝˝F M
(
˝˝M N
$str˝˝N ä
)˝˝ä ã
;˝˝ã å
(
˛˛ 
new
˛˛ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_53a
˛˛ B
(
˛˛B C
)
˛˛C D
)
˛˛D E
.
˛˛E F
RunTest
˛˛F M
(
˛˛M N
$str˛˛N ä
)˛˛ä ã
;˛˛ã å
(
ˇˇ 
new
ˇˇ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_54a
ˇˇ B
(
ˇˇB C
)
ˇˇC D
)
ˇˇD E
.
ˇˇE F
RunTest
ˇˇF M
(
ˇˇM N
$strˇˇN ä
)ˇˇä ã
;ˇˇã å
(
ÄÄ 
new
ÄÄ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_61a
ÄÄ B
(
ÄÄB C
)
ÄÄC D
)
ÄÄD E
.
ÄÄE F
RunTest
ÄÄF M
(
ÄÄM N
$strÄÄN ä
)ÄÄä ã
;ÄÄã å
(
ÅÅ 
new
ÅÅ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_66a
ÅÅ B
(
ÅÅB C
)
ÅÅC D
)
ÅÅD E
.
ÅÅE F
RunTest
ÅÅF M
(
ÅÅM N
$strÅÅN ä
)ÅÅä ã
;ÅÅã å
(
ÇÇ 
new
ÇÇ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_67a
ÇÇ B
(
ÇÇB C
)
ÇÇC D
)
ÇÇD E
.
ÇÇE F
RunTest
ÇÇF M
(
ÇÇM N
$strÇÇN ä
)ÇÇä ã
;ÇÇã å
(
ÉÉ 
new
ÉÉ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_68a
ÉÉ B
(
ÉÉB C
)
ÉÉC D
)
ÉÉD E
.
ÉÉE F
RunTest
ÉÉF M
(
ÉÉM N
$strÉÉN ä
)ÉÉä ã
;ÉÉã å
(
ÑÑ 
new
ÑÑ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_71a
ÑÑ B
(
ÑÑB C
)
ÑÑC D
)
ÑÑD E
.
ÑÑE F
RunTest
ÑÑF M
(
ÑÑM N
$strÑÑN ä
)ÑÑä ã
;ÑÑã å
(
ÖÖ 
new
ÖÖ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_72a
ÖÖ B
(
ÖÖB C
)
ÖÖC D
)
ÖÖD E
.
ÖÖE F
RunTest
ÖÖF M
(
ÖÖM N
$strÖÖN ä
)ÖÖä ã
;ÖÖã å
(
ÜÜ 
new
ÜÜ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_73a
ÜÜ B
(
ÜÜB C
)
ÜÜC D
)
ÜÜD E
.
ÜÜE F
RunTest
ÜÜF M
(
ÜÜM N
$strÜÜN ä
)ÜÜä ã
;ÜÜã å
(
áá 
new
áá H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_74a
áá B
(
ááB C
)
ááC D
)
ááD E
.
ááE F
RunTest
ááF M
(
ááM N
$strááN ä
)ááä ã
;ááã å
(
àà 
new
àà H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_75a
àà B
(
ààB C
)
ààC D
)
ààD E
.
ààE F
RunTest
ààF M
(
ààM N
$strààN ä
)ààä ã
;ààã å
(
ââ 
new
ââ H
:CWE197_Numeric_Truncation_Error__int_Database_to_short_81a
ââ B
(
ââB C
)
ââC D
)
ââD E
.
ââE F
RunTest
ââF M
(
ââM N
$strââN ä
)ââä ã
;ââã å
(
ää 
new
ää I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_01
ää C
(
ääC D
)
ääD E
)
ääE F
.
ääF G
RunTest
ääG N
(
ääN O
$strääO å
)ääå ç
;ääç é
(
ãã 
new
ãã I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_02
ãã C
(
ããC D
)
ããD E
)
ããE F
.
ããF G
RunTest
ããG N
(
ããN O
$strããO å
)ããå ç
;ããç é
(
åå 
new
åå I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_03
åå C
(
ååC D
)
ååD E
)
ååE F
.
ååF G
RunTest
ååG N
(
ååN O
$strååO å
)ååå ç
;ååç é
(
çç 
new
çç I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_04
çç C
(
ççC D
)
ççD E
)
ççE F
.
ççF G
RunTest
ççG N
(
ççN O
$strççO å
)ççå ç
;ççç é
(
éé 
new
éé I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_05
éé C
(
ééC D
)
ééD E
)
ééE F
.
ééF G
RunTest
ééG N
(
ééN O
$strééO å
)ééå ç
;ééç é
(
èè 
new
èè I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_06
èè C
(
èèC D
)
èèD E
)
èèE F
.
èèF G
RunTest
èèG N
(
èèN O
$strèèO å
)èèå ç
;èèç é
(
êê 
new
êê I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_07
êê C
(
êêC D
)
êêD E
)
êêE F
.
êêF G
RunTest
êêG N
(
êêN O
$strêêO å
)êêå ç
;êêç é
(
ëë 
new
ëë I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_08
ëë C
(
ëëC D
)
ëëD E
)
ëëE F
.
ëëF G
RunTest
ëëG N
(
ëëN O
$strëëO å
)ëëå ç
;ëëç é
(
íí 
new
íí I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_09
íí C
(
ííC D
)
ííD E
)
ííE F
.
ííF G
RunTest
ííG N
(
ííN O
$strííO å
)ííå ç
;ííç é
(
ìì 
new
ìì I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_10
ìì C
(
ììC D
)
ììD E
)
ììE F
.
ììF G
RunTest
ììG N
(
ììN O
$strììO å
)ììå ç
;ììç é
(
îî 
new
îî I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_11
îî C
(
îîC D
)
îîD E
)
îîE F
.
îîF G
RunTest
îîG N
(
îîN O
$strîîO å
)îîå ç
;îîç é
(
ïï 
new
ïï I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_12
ïï C
(
ïïC D
)
ïïD E
)
ïïE F
.
ïïF G
RunTest
ïïG N
(
ïïN O
$strïïO å
)ïïå ç
;ïïç é
(
ññ 
new
ññ I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_13
ññ C
(
ññC D
)
ññD E
)
ññE F
.
ññF G
RunTest
ññG N
(
ññN O
$strññO å
)ññå ç
;ññç é
(
óó 
new
óó I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_14
óó C
(
óóC D
)
óóD E
)
óóE F
.
óóF G
RunTest
óóG N
(
óóN O
$stróóO å
)óóå ç
;óóç é
(
òò 
new
òò I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_15
òò C
(
òòC D
)
òòD E
)
òòE F
.
òòF G
RunTest
òòG N
(
òòN O
$stròòO å
)òòå ç
;òòç é
(
ôô 
new
ôô I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_16
ôô C
(
ôôC D
)
ôôD E
)
ôôE F
.
ôôF G
RunTest
ôôG N
(
ôôN O
$strôôO å
)ôôå ç
;ôôç é
(
öö 
new
öö I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_17
öö C
(
ööC D
)
ööD E
)
ööE F
.
ööF G
RunTest
ööG N
(
ööN O
$strööO å
)ööå ç
;ööç é
(
õõ 
new
õõ I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_21
õõ C
(
õõC D
)
õõD E
)
õõE F
.
õõF G
RunTest
õõG N
(
õõN O
$strõõO å
)õõå ç
;õõç é
(
úú 
new
úú J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a
úú D
(
úúD E
)
úúE F
)
úúF G
.
úúG H
RunTest
úúH O
(
úúO P
$strúúP é
)úúé è
;úúè ê
(
ùù 
new
ùù I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_31
ùù C
(
ùùC D
)
ùùD E
)
ùùE F
.
ùùF G
RunTest
ùùG N
(
ùùN O
$strùùO å
)ùùå ç
;ùùç é
(
ûû 
new
ûû I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_41
ûû C
(
ûûC D
)
ûûD E
)
ûûE F
.
ûûF G
RunTest
ûûG N
(
ûûN O
$strûûO å
)ûûå ç
;ûûç é
(
üü 
new
üü I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_42
üü C
(
üüC D
)
üüD E
)
üüE F
.
üüF G
RunTest
üüG N
(
üüN O
$strüüO å
)üüå ç
;üüç é
(
†† 
new
†† I
;CWE197_Numeric_Truncation_Error__int_Environment_to_byte_45
†† C
(
††C D
)
††D E
)
††E F
.
††F G
RunTest
††G N
(
††N O
$str††O å
)††å ç
;††ç é
(
°° 
new
°° J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51a
°° D
(
°°D E
)
°°E F
)
°°F G
.
°°G H
RunTest
°°H O
(
°°O P
$str°°P é
)°°é è
;°°è ê
(
¢¢ 
new
¢¢ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52a
¢¢ D
(
¢¢D E
)
¢¢E F
)
¢¢F G
.
¢¢G H
RunTest
¢¢H O
(
¢¢O P
$str¢¢P é
)¢¢é è
;¢¢è ê
(
££ 
new
££ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53a
££ D
(
££D E
)
££E F
)
££F G
.
££G H
RunTest
££H O
(
££O P
$str££P é
)££é è
;££è ê
(
§§ 
new
§§ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54a
§§ D
(
§§D E
)
§§E F
)
§§F G
.
§§G H
RunTest
§§H O
(
§§O P
$str§§P é
)§§é è
;§§è ê
(
•• 
new
•• J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61a
•• D
(
••D E
)
••E F
)
••F G
.
••G H
RunTest
••H O
(
••O P
$str••P é
)••é è
;••è ê
(
¶¶ 
new
¶¶ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66a
¶¶ D
(
¶¶D E
)
¶¶E F
)
¶¶F G
.
¶¶G H
RunTest
¶¶H O
(
¶¶O P
$str¶¶P é
)¶¶é è
;¶¶è ê
(
ßß 
new
ßß J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67a
ßß D
(
ßßD E
)
ßßE F
)
ßßF G
.
ßßG H
RunTest
ßßH O
(
ßßO P
$strßßP é
)ßßé è
;ßßè ê
(
®® 
new
®® J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68a
®® D
(
®®D E
)
®®E F
)
®®F G
.
®®G H
RunTest
®®H O
(
®®O P
$str®®P é
)®®é è
;®®è ê
(
©© 
new
©© J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71a
©© D
(
©©D E
)
©©E F
)
©©F G
.
©©G H
RunTest
©©H O
(
©©O P
$str©©P é
)©©é è
;©©è ê
(
™™ 
new
™™ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72a
™™ D
(
™™D E
)
™™E F
)
™™F G
.
™™G H
RunTest
™™H O
(
™™O P
$str™™P é
)™™é è
;™™è ê
(
´´ 
new
´´ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73a
´´ D
(
´´D E
)
´´E F
)
´´F G
.
´´G H
RunTest
´´H O
(
´´O P
$str´´P é
)´´é è
;´´è ê
(
¨¨ 
new
¨¨ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74a
¨¨ D
(
¨¨D E
)
¨¨E F
)
¨¨F G
.
¨¨G H
RunTest
¨¨H O
(
¨¨O P
$str¨¨P é
)¨¨é è
;¨¨è ê
(
≠≠ 
new
≠≠ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75a
≠≠ D
(
≠≠D E
)
≠≠E F
)
≠≠F G
.
≠≠G H
RunTest
≠≠H O
(
≠≠O P
$str≠≠P é
)≠≠é è
;≠≠è ê
(
ÆÆ 
new
ÆÆ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81a
ÆÆ D
(
ÆÆD E
)
ÆÆE F
)
ÆÆF G
.
ÆÆG H
RunTest
ÆÆH O
(
ÆÆO P
$strÆÆP é
)ÆÆé è
;ÆÆè ê
(
ØØ 
new
ØØ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_01
ØØ D
(
ØØD E
)
ØØE F
)
ØØF G
.
ØØG H
RunTest
ØØH O
(
ØØO P
$strØØP é
)ØØé è
;ØØè ê
(
∞∞ 
new
∞∞ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_02
∞∞ D
(
∞∞D E
)
∞∞E F
)
∞∞F G
.
∞∞G H
RunTest
∞∞H O
(
∞∞O P
$str∞∞P é
)∞∞é è
;∞∞è ê
(
±± 
new
±± J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_03
±± D
(
±±D E
)
±±E F
)
±±F G
.
±±G H
RunTest
±±H O
(
±±O P
$str±±P é
)±±é è
;±±è ê
(
≤≤ 
new
≤≤ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_04
≤≤ D
(
≤≤D E
)
≤≤E F
)
≤≤F G
.
≤≤G H
RunTest
≤≤H O
(
≤≤O P
$str≤≤P é
)≤≤é è
;≤≤è ê
(
≥≥ 
new
≥≥ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_05
≥≥ D
(
≥≥D E
)
≥≥E F
)
≥≥F G
.
≥≥G H
RunTest
≥≥H O
(
≥≥O P
$str≥≥P é
)≥≥é è
;≥≥è ê
(
¥¥ 
new
¥¥ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_06
¥¥ D
(
¥¥D E
)
¥¥E F
)
¥¥F G
.
¥¥G H
RunTest
¥¥H O
(
¥¥O P
$str¥¥P é
)¥¥é è
;¥¥è ê
(
µµ 
new
µµ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_07
µµ D
(
µµD E
)
µµE F
)
µµF G
.
µµG H
RunTest
µµH O
(
µµO P
$strµµP é
)µµé è
;µµè ê
(
∂∂ 
new
∂∂ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_08
∂∂ D
(
∂∂D E
)
∂∂E F
)
∂∂F G
.
∂∂G H
RunTest
∂∂H O
(
∂∂O P
$str∂∂P é
)∂∂é è
;∂∂è ê
(
∑∑ 
new
∑∑ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_09
∑∑ D
(
∑∑D E
)
∑∑E F
)
∑∑F G
.
∑∑G H
RunTest
∑∑H O
(
∑∑O P
$str∑∑P é
)∑∑é è
;∑∑è ê
(
∏∏ 
new
∏∏ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_10
∏∏ D
(
∏∏D E
)
∏∏E F
)
∏∏F G
.
∏∏G H
RunTest
∏∏H O
(
∏∏O P
$str∏∏P é
)∏∏é è
;∏∏è ê
(
ππ 
new
ππ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_11
ππ D
(
ππD E
)
ππE F
)
ππF G
.
ππG H
RunTest
ππH O
(
ππO P
$strππP é
)ππé è
;ππè ê
(
∫∫ 
new
∫∫ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_12
∫∫ D
(
∫∫D E
)
∫∫E F
)
∫∫F G
.
∫∫G H
RunTest
∫∫H O
(
∫∫O P
$str∫∫P é
)∫∫é è
;∫∫è ê
(
ªª 
new
ªª J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_13
ªª D
(
ªªD E
)
ªªE F
)
ªªF G
.
ªªG H
RunTest
ªªH O
(
ªªO P
$strªªP é
)ªªé è
;ªªè ê
(
ºº 
new
ºº J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_14
ºº D
(
ººD E
)
ººE F
)
ººF G
.
ººG H
RunTest
ººH O
(
ººO P
$strººP é
)ººé è
;ººè ê
(
ΩΩ 
new
ΩΩ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_15
ΩΩ D
(
ΩΩD E
)
ΩΩE F
)
ΩΩF G
.
ΩΩG H
RunTest
ΩΩH O
(
ΩΩO P
$strΩΩP é
)ΩΩé è
;ΩΩè ê
(
ææ 
new
ææ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_16
ææ D
(
ææD E
)
ææE F
)
ææF G
.
ææG H
RunTest
ææH O
(
ææO P
$strææP é
)ææé è
;ææè ê
(
øø 
new
øø J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_17
øø D
(
øøD E
)
øøE F
)
øøF G
.
øøG H
RunTest
øøH O
(
øøO P
$strøøP é
)øøé è
;øøè ê
(
¿¿ 
new
¿¿ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_21
¿¿ D
(
¿¿D E
)
¿¿E F
)
¿¿F G
.
¿¿G H
RunTest
¿¿H O
(
¿¿O P
$str¿¿P é
)¿¿é è
;¿¿è ê
(
¡¡ 
new
¡¡ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a
¡¡ E
(
¡¡E F
)
¡¡F G
)
¡¡G H
.
¡¡H I
RunTest
¡¡I P
(
¡¡P Q
$str¡¡Q ê
)¡¡ê ë
;¡¡ë í
(
¬¬ 
new
¬¬ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_31
¬¬ D
(
¬¬D E
)
¬¬E F
)
¬¬F G
.
¬¬G H
RunTest
¬¬H O
(
¬¬O P
$str¬¬P é
)¬¬é è
;¬¬è ê
(
√√ 
new
√√ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_41
√√ D
(
√√D E
)
√√E F
)
√√F G
.
√√G H
RunTest
√√H O
(
√√O P
$str√√P é
)√√é è
;√√è ê
(
ƒƒ 
new
ƒƒ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_42
ƒƒ D
(
ƒƒD E
)
ƒƒE F
)
ƒƒF G
.
ƒƒG H
RunTest
ƒƒH O
(
ƒƒO P
$strƒƒP é
)ƒƒé è
;ƒƒè ê
(
≈≈ 
new
≈≈ J
<CWE197_Numeric_Truncation_Error__int_Environment_to_short_45
≈≈ D
(
≈≈D E
)
≈≈E F
)
≈≈F G
.
≈≈G H
RunTest
≈≈H O
(
≈≈O P
$str≈≈P é
)≈≈é è
;≈≈è ê
(
∆∆ 
new
∆∆ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_51a
∆∆ E
(
∆∆E F
)
∆∆F G
)
∆∆G H
.
∆∆H I
RunTest
∆∆I P
(
∆∆P Q
$str∆∆Q ê
)∆∆ê ë
;∆∆ë í
(
«« 
new
«« K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_52a
«« E
(
««E F
)
««F G
)
««G H
.
««H I
RunTest
««I P
(
««P Q
$str««Q ê
)««ê ë
;««ë í
(
»» 
new
»» K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_53a
»» E
(
»»E F
)
»»F G
)
»»G H
.
»»H I
RunTest
»»I P
(
»»P Q
$str»»Q ê
)»»ê ë
;»»ë í
(
…… 
new
…… K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_54a
…… E
(
……E F
)
……F G
)
……G H
.
……H I
RunTest
……I P
(
……P Q
$str……Q ê
)……ê ë
;……ë í
(
   
new
   K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_61a
   E
(
  E F
)
  F G
)
  G H
.
  H I
RunTest
  I P
(
  P Q
$str  Q ê
)  ê ë
;  ë í
(
ÀÀ 
new
ÀÀ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_66a
ÀÀ E
(
ÀÀE F
)
ÀÀF G
)
ÀÀG H
.
ÀÀH I
RunTest
ÀÀI P
(
ÀÀP Q
$strÀÀQ ê
)ÀÀê ë
;ÀÀë í
(
ÃÃ 
new
ÃÃ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_67a
ÃÃ E
(
ÃÃE F
)
ÃÃF G
)
ÃÃG H
.
ÃÃH I
RunTest
ÃÃI P
(
ÃÃP Q
$strÃÃQ ê
)ÃÃê ë
;ÃÃë í
(
ÕÕ 
new
ÕÕ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_68a
ÕÕ E
(
ÕÕE F
)
ÕÕF G
)
ÕÕG H
.
ÕÕH I
RunTest
ÕÕI P
(
ÕÕP Q
$strÕÕQ ê
)ÕÕê ë
;ÕÕë í
(
ŒŒ 
new
ŒŒ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_71a
ŒŒ E
(
ŒŒE F
)
ŒŒF G
)
ŒŒG H
.
ŒŒH I
RunTest
ŒŒI P
(
ŒŒP Q
$strŒŒQ ê
)ŒŒê ë
;ŒŒë í
(
œœ 
new
œœ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_72a
œœ E
(
œœE F
)
œœF G
)
œœG H
.
œœH I
RunTest
œœI P
(
œœP Q
$strœœQ ê
)œœê ë
;œœë í
(
–– 
new
–– K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_73a
–– E
(
––E F
)
––F G
)
––G H
.
––H I
RunTest
––I P
(
––P Q
$str––Q ê
)––ê ë
;––ë í
(
—— 
new
—— K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_74a
—— E
(
——E F
)
——F G
)
——G H
.
——H I
RunTest
——I P
(
——P Q
$str——Q ê
)——ê ë
;——ë í
(
““ 
new
““ K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_75a
““ E
(
““E F
)
““F G
)
““G H
.
““H I
RunTest
““I P
(
““P Q
$str““Q ê
)““ê ë
;““ë í
(
”” 
new
”” K
=CWE197_Numeric_Truncation_Error__int_Environment_to_short_81a
”” E
(
””E F
)
””F G
)
””G H
.
””H I
RunTest
””I P
(
””P Q
$str””Q ê
)””ê ë
;””ë í
(
‘‘ 
new
‘‘ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_01
‘‘ <
(
‘‘< =
)
‘‘= >
)
‘‘> ?
.
‘‘? @
RunTest
‘‘@ G
(
‘‘G H
$str
‘‘H ~
)
‘‘~ 
;‘‘ Ä
(
’’ 
new
’’ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_02
’’ <
(
’’< =
)
’’= >
)
’’> ?
.
’’? @
RunTest
’’@ G
(
’’G H
$str
’’H ~
)
’’~ 
;’’ Ä
(
÷÷ 
new
÷÷ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_03
÷÷ <
(
÷÷< =
)
÷÷= >
)
÷÷> ?
.
÷÷? @
RunTest
÷÷@ G
(
÷÷G H
$str
÷÷H ~
)
÷÷~ 
;÷÷ Ä
(
◊◊ 
new
◊◊ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_04
◊◊ <
(
◊◊< =
)
◊◊= >
)
◊◊> ?
.
◊◊? @
RunTest
◊◊@ G
(
◊◊G H
$str
◊◊H ~
)
◊◊~ 
;◊◊ Ä
(
ÿÿ 
new
ÿÿ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_05
ÿÿ <
(
ÿÿ< =
)
ÿÿ= >
)
ÿÿ> ?
.
ÿÿ? @
RunTest
ÿÿ@ G
(
ÿÿG H
$str
ÿÿH ~
)
ÿÿ~ 
;ÿÿ Ä
(
ŸŸ 
new
ŸŸ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_06
ŸŸ <
(
ŸŸ< =
)
ŸŸ= >
)
ŸŸ> ?
.
ŸŸ? @
RunTest
ŸŸ@ G
(
ŸŸG H
$str
ŸŸH ~
)
ŸŸ~ 
;ŸŸ Ä
(
⁄⁄ 
new
⁄⁄ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_07
⁄⁄ <
(
⁄⁄< =
)
⁄⁄= >
)
⁄⁄> ?
.
⁄⁄? @
RunTest
⁄⁄@ G
(
⁄⁄G H
$str
⁄⁄H ~
)
⁄⁄~ 
;⁄⁄ Ä
(
€€ 
new
€€ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_08
€€ <
(
€€< =
)
€€= >
)
€€> ?
.
€€? @
RunTest
€€@ G
(
€€G H
$str
€€H ~
)
€€~ 
;€€ Ä
(
‹‹ 
new
‹‹ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_09
‹‹ <
(
‹‹< =
)
‹‹= >
)
‹‹> ?
.
‹‹? @
RunTest
‹‹@ G
(
‹‹G H
$str
‹‹H ~
)
‹‹~ 
;‹‹ Ä
(
›› 
new
›› B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_10
›› <
(
››< =
)
››= >
)
››> ?
.
››? @
RunTest
››@ G
(
››G H
$str
››H ~
)
››~ 
;›› Ä
(
ﬁﬁ 
new
ﬁﬁ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_11
ﬁﬁ <
(
ﬁﬁ< =
)
ﬁﬁ= >
)
ﬁﬁ> ?
.
ﬁﬁ? @
RunTest
ﬁﬁ@ G
(
ﬁﬁG H
$str
ﬁﬁH ~
)
ﬁﬁ~ 
;ﬁﬁ Ä
(
ﬂﬂ 
new
ﬂﬂ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_12
ﬂﬂ <
(
ﬂﬂ< =
)
ﬂﬂ= >
)
ﬂﬂ> ?
.
ﬂﬂ? @
RunTest
ﬂﬂ@ G
(
ﬂﬂG H
$str
ﬂﬂH ~
)
ﬂﬂ~ 
;ﬂﬂ Ä
(
‡‡ 
new
‡‡ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_13
‡‡ <
(
‡‡< =
)
‡‡= >
)
‡‡> ?
.
‡‡? @
RunTest
‡‡@ G
(
‡‡G H
$str
‡‡H ~
)
‡‡~ 
;‡‡ Ä
(
·· 
new
·· B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_14
·· <
(
··< =
)
··= >
)
··> ?
.
··? @
RunTest
··@ G
(
··G H
$str
··H ~
)
··~ 
;·· Ä
(
‚‚ 
new
‚‚ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_15
‚‚ <
(
‚‚< =
)
‚‚= >
)
‚‚> ?
.
‚‚? @
RunTest
‚‚@ G
(
‚‚G H
$str
‚‚H ~
)
‚‚~ 
;‚‚ Ä
(
„„ 
new
„„ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_16
„„ <
(
„„< =
)
„„= >
)
„„> ?
.
„„? @
RunTest
„„@ G
(
„„G H
$str
„„H ~
)
„„~ 
;„„ Ä
(
‰‰ 
new
‰‰ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_17
‰‰ <
(
‰‰< =
)
‰‰= >
)
‰‰> ?
.
‰‰? @
RunTest
‰‰@ G
(
‰‰G H
$str
‰‰H ~
)
‰‰~ 
;‰‰ Ä
(
ÂÂ 
new
ÂÂ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_21
ÂÂ <
(
ÂÂ< =
)
ÂÂ= >
)
ÂÂ> ?
.
ÂÂ? @
RunTest
ÂÂ@ G
(
ÂÂG H
$str
ÂÂH ~
)
ÂÂ~ 
;ÂÂ Ä
(
ÊÊ 
new
ÊÊ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_22a
ÊÊ =
(
ÊÊ= >
)
ÊÊ> ?
)
ÊÊ? @
.
ÊÊ@ A
RunTest
ÊÊA H
(
ÊÊH I
$strÊÊI Ä
)ÊÊÄ Å
;ÊÊÅ Ç
(
ÁÁ 
new
ÁÁ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_31
ÁÁ <
(
ÁÁ< =
)
ÁÁ= >
)
ÁÁ> ?
.
ÁÁ? @
RunTest
ÁÁ@ G
(
ÁÁG H
$str
ÁÁH ~
)
ÁÁ~ 
;ÁÁ Ä
(
ËË 
new
ËË B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_41
ËË <
(
ËË< =
)
ËË= >
)
ËË> ?
.
ËË? @
RunTest
ËË@ G
(
ËËG H
$str
ËËH ~
)
ËË~ 
;ËË Ä
(
ÈÈ 
new
ÈÈ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_42
ÈÈ <
(
ÈÈ< =
)
ÈÈ= >
)
ÈÈ> ?
.
ÈÈ? @
RunTest
ÈÈ@ G
(
ÈÈG H
$str
ÈÈH ~
)
ÈÈ~ 
;ÈÈ Ä
(
ÍÍ 
new
ÍÍ B
4CWE197_Numeric_Truncation_Error__int_File_to_byte_45
ÍÍ <
(
ÍÍ< =
)
ÍÍ= >
)
ÍÍ> ?
.
ÍÍ? @
RunTest
ÍÍ@ G
(
ÍÍG H
$str
ÍÍH ~
)
ÍÍ~ 
;ÍÍ Ä
(
ÎÎ 
new
ÎÎ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_51a
ÎÎ =
(
ÎÎ= >
)
ÎÎ> ?
)
ÎÎ? @
.
ÎÎ@ A
RunTest
ÎÎA H
(
ÎÎH I
$strÎÎI Ä
)ÎÎÄ Å
;ÎÎÅ Ç
(
ÏÏ 
new
ÏÏ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_52a
ÏÏ =
(
ÏÏ= >
)
ÏÏ> ?
)
ÏÏ? @
.
ÏÏ@ A
RunTest
ÏÏA H
(
ÏÏH I
$strÏÏI Ä
)ÏÏÄ Å
;ÏÏÅ Ç
(
ÌÌ 
new
ÌÌ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_53a
ÌÌ =
(
ÌÌ= >
)
ÌÌ> ?
)
ÌÌ? @
.
ÌÌ@ A
RunTest
ÌÌA H
(
ÌÌH I
$strÌÌI Ä
)ÌÌÄ Å
;ÌÌÅ Ç
(
ÓÓ 
new
ÓÓ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_54a
ÓÓ =
(
ÓÓ= >
)
ÓÓ> ?
)
ÓÓ? @
.
ÓÓ@ A
RunTest
ÓÓA H
(
ÓÓH I
$strÓÓI Ä
)ÓÓÄ Å
;ÓÓÅ Ç
(
ÔÔ 
new
ÔÔ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_61a
ÔÔ =
(
ÔÔ= >
)
ÔÔ> ?
)
ÔÔ? @
.
ÔÔ@ A
RunTest
ÔÔA H
(
ÔÔH I
$strÔÔI Ä
)ÔÔÄ Å
;ÔÔÅ Ç
(
 
new
 C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_66a
 =
(
= >
)
> ?
)
? @
.
@ A
RunTest
A H
(
H I
$strI Ä
)Ä Å
;Å Ç
(
ÒÒ 
new
ÒÒ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_67a
ÒÒ =
(
ÒÒ= >
)
ÒÒ> ?
)
ÒÒ? @
.
ÒÒ@ A
RunTest
ÒÒA H
(
ÒÒH I
$strÒÒI Ä
)ÒÒÄ Å
;ÒÒÅ Ç
(
ÚÚ 
new
ÚÚ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_68a
ÚÚ =
(
ÚÚ= >
)
ÚÚ> ?
)
ÚÚ? @
.
ÚÚ@ A
RunTest
ÚÚA H
(
ÚÚH I
$strÚÚI Ä
)ÚÚÄ Å
;ÚÚÅ Ç
(
ÛÛ 
new
ÛÛ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_71a
ÛÛ =
(
ÛÛ= >
)
ÛÛ> ?
)
ÛÛ? @
.
ÛÛ@ A
RunTest
ÛÛA H
(
ÛÛH I
$strÛÛI Ä
)ÛÛÄ Å
;ÛÛÅ Ç
(
ÙÙ 
new
ÙÙ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_72a
ÙÙ =
(
ÙÙ= >
)
ÙÙ> ?
)
ÙÙ? @
.
ÙÙ@ A
RunTest
ÙÙA H
(
ÙÙH I
$strÙÙI Ä
)ÙÙÄ Å
;ÙÙÅ Ç
(
ıı 
new
ıı C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_73a
ıı =
(
ıı= >
)
ıı> ?
)
ıı? @
.
ıı@ A
RunTest
ııA H
(
ııH I
$strııI Ä
)ııÄ Å
;ııÅ Ç
(
ˆˆ 
new
ˆˆ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_74a
ˆˆ =
(
ˆˆ= >
)
ˆˆ> ?
)
ˆˆ? @
.
ˆˆ@ A
RunTest
ˆˆA H
(
ˆˆH I
$strˆˆI Ä
)ˆˆÄ Å
;ˆˆÅ Ç
(
˜˜ 
new
˜˜ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_75a
˜˜ =
(
˜˜= >
)
˜˜> ?
)
˜˜? @
.
˜˜@ A
RunTest
˜˜A H
(
˜˜H I
$str˜˜I Ä
)˜˜Ä Å
;˜˜Å Ç
(
¯¯ 
new
¯¯ C
5CWE197_Numeric_Truncation_Error__int_File_to_byte_81a
¯¯ =
(
¯¯= >
)
¯¯> ?
)
¯¯? @
.
¯¯@ A
RunTest
¯¯A H
(
¯¯H I
$str¯¯I Ä
)¯¯Ä Å
;¯¯Å Ç
(
˘˘ 
new
˘˘ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_01
˘˘ =
(
˘˘= >
)
˘˘> ?
)
˘˘? @
.
˘˘@ A
RunTest
˘˘A H
(
˘˘H I
$str˘˘I Ä
)˘˘Ä Å
;˘˘Å Ç
(
˙˙ 
new
˙˙ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_02
˙˙ =
(
˙˙= >
)
˙˙> ?
)
˙˙? @
.
˙˙@ A
RunTest
˙˙A H
(
˙˙H I
$str˙˙I Ä
)˙˙Ä Å
;˙˙Å Ç
(
˚˚ 
new
˚˚ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_03
˚˚ =
(
˚˚= >
)
˚˚> ?
)
˚˚? @
.
˚˚@ A
RunTest
˚˚A H
(
˚˚H I
$str˚˚I Ä
)˚˚Ä Å
;˚˚Å Ç
(
¸¸ 
new
¸¸ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_04
¸¸ =
(
¸¸= >
)
¸¸> ?
)
¸¸? @
.
¸¸@ A
RunTest
¸¸A H
(
¸¸H I
$str¸¸I Ä
)¸¸Ä Å
;¸¸Å Ç
(
˝˝ 
new
˝˝ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_05
˝˝ =
(
˝˝= >
)
˝˝> ?
)
˝˝? @
.
˝˝@ A
RunTest
˝˝A H
(
˝˝H I
$str˝˝I Ä
)˝˝Ä Å
;˝˝Å Ç
(
˛˛ 
new
˛˛ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_06
˛˛ =
(
˛˛= >
)
˛˛> ?
)
˛˛? @
.
˛˛@ A
RunTest
˛˛A H
(
˛˛H I
$str˛˛I Ä
)˛˛Ä Å
;˛˛Å Ç
(
ˇˇ 
new
ˇˇ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_07
ˇˇ =
(
ˇˇ= >
)
ˇˇ> ?
)
ˇˇ? @
.
ˇˇ@ A
RunTest
ˇˇA H
(
ˇˇH I
$strˇˇI Ä
)ˇˇÄ Å
;ˇˇÅ Ç
(
ÄÄ 
new
ÄÄ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_08
ÄÄ =
(
ÄÄ= >
)
ÄÄ> ?
)
ÄÄ? @
.
ÄÄ@ A
RunTest
ÄÄA H
(
ÄÄH I
$strÄÄI Ä
)ÄÄÄ Å
;ÄÄÅ Ç
(
ÅÅ 
new
ÅÅ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_09
ÅÅ =
(
ÅÅ= >
)
ÅÅ> ?
)
ÅÅ? @
.
ÅÅ@ A
RunTest
ÅÅA H
(
ÅÅH I
$strÅÅI Ä
)ÅÅÄ Å
;ÅÅÅ Ç
(
ÇÇ 
new
ÇÇ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_10
ÇÇ =
(
ÇÇ= >
)
ÇÇ> ?
)
ÇÇ? @
.
ÇÇ@ A
RunTest
ÇÇA H
(
ÇÇH I
$strÇÇI Ä
)ÇÇÄ Å
;ÇÇÅ Ç
(
ÉÉ 
new
ÉÉ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_11
ÉÉ =
(
ÉÉ= >
)
ÉÉ> ?
)
ÉÉ? @
.
ÉÉ@ A
RunTest
ÉÉA H
(
ÉÉH I
$strÉÉI Ä
)ÉÉÄ Å
;ÉÉÅ Ç
(
ÑÑ 
new
ÑÑ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_12
ÑÑ =
(
ÑÑ= >
)
ÑÑ> ?
)
ÑÑ? @
.
ÑÑ@ A
RunTest
ÑÑA H
(
ÑÑH I
$strÑÑI Ä
)ÑÑÄ Å
;ÑÑÅ Ç
(
ÖÖ 
new
ÖÖ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_13
ÖÖ =
(
ÖÖ= >
)
ÖÖ> ?
)
ÖÖ? @
.
ÖÖ@ A
RunTest
ÖÖA H
(
ÖÖH I
$strÖÖI Ä
)ÖÖÄ Å
;ÖÖÅ Ç
(
ÜÜ 
new
ÜÜ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_14
ÜÜ =
(
ÜÜ= >
)
ÜÜ> ?
)
ÜÜ? @
.
ÜÜ@ A
RunTest
ÜÜA H
(
ÜÜH I
$strÜÜI Ä
)ÜÜÄ Å
;ÜÜÅ Ç
(
áá 
new
áá C
5CWE197_Numeric_Truncation_Error__int_File_to_short_15
áá =
(
áá= >
)
áá> ?
)
áá? @
.
áá@ A
RunTest
ááA H
(
ááH I
$strááI Ä
)ááÄ Å
;ááÅ Ç
(
àà 
new
àà C
5CWE197_Numeric_Truncation_Error__int_File_to_short_16
àà =
(
àà= >
)
àà> ?
)
àà? @
.
àà@ A
RunTest
ààA H
(
ààH I
$strààI Ä
)ààÄ Å
;ààÅ Ç
(
ââ 
new
ââ C
5CWE197_Numeric_Truncation_Error__int_File_to_short_17
ââ =
(
ââ= >
)
ââ> ?
)
ââ? @
.
ââ@ A
RunTest
ââA H
(
ââH I
$strââI Ä
)ââÄ Å
;ââÅ Ç
(
ää 
new
ää C
5CWE197_Numeric_Truncation_Error__int_File_to_short_21
ää =
(
ää= >
)
ää> ?
)
ää? @
.
ää@ A
RunTest
ääA H
(
ääH I
$strääI Ä
)ääÄ Å
;ääÅ Ç
(
ãã 
new
ãã D
6CWE197_Numeric_Truncation_Error__int_File_to_short_22a
ãã >
(
ãã> ?
)
ãã? @
)
ãã@ A
.
ããA B
RunTest
ããB I
(
ããI J
$strããJ Ç
)ããÇ É
;ããÉ Ñ
(
åå 
new
åå C
5CWE197_Numeric_Truncation_Error__int_File_to_short_31
åå =
(
åå= >
)
åå> ?
)
åå? @
.
åå@ A
RunTest
ååA H
(
ååH I
$strååI Ä
)ååÄ Å
;ååÅ Ç
(
çç 
new
çç C
5CWE197_Numeric_Truncation_Error__int_File_to_short_41
çç =
(
çç= >
)
çç> ?
)
çç? @
.
çç@ A
RunTest
ççA H
(
ççH I
$strççI Ä
)ççÄ Å
;ççÅ Ç
(
éé 
new
éé C
5CWE197_Numeric_Truncation_Error__int_File_to_short_42
éé =
(
éé= >
)
éé> ?
)
éé? @
.
éé@ A
RunTest
ééA H
(
ééH I
$strééI Ä
)ééÄ Å
;ééÅ Ç
(
èè 
new
èè C
5CWE197_Numeric_Truncation_Error__int_File_to_short_45
èè =
(
èè= >
)
èè> ?
)
èè? @
.
èè@ A
RunTest
èèA H
(
èèH I
$strèèI Ä
)èèÄ Å
;èèÅ Ç
(
êê 
new
êê D
6CWE197_Numeric_Truncation_Error__int_File_to_short_51a
êê >
(
êê> ?
)
êê? @
)
êê@ A
.
êêA B
RunTest
êêB I
(
êêI J
$strêêJ Ç
)êêÇ É
;êêÉ Ñ
(
ëë 
new
ëë D
6CWE197_Numeric_Truncation_Error__int_File_to_short_52a
ëë >
(
ëë> ?
)
ëë? @
)
ëë@ A
.
ëëA B
RunTest
ëëB I
(
ëëI J
$strëëJ Ç
)ëëÇ É
;ëëÉ Ñ
(
íí 
new
íí D
6CWE197_Numeric_Truncation_Error__int_File_to_short_53a
íí >
(
íí> ?
)
íí? @
)
íí@ A
.
ííA B
RunTest
ííB I
(
ííI J
$strííJ Ç
)ííÇ É
;ííÉ Ñ
(
ìì 
new
ìì D
6CWE197_Numeric_Truncation_Error__int_File_to_short_54a
ìì >
(
ìì> ?
)
ìì? @
)
ìì@ A
.
ììA B
RunTest
ììB I
(
ììI J
$strììJ Ç
)ììÇ É
;ììÉ Ñ
(
îî 
new
îî D
6CWE197_Numeric_Truncation_Error__int_File_to_short_61a
îî >
(
îî> ?
)
îî? @
)
îî@ A
.
îîA B
RunTest
îîB I
(
îîI J
$strîîJ Ç
)îîÇ É
;îîÉ Ñ
(
ïï 
new
ïï D
6CWE197_Numeric_Truncation_Error__int_File_to_short_66a
ïï >
(
ïï> ?
)
ïï? @
)
ïï@ A
.
ïïA B
RunTest
ïïB I
(
ïïI J
$strïïJ Ç
)ïïÇ É
;ïïÉ Ñ
(
ññ 
new
ññ D
6CWE197_Numeric_Truncation_Error__int_File_to_short_67a
ññ >
(
ññ> ?
)
ññ? @
)
ññ@ A
.
ññA B
RunTest
ññB I
(
ññI J
$strññJ Ç
)ññÇ É
;ññÉ Ñ
(
óó 
new
óó D
6CWE197_Numeric_Truncation_Error__int_File_to_short_68a
óó >
(
óó> ?
)
óó? @
)
óó@ A
.
óóA B
RunTest
óóB I
(
óóI J
$stróóJ Ç
)óóÇ É
;óóÉ Ñ
(
òò 
new
òò D
6CWE197_Numeric_Truncation_Error__int_File_to_short_71a
òò >
(
òò> ?
)
òò? @
)
òò@ A
.
òòA B
RunTest
òòB I
(
òòI J
$stròòJ Ç
)òòÇ É
;òòÉ Ñ
(
ôô 
new
ôô D
6CWE197_Numeric_Truncation_Error__int_File_to_short_72a
ôô >
(
ôô> ?
)
ôô? @
)
ôô@ A
.
ôôA B
RunTest
ôôB I
(
ôôI J
$strôôJ Ç
)ôôÇ É
;ôôÉ Ñ
(
öö 
new
öö D
6CWE197_Numeric_Truncation_Error__int_File_to_short_73a
öö >
(
öö> ?
)
öö? @
)
öö@ A
.
ööA B
RunTest
ööB I
(
ööI J
$strööJ Ç
)ööÇ É
;ööÉ Ñ
(
õõ 
new
õõ D
6CWE197_Numeric_Truncation_Error__int_File_to_short_74a
õõ >
(
õõ> ?
)
õõ? @
)
õõ@ A
.
õõA B
RunTest
õõB I
(
õõI J
$strõõJ Ç
)õõÇ É
;õõÉ Ñ
(
úú 
new
úú D
6CWE197_Numeric_Truncation_Error__int_File_to_short_75a
úú >
(
úú> ?
)
úú? @
)
úú@ A
.
úúA B
RunTest
úúB I
(
úúI J
$strúúJ Ç
)úúÇ É
;úúÉ Ñ
(
ùù 
new
ùù D
6CWE197_Numeric_Truncation_Error__int_File_to_short_81a
ùù >
(
ùù> ?
)
ùù? @
)
ùù@ A
.
ùùA B
RunTest
ùùB I
(
ùùI J
$strùùJ Ç
)ùùÇ É
;ùùÉ Ñ
(
ûû 
new
ûû C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_01
ûû =
(
ûû= >
)
ûû> ?
)
ûû? @
.
ûû@ A
RunTest
ûûA H
(
ûûH I
$strûûI Ä
)ûûÄ Å
;ûûÅ Ç
(
üü 
new
üü C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_02
üü =
(
üü= >
)
üü> ?
)
üü? @
.
üü@ A
RunTest
üüA H
(
üüH I
$strüüI Ä
)üüÄ Å
;üüÅ Ç
(
†† 
new
†† C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_03
†† =
(
††= >
)
††> ?
)
††? @
.
††@ A
RunTest
††A H
(
††H I
$str††I Ä
)††Ä Å
;††Å Ç
(
°° 
new
°° C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_04
°° =
(
°°= >
)
°°> ?
)
°°? @
.
°°@ A
RunTest
°°A H
(
°°H I
$str°°I Ä
)°°Ä Å
;°°Å Ç
(
¢¢ 
new
¢¢ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_05
¢¢ =
(
¢¢= >
)
¢¢> ?
)
¢¢? @
.
¢¢@ A
RunTest
¢¢A H
(
¢¢H I
$str¢¢I Ä
)¢¢Ä Å
;¢¢Å Ç
(
££ 
new
££ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_06
££ =
(
££= >
)
££> ?
)
££? @
.
££@ A
RunTest
££A H
(
££H I
$str££I Ä
)££Ä Å
;££Å Ç
(
§§ 
new
§§ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_07
§§ =
(
§§= >
)
§§> ?
)
§§? @
.
§§@ A
RunTest
§§A H
(
§§H I
$str§§I Ä
)§§Ä Å
;§§Å Ç
(
•• 
new
•• C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_08
•• =
(
••= >
)
••> ?
)
••? @
.
••@ A
RunTest
••A H
(
••H I
$str••I Ä
)••Ä Å
;••Å Ç
(
¶¶ 
new
¶¶ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_09
¶¶ =
(
¶¶= >
)
¶¶> ?
)
¶¶? @
.
¶¶@ A
RunTest
¶¶A H
(
¶¶H I
$str¶¶I Ä
)¶¶Ä Å
;¶¶Å Ç
(
ßß 
new
ßß C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_10
ßß =
(
ßß= >
)
ßß> ?
)
ßß? @
.
ßß@ A
RunTest
ßßA H
(
ßßH I
$strßßI Ä
)ßßÄ Å
;ßßÅ Ç
(
®® 
new
®® C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_11
®® =
(
®®= >
)
®®> ?
)
®®? @
.
®®@ A
RunTest
®®A H
(
®®H I
$str®®I Ä
)®®Ä Å
;®®Å Ç
(
©© 
new
©© C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_12
©© =
(
©©= >
)
©©> ?
)
©©? @
.
©©@ A
RunTest
©©A H
(
©©H I
$str©©I Ä
)©©Ä Å
;©©Å Ç
(
™™ 
new
™™ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_13
™™ =
(
™™= >
)
™™> ?
)
™™? @
.
™™@ A
RunTest
™™A H
(
™™H I
$str™™I Ä
)™™Ä Å
;™™Å Ç
(
´´ 
new
´´ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_14
´´ =
(
´´= >
)
´´> ?
)
´´? @
.
´´@ A
RunTest
´´A H
(
´´H I
$str´´I Ä
)´´Ä Å
;´´Å Ç
(
¨¨ 
new
¨¨ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_15
¨¨ =
(
¨¨= >
)
¨¨> ?
)
¨¨? @
.
¨¨@ A
RunTest
¨¨A H
(
¨¨H I
$str¨¨I Ä
)¨¨Ä Å
;¨¨Å Ç
(
≠≠ 
new
≠≠ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_16
≠≠ =
(
≠≠= >
)
≠≠> ?
)
≠≠? @
.
≠≠@ A
RunTest
≠≠A H
(
≠≠H I
$str≠≠I Ä
)≠≠Ä Å
;≠≠Å Ç
(
ÆÆ 
new
ÆÆ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_17
ÆÆ =
(
ÆÆ= >
)
ÆÆ> ?
)
ÆÆ? @
.
ÆÆ@ A
RunTest
ÆÆA H
(
ÆÆH I
$strÆÆI Ä
)ÆÆÄ Å
;ÆÆÅ Ç
(
ØØ 
new
ØØ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_21
ØØ =
(
ØØ= >
)
ØØ> ?
)
ØØ? @
.
ØØ@ A
RunTest
ØØA H
(
ØØH I
$strØØI Ä
)ØØÄ Å
;ØØÅ Ç
(
∞∞ 
new
∞∞ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_22a
∞∞ >
(
∞∞> ?
)
∞∞? @
)
∞∞@ A
.
∞∞A B
RunTest
∞∞B I
(
∞∞I J
$str∞∞J Ç
)∞∞Ç É
;∞∞É Ñ
(
±± 
new
±± C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_31
±± =
(
±±= >
)
±±> ?
)
±±? @
.
±±@ A
RunTest
±±A H
(
±±H I
$str±±I Ä
)±±Ä Å
;±±Å Ç
(
≤≤ 
new
≤≤ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_41
≤≤ =
(
≤≤= >
)
≤≤> ?
)
≤≤? @
.
≤≤@ A
RunTest
≤≤A H
(
≤≤H I
$str≤≤I Ä
)≤≤Ä Å
;≤≤Å Ç
(
≥≥ 
new
≥≥ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_42
≥≥ =
(
≥≥= >
)
≥≥> ?
)
≥≥? @
.
≥≥@ A
RunTest
≥≥A H
(
≥≥H I
$str≥≥I Ä
)≥≥Ä Å
;≥≥Å Ç
(
¥¥ 
new
¥¥ C
5CWE197_Numeric_Truncation_Error__int_large_to_byte_45
¥¥ =
(
¥¥= >
)
¥¥> ?
)
¥¥? @
.
¥¥@ A
RunTest
¥¥A H
(
¥¥H I
$str¥¥I Ä
)¥¥Ä Å
;¥¥Å Ç
(
µµ 
new
µµ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_51a
µµ >
(
µµ> ?
)
µµ? @
)
µµ@ A
.
µµA B
RunTest
µµB I
(
µµI J
$strµµJ Ç
)µµÇ É
;µµÉ Ñ
(
∂∂ 
new
∂∂ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_52a
∂∂ >
(
∂∂> ?
)
∂∂? @
)
∂∂@ A
.
∂∂A B
RunTest
∂∂B I
(
∂∂I J
$str∂∂J Ç
)∂∂Ç É
;∂∂É Ñ
(
∑∑ 
new
∑∑ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_53a
∑∑ >
(
∑∑> ?
)
∑∑? @
)
∑∑@ A
.
∑∑A B
RunTest
∑∑B I
(
∑∑I J
$str∑∑J Ç
)∑∑Ç É
;∑∑É Ñ
(
∏∏ 
new
∏∏ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_54a
∏∏ >
(
∏∏> ?
)
∏∏? @
)
∏∏@ A
.
∏∏A B
RunTest
∏∏B I
(
∏∏I J
$str∏∏J Ç
)∏∏Ç É
;∏∏É Ñ
(
ππ 
new
ππ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_61a
ππ >
(
ππ> ?
)
ππ? @
)
ππ@ A
.
ππA B
RunTest
ππB I
(
ππI J
$strππJ Ç
)ππÇ É
;ππÉ Ñ
(
∫∫ 
new
∫∫ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_66a
∫∫ >
(
∫∫> ?
)
∫∫? @
)
∫∫@ A
.
∫∫A B
RunTest
∫∫B I
(
∫∫I J
$str∫∫J Ç
)∫∫Ç É
;∫∫É Ñ
(
ªª 
new
ªª D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_67a
ªª >
(
ªª> ?
)
ªª? @
)
ªª@ A
.
ªªA B
RunTest
ªªB I
(
ªªI J
$strªªJ Ç
)ªªÇ É
;ªªÉ Ñ
(
ºº 
new
ºº D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_68a
ºº >
(
ºº> ?
)
ºº? @
)
ºº@ A
.
ººA B
RunTest
ººB I
(
ººI J
$strººJ Ç
)ººÇ É
;ººÉ Ñ
(
ΩΩ 
new
ΩΩ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_71a
ΩΩ >
(
ΩΩ> ?
)
ΩΩ? @
)
ΩΩ@ A
.
ΩΩA B
RunTest
ΩΩB I
(
ΩΩI J
$strΩΩJ Ç
)ΩΩÇ É
;ΩΩÉ Ñ
(
ææ 
new
ææ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_72a
ææ >
(
ææ> ?
)
ææ? @
)
ææ@ A
.
ææA B
RunTest
ææB I
(
ææI J
$strææJ Ç
)ææÇ É
;ææÉ Ñ
(
øø 
new
øø D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_73a
øø >
(
øø> ?
)
øø? @
)
øø@ A
.
øøA B
RunTest
øøB I
(
øøI J
$strøøJ Ç
)øøÇ É
;øøÉ Ñ
(
¿¿ 
new
¿¿ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_74a
¿¿ >
(
¿¿> ?
)
¿¿? @
)
¿¿@ A
.
¿¿A B
RunTest
¿¿B I
(
¿¿I J
$str¿¿J Ç
)¿¿Ç É
;¿¿É Ñ
(
¡¡ 
new
¡¡ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_75a
¡¡ >
(
¡¡> ?
)
¡¡? @
)
¡¡@ A
.
¡¡A B
RunTest
¡¡B I
(
¡¡I J
$str¡¡J Ç
)¡¡Ç É
;¡¡É Ñ
(
¬¬ 
new
¬¬ D
6CWE197_Numeric_Truncation_Error__int_large_to_byte_81a
¬¬ >
(
¬¬> ?
)
¬¬? @
)
¬¬@ A
.
¬¬A B
RunTest
¬¬B I
(
¬¬I J
$str¬¬J Ç
)¬¬Ç É
;¬¬É Ñ
(
√√ 
new
√√ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_01
√√ >
(
√√> ?
)
√√? @
)
√√@ A
.
√√A B
RunTest
√√B I
(
√√I J
$str√√J Ç
)√√Ç É
;√√É Ñ
(
ƒƒ 
new
ƒƒ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_02
ƒƒ >
(
ƒƒ> ?
)
ƒƒ? @
)
ƒƒ@ A
.
ƒƒA B
RunTest
ƒƒB I
(
ƒƒI J
$strƒƒJ Ç
)ƒƒÇ É
;ƒƒÉ Ñ
(
≈≈ 
new
≈≈ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_03
≈≈ >
(
≈≈> ?
)
≈≈? @
)
≈≈@ A
.
≈≈A B
RunTest
≈≈B I
(
≈≈I J
$str≈≈J Ç
)≈≈Ç É
;≈≈É Ñ
(
∆∆ 
new
∆∆ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_04
∆∆ >
(
∆∆> ?
)
∆∆? @
)
∆∆@ A
.
∆∆A B
RunTest
∆∆B I
(
∆∆I J
$str∆∆J Ç
)∆∆Ç É
;∆∆É Ñ
(
«« 
new
«« D
6CWE197_Numeric_Truncation_Error__int_large_to_short_05
«« >
(
««> ?
)
««? @
)
««@ A
.
««A B
RunTest
««B I
(
««I J
$str««J Ç
)««Ç É
;««É Ñ
(
»» 
new
»» D
6CWE197_Numeric_Truncation_Error__int_large_to_short_06
»» >
(
»»> ?
)
»»? @
)
»»@ A
.
»»A B
RunTest
»»B I
(
»»I J
$str»»J Ç
)»»Ç É
;»»É Ñ
(
…… 
new
…… D
6CWE197_Numeric_Truncation_Error__int_large_to_short_07
…… >
(
……> ?
)
……? @
)
……@ A
.
……A B
RunTest
……B I
(
……I J
$str……J Ç
)……Ç É
;……É Ñ
(
   
new
   D
6CWE197_Numeric_Truncation_Error__int_large_to_short_08
   >
(
  > ?
)
  ? @
)
  @ A
.
  A B
RunTest
  B I
(
  I J
$str  J Ç
)  Ç É
;  É Ñ
(
ÀÀ 
new
ÀÀ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_09
ÀÀ >
(
ÀÀ> ?
)
ÀÀ? @
)
ÀÀ@ A
.
ÀÀA B
RunTest
ÀÀB I
(
ÀÀI J
$strÀÀJ Ç
)ÀÀÇ É
;ÀÀÉ Ñ
(
ÃÃ 
new
ÃÃ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_10
ÃÃ >
(
ÃÃ> ?
)
ÃÃ? @
)
ÃÃ@ A
.
ÃÃA B
RunTest
ÃÃB I
(
ÃÃI J
$strÃÃJ Ç
)ÃÃÇ É
;ÃÃÉ Ñ
(
ÕÕ 
new
ÕÕ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_11
ÕÕ >
(
ÕÕ> ?
)
ÕÕ? @
)
ÕÕ@ A
.
ÕÕA B
RunTest
ÕÕB I
(
ÕÕI J
$strÕÕJ Ç
)ÕÕÇ É
;ÕÕÉ Ñ
(
ŒŒ 
new
ŒŒ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_12
ŒŒ >
(
ŒŒ> ?
)
ŒŒ? @
)
ŒŒ@ A
.
ŒŒA B
RunTest
ŒŒB I
(
ŒŒI J
$strŒŒJ Ç
)ŒŒÇ É
;ŒŒÉ Ñ
(
œœ 
new
œœ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_13
œœ >
(
œœ> ?
)
œœ? @
)
œœ@ A
.
œœA B
RunTest
œœB I
(
œœI J
$strœœJ Ç
)œœÇ É
;œœÉ Ñ
(
–– 
new
–– D
6CWE197_Numeric_Truncation_Error__int_large_to_short_14
–– >
(
––> ?
)
––? @
)
––@ A
.
––A B
RunTest
––B I
(
––I J
$str––J Ç
)––Ç É
;––É Ñ
(
—— 
new
—— D
6CWE197_Numeric_Truncation_Error__int_large_to_short_15
—— >
(
——> ?
)
——? @
)
——@ A
.
——A B
RunTest
——B I
(
——I J
$str——J Ç
)——Ç É
;——É Ñ
(
““ 
new
““ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_16
““ >
(
““> ?
)
““? @
)
““@ A
.
““A B
RunTest
““B I
(
““I J
$str““J Ç
)““Ç É
;““É Ñ
(
”” 
new
”” D
6CWE197_Numeric_Truncation_Error__int_large_to_short_17
”” >
(
””> ?
)
””? @
)
””@ A
.
””A B
RunTest
””B I
(
””I J
$str””J Ç
)””Ç É
;””É Ñ
(
‘‘ 
new
‘‘ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_21
‘‘ >
(
‘‘> ?
)
‘‘? @
)
‘‘@ A
.
‘‘A B
RunTest
‘‘B I
(
‘‘I J
$str‘‘J Ç
)‘‘Ç É
;‘‘É Ñ
(
’’ 
new
’’ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_22a
’’ ?
(
’’? @
)
’’@ A
)
’’A B
.
’’B C
RunTest
’’C J
(
’’J K
$str’’K Ñ
)’’Ñ Ö
;’’Ö Ü
(
÷÷ 
new
÷÷ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_31
÷÷ >
(
÷÷> ?
)
÷÷? @
)
÷÷@ A
.
÷÷A B
RunTest
÷÷B I
(
÷÷I J
$str÷÷J Ç
)÷÷Ç É
;÷÷É Ñ
(
◊◊ 
new
◊◊ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_41
◊◊ >
(
◊◊> ?
)
◊◊? @
)
◊◊@ A
.
◊◊A B
RunTest
◊◊B I
(
◊◊I J
$str◊◊J Ç
)◊◊Ç É
;◊◊É Ñ
(
ÿÿ 
new
ÿÿ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_42
ÿÿ >
(
ÿÿ> ?
)
ÿÿ? @
)
ÿÿ@ A
.
ÿÿA B
RunTest
ÿÿB I
(
ÿÿI J
$strÿÿJ Ç
)ÿÿÇ É
;ÿÿÉ Ñ
(
ŸŸ 
new
ŸŸ D
6CWE197_Numeric_Truncation_Error__int_large_to_short_45
ŸŸ >
(
ŸŸ> ?
)
ŸŸ? @
)
ŸŸ@ A
.
ŸŸA B
RunTest
ŸŸB I
(
ŸŸI J
$strŸŸJ Ç
)ŸŸÇ É
;ŸŸÉ Ñ
(
⁄⁄ 
new
⁄⁄ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_51a
⁄⁄ ?
(
⁄⁄? @
)
⁄⁄@ A
)
⁄⁄A B
.
⁄⁄B C
RunTest
⁄⁄C J
(
⁄⁄J K
$str⁄⁄K Ñ
)⁄⁄Ñ Ö
;⁄⁄Ö Ü
(
€€ 
new
€€ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_52a
€€ ?
(
€€? @
)
€€@ A
)
€€A B
.
€€B C
RunTest
€€C J
(
€€J K
$str€€K Ñ
)€€Ñ Ö
;€€Ö Ü
(
‹‹ 
new
‹‹ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_53a
‹‹ ?
(
‹‹? @
)
‹‹@ A
)
‹‹A B
.
‹‹B C
RunTest
‹‹C J
(
‹‹J K
$str‹‹K Ñ
)‹‹Ñ Ö
;‹‹Ö Ü
(
›› 
new
›› E
7CWE197_Numeric_Truncation_Error__int_large_to_short_54a
›› ?
(
››? @
)
››@ A
)
››A B
.
››B C
RunTest
››C J
(
››J K
$str››K Ñ
)››Ñ Ö
;››Ö Ü
(
ﬁﬁ 
new
ﬁﬁ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_61a
ﬁﬁ ?
(
ﬁﬁ? @
)
ﬁﬁ@ A
)
ﬁﬁA B
.
ﬁﬁB C
RunTest
ﬁﬁC J
(
ﬁﬁJ K
$strﬁﬁK Ñ
)ﬁﬁÑ Ö
;ﬁﬁÖ Ü
(
ﬂﬂ 
new
ﬂﬂ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_66a
ﬂﬂ ?
(
ﬂﬂ? @
)
ﬂﬂ@ A
)
ﬂﬂA B
.
ﬂﬂB C
RunTest
ﬂﬂC J
(
ﬂﬂJ K
$strﬂﬂK Ñ
)ﬂﬂÑ Ö
;ﬂﬂÖ Ü
(
‡‡ 
new
‡‡ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_67a
‡‡ ?
(
‡‡? @
)
‡‡@ A
)
‡‡A B
.
‡‡B C
RunTest
‡‡C J
(
‡‡J K
$str‡‡K Ñ
)‡‡Ñ Ö
;‡‡Ö Ü
(
·· 
new
·· E
7CWE197_Numeric_Truncation_Error__int_large_to_short_68a
·· ?
(
··? @
)
··@ A
)
··A B
.
··B C
RunTest
··C J
(
··J K
$str··K Ñ
)··Ñ Ö
;··Ö Ü
(
‚‚ 
new
‚‚ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_71a
‚‚ ?
(
‚‚? @
)
‚‚@ A
)
‚‚A B
.
‚‚B C
RunTest
‚‚C J
(
‚‚J K
$str‚‚K Ñ
)‚‚Ñ Ö
;‚‚Ö Ü
(
„„ 
new
„„ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_72a
„„ ?
(
„„? @
)
„„@ A
)
„„A B
.
„„B C
RunTest
„„C J
(
„„J K
$str„„K Ñ
)„„Ñ Ö
;„„Ö Ü
(
‰‰ 
new
‰‰ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_73a
‰‰ ?
(
‰‰? @
)
‰‰@ A
)
‰‰A B
.
‰‰B C
RunTest
‰‰C J
(
‰‰J K
$str‰‰K Ñ
)‰‰Ñ Ö
;‰‰Ö Ü
(
ÂÂ 
new
ÂÂ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_74a
ÂÂ ?
(
ÂÂ? @
)
ÂÂ@ A
)
ÂÂA B
.
ÂÂB C
RunTest
ÂÂC J
(
ÂÂJ K
$strÂÂK Ñ
)ÂÂÑ Ö
;ÂÂÖ Ü
(
ÊÊ 
new
ÊÊ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_75a
ÊÊ ?
(
ÊÊ? @
)
ÊÊ@ A
)
ÊÊA B
.
ÊÊB C
RunTest
ÊÊC J
(
ÊÊJ K
$strÊÊK Ñ
)ÊÊÑ Ö
;ÊÊÖ Ü
(
ÁÁ 
new
ÁÁ E
7CWE197_Numeric_Truncation_Error__int_large_to_short_81a
ÁÁ ?
(
ÁÁ? @
)
ÁÁ@ A
)
ÁÁA B
.
ÁÁB C
RunTest
ÁÁC J
(
ÁÁJ K
$strÁÁK Ñ
)ÁÁÑ Ö
;ÁÁÖ Ü
(
ËË 
new
ËË H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_01
ËË B
(
ËËB C
)
ËËC D
)
ËËD E
.
ËËE F
RunTest
ËËF M
(
ËËM N
$strËËN ä
)ËËä ã
;ËËã å
(
ÈÈ 
new
ÈÈ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_02
ÈÈ B
(
ÈÈB C
)
ÈÈC D
)
ÈÈD E
.
ÈÈE F
RunTest
ÈÈF M
(
ÈÈM N
$strÈÈN ä
)ÈÈä ã
;ÈÈã å
(
ÍÍ 
new
ÍÍ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_03
ÍÍ B
(
ÍÍB C
)
ÍÍC D
)
ÍÍD E
.
ÍÍE F
RunTest
ÍÍF M
(
ÍÍM N
$strÍÍN ä
)ÍÍä ã
;ÍÍã å
(
ÎÎ 
new
ÎÎ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_04
ÎÎ B
(
ÎÎB C
)
ÎÎC D
)
ÎÎD E
.
ÎÎE F
RunTest
ÎÎF M
(
ÎÎM N
$strÎÎN ä
)ÎÎä ã
;ÎÎã å
(
ÏÏ 
new
ÏÏ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_05
ÏÏ B
(
ÏÏB C
)
ÏÏC D
)
ÏÏD E
.
ÏÏE F
RunTest
ÏÏF M
(
ÏÏM N
$strÏÏN ä
)ÏÏä ã
;ÏÏã å
(
ÌÌ 
new
ÌÌ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_06
ÌÌ B
(
ÌÌB C
)
ÌÌC D
)
ÌÌD E
.
ÌÌE F
RunTest
ÌÌF M
(
ÌÌM N
$strÌÌN ä
)ÌÌä ã
;ÌÌã å
(
ÓÓ 
new
ÓÓ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_07
ÓÓ B
(
ÓÓB C
)
ÓÓC D
)
ÓÓD E
.
ÓÓE F
RunTest
ÓÓF M
(
ÓÓM N
$strÓÓN ä
)ÓÓä ã
;ÓÓã å
(
ÔÔ 
new
ÔÔ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_08
ÔÔ B
(
ÔÔB C
)
ÔÔC D
)
ÔÔD E
.
ÔÔE F
RunTest
ÔÔF M
(
ÔÔM N
$strÔÔN ä
)ÔÔä ã
;ÔÔã å
(
 
new
 H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_09
 B
(
B C
)
C D
)
D E
.
E F
RunTest
F M
(
M N
$strN ä
)ä ã
;ã å
(
ÒÒ 
new
ÒÒ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_10
ÒÒ B
(
ÒÒB C
)
ÒÒC D
)
ÒÒD E
.
ÒÒE F
RunTest
ÒÒF M
(
ÒÒM N
$strÒÒN ä
)ÒÒä ã
;ÒÒã å
(
ÚÚ 
new
ÚÚ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_11
ÚÚ B
(
ÚÚB C
)
ÚÚC D
)
ÚÚD E
.
ÚÚE F
RunTest
ÚÚF M
(
ÚÚM N
$strÚÚN ä
)ÚÚä ã
;ÚÚã å
(
ÛÛ 
new
ÛÛ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_12
ÛÛ B
(
ÛÛB C
)
ÛÛC D
)
ÛÛD E
.
ÛÛE F
RunTest
ÛÛF M
(
ÛÛM N
$strÛÛN ä
)ÛÛä ã
;ÛÛã å
(
ÙÙ 
new
ÙÙ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_13
ÙÙ B
(
ÙÙB C
)
ÙÙC D
)
ÙÙD E
.
ÙÙE F
RunTest
ÙÙF M
(
ÙÙM N
$strÙÙN ä
)ÙÙä ã
;ÙÙã å
(
ıı 
new
ıı H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_14
ıı B
(
ııB C
)
ııC D
)
ııD E
.
ııE F
RunTest
ııF M
(
ııM N
$strııN ä
)ııä ã
;ııã å
(
ˆˆ 
new
ˆˆ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_15
ˆˆ B
(
ˆˆB C
)
ˆˆC D
)
ˆˆD E
.
ˆˆE F
RunTest
ˆˆF M
(
ˆˆM N
$strˆˆN ä
)ˆˆä ã
;ˆˆã å
(
˜˜ 
new
˜˜ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_16
˜˜ B
(
˜˜B C
)
˜˜C D
)
˜˜D E
.
˜˜E F
RunTest
˜˜F M
(
˜˜M N
$str˜˜N ä
)˜˜ä ã
;˜˜ã å
(
¯¯ 
new
¯¯ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_17
¯¯ B
(
¯¯B C
)
¯¯C D
)
¯¯D E
.
¯¯E F
RunTest
¯¯F M
(
¯¯M N
$str¯¯N ä
)¯¯ä ã
;¯¯ã å
(
˘˘ 
new
˘˘ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_21
˘˘ B
(
˘˘B C
)
˘˘C D
)
˘˘D E
.
˘˘E F
RunTest
˘˘F M
(
˘˘M N
$str˘˘N ä
)˘˘ä ã
;˘˘ã å
(
˙˙ 
new
˙˙ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_22a
˙˙ C
(
˙˙C D
)
˙˙D E
)
˙˙E F
.
˙˙F G
RunTest
˙˙G N
(
˙˙N O
$str˙˙O å
)˙˙å ç
;˙˙ç é
(
˚˚ 
new
˚˚ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_31
˚˚ B
(
˚˚B C
)
˚˚C D
)
˚˚D E
.
˚˚E F
RunTest
˚˚F M
(
˚˚M N
$str˚˚N ä
)˚˚ä ã
;˚˚ã å
(
¸¸ 
new
¸¸ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_41
¸¸ B
(
¸¸B C
)
¸¸C D
)
¸¸D E
.
¸¸E F
RunTest
¸¸F M
(
¸¸M N
$str¸¸N ä
)¸¸ä ã
;¸¸ã å
(
˝˝ 
new
˝˝ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_42
˝˝ B
(
˝˝B C
)
˝˝C D
)
˝˝D E
.
˝˝E F
RunTest
˝˝F M
(
˝˝M N
$str˝˝N ä
)˝˝ä ã
;˝˝ã å
(
˛˛ 
new
˛˛ H
:CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_45
˛˛ B
(
˛˛B C
)
˛˛C D
)
˛˛D E
.
˛˛E F
RunTest
˛˛F M
(
˛˛M N
$str˛˛N ä
)˛˛ä ã
;˛˛ã å
(
ˇˇ 
new
ˇˇ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_51a
ˇˇ C
(
ˇˇC D
)
ˇˇD E
)
ˇˇE F
.
ˇˇF G
RunTest
ˇˇG N
(
ˇˇN O
$strˇˇO å
)ˇˇå ç
;ˇˇç é
(
ÄÄ 
new
ÄÄ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_52a
ÄÄ C
(
ÄÄC D
)
ÄÄD E
)
ÄÄE F
.
ÄÄF G
RunTest
ÄÄG N
(
ÄÄN O
$strÄÄO å
)ÄÄå ç
;ÄÄç é
(
ÅÅ 
new
ÅÅ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_53a
ÅÅ C
(
ÅÅC D
)
ÅÅD E
)
ÅÅE F
.
ÅÅF G
RunTest
ÅÅG N
(
ÅÅN O
$strÅÅO å
)ÅÅå ç
;ÅÅç é
(
ÇÇ 
new
ÇÇ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_54a
ÇÇ C
(
ÇÇC D
)
ÇÇD E
)
ÇÇE F
.
ÇÇF G
RunTest
ÇÇG N
(
ÇÇN O
$strÇÇO å
)ÇÇå ç
;ÇÇç é
(
ÉÉ 
new
ÉÉ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_61a
ÉÉ C
(
ÉÉC D
)
ÉÉD E
)
ÉÉE F
.
ÉÉF G
RunTest
ÉÉG N
(
ÉÉN O
$strÉÉO å
)ÉÉå ç
;ÉÉç é
(
ÑÑ 
new
ÑÑ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_66a
ÑÑ C
(
ÑÑC D
)
ÑÑD E
)
ÑÑE F
.
ÑÑF G
RunTest
ÑÑG N
(
ÑÑN O
$strÑÑO å
)ÑÑå ç
;ÑÑç é
(
ÖÖ 
new
ÖÖ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_67a
ÖÖ C
(
ÖÖC D
)
ÖÖD E
)
ÖÖE F
.
ÖÖF G
RunTest
ÖÖG N
(
ÖÖN O
$strÖÖO å
)ÖÖå ç
;ÖÖç é
(
ÜÜ 
new
ÜÜ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_68a
ÜÜ C
(
ÜÜC D
)
ÜÜD E
)
ÜÜE F
.
ÜÜF G
RunTest
ÜÜG N
(
ÜÜN O
$strÜÜO å
)ÜÜå ç
;ÜÜç é
(
áá 
new
áá I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_71a
áá C
(
ááC D
)
ááD E
)
ááE F
.
ááF G
RunTest
ááG N
(
ááN O
$strááO å
)ááå ç
;ááç é
(
àà 
new
àà I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_72a
àà C
(
ààC D
)
ààD E
)
ààE F
.
ààF G
RunTest
ààG N
(
ààN O
$strààO å
)ààå ç
;ààç é
(
ââ 
new
ââ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_73a
ââ C
(
ââC D
)
ââD E
)
ââE F
.
ââF G
RunTest
ââG N
(
ââN O
$strââO å
)ââå ç
;ââç é
(
ää 
new
ää I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_74a
ää C
(
ääC D
)
ääD E
)
ääE F
.
ääF G
RunTest
ääG N
(
ääN O
$strääO å
)ääå ç
;ääç é
(
ãã 
new
ãã I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_75a
ãã C
(
ããC D
)
ããD E
)
ããE F
.
ããF G
RunTest
ããG N
(
ããN O
$strããO å
)ããå ç
;ããç é
(
åå 
new
åå I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_byte_81a
åå C
(
ååC D
)
ååD E
)
ååE F
.
ååF G
RunTest
ååG N
(
ååN O
$strååO å
)ååå ç
;ååç é
(
çç 
new
çç I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_01
çç C
(
ççC D
)
ççD E
)
ççE F
.
ççF G
RunTest
ççG N
(
ççN O
$strççO å
)ççå ç
;ççç é
(
éé 
new
éé I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_02
éé C
(
ééC D
)
ééD E
)
ééE F
.
ééF G
RunTest
ééG N
(
ééN O
$strééO å
)ééå ç
;ééç é
(
èè 
new
èè I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_03
èè C
(
èèC D
)
èèD E
)
èèE F
.
èèF G
RunTest
èèG N
(
èèN O
$strèèO å
)èèå ç
;èèç é
(
êê 
new
êê I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_04
êê C
(
êêC D
)
êêD E
)
êêE F
.
êêF G
RunTest
êêG N
(
êêN O
$strêêO å
)êêå ç
;êêç é
(
ëë 
new
ëë I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_05
ëë C
(
ëëC D
)
ëëD E
)
ëëE F
.
ëëF G
RunTest
ëëG N
(
ëëN O
$strëëO å
)ëëå ç
;ëëç é
(
íí 
new
íí I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_06
íí C
(
ííC D
)
ííD E
)
ííE F
.
ííF G
RunTest
ííG N
(
ííN O
$strííO å
)ííå ç
;ííç é
(
ìì 
new
ìì I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_07
ìì C
(
ììC D
)
ììD E
)
ììE F
.
ììF G
RunTest
ììG N
(
ììN O
$strììO å
)ììå ç
;ììç é
(
îî 
new
îî I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_08
îî C
(
îîC D
)
îîD E
)
îîE F
.
îîF G
RunTest
îîG N
(
îîN O
$strîîO å
)îîå ç
;îîç é
(
ïï 
new
ïï I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_09
ïï C
(
ïïC D
)
ïïD E
)
ïïE F
.
ïïF G
RunTest
ïïG N
(
ïïN O
$strïïO å
)ïïå ç
;ïïç é
(
ññ 
new
ññ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_10
ññ C
(
ññC D
)
ññD E
)
ññE F
.
ññF G
RunTest
ññG N
(
ññN O
$strññO å
)ññå ç
;ññç é
(
óó 
new
óó I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_11
óó C
(
óóC D
)
óóD E
)
óóE F
.
óóF G
RunTest
óóG N
(
óóN O
$stróóO å
)óóå ç
;óóç é
(
òò 
new
òò I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_12
òò C
(
òòC D
)
òòD E
)
òòE F
.
òòF G
RunTest
òòG N
(
òòN O
$stròòO å
)òòå ç
;òòç é
(
ôô 
new
ôô I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_13
ôô C
(
ôôC D
)
ôôD E
)
ôôE F
.
ôôF G
RunTest
ôôG N
(
ôôN O
$strôôO å
)ôôå ç
;ôôç é
(
öö 
new
öö I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_14
öö C
(
ööC D
)
ööD E
)
ööE F
.
ööF G
RunTest
ööG N
(
ööN O
$strööO å
)ööå ç
;ööç é
(
õõ 
new
õõ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_15
õõ C
(
õõC D
)
õõD E
)
õõE F
.
õõF G
RunTest
õõG N
(
õõN O
$strõõO å
)õõå ç
;õõç é
(
úú 
new
úú I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_16
úú C
(
úúC D
)
úúD E
)
úúE F
.
úúF G
RunTest
úúG N
(
úúN O
$strúúO å
)úúå ç
;úúç é
(
ùù 
new
ùù I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_17
ùù C
(
ùùC D
)
ùùD E
)
ùùE F
.
ùùF G
RunTest
ùùG N
(
ùùN O
$strùùO å
)ùùå ç
;ùùç é
(
ûû 
new
ûû I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_21
ûû C
(
ûûC D
)
ûûD E
)
ûûE F
.
ûûF G
RunTest
ûûG N
(
ûûN O
$strûûO å
)ûûå ç
;ûûç é
(
üü 
new
üü J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_22a
üü D
(
üüD E
)
üüE F
)
üüF G
.
üüG H
RunTest
üüH O
(
üüO P
$strüüP é
)üüé è
;üüè ê
(
†† 
new
†† I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_31
†† C
(
††C D
)
††D E
)
††E F
.
††F G
RunTest
††G N
(
††N O
$str††O å
)††å ç
;††ç é
(
°° 
new
°° I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_41
°° C
(
°°C D
)
°°D E
)
°°E F
.
°°F G
RunTest
°°G N
(
°°N O
$str°°O å
)°°å ç
;°°ç é
(
¢¢ 
new
¢¢ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_42
¢¢ C
(
¢¢C D
)
¢¢D E
)
¢¢E F
.
¢¢F G
RunTest
¢¢G N
(
¢¢N O
$str¢¢O å
)¢¢å ç
;¢¢ç é
(
££ 
new
££ I
;CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_45
££ C
(
££C D
)
££D E
)
££E F
.
££F G
RunTest
££G N
(
££N O
$str££O å
)££å ç
;££ç é
(
§§ 
new
§§ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_51a
§§ D
(
§§D E
)
§§E F
)
§§F G
.
§§G H
RunTest
§§H O
(
§§O P
$str§§P é
)§§é è
;§§è ê
(
•• 
new
•• J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_52a
•• D
(
••D E
)
••E F
)
••F G
.
••G H
RunTest
••H O
(
••O P
$str••P é
)••é è
;••è ê
(
¶¶ 
new
¶¶ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_53a
¶¶ D
(
¶¶D E
)
¶¶E F
)
¶¶F G
.
¶¶G H
RunTest
¶¶H O
(
¶¶O P
$str¶¶P é
)¶¶é è
;¶¶è ê
(
ßß 
new
ßß J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_54a
ßß D
(
ßßD E
)
ßßE F
)
ßßF G
.
ßßG H
RunTest
ßßH O
(
ßßO P
$strßßP é
)ßßé è
;ßßè ê
(
®® 
new
®® J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_61a
®® D
(
®®D E
)
®®E F
)
®®F G
.
®®G H
RunTest
®®H O
(
®®O P
$str®®P é
)®®é è
;®®è ê
(
©© 
new
©© J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_66a
©© D
(
©©D E
)
©©E F
)
©©F G
.
©©G H
RunTest
©©H O
(
©©O P
$str©©P é
)©©é è
;©©è ê
(
™™ 
new
™™ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_67a
™™ D
(
™™D E
)
™™E F
)
™™F G
.
™™G H
RunTest
™™H O
(
™™O P
$str™™P é
)™™é è
;™™è ê
(
´´ 
new
´´ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_68a
´´ D
(
´´D E
)
´´E F
)
´´F G
.
´´G H
RunTest
´´H O
(
´´O P
$str´´P é
)´´é è
;´´è ê
(
¨¨ 
new
¨¨ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_71a
¨¨ D
(
¨¨D E
)
¨¨E F
)
¨¨F G
.
¨¨G H
RunTest
¨¨H O
(
¨¨O P
$str¨¨P é
)¨¨é è
;¨¨è ê
(
≠≠ 
new
≠≠ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_72a
≠≠ D
(
≠≠D E
)
≠≠E F
)
≠≠F G
.
≠≠G H
RunTest
≠≠H O
(
≠≠O P
$str≠≠P é
)≠≠é è
;≠≠è ê
(
ÆÆ 
new
ÆÆ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_73a
ÆÆ D
(
ÆÆD E
)
ÆÆE F
)
ÆÆF G
.
ÆÆG H
RunTest
ÆÆH O
(
ÆÆO P
$strÆÆP é
)ÆÆé è
;ÆÆè ê
(
ØØ 
new
ØØ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_74a
ØØ D
(
ØØD E
)
ØØE F
)
ØØF G
.
ØØG H
RunTest
ØØH O
(
ØØO P
$strØØP é
)ØØé è
;ØØè ê
(
∞∞ 
new
∞∞ J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_75a
∞∞ D
(
∞∞D E
)
∞∞E F
)
∞∞F G
.
∞∞G H
RunTest
∞∞H O
(
∞∞O P
$str∞∞P é
)∞∞é è
;∞∞è ê
(
±± 
new
±± J
<CWE197_Numeric_Truncation_Error__int_Listen_tcp_to_short_81a
±± D
(
±±D E
)
±±E F
)
±±F G
.
±±G H
RunTest
±±H O
(
±±O P
$str±±P é
)±±é è
;±±è ê
(
≤≤ 
new
≤≤ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_01
≤≤ A
(
≤≤A B
)
≤≤B C
)
≤≤C D
.
≤≤D E
RunTest
≤≤E L
(
≤≤L M
$str≤≤M à
)≤≤à â
;≤≤â ä
(
≥≥ 
new
≥≥ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_02
≥≥ A
(
≥≥A B
)
≥≥B C
)
≥≥C D
.
≥≥D E
RunTest
≥≥E L
(
≥≥L M
$str≥≥M à
)≥≥à â
;≥≥â ä
(
¥¥ 
new
¥¥ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_03
¥¥ A
(
¥¥A B
)
¥¥B C
)
¥¥C D
.
¥¥D E
RunTest
¥¥E L
(
¥¥L M
$str¥¥M à
)¥¥à â
;¥¥â ä
(
µµ 
new
µµ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_04
µµ A
(
µµA B
)
µµB C
)
µµC D
.
µµD E
RunTest
µµE L
(
µµL M
$strµµM à
)µµà â
;µµâ ä
(
∂∂ 
new
∂∂ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_05
∂∂ A
(
∂∂A B
)
∂∂B C
)
∂∂C D
.
∂∂D E
RunTest
∂∂E L
(
∂∂L M
$str∂∂M à
)∂∂à â
;∂∂â ä
(
∑∑ 
new
∑∑ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_06
∑∑ A
(
∑∑A B
)
∑∑B C
)
∑∑C D
.
∑∑D E
RunTest
∑∑E L
(
∑∑L M
$str∑∑M à
)∑∑à â
;∑∑â ä
(
∏∏ 
new
∏∏ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_07
∏∏ A
(
∏∏A B
)
∏∏B C
)
∏∏C D
.
∏∏D E
RunTest
∏∏E L
(
∏∏L M
$str∏∏M à
)∏∏à â
;∏∏â ä
(
ππ 
new
ππ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_08
ππ A
(
ππA B
)
ππB C
)
ππC D
.
ππD E
RunTest
ππE L
(
ππL M
$strππM à
)ππà â
;ππâ ä
(
∫∫ 
new
∫∫ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_09
∫∫ A
(
∫∫A B
)
∫∫B C
)
∫∫C D
.
∫∫D E
RunTest
∫∫E L
(
∫∫L M
$str∫∫M à
)∫∫à â
;∫∫â ä
(
ªª 
new
ªª G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_10
ªª A
(
ªªA B
)
ªªB C
)
ªªC D
.
ªªD E
RunTest
ªªE L
(
ªªL M
$strªªM à
)ªªà â
;ªªâ ä
(
ºº 
new
ºº G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_11
ºº A
(
ººA B
)
ººB C
)
ººC D
.
ººD E
RunTest
ººE L
(
ººL M
$strººM à
)ººà â
;ººâ ä
(
ΩΩ 
new
ΩΩ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_12
ΩΩ A
(
ΩΩA B
)
ΩΩB C
)
ΩΩC D
.
ΩΩD E
RunTest
ΩΩE L
(
ΩΩL M
$strΩΩM à
)ΩΩà â
;ΩΩâ ä
(
ææ 
new
ææ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_13
ææ A
(
ææA B
)
ææB C
)
ææC D
.
ææD E
RunTest
ææE L
(
ææL M
$strææM à
)ææà â
;ææâ ä
(
øø 
new
øø G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_14
øø A
(
øøA B
)
øøB C
)
øøC D
.
øøD E
RunTest
øøE L
(
øøL M
$strøøM à
)øøà â
;øøâ ä
(
¿¿ 
new
¿¿ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_15
¿¿ A
(
¿¿A B
)
¿¿B C
)
¿¿C D
.
¿¿D E
RunTest
¿¿E L
(
¿¿L M
$str¿¿M à
)¿¿à â
;¿¿â ä
(
¡¡ 
new
¡¡ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_16
¡¡ A
(
¡¡A B
)
¡¡B C
)
¡¡C D
.
¡¡D E
RunTest
¡¡E L
(
¡¡L M
$str¡¡M à
)¡¡à â
;¡¡â ä
(
¬¬ 
new
¬¬ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_17
¬¬ A
(
¬¬A B
)
¬¬B C
)
¬¬C D
.
¬¬D E
RunTest
¬¬E L
(
¬¬L M
$str¬¬M à
)¬¬à â
;¬¬â ä
(
√√ 
new
√√ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_21
√√ A
(
√√A B
)
√√B C
)
√√C D
.
√√D E
RunTest
√√E L
(
√√L M
$str√√M à
)√√à â
;√√â ä
(
ƒƒ 
new
ƒƒ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_22a
ƒƒ B
(
ƒƒB C
)
ƒƒC D
)
ƒƒD E
.
ƒƒE F
RunTest
ƒƒF M
(
ƒƒM N
$strƒƒN ä
)ƒƒä ã
;ƒƒã å
(
≈≈ 
new
≈≈ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_31
≈≈ A
(
≈≈A B
)
≈≈B C
)
≈≈C D
.
≈≈D E
RunTest
≈≈E L
(
≈≈L M
$str≈≈M à
)≈≈à â
;≈≈â ä
(
∆∆ 
new
∆∆ G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_41
∆∆ A
(
∆∆A B
)
∆∆B C
)
∆∆C D
.
∆∆D E
RunTest
∆∆E L
(
∆∆L M
$str∆∆M à
)∆∆à â
;∆∆â ä
(
«« 
new
«« G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_42
«« A
(
««A B
)
««B C
)
««C D
.
««D E
RunTest
««E L
(
««L M
$str««M à
)««à â
;««â ä
(
»» 
new
»» G
9CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_45
»» A
(
»»A B
)
»»B C
)
»»C D
.
»»D E
RunTest
»»E L
(
»»L M
$str»»M à
)»»à â
;»»â ä
(
…… 
new
…… H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_51a
…… B
(
……B C
)
……C D
)
……D E
.
……E F
RunTest
……F M
(
……M N
$str……N ä
)……ä ã
;……ã å
(
   
new
   H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_52a
   B
(
  B C
)
  C D
)
  D E
.
  E F
RunTest
  F M
(
  M N
$str  N ä
)  ä ã
;  ã å
(
ÀÀ 
new
ÀÀ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_53a
ÀÀ B
(
ÀÀB C
)
ÀÀC D
)
ÀÀD E
.
ÀÀE F
RunTest
ÀÀF M
(
ÀÀM N
$strÀÀN ä
)ÀÀä ã
;ÀÀã å
(
ÃÃ 
new
ÃÃ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_54a
ÃÃ B
(
ÃÃB C
)
ÃÃC D
)
ÃÃD E
.
ÃÃE F
RunTest
ÃÃF M
(
ÃÃM N
$strÃÃN ä
)ÃÃä ã
;ÃÃã å
(
ÕÕ 
new
ÕÕ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_61a
ÕÕ B
(
ÕÕB C
)
ÕÕC D
)
ÕÕD E
.
ÕÕE F
RunTest
ÕÕF M
(
ÕÕM N
$strÕÕN ä
)ÕÕä ã
;ÕÕã å
(
ŒŒ 
new
ŒŒ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_66a
ŒŒ B
(
ŒŒB C
)
ŒŒC D
)
ŒŒD E
.
ŒŒE F
RunTest
ŒŒF M
(
ŒŒM N
$strŒŒN ä
)ŒŒä ã
;ŒŒã å
(
œœ 
new
œœ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_67a
œœ B
(
œœB C
)
œœC D
)
œœD E
.
œœE F
RunTest
œœF M
(
œœM N
$strœœN ä
)œœä ã
;œœã å
(
–– 
new
–– H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_68a
–– B
(
––B C
)
––C D
)
––D E
.
––E F
RunTest
––F M
(
––M N
$str––N ä
)––ä ã
;––ã å
(
—— 
new
—— H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_71a
—— B
(
——B C
)
——C D
)
——D E
.
——E F
RunTest
——F M
(
——M N
$str——N ä
)——ä ã
;——ã å
(
““ 
new
““ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_72a
““ B
(
““B C
)
““C D
)
““D E
.
““E F
RunTest
““F M
(
““M N
$str““N ä
)““ä ã
;““ã å
(
”” 
new
”” H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_73a
”” B
(
””B C
)
””C D
)
””D E
.
””E F
RunTest
””F M
(
””M N
$str””N ä
)””ä ã
;””ã å
(
‘‘ 
new
‘‘ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_74a
‘‘ B
(
‘‘B C
)
‘‘C D
)
‘‘D E
.
‘‘E F
RunTest
‘‘F M
(
‘‘M N
$str‘‘N ä
)‘‘ä ã
;‘‘ã å
(
’’ 
new
’’ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_75a
’’ B
(
’’B C
)
’’C D
)
’’D E
.
’’E F
RunTest
’’F M
(
’’M N
$str’’N ä
)’’ä ã
;’’ã å
(
÷÷ 
new
÷÷ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_byte_81a
÷÷ B
(
÷÷B C
)
÷÷C D
)
÷÷D E
.
÷÷E F
RunTest
÷÷F M
(
÷÷M N
$str÷÷N ä
)÷÷ä ã
;÷÷ã å
(
◊◊ 
new
◊◊ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_01
◊◊ B
(
◊◊B C
)
◊◊C D
)
◊◊D E
.
◊◊E F
RunTest
◊◊F M
(
◊◊M N
$str◊◊N ä
)◊◊ä ã
;◊◊ã å
(
ÿÿ 
new
ÿÿ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_02
ÿÿ B
(
ÿÿB C
)
ÿÿC D
)
ÿÿD E
.
ÿÿE F
RunTest
ÿÿF M
(
ÿÿM N
$strÿÿN ä
)ÿÿä ã
;ÿÿã å
(
ŸŸ 
new
ŸŸ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_03
ŸŸ B
(
ŸŸB C
)
ŸŸC D
)
ŸŸD E
.
ŸŸE F
RunTest
ŸŸF M
(
ŸŸM N
$strŸŸN ä
)ŸŸä ã
;ŸŸã å
(
⁄⁄ 
new
⁄⁄ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_04
⁄⁄ B
(
⁄⁄B C
)
⁄⁄C D
)
⁄⁄D E
.
⁄⁄E F
RunTest
⁄⁄F M
(
⁄⁄M N
$str⁄⁄N ä
)⁄⁄ä ã
;⁄⁄ã å
(
€€ 
new
€€ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_05
€€ B
(
€€B C
)
€€C D
)
€€D E
.
€€E F
RunTest
€€F M
(
€€M N
$str€€N ä
)€€ä ã
;€€ã å
(
‹‹ 
new
‹‹ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_06
‹‹ B
(
‹‹B C
)
‹‹C D
)
‹‹D E
.
‹‹E F
RunTest
‹‹F M
(
‹‹M N
$str‹‹N ä
)‹‹ä ã
;‹‹ã å
(
›› 
new
›› H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_07
›› B
(
››B C
)
››C D
)
››D E
.
››E F
RunTest
››F M
(
››M N
$str››N ä
)››ä ã
;››ã å
(
ﬁﬁ 
new
ﬁﬁ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_08
ﬁﬁ B
(
ﬁﬁB C
)
ﬁﬁC D
)
ﬁﬁD E
.
ﬁﬁE F
RunTest
ﬁﬁF M
(
ﬁﬁM N
$strﬁﬁN ä
)ﬁﬁä ã
;ﬁﬁã å
(
ﬂﬂ 
new
ﬂﬂ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_09
ﬂﬂ B
(
ﬂﬂB C
)
ﬂﬂC D
)
ﬂﬂD E
.
ﬂﬂE F
RunTest
ﬂﬂF M
(
ﬂﬂM N
$strﬂﬂN ä
)ﬂﬂä ã
;ﬂﬂã å
(
‡‡ 
new
‡‡ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_10
‡‡ B
(
‡‡B C
)
‡‡C D
)
‡‡D E
.
‡‡E F
RunTest
‡‡F M
(
‡‡M N
$str‡‡N ä
)‡‡ä ã
;‡‡ã å
(
·· 
new
·· H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_11
·· B
(
··B C
)
··C D
)
··D E
.
··E F
RunTest
··F M
(
··M N
$str··N ä
)··ä ã
;··ã å
(
‚‚ 
new
‚‚ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_12
‚‚ B
(
‚‚B C
)
‚‚C D
)
‚‚D E
.
‚‚E F
RunTest
‚‚F M
(
‚‚M N
$str‚‚N ä
)‚‚ä ã
;‚‚ã å
(
„„ 
new
„„ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_13
„„ B
(
„„B C
)
„„C D
)
„„D E
.
„„E F
RunTest
„„F M
(
„„M N
$str„„N ä
)„„ä ã
;„„ã å
(
‰‰ 
new
‰‰ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_14
‰‰ B
(
‰‰B C
)
‰‰C D
)
‰‰D E
.
‰‰E F
RunTest
‰‰F M
(
‰‰M N
$str‰‰N ä
)‰‰ä ã
;‰‰ã å
(
ÂÂ 
new
ÂÂ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_15
ÂÂ B
(
ÂÂB C
)
ÂÂC D
)
ÂÂD E
.
ÂÂE F
RunTest
ÂÂF M
(
ÂÂM N
$strÂÂN ä
)ÂÂä ã
;ÂÂã å
(
ÊÊ 
new
ÊÊ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_16
ÊÊ B
(
ÊÊB C
)
ÊÊC D
)
ÊÊD E
.
ÊÊE F
RunTest
ÊÊF M
(
ÊÊM N
$strÊÊN ä
)ÊÊä ã
;ÊÊã å
(
ÁÁ 
new
ÁÁ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_17
ÁÁ B
(
ÁÁB C
)
ÁÁC D
)
ÁÁD E
.
ÁÁE F
RunTest
ÁÁF M
(
ÁÁM N
$strÁÁN ä
)ÁÁä ã
;ÁÁã å
(
ËË 
new
ËË H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_21
ËË B
(
ËËB C
)
ËËC D
)
ËËD E
.
ËËE F
RunTest
ËËF M
(
ËËM N
$strËËN ä
)ËËä ã
;ËËã å
(
ÈÈ 
new
ÈÈ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_22a
ÈÈ C
(
ÈÈC D
)
ÈÈD E
)
ÈÈE F
.
ÈÈF G
RunTest
ÈÈG N
(
ÈÈN O
$strÈÈO å
)ÈÈå ç
;ÈÈç é
(
ÍÍ 
new
ÍÍ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_31
ÍÍ B
(
ÍÍB C
)
ÍÍC D
)
ÍÍD E
.
ÍÍE F
RunTest
ÍÍF M
(
ÍÍM N
$strÍÍN ä
)ÍÍä ã
;ÍÍã å
(
ÎÎ 
new
ÎÎ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_41
ÎÎ B
(
ÎÎB C
)
ÎÎC D
)
ÎÎD E
.
ÎÎE F
RunTest
ÎÎF M
(
ÎÎM N
$strÎÎN ä
)ÎÎä ã
;ÎÎã å
(
ÏÏ 
new
ÏÏ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_42
ÏÏ B
(
ÏÏB C
)
ÏÏC D
)
ÏÏD E
.
ÏÏE F
RunTest
ÏÏF M
(
ÏÏM N
$strÏÏN ä
)ÏÏä ã
;ÏÏã å
(
ÌÌ 
new
ÌÌ H
:CWE197_Numeric_Truncation_Error__int_NetClient_to_short_45
ÌÌ B
(
ÌÌB C
)
ÌÌC D
)
ÌÌD E
.
ÌÌE F
RunTest
ÌÌF M
(
ÌÌM N
$strÌÌN ä
)ÌÌä ã
;ÌÌã å
(
ÓÓ 
new
ÓÓ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_51a
ÓÓ C
(
ÓÓC D
)
ÓÓD E
)
ÓÓE F
.
ÓÓF G
RunTest
ÓÓG N
(
ÓÓN O
$strÓÓO å
)ÓÓå ç
;ÓÓç é
(
ÔÔ 
new
ÔÔ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_52a
ÔÔ C
(
ÔÔC D
)
ÔÔD E
)
ÔÔE F
.
ÔÔF G
RunTest
ÔÔG N
(
ÔÔN O
$strÔÔO å
)ÔÔå ç
;ÔÔç é
(
 
new
 I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_53a
 C
(
C D
)
D E
)
E F
.
F G
RunTest
G N
(
N O
$strO å
)å ç
;ç é
(
ÒÒ 
new
ÒÒ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_54a
ÒÒ C
(
ÒÒC D
)
ÒÒD E
)
ÒÒE F
.
ÒÒF G
RunTest
ÒÒG N
(
ÒÒN O
$strÒÒO å
)ÒÒå ç
;ÒÒç é
(
ÚÚ 
new
ÚÚ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_61a
ÚÚ C
(
ÚÚC D
)
ÚÚD E
)
ÚÚE F
.
ÚÚF G
RunTest
ÚÚG N
(
ÚÚN O
$strÚÚO å
)ÚÚå ç
;ÚÚç é
(
ÛÛ 
new
ÛÛ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_66a
ÛÛ C
(
ÛÛC D
)
ÛÛD E
)
ÛÛE F
.
ÛÛF G
RunTest
ÛÛG N
(
ÛÛN O
$strÛÛO å
)ÛÛå ç
;ÛÛç é
(
ÙÙ 
new
ÙÙ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_67a
ÙÙ C
(
ÙÙC D
)
ÙÙD E
)
ÙÙE F
.
ÙÙF G
RunTest
ÙÙG N
(
ÙÙN O
$strÙÙO å
)ÙÙå ç
;ÙÙç é
(
ıı 
new
ıı I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_68a
ıı C
(
ııC D
)
ııD E
)
ııE F
.
ııF G
RunTest
ııG N
(
ııN O
$strııO å
)ııå ç
;ııç é
(
ˆˆ 
new
ˆˆ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_71a
ˆˆ C
(
ˆˆC D
)
ˆˆD E
)
ˆˆE F
.
ˆˆF G
RunTest
ˆˆG N
(
ˆˆN O
$strˆˆO å
)ˆˆå ç
;ˆˆç é
(
˜˜ 
new
˜˜ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_72a
˜˜ C
(
˜˜C D
)
˜˜D E
)
˜˜E F
.
˜˜F G
RunTest
˜˜G N
(
˜˜N O
$str˜˜O å
)˜˜å ç
;˜˜ç é
(
¯¯ 
new
¯¯ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_73a
¯¯ C
(
¯¯C D
)
¯¯D E
)
¯¯E F
.
¯¯F G
RunTest
¯¯G N
(
¯¯N O
$str¯¯O å
)¯¯å ç
;¯¯ç é
(
˘˘ 
new
˘˘ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_74a
˘˘ C
(
˘˘C D
)
˘˘D E
)
˘˘E F
.
˘˘F G
RunTest
˘˘G N
(
˘˘N O
$str˘˘O å
)˘˘å ç
;˘˘ç é
(
˙˙ 
new
˙˙ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_75a
˙˙ C
(
˙˙C D
)
˙˙D E
)
˙˙E F
.
˙˙F G
RunTest
˙˙G N
(
˙˙N O
$str˙˙O å
)˙˙å ç
;˙˙ç é
(
˚˚ 
new
˚˚ I
;CWE197_Numeric_Truncation_Error__int_NetClient_to_short_81a
˚˚ C
(
˚˚C D
)
˚˚D E
)
˚˚E F
.
˚˚F G
RunTest
˚˚G N
(
˚˚N O
$str˚˚O å
)˚˚å ç
;˚˚ç é
(
¸¸ 
new
¸¸ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_01
¸¸ >
(
¸¸> ?
)
¸¸? @
)
¸¸@ A
.
¸¸A B
RunTest
¸¸B I
(
¸¸I J
$str¸¸J Ç
)¸¸Ç É
;¸¸É Ñ
(
˝˝ 
new
˝˝ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_02
˝˝ >
(
˝˝> ?
)
˝˝? @
)
˝˝@ A
.
˝˝A B
RunTest
˝˝B I
(
˝˝I J
$str˝˝J Ç
)˝˝Ç É
;˝˝É Ñ
(
˛˛ 
new
˛˛ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_03
˛˛ >
(
˛˛> ?
)
˛˛? @
)
˛˛@ A
.
˛˛A B
RunTest
˛˛B I
(
˛˛I J
$str˛˛J Ç
)˛˛Ç É
;˛˛É Ñ
(
ˇˇ 
new
ˇˇ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_04
ˇˇ >
(
ˇˇ> ?
)
ˇˇ? @
)
ˇˇ@ A
.
ˇˇA B
RunTest
ˇˇB I
(
ˇˇI J
$strˇˇJ Ç
)ˇˇÇ É
;ˇˇÉ Ñ
(
ÄÄ 
new
ÄÄ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_05
ÄÄ >
(
ÄÄ> ?
)
ÄÄ? @
)
ÄÄ@ A
.
ÄÄA B
RunTest
ÄÄB I
(
ÄÄI J
$strÄÄJ Ç
)ÄÄÇ É
;ÄÄÉ Ñ
(
ÅÅ 
new
ÅÅ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_06
ÅÅ >
(
ÅÅ> ?
)
ÅÅ? @
)
ÅÅ@ A
.
ÅÅA B
RunTest
ÅÅB I
(
ÅÅI J
$strÅÅJ Ç
)ÅÅÇ É
;ÅÅÉ Ñ
(
ÇÇ 
new
ÇÇ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_07
ÇÇ >
(
ÇÇ> ?
)
ÇÇ? @
)
ÇÇ@ A
.
ÇÇA B
RunTest
ÇÇB I
(
ÇÇI J
$strÇÇJ Ç
)ÇÇÇ É
;ÇÇÉ Ñ
(
ÉÉ 
new
ÉÉ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_08
ÉÉ >
(
ÉÉ> ?
)
ÉÉ? @
)
ÉÉ@ A
.
ÉÉA B
RunTest
ÉÉB I
(
ÉÉI J
$strÉÉJ Ç
)ÉÉÇ É
;ÉÉÉ Ñ
(
ÑÑ 
new
ÑÑ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_09
ÑÑ >
(
ÑÑ> ?
)
ÑÑ? @
)
ÑÑ@ A
.
ÑÑA B
RunTest
ÑÑB I
(
ÑÑI J
$strÑÑJ Ç
)ÑÑÇ É
;ÑÑÉ Ñ
(
ÖÖ 
new
ÖÖ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_10
ÖÖ >
(
ÖÖ> ?
)
ÖÖ? @
)
ÖÖ@ A
.
ÖÖA B
RunTest
ÖÖB I
(
ÖÖI J
$strÖÖJ Ç
)ÖÖÇ É
;ÖÖÉ Ñ
(
ÜÜ 
new
ÜÜ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_11
ÜÜ >
(
ÜÜ> ?
)
ÜÜ? @
)
ÜÜ@ A
.
ÜÜA B
RunTest
ÜÜB I
(
ÜÜI J
$strÜÜJ Ç
)ÜÜÇ É
;ÜÜÉ Ñ
(
áá 
new
áá D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_12
áá >
(
áá> ?
)
áá? @
)
áá@ A
.
ááA B
RunTest
ááB I
(
ááI J
$strááJ Ç
)ááÇ É
;ááÉ Ñ
(
àà 
new
àà D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_13
àà >
(
àà> ?
)
àà? @
)
àà@ A
.
ààA B
RunTest
ààB I
(
ààI J
$strààJ Ç
)ààÇ É
;ààÉ Ñ
(
ââ 
new
ââ D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_14
ââ >
(
ââ> ?
)
ââ? @
)
ââ@ A
.
ââA B
RunTest
ââB I
(
ââI J
$strââJ Ç
)ââÇ É
;ââÉ Ñ
(
ää 
new
ää D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_15
ää >
(
ää> ?
)
ää? @
)
ää@ A
.
ääA B
RunTest
ääB I
(
ääI J
$strääJ Ç
)ääÇ É
;ääÉ Ñ
(
ãã 
new
ãã D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_16
ãã >
(
ãã> ?
)
ãã? @
)
ãã@ A
.
ããA B
RunTest
ããB I
(
ããI J
$strããJ Ç
)ããÇ É
;ããÉ Ñ
(
åå 
new
åå D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_17
åå >
(
åå> ?
)
åå? @
)
åå@ A
.
ååA B
RunTest
ååB I
(
ååI J
$strååJ Ç
)ååÇ É
;ååÉ Ñ
(
çç 
new
çç D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_21
çç >
(
çç> ?
)
çç? @
)
çç@ A
.
ççA B
RunTest
ççB I
(
ççI J
$strççJ Ç
)ççÇ É
;ççÉ Ñ
(
éé 
new
éé E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_22a
éé ?
(
éé? @
)
éé@ A
)
ééA B
.
ééB C
RunTest
ééC J
(
ééJ K
$strééK Ñ
)ééÑ Ö
;ééÖ Ü
(
èè 
new
èè D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_31
èè >
(
èè> ?
)
èè? @
)
èè@ A
.
èèA B
RunTest
èèB I
(
èèI J
$strèèJ Ç
)èèÇ É
;èèÉ Ñ
(
êê 
new
êê D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_41
êê >
(
êê> ?
)
êê? @
)
êê@ A
.
êêA B
RunTest
êêB I
(
êêI J
$strêêJ Ç
)êêÇ É
;êêÉ Ñ
(
ëë 
new
ëë D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_42
ëë >
(
ëë> ?
)
ëë? @
)
ëë@ A
.
ëëA B
RunTest
ëëB I
(
ëëI J
$strëëJ Ç
)ëëÇ É
;ëëÉ Ñ
(
íí 
new
íí D
6CWE197_Numeric_Truncation_Error__int_Random_to_byte_45
íí >
(
íí> ?
)
íí? @
)
íí@ A
.
ííA B
RunTest
ííB I
(
ííI J
$strííJ Ç
)ííÇ É
;ííÉ Ñ
(
ìì 
new
ìì E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_51a
ìì ?
(
ìì? @
)
ìì@ A
)
ììA B
.
ììB C
RunTest
ììC J
(
ììJ K
$strììK Ñ
)ììÑ Ö
;ììÖ Ü
(
îî 
new
îî E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_52a
îî ?
(
îî? @
)
îî@ A
)
îîA B
.
îîB C
RunTest
îîC J
(
îîJ K
$strîîK Ñ
)îîÑ Ö
;îîÖ Ü
(
ïï 
new
ïï E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_53a
ïï ?
(
ïï? @
)
ïï@ A
)
ïïA B
.
ïïB C
RunTest
ïïC J
(
ïïJ K
$strïïK Ñ
)ïïÑ Ö
;ïïÖ Ü
(
ññ 
new
ññ E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_54a
ññ ?
(
ññ? @
)
ññ@ A
)
ññA B
.
ññB C
RunTest
ññC J
(
ññJ K
$strññK Ñ
)ññÑ Ö
;ññÖ Ü
(
óó 
new
óó E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_61a
óó ?
(
óó? @
)
óó@ A
)
óóA B
.
óóB C
RunTest
óóC J
(
óóJ K
$stróóK Ñ
)óóÑ Ö
;óóÖ Ü
(
òò 
new
òò E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_66a
òò ?
(
òò? @
)
òò@ A
)
òòA B
.
òòB C
RunTest
òòC J
(
òòJ K
$stròòK Ñ
)òòÑ Ö
;òòÖ Ü
(
ôô 
new
ôô E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_67a
ôô ?
(
ôô? @
)
ôô@ A
)
ôôA B
.
ôôB C
RunTest
ôôC J
(
ôôJ K
$strôôK Ñ
)ôôÑ Ö
;ôôÖ Ü
(
öö 
new
öö E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_68a
öö ?
(
öö? @
)
öö@ A
)
ööA B
.
ööB C
RunTest
ööC J
(
ööJ K
$strööK Ñ
)ööÑ Ö
;ööÖ Ü
(
õõ 
new
õõ E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_71a
õõ ?
(
õõ? @
)
õõ@ A
)
õõA B
.
õõB C
RunTest
õõC J
(
õõJ K
$strõõK Ñ
)õõÑ Ö
;õõÖ Ü
(
úú 
new
úú E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_72a
úú ?
(
úú? @
)
úú@ A
)
úúA B
.
úúB C
RunTest
úúC J
(
úúJ K
$strúúK Ñ
)úúÑ Ö
;úúÖ Ü
(
ùù 
new
ùù E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_73a
ùù ?
(
ùù? @
)
ùù@ A
)
ùùA B
.
ùùB C
RunTest
ùùC J
(
ùùJ K
$strùùK Ñ
)ùùÑ Ö
;ùùÖ Ü
(
ûû 
new
ûû E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_74a
ûû ?
(
ûû? @
)
ûû@ A
)
ûûA B
.
ûûB C
RunTest
ûûC J
(
ûûJ K
$strûûK Ñ
)ûûÑ Ö
;ûûÖ Ü
(
üü 
new
üü E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_75a
üü ?
(
üü? @
)
üü@ A
)
üüA B
.
üüB C
RunTest
üüC J
(
üüJ K
$strüüK Ñ
)üüÑ Ö
;üüÖ Ü
(
†† 
new
†† E
7CWE197_Numeric_Truncation_Error__int_Random_to_byte_81a
†† ?
(
††? @
)
††@ A
)
††A B
.
††B C
RunTest
††C J
(
††J K
$str††K Ñ
)††Ñ Ö
;††Ö Ü
}
¢¢ 
private
§§ 
static
§§	 
void
§§ 
RunTestCWE2
§§  
(
§§  !
)
§§! "
{
§§# $
}
®® 
private
™™ 
static
™™	 
void
™™ 
RunTestCWE3
™™  
(
™™  !
)
™™! "
{
™™# $
}
ÆÆ 
private
∞∞ 
static
∞∞	 
void
∞∞ 
RunTestCWE4
∞∞  
(
∞∞  !
)
∞∞! "
{
∞∞# $
}
¥¥ 
private
∂∂ 
static
∂∂	 
void
∂∂ 
RunTestCWE5
∂∂  
(
∂∂  !
)
∂∂! "
{
∂∂# $
}
∫∫ 
private
ºº 
static
ºº	 
void
ºº 
RunTestCWE6
ºº  
(
ºº  !
)
ºº! "
{
ºº# $
}
¿¿ 
private
¬¬ 
static
¬¬	 
void
¬¬ 
RunTestCWE7
¬¬  
(
¬¬  !
)
¬¬! "
{
¬¬# $
}
∆∆ 
private
»» 
static
»»	 
void
»» 
RunTestCWE8
»»  
(
»»  !
)
»»! "
{
»»# $
}
ÃÃ 
private
ŒŒ 
static
ŒŒ	 
void
ŒŒ 
RunTestCWE9
ŒŒ  
(
ŒŒ  !
)
ŒŒ! "
{
ŒŒ# $
}
““ 
}”” 
}‘‘ ∆
öC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE197_Numeric_Truncation_Error\s06\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str >
)> ?
]? @
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str @
)@ A
]A B
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *