ù
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_01.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_01 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
resp 
. 
Write 
( 
$str a
)a b
;b c
resp 
. 
Write 
( 
$str `
)` a
;a b
resp 
. 
Write 
( 
$str \
)\ ]
;] ^
resp 
. 
Write 
( 
$str Y
)Y Z
;Z [
}   
public## 

override## 
void## 
Good## 
(## 
HttpRequest## )
req##* -
,##- .
HttpResponse##/ ;
resp##< @
)##@ A
{$$ 
Good1%% 
(%% 
req%% 
,%% 
resp%% 
)%% 
;%% 
}&& 
private(( 
void(( 
Good1(( 
((( 
HttpRequest(( "
req((# &
,((& '
HttpResponse((( 4
resp((5 9
)((9 :
{)) 
resp** 
.** 
Write** 
(** 
$str** b
)**b c
;**c d
resp++ 
.++ 
Write++ 
(++ 
$str++ `
)++` a
;++a b
resp,, 
.,, 
Write,, 
(,, 
$str,, \
),,\ ]
;,,] ^
resp-- 
.-- 
Write-- 
(-- 
$str-- Z
)--Z [
;--[ \
}.. 
}00 
}11 ˆ
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_02.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_02 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
true 
) 
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
if)) 

()) 
false)) 
))) 
{** 	
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, /
),,/ 0
;,,0 1
}-- 	
else.. 
{// 	
resp00 
.00 
Write00 
(00 
$str00 f
)00f g
;00g h
resp11 
.11 
Write11 
(11 
$str11 d
)11d e
;11e f
resp22 
.22 
Write22 
(22 
$str22 `
)22` a
;22a b
resp33 
.33 
Write33 
(33 
$str33 ^
)33^ _
;33_ `
}44 	
}55 
private88 
void88 
Good288 
(88 
HttpRequest88 "
req88# &
,88& '
HttpResponse88( 4
resp885 9
)889 :
{99 
if:: 

(:: 
true:: 
):: 
{;; 	
resp<< 
.<< 
Write<< 
(<< 
$str<< f
)<<f g
;<<g h
resp== 
.== 
Write== 
(== 
$str== d
)==d e
;==e f
resp>> 
.>> 
Write>> 
(>> 
$str>> `
)>>` a
;>>a b
resp?? 
.?? 
Write?? 
(?? 
$str?? ^
)??^ _
;??_ `
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
Good1EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
Good2FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
}II 
}JJ €
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_03.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_03 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
$num 
== 
$num 
) 
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
if)) 

()) 
$num)) 
!=)) 
$num)) 
))) 
{** 	
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, /
),,/ 0
;,,0 1
}-- 	
else.. 
{// 	
resp00 
.00 
Write00 
(00 
$str00 f
)00f g
;00g h
resp11 
.11 
Write11 
(11 
$str11 d
)11d e
;11e f
resp22 
.22 
Write22 
(22 
$str22 `
)22` a
;22a b
resp33 
.33 
Write33 
(33 
$str33 ^
)33^ _
;33_ `
}44 	
}55 
private88 
void88 
Good288 
(88 
HttpRequest88 "
req88# &
,88& '
HttpResponse88( 4
resp885 9
)889 :
{99 
if:: 

(:: 
$num:: 
==:: 
$num:: 
):: 
{;; 	
resp<< 
.<< 
Write<< 
(<< 
$str<< f
)<<f g
;<<g h
resp== 
.== 
Write== 
(== 
$str== d
)==d e
;==e f
resp>> 
.>> 
Write>> 
(>> 
$str>> `
)>>` a
;>>a b
resp?? 
.?? 
Write?? 
(?? 
$str?? ^
)??^ _
;??_ `
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
Good1EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
Good2FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
}II 
}JJ ∂
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_04.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_04 5
:6 7
AbstractTestCaseWeb8 K
{ 
private 
const 
bool 
PRIVATE_CONST_TRUE )
=* +
true, 0
;0 1
private 
const 
bool 
PRIVATE_CONST_FALSE *
=+ ,
false- 2
;2 3
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
if"" 

("" 
PRIVATE_CONST_TRUE"" 
)"" 
{## 	
resp$$ 
.$$ 
Write$$ 
($$ 
$str$$ e
)$$e f
;$$f g
resp%% 
.%% 
Write%% 
(%% 
$str%% d
)%%d e
;%%e f
resp&& 
.&& 
Write&& 
(&& 
$str&& `
)&&` a
;&&a b
resp'' 
.'' 
Write'' 
('' 
$str'' ]
)''] ^
;''^ _
}(( 	
})) 
private-- 
void-- 
Good1-- 
(-- 
HttpRequest-- "
req--# &
,--& '
HttpResponse--( 4
resp--5 9
)--9 :
{.. 
if// 

(// 
PRIVATE_CONST_FALSE// 
)//  
{00 	
IO22 
.22 
	WriteLine22 
(22 
$str22 /
)22/ 0
;220 1
}33 	
else44 
{55 	
resp66 
.66 
Write66 
(66 
$str66 f
)66f g
;66g h
resp77 
.77 
Write77 
(77 
$str77 d
)77d e
;77e f
resp88 
.88 
Write88 
(88 
$str88 `
)88` a
;88a b
resp99 
.99 
Write99 
(99 
$str99 ^
)99^ _
;99_ `
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
HttpRequest>> "
req>># &
,>>& '
HttpResponse>>( 4
resp>>5 9
)>>9 :
{?? 
if@@ 

(@@ 
PRIVATE_CONST_TRUE@@ 
)@@ 
{AA 	
respBB 
.BB 
WriteBB 
(BB 
$strBB f
)BBf g
;BBg h
respCC 
.CC 
WriteCC 
(CC 
$strCC d
)CCd e
;CCe f
respDD 
.DD 
WriteDD 
(DD 
$strDD `
)DD` a
;DDa b
respEE 
.EE 
WriteEE 
(EE 
$strEE ^
)EE^ _
;EE_ `
}FF 	
}GG 
publicII 

overrideII 
voidII 
GoodII 
(II 
HttpRequestII )
reqII* -
,II- .
HttpResponseII/ ;
respII< @
)II@ A
{JJ 
Good1KK 
(KK 
reqKK 
,KK 
respKK 
)KK 
;KK 
Good2LL 
(LL 
reqLL 
,LL 
respLL 
)LL 
;LL 
}MM 
}OO 
}PP Ì
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_05.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_05 5
:6 7
AbstractTestCaseWeb8 K
{ 
private 
bool 
privateTrue 
= 
true #
;# $
private 
bool 
privateFalse 
= 
false  %
;% &
public   

override   
void   
Bad   
(   
HttpRequest   (
req  ) ,
,  , -
HttpResponse  . :
resp  ; ?
)  ? @
{!! 
if"" 

("" 
privateTrue"" 
)"" 
{## 	
resp$$ 
.$$ 
Write$$ 
($$ 
$str$$ e
)$$e f
;$$f g
resp%% 
.%% 
Write%% 
(%% 
$str%% d
)%%d e
;%%e f
resp&& 
.&& 
Write&& 
(&& 
$str&& `
)&&` a
;&&a b
resp'' 
.'' 
Write'' 
('' 
$str'' ]
)''] ^
;''^ _
}(( 	
})) 
private-- 
void-- 
Good1-- 
(-- 
HttpRequest-- "
req--# &
,--& '
HttpResponse--( 4
resp--5 9
)--9 :
{.. 
if// 

(// 
privateFalse// 
)// 
{00 	
IO22 
.22 
	WriteLine22 
(22 
$str22 /
)22/ 0
;220 1
}33 	
else44 
{55 	
resp66 
.66 
Write66 
(66 
$str66 f
)66f g
;66g h
resp77 
.77 
Write77 
(77 
$str77 d
)77d e
;77e f
resp88 
.88 
Write88 
(88 
$str88 `
)88` a
;88a b
resp99 
.99 
Write99 
(99 
$str99 ^
)99^ _
;99_ `
}:: 	
};; 
private>> 
void>> 
Good2>> 
(>> 
HttpRequest>> "
req>># &
,>>& '
HttpResponse>>( 4
resp>>5 9
)>>9 :
{?? 
if@@ 

(@@ 
privateTrue@@ 
)@@ 
{AA 	
respBB 
.BB 
WriteBB 
(BB 
$strBB f
)BBf g
;BBg h
respCC 
.CC 
WriteCC 
(CC 
$strCC d
)CCd e
;CCe f
respDD 
.DD 
WriteDD 
(DD 
$strDD `
)DD` a
;DDa b
respEE 
.EE 
WriteEE 
(EE 
$strEE ^
)EE^ _
;EE_ `
}FF 	
}GG 
publicII 

overrideII 
voidII 
GoodII 
(II 
HttpRequestII )
reqII* -
,II- .
HttpResponseII/ ;
respII< @
)II@ A
{JJ 
Good1KK 
(KK 
reqKK 
,KK 
respKK 
)KK 
;KK 
Good2LL 
(LL 
reqLL 
,LL 
respLL 
)LL 
;LL 
}MM 
}OO 
}PP é
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_06.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_06 5
:6 7
AbstractTestCaseWeb8 K
{ 
private 
const 
int 
PRIVATE_CONST_FIVE (
=) *
$num+ ,
;, -
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
if!! 

(!! 
PRIVATE_CONST_FIVE!! 
==!! !
$num!!" #
)!!# $
{"" 	
resp## 
.## 
Write## 
(## 
$str## e
)##e f
;##f g
resp$$ 
.$$ 
Write$$ 
($$ 
$str$$ d
)$$d e
;$$e f
resp%% 
.%% 
Write%% 
(%% 
$str%% `
)%%` a
;%%a b
resp&& 
.&& 
Write&& 
(&& 
$str&& ]
)&&] ^
;&&^ _
}'' 	
}(( 
private,, 
void,, 
Good1,, 
(,, 
HttpRequest,, "
req,,# &
,,,& '
HttpResponse,,( 4
resp,,5 9
),,9 :
{-- 
if.. 

(.. 
PRIVATE_CONST_FIVE.. 
!=.. !
$num.." #
)..# $
{// 	
IO11 
.11 
	WriteLine11 
(11 
$str11 /
)11/ 0
;110 1
}22 	
else33 
{44 	
resp55 
.55 
Write55 
(55 
$str55 f
)55f g
;55g h
resp66 
.66 
Write66 
(66 
$str66 d
)66d e
;66e f
resp77 
.77 
Write77 
(77 
$str77 `
)77` a
;77a b
resp88 
.88 
Write88 
(88 
$str88 ^
)88^ _
;88_ `
}99 	
}:: 
private== 
void== 
Good2== 
(== 
HttpRequest== "
req==# &
,==& '
HttpResponse==( 4
resp==5 9
)==9 :
{>> 
if?? 

(?? 
PRIVATE_CONST_FIVE?? 
==?? !
$num??" #
)??# $
{@@ 	
respAA 
.AA 
WriteAA 
(AA 
$strAA f
)AAf g
;AAg h
respBB 
.BB 
WriteBB 
(BB 
$strBB d
)BBd e
;BBe f
respCC 
.CC 
WriteCC 
(CC 
$strCC `
)CC` a
;CCa b
respDD 
.DD 
WriteDD 
(DD 
$strDD ^
)DD^ _
;DD_ `
}EE 	
}FF 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
HttpRequestHH )
reqHH* -
,HH- .
HttpResponseHH/ ;
respHH< @
)HH@ A
{II 
Good1JJ 
(JJ 
reqJJ 
,JJ 
respJJ 
)JJ 
;JJ 
Good2KK 
(KK 
reqKK 
,KK 
respKK 
)KK 
;KK 
}LL 
}NN 
}OO ﬂ
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_07.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_07 5
:6 7
AbstractTestCaseWeb8 K
{ 
private 
int 
privateFive 
= 
$num 
;  
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{   
if!! 

(!! 
privateFive!! 
==!! 
$num!! 
)!! 
{"" 	
resp## 
.## 
Write## 
(## 
$str## e
)##e f
;##f g
resp$$ 
.$$ 
Write$$ 
($$ 
$str$$ d
)$$d e
;$$e f
resp%% 
.%% 
Write%% 
(%% 
$str%% `
)%%` a
;%%a b
resp&& 
.&& 
Write&& 
(&& 
$str&& ]
)&&] ^
;&&^ _
}'' 	
}(( 
private,, 
void,, 
Good1,, 
(,, 
HttpRequest,, "
req,,# &
,,,& '
HttpResponse,,( 4
resp,,5 9
),,9 :
{-- 
if.. 

(.. 
privateFive.. 
!=.. 
$num.. 
).. 
{// 	
IO11 
.11 
	WriteLine11 
(11 
$str11 /
)11/ 0
;110 1
}22 	
else33 
{44 	
resp55 
.55 
Write55 
(55 
$str55 f
)55f g
;55g h
resp66 
.66 
Write66 
(66 
$str66 d
)66d e
;66e f
resp77 
.77 
Write77 
(77 
$str77 `
)77` a
;77a b
resp88 
.88 
Write88 
(88 
$str88 ^
)88^ _
;88_ `
}99 	
}:: 
private== 
void== 
Good2== 
(== 
HttpRequest== "
req==# &
,==& '
HttpResponse==( 4
resp==5 9
)==9 :
{>> 
if?? 

(?? 
privateFive?? 
==?? 
$num?? 
)?? 
{@@ 	
respAA 
.AA 
WriteAA 
(AA 
$strAA f
)AAf g
;AAg h
respBB 
.BB 
WriteBB 
(BB 
$strBB d
)BBd e
;BBe f
respCC 
.CC 
WriteCC 
(CC 
$strCC `
)CC` a
;CCa b
respDD 
.DD 
WriteDD 
(DD 
$strDD ^
)DD^ _
;DD_ `
}EE 	
}FF 
publicHH 

overrideHH 
voidHH 
GoodHH 
(HH 
HttpRequestHH )
reqHH* -
,HH- .
HttpResponseHH/ ;
respHH< @
)HH@ A
{II 
Good1JJ 
(JJ 
reqJJ 
,JJ 
respJJ 
)JJ 
;JJ 
Good2KK 
(KK 
reqKK 
,KK 
respKK 
)KK 
;KK 
}LL 
}NN 
}OO î
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_08.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_08 5
:6 7
AbstractTestCaseWeb8 K
{ 
private 
static 
bool 
PrivateReturnsTrue *
(* +
)+ ,
{ 
return 
true 
; 
}   
private"" 
static"" 
bool"" 
PrivateReturnsFalse"" +
(""+ ,
)"", -
{## 
return$$ 
false$$ 
;$$ 
}%% 
public'' 

override'' 
void'' 
Bad'' 
('' 
HttpRequest'' (
req'') ,
,'', -
HttpResponse''. :
resp''; ?
)''? @
{(( 
if)) 

()) 
PrivateReturnsTrue)) 
()) 
)))  
)))  !
{** 	
resp++ 
.++ 
Write++ 
(++ 
$str++ e
)++e f
;++f g
resp,, 
.,, 
Write,, 
(,, 
$str,, d
),,d e
;,,e f
resp-- 
.-- 
Write-- 
(-- 
$str-- `
)--` a
;--a b
resp.. 
... 
Write.. 
(.. 
$str.. ]
)..] ^
;..^ _
}// 	
}00 
private44 
void44 
Good144 
(44 
HttpRequest44 "
req44# &
,44& '
HttpResponse44( 4
resp445 9
)449 :
{55 
if66 

(66 
PrivateReturnsFalse66 
(66  
)66  !
)66! "
{77 	
IO99 
.99 
	WriteLine99 
(99 
$str99 /
)99/ 0
;990 1
}:: 	
else;; 
{<< 	
resp== 
.== 
Write== 
(== 
$str== f
)==f g
;==g h
resp>> 
.>> 
Write>> 
(>> 
$str>> d
)>>d e
;>>e f
resp?? 
.?? 
Write?? 
(?? 
$str?? `
)??` a
;??a b
resp@@ 
.@@ 
Write@@ 
(@@ 
$str@@ ^
)@@^ _
;@@_ `
}AA 	
}BB 
privateEE 
voidEE 
Good2EE 
(EE 
HttpRequestEE "
reqEE# &
,EE& '
HttpResponseEE( 4
respEE5 9
)EE9 :
{FF 
ifGG 

(GG 
PrivateReturnsTrueGG 
(GG 
)GG  
)GG  !
{HH 	
respII 
.II 
WriteII 
(II 
$strII f
)IIf g
;IIg h
respJJ 
.JJ 
WriteJJ 
(JJ 
$strJJ d
)JJd e
;JJe f
respKK 
.KK 
WriteKK 
(KK 
$strKK `
)KK` a
;KKa b
respLL 
.LL 
WriteLL 
(LL 
$strLL ^
)LL^ _
;LL_ `
}MM 	
}NN 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
HttpRequestPP )
reqPP* -
,PP- .
HttpResponsePP/ ;
respPP< @
)PP@ A
{QQ 
Good1RR 
(RR 
reqRR 
,RR 
respRR 
)RR 
;RR 
Good2SS 
(SS 
reqSS 
,SS 
respSS 
)SS 
;SS 
}TT 
}VV 
}WW É
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_09.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_09 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
IO 
.  
STATIC_READONLY_TRUE #
)# $
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
if)) 

()) 
IO)) 
.)) !
STATIC_READONLY_FALSE)) $
)))$ %
{** 	
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, /
),,/ 0
;,,0 1
}-- 	
else.. 
{// 	
resp00 
.00 
Write00 
(00 
$str00 f
)00f g
;00g h
resp11 
.11 
Write11 
(11 
$str11 d
)11d e
;11e f
resp22 
.22 
Write22 
(22 
$str22 `
)22` a
;22a b
resp33 
.33 
Write33 
(33 
$str33 ^
)33^ _
;33_ `
}44 	
}55 
private88 
void88 
Good288 
(88 
HttpRequest88 "
req88# &
,88& '
HttpResponse88( 4
resp885 9
)889 :
{99 
if:: 

(:: 
IO:: 
.::  
STATIC_READONLY_TRUE:: #
)::# $
{;; 	
resp<< 
.<< 
Write<< 
(<< 
$str<< f
)<<f g
;<<g h
resp== 
.== 
Write== 
(== 
$str== d
)==d e
;==e f
resp>> 
.>> 
Write>> 
(>> 
$str>> `
)>>` a
;>>a b
resp?? 
.?? 
Write?? 
(?? 
$str?? ^
)??^ _
;??_ `
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
Good1EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
Good2FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
}II 
}JJ Â
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_10.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_10 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
IO 
. 

staticTrue 
) 
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
if)) 

()) 
IO)) 
.)) 
staticFalse)) 
))) 
{** 	
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, /
),,/ 0
;,,0 1
}-- 	
else.. 
{// 	
resp00 
.00 
Write00 
(00 
$str00 f
)00f g
;00g h
resp11 
.11 
Write11 
(11 
$str11 d
)11d e
;11e f
resp22 
.22 
Write22 
(22 
$str22 `
)22` a
;22a b
resp33 
.33 
Write33 
(33 
$str33 ^
)33^ _
;33_ `
}44 	
}55 
private88 
void88 
Good288 
(88 
HttpRequest88 "
req88# &
,88& '
HttpResponse88( 4
resp885 9
)889 :
{99 
if:: 

(:: 
IO:: 
.:: 

staticTrue:: 
):: 
{;; 	
resp<< 
.<< 
Write<< 
(<< 
$str<< f
)<<f g
;<<g h
resp== 
.== 
Write== 
(== 
$str== d
)==d e
;==e f
resp>> 
.>> 
Write>> 
(>> 
$str>> `
)>>` a
;>>a b
resp?? 
.?? 
Write?? 
(?? 
$str?? ^
)??^ _
;??_ `
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
Good1EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
Good2FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
}II 
}JJ ‘
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_11.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_11 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
IO 
. 
StaticReturnsTrue  
(  !
)! "
)" #
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
if)) 

()) 
IO)) 
.)) 
StaticReturnsFalse)) !
())! "
)))" #
)))# $
{** 	
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, /
),,/ 0
;,,0 1
}-- 	
else.. 
{// 	
resp00 
.00 
Write00 
(00 
$str00 f
)00f g
;00g h
resp11 
.11 
Write11 
(11 
$str11 d
)11d e
;11e f
resp22 
.22 
Write22 
(22 
$str22 `
)22` a
;22a b
resp33 
.33 
Write33 
(33 
$str33 ^
)33^ _
;33_ `
}44 	
}55 
private88 
void88 
Good288 
(88 
HttpRequest88 "
req88# &
,88& '
HttpResponse88( 4
resp885 9
)889 :
{99 
if:: 

(:: 
IO:: 
.:: 
StaticReturnsTrue::  
(::  !
)::! "
)::" #
{;; 	
resp<< 
.<< 
Write<< 
(<< 
$str<< f
)<<f g
;<<g h
resp== 
.== 
Write== 
(== 
$str== d
)==d e
;==e f
resp>> 
.>> 
Write>> 
(>> 
$str>> `
)>>` a
;>>a b
resp?? 
.?? 
Write?? 
(?? 
$str?? ^
)??^ _
;??_ `
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
Good1EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
Good2FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
}II 
}JJ Û
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_12.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_12 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
IO 
. $
StaticReturnsTrueOrFalse '
(' (
)( )
)) *
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
else## 
{$$ 	
resp%% 
.%% 
Write%% 
(%% 
$str%% f
)%%f g
;%%g h
resp&& 
.&& 
Write&& 
(&& 
$str&& d
)&&d e
;&&e f
resp'' 
.'' 
Write'' 
('' 
$str'' `
)''` a
;''a b
resp(( 
.(( 
Write(( 
((( 
$str(( ^
)((^ _
;((_ `
})) 	
}** 
private.. 
void.. 
Good1.. 
(.. 
HttpRequest.. "
req..# &
,..& '
HttpResponse..( 4
resp..5 9
)..9 :
{// 
if00 

(00 
IO00 
.00 $
StaticReturnsTrueOrFalse00 '
(00' (
)00( )
)00) *
{11 	
resp22 
.22 
Write22 
(22 
$str22 f
)22f g
;22g h
resp33 
.33 
Write33 
(33 
$str33 d
)33d e
;33e f
resp44 
.44 
Write44 
(44 
$str44 `
)44` a
;44a b
resp55 
.55 
Write55 
(55 
$str55 ^
)55^ _
;55_ `
}66 	
else77 
{88 	
resp99 
.99 
Write99 
(99 
$str99 f
)99f g
;99g h
resp:: 
.:: 
Write:: 
(:: 
$str:: d
)::d e
;::e f
resp;; 
.;; 
Write;; 
(;; 
$str;; `
);;` a
;;;a b
resp<< 
.<< 
Write<< 
(<< 
$str<< ^
)<<^ _
;<<_ `
}== 	
}>> 
public@@ 

override@@ 
void@@ 
Good@@ 
(@@ 
HttpRequest@@ )
req@@* -
,@@- .
HttpResponse@@/ ;
resp@@< @
)@@@ A
{AA 
Good1BB 
(BB 
reqBB 
,BB 
respBB 
)BB 
;BB 
}CC 
}EE 
}FF Ë
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_13.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_13 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
IO 
.  
STATIC_READONLY_FIVE #
==$ &
$num' (
)( )
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
if)) 

()) 
IO)) 
.))  
STATIC_READONLY_FIVE)) #
!=))$ &
$num))' (
)))( )
{** 	
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, /
),,/ 0
;,,0 1
}-- 	
else.. 
{// 	
resp00 
.00 
Write00 
(00 
$str00 f
)00f g
;00g h
resp11 
.11 
Write11 
(11 
$str11 d
)11d e
;11e f
resp22 
.22 
Write22 
(22 
$str22 `
)22` a
;22a b
resp33 
.33 
Write33 
(33 
$str33 ^
)33^ _
;33_ `
}44 	
}55 
private88 
void88 
Good288 
(88 
HttpRequest88 "
req88# &
,88& '
HttpResponse88( 4
resp885 9
)889 :
{99 
if:: 

(:: 
IO:: 
.::  
STATIC_READONLY_FIVE:: #
==::$ &
$num::' (
)::( )
{;; 	
resp<< 
.<< 
Write<< 
(<< 
$str<< f
)<<f g
;<<g h
resp== 
.== 
Write== 
(== 
$str== d
)==d e
;==e f
resp>> 
.>> 
Write>> 
(>> 
$str>> `
)>>` a
;>>a b
resp?? 
.?? 
Write?? 
(?? 
$str?? ^
)??^ _
;??_ `
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
Good1EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
Good2FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
}II 
}JJ  
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_14.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_14 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
if 

( 
IO 
. 

staticFive 
== 
$num 
) 
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
if)) 

()) 
IO)) 
.)) 

staticFive)) 
!=)) 
$num)) 
))) 
{** 	
IO,, 
.,, 
	WriteLine,, 
(,, 
$str,, /
),,/ 0
;,,0 1
}-- 	
else.. 
{// 	
resp00 
.00 
Write00 
(00 
$str00 f
)00f g
;00g h
resp11 
.11 
Write11 
(11 
$str11 d
)11d e
;11e f
resp22 
.22 
Write22 
(22 
$str22 `
)22` a
;22a b
resp33 
.33 
Write33 
(33 
$str33 ^
)33^ _
;33_ `
}44 	
}55 
private88 
void88 
Good288 
(88 
HttpRequest88 "
req88# &
,88& '
HttpResponse88( 4
resp885 9
)889 :
{99 
if:: 

(:: 
IO:: 
.:: 

staticFive:: 
==:: 
$num:: 
):: 
{;; 	
resp<< 
.<< 
Write<< 
(<< 
$str<< f
)<<f g
;<<g h
resp== 
.== 
Write== 
(== 
$str== d
)==d e
;==e f
resp>> 
.>> 
Write>> 
(>> 
$str>> `
)>>` a
;>>a b
resp?? 
.?? 
Write?? 
(?? 
$str?? ^
)??^ _
;??_ `
}@@ 	
}AA 
publicCC 

overrideCC 
voidCC 
GoodCC 
(CC 
HttpRequestCC )
reqCC* -
,CC- .
HttpResponseCC/ ;
respCC< @
)CC@ A
{DD 
Good1EE 
(EE 
reqEE 
,EE 
respEE 
)EE 
;EE 
Good2FF 
(FF 
reqFF 
,FF 
respFF 
)FF 
;FF 
}GG 
}II 
}JJ å 
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_15.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_15 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
switch 
( 
$num 
) 
{ 	
case 
$num 
: 
resp 
. 
Write 
( 
$str e
)e f
;f g
resp   
.   
Write   
(   
$str   d
)  d e
;  e f
resp!! 
.!! 
Write!! 
(!! 
$str!! `
)!!` a
;!!a b
resp"" 
."" 
Write"" 
("" 
$str"" ]
)""] ^
;""^ _
break## 
;## 
default$$ 
:$$ 
IO&& 
.&& 
	WriteLine&& 
(&& 
$str&& /
)&&/ 0
;&&0 1
break'' 
;'' 
}(( 	
})) 
private-- 
void-- 
Good1-- 
(-- 
HttpRequest-- "
req--# &
,--& '
HttpResponse--( 4
resp--5 9
)--9 :
{.. 
switch// 
(// 
$num// 
)// 
{00 	
case11 
$num11 
:11 
IO33 
.33 
	WriteLine33 
(33 
$str33 /
)33/ 0
;330 1
break44 
;44 
default55 
:55 
resp66 
.66 
Write66 
(66 
$str66 f
)66f g
;66g h
resp77 
.77 
Write77 
(77 
$str77 d
)77d e
;77e f
resp88 
.88 
Write88 
(88 
$str88 `
)88` a
;88a b
resp99 
.99 
Write99 
(99 
$str99 ^
)99^ _
;99_ `
break:: 
;:: 
};; 	
}<< 
private?? 
void?? 
Good2?? 
(?? 
HttpRequest?? "
req??# &
,??& '
HttpResponse??( 4
resp??5 9
)??9 :
{@@ 
switchAA 
(AA 
$numAA 
)AA 
{BB 	
caseCC 
$numCC 
:CC 
respDD 
.DD 
WriteDD 
(DD 
$strDD f
)DDf g
;DDg h
respEE 
.EE 
WriteEE 
(EE 
$strEE d
)EEd e
;EEe f
respFF 
.FF 
WriteFF 
(FF 
$strFF `
)FF` a
;FFa b
respGG 
.GG 
WriteGG 
(GG 
$strGG ^
)GG^ _
;GG_ `
breakHH 
;HH 
defaultII 
:II 
IOKK 
.KK 
	WriteLineKK 
(KK 
$strKK /
)KK/ 0
;KK0 1
breakLL 
;LL 
}MM 	
}NN 
publicPP 

overridePP 
voidPP 
GoodPP 
(PP 
HttpRequestPP )
reqPP* -
,PP- .
HttpResponsePP/ ;
respPP< @
)PP@ A
{QQ 
Good1RR 
(RR 
reqRR 
,RR 
respRR 
)RR 
;RR 
Good2SS 
(SS 
reqSS 
,SS 
respSS 
)SS 
;SS 
}TT 
}VV 
}WW £
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_16.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_16 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
while 
( 
true 
) 
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
break"" 
;"" 
}## 	
}$$ 
private(( 
void(( 
Good1(( 
((( 
HttpRequest(( "
req((# &
,((& '
HttpResponse((( 4
resp((5 9
)((9 :
{)) 
while** 
(** 
true** 
)** 
{++ 	
resp,, 
.,, 
Write,, 
(,, 
$str,, f
),,f g
;,,g h
resp-- 
.-- 
Write-- 
(-- 
$str-- d
)--d e
;--e f
resp.. 
... 
Write.. 
(.. 
$str.. `
)..` a
;..a b
resp// 
.// 
Write// 
(// 
$str// ^
)//^ _
;//_ `
break00 
;00 
}11 	
}22 
public44 

override44 
void44 
Good44 
(44 
HttpRequest44 )
req44* -
,44- .
HttpResponse44/ ;
resp44< @
)44@ A
{55 
Good166 
(66 
req66 
,66 
resp66 
)66 
;66 
}77 
}99 
}:: ì
∂C:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\CWE598_Information_Exposure_QueryString__Web_17.cs
	namespace 	
	testcases
 
. 3
'CWE598_Information_Exposure_QueryString ;
{ 
class ;
/CWE598_Information_Exposure_QueryString__Web_17 5
:6 7
AbstractTestCaseWeb8 K
{ 
public 

override 
void 
Bad 
( 
HttpRequest (
req) ,
,, -
HttpResponse. :
resp; ?
)? @
{ 
for 
( 
int 
j 
= 
$num 
; 
j 
< 
$num 
; 
j 
++ !
)! "
{ 	
resp 
. 
Write 
( 
$str e
)e f
;f g
resp 
. 
Write 
( 
$str d
)d e
;e f
resp   
.   
Write   
(   
$str   `
)  ` a
;  a b
resp!! 
.!! 
Write!! 
(!! 
$str!! ]
)!!] ^
;!!^ _
}"" 	
}## 
private'' 
void'' 
Good1'' 
('' 
HttpRequest'' "
req''# &
,''& '
HttpResponse''( 4
resp''5 9
)''9 :
{(( 
for)) 
()) 
int)) 
k)) 
=)) 
$num)) 
;)) 
k)) 
<)) 
$num)) 
;)) 
k)) 
++)) !
)))! "
{** 	
resp++ 
.++ 
Write++ 
(++ 
$str++ f
)++f g
;++g h
resp,, 
.,, 
Write,, 
(,, 
$str,, d
),,d e
;,,e f
resp-- 
.-- 
Write-- 
(-- 
$str-- `
)--` a
;--a b
resp.. 
... 
Write.. 
(.. 
$str.. ^
)..^ _
;.._ `
}// 	
}00 
public22 

override22 
void22 
Good22 
(22 
HttpRequest22 )
req22* -
,22- .
HttpResponse22/ ;
resp22< @
)22@ A
{33 
Good144 
(44 
req44 
,44 
resp44 
)44 
;44 
}55 
}77 
}88 Å)
éC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\Program.cs
	namespace		 	
	testcases		
 
.		 3
'CWE598_Information_Exposure_QueryString		 ;
{

 
class 
Program 
{ 
static 
void	 
Main 
( 
string 
[ 
] 
args  
)  !
{" #
if 
( 
args 

.
 
Any 
( 
) 
) 
{ 
if 
( 
args 
[ 
$num 
] 
. 
Equals 
( 
$str 
, 
StringComparison ,
., -
OrdinalIgnoreCase- >
)> ?
||@ B
args 
[ 
$num 
] 
. 
Equals !
(! "
$str" *
,* +
StringComparison, <
.< =
OrdinalIgnoreCase= N
)N O
)O P
{Q R
Console 
. 
	WriteLine 
( 
$str R
+S T
$str b
)b c
;c d
System 
. 
Environment 
. 
Exit 
( 
$num 
) 
;  
} 
foreach"" 
("" 
string"" 
	className"" 
in""  
args""! %
)""% &
{""' (
try$$ 
{$$	 

Type** 

myClass** 
=** 
Type** 
.** 
GetType** !
(**! "
	className**" +
)**+ ,
;**, -
object++ 
myObject++ 
=++ 
	Activator++ !
.++! "
CreateInstance++" 0
(++0 1
myClass++1 8
)++8 9
;++9 :
myClass,, 
.,, 
InvokeMember,, 
(,, 
$str,, $
,,,$ %
BindingFlags-- 
.-- 
InvokeMethod--  
|--! "
BindingFlags--# /
.--/ 0
Instance--0 8
|--9 :
BindingFlags--; G
.--G H
Public--H N
,--N O
null.. 
,.. 
myObject// 
,// 
new00 

object00 
[00 
]00 
{00 
	className00 
}00  !
)00! "
;00" #
}22 
catch22 
(22 
	Exception22 
ex22 
)22 
{22 
Console44 
.44 
	WriteLine44 
(44 
$str44 7
+448 9
	className44: C
)44C D
;44D E
Console55 
.55 
	WriteLine55 
(55 
ex55 
.55 

StackTrace55 %
)55% &
;55& '
}77 
Console99 
.99 
	WriteLine99 
(99 
$str99 
)99 
;99 
};; 
}== 
else== 	
{==
 
RunTestCWE1CC 
(CC 
)CC 
;CC 
RunTestCWE2DD 
(DD 
)DD 
;DD 
RunTestCWE3EE 
(EE 
)EE 
;EE 
RunTestCWE4FF 
(FF 
)FF 
;FF 
RunTestCWE5GG 
(GG 
)GG 
;GG 
RunTestCWE6HH 
(HH 
)HH 
;HH 
RunTestCWE7II 
(II 
)II 
;II 
RunTestCWE8JJ 
(JJ 
)JJ 
;JJ 
RunTestCWE9KK 
(KK 
)KK 
;KK 
}LL 
}MM 
privateOO 
staticOO	 
voidOO 
RunTestCWE1OO  
(OO  !
)OO! "
{OO# $
}SS 
privateUU 
staticUU	 
voidUU 
RunTestCWE2UU  
(UU  !
)UU! "
{UU# $
}YY 
private[[ 
static[[	 
void[[ 
RunTestCWE3[[  
([[  !
)[[! "
{[[# $
}__ 
privateaa 
staticaa	 
voidaa 
RunTestCWE4aa  
(aa  !
)aa! "
{aa# $
}ee 
privategg 
staticgg	 
voidgg 
RunTestCWE5gg  
(gg  !
)gg! "
{gg# $
}kk 
privatemm 
staticmm	 
voidmm 
RunTestCWE6mm  
(mm  !
)mm! "
{mm# $
}qq 
privatess 
staticss	 
voidss 
RunTestCWE7ss  
(ss  !
)ss! "
{ss# $
}ww 
privateyy 
staticyy	 
voidyy 
RunTestCWE8yy  
(yy  !
)yy! "
{yy# $
}}} 
private 
static	 
void 
RunTestCWE9  
(  !
)! "
{# $
}
ÉÉ 
}ÑÑ 
}ÖÖ  
ûC:\Users\CyberDiver\Documents\SAST Benchmarking\Juliet_Test_Suite_v1.3_for_C#\src\testcases\CWE598_Information_Exposure_QueryString\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str B
)B C
]C D
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str D
)D E
]E F
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *